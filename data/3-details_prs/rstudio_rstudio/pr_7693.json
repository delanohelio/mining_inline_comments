{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NTkxNjc1", "number": 7693, "title": "Chunk grading", "bodyText": "Intent\nProvide a way to \"grade\" chunk code.\nApproach\nAdd two new calls to rstudioapi to register and unregister chunk callback functions. These are functions that return a list of html output that is displayed directly under the chunk output. The callback functions are given the chunk's label and the code that was ran to aid in any grading or processing.\nI added logic to onChunkExecCompleted to run all callback functions that have been registered everytime chunk code has ran. Each callback can returns nothing or HTML code which is passed to the backend with the ChunkOutputFinished client event.\nWhen the frontend receives this data it adds the HTML output to a new IFrame displayed under any existing output.\nThe original specs can be seen in 1.1 here: https://docs.google.com/document/d/1iJhyoEJQY4ssvY69bu36fJY8T_02KAE5MJXw9t-USQc/edit#\nRelated RP in rstudioapi is here: rstudio/rstudioapi#193\nQA Notes\nThis feature requires two new rstudioapi calls so the most up to date version should be loaded from github: remotes::install_github(\"rstudio/rstudioapi\").\nYou will need to create and register a chunk callback function. I've included the one I've been using below. You'll then need to register the function through the API rstudioapi::registerChunkCallback(mycallback).\nOnce a callback is registered, executing any chunk will run the callback function. The easiest way to see this is to open a new R notebook and execute the chunks in the provided template. Using the callback below will look like this:\n\nmycallback <- function(name, chunkCode) {\n  template <- \"<div id=\\\"abc123\\\">\\n  <div class=\\\"callbackActions\\\">\\n\\n  </div>\\n  <div class=\\\"callbackResult\\\">\\n\\n  </div>\\n</div>\\n\\n<style>\\n.callbackSuccess {\\n  background-color: #ACA;\\n}\\n\\n.callbackFailure {\\n  background-color: #CAA;\\n}\\n</style>\\n<script>\\n  function handle(name, chunkCode, result){\\n\\n    var divID = \\\"abc123\\\"; // A random value generated in the R callback\\n    var el = document.querySelectorAll('#' + divID)[0];\\n    var resultsEl = el.querySelectorAll('.callbackResult')[0];\\n    var actionsEl = el.querySelectorAll('.callbackActions')[0];\\n\\n    window.doGrade = function(url){\\n      var request = new XMLHttpRequest();\\n      request.open('POST', url, true); // Simulate a happy response\\n      // request.open('GET', 'http://httpbin.org/post', true); // Simulate a bad response\\n      // request.open('GET', 'http://yoidontevenexisthere.org/post', true); // Simulate an invalid request\\n      request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\\n  \\n      request.onload = function() {\\n        if (this.status >= 200 && this.status < 400) {\\n          // Success!\\n          var resp = this.response;\\n          resultsEl.innerHTML = '<h3>Noice!</h3><p><pre>' + \\n            'I ran the chunk `' + name + '` with the following code:\\\\n\\\\n```\\\\n' +\\n            chunkCode + '\\\\n```\\\\n\\\\n and it all worked great!' +\\n            '</pre></p><p><img src=\\\"https://www.unilad.co.uk/wp-content/uploads/2018/07/success-kid-original.jpg\\\" width=\\\"500px\\\" height=\\\"330px\\\"/></p>';\\n          resultsEl.classList.add('callbackSuccess');\\n          resultsEl.classList.remove('callbackFailure');\\n        } else {\\n        console.log(\\\"Setting\\\");\\n        console.log(resultsEl);\\n          // We reached our target server, but it returned an error\\n          resultsEl.innerHTML = '<h3>Bad response</h3><p><pre>' + this.status + ' HTTP status</pre></p><p><img src=\\\"https://sayingimages.com/wp-content/uploads/so-sad-cat-meme.jpg\\\" /></p>';\\n          resultsEl.classList.add('callbackFailure');\\n          resultsEl.classList.remove('callbackSuccess');\\n        }\\n      };\\n  \\n      request.onerror = function() {\\n        resultsEl.innerHTML = '<h3>I can\\\\'t even..</h3><p><img src=\\\"https://i.ytimg.com/vi/GTJQ3JsaHcA/hqdefault.jpg\\\" /></p>';\\n        // There was a connection error of some sort\\n        resultsEl.classList.add('callbackFailure');\\n        resultsEl.classList.remove('callbackSuccess');\\n      };\\n\\n      request.send('user=person&pwd=password&organization=place&requiredkey=key');\\n    }\\n      \\n    actionsEl.innerHTML = '';\\n    resultsEl.innerHTML = '';\\n\\n    if (name === 'nobuttons') {\\n      // Don't add anything\\n    } else { \\n      actionsEl.innerHTML = '<button onclick=\\\"doGrade(\\\\'http://httpbin.org/post\\\\')\\\">Success</button>' +\\n        '<button onclick=\\\"doGrade(\\\\'http://httpbin.org/get\\\\')\\\">Failure</button>' + \\n        '<button onclick=\\\"doGrade(\\\\'http://thiserverdoesntevenexisthereyo.co.uk\\\\')\\\">Wat</button>';\\n    }\\n  }\\n  handle(\\\"chunkName\\\", \\\"my code here\\\", {});\\n</script>\"\n  rand <- round(runif(1, 1e8, 1e9))\n  htmlres <- gsub(\"chunkName\", chunkName, template)\n  htmlres <- gsub(\"my code here\", chunkCode, htmlres)\n  return(list(html = htmlres))\n}\n\nTo Do\nCurrently the callback function only accepts the chunk name and code. This will be expanded to include a result parameter and possibly others but I need to get with Jonathan to go over those pieces.", "createdAt": "2020-08-31T22:48:36Z", "url": "https://github.com/rstudio/rstudio/pull/7693", "merged": true, "mergeCommit": {"oid": "8d5f015c38e3d135df5e0419cead4760b3dcae42"}, "closed": true, "closedAt": "2020-09-16T22:56:49Z", "author": {"login": "melissa-barca"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9nefkAH2gAyNDc2NTkxNjc1OjM0NGY4NGJlYWViMjIwN2JlMjM1ODg2OTE4ODI4OTY4OWIwOGY5YTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJkh7uAH2gAyNDc2NTkxNjc1OjkxNzg4ZmMzNmUwYmU1NWIyZDQxZmI1NWZlNmJmZTcyZjZhNzNkMWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "344f84beaeb2207be2358869188289689b08f9a5", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/344f84beaeb2207be2358869188289689b08f9a5", "committedDate": "2020-08-10T19:35:04Z", "message": "add rstudioapi register and unregister chunk implementations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59f39f0151fb32aa0c276903adc91fae4b053e02", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/59f39f0151fb32aa0c276903adc91fae4b053e02", "committedDate": "2020-08-10T22:10:19Z", "message": "send html callback with chunk complete event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "046d9ee65dfe751fbfd5668c8659eacdc36eeffd", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/046d9ee65dfe751fbfd5668c8659eacdc36eeffd", "committedDate": "2020-08-11T17:42:40Z", "message": "implement unregister chunk callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21016bc5e93db4a569f83455d8e67f8a073f83b9", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/21016bc5e93db4a569f83455d8e67f8a073f83b9", "committedDate": "2020-08-11T21:55:34Z", "message": "render html after chunk output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14916e1834707af5744238f48c8d3cc98a5ba941", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/14916e1834707af5744238f48c8d3cc98a5ba941", "committedDate": "2020-08-19T14:38:12Z", "message": "don't use 'callback' name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6526a2ea57ee13358bd2c805c3e0597d0bd4ead", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/f6526a2ea57ee13358bd2c805c3e0597d0bd4ead", "committedDate": "2020-08-28T16:32:26Z", "message": "update parameters, pass chunkcode to callback, create callback iframe under chunk output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0067ac4ada520ebf8a3f48b1e749ff56ddd6be45", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/0067ac4ada520ebf8a3f48b1e749ff56ddd6be45", "committedDate": "2020-08-31T14:51:49Z", "message": "move fillIFrame to DomUtils and fix spacing issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8981337bf37f711659bfdbe2c3c3a482a2d86269", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/8981337bf37f711659bfdbe2c3c3a482a2d86269", "committedDate": "2020-08-31T16:58:17Z", "message": "display callback output for gallery view"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fee438475ee77132e1428bf474fcfe0303feaff", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/7fee438475ee77132e1428bf474fcfe0303feaff", "committedDate": "2020-08-31T17:13:43Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d019b7e66f51a14586840bce93ad4a5aa1944312", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/d019b7e66f51a14586840bce93ad4a5aa1944312", "committedDate": "2020-08-31T19:46:04Z", "message": "allow for a list of callbacks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab8e0f018bc46801e3f78842488ef84a9a32c3d0", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/ab8e0f018bc46801e3f78842488ef84a9a32c3d0", "committedDate": "2020-08-31T21:48:03Z", "message": "pass the user-friendly chunk label to callback fn"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e", "committedDate": "2020-09-01T14:23:49Z", "message": "show full width in output"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MzE4NDM1", "url": "https://github.com/rstudio/rstudio/pull/7693#pullrequestreview-484318435", "createdAt": "2020-09-08T16:42:57Z", "commit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNjo0Mjo1OFrOHOllDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNjo1NTo0NlrOHOmBrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1NzgwNQ==", "bodyText": "For robustness you should check if the environment exists specifically in the tools environment.", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485057805", "createdAt": "2020-09-08T16:42:58Z", "author": {"login": "jmcphers"}, "path": "src/cpp/r/R/Api.R", "diffHunk": "@@ -841,6 +841,33 @@ options(terminal.manager = list(terminalActivate = .rs.api.terminalActivate,\n    .Call(\"rs_systemUsername\", PACKAGE = \"(embedding)\")\n })\n \n+# store callback functions to be executed after a specified chunk\n+# and return a handle to unregister the chunk\n+.rs.addApiFunction(\"registerChunkCallback\", function(chunkCallback = function(chunkName, chunkCode){}) {\n+\n+   if (!is.function(chunkCallback))\n+      stop(\"'chunkCallback' must be a function\")\n+\n+   # if one does not already exist, add an environment which will host registered callbacks\n+   if (!exists(\".rs.notebookChunkCallbacks\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1ODkxNA==", "bodyText": "I don't think this should have a default value since you'd never really want to register an no-op function as a callback.", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485058914", "createdAt": "2020-09-08T16:44:49Z", "author": {"login": "jmcphers"}, "path": "src/cpp/r/R/Api.R", "diffHunk": "@@ -841,6 +841,33 @@ options(terminal.manager = list(terminalActivate = .rs.api.terminalActivate,\n    .Call(\"rs_systemUsername\", PACKAGE = \"(embedding)\")\n })\n \n+# store callback functions to be executed after a specified chunk\n+# and return a handle to unregister the chunk\n+.rs.addApiFunction(\"registerChunkCallback\", function(chunkCallback = function(chunkName, chunkCode){}) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1OTkzMg==", "bodyText": "I think we should emit a warning here if (a) the environment doesn't exist or (b) the handle wasn't found in the environment.", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485059932", "createdAt": "2020-09-08T16:46:33Z", "author": {"login": "jmcphers"}, "path": "src/cpp/r/R/Api.R", "diffHunk": "@@ -841,6 +841,33 @@ options(terminal.manager = list(terminalActivate = .rs.api.terminalActivate,\n    .Call(\"rs_systemUsername\", PACKAGE = \"(embedding)\")\n })\n \n+# store callback functions to be executed after a specified chunk\n+# and return a handle to unregister the chunk\n+.rs.addApiFunction(\"registerChunkCallback\", function(chunkCallback = function(chunkName, chunkCode){}) {\n+\n+   if (!is.function(chunkCallback))\n+      stop(\"'chunkCallback' must be a function\")\n+\n+   # if one does not already exist, add an environment which will host registered callbacks\n+   if (!exists(\".rs.notebookChunkCallbacks\"))\n+      assign(\".rs.notebookChunkCallbacks\",\n+             value = new.env(parent = emptyenv()),\n+             envir = .rs.toolsEnv())\n+\n+   data <- chunkCallback\n+   handler <- .Call(\"rs_createUUID\")\n+   assign(handler, value = data, envir = .rs.notebookChunkCallbacks)\n+\n+   return(handler)\n+})\n+\n+# unregister a chunk callback functions\n+.rs.addApiFunction(\"unregisterChunkCallback\", function(handle) {\n+  if (exists(\".rs.notebookChunkCallbacks\") &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA2MDUxOQ==", "bodyText": "This should be wrapped in a try/catch so we can tolerate failures occurring in the user-supplied chunkCallback function.", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485060519", "createdAt": "2020-09-08T16:47:36Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionRmdNotebook.R", "diffHunk": "@@ -1138,6 +1138,21 @@ assign(\".rs.notebookVersion\", envir = .rs.toolsEnv(), \"1.0\")\n    .rs.scalarListFromList(defaultOptions)\n })\n \n+.rs.addFunction(\"executeChunkCallback\", function(chunkName, chunkCode)\n+{\n+  if (exists(\".rs.notebookChunkCallbacks\"))\n+  {\n+     results <- list()\n+     handles <- ls(.rs.notebookChunkCallbacks)\n+     for (handle in handles) {\n+        chunkCallback <- get(handle, envir = .rs.notebookChunkCallbacks)\n+        results <- c(results, chunkCallback(chunkName, chunkCode))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA2MjE4Ng==", "bodyText": "At some point we will also need to pass the results into this R function. Those may be nontrivially expensive to collect, so we might consider asking R whether the chunk callback environment exists first.", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485062186", "createdAt": "2020-09-08T16:50:34Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/rmarkdown/SessionRmdNotebook.cpp", "diffHunk": "@@ -172,9 +173,25 @@ bool fixChunkFilename(int, const core::FilePath& path)\n \n void onChunkExecCompleted(const std::string& docId, \n                           const std::string& chunkId,\n+                          const std::string& code,\n+                          const std::string& label,\n                           const std::string& nbCtxId)\n {\n-   emitOutputFinished(docId, chunkId, ExecScopeChunk);\n+   r::sexp::Protect rProtect;\n+   SEXP resultSEXP = R_NilValue;\n+   json::Array results;\n+\n+   r::exec::RFunction func(\".rs.executeChunkCallback\");\n+   func.addParam(label);\n+   func.addParam(code);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA2NTEzNA==", "bodyText": "Why does this make the document dirty?", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485065134", "createdAt": "2020-09-08T16:55:46Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/rmd/TextEditingTargetNotebook.java", "diffHunk": "@@ -793,6 +793,15 @@ else if (data.getType() == RmdChunkOutputFinishedEvent.TYPE_INTERACTIVE &&\n             setDirtyState();\n          }\n       }\n+\n+      if (outputs_.containsKey(data.getChunkId()) &&\n+          !data.getHtmlCallback().isEmpty())\n+      {\n+         ArrayList<String> callbacks = data.getHtmlCallback();\n+         for (String callback : callbacks)\n+            outputs_.get(data.getChunkId()).getOutputWidget().renderHtml(callback);\n+         setDirtyState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1Mjk5OTgx", "url": "https://github.com/rstudio/rstudio/pull/7693#pullrequestreview-485299981", "createdAt": "2020-09-09T18:45:31Z", "commit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODo0NTozMVrOHPVIAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxOTowNToxNlrOHPVwuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNjgwMg==", "bodyText": "nit: use PACKAGE = \"(embedding)\" to make it clear to R that the routine we're trying to call is provided by RStudio as opposed to a separate loaded DLL", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485836802", "createdAt": "2020-09-09T18:45:31Z", "author": {"login": "kevinushey"}, "path": "src/cpp/r/R/Api.R", "diffHunk": "@@ -841,6 +841,33 @@ options(terminal.manager = list(terminalActivate = .rs.api.terminalActivate,\n    .Call(\"rs_systemUsername\", PACKAGE = \"(embedding)\")\n })\n \n+# store callback functions to be executed after a specified chunk\n+# and return a handle to unregister the chunk\n+.rs.addApiFunction(\"registerChunkCallback\", function(chunkCallback = function(chunkName, chunkCode){}) {\n+\n+   if (!is.function(chunkCallback))\n+      stop(\"'chunkCallback' must be a function\")\n+\n+   # if one does not already exist, add an environment which will host registered callbacks\n+   if (!exists(\".rs.notebookChunkCallbacks\"))\n+      assign(\".rs.notebookChunkCallbacks\",\n+             value = new.env(parent = emptyenv()),\n+             envir = .rs.toolsEnv())\n+\n+   data <- chunkCallback\n+   handler <- .Call(\"rs_createUUID\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNzI3NQ==", "bodyText": "This is also extra nitpicky but I'd call this a handle as opposed to a handler as it's just an opaque ID you can use as opposed to an object that knows how to \"handle\" things.", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485837275", "createdAt": "2020-09-09T18:46:31Z", "author": {"login": "kevinushey"}, "path": "src/cpp/r/R/Api.R", "diffHunk": "@@ -841,6 +841,33 @@ options(terminal.manager = list(terminalActivate = .rs.api.terminalActivate,\n    .Call(\"rs_systemUsername\", PACKAGE = \"(embedding)\")\n })\n \n+# store callback functions to be executed after a specified chunk\n+# and return a handle to unregister the chunk\n+.rs.addApiFunction(\"registerChunkCallback\", function(chunkCallback = function(chunkName, chunkCode){}) {\n+\n+   if (!is.function(chunkCallback))\n+      stop(\"'chunkCallback' must be a function\")\n+\n+   # if one does not already exist, add an environment which will host registered callbacks\n+   if (!exists(\".rs.notebookChunkCallbacks\"))\n+      assign(\".rs.notebookChunkCallbacks\",\n+             value = new.env(parent = emptyenv()),\n+             envir = .rs.toolsEnv())\n+\n+   data <- chunkCallback\n+   handler <- .Call(\"rs_createUUID\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNjgwMg=="}, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNzc1MQ==", "bodyText": "It may also be worth validating that this is a function that accepts (at least) two parameters -- up to you if you think it's worth it. You can use formals(chunkCallback) to see what formals are declared for that function.", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485837751", "createdAt": "2020-09-09T18:47:30Z", "author": {"login": "kevinushey"}, "path": "src/cpp/r/R/Api.R", "diffHunk": "@@ -841,6 +841,33 @@ options(terminal.manager = list(terminalActivate = .rs.api.terminalActivate,\n    .Call(\"rs_systemUsername\", PACKAGE = \"(embedding)\")\n })\n \n+# store callback functions to be executed after a specified chunk\n+# and return a handle to unregister the chunk\n+.rs.addApiFunction(\"registerChunkCallback\", function(chunkCallback = function(chunkName, chunkCode){}) {\n+\n+   if (!is.function(chunkCallback))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0MzE2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 handles <- ls(.rs.notebookChunkCallbacks)\n          \n          \n            \n                 handles <- ls(envir = .rs.notebookChunkCallbacks)", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485843165", "createdAt": "2020-09-09T18:57:35Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/modules/SessionRmdNotebook.R", "diffHunk": "@@ -1138,6 +1138,21 @@ assign(\".rs.notebookVersion\", envir = .rs.toolsEnv(), \"1.0\")\n    .rs.scalarListFromList(defaultOptions)\n })\n \n+.rs.addFunction(\"executeChunkCallback\", function(chunkName, chunkCode)\n+{\n+  if (exists(\".rs.notebookChunkCallbacks\"))\n+  {\n+     results <- list()\n+     handles <- ls(.rs.notebookChunkCallbacks)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0NDc4MA==", "bodyText": "nit: feels awkward to have a static import of only this symbol and not the others; could we remove this and just qualify our usage?", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485844780", "createdAt": "2020-09-09T19:00:29Z", "author": {"login": "kevinushey"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputWidget.java", "diffHunk": "@@ -68,6 +68,8 @@\n import com.google.gwt.user.client.ui.SimplePanel;\n import com.google.gwt.user.client.ui.Widget;\n \n+import static org.rstudio.studio.client.rmarkdown.model.RmdChunkOutputUnit.TYPE_HTML;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0NTY3OQ==", "bodyText": "It looks like we create a render timer here but then never use it?", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485845679", "createdAt": "2020-09-09T19:02:15Z", "author": {"login": "kevinushey"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputWidget.java", "diffHunk": "@@ -274,7 +276,15 @@ public HandlerRegistration addExpansionStateChangeHandler(\n    {\n       return expansionState_.addValueChangeHandler(handler);\n    }\n-    \n+\n+   public void renderHtml(String htmlOutput)\n+   {\n+      if (StringUtil.isNullOrEmpty(htmlOutput))\n+         return;\n+      final RenderTimer renderTimer = new RenderTimer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0NzIyNQ==", "bodyText": "Do we need to check for errors here?", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r485847225", "createdAt": "2020-09-09T19:05:16Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/modules/rmarkdown/SessionRmdNotebook.cpp", "diffHunk": "@@ -172,9 +173,25 @@ bool fixChunkFilename(int, const core::FilePath& path)\n \n void onChunkExecCompleted(const std::string& docId, \n                           const std::string& chunkId,\n+                          const std::string& code,\n+                          const std::string& label,\n                           const std::string& nbCtxId)\n {\n-   emitOutputFinished(docId, chunkId, ExecScopeChunk);\n+   r::sexp::Protect rProtect;\n+   SEXP resultSEXP = R_NilValue;\n+   json::Array results;\n+\n+   r::exec::RFunction func(\".rs.executeChunkCallback\");\n+   func.addParam(label);\n+   func.addParam(code);\n+\n+   core::Error error = func.call(&resultSEXP, &rProtect);\n+   if (error)\n+      LOG_ERROR(error);\n+   else if (!r::sexp::isNull(resultSEXP))\n+      Error error = r::json::jsonValueFromList(resultSEXP, &results);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45be5a819c5aaf2bb69cf3f2b1e2224148ef14e"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "255cbd6d035cdd12c6305054ec33a27d200ef9aa", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/255cbd6d035cdd12c6305054ec33a27d200ef9aa", "committedDate": "2020-09-09T19:25:35Z", "message": "verify .rs.notebookChunkCallbacks is in the tools environment and remove default value for callback\n\nadd warnings for invalid parameters\n\ncreate the callback environment with the tools environment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01ec533025731eb1960e346d67a01e033a262a4e", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/01ec533025731eb1960e346d67a01e033a262a4e", "committedDate": "2020-09-09T19:28:47Z", "message": "specify parameter\n\nCo-authored-by: Kevin Ushey <kevin@rstudio.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4421a4d47794ed79f70dac6bef74e60fe07f4aa4", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/4421a4d47794ed79f70dac6bef74e60fe07f4aa4", "committedDate": "2020-09-09T19:57:53Z", "message": "improve error handling and variable names"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a4d30af4ddc9cf698229128f6da06194b940e99", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/9a4d30af4ddc9cf698229128f6da06194b940e99", "committedDate": "2020-09-09T19:55:15Z", "message": "improve error handling and variable names"}, "afterCommit": {"oid": "4421a4d47794ed79f70dac6bef74e60fe07f4aa4", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/4421a4d47794ed79f70dac6bef74e60fe07f4aa4", "committedDate": "2020-09-09T19:57:53Z", "message": "improve error handling and variable names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "741a9fe3a6fa9100ce186c89aadfd3a3ed723343", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/741a9fe3a6fa9100ce186c89aadfd3a3ed723343", "committedDate": "2020-09-11T17:51:10Z", "message": "dynamically resize callback height"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a2f51562ffa91b468f127f3ed6347ee05f48987", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/9a2f51562ffa91b468f127f3ed6347ee05f48987", "committedDate": "2020-09-11T18:11:48Z", "message": "increase chunk output height"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4362f224b6c8bd4977ee5a5968b58b075debb67", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/e4362f224b6c8bd4977ee5a5968b58b075debb67", "committedDate": "2020-09-11T20:56:36Z", "message": "assign null default to unregisterChunkCallback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13293fbb0a8fb2fe303d472729b0f1199b1dd898", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/13293fbb0a8fb2fe303d472729b0f1199b1dd898", "committedDate": "2020-09-11T21:51:59Z", "message": "only accepts one chunk callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3005af956154ff53cd555cbe55d20d496b2716a1", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/3005af956154ff53cd555cbe55d20d496b2716a1", "committedDate": "2020-09-14T14:44:32Z", "message": "check if environment is empty before processing callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9192342c6fa470cbeb4c2e3b083ae6029fc8973c", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/9192342c6fa470cbeb4c2e3b083ae6029fc8973c", "committedDate": "2020-09-14T15:51:51Z", "message": "make function generic"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11d2d1a6915f9e249884b00a6471e946fb7b71ff", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/11d2d1a6915f9e249884b00a6471e946fb7b71ff", "committedDate": "2020-09-14T15:15:19Z", "message": "make function generic"}, "afterCommit": {"oid": "9192342c6fa470cbeb4c2e3b083ae6029fc8973c", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/9192342c6fa470cbeb4c2e3b083ae6029fc8973c", "committedDate": "2020-09-14T15:51:51Z", "message": "make function generic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a85edd618910bb06cb9141b3816a46331864b405", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/a85edd618910bb06cb9141b3816a46331864b405", "committedDate": "2020-09-14T16:51:21Z", "message": "make chunk gallery callbacks dynamic and pass evaluated parameters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3OTcyNTY4", "url": "https://github.com/rstudio/rstudio/pull/7693#pullrequestreview-487972568", "createdAt": "2020-09-14T17:00:44Z", "commit": {"oid": "a85edd618910bb06cb9141b3816a46331864b405"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzowMDo0NFrOHRefiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzowNTo0NlrOHReqOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA4NzQzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  rm (list = id, envir = .rs.notebookChunkCallbacks)\n          \n          \n            \n                  rm(list = id, envir = .rs.notebookChunkCallbacks)", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r488087435", "createdAt": "2020-09-14T17:00:44Z", "author": {"login": "kevinushey"}, "path": "src/cpp/r/R/Api.R", "diffHunk": "@@ -841,6 +841,38 @@ options(terminal.manager = list(terminalActivate = .rs.api.terminalActivate,\n    .Call(\"rs_systemUsername\", PACKAGE = \"(embedding)\")\n })\n \n+# store callback functions to be executed after a specified chunk\n+# and return a handle to unregister the chunk\n+.rs.addApiFunction(\"registerChunkCallback\", function(chunkCallback) {\n+\n+   if (length(.rs.notebookChunkCallbacks) != 0)\n+      stop(\"Callback is already registered.\")\n+   if (!is.function(chunkCallback))\n+      stop(\"'chunkCallback' must be a function\")\n+   if (length(formals(chunkCallback)) != 2)\n+      stop(\"'chunkCallback' must contain two parameters: chunkName and chunkCode\")\n+\n+   data <- chunkCallback\n+   handle <- .Call(\"rs_createUUID\",\n+                   PACKAGE = \"(embedding)\")\n+   assign(handle, value = data, envir = .rs.notebookChunkCallbacks)\n+\n+   return(handle)\n+})\n+\n+# unregister a chunk callback functions\n+.rs.addApiFunction(\"unregisterChunkCallback\", function(id = NULL) {\n+   if (length(.rs.notebookChunkCallbacks) == 0)\n+      warning(\"No registered callbacks found\")\n+   else if (!is.null(id) && !exists(id, envir = .rs.notebookChunkCallbacks))\n+      warning(\"Handle not found.\")\n+   else\n+   {\n+      id = ls(.rs.notebookChunkCallbacks)\n+      rm (list = id, envir = .rs.notebookChunkCallbacks)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a85edd618910bb06cb9141b3816a46331864b405"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA4NzYwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  id = ls(.rs.notebookChunkCallbacks)\n          \n          \n            \n                  id <- ls(envir = .rs.notebookChunkCallbacks)", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r488087601", "createdAt": "2020-09-14T17:01:02Z", "author": {"login": "kevinushey"}, "path": "src/cpp/r/R/Api.R", "diffHunk": "@@ -841,6 +841,38 @@ options(terminal.manager = list(terminalActivate = .rs.api.terminalActivate,\n    .Call(\"rs_systemUsername\", PACKAGE = \"(embedding)\")\n })\n \n+# store callback functions to be executed after a specified chunk\n+# and return a handle to unregister the chunk\n+.rs.addApiFunction(\"registerChunkCallback\", function(chunkCallback) {\n+\n+   if (length(.rs.notebookChunkCallbacks) != 0)\n+      stop(\"Callback is already registered.\")\n+   if (!is.function(chunkCallback))\n+      stop(\"'chunkCallback' must be a function\")\n+   if (length(formals(chunkCallback)) != 2)\n+      stop(\"'chunkCallback' must contain two parameters: chunkName and chunkCode\")\n+\n+   data <- chunkCallback\n+   handle <- .Call(\"rs_createUUID\",\n+                   PACKAGE = \"(embedding)\")\n+   assign(handle, value = data, envir = .rs.notebookChunkCallbacks)\n+\n+   return(handle)\n+})\n+\n+# unregister a chunk callback functions\n+.rs.addApiFunction(\"unregisterChunkCallback\", function(id = NULL) {\n+   if (length(.rs.notebookChunkCallbacks) == 0)\n+      warning(\"No registered callbacks found\")\n+   else if (!is.null(id) && !exists(id, envir = .rs.notebookChunkCallbacks))\n+      warning(\"Handle not found.\")\n+   else\n+   {\n+      id = ls(.rs.notebookChunkCallbacks)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a85edd618910bb06cb9141b3816a46331864b405"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA4ODUyMA==", "bodyText": "Is there a reason why you defined this in Tools.R rather than e.g. at the top of Api.R? I think you could use .rs.setVar(\"notebookChunkCallbacks\", new.env(parent = emptyenv()) at the top of Api.R.", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r488088520", "createdAt": "2020-09-14T17:02:42Z", "author": {"login": "kevinushey"}, "path": "src/cpp/r/R/Tools.R", "diffHunk": "@@ -27,6 +27,9 @@ assign(\".rs.toolsEnv\", function()\n    .rs.Env\n }, envir = .rs.Env)\n \n+# Add enviornment with 'tools:rstudio' to store data for Api.R\n+assign(\".rs.notebookChunkCallbacks\", value = new.env(parent = emptyenv()), envir = .rs.toolsEnv())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a85edd618910bb06cb9141b3816a46331864b405"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA4ODY3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              if (exists(\".rs.notebookChunkCallbacks\") &&\n          \n          \n            \n              if (exists(\".rs.notebookChunkCallbacks\", envir = .rs.notebookChunkCallbacks) &&", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r488088673", "createdAt": "2020-09-14T17:02:58Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/modules/SessionRmdNotebook.R", "diffHunk": "@@ -1138,6 +1138,20 @@ assign(\".rs.notebookVersion\", envir = .rs.toolsEnv(), \"1.0\")\n    .rs.scalarListFromList(defaultOptions)\n })\n \n+.rs.addFunction(\"executeChunkCallback\", function(chunkName, chunkCode)\n+{\n+  if (exists(\".rs.notebookChunkCallbacks\") &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a85edd618910bb06cb9141b3816a46331864b405"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA4OTMwNw==", "bodyText": "Now that there's only a single callback result, it seems unnecessary to create and then append the result to an R list -- why not just return the result directly?", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r488089307", "createdAt": "2020-09-14T17:04:13Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/modules/SessionRmdNotebook.R", "diffHunk": "@@ -1138,6 +1138,20 @@ assign(\".rs.notebookVersion\", envir = .rs.toolsEnv(), \"1.0\")\n    .rs.scalarListFromList(defaultOptions)\n })\n \n+.rs.addFunction(\"executeChunkCallback\", function(chunkName, chunkCode)\n+{\n+  if (exists(\".rs.notebookChunkCallbacks\") &&\n+      length(.rs.notebookChunkCallbacks) != 0)\n+  {\n+     results <- list()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a85edd618910bb06cb9141b3816a46331864b405"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA5MDE2OA==", "bodyText": "This feels a bit awkward: can we normalize the return value beforehand so that we don't have to \"guess\" where the HTML array lives?", "url": "https://github.com/rstudio/rstudio/pull/7693#discussion_r488090168", "createdAt": "2020-09-14T17:05:46Z", "author": {"login": "kevinushey"}, "path": "src/gwt/src/org/rstudio/studio/client/rmarkdown/events/RmdChunkOutputFinishedEvent.java", "diffHunk": "@@ -52,6 +55,18 @@ public final native int getType() /*-{\n       public final native int getScope() /*-{\n          return this.scope;\n       }-*/;\n+      \n+      public final ArrayList<String> getHtmlCallback() {\n+         JsArray arr = getNativeHtmlCallbacks();\n+         ArrayList<String> results = new ArrayList<>();\n+         for (int i = 0; i < arr.length(); i++)\n+            results.add(arr.get(i).toString());\n+         return results;\n+      }\n+\n+      private native final JsArray getNativeHtmlCallbacks() /*-{\n+         return this[\"html_callback\"][0] || this[\"html_callback\"][\"html\"] || [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a85edd618910bb06cb9141b3816a46331864b405"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fdf9102844cf78b93e9787eb392a65083d04a50", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/7fdf9102844cf78b93e9787eb392a65083d04a50", "committedDate": "2020-09-14T18:46:30Z", "message": "simplify executeChunkCallback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9689bc8551c0e2766a032e0a0c79bb5f29a4c991", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/9689bc8551c0e2766a032e0a0c79bb5f29a4c991", "committedDate": "2020-09-14T18:47:54Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Kevin Ushey <kevin@rstudio.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b3b69b5108f97e60412c352a5aaf774c4a908ff", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/7b3b69b5108f97e60412c352a5aaf774c4a908ff", "committedDate": "2020-09-14T21:05:55Z", "message": "convert HTML callback to string before passing to front end"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "227d709d7a61b75a1a145baf386a4f89e0841680", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/227d709d7a61b75a1a145baf386a4f89e0841680", "committedDate": "2020-09-14T21:09:03Z", "message": "move environment declaration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MTQ4NzIw", "url": "https://github.com/rstudio/rstudio/pull/7693#pullrequestreview-488148720", "createdAt": "2020-09-14T21:18:51Z", "commit": {"oid": "227d709d7a61b75a1a145baf386a4f89e0841680"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "298679dd4ee5a493335ffb23b3882846225c51d9", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/298679dd4ee5a493335ffb23b3882846225c51d9", "committedDate": "2020-09-14T21:20:25Z", "message": "remove extra space\n\nCo-authored-by: Kevin Ushey <kevin@rstudio.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDY2OTU0", "url": "https://github.com/rstudio/rstudio/pull/7693#pullrequestreview-490066954", "createdAt": "2020-09-16T22:39:06Z", "commit": {"oid": "298679dd4ee5a493335ffb23b3882846225c51d9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91788fc36e0be55b2d41fb55fe6bfe72f6a73d1b", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/91788fc36e0be55b2d41fb55fe6bfe72f6a73d1b", "committedDate": "2020-09-16T22:56:12Z", "message": "Merge branch 'master' into feature/chunk-grading"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 73, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}