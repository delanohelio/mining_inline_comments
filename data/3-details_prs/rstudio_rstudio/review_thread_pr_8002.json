{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NTQ2MTU0", "number": 8002, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMzo0NjozOFrOErZY7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMzo0OToxM1rOErZbUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTQwMjA1OnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionEnvironment.R", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMzo0NjozOFrOHeJU3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjo1NDo0MVrOHens2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM3MjEyNQ==", "bodyText": "nit: exact = TRUE?", "url": "https://github.com/rstudio/rstudio/pull/8002#discussion_r501372125", "createdAt": "2020-10-07T23:46:38Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionEnvironment.R", "diffHunk": "@@ -735,3 +735,18 @@\n    .Call(\"rs_hasAltrep\", var, PACKAGE = \"(embedding)\")\n })\n \n+.rs.addFunction(\"resolveContextSourceRefs\", function(info)\n+{\n+   calls <- sys.calls()\n+   \n+   for (i in seq_along(calls))\n+   {\n+      fn <- sys.function(i)\n+      if (identical(fn, info$callfun))\n+         return(attr(calls[[i]], \"srcref\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac1b6575cdd71e4c6e98a8feaebf632669ef5daf"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg2OTc4NQ==", "bodyText": "Thanks for catching that -- fixed up now.", "url": "https://github.com/rstudio/rstudio/pull/8002#discussion_r501869785", "createdAt": "2020-10-08T16:54:41Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/modules/SessionEnvironment.R", "diffHunk": "@@ -735,3 +735,18 @@\n    .Call(\"rs_hasAltrep\", var, PACKAGE = \"(embedding)\")\n })\n \n+.rs.addFunction(\"resolveContextSourceRefs\", function(info)\n+{\n+   calls <- sys.calls()\n+   \n+   for (i in seq_along(calls))\n+   {\n+      fn <- sys.function(i)\n+      if (identical(fn, info$callfun))\n+         return(attr(calls[[i]], \"srcref\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM3MjEyNQ=="}, "originalCommit": {"oid": "ac1b6575cdd71e4c6e98a8feaebf632669ef5daf"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTQwNjQ2OnYy", "diffSide": "RIGHT", "path": "src/cpp/r/RCntxt.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMzo0ODo0M1rOHeJXVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjo1NTo0NlrOHenvww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM3Mjc1Ng==", "bodyText": "It doesn't look like the the function actually uses most of these values -- do we need them all?", "url": "https://github.com/rstudio/rstudio/pull/8002#discussion_r501372756", "createdAt": "2020-10-07T23:48:43Z", "author": {"login": "jmcphers"}, "path": "src/cpp/r/RCntxt.cpp", "diffHunk": "@@ -81,6 +81,41 @@ bool RCntxt::hasSourceRefs() const\n    return refs && TYPEOF(refs) != NILSXP;\n }\n \n+SEXP RCntxt::contextSourceRefs() const\n+{\n+   // retrieve the source reference tagged on the context\n+   SEXP ref = srcref();\n+   \n+   // if this is a byte-code context, we need to do some\n+   // extra work to resolve the \"real\" source reference (if any)\n+   if (isByteCodeSrcRef(ref))\n+   {\n+      r::sexp::Protect protect;\n+   \n+      // stuff context parameters into a list to avoid accidentally\n+      // evaluating call objects prematurely\n+      r::sexp::ListBuilder builder(&protect);\n+      builder.add(\"call\", call());\n+      builder.add(\"callflag\", callflag());\n+      builder.add(\"callfun\", callfun());\n+      builder.add(\"srcref\", srcref());\n+      builder.add(\"cloenv\", cloenv());\n+      SEXP info = r::sexp::create(builder, &protect);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac1b6575cdd71e4c6e98a8feaebf632669ef5daf"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3MDUzMQ==", "bodyText": "We don't; I just took the kitchen sink because I wasn't sure what I'd need. I've narrowed this down so we only pass along the essentials.", "url": "https://github.com/rstudio/rstudio/pull/8002#discussion_r501870531", "createdAt": "2020-10-08T16:55:46Z", "author": {"login": "kevinushey"}, "path": "src/cpp/r/RCntxt.cpp", "diffHunk": "@@ -81,6 +81,41 @@ bool RCntxt::hasSourceRefs() const\n    return refs && TYPEOF(refs) != NILSXP;\n }\n \n+SEXP RCntxt::contextSourceRefs() const\n+{\n+   // retrieve the source reference tagged on the context\n+   SEXP ref = srcref();\n+   \n+   // if this is a byte-code context, we need to do some\n+   // extra work to resolve the \"real\" source reference (if any)\n+   if (isByteCodeSrcRef(ref))\n+   {\n+      r::sexp::Protect protect;\n+   \n+      // stuff context parameters into a list to avoid accidentally\n+      // evaluating call objects prematurely\n+      r::sexp::ListBuilder builder(&protect);\n+      builder.add(\"call\", call());\n+      builder.add(\"callflag\", callflag());\n+      builder.add(\"callfun\", callfun());\n+      builder.add(\"srcref\", srcref());\n+      builder.add(\"cloenv\", cloenv());\n+      SEXP info = r::sexp::create(builder, &protect);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM3Mjc1Ng=="}, "originalCommit": {"oid": "ac1b6575cdd71e4c6e98a8feaebf632669ef5daf"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTQwODE5OnYy", "diffSide": "RIGHT", "path": "src/cpp/r/include/r/RCntxt.hpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMzo0OToxM1rOHeJYLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjo1NToyMVrOHenuqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM3Mjk3NQ==", "bodyText": "We should add a comment here indicating the difference between contextSourceRefs and sourceRefs", "url": "https://github.com/rstudio/rstudio/pull/8002#discussion_r501372975", "createdAt": "2020-10-07T23:49:13Z", "author": {"login": "jmcphers"}, "path": "src/cpp/r/include/r/RCntxt.hpp", "diffHunk": "@@ -63,6 +63,7 @@ class RCntxt: public RCntxtInterface\n    bool isDebugHidden() const;\n    bool isErrorHandler() const;\n \n+   SEXP contextSourceRefs() const;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac1b6575cdd71e4c6e98a8feaebf632669ef5daf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3MDI1MQ==", "bodyText": "Done!", "url": "https://github.com/rstudio/rstudio/pull/8002#discussion_r501870251", "createdAt": "2020-10-08T16:55:21Z", "author": {"login": "kevinushey"}, "path": "src/cpp/r/include/r/RCntxt.hpp", "diffHunk": "@@ -63,6 +63,7 @@ class RCntxt: public RCntxtInterface\n    bool isDebugHidden() const;\n    bool isErrorHandler() const;\n \n+   SEXP contextSourceRefs() const;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM3Mjk3NQ=="}, "originalCommit": {"oid": "ac1b6575cdd71e4c6e98a8feaebf632669ef5daf"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4239, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}