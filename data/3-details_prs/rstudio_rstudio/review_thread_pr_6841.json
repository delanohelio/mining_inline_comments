{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDk4ODk2", "number": 6841, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo1MzoyOFrOD7TMqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozMzowOVrOD7ZOtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTA3MTEzOnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo1MzoyOFrOGTigtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjo0MTozNFrOGTkZxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0MTU1OQ==", "bodyText": "Could this be made more specific so that we have more to go on if it's seen in the wild? E.g.:\n\"Found X matches in line but Y matches in encoded line; skipping replace.\"", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423141559", "createdAt": "2020-05-11T15:53:28Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -780,55 +799,81 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n                const size_t matchSize = matchOff - matchOn;\n                size_t replaceMatchOff = matchOff;\n                Error error;\n-               Replacer replacer(findResults().ignoreCase());\n-               std::string newLine(pLineInfo->decodedContents);\n+               Replacer replacer(encoding_, findResults().ignoreCase());\n+\n+               if (!encoding_.empty())\n+               {\n+                  eMatchOn =\n+                     static_cast<size_t>(eMatchOnArray.getValueAt(static_cast<size_t>(pos)).getInt());\n+                  eMatchOff =\n+                     static_cast<size_t>(eMatchOffArray.getValueAt(static_cast<size_t>(pos)).getInt());\n+               }\n+\n+               // If we found a different number of matches searching the encoded string,\n+               // we shouldn't perform the replace as the expected vs actual results may differ.\n+               if (!encoding_.empty() && eMatchOnArray.getSize() != matchOnArray.getSize())\n+               {\n+                  core::Error error(\n+                     errc::findCategory(),\n+                     errc::RegexError,\n+                     \"Could not perform replace due to encoding issue.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881ae4bef167e67455948e0c1fb254b38a2e36fc"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3MjU1MA==", "bodyText": "Good idea, fixed.", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423172550", "createdAt": "2020-05-11T16:41:34Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -780,55 +799,81 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n                const size_t matchSize = matchOff - matchOn;\n                size_t replaceMatchOff = matchOff;\n                Error error;\n-               Replacer replacer(findResults().ignoreCase());\n-               std::string newLine(pLineInfo->decodedContents);\n+               Replacer replacer(encoding_, findResults().ignoreCase());\n+\n+               if (!encoding_.empty())\n+               {\n+                  eMatchOn =\n+                     static_cast<size_t>(eMatchOnArray.getValueAt(static_cast<size_t>(pos)).getInt());\n+                  eMatchOff =\n+                     static_cast<size_t>(eMatchOffArray.getValueAt(static_cast<size_t>(pos)).getInt());\n+               }\n+\n+               // If we found a different number of matches searching the encoded string,\n+               // we shouldn't perform the replace as the expected vs actual results may differ.\n+               if (!encoding_.empty() && eMatchOnArray.getSize() != matchOnArray.getSize())\n+               {\n+                  core::Error error(\n+                     errc::findCategory(),\n+                     errc::RegexError,\n+                     \"Could not perform replace due to encoding issue.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0MTU1OQ=="}, "originalCommit": {"oid": "881ae4bef167e67455948e0c1fb254b38a2e36fc"}, "originalPosition": 168}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTA3Nzk5OnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo1NTowNFrOGTilEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjo0MjoxNFrOGTkbag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0MjY3Mw==", "bodyText": "Do we need this commented code? (feels like it should just be removed)", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423142673", "createdAt": "2020-05-11T15:55:04Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1643,24 +1752,25 @@ core::Error Replacer::completeReplace(const boost::regex& searchRegex,\n       return error;\n    }\n \n-   temp.insert(0, pLine->substr(0, matchOn));\n-   std::string endOfString = pLine->substr(matchOff).c_str();\n-   size_t replaceMatchOff;\n-   if (endOfString.empty())\n-      replaceMatchOff = temp.length();\n-   else\n-      replaceMatchOff = temp.find(endOfString);\n+   newLine.insert(0, begin);\n+   *pReplaceMatchOff = newLine.length() - end.length();\n+   *pLine = newLine;\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881ae4bef167e67455948e0c1fb254b38a2e36fc"}, "originalPosition": 389}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3Mjk3MA==", "bodyText": "You're right, just me making sure I had the right math. I've removed it.", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423172970", "createdAt": "2020-05-11T16:42:14Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1643,24 +1752,25 @@ core::Error Replacer::completeReplace(const boost::regex& searchRegex,\n       return error;\n    }\n \n-   temp.insert(0, pLine->substr(0, matchOn));\n-   std::string endOfString = pLine->substr(matchOff).c_str();\n-   size_t replaceMatchOff;\n-   if (endOfString.empty())\n-      replaceMatchOff = temp.length();\n-   else\n-      replaceMatchOff = temp.find(endOfString);\n+   newLine.insert(0, begin);\n+   *pReplaceMatchOff = newLine.length() - end.length();\n+   *pLine = newLine;\n+/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0MjY3Mw=="}, "originalCommit": {"oid": "881ae4bef167e67455948e0c1fb254b38a2e36fc"}, "originalPosition": 389}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTk5NjY4OnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDoxNDoxM1rOGTrsUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMjoyMDozMFrOGTvadQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MTk4Ng==", "bodyText": "I think these string literals should have a comment explaining what they mean/where they come from.", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423291986", "createdAt": "2020-05-11T20:14:13Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -741,6 +719,38 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n       return error;\n    }\n \n+   void cleanLineAndGetMatches(std::string* pEncodedLine,\n+                               json::Array* pMatchOn, json::Array* pMatchOff)\n+   {\n+      // The incoming string is assumed to have color encodings from the initial grep command.\n+      // These encodings are parsed out and their positions are placed in pMatchOn and pMatchOff.\n+\n+      const char* inputPos = pEncodedLine->c_str();\n+      const char* end = inputPos + pEncodedLine->size();\n+      std::size_t charactersProcessed = 0;\n+      boost::cmatch match;\n+      std::string cleanLine;\n+\n+      while (regex_utils::search(inputPos, match, getColorEncodingRegex(findResults().gitFlag())))\n+      {\n+         std::string matchedString(inputPos, inputPos + match.position());\n+         inputPos += match.position() + match.length();\n+         \n+         cleanLine.append(matchedString);\n+\n+         charactersProcessed += matchedString.size();\n+   \n+         if ((match.size() > 2 && match[2] == \"1\" && findResults().gitFlag()) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM1Mjk0OQ==", "bodyText": "Ok, updated.", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423352949", "createdAt": "2020-05-11T22:20:30Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -741,6 +719,38 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n       return error;\n    }\n \n+   void cleanLineAndGetMatches(std::string* pEncodedLine,\n+                               json::Array* pMatchOn, json::Array* pMatchOff)\n+   {\n+      // The incoming string is assumed to have color encodings from the initial grep command.\n+      // These encodings are parsed out and their positions are placed in pMatchOn and pMatchOff.\n+\n+      const char* inputPos = pEncodedLine->c_str();\n+      const char* end = inputPos + pEncodedLine->size();\n+      std::size_t charactersProcessed = 0;\n+      boost::cmatch match;\n+      std::string cleanLine;\n+\n+      while (regex_utils::search(inputPos, match, getColorEncodingRegex(findResults().gitFlag())))\n+      {\n+         std::string matchedString(inputPos, inputPos + match.position());\n+         inputPos += match.position() + match.length();\n+         \n+         cleanLine.append(matchedString);\n+\n+         charactersProcessed += matchedString.size();\n+   \n+         if ((match.size() > 2 && match[2] == \"1\" && findResults().gitFlag()) ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MTk4Ng=="}, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjAwMzIwOnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDoxNjowNFrOGTrwNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTo1Nzo1OFrOGTu27w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5Mjk4MA==", "bodyText": "Why do we put them into pMatchOn and pMatchOff? Are we removing the color encodings or just keeping track of them?", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423292980", "createdAt": "2020-05-11T20:16:04Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -741,6 +719,38 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n       return error;\n    }\n \n+   void cleanLineAndGetMatches(std::string* pEncodedLine,\n+                               json::Array* pMatchOn, json::Array* pMatchOff)\n+   {\n+      // The incoming string is assumed to have color encodings from the initial grep command.\n+      // These encodings are parsed out and their positions are placed in pMatchOn and pMatchOff.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMzNjAwNQ==", "bodyText": "We both remove them and keep track of them. These color encodings are placed by grep to indicate the matched word so we keep track of where they were to tell us the location of that matched word. We remove them since they're not part of the original line.", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423336005", "createdAt": "2020-05-11T21:40:23Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -741,6 +719,38 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n       return error;\n    }\n \n+   void cleanLineAndGetMatches(std::string* pEncodedLine,\n+                               json::Array* pMatchOn, json::Array* pMatchOff)\n+   {\n+      // The incoming string is assumed to have color encodings from the initial grep command.\n+      // These encodings are parsed out and their positions are placed in pMatchOn and pMatchOff.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5Mjk4MA=="}, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMzODczMg==", "bodyText": "What's the purpose of putting their locations into pMatchOn and pMatchOff? Is it for removing them later? Or is the pMatchOn right after the color open (i.e. the start of the actual match) and pMatchOff right before the color close?", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423338732", "createdAt": "2020-05-11T21:46:21Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -741,6 +719,38 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n       return error;\n    }\n \n+   void cleanLineAndGetMatches(std::string* pEncodedLine,\n+                               json::Array* pMatchOn, json::Array* pMatchOff)\n+   {\n+      // The incoming string is assumed to have color encodings from the initial grep command.\n+      // These encodings are parsed out and their positions are placed in pMatchOn and pMatchOff.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5Mjk4MA=="}, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0Mzg1NQ==", "bodyText": "As we iterate over the line's matches we are storing pMatchOn and pMatchOff so we know where the matches are so we can later replace them. At the same time we are creating a string cleanLine that includes everything except for the color encodings. This string gets returned in the variable the original line with the encodings was passed in.", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423343855", "createdAt": "2020-05-11T21:57:58Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -741,6 +719,38 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n       return error;\n    }\n \n+   void cleanLineAndGetMatches(std::string* pEncodedLine,\n+                               json::Array* pMatchOn, json::Array* pMatchOff)\n+   {\n+      // The incoming string is assumed to have color encodings from the initial grep command.\n+      // These encodings are parsed out and their positions are placed in pMatchOn and pMatchOff.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5Mjk4MA=="}, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjA1NjkwOnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozMjoxNVrOGTsSYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMjoyMDoyMlrOGTvaRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMTczMA==", "bodyText": "Is it not possible to determine the encoded status from the encoding_ member when the Replacer  is constructed?", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423301730", "createdAt": "2020-05-11T20:32:15Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1620,15 +1669,75 @@ boost::regex getColorEncodingRegex(bool isGitGrep)\n    return regex;\n }\n \n+\n+Error Replacer::replacePreview(const size_t dMatchOn, const size_t dMatchOff,\n+                               size_t eMatchOn, size_t eMatchOff,\n+                               std::string* pEncodedLine, std::string* pDecodedLine,\n+                               size_t* pReplaceMatchOff) const\n+{\n+   // if we're not encoded, we can avoid some logic\n+   bool encoded = true;\n+   if (eMatchOn == 0 && eMatchOff == 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 308}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM1MjkwMA==", "bodyText": "Good catch, fixed this.", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423352900", "createdAt": "2020-05-11T22:20:22Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1620,15 +1669,75 @@ boost::regex getColorEncodingRegex(bool isGitGrep)\n    return regex;\n }\n \n+\n+Error Replacer::replacePreview(const size_t dMatchOn, const size_t dMatchOff,\n+                               size_t eMatchOn, size_t eMatchOff,\n+                               std::string* pEncodedLine, std::string* pDecodedLine,\n+                               size_t* pReplaceMatchOff) const\n+{\n+   // if we're not encoded, we can avoid some logic\n+   bool encoded = true;\n+   if (eMatchOn == 0 && eMatchOff == 0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMTczMA=="}, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 308}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjA1OTQzOnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFindTests.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozMzowOVrOGTsUGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMjoyMDoxMVrOGTvZ_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMjE3MA==", "bodyText": "Should the encoding be the second parameter with a default value of \"\"?", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423302170", "createdAt": "2020-05-11T20:33:09Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFindTests.cpp", "diffHunk": "@@ -99,19 +99,52 @@ TEST_CASE(\"SessionFind\")\n       std::string line(kRegexLine);\n       size_t replaceMatchOff;\n \n-      Replacer replacer(false);\n+      Replacer replacer(\"\", false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM1MjgzMA==", "bodyText": "That works, I made the update.", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423352830", "createdAt": "2020-05-11T22:20:11Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFindTests.cpp", "diffHunk": "@@ -99,19 +99,52 @@ TEST_CASE(\"SessionFind\")\n       std::string line(kRegexLine);\n       size_t replaceMatchOff;\n \n-      Replacer replacer(false);\n+      Replacer replacer(\"\", false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMjE3MA=="}, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3949, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}