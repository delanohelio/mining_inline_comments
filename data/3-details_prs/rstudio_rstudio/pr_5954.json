{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4ODQ4Mjcw", "number": 5954, "title": "Exclude patterns and files from Find In Files search and replace", "bodyText": "This PR allows a user to exclude patterns from a Find In Files search by mimicking the current include functionality. It adds a unique option to exclude the \u201cStandard Git exclusions\u201d which uses git grep instead of grep. Some previous code existed with the understanding this was a \u201cto do\u201d item, most of that has been modified based on the decision to widen the exclude to more than just the gitignore file.\nAdded unit tests for the regexes used in the find as I was doing quite a bit of messing around with them to figure out what was needed for git grep.", "createdAt": "2020-01-03T01:39:34Z", "url": "https://github.com/rstudio/rstudio/pull/5954", "merged": true, "mergeCommit": {"oid": "46f6e09c13285b121062782e122f555b854a5a1f"}, "closed": true, "closedAt": "2020-01-16T20:40:30Z", "author": {"login": "melissa-barca"}, "timelineItems": {"totalCount": 56, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABbxqUuUAH2gAyMzU4ODQ4MjcwOmM5NTFiMmVmOGRlYjUzNDhkZDQ0MWRlYTU3MmFmMzRkODg0ODNkYmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb7ARkXgH2gAyMzU4ODQ4MjcwOjMxOGJmYjhmNTEyYzU1NTc0ZGJiZTAwNDQ4MGIxOWI5NjZlMDMwMDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c951b2ef8deb5348dd441dea572af34d88483dbc", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/c951b2ef8deb5348dd441dea572af34d88483dbc", "committedDate": "2019-12-18T19:55:52Z", "message": "update RPCs to send/accept excludeFilePatterns, remove gitIgnore code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "460e0fac3a2af9ab3f5591631c189977de525a3a", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/460e0fac3a2af9ab3f5591631c189977de525a3a", "committedDate": "2019-12-18T20:55:51Z", "message": "fix display bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "589d0e8c315275dea9972371feffbdf8e8a2d4da", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/589d0e8c315275dea9972371feffbdf8e8a2d4da", "committedDate": "2019-12-18T21:34:42Z", "message": "remove gitIgnore from cpp code,\nfix bug not defaulting to previous state after exclude custom selected"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77500a8e167e5b57da05c493b50913284cdd2300", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/77500a8e167e5b57da05c493b50913284cdd2300", "committedDate": "2019-12-18T22:58:52Z", "message": "start implementing reading of gitignore (WIP)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65a61db5aff68311d54995573bb0d779a1ffff43", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/65a61db5aff68311d54995573bb0d779a1ffff43", "committedDate": "2019-12-20T18:13:38Z", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/replace-git-ignore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2b9d258277b0ab84eeec048369c02e27b82b14f", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/b2b9d258277b0ab84eeec048369c02e27b82b14f", "committedDate": "2019-12-23T20:24:30Z", "message": "fix initialization of excludeFilePatterns, ignore some files in .gitignore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b71600c0fe4857adc4b300660cf624dd91f5e87", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/3b71600c0fe4857adc4b300660cf624dd91f5e87", "committedDate": "2019-12-23T21:50:52Z", "message": "refactor createGitIgnoreString, make string include every .gitignore file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28d9212e344d10866dedef41915ee65bec964cc4", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/28d9212e344d10866dedef41915ee65bec964cc4", "committedDate": "2019-12-23T21:52:46Z", "message": "remove code causing UI to fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12f77b688a1e70cc6281414366d3f6b9e99e39d5", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/12f77b688a1e70cc6281414366d3f6b9e99e39d5", "committedDate": "2020-01-02T18:49:16Z", "message": "uncomment accessibility changes, now working as expected"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cec3f5f6e4dc0b9bcc860184fd180e557169657", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/1cec3f5f6e4dc0b9bcc860184fd180e557169657", "committedDate": "2020-01-02T19:20:27Z", "message": "Revert \"uncomment accessibility changes, now working as expected\"\n\nThis reverts commit 12f77b688a1e70cc6281414366d3f6b9e99e39d5."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8da132dbbde0ca295f7f02f494b0cd3b2c18e81d", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/8da132dbbde0ca295f7f02f494b0cd3b2c18e81d", "committedDate": "2020-01-02T21:08:49Z", "message": "Fix bug causing previously commented out code to work. Add aria properties to new span field."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84455d4ab548706550771aa2660ddd2e34e66633", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/84455d4ab548706550771aa2660ddd2e34e66633", "committedDate": "2020-01-02T22:27:16Z", "message": "fix case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3887602ded78176480626489046144ea3f91863f", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/3887602ded78176480626489046144ea3f91863f", "committedDate": "2020-01-03T01:05:20Z", "message": "fix git command to check for ignored files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2291853c9ee7574532f861ebe862a4e05e207a20", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/2291853c9ee7574532f861ebe862a4e05e207a20", "committedDate": "2020-01-03T01:23:24Z", "message": "rename gitignore variables to accurately represent exclude-standard functionality"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4MjMxMTk5", "url": "https://github.com/rstudio/rstudio/pull/5954#pullrequestreview-338231199", "createdAt": "2020-01-03T19:14:43Z", "commit": {"oid": "2291853c9ee7574532f861ebe862a4e05e207a20"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxOToxNDo0M1rOFaHT1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxOTozMDo1MlrOFaHoow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyNzA2MA==", "bodyText": "Would it be simpler to use boost::algorithm::replace_all here?", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r362927060", "createdAt": "2020-01-03T19:14:43Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -975,20 +977,44 @@ struct ReplaceOptions\n       replacePattern(\"\")\n    {}\n \n-   ReplaceOptions(std::string replace, bool useGitIgnore) :\n+   ReplaceOptions(std::string replace) :\n       empty(false),\n       preview(false),\n-      useGitIgnore(useGitIgnore),\n       replacePattern(replace)\n    {}\n \n    bool empty;\n    bool preview;\n-   bool useGitIgnore;\n \n    const std::string replacePattern;\n };\n \n+core::Error createGitExclusionString(const FilePath& dirPath, std::string* pResultString)\n+{\n+   shell_utils::ShellCommand cmd(\"git\");\n+   cmd << \"-C\";\n+   cmd << string_utils::utf8ToSystem(dirPath.getAbsolutePath());\n+   cmd << \"ls-files\";\n+   cmd << \"-i\";\n+   cmd << \"--exclude-standard\";\n+\n+   core::system::ProcessResult result;\n+   core::system::ProcessOptions options;\n+\n+   core::Error error = runCommand(cmd,\n+                                  options,\n+                                  &result);\n+   if (error)\n+      return error;\n+\n+   *pResultString = result.stdOut;\n+   size_t splitAt;\n+   while ((splitAt = pResultString->find('\\n')) != pResultString->npos)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2291853c9ee7574532f861ebe862a4e05e207a20"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyNzk0Nw==", "bodyText": "getString() can throw when the Value is not a string, so for safety would recommend testing and skipping non-string values in the array (realize this is unlikely but the consequence of an exception here is a full session crash!)", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r362927947", "createdAt": "2020-01-03T19:17:13Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1060,12 +1086,33 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n       cmd << \"--include=\" + filePattern.getString();\n    }\n \n-   cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n-\n-\n    // Filepaths received from the client will be UTF-8 encoded;\n    // convert to system encoding here.\n    FilePath dirPath = module_context::resolveAliasedPath(grepOptions.directory);\n+   for (json::Value filePattern : grepOptions.excludeFilePatterns)\n+   {\n+      // to retrieve the git exclusions, we run a git command and parse the output\n+      if (filePattern.getString().compare(\"gitExclusions\") == 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2291853c9ee7574532f861ebe862a4e05e207a20"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyODU3OA==", "bodyText": "Should this be [] since the function returns an array?", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r362928578", "createdAt": "2020-01-03T19:18:59Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -104,6 +100,18 @@ private native JsArrayString getFilePatternsNative() /*-{\n          return this.filePatterns;\n       }-*/;\n \n+      public final String[] getExcludeFilePatterns()\n+      {\n+         return JsUtil.toStringArray(getExcludeFilePatternsNative());\n+      }\n+\n+      private native JsArrayString getExcludeFilePatternsNative() /*-{\n+\n+         if (!this.excludeFilePatterns)\n+            this.excludeFilePatterns=\"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2291853c9ee7574532f861ebe862a4e05e207a20"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyODkyNg==", "bodyText": "Nit: for very complicated reasons, we prefer StringUtil.equals (GWT has actually changed the way string comparison works between releases!)", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r362928926", "createdAt": "2020-01-03T19:20:07Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -203,12 +225,26 @@ protected State collectInput()\n             list.add(trimmedPattern);\n       }\n \n+      String excludeFilePatterns =\n+         listPresetExcludeFilePatterns_.getValue(\n+               listPresetExcludeFilePatterns_.getSelectedIndex());\n+      if (excludeFilePatterns == \"custom\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2291853c9ee7574532f861ebe862a4e05e207a20"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkzMjM4Nw==", "bodyText": "ls-files can return an unbounded amount of output, but most operating systems have a pretty small bound on the size of a shell command, which is a recipe for trouble here since we're trying to add every line to the command. This could cause us to fail when there are a lot of ignored files with long paths.", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r362932387", "createdAt": "2020-01-03T19:30:52Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1060,12 +1086,33 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n       cmd << \"--include=\" + filePattern.getString();\n    }\n \n-   cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n-\n-\n    // Filepaths received from the client will be UTF-8 encoded;\n    // convert to system encoding here.\n    FilePath dirPath = module_context::resolveAliasedPath(grepOptions.directory);\n+   for (json::Value filePattern : grepOptions.excludeFilePatterns)\n+   {\n+      // to retrieve the git exclusions, we run a git command and parse the output\n+      if (filePattern.getString().compare(\"gitExclusions\") == 0)\n+      {\n+         std::string excludeGitExclusion;\n+         error = createGitExclusionString(dirPath, &excludeGitExclusion);\n+         if (error)\n+            return error;\n+\n+         std::istringstream stream(excludeGitExclusion);\n+         std::vector<std::string> results((std::istream_iterator<std::string>(stream)),\n+            std::istream_iterator<std::string>());\n+         for (std::string filePattern : results)\n+         {\n+            filePattern.insert(0, dirPath.getAbsolutePath() + \"/\");\n+            cmd << \"--exclude=\" + filePattern;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2291853c9ee7574532f861ebe862a4e05e207a20"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "860bf4815925bf3201042e8f802fceb401568345", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/860bf4815925bf3201042e8f802fceb401568345", "committedDate": "2020-01-03T21:17:23Z", "message": "refactor code to meet standards"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58b96168fa59d05f184f49cb8fd5f6022ac79076", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/58b96168fa59d05f184f49cb8fd5f6022ac79076", "committedDate": "2020-01-06T21:19:00Z", "message": "use `git grep` when excluding standard git exclusions to prevent an unbounded amount of output"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "811df569ee0f5428e9b2b8bc06318009e31e65a5", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/811df569ee0f5428e9b2b8bc06318009e31e65a5", "committedDate": "2020-01-06T20:28:31Z", "message": "alert user if they try to use git exclusions when outside of a git respository"}, "afterCommit": {"oid": "58b96168fa59d05f184f49cb8fd5f6022ac79076", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/58b96168fa59d05f184f49cb8fd5f6022ac79076", "committedDate": "2020-01-06T21:19:00Z", "message": "use `git grep` when excluding standard git exclusions to prevent an unbounded amount of output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "186008596e64425c0221491401034e2c0a165763", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/186008596e64425c0221491401034e2c0a165763", "committedDate": "2020-01-06T22:04:31Z", "message": "use `git grep` when excluding standard git exclusions to prevent an unbounded amount of output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc6fee43759e81cdc1a3b9246c9ee86e24ee076b", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/fc6fee43759e81cdc1a3b9246c9ee86e24ee076b", "committedDate": "2020-01-06T23:43:08Z", "message": "Merge branch 'feature/replace-git-ignore' of https://github.com/rstudio/rstudio into feature/replace-git-ignore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c829f1fe60fc4346daeb1935eff69026ae3a8f50", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/c829f1fe60fc4346daeb1935eff69026ae3a8f50", "committedDate": "2020-01-07T00:44:26Z", "message": "remove extra function declaration (wip)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe0b89d58f71fcb6c5c14f2fbadb3e6d82f7101a", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/fe0b89d58f71fcb6c5c14f2fbadb3e6d82f7101a", "committedDate": "2020-01-08T00:43:53Z", "message": "make Find in Files functional with `git grep`\n- standard output from `git grep` differs from `grep` and this needs to be accounted for when\n  parsing our results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdcbdf49cb58f41d626c3fe5f9285760514d4d75", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/bdcbdf49cb58f41d626c3fe5f9285760514d4d75", "committedDate": "2020-01-08T01:45:46Z", "message": "update FindInFilesState to save data related to replace previews on pause\n- also made updateFrequency_ in progress const bc it shouldn't change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b372f221c12f11fd9bf7febe7846c63390161292", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/b372f221c12f11fd9bf7febe7846c63390161292", "committedDate": "2020-01-08T01:42:47Z", "message": "update FindInFilesState to save data related to replace previews on pause\n- also made updateFrequency_ in progress const bc it shouldn't change"}, "afterCommit": {"oid": "bdcbdf49cb58f41d626c3fe5f9285760514d4d75", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/bdcbdf49cb58f41d626c3fe5f9285760514d4d75", "committedDate": "2020-01-08T01:45:46Z", "message": "update FindInFilesState to save data related to replace previews on pause\n- also made updateFrequency_ in progress const bc it shouldn't change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "113f6900220f3171af9780a6085b175423e33c1e", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/113f6900220f3171af9780a6085b175423e33c1e", "committedDate": "2020-01-08T21:24:22Z", "message": "add unit tests for regexes used to parse stdout results\n- move regex retrieval to SessionFind.hpp\n- also fix bug where exclude no longer worked with git grep,\n  and never worked when multiple patterns were requested\n- renamed some existing unit test variables to match standards"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9bc3002923a6245ba7ed69321c878f073fd6b9ac", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/9bc3002923a6245ba7ed69321c878f073fd6b9ac", "committedDate": "2020-01-09T00:11:55Z", "message": "update state name to prevent errors with adding new data to the find in files state"}, "afterCommit": {"oid": "7803a4ddae43b2883f67c182e49fbe561a9bf002", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/7803a4ddae43b2883f67c182e49fbe561a9bf002", "committedDate": "2020-01-08T22:59:15Z", "message": "update the UI so a user cannot input file patterns when using git exclusions\nas git grep doesn't have an equivalent to grep's --include"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4c94d03c45ebe6eebed798d04158a094e24575c", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/e4c94d03c45ebe6eebed798d04158a094e24575c", "committedDate": "2020-01-09T19:07:11Z", "message": "update the UI so a user cannot input file patterns when using git exclusions\nas git grep doesn't have an equivalent to grep's --include"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7803a4ddae43b2883f67c182e49fbe561a9bf002", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/7803a4ddae43b2883f67c182e49fbe561a9bf002", "committedDate": "2020-01-08T22:59:15Z", "message": "update the UI so a user cannot input file patterns when using git exclusions\nas git grep doesn't have an equivalent to grep's --include"}, "afterCommit": {"oid": "e4c94d03c45ebe6eebed798d04158a094e24575c", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/e4c94d03c45ebe6eebed798d04158a094e24575c", "committedDate": "2020-01-09T19:07:11Z", "message": "update the UI so a user cannot input file patterns when using git exclusions\nas git grep doesn't have an equivalent to grep's --include"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "becfd6961fc5f344369c4320e560952ca4a82cae", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/becfd6961fc5f344369c4320e560952ca4a82cae", "committedDate": "2020-01-09T19:08:39Z", "message": "remove old comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMzMwNjcx", "url": "https://github.com/rstudio/rstudio/pull/5954#pullrequestreview-341330671", "createdAt": "2020-01-10T18:04:14Z", "commit": {"oid": "becfd6961fc5f344369c4320e560952ca4a82cae"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODowNDoxNFrOFcbzdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODoxMDoxOVrOFcb86A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1OTk4OA==", "bodyText": "Naming: retrieve usually implies \"fetch from somewhere\" -- would suggest getFileLine... or just fileLine...", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r365359988", "createdAt": "2020-01-10T18:04:14Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1257,6 +1344,26 @@ core::Error initialize()\n    return initBlock.execute();\n }\n \n+boost::regex retrieveFileLineNumberLineRegex(bool gitFlag)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "becfd6961fc5f344369c4320e560952ca4a82cae"}, "originalPosition": 394}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2MjQwOA==", "bodyText": "Because we now require git to make this work, selecting this option is always going to result in an error if (a) git is not installed, or (b) the directory to search is not a git repo. How do you feel about hiding or disabling it up front in these cases? (Both are pretty easy to deduce, and (a) is part of SessionInfo so would be an easy change)", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r365362408", "createdAt": "2020-01-10T18:10:19Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.ui.xml", "diffHunk": "@@ -56,6 +55,20 @@\n             <span ui:field=\"spanPatternExample_\" class=\"{style.example}\">Example: *.R, *.r, *.csv. Separate multiple types with commas.</span>\n          </div>\n       </p>\n+\n+      <p><rw:FormLabel ui:field=\"labelExcludeFilePatterns_\" text=\"Exclude these files:\"/>\n+         <g:ListBox ui:field=\"listPresetExcludeFilePatterns_\"\n+                    styleName=\"{style.presetFilePatterns}\">\n+            <g:item value=\"\">None</g:item>\n+            <g:item value=\"gitExclusions\">Standard Git exclusions</g:item>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "becfd6961fc5f344369c4320e560952ca4a82cae"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7dec99b9d8b96d946cf768f637cc8ef79979f5b", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/f7dec99b9d8b96d946cf768f637cc8ef79979f5b", "committedDate": "2020-01-10T22:15:07Z", "message": "rename functions using retrieve because we are not fetching\nupdate include/exclude file patterns to use enums for readability\ndisable the Git option when git is not installed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "730d6520888f53207075ac99e4815f705dbcbcf0", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/730d6520888f53207075ac99e4815f705dbcbcf0", "committedDate": "2020-01-10T22:15:24Z", "message": "fix issue where in rare cases ReplaceOperationEndedEvent wasn't getting called and the progress bar\nwas visible after the replace had completed\n- removed code unnsuccesfully trying to fix this"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "395ca23a264350cade327bbb2f6896f33bab06c7", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/395ca23a264350cade327bbb2f6896f33bab06c7", "committedDate": "2020-01-13T22:39:28Z", "message": "disable Standard Git Exclusions selection when git is not installed or a git repo isn't selected\nadd value change handler to Find In Files directory chooser, on changes check if the new directory\nis a git repository and if git is installed\nadd new Files Server operation to check if a directory is a git directory"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjA2MTMx", "url": "https://github.com/rstudio/rstudio/pull/5954#pullrequestreview-342206131", "createdAt": "2020-01-13T23:22:18Z", "commit": {"oid": "395ca23a264350cade327bbb2f6896f33bab06c7"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzoyMjoxOFrOFdH2Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzoyNDo0MlrOFdH5FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4MTU5NA==", "bodyText": "Nit: GWT has automatic unboxing so this could be simplified to dialog.setGitStatus(isGitDirectory)", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366081594", "createdAt": "2020-01-13T23:22:18Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java", "diffHunk": "@@ -509,6 +525,33 @@ public void onResponseReceived(String handle)\n          }\n       });\n \n+      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+         @Override\n+         public void onValueChange(ValueChangeEvent<String> event)\n+         {\n+            fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                   new ServerRequestCallback<Boolean>() {\n+               @Override\n+               public void onResponseReceived(Boolean isGitDirectory)\n+               {\n+                  if (isGitDirectory)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395ca23a264350cade327bbb2f6896f33bab06c7"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4MjMyNA==", "bodyText": "Maybe we should only add this value change handler when session_.getSessionInfo().isVcsAvailable is true? (otherwise there's no point as we'd never show git options)", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366082324", "createdAt": "2020-01-13T23:24:42Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java", "diffHunk": "@@ -509,6 +525,33 @@ public void onResponseReceived(String handle)\n          }\n       });\n \n+      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395ca23a264350cade327bbb2f6896f33bab06c7"}, "originalPosition": 154}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/6cd4082277d1c3d5eb1ec0619b085777d1578ca4", "committedDate": "2020-01-14T00:15:52Z", "message": "only check if a directory is a git directory if git is installed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyODA5MjIw", "url": "https://github.com/rstudio/rstudio/pull/5954#pullrequestreview-342809220", "createdAt": "2020-01-14T20:13:01Z", "commit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMDoxMzowMVrOFdkbdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyODoyMFrOFdmWew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU0OTg3Nw==", "bodyText": "Does gitFlag_ only mean find in files excluding standard git exclusions, or does it have other implications?", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366549877", "createdAt": "2020-01-14T20:13:01Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -195,13 +205,15 @@ class FindInFilesState : public boost::noncopyable\n                     const std::string& input,\n                     const std::string& path,\n                     bool asRegex,\n-                    bool ignoreCase)\n+                    bool ignoreCase,\n+                    bool gitFlag)\n    {\n       handle_ = handle;\n       input_ = input;\n       path_ = path;\n       regex_ = asRegex;\n       ignoreCase_ = ignoreCase;\n+      gitFlag_ = gitFlag;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU1MDUyNg==", "bodyText": "Why do things which can be paused need to be tracked via JSON and things which don't don't?", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366550526", "createdAt": "2020-01-14T20:14:38Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -327,9 +348,12 @@ class FindInFilesState : public boost::noncopyable\n    bool running_;\n    bool replace_;\n    bool preview_;\n+   bool gitFlag_;\n    std::string replacePattern_;\n    json::Array replaceMatchOns_;\n-   json::Array replaceMatchOffs_;\n+   json::Array replaceMatchOffs_; \n+   // this is not tracked via json because it exclusively applies to replaces (not previews)\n+   // which can not currently be paused", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU1MzI5Nw==", "bodyText": "I think there should be a check here to ensure that there are at least 3 match values. If there aren't this line will cause a crash.", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366553297", "createdAt": "2020-01-14T20:21:09Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -535,7 +559,8 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n          nUtf8CharactersProcessed += charSize;\n \n          // update the match state\n-         if (match[1] == \"01\")\n+         if ((match[2] == \"1\" && findResults().gitFlag()) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU1NDYyOA==", "bodyText": "Do we need to check that match.size() > 1 here, or are we guaranteed that there are at least two entries if regex_utils::match returns true?", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366554628", "createdAt": "2020-01-14T20:24:12Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -786,10 +811,16 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n \n          errorMessage.clear();\n          boost::smatch match;\n-         if (regex_utils::match(line, match, boost::regex(\"^((?:[a-zA-Z]:)?[^:]+):(\\\\d+):(.*)\")))\n+         if (regex_utils::match(\n+               line, match, getFileLineNumberLineRegex(findResults().gitFlag())))\n          {\n             std::string file = module_context::createAliasedPath(\n                   FilePath(string_utils::systemToUtf8(match[1])));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU1NDkwNA==", "bodyText": "What is the purpose of this block?", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366554904", "createdAt": "2020-01-14T20:24:54Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -786,10 +811,16 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n \n          errorMessage.clear();\n          boost::smatch match;\n-         if (regex_utils::match(line, match, boost::regex(\"^((?:[a-zA-Z]:)?[^:]+):(\\\\d+):(.*)\")))\n+         if (regex_utils::match(\n+               line, match, getFileLineNumberLineRegex(findResults().gitFlag())))\n          {\n             std::string file = module_context::createAliasedPath(\n                   FilePath(string_utils::systemToUtf8(match[1])));\n+            if (findResults().gitFlag())\n+            {\n+               file.insert(0, \"/\");\n+               file.insert(0, findResults().path());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU1OTg5Ng==", "bodyText": "I know there are some shared options between  git and regular grep, but I think this might be cleaner if there was a section that set up cmd completely for git grep and a separate section that set up cmd completely for regular grep. You could put the shared options into named variables so that if they need to be changed later you still only have to update them in one place.", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366559896", "createdAt": "2020-01-14T20:37:21Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1055,18 +1130,25 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n    if (!grepOptions.asRegex)\n       cmd << \"-F\";\n \n-   for (json::Value filePattern : grepOptions.filePatterns)\n+   if (!gitFlag)\n    {\n-      cmd << \"--include=\" + filePattern.getString();\n+      for (json::Value filePattern : grepOptions.filePatterns)\n+      {\n+         cmd << \"--include=\" + filePattern.getString();\n+      }\n+      for (std::string arg : excludeArgs)\n+         cmd << arg;\n+      cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n+      cmd << string_utils::utf8ToSystem(dirPath.getAbsolutePath());\n+   }\n+   else\n+   {\n+      for (json::Value filePattern : grepOptions.filePatterns)\n+      {\n+         cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n+         cmd << filePattern.getString();\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4"}, "originalPosition": 274}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU2NDk5Mg==", "bodyText": "Would it make sense for gitFlag to belong to the GrepOptions struct?", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366564992", "createdAt": "2020-01-14T20:49:10Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1081,7 +1163,8 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n                              grepOptions.searchPattern,\n                              grepOptions.directory,\n                              grepOptions.asRegex,\n-                             grepOptions.ignoreCase);\n+                             grepOptions.ignoreCase,\n+                             gitFlag);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4"}, "originalPosition": 293}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU2NTY0NQ==", "bodyText": "Is there ever a case where we construct a LocalProgress with a different update frequency? If not, what do you think about making kUpdatePercent a static const member of LocalProgress?", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366565645", "createdAt": "2020-01-14T20:50:52Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1181,16 +1267,17 @@ core::Error completeReplace(const json::JsonRpcRequest& request,\n                                   &ignoreCase,\n                                   &directory,\n                                   &filePatterns,\n+                                  &excludeFilePatterns,\n                                   &originalFindCount,\n-                                  &replacePattern,\n-                                  &useGitIgnore);\n+                                  &replacePattern);\n    if (error)\n       return error;\n \n    static const int kUpdatePercent = 5;\n    LocalProgress* pProgress = new LocalProgress(originalFindCount, kUpdatePercent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4"}, "originalPosition": 381}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3NTg4Nw==", "bodyText": "Nit: could you rename this includeFilePatterns to mirror excludeFilePatterns, as well as other occurrences? I think that would make it a bit clearer when just glancing over the code.", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366575887", "createdAt": "2020-01-14T21:15:43Z", "author": {"login": "MariaSemple"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -58,15 +62,15 @@ public static native State createState(String query,\n                                              String path,\n                                              boolean regex,\n                                              boolean caseSensitive,\n-                                             boolean gitIgnore,\n-                                             JsArrayString filePatterns) /*-{\n+                                             JsArrayString filePatterns,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU4MTM3MQ==", "bodyText": "We discussed on slack renaming this to getGrepOutputRegex.", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366581371", "createdAt": "2020-01-14T21:28:20Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.hpp", "diffHunk": "@@ -31,6 +31,10 @@ core::json::Object findInFilesStateAsJson();\n \n core::Error initialize();\n \n+boost::regex getFileLineNumberLineRegex(bool gitFlag);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "837672d7049b6189d4dad40fc216d29375274ecb", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/837672d7049b6189d4dad40fc216d29375274ecb", "committedDate": "2020-01-14T23:05:09Z", "message": "refactor git grep changes for readability and bug fix\n- fix potential bug when regex doesn't return 3 matches\n- remame filePatterns to includeFilePatterns for clarity\n- create grep/git grep commands separately\n- renamed function to parse grep output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d8f27b4fa882783175980dc41ee422bcf3bf688", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/2d8f27b4fa882783175980dc41ee422bcf3bf688", "committedDate": "2020-01-15T00:50:49Z", "message": "add safety check and add comment for clarity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92ffa58d85cbd32f1a69ecb397dbe0bbb51fb677", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/92ffa58d85cbd32f1a69ecb397dbe0bbb51fb677", "committedDate": "2020-01-15T01:11:30Z", "message": "fix initialization of excludeFilePatterns, ignore some files in .gitignore, improve accessibility\n\nrefactor createGitIgnoreString, make string include every .gitignore file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5893773badcfa073c810d8a490903428d5fe03c8", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/5893773badcfa073c810d8a490903428d5fe03c8", "committedDate": "2020-01-15T01:11:35Z", "message": "fix case\n\nfix git command to check for ignored files\n\nrename gitignore variables to accurately represent exclude-standard functionality\n\nrefactor code to meet standards"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d9b24f7249afa25497042255eaf98f433d02102", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/3d9b24f7249afa25497042255eaf98f433d02102", "committedDate": "2020-01-15T01:11:43Z", "message": "use `git grep` when excluding standard git exclusions to prevent an unbounded amount of output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5da1169b3d97a2f1c9e74c498b6aba824ea92a4", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/d5da1169b3d97a2f1c9e74c498b6aba824ea92a4", "committedDate": "2020-01-15T01:11:55Z", "message": "make Find in Files functional with `git grep`\n- standard output from `git grep` differs from `grep` and this needs to be accounted for when\n  parsing our results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78018841564840c4ae777dc5018d68543e6b897c", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/78018841564840c4ae777dc5018d68543e6b897c", "committedDate": "2020-01-15T01:11:55Z", "message": "update FindInFilesState to save data related to replace previews on pause\n- also made updateFrequency_ in progress const bc it shouldn't change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e01cd01dbb68041ee6b3bd293e11f3a86fe9d4ed", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/e01cd01dbb68041ee6b3bd293e11f3a86fe9d4ed", "committedDate": "2020-01-15T01:11:55Z", "message": "add unit tests for regexes used to parse stdout results\n- move regex retrieval to SessionFind.hpp\n- also fix bug where exclude no longer worked with git grep,\n  and never worked when multiple patterns were requested\n- renamed some existing unit test variables to match standards"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7000138961795e830f72eb19637f310bef436e3f", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/7000138961795e830f72eb19637f310bef436e3f", "committedDate": "2020-01-15T01:11:55Z", "message": "update the UI so a user cannot input file patterns when using git exclusions\nas git grep doesn't have an equivalent to grep's --include"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1473d510d7f510a8e03a774f509b385ab457a322", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/1473d510d7f510a8e03a774f509b385ab457a322", "committedDate": "2020-01-15T01:11:55Z", "message": "rename functions using retrieve because we are not fetching\nupdate include/exclude file patterns to use enums for readability\ndisable the Git option when git is not installed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29c5a50ff304c9c5299d19f7f3aab400943a4f34", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/29c5a50ff304c9c5299d19f7f3aab400943a4f34", "committedDate": "2020-01-15T01:11:55Z", "message": "fix issue where in rare cases ReplaceOperationEndedEvent wasn't getting called and the progress bar\nwas visible after the replace had completed\n- removed code unnsuccesfully trying to fix this"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "383f3f50077970e7376f619324eacb9b1a047ead", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/383f3f50077970e7376f619324eacb9b1a047ead", "committedDate": "2020-01-15T01:11:55Z", "message": "disable Standard Git Exclusions selection when git is not installed or a git repo isn't selected\nadd value change handler to Find In Files directory chooser, on changes check if the new directory\nis a git repository and if git is installed\nadd new Files Server operation to check if a directory is a git directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6822b2d9b1e080539f54ea89b12d25b287f500d3", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/6822b2d9b1e080539f54ea89b12d25b287f500d3", "committedDate": "2020-01-15T01:11:55Z", "message": "only check if a directory is a git directory if git is installed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "890eec1e0e8103dfd3cb37807128f600430bffe7", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/890eec1e0e8103dfd3cb37807128f600430bffe7", "committedDate": "2020-01-15T01:11:55Z", "message": "refactor git grep changes for readability and bug fix\n- fix potential bug when regex doesn't return 3 matches\n- remame filePatterns to includeFilePatterns for clarity\n- create grep/git grep commands separately\n- renamed function to parse grep output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3820db91167b139d1192d21763d0004a0b9858c5", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/3820db91167b139d1192d21763d0004a0b9858c5", "committedDate": "2020-01-15T01:11:55Z", "message": "add safety check and add comment for clarity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8feea1c5ed1cba80a31decabe75c8aa732691c6", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/c8feea1c5ed1cba80a31decabe75c8aa732691c6", "committedDate": "2020-01-16T19:24:26Z", "message": "Merge branch 'feature/replace-git-ignore' of https://github.com/rstudio/rstudio into feature/replace-git-ignore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0beef751656ddf7e66329446c1e499f2c8ef8090", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/0beef751656ddf7e66329446c1e499f2c8ef8090", "committedDate": "2020-01-16T20:23:40Z", "message": "move excludeFilePatterns derivatives into GrepOptions and switch GrepOptions to a class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MTk1NzU0", "url": "https://github.com/rstudio/rstudio/pull/5954#pullrequestreview-344195754", "createdAt": "2020-01-16T20:31:06Z", "commit": {"oid": "0beef751656ddf7e66329446c1e499f2c8ef8090"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMDozMTowNlrOFemnhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMDozMTowNlrOFemnhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYzNDMwOQ==", "bodyText": "Nit: no need to return a const bool since you're returning by-value rather than by-reference.", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r367634309", "createdAt": "2020-01-16T20:31:06Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -987,26 +987,93 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n \n } // namespace\n \n-struct GrepOptions\n+class GrepOptions : public boost::noncopyable\n {\n+public:\n+\n    GrepOptions(std::string search, std::string directory,\n       json::Array includeFilePatterns, json::Array excludeFilePatterns,\n       bool asRegex, bool ignoreCase) :\n-      asRegex(asRegex),\n-      ignoreCase(ignoreCase),\n-      searchPattern(search),\n-      directory(directory),\n-      includeFilePatterns(includeFilePatterns),\n-      excludeFilePatterns(excludeFilePatterns)\n-   {}\n+      asRegex_(asRegex),\n+      ignoreCase_(ignoreCase),\n+      searchPattern_(search),\n+      directory_(directory),\n+      includeFilePatterns_(includeFilePatterns),\n+      excludeFilePatterns_(excludeFilePatterns)\n+   {\n+      processExcludeFilePatterns();\n+   }\n+\n+   const bool asRegex() const\n+   {\n+      return asRegex_;\n+   }\n \n-   bool asRegex;\n-   bool ignoreCase;\n+   const bool ignoreCase() const\n+   {\n+      return ignoreCase_;\n+   }\n+\n+   const std::string& searchPattern() const\n+   {\n+      return searchPattern_;\n+   }\n+\n+   const std::string& directory() const\n+   {\n+      return directory_;\n+   }\n+\n+   const json::Array& includeFilePatterns() const\n+   {\n+      return includeFilePatterns_;\n+   }\n+\n+   const json::Array& excludeFilePatterns() const\n+   {\n+      return excludeFilePatterns_;\n+   }\n+\n+   const bool gitFlag() const", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0beef751656ddf7e66329446c1e499f2c8ef8090"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MTk1OTM0", "url": "https://github.com/rstudio/rstudio/pull/5954#pullrequestreview-344195934", "createdAt": "2020-01-16T20:31:23Z", "commit": {"oid": "0beef751656ddf7e66329446c1e499f2c8ef8090"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "318bfb8f512c55574dbbe004480b19b966e03004", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/318bfb8f512c55574dbbe004480b19b966e03004", "committedDate": "2020-01-16T20:35:39Z", "message": "remove const when returning by-value"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 409, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}