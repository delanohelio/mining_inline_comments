{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDU1NDM1", "number": 803, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMDo1ODoxNlrOEiD-kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMTowNDozMlrOEiEGTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTUyMjA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/eplanning/EplanningBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMDo1ODoxNlrOHPuN8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMDo1ODoxNlrOHPuN8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI0NzkyMQ==", "bodyText": "Pls extract request.getApp() to separate variable since it is used several times in method.", "url": "https://github.com/prebid/prebid-server-java/pull/803#discussion_r486247921", "createdAt": "2020-09-10T10:58:16Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/eplanning/EplanningBidder.java", "diffHunk": "@@ -193,19 +195,45 @@ private String resolveRequestUri(BidRequest request, List<String> requestsString\n         final String pageUrl = site != null && StringUtils.isNotBlank(site.getPage())\n                 ? site.getPage() : DEFAULT_PAGE_URL;\n \n-        String uri = endpointUrl + String.format(\"/%s/%s/%s/%s?ct=1&r=pbs&ncb=1&ur=%s&e=%s\",\n-                clientId, DFP_CLIENT_ID, pageDomain, SEC, HttpUtil.encodeUrl(pageUrl),\n-                String.join(\"+\", requestsStrings));\n+        final String requestTarget = request.getApp() != null && StringUtils.isNotBlank(request.getApp().getBundle())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b39429f12be5956060cf0bce529290690ad874"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTUzNTYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/eplanning/EplanningBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMTowMjoyOFrOHPuWbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMTowMjoyOFrOHPuWbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI1MDA5Mw==", "bodyText": "Would it be better if we get a small refactoring for fetching the value like:\nfinal String buyeruid = user != null ? user.getBuyeruid() : null;\nthen just replace current condition with buyeruid != null.\nBut up to you.", "url": "https://github.com/prebid/prebid-server-java/pull/803#discussion_r486250093", "createdAt": "2020-09-10T11:02:28Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/eplanning/EplanningBidder.java", "diffHunk": "@@ -193,19 +195,45 @@ private String resolveRequestUri(BidRequest request, List<String> requestsString\n         final String pageUrl = site != null && StringUtils.isNotBlank(site.getPage())\n                 ? site.getPage() : DEFAULT_PAGE_URL;\n \n-        String uri = endpointUrl + String.format(\"/%s/%s/%s/%s?ct=1&r=pbs&ncb=1&ur=%s&e=%s\",\n-                clientId, DFP_CLIENT_ID, pageDomain, SEC, HttpUtil.encodeUrl(pageUrl),\n-                String.join(\"+\", requestsStrings));\n+        final String requestTarget = request.getApp() != null && StringUtils.isNotBlank(request.getApp().getBundle())\n+                ? request.getApp().getBundle()\n+                : pageDomain;\n+\n+        final String uri = endpointUrl + String.format(\"/%s/%s/%s/%s\", clientId, DFP_CLIENT_ID, requestTarget, SEC);\n+\n+        final URIBuilder uriBuilder = new URIBuilder()\n+                .setPath(uri)\n+                .addParameter(\"r\", \"pbs\")\n+                .addParameter(\"ncb\", \"1\");\n+\n+        if (request.getApp() == null) {\n+            uriBuilder.addParameter(\"ur\", pageUrl);\n+        }\n+        uriBuilder.addParameter(\"e\", String.join(\"+\", requestsStrings));\n \n         final User user = request.getUser();\n         if (user != null && StringUtils.isNotBlank(user.getBuyeruid())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b39429f12be5956060cf0bce529290690ad874"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTU0MTkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/eplanning/EplanningBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMTowNDozMlrOHPuaNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMTowNDozMlrOHPuaNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI1MTA2MA==", "bodyText": "We need to safe query string values with StringUtils.stripToNull(..) to avoid null as value.\nPls check all added (and existing) params.", "url": "https://github.com/prebid/prebid-server-java/pull/803#discussion_r486251060", "createdAt": "2020-09-10T11:04:32Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/eplanning/EplanningBidder.java", "diffHunk": "@@ -193,19 +195,45 @@ private String resolveRequestUri(BidRequest request, List<String> requestsString\n         final String pageUrl = site != null && StringUtils.isNotBlank(site.getPage())\n                 ? site.getPage() : DEFAULT_PAGE_URL;\n \n-        String uri = endpointUrl + String.format(\"/%s/%s/%s/%s?ct=1&r=pbs&ncb=1&ur=%s&e=%s\",\n-                clientId, DFP_CLIENT_ID, pageDomain, SEC, HttpUtil.encodeUrl(pageUrl),\n-                String.join(\"+\", requestsStrings));\n+        final String requestTarget = request.getApp() != null && StringUtils.isNotBlank(request.getApp().getBundle())\n+                ? request.getApp().getBundle()\n+                : pageDomain;\n+\n+        final String uri = endpointUrl + String.format(\"/%s/%s/%s/%s\", clientId, DFP_CLIENT_ID, requestTarget, SEC);\n+\n+        final URIBuilder uriBuilder = new URIBuilder()\n+                .setPath(uri)\n+                .addParameter(\"r\", \"pbs\")\n+                .addParameter(\"ncb\", \"1\");\n+\n+        if (request.getApp() == null) {\n+            uriBuilder.addParameter(\"ur\", pageUrl);\n+        }\n+        uriBuilder.addParameter(\"e\", String.join(\"+\", requestsStrings));\n \n         final User user = request.getUser();\n         if (user != null && StringUtils.isNotBlank(user.getBuyeruid())) {\n-            uri = uri + String.format(\"&uid=%s\", user.getBuyeruid());\n+            uriBuilder.addParameter(\"uid\", user.getBuyeruid());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b39429f12be5956060cf0bce529290690ad874"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3964, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}