{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMjg5MjI3", "number": 1053, "title": "Review conversant adapter", "bodyText": "Follows up #972 & #1050", "createdAt": "2020-12-04T05:07:53Z", "url": "https://github.com/prebid/prebid-server-java/pull/1053", "merged": true, "mergeCommit": {"oid": "271b2013ebe6ba20d7e4e127fe14d2c6ac1235c9"}, "closed": true, "closedAt": "2020-12-07T10:56:01Z", "author": {"login": "snahornyi"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiy0kcAH2gAyNTMyMjg5MjI3OjllODgyNmEyMDRjMDRiOTZkMmUwMTZiYjU3NzE4MDZhODVlMGZkNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdjy-rdAFqTU0NjAxNDY5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9e8826a204c04b96d2e016bb5771806a85e0fd76", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/9e8826a204c04b96d2e016bb5771806a85e0fd76", "committedDate": "2020-12-04T07:43:20Z", "message": "Review conversant adapter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ea1732641f1a0657b0fdc043c220dc8b18e0c5f", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/7ea1732641f1a0657b0fdc043c220dc8b18e0c5f", "committedDate": "2020-12-04T05:06:08Z", "message": "Review conversant adapter"}, "afterCommit": {"oid": "9e8826a204c04b96d2e016bb5771806a85e0fd76", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/9e8826a204c04b96d2e016bb5771806a85e0fd76", "committedDate": "2020-12-04T07:43:20Z", "message": "Review conversant adapter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80de8d2ecb6f6438c54a41daa856ea592a68a99b", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/80de8d2ecb6f6438c54a41daa856ea592a68a99b", "committedDate": "2020-12-04T10:43:42Z", "message": "Pos set logic update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "967693ad1ef7281a2e161e2c5636cfeee9caf230", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/967693ad1ef7281a2e161e2c5636cfeee9caf230", "committedDate": "2020-12-04T14:40:55Z", "message": "Fixes after review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MDE5OTk3", "url": "https://github.com/prebid/prebid-server-java/pull/1053#pullrequestreview-545019997", "createdAt": "2020-12-04T14:45:01Z", "commit": {"oid": "967693ad1ef7281a2e161e2c5636cfeee9caf230"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MDIyMzU0", "url": "https://github.com/prebid/prebid-server-java/pull/1053#pullrequestreview-545022354", "createdAt": "2020-12-04T14:47:45Z", "commit": {"oid": "967693ad1ef7281a2e161e2c5636cfeee9caf230"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDo0Nzo0NVrOH_UGUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTo0OTowMlrOH_jNtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE1MTYzMg==", "bodyText": "I also noticed that changes, but kept them as it is, bc it was from the start of this bidder.\n@rpanchyk  what you say ?", "url": "https://github.com/prebid/prebid-server-java/pull/1053#discussion_r536151632", "createdAt": "2020-12-04T14:47:45Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/conversant/ConversantBidder.java", "diffHunk": "@@ -130,97 +129,105 @@ private static App updateApp(App app, String siteId) {\n     }\n \n     private static Imp modifyImp(Imp imp, ExtImpConversant impExt) {\n-        final BigDecimal extBidfloor = impExt.getBidfloor();\n-        final String extTagId = impExt.getTagId();\n-        final Integer extSecure = impExt.getSecure();\n-        final boolean shouldChangeSecure = extSecure != null && (imp.getSecure() == null || imp.getSecure() == 0);\n-        final Banner impBanner = imp.getBanner();\n-        final Integer extPosition = impExt.getPosition();\n-        final Video impVideo = imp.getVideo();\n+        final Banner banner = imp.getBanner();\n+        final Video video = imp.getVideo();\n \n         return imp.toBuilder()\n                 .displaymanager(DISPLAY_MANAGER)\n                 .displaymanagerver(DISPLAY_MANAGER_VER)\n-                .banner(modifyBanner(impBanner, extPosition))\n-                .bidfloor(extBidfloor != null ? extBidfloor : imp.getBidfloor())\n-                .tagid(extTagId != null ? extTagId : imp.getTagid())\n-                .secure(shouldChangeSecure ? extSecure : imp.getSecure())\n-                .video(impVideo != null && impBanner == null ? modifyVideo(impVideo, impExt) : impVideo)\n+                .bidfloor(impExt.getBidfloor())\n+                .tagid(impExt.getTagId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967693ad1ef7281a2e161e2c5636cfeee9caf230"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM4OTc0Nw==", "bodyText": "not necessary. In go the don't have null", "url": "https://github.com/prebid/prebid-server-java/pull/1053#discussion_r536389747", "createdAt": "2020-12-04T21:27:59Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/conversant/ConversantBidder.java", "diffHunk": "@@ -115,7 +114,7 @@ private ExtImpConversant parseImpExt(Imp imp, int impIndex) {\n             throw new PreBidException(String.format(\"Impression[%d] missing ext.bidder object\", impIndex));\n         }\n \n-        if (StringUtils.isBlank(extImp.getSiteId())) {\n+        if (StringUtils.isEmpty(extImp.getSiteId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967693ad1ef7281a2e161e2c5636cfeee9caf230"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM5NDk1Mg==", "bodyText": "Put this method above modify video", "url": "https://github.com/prebid/prebid-server-java/pull/1053#discussion_r536394952", "createdAt": "2020-12-04T21:39:35Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/conversant/ConversantBidder.java", "diffHunk": "@@ -130,97 +129,105 @@ private static App updateApp(App app, String siteId) {\n     }\n \n     private static Imp modifyImp(Imp imp, ExtImpConversant impExt) {\n-        final BigDecimal extBidfloor = impExt.getBidfloor();\n-        final String extTagId = impExt.getTagId();\n-        final Integer extSecure = impExt.getSecure();\n-        final boolean shouldChangeSecure = extSecure != null && (imp.getSecure() == null || imp.getSecure() == 0);\n-        final Banner impBanner = imp.getBanner();\n-        final Integer extPosition = impExt.getPosition();\n-        final Video impVideo = imp.getVideo();\n+        final Banner banner = imp.getBanner();\n+        final Video video = imp.getVideo();\n \n         return imp.toBuilder()\n                 .displaymanager(DISPLAY_MANAGER)\n                 .displaymanagerver(DISPLAY_MANAGER_VER)\n-                .banner(modifyBanner(impBanner, extPosition))\n-                .bidfloor(extBidfloor != null ? extBidfloor : imp.getBidfloor())\n-                .tagid(extTagId != null ? extTagId : imp.getTagid())\n-                .secure(shouldChangeSecure ? extSecure : imp.getSecure())\n-                .video(impVideo != null && impBanner == null ? modifyVideo(impVideo, impExt) : impVideo)\n+                .bidfloor(impExt.getBidfloor())\n+                .tagid(impExt.getTagId())\n+                .secure(getSecure(imp, impExt))\n+                .banner(modifyBanner(banner, impExt.getPosition()))\n+                .video(video != null && banner == null ? modifyVideo(video, impExt) : video)\n                 .build();\n     }\n \n+    private static Integer getSecure(Imp imp, ExtImpConversant impExt) {\n+        final Integer extSecure = impExt.getSecure();\n+        final Integer impSecure = imp.getSecure();\n+\n+        return extSecure != null && (impSecure == null || impSecure == 0) ? extSecure : impSecure;\n+    }\n+\n     private static Banner modifyBanner(Banner impBanner, Integer extPosition) {\n-        return impBanner == null || extPosition == null\n-                ? impBanner\n+        return impBanner == null\n+                ? null\n                 : impBanner.toBuilder()\n-                .pos(AD_POSITIONS.contains(extPosition) ? extPosition : null)\n+                .pos(isValidPosition(extPosition) ? extPosition : null)\n                 .build();\n     }\n \n     private static Video modifyVideo(Video video, ExtImpConversant impExt) {\n         final List<String> extMimes = impExt.getMimes();\n-        final Integer extMaxduration = impExt.getMaxduration();\n+        final Integer extMaxDuration = impExt.getMaxduration();\n         final Integer extPosition = impExt.getPosition();\n-        final List<Integer> extProtocols = impExt.getProtocols();\n-        final List<Integer> extApi = impExt.getApi();\n         return video.toBuilder()\n-                .mimes(extMimes != null ? extMimes : video.getMimes())\n-                .maxduration(extMaxduration != null ? extMaxduration : video.getMaxduration())\n-                .pos(makePosition(extPosition, video.getPos()))\n-                .api(makeApi(extApi, video.getApi()))\n-                .protocols(makeProtocols(extProtocols, video.getProtocols()))\n+                .mimes(CollectionUtils.isNotEmpty(extMimes) ? extMimes : video.getMimes())\n+                .maxduration(extMaxDuration != null ? extMaxDuration : video.getMaxduration())\n+                .pos(isValidPosition(extPosition) ? extPosition : null)\n+                .api(makeApi(impExt.getApi(), video.getApi()))\n+                .protocols(makeProtocols(impExt.getProtocols(), video.getProtocols()))\n                 .build();\n     }\n \n-    private static Integer makePosition(Integer position, Integer videoPos) {\n-        return isValidPosition(position) ? position : isValidPosition(videoPos) ? videoPos : null;\n-    }\n-\n     private static boolean isValidPosition(Integer position) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967693ad1ef7281a2e161e2c5636cfeee9caf230"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM5OTI4NA==", "bodyText": "didn't see that check", "url": "https://github.com/prebid/prebid-server-java/pull/1053#discussion_r536399284", "createdAt": "2020-12-04T21:49:02Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/conversant/ConversantBidder.java", "diffHunk": "@@ -130,97 +129,105 @@ private static App updateApp(App app, String siteId) {\n     }\n \n     private static Imp modifyImp(Imp imp, ExtImpConversant impExt) {\n-        final BigDecimal extBidfloor = impExt.getBidfloor();\n-        final String extTagId = impExt.getTagId();\n-        final Integer extSecure = impExt.getSecure();\n-        final boolean shouldChangeSecure = extSecure != null && (imp.getSecure() == null || imp.getSecure() == 0);\n-        final Banner impBanner = imp.getBanner();\n-        final Integer extPosition = impExt.getPosition();\n-        final Video impVideo = imp.getVideo();\n+        final Banner banner = imp.getBanner();\n+        final Video video = imp.getVideo();\n \n         return imp.toBuilder()\n                 .displaymanager(DISPLAY_MANAGER)\n                 .displaymanagerver(DISPLAY_MANAGER_VER)\n-                .banner(modifyBanner(impBanner, extPosition))\n-                .bidfloor(extBidfloor != null ? extBidfloor : imp.getBidfloor())\n-                .tagid(extTagId != null ? extTagId : imp.getTagid())\n-                .secure(shouldChangeSecure ? extSecure : imp.getSecure())\n-                .video(impVideo != null && impBanner == null ? modifyVideo(impVideo, impExt) : impVideo)\n+                .bidfloor(impExt.getBidfloor())\n+                .tagid(impExt.getTagId())\n+                .secure(getSecure(imp, impExt))\n+                .banner(modifyBanner(banner, impExt.getPosition()))\n+                .video(video != null && banner == null ? modifyVideo(video, impExt) : video)\n                 .build();\n     }\n \n+    private static Integer getSecure(Imp imp, ExtImpConversant impExt) {\n+        final Integer extSecure = impExt.getSecure();\n+        final Integer impSecure = imp.getSecure();\n+\n+        return extSecure != null && (impSecure == null || impSecure == 0) ? extSecure : impSecure;\n+    }\n+\n     private static Banner modifyBanner(Banner impBanner, Integer extPosition) {\n-        return impBanner == null || extPosition == null\n-                ? impBanner\n+        return impBanner == null\n+                ? null\n                 : impBanner.toBuilder()\n-                .pos(AD_POSITIONS.contains(extPosition) ? extPosition : null)\n+                .pos(isValidPosition(extPosition) ? extPosition : null)\n                 .build();\n     }\n \n     private static Video modifyVideo(Video video, ExtImpConversant impExt) {\n         final List<String> extMimes = impExt.getMimes();\n-        final Integer extMaxduration = impExt.getMaxduration();\n+        final Integer extMaxDuration = impExt.getMaxduration();\n         final Integer extPosition = impExt.getPosition();\n-        final List<Integer> extProtocols = impExt.getProtocols();\n-        final List<Integer> extApi = impExt.getApi();\n         return video.toBuilder()\n-                .mimes(extMimes != null ? extMimes : video.getMimes())\n-                .maxduration(extMaxduration != null ? extMaxduration : video.getMaxduration())\n-                .pos(makePosition(extPosition, video.getPos()))\n-                .api(makeApi(extApi, video.getApi()))\n-                .protocols(makeProtocols(extProtocols, video.getProtocols()))\n+                .mimes(CollectionUtils.isNotEmpty(extMimes) ? extMimes : video.getMimes())\n+                .maxduration(extMaxDuration != null ? extMaxDuration : video.getMaxduration())\n+                .pos(isValidPosition(extPosition) ? extPosition : null)\n+                .api(makeApi(impExt.getApi(), video.getApi()))\n+                .protocols(makeProtocols(impExt.getProtocols(), video.getProtocols()))\n                 .build();\n     }\n \n-    private static Integer makePosition(Integer position, Integer videoPos) {\n-        return isValidPosition(position) ? position : isValidPosition(videoPos) ? videoPos : null;\n-    }\n-\n     private static boolean isValidPosition(Integer position) {\n         return position != null && AD_POSITIONS.contains(position);\n     }\n \n     private static List<Integer> makeApi(List<Integer> extApi, List<Integer> videoApi) {\n-        final List<Integer> protocols = CollectionUtils.isNotEmpty(extApi) ? extApi : videoApi;\n-        return CollectionUtils.isNotEmpty(protocols)\n-                ? protocols.stream().filter(APIS::contains).collect(Collectors.toList()) : videoApi;\n+        final List<Integer> api = CollectionUtils.isNotEmpty(extApi) ? extApi : videoApi;\n+        return CollectionUtils.isNotEmpty(api)\n+                ? api.stream().filter(APIS::contains).collect(Collectors.toList())\n+                : videoApi;\n     }\n \n     private static List<Integer> makeProtocols(List<Integer> extProtocols, List<Integer> videoProtocols) {\n         final List<Integer> protocols = CollectionUtils.isNotEmpty(extProtocols) ? extProtocols : videoProtocols;\n         return CollectionUtils.isNotEmpty(protocols)\n-                ? protocols.stream().filter(PROTOCOLS::contains).collect(Collectors.toList()) : videoProtocols;\n+                ? protocols.stream().filter(PROTOCOLS::contains).collect(Collectors.toList())\n+                : videoProtocols;\n     }\n \n     @Override\n     public Result<List<BidderBid>> makeBids(HttpCall<BidRequest> httpCall, BidRequest bidRequest) {\n         try {\n-            final BidResponse bidResponse = mapper.decodeValue(httpCall.getResponse().getBody(), BidResponse.class);\n-            return Result.withValues(extractBids(httpCall.getRequest().getPayload(), bidResponse));\n-        } catch (DecodeException | PreBidException e) {\n+            return Result.withValues(extractBids(httpCall));\n+        } catch (PreBidException e) {\n             return Result.withError(BidderError.badServerResponse(e.getMessage()));\n         }\n     }\n \n-    private static List<BidderBid> extractBids(BidRequest bidRequest, BidResponse bidResponse) {\n+    private List<BidderBid> extractBids(HttpCall<BidRequest> httpCall) {\n+        final BidResponse bidResponse;\n+        try {\n+            bidResponse = mapper.decodeValue(httpCall.getResponse().getBody(), BidResponse.class);\n+        } catch (DecodeException e) {\n+            throw new PreBidException(String.format(\"bad server response: %s. \", e.getMessage()));\n+        }\n         if (bidResponse == null || CollectionUtils.isEmpty(bidResponse.getSeatbid())) {\n             throw new PreBidException(\"Empty bid request\");\n         }\n-        return bidsFromResponse(bidRequest, bidResponse);\n+        return bidsFromResponse(httpCall.getRequest().getPayload(), bidResponse);\n     }\n \n     private static List<BidderBid> bidsFromResponse(BidRequest bidRequest, BidResponse bidResponse) {\n         final SeatBid firstSeatBid = bidResponse.getSeatbid().get(0);\n-        return firstSeatBid.getBid().stream()\n+        final List<Bid> bids = firstSeatBid.getBid();\n+\n+        if (CollectionUtils.isEmpty(bids)) {\n+            throw new PreBidException(\"Empty bids array\");\n+        }\n+        return bids.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967693ad1ef7281a2e161e2c5636cfeee9caf230"}, "originalPosition": 182}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MzIzMDc5", "url": "https://github.com/prebid/prebid-server-java/pull/1053#pullrequestreview-545323079", "createdAt": "2020-12-04T21:52:18Z", "commit": {"oid": "967693ad1ef7281a2e161e2c5636cfeee9caf230"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTo1MjoxOFrOH_jaog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTo1MjoxOFrOH_jaog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwMjU5NA==", "bodyText": "redundant", "url": "https://github.com/prebid/prebid-server-java/pull/1053#discussion_r536402594", "createdAt": "2020-12-04T21:52:18Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/bidder/conversant/ConversantBidderTest.java", "diffHunk": "@@ -449,8 +506,11 @@ public void makeBidsShouldReturnErrorIfResponseBodyCouldNotBeParsed() {\n \n         // then\n         assertThat(result.getErrors()).hasSize(1);\n-        assertThat(result.getErrors().get(0).getMessage()).startsWith(\"Failed to decode: Unrecognized token\");\n         assertThat(result.getErrors().get(0).getType()).isEqualTo(BidderError.Type.bad_server_response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967693ad1ef7281a2e161e2c5636cfeee9caf230"}, "originalPosition": 232}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "490c5eae69289b33bb39623cc4a3b56591d7460f", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/490c5eae69289b33bb39623cc4a3b56591d7460f", "committedDate": "2020-12-06T08:14:53Z", "message": "Fixes after review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NzA5OTkx", "url": "https://github.com/prebid/prebid-server-java/pull/1053#pullrequestreview-545709991", "createdAt": "2020-12-06T14:16:48Z", "commit": {"oid": "490c5eae69289b33bb39623cc4a3b56591d7460f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MDE0Njk1", "url": "https://github.com/prebid/prebid-server-java/pull/1053#pullrequestreview-546014695", "createdAt": "2020-12-07T10:28:18Z", "commit": {"oid": "490c5eae69289b33bb39623cc4a3b56591d7460f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2960, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}