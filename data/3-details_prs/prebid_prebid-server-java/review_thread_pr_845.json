{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzODk4ODA1", "number": 845, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMzowNTo0OFrOE9oKag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjozMzowNVrOFFkFxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDU2NjE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/proto/openrtb/ext/response/BidType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMzowNTo0OFrOH6apmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMzowNTo0OFrOH6apmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAxNjA5MQ==", "bodyText": "Can be transformed to ternary operation.", "url": "https://github.com/prebid/prebid-server-java/pull/845#discussion_r531016091", "createdAt": "2020-11-26T13:05:48Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/proto/openrtb/ext/response/BidType.java", "diffHunk": "@@ -8,5 +8,12 @@\n     video,\n     audio,\n     @JsonProperty(\"native\")\n-    xNative\n+    xNative;\n+\n+    public String getName() {\n+        if (this == xNative) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9737e3dc81604611cb90343da40961f5be104a9a"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDU2ODMwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/auction/AmpRequestFactoryTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMzowNjoyOFrOH6aq-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMzowNjoyOFrOH6aq-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAxNjQ0MQ==", "bodyText": "Do we need to test price granularity here?", "url": "https://github.com/prebid/prebid-server-java/pull/845#discussion_r531016441", "createdAt": "2020-11-26T13:06:28Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/auction/AmpRequestFactoryTest.java", "diffHunk": "@@ -308,6 +309,55 @@ public void shouldReturnBidRequestWithIncludeWinnersFromStoredBidRequest() {\n                 .containsExactly(false);\n     }\n \n+    @Test\n+    public void shouldReturnBidRequestWithDefaultIncludeFormatIfStoredBidRequestExtTargetingHasNoIncludeFormat() {\n+        // given\n+        givenBidRequest(\n+                builder -> builder\n+                        .ext(givenRequestExt(\n+                                ExtRequestTargeting.builder()\n+                                        .pricegranularity(mapper.createObjectNode().put(\"foo\", \"bar\"))\n+                                        .build())),\n+                Imp.builder().build());\n+\n+        // when\n+        final BidRequest request = factory.fromRequest(routingContext, 0L).result().getBidRequest();\n+\n+        // then\n+        assertThat(singletonList(request))\n+                .extracting(BidRequest::getExt).isNotNull()\n+                .extracting(ExtRequest::getPrebid)\n+                .extracting(ExtRequestPrebid::getTargeting)\n+                .extracting(ExtRequestTargeting::getIncludeformat, ExtRequestTargeting::getPricegranularity)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9737e3dc81604611cb90343da40961f5be104a9a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDcwNTYxOnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/prebid/server/it/amp/test-appnexus-bid-request.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMzo0MjozMlrOH6b9Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMzo0MjozMlrOH6b9Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAzNzUwNw==", "bodyText": "Do we want to add defaulting value in bidder request if incoming includeformat flag is not defined?", "url": "https://github.com/prebid/prebid-server-java/pull/845#discussion_r531037507", "createdAt": "2020-11-26T13:42:32Z", "author": {"login": "rpanchyk"}, "path": "src/test/resources/org/prebid/server/it/amp/test-appnexus-bid-request.json", "diffHunk": "@@ -81,7 +81,8 @@\n           ]\n         },\n         \"includewinners\": true,\n-        \"includebidderkeys\": true\n+        \"includebidderkeys\": true,\n+        \"includeformat\" : false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9737e3dc81604611cb90343da40961f5be104a9a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzc4NTAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjozMzowNVrOIGInSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjozMzowNVrOIGInSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwMzQ5OQ==", "bodyText": "Can we use BooleanUtils.isTrue(..) instead?", "url": "https://github.com/prebid/prebid-server-java/pull/845#discussion_r543303499", "createdAt": "2020-12-15T12:33:05Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java", "diffHunk": "@@ -247,6 +266,9 @@ private static PriceGranularity convertToCustomPriceGranularity(String stringPri\n             keywordMap.put(HB_CACHE_HOST_KEY, cacheHost);\n             keywordMap.put(HB_CACHE_PATH_KEY, cachePath);\n         }\n+        if (StringUtils.isNotBlank(format) && BooleanUtils.toBooleanDefaultIfNull(includeFormat, false)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1ee7a71f98a6b4c10cfabdfb006a3835513b40e"}, "originalPosition": 121}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3995, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}