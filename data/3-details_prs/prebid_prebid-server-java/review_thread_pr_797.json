{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NzYwMDI2", "number": 797, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTo0Nzo1MVrOEM9DJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTo1MjoyOFrOEM9KFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDE4NTk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTo0Nzo1MVrOGvXPLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTo0Nzo1MVrOGvXPLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMxNjk3Mg==", "bodyText": "Pls consider this way:\n        final List<BidderBid> mostValuableBids = impIdToBidderBid.values().stream()\n                .map(BidResponseCreator::mostValuableBid)\n                .collect(Collectors.toList());\n\n        responseBidderBids.retainAll(mostValuableBids);", "url": "https://github.com/prebid/prebid-server-java/pull/797#discussion_r452316972", "createdAt": "2020-07-09T15:47:51Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "diffHunk": "@@ -188,6 +192,35 @@ private ExtBidResponse toExtBidResponse(List<BidderResponse> bidderResponses, Au\n                 ExtBidResponsePrebid.of(auctionTimestamp));\n     }\n \n+    private static void removeRedundantBids(BidderResponse bidderResponse) {\n+        final List<BidderBid> responseBidderBids = bidderResponse.getSeatBid().getBids();\n+        final Map<String, List<BidderBid>> impIdToBidderBid = responseBidderBids.stream()\n+                .collect(Collectors.groupingBy(bidderBid -> bidderBid.getBid().getImpid()));\n+\n+        final List<BidderBid> bidsForRemoval = impIdToBidderBid.values().stream()\n+                .peek(bidderBids -> bidderBids.remove(mostValuableBid(bidderBids)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a407ca3f311a6c52ae654a5763349c286ad5a772"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDE5NDg5OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/auction/BidResponseCreatorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTo1MDoxNlrOGvXVAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTo1MDoxNlrOGvXVAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMxODQ2Nw==", "bodyText": "Just a thought. i1 is slightly hard to read ;-)\nUsually we use imp1, etc.", "url": "https://github.com/prebid/prebid-server-java/pull/797#discussion_r452318467", "createdAt": "2020-07-09T15:50:16Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/auction/BidResponseCreatorTest.java", "diffHunk": "@@ -385,7 +386,7 @@ public void shouldSetNbrNullAndPopulateSeatbidWhenAtLeastOneBidIsPresent() {\n         // given\n         final AuctionContext auctionContext = givenAuctionContext(givenBidRequest());\n \n-        final Bid bid = Bid.builder().build();\n+        final Bid bid = Bid.builder().impid(\"i1\").build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a407ca3f311a6c52ae654a5763349c286ad5a772"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDIwMzc1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/auction/BidResponseCreatorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTo1MjoyOFrOGvXaqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTo1MjoyOFrOGvXaqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMxOTkxNQ==", "bodyText": "Pls fix typo in Equeal.", "url": "https://github.com/prebid/prebid-server-java/pull/797#discussion_r452319915", "createdAt": "2020-07-09T15:52:28Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/auction/BidResponseCreatorTest.java", "diffHunk": "@@ -484,6 +487,47 @@ public void shouldSetExpectedResponseSeatBidAndBidFields() {\n         verify(cacheService, never()).cacheBidsOpenrtb(anyList(), anyList(), any(), any(), any(), any());\n     }\n \n+    @Test\n+    public void shouldFilterByDealsAndPriceBidsWhenImpIdsAreEqueal() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a407ca3f311a6c52ae654a5763349c286ad5a772"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3960, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}