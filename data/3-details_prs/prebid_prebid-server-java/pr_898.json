{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5OTAyMjA2", "number": 898, "title": "Add video support for GumGumBidder", "bodyText": "", "createdAt": "2020-09-04T17:21:33Z", "url": "https://github.com/prebid/prebid-server-java/pull/898", "merged": true, "mergeCommit": {"oid": "b29af632fcbcbaba80bb42f8286b1491cf520d31"}, "closed": true, "closedAt": "2020-09-23T14:35:26Z", "author": {"login": "AndriyPavlyuk"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFogxHgH2gAyNDc5OTAyMjA2OjZlYzY5YTJhMzNiNTc5Mjc5ZjljMDQ0YWNlNzU3OGNhOTM4Y2U3YWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLtifOAFqTQ5NDcyNzk2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6ec69a2a33b579279f9c044ace7578ca938ce7af", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/6ec69a2a33b579279f9c044ace7578ca938ce7af", "committedDate": "2020-09-04T17:18:51Z", "message": "Add video support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTMxNTEw", "url": "https://github.com/prebid/prebid-server-java/pull/898#pullrequestreview-493531510", "createdAt": "2020-09-22T14:37:07Z", "commit": {"oid": "6ec69a2a33b579279f9c044ace7578ca938ce7af"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNDozNzowN1rOHV9XJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNDozNzowN1rOHV9XJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc4NzQ5Mw==", "bodyText": "Seems we need builder for video.\nUsually, creating of builder is expensive operation for performance, pls avoid if possible.", "url": "https://github.com/prebid/prebid-server-java/pull/898#discussion_r492787493", "createdAt": "2020-09-22T14:37:07Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -138,26 +154,47 @@ private static Site modifySite(Site site, String trackingId) {\n     public Result<List<BidderBid>> makeBids(HttpCall<BidRequest> httpCall, BidRequest bidRequest) {\n         try {\n             final BidResponse bidResponse = mapper.decodeValue(httpCall.getResponse().getBody(), BidResponse.class);\n-            return Result.of(extractBids(bidResponse), Collections.emptyList());\n+            return Result.of(extractBids(bidResponse, bidRequest), Collections.emptyList());\n         } catch (DecodeException | PreBidException e) {\n             return Result.emptyWithError(BidderError.badServerResponse(e.getMessage()));\n         }\n     }\n \n-    private static List<BidderBid> extractBids(BidResponse bidResponse) {\n+    private static List<BidderBid> extractBids(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse == null || bidResponse.getSeatbid() == null\n                 ? Collections.emptyList()\n-                : bidsFromResponse(bidResponse);\n+                : bidsFromResponse(bidResponse, bidRequest);\n     }\n \n-    private static List<BidderBid> bidsFromResponse(BidResponse bidResponse) {\n+    private static List<BidderBid> bidsFromResponse(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse.getSeatbid().stream()\n                 .map(SeatBid::getBid)\n                 .flatMap(Collection::stream)\n-                .map(bid -> BidderBid.of(bid, BidType.banner, DEFAULT_BID_CURRENCY))\n+                .map(bid -> toBidderBid(bid, bidRequest, bidResponse.getCur()))\n                 .collect(Collectors.toList());\n     }\n \n+    private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n+        final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n+        final Bid.BidBuilder bidBuilder = bid.toBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ec69a2a33b579279f9c044ace7578ca938ce7af"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af619d3d4b4a1f4dc2b698b06cf38329b13f3bc3", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/af619d3d4b4a1f4dc2b698b06cf38329b13f3bc3", "committedDate": "2020-09-22T16:31:09Z", "message": "Remove builder for bid"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNjk4NTI5", "url": "https://github.com/prebid/prebid-server-java/pull/898#pullrequestreview-493698529", "createdAt": "2020-09-22T17:38:14Z", "commit": {"oid": "af619d3d4b4a1f4dc2b698b06cf38329b13f3bc3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNzozODoxNVrOHWFSVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNzozOTowNVrOHWFUPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkxNzMzMg==", "bodyText": "What is happen if the field will be null?\nSeems we need to fix the case for all mentioned fields here.", "url": "https://github.com/prebid/prebid-server-java/pull/898#discussion_r492917332", "createdAt": "2020-09-22T17:38:15Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -127,6 +135,13 @@ private static Imp modifyImp(Imp imp) {\n         return imp;\n     }\n \n+    private void validateVideoParams(Video video) {\n+        if (video.getW() == 0 || video.getH() == 0 || video.getMinduration() == 0 || video.getMaxduration() == 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af619d3d4b4a1f4dc2b698b06cf38329b13f3bc3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkxNzgyMA==", "bodyText": "Pls combine this condition with upper one.", "url": "https://github.com/prebid/prebid-server-java/pull/898#discussion_r492917820", "createdAt": "2020-09-22T17:39:05Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -138,26 +153,45 @@ private static Site modifySite(Site site, String trackingId) {\n     public Result<List<BidderBid>> makeBids(HttpCall<BidRequest> httpCall, BidRequest bidRequest) {\n         try {\n             final BidResponse bidResponse = mapper.decodeValue(httpCall.getResponse().getBody(), BidResponse.class);\n-            return Result.of(extractBids(bidResponse), Collections.emptyList());\n+            return Result.of(extractBids(bidResponse, bidRequest), Collections.emptyList());\n         } catch (DecodeException | PreBidException e) {\n             return Result.emptyWithError(BidderError.badServerResponse(e.getMessage()));\n         }\n     }\n \n-    private static List<BidderBid> extractBids(BidResponse bidResponse) {\n+    private static List<BidderBid> extractBids(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse == null || bidResponse.getSeatbid() == null\n                 ? Collections.emptyList()\n-                : bidsFromResponse(bidResponse);\n+                : bidsFromResponse(bidResponse, bidRequest);\n     }\n \n-    private static List<BidderBid> bidsFromResponse(BidResponse bidResponse) {\n+    private static List<BidderBid> bidsFromResponse(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse.getSeatbid().stream()\n                 .map(SeatBid::getBid)\n                 .flatMap(Collection::stream)\n-                .map(bid -> BidderBid.of(bid, BidType.banner, DEFAULT_BID_CURRENCY))\n+                .map(bid -> toBidderBid(bid, bidRequest, bidResponse.getCur()))\n                 .collect(Collectors.toList());\n     }\n \n+    private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n+        final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n+        final Bid updatedBid = bidType == BidType.video\n+                ? bid.toBuilder().adm(bid.getAdm().replace(\"${AUCTION_PRICE}\", String.valueOf(bid.getPrice()))).build()\n+                : bid;\n+        return BidderBid.of(updatedBid, bidType, currency);\n+    }\n+\n+    private static BidType getMediaType(String impId, List<Imp> requestImps) {\n+        for (Imp imp : requestImps) {\n+            if (imp.getId().equals(impId)) {\n+                if (imp.getBanner() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af619d3d4b4a1f4dc2b698b06cf38329b13f3bc3"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18fdab628e59205f1eeb98975f8fd7525c3c4f6a", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/18fdab628e59205f1eeb98975f8fd7525c3c4f6a", "committedDate": "2020-09-22T19:37:54Z", "message": "Fix video fields validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NTA2NzIz", "url": "https://github.com/prebid/prebid-server-java/pull/898#pullrequestreview-494506723", "createdAt": "2020-09-23T10:13:52Z", "commit": {"oid": "18fdab628e59205f1eeb98975f8fd7525c3c4f6a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDoxMzo1MlrOHWjXHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDoxMzo1MlrOHWjXHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQxMDA3OQ==", "bodyText": "It is to cryptic to see. May be it will be better to add universal method like positiveOrNull(..) for each param.\nThen in condition below we can compare with NULL only.", "url": "https://github.com/prebid/prebid-server-java/pull/898#discussion_r493410079", "createdAt": "2020-09-23T10:13:52Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -127,6 +135,20 @@ private static Imp modifyImp(Imp imp) {\n         return imp;\n     }\n \n+    private void validateVideoParams(Video video) {\n+        final Integer w = video.getW();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18fdab628e59205f1eeb98975f8fd7525c3c4f6a"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2728086b6eaffbab4b62e4ee136f2a2c84309679", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/2728086b6eaffbab4b62e4ee136f2a2c84309679", "committedDate": "2020-09-23T11:56:54Z", "message": "Refactor of validateVideoParameters method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d5da3f2a771a651e0e4fcac658dc2d2650bd383", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/9d5da3f2a771a651e0e4fcac658dc2d2650bd383", "committedDate": "2020-09-23T14:32:09Z", "message": "Clean code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NzI3OTYy", "url": "https://github.com/prebid/prebid-server-java/pull/898#pullrequestreview-494727962", "createdAt": "2020-09-23T14:33:48Z", "commit": {"oid": "9d5da3f2a771a651e0e4fcac658dc2d2650bd383"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2990, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}