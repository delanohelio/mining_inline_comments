{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMTI3Mzc5", "number": 585, "title": "Rubicon rewarded video", "bodyText": "Add support of rewarded videos for Rubicon Bidder\n-Updated Rubicon Bidder\n-Tests added\n-Video Type added", "createdAt": "2020-01-15T13:05:06Z", "url": "https://github.com/prebid/prebid-server-java/pull/585", "merged": true, "mergeCommit": {"oid": "57382c199b84b3493f24d59d9a36a047a7e108b2"}, "closed": true, "closedAt": "2020-02-05T13:20:48Z", "author": {"login": "Hilson78"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6ExIIgH2gAyMzYzMTI3Mzc5OmEwMTU1NzI1MDk3ODNkZjcyZWEwODUxZDM0ZDI5Yjg0YmIzNzA3NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBWB6AAFqTM1MzcwNzQ2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a015572509783df72ea0851d34d29b84bb370745", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/a015572509783df72ea0851d34d29b84bb370745", "committedDate": "2020-01-13T23:15:49Z", "message": "Add VideoType on Video\n\n-Develop\n-Tests added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6860d1d36b019f8ba501d4c23ec0841bcefeef3", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/c6860d1d36b019f8ba501d4c23ec0841bcefeef3", "committedDate": "2020-01-14T08:35:21Z", "message": "Add VideoType on Video\n\n-Develop\n-Tests added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c3124271c0827dfad46c297ccf778ff607e2868", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/1c3124271c0827dfad46c297ccf778ff607e2868", "committedDate": "2020-01-14T12:20:20Z", "message": "Rubicon Bidder\n\n-Tests\n-bug fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDUwMTQ1", "url": "https://github.com/prebid/prebid-server-java/pull/585#pullrequestreview-345050145", "createdAt": "2020-01-20T01:57:53Z", "commit": {"oid": "1c3124271c0827dfad46c297ccf778ff607e2868"}, "state": "DISMISSED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMTo1Nzo1M1rOFfSBMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMjowODowNVrOFfSF2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0NTM5Mg==", "bodyText": "Since we no longer use ExtImpRubicon as a type for map keys, we should rename the map to something like impToImpExt. Please correct other cases as well.", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368345392", "createdAt": "2020-01-20T01:57:53Z", "author": {"login": "RossGoncharuk"}, "path": "src/main/java/org/prebid/server/bidder/rubicon/RubiconBidder.java", "diffHunk": "@@ -213,11 +216,13 @@ private static boolean useFirstPartyData(BidRequest bidRequest) {\n         return CollectionUtils.isNotEmpty(bidders); // this contains only current bidder\n     }\n \n-    private static Map<Imp, ExtImpRubicon> parseRubiconImpExts(List<Imp> imps, List<BidderError> errors) {\n-        final Map<Imp, ExtImpRubicon> impToRubiconExt = new HashMap<>();\n+    private static Map<Imp, ExtPrebid<ExtImpPrebid, ExtImpRubicon>> parseRubiconImpExts(\n+            List<Imp> imps, List<BidderError> errors\n+    ) {\n+        final Map<Imp, ExtPrebid<ExtImpPrebid, ExtImpRubicon>> impToRubiconExt = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c3124271c0827dfad46c297ccf778ff607e2868"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0NTkxMg==", "bodyText": "Please remove an extra blank line after last variable declaration. There should be an empty line after last symbol in each .java class, which in 99% cases is a closing curly bracket of the class.", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368345912", "createdAt": "2020-01-20T02:02:04Z", "author": {"login": "RossGoncharuk"}, "path": "src/main/java/org/prebid/server/bidder/rubicon/proto/RubiconVideoExt.java", "diffHunk": "@@ -12,4 +14,8 @@\n     Integer skipdelay;\n \n     RubiconVideoExtRp rp;\n+\n+    @JsonProperty(\"videotype\")\n+    VideoType videoType;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c3124271c0827dfad46c297ccf778ff607e2868"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0NjM2MQ==", "bodyText": "This annotation is redundant, since if it is missing Jason will resolve camel case naming (typical Java variable name) into snake case - which is going to be exactly is_rewarded_inventory. So you can skip the annotation when variable name is resolved as expected .json property name.", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368346361", "createdAt": "2020-01-20T02:06:07Z", "author": {"login": "RossGoncharuk"}, "path": "src/main/java/org/prebid/server/proto/openrtb/ext/request/ExtImpPrebid.java", "diffHunk": "@@ -29,4 +29,16 @@\n      */\n     @JsonProperty(\"storedbidresponse\")\n     List<ExtStoredBidResponse> storedBidResponse;\n+\n+    /**\n+     * Defines the contract for bidrequest.imp[i].ext.prebid.is_rewarded_inventory\n+     */\n+    @JsonProperty(\"is_rewarded_inventory\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c3124271c0827dfad46c297ccf778ff607e2868"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0NjU4NA==", "bodyText": "Please add a //given inline commentary for a block of test where you declare variables or set up stubs.\nCheck other missing cases. Thanks!", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368346584", "createdAt": "2020-01-20T02:08:05Z", "author": {"login": "RossGoncharuk"}, "path": "src/test/java/org/prebid/server/bidder/rubicon/RubiconBidderTest.java", "diffHunk": "@@ -332,9 +334,86 @@ public void makeHttpRequestsShouldFillVideoExt() {\n                 .extracting(Imp::getVideo).doesNotContainNull()\n                 .extracting(Video::getExt).doesNotContainNull()\n                 .extracting(ext -> mapper.treeToValue(ext, RubiconVideoExt.class))\n-                .containsOnly(RubiconVideoExt.of(5, 10, RubiconVideoExtRp.of(14)));\n+                .containsOnly(RubiconVideoExt.of(5, 10, RubiconVideoExtRp.of(14), null));\n     }\n \n+    @Test\n+    public void makeHttpRequestsShouldFillVideoExtAndAddVideoType() {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c3124271c0827dfad46c297ccf778ff607e2868"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35f7e4e0a4080456b4f16dba2a8db0ab39207897", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/35f7e4e0a4080456b4f16dba2a8db0ab39207897", "committedDate": "2020-01-20T07:26:45Z", "message": "Fixed minor code style issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MzQyMDg2", "url": "https://github.com/prebid/prebid-server-java/pull/585#pullrequestreview-345342086", "createdAt": "2020-01-20T14:24:53Z", "commit": {"oid": "35f7e4e0a4080456b4f16dba2a8db0ab39207897"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDoyNDo1NFrOFff8ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNToyNDo0M1rOFfhx-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU3MzU0MA==", "bodyText": "Please, inline this variable since it is needed only for video impression.", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368573540", "createdAt": "2020-01-20T14:24:54Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/rubicon/RubiconBidder.java", "diffHunk": "@@ -289,15 +297,18 @@ private static String tkXintValue(BidRequest bidRequest) {\n         }\n     }\n \n-    private Imp makeImp(Imp imp, ExtImpRubicon rubiconImpExt, Site site, App app, boolean useFirstPartyData) {\n+    private Imp makeImp(Imp imp, ExtPrebid<ExtImpPrebid, ExtImpRubicon> ext,\n+                        Site site, App app, boolean useFirstPartyData) {\n+        final ExtImpRubicon rubiconImpExt = ext.getBidder();\n+        final ExtImpPrebid prebidImpExt = ext.getPrebid();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7e4e0a4080456b4f16dba2a8db0ab39207897"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU4OTEwNA==", "bodyText": "The rubiconVideoParams should not impact on result Video.\nPls notice this:\nfinal VideoType videoType = prebidImpExt != null\n        && BooleanUtils.isTrue(prebidImpExt.getIsRewardedInventory()) ? VideoType.REWARDED : null;\n\nif (rubiconVideoParams == null && videoType == null) {\n    return video;\n}\n\nfinal Integer skip = rubiconVideoParams != null ? rubiconVideoParams.getSkip() : null;\nfinal Integer skipDelay = rubiconVideoParams != null ? rubiconVideoParams.getSkipdelay() : null;\nfinal Integer sizeId = rubiconVideoParams != null ? rubiconVideoParams.getSizeId() : null;\nreturn video.toBuilder()\n        .ext(Json.mapper.valueToTree(\n                RubiconVideoExt.of(skip, skipDelay, RubiconVideoExtRp.of(sizeId), videoType)))\n        .build();\n\nAlso:\n\nAdd unit-test for case when no rubiconVideoParams\nAdd rewarded video flag to\norg.prebid.server.it.ApplicationTest#openrtb2AuctionShouldRespondWithBidsFromRubiconAndAppnexus integration test to be sure in whole functional flow.", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368589104", "createdAt": "2020-01-20T14:55:32Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/rubicon/RubiconBidder.java", "diffHunk": "@@ -440,11 +451,17 @@ private static boolean isFullyPopulatedVideo(Video video) {\n                 && video.getLinearity() != null && video.getApi() != null;\n     }\n \n-    private static Video makeVideo(Video video, RubiconVideoParams rubiconVideoParams) {\n+    private static Video makeVideo(Video video, RubiconVideoParams rubiconVideoParams, ExtImpPrebid prebidImpExt) {\n+        boolean isRewardedInventory = false;\n+        if (prebidImpExt != null) {\n+            isRewardedInventory = prebidImpExt.getIsRewardedInventory() != null\n+                    ? prebidImpExt.getIsRewardedInventory() : false;\n+        }\n         return rubiconVideoParams == null ? video : video.toBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7e4e0a4080456b4f16dba2a8db0ab39207897"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5NDkzMg==", "bodyText": "This seems like a hack. What if you'll need to add another field?\nPlease, use @Builder instead of @AllArgsConstructor.\nPS. Usually, we use builder for models having more then 3 fields.", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368594932", "createdAt": "2020-01-20T15:07:21Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/proto/openrtb/ext/request/ExtImpPrebid.java", "diffHunk": "@@ -29,4 +29,15 @@\n      */\n     @JsonProperty(\"storedbidresponse\")\n     List<ExtStoredBidResponse> storedBidResponse;\n+\n+    /**\n+     * Defines the contract for bidrequest.imp[i].ext.prebid.is_rewarded_inventory\n+     */\n+    Boolean isRewardedInventory;\n+\n+    public static ExtImpPrebid of(ExtStoredRequest storedrequest,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7e4e0a4080456b4f16dba2a8db0ab39207897"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5NTY2NA==", "bodyText": "No need for separate enum since we have only one value so far.\nPlease, use plaing rewarded string where needed.", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368595664", "createdAt": "2020-01-20T15:08:57Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/proto/openrtb/ext/request/rubicon/VideoType.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.prebid.server.proto.openrtb.ext.request.rubicon;\n+\n+public enum VideoType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7e4e0a4080456b4f16dba2a8db0ab39207897"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5NjcwOA==", "bodyText": "Pls, make it final to be in one-style.", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368596708", "createdAt": "2020-01-20T15:11:13Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/bidder/rubicon/RubiconBidderTest.java", "diffHunk": "@@ -332,9 +334,86 @@ public void makeHttpRequestsShouldFillVideoExt() {\n                 .extracting(Imp::getVideo).doesNotContainNull()\n                 .extracting(Video::getExt).doesNotContainNull()\n                 .extracting(ext -> mapper.treeToValue(ext, RubiconVideoExt.class))\n-                .containsOnly(RubiconVideoExt.of(5, 10, RubiconVideoExtRp.of(14)));\n+                .containsOnly(RubiconVideoExt.of(5, 10, RubiconVideoExtRp.of(14), null));\n     }\n \n+    @Test\n+    public void makeHttpRequestsShouldFillVideoExtAndAddVideoType() {\n+        // given\n+        final ExtImpPrebid prebid = ExtImpPrebid.of(null, null, null, true);\n+        final ExtImpRubicon rubicon = ExtImpRubicon.builder().video(RubiconVideoParams.builder().skip(5).skipdelay(10).sizeId(14).build()).build();\n+\n+        ExtPrebid<ExtImpPrebid, ExtImpRubicon> ext = ExtPrebid.of(prebid, rubicon);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7e4e0a4080456b4f16dba2a8db0ab39207897"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5NzU3Ng==", "bodyText": "The line is too long, pls use formatting in your IDE.", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368597576", "createdAt": "2020-01-20T15:13:00Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/bidder/rubicon/RubiconBidderTest.java", "diffHunk": "@@ -332,9 +334,86 @@ public void makeHttpRequestsShouldFillVideoExt() {\n                 .extracting(Imp::getVideo).doesNotContainNull()\n                 .extracting(Video::getExt).doesNotContainNull()\n                 .extracting(ext -> mapper.treeToValue(ext, RubiconVideoExt.class))\n-                .containsOnly(RubiconVideoExt.of(5, 10, RubiconVideoExtRp.of(14)));\n+                .containsOnly(RubiconVideoExt.of(5, 10, RubiconVideoExtRp.of(14), null));\n     }\n \n+    @Test\n+    public void makeHttpRequestsShouldFillVideoExtAndAddVideoType() {\n+        // given\n+        final ExtImpPrebid prebid = ExtImpPrebid.of(null, null, null, true);\n+        final ExtImpRubicon rubicon = ExtImpRubicon.builder().video(RubiconVideoParams.builder().skip(5).skipdelay(10).sizeId(14).build()).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7e4e0a4080456b4f16dba2a8db0ab39207897"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5ODg1Ng==", "bodyText": "Redundant empty line.", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368598856", "createdAt": "2020-01-20T15:15:27Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/bidder/rubicon/RubiconBidderTest.java", "diffHunk": "@@ -332,9 +334,86 @@ public void makeHttpRequestsShouldFillVideoExt() {\n                 .extracting(Imp::getVideo).doesNotContainNull()\n                 .extracting(Video::getExt).doesNotContainNull()\n                 .extracting(ext -> mapper.treeToValue(ext, RubiconVideoExt.class))\n-                .containsOnly(RubiconVideoExt.of(5, 10, RubiconVideoExtRp.of(14)));\n+                .containsOnly(RubiconVideoExt.of(5, 10, RubiconVideoExtRp.of(14), null));\n     }\n \n+    @Test\n+    public void makeHttpRequestsShouldFillVideoExtAndAddVideoType() {\n+        // given\n+        final ExtImpPrebid prebid = ExtImpPrebid.of(null, null, null, true);\n+        final ExtImpRubicon rubicon = ExtImpRubicon.builder().video(RubiconVideoParams.builder().skip(5).skipdelay(10).sizeId(14).build()).build();\n+\n+        ExtPrebid<ExtImpPrebid, ExtImpRubicon> ext = ExtPrebid.of(prebid, rubicon);\n+\n+        final BidRequest bidRequest = givenBidRequest(impBuilder -> impBuilder.video(Video.builder().build())\n+                .ext(mapper.valueToTree(ext)));\n+\n+        // when\n+        final Result<List<HttpRequest<BidRequest>>> result = rubiconBidder.makeHttpRequests(bidRequest);\n+\n+        // then\n+        assertThat(result.getErrors()).isEmpty();\n+        assertThat(result.getValue()).hasSize(1).doesNotContainNull()\n+                .extracting(httpRequest -> mapper.readValue(httpRequest.getBody(), BidRequest.class))\n+                .flatExtracting(BidRequest::getImp).doesNotContainNull()\n+                .extracting(Imp::getVideo).doesNotContainNull()\n+                .extracting(Video::getExt).doesNotContainNull()\n+                .extracting(ex -> mapper.treeToValue(ex, RubiconVideoExt.class))\n+                .containsOnly(RubiconVideoExt.of(5, 10, RubiconVideoExtRp.of(14), VideoType.REWARDED));\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7e4e0a4080456b4f16dba2a8db0ab39207897"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYwMjAwNA==", "bodyText": "Minor. For better readability maybe it make sense to split ExtPrebid ext into 2 separate arguments: ExtImpPrebid extImpPrebid and ExtImpRubicon extImpRubicon.\nWhat do you think?", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368602004", "createdAt": "2020-01-20T15:21:38Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/rubicon/RubiconBidder.java", "diffHunk": "@@ -244,18 +251,19 @@ private static String firstImpExtLanguage(Collection<ExtImpRubicon> rubiconImpEx\n                 .orElse(null);\n     }\n \n-    private BidRequest createSingleRequest(Imp imp, ExtImpRubicon rubiconImpExt, BidRequest bidRequest,\n-                                           String impLanguage, boolean useFirstPartyData) {\n+    private BidRequest createSingleRequest(Imp imp, ExtPrebid<ExtImpPrebid, ExtImpRubicon> ext,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7e4e0a4080456b4f16dba2a8db0ab39207897"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYwMzY0MQ==", "bodyText": "Minor. Redundant carriage return. Just to be in one style with other code.", "url": "https://github.com/prebid/prebid-server-java/pull/585#discussion_r368603641", "createdAt": "2020-01-20T15:24:43Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/rubicon/RubiconBidder.java", "diffHunk": "@@ -213,29 +216,33 @@ private static boolean useFirstPartyData(BidRequest bidRequest) {\n         return CollectionUtils.isNotEmpty(bidders); // this contains only current bidder\n     }\n \n-    private static Map<Imp, ExtImpRubicon> parseRubiconImpExts(List<Imp> imps, List<BidderError> errors) {\n-        final Map<Imp, ExtImpRubicon> impToRubiconExt = new HashMap<>();\n+    private static Map<Imp, ExtPrebid<ExtImpPrebid, ExtImpRubicon>> parseRubiconImpExts(\n+            List<Imp> imps, List<BidderError> errors\n+    ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7e4e0a4080456b4f16dba2a8db0ab39207897"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d0346ed1cdfbc58ddc179db997fc070ee57443a", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/5d0346ed1cdfbc58ddc179db997fc070ee57443a", "committedDate": "2020-01-20T20:14:34Z", "message": "Rewarded Video minor bugs fixed, tests added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "462ee915d73f83cd268804f2383bf953a0d4f9ae", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/462ee915d73f83cd268804f2383bf953a0d4f9ae", "committedDate": "2020-01-20T20:27:40Z", "message": "Rewarded Video minor bugs fixed, tests added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d13cd9417e0f8a252f0946c0284bcf15f2b3ed66", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/d13cd9417e0f8a252f0946c0284bcf15f2b3ed66", "committedDate": "2020-01-20T20:37:10Z", "message": "Rewarded Video minor bugs fixed, tests added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "557385ef9c88bbd74d78aed43df8f287525ad234", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/557385ef9c88bbd74d78aed43df8f287525ad234", "committedDate": "2020-01-20T20:42:59Z", "message": "Rewarded Video minor bugs fixed, tests added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46d8f3fd4bdc393641dcbf04aacc2d5c25de8996", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/46d8f3fd4bdc393641dcbf04aacc2d5c25de8996", "committedDate": "2020-01-21T15:02:45Z", "message": "Rewarded Video minor bugs fixed, tests added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72c891ea6650e0144d337e5805a8643139bbbebb", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/72c891ea6650e0144d337e5805a8643139bbbebb", "committedDate": "2020-01-21T16:25:03Z", "message": "Rewarded Video code cleanup, test fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a34026bcd9fb46109fceec8b0c2b33a5153a6057", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/a34026bcd9fb46109fceec8b0c2b33a5153a6057", "committedDate": "2020-01-22T14:41:15Z", "message": "Remove Rewarded Video from Adapter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MTY5MTc1", "url": "https://github.com/prebid/prebid-server-java/pull/585#pullrequestreview-347169175", "createdAt": "2020-01-23T09:49:06Z", "commit": {"oid": "a34026bcd9fb46109fceec8b0c2b33a5153a6057"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22332fc982c55af491e665292e3a689a448594bd", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/22332fc982c55af491e665292e3a689a448594bd", "committedDate": "2020-02-05T10:56:37Z", "message": "Merge branch 'master' into rubicon-rewarded-video"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00776abe4ac7e78cbdd1b092bccad6acefe21a05", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/00776abe4ac7e78cbdd1b092bccad6acefe21a05", "committedDate": "2020-02-05T11:29:26Z", "message": "Conflict resolved"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcb4498ba21b215629d6373df5a8f6a158fc9032", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/dcb4498ba21b215629d6373df5a8f6a158fc9032", "committedDate": "2020-02-05T11:31:44Z", "message": "Merge branch 'master' into rubicon-rewarded-video"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d227bbbcf89fc83a40b97ef48335c15f6307f3c1", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/d227bbbcf89fc83a40b97ef48335c15f6307f3c1", "committedDate": "2020-02-05T12:11:29Z", "message": "Conflict resolved"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71c2cfc596c384882080d246ed4f5002234dcfbf", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/71c2cfc596c384882080d246ed4f5002234dcfbf", "committedDate": "2020-02-05T12:13:36Z", "message": "Merge branch 'master' into rubicon-rewarded-video"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c87c615a70afb52a0ec0f296e1664d634a93a6a0", "author": {"user": {"login": "apaliy", "name": "Andrew Paliy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/c87c615a70afb52a0ec0f296e1664d634a93a6a0", "committedDate": "2020-02-05T12:29:26Z", "message": "Conflict resolved"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNzA3NDY4", "url": "https://github.com/prebid/prebid-server-java/pull/585#pullrequestreview-353707468", "createdAt": "2020-02-05T13:20:00Z", "commit": {"oid": "c87c615a70afb52a0ec0f296e1664d634a93a6a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3362, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}