{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMDAzNjc3", "number": 1044, "title": "Add account CCPA enabled and per-request-type enabled flags", "bodyText": "", "createdAt": "2020-12-02T13:06:02Z", "url": "https://github.com/prebid/prebid-server-java/pull/1044", "merged": true, "mergeCommit": {"oid": "2de846acb8369e947df6f68d619ac422fc12f3f9"}, "closed": true, "closedAt": "2021-08-13T10:42:35Z", "author": {"login": "snahornyi"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiOQHYAH2gAyNTMxMDAzNjc3OmQxNWM2MjBhMDlmODE1OWMwMzMxNWMwODgxNmE3NzJmNGMyNjk4Nzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABez8ZOdgFqTcyOTQ4ODc0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d15c620a09f8159c03315c08816a772f4c269879", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/d15c620a09f8159c03315c08816a772f4c269879", "committedDate": "2020-12-02T13:06:56Z", "message": "Add account CCPA enabled and per-request-type enabled flags"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "383da2ecb20dff6ef2b20cafa4a93b3fde702cb4", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/383da2ecb20dff6ef2b20cafa4a93b3fde702cb4", "committedDate": "2020-12-02T13:04:39Z", "message": "Add account CCPA enabled and per-request-type enabled flags"}, "afterCommit": {"oid": "d15c620a09f8159c03315c08816a772f4c269879", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/d15c620a09f8159c03315c08816a772f4c269879", "committedDate": "2020-12-02T13:06:56Z", "message": "Add account CCPA enabled and per-request-type enabled flags"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODg5MDU3", "url": "https://github.com/prebid/prebid-server-java/pull/1044#pullrequestreview-543889057", "createdAt": "2020-12-03T12:09:11Z", "commit": {"oid": "d15c620a09f8159c03315c08816a772f4c269879"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjowOToxMVrOH-YTcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjoxODo1N1rOH-Y4ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3MTk1Mw==", "bodyText": "Use camelCase", "url": "https://github.com/prebid/prebid-server-java/pull/1044#discussion_r535171953", "createdAt": "2020-12-03T12:09:11Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java", "diffHunk": "@@ -199,21 +201,55 @@ private static RequestLogInfo requestLogInfo(MetricName requestType, BidRequest\n                                                         BidderAliases aliases,\n                                                         Device device,\n                                                         Map<String, User> bidderToUser,\n-                                                        Privacy privacy) {\n+                                                        Privacy privacy,\n+                                                        MetricName requestType) {\n \n-        if (isCcpaEnforced(privacy.getCcpa(), account)) {\n+        if (isCcpaEnforced(privacy.getCcpa(), account, requestType)) {\n             return maskCcpa(extractCcpaEnforcedBidders(bidders, bidRequest, aliases), device, bidderToUser);\n         }\n \n         return Collections.emptyMap();\n     }\n \n     public boolean isCcpaEnforced(Ccpa ccpa, Account account) {\n-        final boolean shouldEnforceCcpa = BooleanUtils.toBooleanDefaultIfNull(account.getEnforceCcpa(), ccpaEnforce);\n+        final boolean shouldEnforceCcpa = isCCPAEnabled(account);\n \n         return shouldEnforceCcpa && ccpa.isEnforced();\n     }\n \n+    private boolean isCcpaEnforced(Ccpa ccpa, Account account, MetricName requestType) {\n+        final boolean shouldEnforceCcpa = isCCPAEnabled(account, requestType);\n+        return shouldEnforceCcpa && ccpa.isEnforced();\n+    }\n+\n+    private Boolean isCCPAEnabled(Account account) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d15c620a09f8159c03315c08816a772f4c269879"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3MzkxMw==", "bodyText": "redundant /n", "url": "https://github.com/prebid/prebid-server-java/pull/1044#discussion_r535173913", "createdAt": "2020-12-03T12:10:55Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java", "diffHunk": "@@ -199,21 +201,55 @@ private static RequestLogInfo requestLogInfo(MetricName requestType, BidRequest\n                                                         BidderAliases aliases,\n                                                         Device device,\n                                                         Map<String, User> bidderToUser,\n-                                                        Privacy privacy) {\n+                                                        Privacy privacy,\n+                                                        MetricName requestType) {\n \n-        if (isCcpaEnforced(privacy.getCcpa(), account)) {\n+        if (isCcpaEnforced(privacy.getCcpa(), account, requestType)) {\n             return maskCcpa(extractCcpaEnforcedBidders(bidders, bidRequest, aliases), device, bidderToUser);\n         }\n \n         return Collections.emptyMap();\n     }\n \n     public boolean isCcpaEnforced(Ccpa ccpa, Account account) {\n-        final boolean shouldEnforceCcpa = BooleanUtils.toBooleanDefaultIfNull(account.getEnforceCcpa(), ccpaEnforce);\n+        final boolean shouldEnforceCcpa = isCCPAEnabled(account);\n \n         return shouldEnforceCcpa && ccpa.isEnforced();\n     }\n \n+    private boolean isCcpaEnforced(Ccpa ccpa, Account account, MetricName requestType) {\n+        final boolean shouldEnforceCcpa = isCCPAEnabled(account, requestType);\n+        return shouldEnforceCcpa && ccpa.isEnforced();\n+    }\n+\n+    private Boolean isCCPAEnabled(Account account) {\n+        final AccountCcpaConfig accountCcpaConfig = account.getCcpa();\n+\n+        final Boolean accountCCPAEnabled =\n+                accountCcpaConfig != null ? accountCcpaConfig.getEnabled() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d15c620a09f8159c03315c08816a772f4c269879"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3NDEwOQ==", "bodyText": "redundant /n", "url": "https://github.com/prebid/prebid-server-java/pull/1044#discussion_r535174109", "createdAt": "2020-12-03T12:11:05Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java", "diffHunk": "@@ -199,21 +201,55 @@ private static RequestLogInfo requestLogInfo(MetricName requestType, BidRequest\n                                                         BidderAliases aliases,\n                                                         Device device,\n                                                         Map<String, User> bidderToUser,\n-                                                        Privacy privacy) {\n+                                                        Privacy privacy,\n+                                                        MetricName requestType) {\n \n-        if (isCcpaEnforced(privacy.getCcpa(), account)) {\n+        if (isCcpaEnforced(privacy.getCcpa(), account, requestType)) {\n             return maskCcpa(extractCcpaEnforcedBidders(bidders, bidRequest, aliases), device, bidderToUser);\n         }\n \n         return Collections.emptyMap();\n     }\n \n     public boolean isCcpaEnforced(Ccpa ccpa, Account account) {\n-        final boolean shouldEnforceCcpa = BooleanUtils.toBooleanDefaultIfNull(account.getEnforceCcpa(), ccpaEnforce);\n+        final boolean shouldEnforceCcpa = isCCPAEnabled(account);\n \n         return shouldEnforceCcpa && ccpa.isEnforced();\n     }\n \n+    private boolean isCcpaEnforced(Ccpa ccpa, Account account, MetricName requestType) {\n+        final boolean shouldEnforceCcpa = isCCPAEnabled(account, requestType);\n+        return shouldEnforceCcpa && ccpa.isEnforced();\n+    }\n+\n+    private Boolean isCCPAEnabled(Account account) {\n+        final AccountCcpaConfig accountCcpaConfig = account.getCcpa();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d15c620a09f8159c03315c08816a772f4c269879"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3ODE4OQ==", "bodyText": "redundant /n", "url": "https://github.com/prebid/prebid-server-java/pull/1044#discussion_r535178189", "createdAt": "2020-12-03T12:15:09Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java", "diffHunk": "@@ -199,21 +201,55 @@ private static RequestLogInfo requestLogInfo(MetricName requestType, BidRequest\n                                                         BidderAliases aliases,\n                                                         Device device,\n                                                         Map<String, User> bidderToUser,\n-                                                        Privacy privacy) {\n+                                                        Privacy privacy,\n+                                                        MetricName requestType) {\n \n-        if (isCcpaEnforced(privacy.getCcpa(), account)) {\n+        if (isCcpaEnforced(privacy.getCcpa(), account, requestType)) {\n             return maskCcpa(extractCcpaEnforcedBidders(bidders, bidRequest, aliases), device, bidderToUser);\n         }\n \n         return Collections.emptyMap();\n     }\n \n     public boolean isCcpaEnforced(Ccpa ccpa, Account account) {\n-        final boolean shouldEnforceCcpa = BooleanUtils.toBooleanDefaultIfNull(account.getEnforceCcpa(), ccpaEnforce);\n+        final boolean shouldEnforceCcpa = isCCPAEnabled(account);\n \n         return shouldEnforceCcpa && ccpa.isEnforced();\n     }\n \n+    private boolean isCcpaEnforced(Ccpa ccpa, Account account, MetricName requestType) {\n+        final boolean shouldEnforceCcpa = isCCPAEnabled(account, requestType);\n+        return shouldEnforceCcpa && ccpa.isEnforced();\n+    }\n+\n+    private Boolean isCCPAEnabled(Account account) {\n+        final AccountCcpaConfig accountCcpaConfig = account.getCcpa();\n+\n+        final Boolean accountCCPAEnabled =\n+                accountCcpaConfig != null ? accountCcpaConfig.getEnabled() : null;\n+\n+        return ObjectUtils.firstNonNull(accountCCPAEnabled, account.getEnforceCcpa(), ccpaEnforce);\n+    }\n+\n+    private boolean isCCPAEnabled(Account account, MetricName requestType) {\n+        final AccountCcpaConfig accountCcpaConfig = account.getCcpa();\n+\n+        final Boolean accountCCPAEnabled =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d15c620a09f8159c03315c08816a772f4c269879"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE4MTQ3MA==", "bodyText": "Missed  eturn ObjectUtils.firstNonNull(accountCCPAEnabled, account.getEnforceCcpa(), ccpaEnforce);", "url": "https://github.com/prebid/prebid-server-java/pull/1044#discussion_r535181470", "createdAt": "2020-12-03T12:18:57Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java", "diffHunk": "@@ -199,21 +201,55 @@ private static RequestLogInfo requestLogInfo(MetricName requestType, BidRequest\n                                                         BidderAliases aliases,\n                                                         Device device,\n                                                         Map<String, User> bidderToUser,\n-                                                        Privacy privacy) {\n+                                                        Privacy privacy,\n+                                                        MetricName requestType) {\n \n-        if (isCcpaEnforced(privacy.getCcpa(), account)) {\n+        if (isCcpaEnforced(privacy.getCcpa(), account, requestType)) {\n             return maskCcpa(extractCcpaEnforcedBidders(bidders, bidRequest, aliases), device, bidderToUser);\n         }\n \n         return Collections.emptyMap();\n     }\n \n     public boolean isCcpaEnforced(Ccpa ccpa, Account account) {\n-        final boolean shouldEnforceCcpa = BooleanUtils.toBooleanDefaultIfNull(account.getEnforceCcpa(), ccpaEnforce);\n+        final boolean shouldEnforceCcpa = isCCPAEnabled(account);\n \n         return shouldEnforceCcpa && ccpa.isEnforced();\n     }\n \n+    private boolean isCcpaEnforced(Ccpa ccpa, Account account, MetricName requestType) {\n+        final boolean shouldEnforceCcpa = isCCPAEnabled(account, requestType);\n+        return shouldEnforceCcpa && ccpa.isEnforced();\n+    }\n+\n+    private Boolean isCCPAEnabled(Account account) {\n+        final AccountCcpaConfig accountCcpaConfig = account.getCcpa();\n+\n+        final Boolean accountCCPAEnabled =\n+                accountCcpaConfig != null ? accountCcpaConfig.getEnabled() : null;\n+\n+        return ObjectUtils.firstNonNull(accountCCPAEnabled, account.getEnforceCcpa(), ccpaEnforce);\n+    }\n+\n+    private boolean isCCPAEnabled(Account account, MetricName requestType) {\n+        final AccountCcpaConfig accountCcpaConfig = account.getCcpa();\n+\n+        final Boolean accountCCPAEnabled =\n+                accountCcpaConfig != null ? accountCcpaConfig.getEnabled() : null;\n+        if (requestType == null) {\n+            return ObjectUtils.firstNonNull(accountCCPAEnabled, ccpaEnforce);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d15c620a09f8159c03315c08816a772f4c269879"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddbe0c172bd598db57bae3468d7b2c16b22c5370", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/ddbe0c172bd598db57bae3468d7b2c16b22c5370", "committedDate": "2020-12-03T12:56:25Z", "message": "Fixes after review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeac0214123b8652c1bedbaf87c086d563a112b4", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/aeac0214123b8652c1bedbaf87c086d563a112b4", "committedDate": "2021-08-10T07:43:09Z", "message": "Add account CCPA enabled and per-request-type enabled flags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c354f1275c330befbc4b59e63889cb3bfd4b946e", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/c354f1275c330befbc4b59e63889cb3bfd4b946e", "committedDate": "2021-08-10T07:43:10Z", "message": "Fixes after review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b731319a957ce3551d1626e80b3d42f7d8280cb5", "author": {"user": {"login": "nickluck8", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/b731319a957ce3551d1626e80b3d42f7d8280cb5", "committedDate": "2021-08-10T07:50:27Z", "message": "Merge remote-tracking branch 'remotes/origin/master' into account/ccpa/enabled\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/auction/PrivacyEnforcementService.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46b8df3fb862c7ac6618796f6fe3c10a2f42f28d", "author": {"user": {"login": "nickluck8", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/46b8df3fb862c7ac6618796f6fe3c10a2f42f28d", "committedDate": "2021-08-10T07:59:53Z", "message": "Merge branch 'account/ccpa/enabled_old' into test\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/auction/PrivacyEnforcementService.java"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2cd956634caeab1da6a9d4c3e2f979d38068aeb", "author": {"user": {"login": "nickluck8", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/f2cd956634caeab1da6a9d4c3e2f979d38068aeb", "committedDate": "2021-08-10T08:32:32Z", "message": "Merge remote-tracking branch 'origin/account/ccpa/enabled' into account/ccpa/enabled"}, "afterCommit": {"oid": "46b8df3fb862c7ac6618796f6fe3c10a2f42f28d", "author": {"user": {"login": "nickluck8", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/46b8df3fb862c7ac6618796f6fe3c10a2f42f28d", "committedDate": "2021-08-10T07:59:53Z", "message": "Merge branch 'account/ccpa/enabled_old' into test\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/auction/PrivacyEnforcementService.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74db518226cd1f7d7d1b7132bbd461dd1bf9de06", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/74db518226cd1f7d7d1b7132bbd461dd1bf9de06", "committedDate": "2021-08-13T10:32:48Z", "message": "Merge branch 'master' into account/ccpa/enabled"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI5NDg1NTU3", "url": "https://github.com/prebid/prebid-server-java/pull/1044#pullrequestreview-729485557", "createdAt": "2021-08-13T10:36:02Z", "commit": {"oid": "74db518226cd1f7d7d1b7132bbd461dd1bf9de06"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2eee9541b673408b0797465d1598e14b962bbed", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/b2eee9541b673408b0797465d1598e14b962bbed", "committedDate": "2021-08-13T10:39:39Z", "message": "Add CCPA to AccountConfigurationProperties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI5NDg4NzQ5", "url": "https://github.com/prebid/prebid-server-java/pull/1044#pullrequestreview-729488749", "createdAt": "2021-08-13T10:40:24Z", "commit": {"oid": "b2eee9541b673408b0797465d1598e14b962bbed"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2954, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}