{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MjI1Mjc5", "number": 1038, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyODowNFrOE-raEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyODozOVrOE-ra8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTU4MzUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/adform/AdformBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyODowNFrOH79iLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyODowNFrOH79iLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNjIwNw==", "bodyText": "Seems we don't need else here. Just if on new line.", "url": "https://github.com/prebid/prebid-server-java/pull/1038#discussion_r532636207", "createdAt": "2020-11-30T14:28:04Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/adform/AdformBidder.java", "diffHunk": "@@ -291,24 +291,43 @@ private String getUrl(List<ExtImpAdform> extImpAdforms) {\n \n         for (int i = 0; i < adformBids.size(); i++) {\n             final AdformBid adformBid = adformBids.get(i);\n-            if (StringUtils.isEmpty(adformBid.getBanner()) || !Objects.equals(adformBid.getResponse(), BANNER)) {\n+            final String adm = resolveAdm(adformBid);\n+            if (StringUtils.isBlank(adm)) {\n                 continue;\n             }\n+            final BidType bidType = resolveBidType(adformBid.getResponse());\n             final Imp imp = imps.get(i);\n             bidderBids.add(BidderBid.of(Bid.builder()\n                             .id(imp.getId())\n                             .impid(imp.getId())\n                             .price(adformBid.getWinBid())\n-                            .adm(adformBid.getBanner())\n+                            .adm(adm)\n                             .w(adformBid.getWidth())\n                             .h(adformBid.getHeight())\n                             .dealid(adformBid.getDealId())\n                             .crid(adformBid.getWinCrid())\n                             .build(),\n-                    BidType.banner,\n+                    bidType,\n                     currency));\n         }\n \n         return bidderBids;\n     }\n+\n+    private String resolveAdm(AdformBid adformBid) {\n+        if (Objects.equals(adformBid.getResponse(), \"banner\")) {\n+            return adformBid.getBanner();\n+        } else if (Objects.equals(adformBid.getResponse(), \"vast_content\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f99e0d79acb77d7302db1b57da2d6bfe70b32099"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTU4NTc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/adform/AdformBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyODozOVrOH79jog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyODozOVrOH79jog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNjU3OA==", "bodyText": "Can be transformed to ternary checking.", "url": "https://github.com/prebid/prebid-server-java/pull/1038#discussion_r532636578", "createdAt": "2020-11-30T14:28:39Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/adform/AdformBidder.java", "diffHunk": "@@ -291,24 +291,43 @@ private String getUrl(List<ExtImpAdform> extImpAdforms) {\n \n         for (int i = 0; i < adformBids.size(); i++) {\n             final AdformBid adformBid = adformBids.get(i);\n-            if (StringUtils.isEmpty(adformBid.getBanner()) || !Objects.equals(adformBid.getResponse(), BANNER)) {\n+            final String adm = resolveAdm(adformBid);\n+            if (StringUtils.isBlank(adm)) {\n                 continue;\n             }\n+            final BidType bidType = resolveBidType(adformBid.getResponse());\n             final Imp imp = imps.get(i);\n             bidderBids.add(BidderBid.of(Bid.builder()\n                             .id(imp.getId())\n                             .impid(imp.getId())\n                             .price(adformBid.getWinBid())\n-                            .adm(adformBid.getBanner())\n+                            .adm(adm)\n                             .w(adformBid.getWidth())\n                             .h(adformBid.getHeight())\n                             .dealid(adformBid.getDealId())\n                             .crid(adformBid.getWinCrid())\n                             .build(),\n-                    BidType.banner,\n+                    bidType,\n                     currency));\n         }\n \n         return bidderBids;\n     }\n+\n+    private String resolveAdm(AdformBid adformBid) {\n+        if (Objects.equals(adformBid.getResponse(), \"banner\")) {\n+            return adformBid.getBanner();\n+        } else if (Objects.equals(adformBid.getResponse(), \"vast_content\")) {\n+            return adformBid.getVastContent();\n+        }\n+\n+        return \"\";\n+    }\n+\n+    private BidType resolveBidType(String response) {\n+        if (Objects.equals(response, BANNER)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f99e0d79acb77d7302db1b57da2d6bfe70b32099"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3837, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}