{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NzQ0NDEy", "number": 855, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMTo0Njo1OVrOEeRhlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMTo0Njo1OVrOEeRhlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTc5ODYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/rubicon/RubiconBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMTo0Njo1OVrOHJ1hrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMTo0Njo1OVrOHJ1hrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA3NjIwNw==", "bodyText": "Just a suggestion\nfinal List<Imp> imps = bidRequest.getImp();\n        final Map<Boolean, List<Imp>> isValidToImps = imps.stream()\n                .collect(Collectors.groupingBy(RubiconBidder::isValidType));\n\n        isValidToImps.getOrDefault(false, Collections.emptyList()).stream()\n                .map(this::impTypeErrorMessage)\n                .forEach(errors::add);\n\n        return isValidToImps.get(true);", "url": "https://github.com/prebid/prebid-server-java/pull/855#discussion_r480076207", "createdAt": "2020-08-31T11:46:59Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/rubicon/RubiconBidder.java", "diffHunk": "@@ -209,6 +215,45 @@ public RubiconBidder(String endpoint,\n                 : Collections.emptyMap();\n     }\n \n+    private List<Imp> extractValidImps(BidRequest bidRequest, List<BidderError> errors) {\n+        final List<Imp> imps = bidRequest.getImp();\n+        final List<BidderError> typeValidationErrors = imps.stream()\n+                .filter(imp -> !isValidType(imp))\n+                .map(this::impTypeErrorMessage)\n+                .collect(Collectors.toList());\n+        errors.addAll(typeValidationErrors);\n+        return bidRequest.getImp().stream()\n+                .filter(RubiconBidder::isValidType)\n+                .collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60a66b7386d9b828af1a4e9e56d6665828f027d9"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4002, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}