{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTU0MTk4", "number": 631, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoxOToxM1rODjeyWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMToxMjozMlrODorRkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTMxMTYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/cache/CacheService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoxOToxM1rOFvT-aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoxOToxM1rOFvT-aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1NDY2NA==", "bodyText": "change to bidObjectNode", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r385154664", "createdAt": "2020-02-27T14:19:13Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/cache/CacheService.java", "diffHunk": "@@ -381,10 +382,14 @@ private static PutObject createPutObjectVideoOnly(Bid bid) {\n     /**\n      * Makes JSON type {@link PutObject} from {@link com.iab.openrtb.response.Bid}. Used for OpenRTB auction request.\n      */\n-    private PutObject createJsonPutObjectOpenrtb(CacheBid cacheBid) {\n+    private PutObject createJsonPutObjectOpenrtb(CacheBid cacheBid, String accountId) {\n+        final ObjectNode value = mapper.mapper().valueToTree(cacheBid.getBid());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTMxMzI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/cache/CacheService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoxOTozNlrOFvT_Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoxOTozNlrOFvT_Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1NDkxNA==", "bodyText": "And add wurl", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r385154914", "createdAt": "2020-02-27T14:19:36Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/cache/CacheService.java", "diffHunk": "@@ -381,10 +382,14 @@ private static PutObject createPutObjectVideoOnly(Bid bid) {\n     /**\n      * Makes JSON type {@link PutObject} from {@link com.iab.openrtb.response.Bid}. Used for OpenRTB auction request.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTM0MDM1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoyNjowMVrOFvUP2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoyNjowMVrOFvUP2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1OTEyOA==", "bodyText": "value.put(\"wurl\",\"http://win-url\" );```\nAre they really required?", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r385159128", "createdAt": "2020-02-27T14:26:01Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -458,11 +468,13 @@ public void cacheBidsOpenrtbShouldTolerateCacheEntriesNumberDoesNotMatchBidsNumb\n     public void cacheBidsOpenrtbShouldReturnExpectedDebugInfo() throws JsonProcessingException {\n         // given\n         final com.iab.openrtb.response.Bid bid = givenBidOpenrtb(builder -> builder.id(\"bidId1\").impid(\"impId1\"));\n-\n+        given(eventsService.winUrlTargeting(anyString())).willReturn(\"http://win-url\");\n+        final ObjectNode value = mapper.valueToTree(bid);\n+        value.put(\"wurl\",\"http://win-url\" );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTM0OTUwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoyODowNVrOFvUVaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoyODowNVrOFvUVaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2MDU1NQ==", "bodyText": "``` final ObjectNode value = mapper.valueToTree(bid);\n    value.put(\"wurl\",\"http://win-url\" );```\n\nAre they really required?", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r385160555", "createdAt": "2020-02-27T14:28:05Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -438,11 +446,13 @@ public void cacheBidsOpenrtbShouldTolerateCacheEntriesNumberDoesNotMatchBidsNumb\n         givenHttpClientReturnsResponse(200, \"{}\");\n \n         final com.iab.openrtb.response.Bid bid = givenBidOpenrtb(builder -> builder.id(\"bidId1\").impid(\"impId1\"));\n-\n+        given(eventsService.winUrlTargeting(anyString())).willReturn(\"http://win-url\");\n+        final ObjectNode value = mapper.valueToTree(bid);\n+        value.put(\"wurl\",\"http://win-url\" );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTM2NDI0OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozMToyNVrOFvUd_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozMToyNVrOFvUd_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2Mjc0OQ==", "bodyText": "replace naming of value1 and value2", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r385162749", "createdAt": "2020-02-27T14:31:25Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -494,18 +506,23 @@ public void cacheBidsOpenrtbShouldPerformHttpRequestWithExpectedBody() throws IO\n         final com.iab.openrtb.response.Bid bid2 = givenBidOpenrtb(builder -> builder.impid(\"impId2\").adm(\"adm2\"));\n         final Imp imp1 = givenImp(identity());\n         final Imp imp2 = givenImp(builder -> builder.id(\"impId2\").video(Video.builder().build()));\n+        when(eventsService.winUrlTargeting(anyString())).thenReturn(\"http://win-url\");\n \n         // when\n         cacheService.cacheBidsOpenrtb(\n                 asList(bid1, bid2), asList(imp1, imp2),\n-                CacheContext.builder().shouldCacheBids(true).shouldCacheVideoBids(true).build(), account, timeout);\n+                CacheContext.builder().shouldCacheBids(true).shouldCacheVideoBids(true).build(), Account.builder().id(\"accountId\").build(), timeout);\n \n         // then\n+        final ObjectNode value1 = mapper.valueToTree(bid1);\n+        value1.put(\"wurl\", \"http://win-url\");\n+        final ObjectNode value2 = mapper.valueToTree(bid2);\n+        value2.put(\"wurl\", \"http://win-url\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTM2NjI1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozMTo1M1rOFvUfTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozMTo1M1rOFvUfTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2MzA4NA==", "bodyText": "Replace with given and willReturn", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r385163084", "createdAt": "2020-02-27T14:31:53Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -494,18 +506,23 @@ public void cacheBidsOpenrtbShouldPerformHttpRequestWithExpectedBody() throws IO\n         final com.iab.openrtb.response.Bid bid2 = givenBidOpenrtb(builder -> builder.impid(\"impId2\").adm(\"adm2\"));\n         final Imp imp1 = givenImp(identity());\n         final Imp imp2 = givenImp(builder -> builder.id(\"impId2\").video(Video.builder().build()));\n+        when(eventsService.winUrlTargeting(anyString())).thenReturn(\"http://win-url\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTM3MDc5OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozMjo0OFrOFvUhww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozMjo0OFrOFvUhww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2MzcxNQ==", "bodyText": "naming and inline", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r385163715", "createdAt": "2020-02-27T14:32:48Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -721,18 +738,23 @@ public void cacheBidsOpenrtbShouldWrapEmptyAdMFieldUsingNurlFieldValue() throws\n         final com.iab.openrtb.response.Bid bid1 = givenBidOpenrtb(builder -> builder.impid(\"impId1\").adm(\"adm1\"));\n         final com.iab.openrtb.response.Bid bid2 = givenBidOpenrtb(builder -> builder.impid(\"impId1\").nurl(\"adm2\"));\n         final Imp imp1 = givenImp(builder -> builder.id(\"impId1\").video(Video.builder().build()));\n+        when(eventsService.winUrlTargeting(anyString())).thenReturn(\"http://win-url\");\n \n         // when\n         cacheService.cacheBidsOpenrtb(\n                 asList(bid1, bid2), singletonList(imp1),\n-                CacheContext.builder().shouldCacheBids(true).shouldCacheVideoBids(true).build(), account, timeout);\n+                CacheContext.builder().shouldCacheBids(true).shouldCacheVideoBids(true).build(), Account.builder().id(\"accountId\").build(), timeout);\n \n         // then\n+        final ObjectNode value1 = mapper.valueToTree(bid1);\n+        value1.put(\"wurl\", \"http://win-url\");\n+        final ObjectNode value2 = mapper.valueToTree(bid2);\n+        value2.put(\"wurl\", \"http://win-url\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTM3NjYwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozNDowM1rOFvUlHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozNDowM1rOFvUlHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2NDU3Mg==", "bodyText": "/n", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r385164572", "createdAt": "2020-02-27T14:34:03Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -748,16 +770,19 @@ public void cacheBidsOpenrtbShouldNotModifyVastXmlWhenBidIdIsNotInToModifyList()\n                 .adm(\"adm\"));\n         final Imp imp1 = givenImp(builder -> builder.id(\"impId1\").video(Video.builder().build()));\n \n+        given(eventsService.winUrlTargeting(anyString())).willReturn(\"http://win-url\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTM3ODQwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozNDoyN1rOFvUmOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozNDoyN1rOFvUmOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2NDg1Ng==", "bodyText": "/n", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r385164856", "createdAt": "2020-02-27T14:34:27Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -767,17 +792,18 @@ public void cacheBidsOpenrtbShouldNotAddTrackingImpToBidAdmWhenXmlDoesNotContain\n         final com.iab.openrtb.response.Bid bid = givenBidOpenrtb(builder -> builder.id(\"bid1\").impid(\"impId1\")\n                 .adm(\"no impression tag\"));\n         final Imp imp1 = givenImp(builder -> builder.id(\"impId1\").video(Video.builder().build()));\n-\n+        given(eventsService.winUrlTargeting(anyString())).willReturn(\"http://win-url\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 185}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTM4MTE2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozNTowN1rOFvUoDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDozNTowN1rOFvUoDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2NTMyNg==", "bodyText": "Extract variables to clean code", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r385165326", "createdAt": "2020-02-27T14:35:07Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -767,17 +792,18 @@ public void cacheBidsOpenrtbShouldNotAddTrackingImpToBidAdmWhenXmlDoesNotContain\n         final com.iab.openrtb.response.Bid bid = givenBidOpenrtb(builder -> builder.id(\"bid1\").impid(\"impId1\")\n                 .adm(\"no impression tag\"));\n         final Imp imp1 = givenImp(builder -> builder.id(\"impId1\").video(Video.builder().build()));\n-\n+        given(eventsService.winUrlTargeting(anyString())).willReturn(\"http://win-url\");\n         // when\n         cacheService.cacheBidsOpenrtb(singletonList(bid), singletonList(imp1), CacheContext.builder()\n                 .shouldCacheBids(true).shouldCacheVideoBids(true).videoBidIdsToModify(singletonList(\"bid1\"))\n-                .build(), account, timeout);\n-\n+                .build(), Account.builder().id(\"accountId\").build(), timeout);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 191}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTQwMjMyOnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/prebid/server/it/openrtb2/rubicon_appnexus/test-cache-rubicon-appnexus-request.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDo1ODo0OVrOFvU11g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzoxMjoxNFrOF2-CrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2ODg1NA==", "bodyText": "Please clarify with Ruslan, if this tests will not fail on another environment bc of http://localhost:8000/", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r385168854", "createdAt": "2020-02-27T14:58:49Z", "author": {"login": "DGarbar"}, "path": "src/test/resources/org/prebid/server/it/openrtb2/rubicon_appnexus/test-cache-rubicon-appnexus-request.json", "diffHunk": "@@ -17,7 +18,8 @@\n         \"adm\": \"adm2\",\n         \"crid\": \"crid2\",\n         \"w\": 300,\n-        \"h\": 600\n+        \"h\": 600,\n+        \"wurl\": \"http://localhost:8000/event?t=win&b=BIDID&a=5001&f=i\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4MzkxNw==", "bodyText": "That's fine. Will refactor in future.", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r393183917", "createdAt": "2020-03-16T17:12:14Z", "author": {"login": "rpanchyk"}, "path": "src/test/resources/org/prebid/server/it/openrtb2/rubicon_appnexus/test-cache-rubicon-appnexus-request.json", "diffHunk": "@@ -17,7 +18,8 @@\n         \"adm\": \"adm2\",\n         \"crid\": \"crid2\",\n         \"w\": 300,\n-        \"h\": 600\n+        \"h\": 600,\n+        \"wurl\": \"http://localhost:8000/event?t=win&b=BIDID&a=5001&f=i\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2ODg1NA=="}, "originalCommit": {"oid": "37556fcd56be4641f594cdd5b0a6658ee3bf0005"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjk5NjEzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjozMzoxMVrOF28Qmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjozMzoxMVrOF28Qmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1NDcxNQ==", "bodyText": "Please, add new test that verifies calling arguments for eventsService, like:\nverify(eventsService).winUrlCaching(eq(\"bidId1\"), eq(\"accountId\"));\n\nThen account declaration is not needed in all remaining tests.\nJust change matching args there:\ngiven(eventsService.winUrlCaching(anyString(), any())).willReturn(\"http://win-url\");\n\nany() will match null account ID.\nThis will keep tests more clean.", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r393154715", "createdAt": "2020-03-16T16:33:11Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -376,8 +382,10 @@ public void cacheBidsOpenrtbShouldTolerateReadingHttpResponseFails() throws Json\n         givenHttpClientProducesException(new RuntimeException(\"Response exception\"));\n \n         final com.iab.openrtb.response.Bid bid = givenBidOpenrtb(builder -> builder.id(\"bidId1\").impid(\"impId1\"));\n+        given(eventsService.winUrlCaching(anyString(), anyString())).willReturn(\"http://win-url\");\n \n         // when\n+        account = Account.builder().id(\"accountId\").build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fe99d6034431ae5acd4ce0c84f79e2d8e174dbf"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzA5MzcwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjo1NTo1OFrOF29Oxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjo1NTo1OFrOF29Oxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE3MDYzMQ==", "bodyText": "No reason for adding all possible values, just use anyString().\nPls check all similar tests.", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r393170631", "createdAt": "2020-03-16T16:55:58Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -494,18 +509,25 @@ public void cacheBidsOpenrtbShouldPerformHttpRequestWithExpectedBody() throws IO\n         final com.iab.openrtb.response.Bid bid2 = givenBidOpenrtb(builder -> builder.impid(\"impId2\").adm(\"adm2\"));\n         final Imp imp1 = givenImp(identity());\n         final Imp imp2 = givenImp(builder -> builder.id(\"impId2\").video(Video.builder().build()));\n+        given(eventsService.winUrlCaching(bid1.getId(), \"accountId\")).willReturn(\"http://win-url\");\n+        given(eventsService.winUrlCaching(bid2.getId(), \"accountId\")).willReturn(\"http://win-url\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fe99d6034431ae5acd4ce0c84f79e2d8e174dbf"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzEzODMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/cache/CacheService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzowMzo1MVrOF29q1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzowMzo1MVrOF29q1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE3NzgxNA==", "bodyText": "Pls extract cacheBid.getBid() to separate variable.\nThen bidId declaration can be omitted.", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r393177814", "createdAt": "2020-03-16T17:03:51Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/cache/CacheService.java", "diffHunk": "@@ -379,12 +380,18 @@ private static PutObject createPutObjectVideoOnly(Bid bid) {\n     }\n \n     /**\n-     * Makes JSON type {@link PutObject} from {@link com.iab.openrtb.response.Bid}. Used for OpenRTB auction request.\n+     * Makes JSON type {@link PutObject} from {@link com.iab.openrtb.response.Bid}. Used for OpenRTB auction request and\n+     * add winn url.\n      */\n-    private PutObject createJsonPutObjectOpenrtb(CacheBid cacheBid) {\n+    private PutObject createJsonPutObjectOpenrtb(CacheBid cacheBid, String accountId) {\n+        final String bidId = cacheBid.getBid().getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fe99d6034431ae5acd4ce0c84f79e2d8e174dbf"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzE1ODk5OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzowNzo0MFrOF294CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzowNzo0MFrOF294CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4MTE5Mg==", "bodyText": "Minor. Pls add new line.", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r393181192", "createdAt": "2020-03-16T17:07:40Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -396,8 +404,9 @@ public void cacheBidsOpenrtbShouldTolerateResponseCodeIsNot200() throws JsonProc\n         givenHttpClientReturnsResponse(503, \"response\");\n \n         final com.iab.openrtb.response.Bid bid = givenBidOpenrtb(builder -> builder.id(\"bidId1\").impid(\"impId1\"));\n-\n+        given(eventsService.winUrlCaching(anyString(), anyString())).willReturn(\"http://win-url\");\n         // when", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fe99d6034431ae5acd4ce0c84f79e2d8e174dbf"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTczMzY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/cache/CacheService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDo1NToxNVrOF3XEqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDo1NToxNVrOF3XEqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU5NDAyNA==", "bodyText": "Pls use bid var instead.", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r393594024", "createdAt": "2020-03-17T10:55:15Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/cache/CacheService.java", "diffHunk": "@@ -379,12 +380,18 @@ private static PutObject createPutObjectVideoOnly(Bid bid) {\n     }\n \n     /**\n-     * Makes JSON type {@link PutObject} from {@link com.iab.openrtb.response.Bid}. Used for OpenRTB auction request.\n+     * Makes JSON type {@link PutObject} from {@link com.iab.openrtb.response.Bid}. Used for OpenRTB auction request and\n+     * add winn url.\n      */\n-    private PutObject createJsonPutObjectOpenrtb(CacheBid cacheBid) {\n+    private PutObject createJsonPutObjectOpenrtb(CacheBid cacheBid, String accountId) {\n+        final com.iab.openrtb.response.Bid bid = cacheBid.getBid();\n+        final ObjectNode bidObjectNode = mapper.mapper().valueToTree(cacheBid.getBid());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70c731aad7473f683750994ee7cdf069d9e7498"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTc1NTM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/events/EventsService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTowMjoyNFrOF3XTKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTowMjoyNFrOF3XTKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU5NzczOQ==", "bodyText": "Pls change to Returns value for win URL tracking.", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r393597739", "createdAt": "2020-03-17T11:02:24Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/events/EventsService.java", "diffHunk": "@@ -31,6 +31,13 @@ public String winUrlTargeting(String accountId) {\n         return eventUrl(EventRequest.Type.win, BIDID_PLACEHOLDER, accountId, EventRequest.Format.image);\n     }\n \n+    /**\n+     * Returns value for caching winurl keyword in request.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70c731aad7473f683750994ee7cdf069d9e7498"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTc1NjUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/events/EventsService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTowMjo0N1rOF3XT9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTowMjo0N1rOF3XT9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU5Nzk0Mg==", "bodyText": "Rename to winUrl(...).", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r393597942", "createdAt": "2020-03-17T11:02:47Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/events/EventsService.java", "diffHunk": "@@ -31,6 +31,13 @@ public String winUrlTargeting(String accountId) {\n         return eventUrl(EventRequest.Type.win, BIDID_PLACEHOLDER, accountId, EventRequest.Format.image);\n     }\n \n+    /**\n+     * Returns value for caching winurl keyword in request.\n+     */\n+    public String winUrlCaching(String bidId, String accountId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70c731aad7473f683750994ee7cdf069d9e7498"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTc4MjE4OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMToxMToxNFrOF3XlAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMToxMToxNFrOF3XlAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYwMjMwNA==", "bodyText": "This declaration should be a part of given section.\nPls check all remaining tests.", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r393602304", "createdAt": "2020-03-17T11:11:14Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -370,12 +370,28 @@ public void cacheBidsOpenrtbShouldTolerateGlobalTimeoutAlreadyExpired() {\n         assertThat(result.getHttpCall()).isNull();\n     }\n \n+    @Test\n+    public void cacheBidsOpenrtbShouldStoreWinUrl() throws JsonProcessingException {\n+        // given\n+        final com.iab.openrtb.response.Bid bid = givenBidOpenrtb(builder -> builder.id(\"bidId1\").impid(\"impId1\"));\n+\n+        // when\n+        account = Account.builder().id(\"accountId\").build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70c731aad7473f683750994ee7cdf069d9e7498"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTc4NjQzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMToxMjozMlrOF3XnpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMToxMjozMlrOF3XnpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYwMjk4MA==", "bodyText": "No reason for duplicate.", "url": "https://github.com/prebid/prebid-server-java/pull/631#discussion_r393602980", "createdAt": "2020-03-17T11:12:32Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/cache/CacheServiceTest.java", "diffHunk": "@@ -721,18 +746,24 @@ public void cacheBidsOpenrtbShouldWrapEmptyAdMFieldUsingNurlFieldValue() throws\n         final com.iab.openrtb.response.Bid bid1 = givenBidOpenrtb(builder -> builder.impid(\"impId1\").adm(\"adm1\"));\n         final com.iab.openrtb.response.Bid bid2 = givenBidOpenrtb(builder -> builder.impid(\"impId1\").nurl(\"adm2\"));\n         final Imp imp1 = givenImp(builder -> builder.id(\"impId1\").video(Video.builder().build()));\n+        given(eventsService.winUrlCaching(any(), any())).willReturn(\"http://win-url\");\n+        given(eventsService.winUrlCaching(any(), any())).willReturn(\"http://win-url\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70c731aad7473f683750994ee7cdf069d9e7498"}, "originalPosition": 134}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4154, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}