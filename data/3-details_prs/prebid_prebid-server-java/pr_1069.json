{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MDQwOTUx", "number": 1069, "title": "Add support for multi-imp requests in ttx bidder", "bodyText": "Ported from prebid/prebid-server#1609\nexcept request.ext.ttx.ATTR field since it is impact core which shouldn't be happen for bidder's modification.", "createdAt": "2020-12-13T23:20:47Z", "url": "https://github.com/prebid/prebid-server-java/pull/1069", "merged": true, "mergeCommit": {"oid": "2939c96b0657df00e97fbfca44427772ad3c4df1"}, "closed": true, "closedAt": "2021-01-28T06:07:55Z", "author": {"login": "snahornyi"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdl5lgFgH2gAyNTM5MDQwOTUxOjU4MDI4NzViNDA5ZTIyZTc5YWE1NWZmNjlmNWJkOWZkOWZkNDRkYWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd0ealOgFqTU3ODAxMTMwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5802875b409e22e79aa55ff69f5bd9fd9fd44daa", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/5802875b409e22e79aa55ff69f5bd9fd9fd44daa", "committedDate": "2020-12-13T23:17:59Z", "message": "Add support for multi-imp requests in ttx bidder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ed4932231562d31190e4645000fab4e3b78e576", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/0ed4932231562d31190e4645000fab4e3b78e576", "committedDate": "2021-01-25T11:53:04Z", "message": "Updated position of request ext creating"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a0edc2cd13a66d7fc96d6eab7a2f710885648c5", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/0a0edc2cd13a66d7fc96d6eab7a2f710885648c5", "committedDate": "2021-01-25T11:53:12Z", "message": "Merge branch 'master' into ttx/multi/request"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc1NDQ0Njc3", "url": "https://github.com/prebid/prebid-server-java/pull/1069#pullrequestreview-575444677", "createdAt": "2021-01-25T14:24:35Z", "commit": {"oid": "0a0edc2cd13a66d7fc96d6eab7a2f710885648c5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNDoyNDozNVrOIZpOKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNDo0MTo0MlrOIZqDPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc2MDY4MQ==", "bodyText": "Catch exception", "url": "https://github.com/prebid/prebid-server-java/pull/1069#discussion_r563760681", "createdAt": "2021-01-25T14:24:35Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "diffHunk": "@@ -56,44 +60,68 @@ public TtxBidder(String endpointUrl, JacksonMapper mapper) {\n \n     @Override\n     public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n-        final Imp firstImp = request.getImp().get(0);\n         final List<BidderError> errors = new ArrayList<>();\n-        Imp updatedFirstImp = null;\n-        ExtImpTtx extImpTtx = null;\n-        try {\n-            extImpTtx = parseImpExt(firstImp);\n-            updatedFirstImp = updatedImp(firstImp, extImpTtx.getProductId(), extImpTtx.getZoneId(), errors);\n-        } catch (PreBidException e) {\n-            errors.add(BidderError.badInput(e.getMessage()));\n-        }\n-\n-        if (updatedFirstImp != null && updatedFirstImp.getBanner() == null && updatedFirstImp.getVideo() == null) {\n-            return Result.withError(BidderError.badInput(\"At least one of [banner, video] \"\n-                    + \"formats must be defined in Imp. None found\"));\n-        }\n+        final List<HttpRequest<BidRequest>> requests = new ArrayList<>();\n \n-        final HttpRequest<BidRequest> httpRequest = createRequest(request, extImpTtx, updatedFirstImp);\n+        final ExtRequest reqExt = updateExtRequest(request.getExt());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0edc2cd13a66d7fc96d6eab7a2f710885648c5"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc3MDc5NQ==", "bodyText": "makeRequest seems redundant.\nCould you split it like.\nvalidateImp()\nparseImpExt()\nupdateImp()\ncreateRequest()", "url": "https://github.com/prebid/prebid-server-java/pull/1069#discussion_r563770795", "createdAt": "2021-01-25T14:37:29Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "diffHunk": "@@ -56,44 +60,68 @@ public TtxBidder(String endpointUrl, JacksonMapper mapper) {\n \n     @Override\n     public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n-        final Imp firstImp = request.getImp().get(0);\n         final List<BidderError> errors = new ArrayList<>();\n-        Imp updatedFirstImp = null;\n-        ExtImpTtx extImpTtx = null;\n-        try {\n-            extImpTtx = parseImpExt(firstImp);\n-            updatedFirstImp = updatedImp(firstImp, extImpTtx.getProductId(), extImpTtx.getZoneId(), errors);\n-        } catch (PreBidException e) {\n-            errors.add(BidderError.badInput(e.getMessage()));\n-        }\n-\n-        if (updatedFirstImp != null && updatedFirstImp.getBanner() == null && updatedFirstImp.getVideo() == null) {\n-            return Result.withError(BidderError.badInput(\"At least one of [banner, video] \"\n-                    + \"formats must be defined in Imp. None found\"));\n-        }\n+        final List<HttpRequest<BidRequest>> requests = new ArrayList<>();\n \n-        final HttpRequest<BidRequest> httpRequest = createRequest(request, extImpTtx, updatedFirstImp);\n+        final ExtRequest reqExt = updateExtRequest(request.getExt());\n \n-        return Result.of(Collections.singletonList(httpRequest), errors);\n+        for (Imp imp : request.getImp()) {\n+            try {\n+                requests.add(makeRequest(request, imp, reqExt));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0edc2cd13a66d7fc96d6eab7a2f710885648c5"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc3MzQ2NQ==", "bodyText": "redundant /n", "url": "https://github.com/prebid/prebid-server-java/pull/1069#discussion_r563773465", "createdAt": "2021-01-25T14:40:50Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "diffHunk": "@@ -132,14 +159,15 @@ private static Integer resolvePlacement(Integer videoPlacement, String productId\n         return videoPlacement;\n     }\n \n-    private ObjectNode createImpExt(String productId, String zoneId) {\n-        final TtxImpExt ttxImpExt = TtxImpExt.of(TtxImpExtTtx.of(productId, StringUtils.stripToNull(zoneId)));\n+    private ObjectNode createImpExt(String productId, String zoneId, String siteId) {\n+        final TtxImpExt ttxImpExt = TtxImpExt.of(\n+                TtxImpExtTtx.of(productId, StringUtils.isNotEmpty(zoneId) ? zoneId : siteId));\n         return mapper.mapper().valueToTree(ttxImpExt);\n     }\n \n-    private HttpRequest<BidRequest> createRequest(BidRequest request, ExtImpTtx extImpTtx, Imp updatedFirstImp) {\n-        final Site updatedSite = extImpTtx != null ? updateSite(request.getSite(), extImpTtx.getSiteId()) : null;\n-        final BidRequest modifiedRequest = updateRequest(request, updatedSite, updatedFirstImp);\n+    private HttpRequest<BidRequest> createRequest(BidRequest request,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0edc2cd13a66d7fc96d6eab7a2f710885648c5"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc3NDI2OQ==", "bodyText": "seems redundant method", "url": "https://github.com/prebid/prebid-server-java/pull/1069#discussion_r563774269", "createdAt": "2021-01-25T14:41:42Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "diffHunk": "@@ -150,27 +178,14 @@ private ObjectNode createImpExt(String productId, String zoneId) {\n                 .build();\n     }\n \n-    private static Site updateSite(Site site, String siteId) {\n-        return site == null ? null : site.toBuilder().id(siteId).build();\n-    }\n+    private static BidRequest updateRequest(BidRequest request, Imp requestImp, ExtRequest extRequest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0edc2cd13a66d7fc96d6eab7a2f710885648c5"}, "originalPosition": 166}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e93ac535c623a98ef878b40fe12147b99ac756dd", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/e93ac535c623a98ef878b40fe12147b99ac756dd", "committedDate": "2021-01-25T15:09:30Z", "message": "Fixes after review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc1NDk1Mzkw", "url": "https://github.com/prebid/prebid-server-java/pull/1069#pullrequestreview-575495390", "createdAt": "2021-01-25T15:13:32Z", "commit": {"oid": "e93ac535c623a98ef878b40fe12147b99ac756dd"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc1NTE5NTky", "url": "https://github.com/prebid/prebid-server-java/pull/1069#pullrequestreview-575519592", "createdAt": "2021-01-25T15:36:13Z", "commit": {"oid": "e93ac535c623a98ef878b40fe12147b99ac756dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNTozNjoxM1rOIZsulA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNTozNjoxM1rOIZsulA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzgxODEzMg==", "bodyText": "Let's discuss this approach", "url": "https://github.com/prebid/prebid-server-java/pull/1069#discussion_r563818132", "createdAt": "2021-01-25T15:36:13Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/proto/openrtb/ext/FlexibleExtension.java", "diffHunk": "@@ -19,7 +20,15 @@\n             new TypeReference<Map<String, JsonNode>>() {\n             };\n \n-    private final Map<String, JsonNode> properties = new HashMap<>();\n+    private final Map<String, JsonNode> properties;\n+\n+    protected FlexibleExtension(Map<String, JsonNode> properties) {\n+        this.properties = MapUtils.isNotEmpty(properties) ? new HashMap<>(properties) : new HashMap<>();\n+    }\n+\n+    protected FlexibleExtension() {\n+        this.properties = new HashMap<>();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e93ac535c623a98ef878b40fe12147b99ac756dd"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1aef3a6eced9072d1e447260436505b447054348", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/1aef3a6eced9072d1e447260436505b447054348", "committedDate": "2021-01-27T12:52:54Z", "message": "Add addProperties instead of constructor creating"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3MzA2MDUx", "url": "https://github.com/prebid/prebid-server-java/pull/1069#pullrequestreview-577306051", "createdAt": "2021-01-27T12:56:51Z", "commit": {"oid": "1aef3a6eced9072d1e447260436505b447054348"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed48be93d515526d5c7756567656748ad1b7fe10", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/ed48be93d515526d5c7756567656748ad1b7fe10", "committedDate": "2021-01-27T16:13:44Z", "message": "Remove changes related to core"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4MDExMzAw", "url": "https://github.com/prebid/prebid-server-java/pull/1069#pullrequestreview-578011300", "createdAt": "2021-01-28T06:07:29Z", "commit": {"oid": "ed48be93d515526d5c7756567656748ad1b7fe10"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2971, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}