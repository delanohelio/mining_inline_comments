{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NDk2OTMx", "number": 822, "title": "Add new Mobilefuse bidder and tests", "bodyText": "Add new Mobilefuse bidder to keep up with Go vesion", "createdAt": "2020-07-21T13:15:02Z", "url": "https://github.com/prebid/prebid-server-java/pull/822", "merged": true, "mergeCommit": {"oid": "a3c481601ef63dcd1ae8bdffc46f9c169747a858"}, "closed": true, "closedAt": "2020-09-22T12:57:27Z", "author": {"login": "AndriyPavlyuk"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3GCE-gH2gAyNDU0NDk2OTMxOjRlOWU2YzcwZjUwNWY5YmM1MGQ0ZTQ5OWM0MzdkNWJlMjliYTZlZmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLWSUDgFqTQ5MzM2MjYyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4e9e6c70f505f9bc50d4e499c437d5be29ba6efe", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/4e9e6c70f505f9bc50d4e499c437d5be29ba6efe", "committedDate": "2020-07-21T13:13:37Z", "message": "Add bidder and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d021978c1391013fe6220c6e8f040ac2b52ff745", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/d021978c1391013fe6220c6e8f040ac2b52ff745", "committedDate": "2020-08-26T09:17:10Z", "message": "Refactoring code and tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTk5MzEz", "url": "https://github.com/prebid/prebid-server-java/pull/822#pullrequestreview-489599313", "createdAt": "2020-09-16T13:01:28Z", "commit": {"oid": "d021978c1391013fe6220c6e8f040ac2b52ff745"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzowMToyOFrOHSvtVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzowMzo0MFrOHSvy8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQxODA3MQ==", "bodyText": "it will not be the frist one. It will be last valid.\nJust create sepparate method for this", "url": "https://github.com/prebid/prebid-server-java/pull/822#discussion_r489418071", "createdAt": "2020-09-16T13:01:28Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidder.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package org.prebid.server.bidder.mobilefuse;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.iab.openrtb.request.BidRequest;\n+import com.iab.openrtb.request.Imp;\n+import com.iab.openrtb.response.BidResponse;\n+import com.iab.openrtb.response.SeatBid;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.vertx.core.http.HttpMethod;\n+import org.prebid.server.bidder.Bidder;\n+import org.prebid.server.bidder.model.BidderBid;\n+import org.prebid.server.bidder.model.BidderError;\n+import org.prebid.server.bidder.model.HttpCall;\n+import org.prebid.server.bidder.model.HttpRequest;\n+import org.prebid.server.bidder.model.Result;\n+import org.prebid.server.exception.PreBidException;\n+import org.prebid.server.json.DecodeException;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.proto.openrtb.ext.ExtPrebid;\n+import org.prebid.server.proto.openrtb.ext.request.mobilefuse.ExtImpMobilefuse;\n+import org.prebid.server.proto.openrtb.ext.response.BidType;\n+import org.prebid.server.util.HttpUtil;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * MobilefuseBidder {@link Bidder} implementation.\n+ */\n+public class MobilefuseBidder implements Bidder<BidRequest> {\n+\n+    private static final TypeReference<ExtPrebid<?, ExtImpMobilefuse>> MOBILEFUSE_EXT_TYPE_REFERENCE =\n+            new TypeReference<ExtPrebid<?, ExtImpMobilefuse>>() {\n+            };\n+\n+    private static final String DEFAULT_BID_CURRENCY = \"USD\";\n+\n+    private final String endpointUrl;\n+    private final JacksonMapper mapper;\n+\n+    public MobilefuseBidder(String endpointUrl, JacksonMapper mapper) {\n+        this.endpointUrl = HttpUtil.validateUrl(Objects.requireNonNull(endpointUrl));\n+        this.mapper = Objects.requireNonNull(mapper);\n+    }\n+\n+    @Override\n+    public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n+        final List<BidderError> errors = new ArrayList<>();\n+        final List<Imp> imps = new ArrayList<>();\n+\n+        ExtImpMobilefuse firstExtImpMobilefuse = null;\n+        for (Imp imp : request.getImp()) {\n+            try {\n+                final ExtImpMobilefuse extImpMobilefuse = parseImpExt(imp);\n+                firstExtImpMobilefuse = firstExtImpMobilefuse == null ? extImpMobilefuse : firstExtImpMobilefuse;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d021978c1391013fe6220c6e8f040ac2b52ff745"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQxODk3Ng==", "bodyText": "they don't use same imp.ext they ALWAYS reuse first found ext", "url": "https://github.com/prebid/prebid-server-java/pull/822#discussion_r489418976", "createdAt": "2020-09-16T13:02:55Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidder.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package org.prebid.server.bidder.mobilefuse;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.iab.openrtb.request.BidRequest;\n+import com.iab.openrtb.request.Imp;\n+import com.iab.openrtb.response.BidResponse;\n+import com.iab.openrtb.response.SeatBid;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.vertx.core.http.HttpMethod;\n+import org.prebid.server.bidder.Bidder;\n+import org.prebid.server.bidder.model.BidderBid;\n+import org.prebid.server.bidder.model.BidderError;\n+import org.prebid.server.bidder.model.HttpCall;\n+import org.prebid.server.bidder.model.HttpRequest;\n+import org.prebid.server.bidder.model.Result;\n+import org.prebid.server.exception.PreBidException;\n+import org.prebid.server.json.DecodeException;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.proto.openrtb.ext.ExtPrebid;\n+import org.prebid.server.proto.openrtb.ext.request.mobilefuse.ExtImpMobilefuse;\n+import org.prebid.server.proto.openrtb.ext.response.BidType;\n+import org.prebid.server.util.HttpUtil;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * MobilefuseBidder {@link Bidder} implementation.\n+ */\n+public class MobilefuseBidder implements Bidder<BidRequest> {\n+\n+    private static final TypeReference<ExtPrebid<?, ExtImpMobilefuse>> MOBILEFUSE_EXT_TYPE_REFERENCE =\n+            new TypeReference<ExtPrebid<?, ExtImpMobilefuse>>() {\n+            };\n+\n+    private static final String DEFAULT_BID_CURRENCY = \"USD\";\n+\n+    private final String endpointUrl;\n+    private final JacksonMapper mapper;\n+\n+    public MobilefuseBidder(String endpointUrl, JacksonMapper mapper) {\n+        this.endpointUrl = HttpUtil.validateUrl(Objects.requireNonNull(endpointUrl));\n+        this.mapper = Objects.requireNonNull(mapper);\n+    }\n+\n+    @Override\n+    public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n+        final List<BidderError> errors = new ArrayList<>();\n+        final List<Imp> imps = new ArrayList<>();\n+\n+        ExtImpMobilefuse firstExtImpMobilefuse = null;\n+        for (Imp imp : request.getImp()) {\n+            try {\n+                final ExtImpMobilefuse extImpMobilefuse = parseImpExt(imp);\n+                firstExtImpMobilefuse = firstExtImpMobilefuse == null ? extImpMobilefuse : firstExtImpMobilefuse;\n+                final Imp modifiedImp = modifyImp(imp, extImpMobilefuse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d021978c1391013fe6220c6e8f040ac2b52ff745"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQxOTA3MA==", "bodyText": "redundant just go to the next one", "url": "https://github.com/prebid/prebid-server-java/pull/822#discussion_r489419070", "createdAt": "2020-09-16T13:03:05Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidder.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package org.prebid.server.bidder.mobilefuse;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.iab.openrtb.request.BidRequest;\n+import com.iab.openrtb.request.Imp;\n+import com.iab.openrtb.response.BidResponse;\n+import com.iab.openrtb.response.SeatBid;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.vertx.core.http.HttpMethod;\n+import org.prebid.server.bidder.Bidder;\n+import org.prebid.server.bidder.model.BidderBid;\n+import org.prebid.server.bidder.model.BidderError;\n+import org.prebid.server.bidder.model.HttpCall;\n+import org.prebid.server.bidder.model.HttpRequest;\n+import org.prebid.server.bidder.model.Result;\n+import org.prebid.server.exception.PreBidException;\n+import org.prebid.server.json.DecodeException;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.proto.openrtb.ext.ExtPrebid;\n+import org.prebid.server.proto.openrtb.ext.request.mobilefuse.ExtImpMobilefuse;\n+import org.prebid.server.proto.openrtb.ext.response.BidType;\n+import org.prebid.server.util.HttpUtil;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * MobilefuseBidder {@link Bidder} implementation.\n+ */\n+public class MobilefuseBidder implements Bidder<BidRequest> {\n+\n+    private static final TypeReference<ExtPrebid<?, ExtImpMobilefuse>> MOBILEFUSE_EXT_TYPE_REFERENCE =\n+            new TypeReference<ExtPrebid<?, ExtImpMobilefuse>>() {\n+            };\n+\n+    private static final String DEFAULT_BID_CURRENCY = \"USD\";\n+\n+    private final String endpointUrl;\n+    private final JacksonMapper mapper;\n+\n+    public MobilefuseBidder(String endpointUrl, JacksonMapper mapper) {\n+        this.endpointUrl = HttpUtil.validateUrl(Objects.requireNonNull(endpointUrl));\n+        this.mapper = Objects.requireNonNull(mapper);\n+    }\n+\n+    @Override\n+    public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n+        final List<BidderError> errors = new ArrayList<>();\n+        final List<Imp> imps = new ArrayList<>();\n+\n+        ExtImpMobilefuse firstExtImpMobilefuse = null;\n+        for (Imp imp : request.getImp()) {\n+            try {\n+                final ExtImpMobilefuse extImpMobilefuse = parseImpExt(imp);\n+                firstExtImpMobilefuse = firstExtImpMobilefuse == null ? extImpMobilefuse : firstExtImpMobilefuse;\n+                final Imp modifiedImp = modifyImp(imp, extImpMobilefuse);\n+                imps.add(modifiedImp);\n+            } catch (PreBidException e) {\n+                errors.add(BidderError.badInput(e.getMessage()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d021978c1391013fe6220c6e8f040ac2b52ff745"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQxOTUwNg==", "bodyText": "Only after this check, we can modifyImps", "url": "https://github.com/prebid/prebid-server-java/pull/822#discussion_r489419506", "createdAt": "2020-09-16T13:03:40Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidder.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package org.prebid.server.bidder.mobilefuse;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.iab.openrtb.request.BidRequest;\n+import com.iab.openrtb.request.Imp;\n+import com.iab.openrtb.response.BidResponse;\n+import com.iab.openrtb.response.SeatBid;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.vertx.core.http.HttpMethod;\n+import org.prebid.server.bidder.Bidder;\n+import org.prebid.server.bidder.model.BidderBid;\n+import org.prebid.server.bidder.model.BidderError;\n+import org.prebid.server.bidder.model.HttpCall;\n+import org.prebid.server.bidder.model.HttpRequest;\n+import org.prebid.server.bidder.model.Result;\n+import org.prebid.server.exception.PreBidException;\n+import org.prebid.server.json.DecodeException;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.proto.openrtb.ext.ExtPrebid;\n+import org.prebid.server.proto.openrtb.ext.request.mobilefuse.ExtImpMobilefuse;\n+import org.prebid.server.proto.openrtb.ext.response.BidType;\n+import org.prebid.server.util.HttpUtil;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * MobilefuseBidder {@link Bidder} implementation.\n+ */\n+public class MobilefuseBidder implements Bidder<BidRequest> {\n+\n+    private static final TypeReference<ExtPrebid<?, ExtImpMobilefuse>> MOBILEFUSE_EXT_TYPE_REFERENCE =\n+            new TypeReference<ExtPrebid<?, ExtImpMobilefuse>>() {\n+            };\n+\n+    private static final String DEFAULT_BID_CURRENCY = \"USD\";\n+\n+    private final String endpointUrl;\n+    private final JacksonMapper mapper;\n+\n+    public MobilefuseBidder(String endpointUrl, JacksonMapper mapper) {\n+        this.endpointUrl = HttpUtil.validateUrl(Objects.requireNonNull(endpointUrl));\n+        this.mapper = Objects.requireNonNull(mapper);\n+    }\n+\n+    @Override\n+    public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n+        final List<BidderError> errors = new ArrayList<>();\n+        final List<Imp> imps = new ArrayList<>();\n+\n+        ExtImpMobilefuse firstExtImpMobilefuse = null;\n+        for (Imp imp : request.getImp()) {\n+            try {\n+                final ExtImpMobilefuse extImpMobilefuse = parseImpExt(imp);\n+                firstExtImpMobilefuse = firstExtImpMobilefuse == null ? extImpMobilefuse : firstExtImpMobilefuse;\n+                final Imp modifiedImp = modifyImp(imp, extImpMobilefuse);\n+                imps.add(modifiedImp);\n+            } catch (PreBidException e) {\n+                errors.add(BidderError.badInput(e.getMessage()));\n+            }\n+        }\n+\n+        if (firstExtImpMobilefuse == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d021978c1391013fe6220c6e8f040ac2b52ff745"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8604d3215347c6447eefbaeb914e1d14c0a74b2", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/f8604d3215347c6447eefbaeb914e1d14c0a74b2", "committedDate": "2020-09-17T12:55:48Z", "message": "Add bidder and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3918d2748abbe68f7491c29d2386e28daa518962", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/3918d2748abbe68f7491c29d2386e28daa518962", "committedDate": "2020-09-17T12:55:48Z", "message": "Refactoring code and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "858b81c3748d6dbcdaf3ca0162a23d765b0f9fb7", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/858b81c3748d6dbcdaf3ca0162a23d765b0f9fb7", "committedDate": "2020-09-17T13:45:25Z", "message": "Refactoring code after review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc648af432922c8d05fcbeaf5448f17e914e8559", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/fc648af432922c8d05fcbeaf5448f17e914e8559", "committedDate": "2020-09-17T13:46:32Z", "message": "Merge remote-tracking branch 'github-rubicon/add-mobilefuse-bidder' into add-mobilefuse-bidder\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidder.java\n#\tsrc/test/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidderTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a268eae306e8f2e944941e6594d5b1cae081c9f", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/8a268eae306e8f2e944941e6594d5b1cae081c9f", "committedDate": "2020-09-17T15:30:12Z", "message": "Fix currency of BidderBid"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f50e439193e3d0286a3badca54c6680e3f5f170", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/5f50e439193e3d0286a3badca54c6680e3f5f170", "committedDate": "2020-09-17T15:39:01Z", "message": "Merge remote-tracking branch 'github-rubicon/add-mobilefuse-bidder' into add-mobilefuse-bidder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f50e439193e3d0286a3badca54c6680e3f5f170", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/5f50e439193e3d0286a3badca54c6680e3f5f170", "committedDate": "2020-09-17T15:39:01Z", "message": "Merge remote-tracking branch 'github-rubicon/add-mobilefuse-bidder' into add-mobilefuse-bidder"}, "afterCommit": {"oid": "858b81c3748d6dbcdaf3ca0162a23d765b0f9fb7", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/858b81c3748d6dbcdaf3ca0162a23d765b0f9fb7", "committedDate": "2020-09-17T13:45:25Z", "message": "Refactoring code after review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b391e4d5b3caf4a9097e0006f22457351fd6ef95", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/b391e4d5b3caf4a9097e0006f22457351fd6ef95", "committedDate": "2020-09-18T12:10:55Z", "message": "Merge branch 'master' into add-mobilefuse-bidder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMzI2NzE1", "url": "https://github.com/prebid/prebid-server-java/pull/822#pullrequestreview-493326715", "createdAt": "2020-09-22T10:35:50Z", "commit": {"oid": "858b81c3748d6dbcdaf3ca0162a23d765b0f9fb7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDozNTo1MFrOHVz-EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDozNTo1MFrOHVz-EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzMzYxNg==", "bodyText": "use Stream API", "url": "https://github.com/prebid/prebid-server-java/pull/822#discussion_r492633616", "createdAt": "2020-09-22T10:35:50Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidder.java", "diffHunk": "@@ -51,25 +51,23 @@ public MobilefuseBidder(String endpointUrl, JacksonMapper mapper) {\n \n     @Override\n     public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n-        final List<BidderError> errors = new ArrayList<>();\n         final List<Imp> imps = new ArrayList<>();\n \n-        ExtImpMobilefuse firstExtImpMobilefuse = null;\n-        for (Imp imp : request.getImp()) {\n-            try {\n-                final ExtImpMobilefuse extImpMobilefuse = parseImpExt(imp);\n-                firstExtImpMobilefuse = firstExtImpMobilefuse == null ? extImpMobilefuse : firstExtImpMobilefuse;\n-                final Imp modifiedImp = modifyImp(imp, extImpMobilefuse);\n-                imps.add(modifiedImp);\n-            } catch (PreBidException e) {\n-                errors.add(BidderError.badInput(e.getMessage()));\n-            }\n-        }\n+        final ExtImpMobilefuse firstExtImpMobilefuse = request.getImp().stream()\n+                .map(this::parseImpExt)\n+                .filter(Objects::nonNull)\n+                .findFirst()\n+                .orElse(null);\n \n         if (firstExtImpMobilefuse == null) {\n             return Result.emptyWithError(BidderError.badInput(\"Invalid ExtImpMobilefuse value\"));\n         }\n \n+        for (Imp imp : request.getImp()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "858b81c3748d6dbcdaf3ca0162a23d765b0f9fb7"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d2a9e81434f3f786b014fe63dafd3aff3fe2ec3", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/6d2a9e81434f3f786b014fe63dafd3aff3fe2ec3", "committedDate": "2020-09-22T11:09:24Z", "message": "Use stream for getting imps"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMzYyNjIy", "url": "https://github.com/prebid/prebid-server-java/pull/822#pullrequestreview-493362622", "createdAt": "2020-09-22T11:28:19Z", "commit": {"oid": "6d2a9e81434f3f786b014fe63dafd3aff3fe2ec3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3100, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}