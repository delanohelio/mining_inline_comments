{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NjkzMjE0", "number": 959, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxMzoyOTo0NlrOFOJVEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNToyMToyNlrOFOuC6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwMzc3MjMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/spring/config/model/AccountConfigurationProperties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxMzoyOTo0NlrOISvPtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNDo1NTo1MlrOISy9QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjUxOTM0OA==", "bodyText": "Why this annotation required ?", "url": "https://github.com/prebid/prebid-server-java/pull/959#discussion_r556519348", "createdAt": "2021-01-13T13:29:46Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/spring/config/model/AccountConfigurationProperties.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.prebid.server.spring.config.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.settings.model.Account;\n+import org.prebid.server.settings.model.AccountAnalyticsConfig;\n+import org.prebid.server.settings.model.AccountGdprConfig;\n+import org.prebid.server.settings.model.AccountStatus;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Validated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00dd80988b2e56cf77987eb260b34978b3c51184"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU4MDE2MQ==", "bodyText": "Good question. It's been copied along with other annotations that we put on Spring configuration properties POJOs but apparently there are no constraints imposed on any fields in this class so it's redundant. We may put sensible constraints in future and easily overlook adding @Validated annotation though so I'm hesitant about this one.", "url": "https://github.com/prebid/prebid-server-java/pull/959#discussion_r556580161", "createdAt": "2021-01-13T14:55:52Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/spring/config/model/AccountConfigurationProperties.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.prebid.server.spring.config.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.settings.model.Account;\n+import org.prebid.server.settings.model.AccountAnalyticsConfig;\n+import org.prebid.server.settings.model.AccountGdprConfig;\n+import org.prebid.server.settings.model.AccountStatus;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Validated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjUxOTM0OA=="}, "originalCommit": {"oid": "00dd80988b2e56cf77987eb260b34978b3c51184"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwMzc4MzcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/spring/config/model/AccountConfigurationProperties.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxMzozMjozOVrOISvWrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNTo1NTozNFrOIS2M8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjUyMTEzNQ==", "bodyText": "Why cant we use AccountGdprConfig class", "url": "https://github.com/prebid/prebid-server-java/pull/959#discussion_r556521135", "createdAt": "2021-01-13T13:32:39Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/spring/config/model/AccountConfigurationProperties.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.prebid.server.spring.config.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.settings.model.Account;\n+import org.prebid.server.settings.model.AccountAnalyticsConfig;\n+import org.prebid.server.settings.model.AccountGdprConfig;\n+import org.prebid.server.settings.model.AccountStatus;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Validated\n+@Data\n+@NoArgsConstructor\n+public class AccountConfigurationProperties {\n+\n+    private String priceGranularity;\n+\n+    private Integer bannerCacheTtl;\n+\n+    private Integer videoCacheTtl;\n+\n+    private Boolean eventsEnabled;\n+\n+    private Boolean enforceCcpa;\n+\n+    private String gdpr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00dd80988b2e56cf77987eb260b34978b3c51184"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU4MTY0MA==", "bodyText": "Because we don't want to add @Data @NoArgsConstructor annotations to AccountGdprConfig, i.e. make it a Spring configuration properties POJO.", "url": "https://github.com/prebid/prebid-server-java/pull/959#discussion_r556581640", "createdAt": "2021-01-13T14:57:38Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/spring/config/model/AccountConfigurationProperties.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.prebid.server.spring.config.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.settings.model.Account;\n+import org.prebid.server.settings.model.AccountAnalyticsConfig;\n+import org.prebid.server.settings.model.AccountGdprConfig;\n+import org.prebid.server.settings.model.AccountStatus;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Validated\n+@Data\n+@NoArgsConstructor\n+public class AccountConfigurationProperties {\n+\n+    private String priceGranularity;\n+\n+    private Integer bannerCacheTtl;\n+\n+    private Integer videoCacheTtl;\n+\n+    private Boolean eventsEnabled;\n+\n+    private Boolean enforceCcpa;\n+\n+    private String gdpr;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjUyMTEzNQ=="}, "originalCommit": {"oid": "00dd80988b2e56cf77987eb260b34978b3c51184"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU4NjQyMw==", "bodyText": "Probably you mean AccountAnalyticsConfig because AccountGdprConfig is already have this annotation.", "url": "https://github.com/prebid/prebid-server-java/pull/959#discussion_r556586423", "createdAt": "2021-01-13T15:03:36Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/spring/config/model/AccountConfigurationProperties.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.prebid.server.spring.config.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.settings.model.Account;\n+import org.prebid.server.settings.model.AccountAnalyticsConfig;\n+import org.prebid.server.settings.model.AccountGdprConfig;\n+import org.prebid.server.settings.model.AccountStatus;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Validated\n+@Data\n+@NoArgsConstructor\n+public class AccountConfigurationProperties {\n+\n+    private String priceGranularity;\n+\n+    private Integer bannerCacheTtl;\n+\n+    private Integer videoCacheTtl;\n+\n+    private Boolean eventsEnabled;\n+\n+    private Boolean enforceCcpa;\n+\n+    private String gdpr;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjUyMTEzNQ=="}, "originalCommit": {"oid": "00dd80988b2e56cf77987eb260b34978b3c51184"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU5ODIyOA==", "bodyText": "Good point. AccountGdprConfig shouldn't have had these annotations in the first place.", "url": "https://github.com/prebid/prebid-server-java/pull/959#discussion_r556598228", "createdAt": "2021-01-13T15:18:58Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/spring/config/model/AccountConfigurationProperties.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.prebid.server.spring.config.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.settings.model.Account;\n+import org.prebid.server.settings.model.AccountAnalyticsConfig;\n+import org.prebid.server.settings.model.AccountGdprConfig;\n+import org.prebid.server.settings.model.AccountStatus;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Validated\n+@Data\n+@NoArgsConstructor\n+public class AccountConfigurationProperties {\n+\n+    private String priceGranularity;\n+\n+    private Integer bannerCacheTtl;\n+\n+    private Integer videoCacheTtl;\n+\n+    private Boolean eventsEnabled;\n+\n+    private Boolean enforceCcpa;\n+\n+    private String gdpr;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjUyMTEzNQ=="}, "originalCommit": {"oid": "00dd80988b2e56cf77987eb260b34978b3c51184"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYwNjU5NA==", "bodyText": "Probably my mistake. I copy from GdprConfig which we get from yaml.\nBut why we don't want to make this @DaTa ? Because of mutability ?", "url": "https://github.com/prebid/prebid-server-java/pull/959#discussion_r556606594", "createdAt": "2021-01-13T15:29:26Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/spring/config/model/AccountConfigurationProperties.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.prebid.server.spring.config.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.settings.model.Account;\n+import org.prebid.server.settings.model.AccountAnalyticsConfig;\n+import org.prebid.server.settings.model.AccountGdprConfig;\n+import org.prebid.server.settings.model.AccountStatus;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Validated\n+@Data\n+@NoArgsConstructor\n+public class AccountConfigurationProperties {\n+\n+    private String priceGranularity;\n+\n+    private Integer bannerCacheTtl;\n+\n+    private Integer videoCacheTtl;\n+\n+    private Boolean eventsEnabled;\n+\n+    private Boolean enforceCcpa;\n+\n+    private String gdpr;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjUyMTEzNQ=="}, "originalCommit": {"oid": "00dd80988b2e56cf77987eb260b34978b3c51184"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYzMzMzMQ==", "bodyText": "Yes, it's a convention for value objects throughout PBS codebase to aspire for immutability unless it is impractical.\nAnother reason to take into consideration - using AccountGdprConfig to represent data in two different places (PBS configuration and account configuration in DB/file/etc) strongly couples these sources and forces changes in one place (account config for example) to affect another place (PBS config) and vice versa. Actually This is what Single Responsibility Principle is called to protect from.", "url": "https://github.com/prebid/prebid-server-java/pull/959#discussion_r556633331", "createdAt": "2021-01-13T15:55:34Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/spring/config/model/AccountConfigurationProperties.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.prebid.server.spring.config.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.settings.model.Account;\n+import org.prebid.server.settings.model.AccountAnalyticsConfig;\n+import org.prebid.server.settings.model.AccountGdprConfig;\n+import org.prebid.server.settings.model.AccountStatus;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Validated\n+@Data\n+@NoArgsConstructor\n+public class AccountConfigurationProperties {\n+\n+    private String priceGranularity;\n+\n+    private Integer bannerCacheTtl;\n+\n+    private Integer videoCacheTtl;\n+\n+    private Boolean eventsEnabled;\n+\n+    private Boolean enforceCcpa;\n+\n+    private String gdpr;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjUyMTEzNQ=="}, "originalCommit": {"oid": "00dd80988b2e56cf77987eb260b34978b3c51184"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTc4NzkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/settings/model/Account.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNToyMToyN1rOITpjAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNToyMToyN1rOITpjAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ3NDU2MQ==", "bodyText": "Minor. i'd rather suggest to use ObjectUtils.defaultIfNull(..) instead since we have only 2 possible values.", "url": "https://github.com/prebid/prebid-server-java/pull/959#discussion_r557474561", "createdAt": "2021-01-14T15:21:27Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/settings/model/Account.java", "diffHunk": "@@ -31,6 +32,27 @@\n \n     AccountBidValidationConfig bidValidations;\n \n+    AccountStatus status;\n+\n+    public Account merge(Account another) {\n+        return Account.builder()\n+                .id(ObjectUtils.firstNonNull(id, another.id))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa15bf08f0b939ca6a2471cd92e835b7759b1cf"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3930, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}