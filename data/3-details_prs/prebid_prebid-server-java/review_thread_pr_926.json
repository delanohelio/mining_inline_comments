{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMzQxMjI4", "number": 926, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDozMjozOVrOEm-qMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDozNjozOVrOEm-vzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzA3OTU1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/bidder/rubicon/RubiconBidderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDozMjozOVrOHXUIGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDozMjozOVrOHXUIGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIwOTA1MA==", "bodyText": "Minor. Pls fix typo-case for ppuid.", "url": "https://github.com/prebid/prebid-server-java/pull/926#discussion_r494209050", "createdAt": "2020-09-24T10:32:39Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/bidder/rubicon/RubiconBidderTest.java", "diffHunk": "@@ -774,14 +774,99 @@ public void makeHttpRequestsShouldCreateUserExtTpIdWithAdServerEidSource() {\n                                         \"adserver.org\",\n                                         null,\n                                         singletonList(ExtUserEidUid.of(\"adServerUid\", null,\n-                                                ExtUserEidUidExt.of(\"TDID\"))),\n+                                                ExtUserEidUidExt.of(\"TDID\", null))),\n                                         null)))\n                                 .build(),\n                         RubiconUserExt.builder()\n                                 .tpid(singletonList(ExtUserTpIdRubicon.of(\"tdid\", \"adServerUid\")))\n                                 .build()));\n     }\n \n+    @Test\n+    public void makeHttpRequestsShouldCreateUseIdIfMissingFromFirstUidStypePpuid() {\n+        // given\n+        final BidRequest bidRequest = givenBidRequest(builder -> builder.user(User.builder()\n+                        .ext(ExtUser.builder()\n+                                .eids(singletonList(ExtUserEid.of(null, null,\n+                                        asList(\n+                                                ExtUserEidUid.of(\"id1\", null, ExtUserEidUidExt.of(null, \"other\")),\n+                                                ExtUserEidUid.of(\"id2\", null, ExtUserEidUidExt.of(null, \"ppuid\")),\n+                                                ExtUserEidUid.of(\"id3\", null, ExtUserEidUidExt.of(null, \"ppuid\"))),\n+                                        null)))\n+                                .build())\n+                        .build()),\n+                builder -> builder.video(Video.builder().build()), identity());\n+\n+        // when\n+        final Result<List<HttpRequest<BidRequest>>> result = rubiconBidder.makeHttpRequests(bidRequest);\n+\n+        // then\n+        assertThat(result.getErrors()).isEmpty();\n+        assertThat(result.getValue()).hasSize(1).doesNotContainNull()\n+                .extracting(httpRequest -> mapper.readValue(httpRequest.getBody(), BidRequest.class))\n+                .extracting(request -> request.getUser().getId())\n+                .containsOnly(\"id2\");\n+    }\n+\n+    @Test\n+    public void makeHttpRequestsShouldNotCreateUseIdIfMissingWhenNoUidWithppiudType() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30ccf9e53305b7cb3429ed742bea1b49c496e552"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzA4Nzg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/rubicon/RubiconBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDozNDo1OFrOHXUM6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDozNDo1OFrOHXUM6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIxMDI4Mw==", "bodyText": "Pls rename to hasStypeToRemove(..)", "url": "https://github.com/prebid/prebid-server-java/pull/926#discussion_r494210283", "createdAt": "2020-09-24T10:34:58Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/rubicon/RubiconBidder.java", "diffHunk": "@@ -709,13 +722,74 @@ private User makeUser(User user, ExtImpRubicon rubiconImpExt) {\n         final User.UserBuilder userBuilder = user != null ? user.toBuilder() : User.builder();\n \n         return userBuilder\n+                .id(resolvedId)\n                 .gender(null)\n                 .yob(null)\n                 .geo(null)\n                 .ext(mapper.fillExtension(userExt, rubiconUserExt))\n                 .build();\n     }\n \n+    private String resolveUserId(User user) {\n+        final ExtUser extUser = user != null ? user.getExt() : null;\n+        final List<ExtUserEid> extUserEids = extUser != null ? extUser.getEids() : null;\n+        return CollectionUtils.emptyIfNull(extUserEids)\n+                .stream()\n+                .map(extUserEid -> getIdFromFirstUuidWithStypePpuid(extUserEid.getUids()))\n+                .filter(Objects::nonNull)\n+                .findFirst()\n+                .orElse(null);\n+    }\n+\n+    private String getIdFromFirstUuidWithStypePpuid(List<ExtUserEidUid> extUserEidUids) {\n+        return CollectionUtils.emptyIfNull(extUserEidUids).stream()\n+                .filter(Objects::nonNull)\n+                .filter(extUserEidUid -> Objects.equals(PPUID_STYPE, getUserEidUidStype(extUserEidUid)))\n+                .map(ExtUserEidUid::getId)\n+                .findFirst()\n+                .orElse(null);\n+    }\n+\n+    private String getUserEidUidStype(ExtUserEidUid extUserEidUid) {\n+        final ExtUserEidUidExt extUserEidUidExt = extUserEidUid.getExt();\n+        return extUserEidUidExt != null ? extUserEidUidExt.getStype() : null;\n+    }\n+\n+    private boolean isHasStypeToRemove(List<ExtUserEid> extUserEids) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30ccf9e53305b7cb3429ed742bea1b49c496e552"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzA5Mzg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/rubicon/RubiconBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDozNjozOVrOHXUQqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDozNjozOVrOHXUQqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIxMTI0Mg==", "bodyText": "May we pass ExtUser as an argument here instead of whole User object?", "url": "https://github.com/prebid/prebid-server-java/pull/926#discussion_r494211242", "createdAt": "2020-09-24T10:36:39Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/rubicon/RubiconBidder.java", "diffHunk": "@@ -709,13 +722,74 @@ private User makeUser(User user, ExtImpRubicon rubiconImpExt) {\n         final User.UserBuilder userBuilder = user != null ? user.toBuilder() : User.builder();\n \n         return userBuilder\n+                .id(resolvedId)\n                 .gender(null)\n                 .yob(null)\n                 .geo(null)\n                 .ext(mapper.fillExtension(userExt, rubiconUserExt))\n                 .build();\n     }\n \n+    private String resolveUserId(User user) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30ccf9e53305b7cb3429ed742bea1b49c496e552"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3896, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}