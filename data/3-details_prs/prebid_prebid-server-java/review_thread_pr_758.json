{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMTQ1Nzc5", "number": 758, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTozNTowNFrOEIuMUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTozNjowM1rOEIuNYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTgwODgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTozNTowNFrOGo2uJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTozNTowNFrOGo2uJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5Mjc3Mw==", "bodyText": "Does this still required ?", "url": "https://github.com/prebid/prebid-server-java/pull/758#discussion_r445492773", "createdAt": "2020-06-25T11:35:04Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "diffHunk": "@@ -820,4 +836,8 @@ private ExtPriceGranularity parsePriceGranularity(JsonNode priceGranularity) {\n     private CacheAsset toCacheAsset(String cacheId) {\n         return CacheAsset.of(cacheAssetUrlTemplate.concat(cacheId), cacheId);\n     }\n+\n+    public static <S, T> T applyIfNotNull(S source, Function<S, T> mapper) {\n+        return source != null ? mapper.apply(source) : null;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e97700f7c6b6fa8a0a902698b03917b4dccc3198"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTgxMDYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/json/JacksonMapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTozNTo0MlrOGo2vUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTozNTo0MlrOGo2vUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5MzA3NQ==", "bodyText": "Unnecessary", "url": "https://github.com/prebid/prebid-server-java/pull/758#discussion_r445493075", "createdAt": "2020-06-25T11:35:42Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/json/JacksonMapper.java", "diffHunk": "@@ -1,6 +1,7 @@\n package org.prebid.server.json;\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.core.TreeNode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e97700f7c6b6fa8a0a902698b03917b4dccc3198"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTgxMTUzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/auction/AmpRequestFactoryTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTozNjowM1rOGo2v8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMToxMDoyOFrOGsIQdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5MzIzNQ==", "bodyText": "It's better to use this before @test", "url": "https://github.com/prebid/prebid-server-java/pull/758#discussion_r445493235", "createdAt": "2020-06-25T11:36:03Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/auction/AmpRequestFactoryTest.java", "diffHunk": "@@ -1139,6 +1140,28 @@ public void shouldKeepEmptyUserWhenGdprConsentIsInvalid() {\n                 .isEqualTo(User.builder().build());\n     }\n \n+    @Test\n+    public void shouldReturnAddErrorToAuctionContextWhenPrivacyIsNotValid() {\n+        // given\n+        given(httpRequest.getParam(\"gdpr_consent\")).willReturn(\"consent-value\");\n+\n+        givenBidRequest(\n+                builder -> builder\n+                        .user(User.builder().build())\n+                        .ext(mapper.valueToTree(ExtBidRequest.of(null))),\n+                Imp.builder().build());\n+\n+        // when\n+        factory.fromRequest(routingContext, 0L).result();\n+\n+        // then\n+        @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e97700f7c6b6fa8a0a902698b03917b4dccc3198"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5NjQ5Mg==", "bodyText": "Joshua Bloch in Effective Java 3 said\n\"Always use the SuppressWarnings annotation on the smallest scope possible. Typically this will be a variable declaration or a very short method or constructor. Never use SuppressWarnings on an entire class. Doing so could mask critical warnings.\nIf you find yourself using the SuppressWarnings annotation on a method or constructor that\u2019s more than one line long, you may be able to move it onto a local variable declaration. \"", "url": "https://github.com/prebid/prebid-server-java/pull/758#discussion_r445496492", "createdAt": "2020-06-25T11:43:00Z", "author": {"login": "BraslavskiyAndrey"}, "path": "src/test/java/org/prebid/server/auction/AmpRequestFactoryTest.java", "diffHunk": "@@ -1139,6 +1140,28 @@ public void shouldKeepEmptyUserWhenGdprConsentIsInvalid() {\n                 .isEqualTo(User.builder().build());\n     }\n \n+    @Test\n+    public void shouldReturnAddErrorToAuctionContextWhenPrivacyIsNotValid() {\n+        // given\n+        given(httpRequest.getParam(\"gdpr_consent\")).willReturn(\"consent-value\");\n+\n+        givenBidRequest(\n+                builder -> builder\n+                        .user(User.builder().build())\n+                        .ext(mapper.valueToTree(ExtBidRequest.of(null))),\n+                Imp.builder().build());\n+\n+        // when\n+        factory.fromRequest(routingContext, 0L).result();\n+\n+        // then\n+        @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5MzIzNQ=="}, "originalCommit": {"oid": "e97700f7c6b6fa8a0a902698b03917b4dccc3198"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkyNTgxNA==", "bodyText": "don't think it is critical, up to you.", "url": "https://github.com/prebid/prebid-server-java/pull/758#discussion_r448925814", "createdAt": "2020-07-02T11:10:28Z", "author": {"login": "rpanchyk"}, "path": "src/test/java/org/prebid/server/auction/AmpRequestFactoryTest.java", "diffHunk": "@@ -1139,6 +1140,28 @@ public void shouldKeepEmptyUserWhenGdprConsentIsInvalid() {\n                 .isEqualTo(User.builder().build());\n     }\n \n+    @Test\n+    public void shouldReturnAddErrorToAuctionContextWhenPrivacyIsNotValid() {\n+        // given\n+        given(httpRequest.getParam(\"gdpr_consent\")).willReturn(\"consent-value\");\n+\n+        givenBidRequest(\n+                builder -> builder\n+                        .user(User.builder().build())\n+                        .ext(mapper.valueToTree(ExtBidRequest.of(null))),\n+                Imp.builder().build());\n+\n+        // when\n+        factory.fromRequest(routingContext, 0L).result();\n+\n+        // then\n+        @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5MzIzNQ=="}, "originalCommit": {"oid": "e97700f7c6b6fa8a0a902698b03917b4dccc3198"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4090, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}