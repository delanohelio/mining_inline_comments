{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMDc2MjM2", "number": 757, "title": "Validate request.source.ext object while auction", "bodyText": "", "createdAt": "2020-06-11T13:24:34Z", "url": "https://github.com/prebid/prebid-server-java/pull/757", "merged": true, "mergeCommit": {"oid": "824aa0b054708a8c4c454d951117d4d731be3e5d"}, "closed": true, "closedAt": "2020-06-11T15:20:22Z", "author": {"login": "rpanchyk"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqOMK-AH2gAyNDMzMDc2MjM2OjhiYjRmOGYzODNkNGViMDczOGJiNTU1MTJlOTQ3NDM2NmIwZWM0YmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqP1RiAFqTQyODk0MzYyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8bb4f8f383d4eb0738bb55512e9474366b0ec4be", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/8bb4f8f383d4eb0738bb55512e9474366b0ec4be", "committedDate": "2020-06-11T13:22:52Z", "message": "Validate request.source.ext object while auction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4OTQzNjIw", "url": "https://github.com/prebid/prebid-server-java/pull/757#pullrequestreview-428943620", "createdAt": "2020-06-11T14:01:13Z", "commit": {"oid": "8bb4f8f383d4eb0738bb55512e9474366b0ec4be"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDowMToxM1rOGie05g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDowMToxM1rOGie05g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwOTgzMA==", "bodyText": "I'd prefer request.source.ext.schain is invalid.:", "url": "https://github.com/prebid/prebid-server-java/pull/757#discussion_r438809830", "createdAt": "2020-06-11T14:01:13Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/validation/RequestValidator.java", "diffHunk": "@@ -516,6 +519,16 @@ private void validateRegs(Regs regs) throws ValidationException {\n         }\n     }\n \n+    private void validateSource(Source source) throws ValidationException {\n+        if (source != null && source.getExt() != null) {\n+            try {\n+                mapper.mapper().treeToValue(source.getExt(), ExtSource.class);\n+            } catch (JsonProcessingException e) {\n+                throw new ValidationException(\"request.source.ext is invalid: %s\", e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bb4f8f383d4eb0738bb55512e9474366b0ec4be"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3212, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}