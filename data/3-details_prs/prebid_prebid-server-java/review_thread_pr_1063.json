{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0OTY5OTc1", "number": 1063, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQwOTozODo1OFrOFZSpeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQwOTozODo1OFrOFZSpeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYyMDY0MjUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/yeahmobi/YeahmobiBidder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQwOTozODo1OFrOIjwI4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQxMDowODo1OVrOIjxUSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDM1OTc3Nw==", "bodyText": "Pls specify exception explicitly @SneakyThrows(JsonProcessingException.class) for more control, but personally i'd use just regular try-catch instead. Up to you.", "url": "https://github.com/prebid/prebid-server-java/pull/1063#discussion_r574359777", "createdAt": "2021-02-11T09:38:58Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/yeahmobi/YeahmobiBidder.java", "diffHunk": "@@ -90,32 +90,35 @@ private ExtImpYeahmobi parseImpExt(Imp imp) {\n         try {\n             return mapper.mapper().convertValue(imp.getExt(), YEAHMOBI_EXT_TYPE_REFERENCE).getBidder();\n         } catch (IllegalArgumentException e) {\n-            throw new PreBidException(e.getMessage(), e);\n+            throw new PreBidException(String.format(\"Impression id=%s, has invalid Ext\", imp.getId()));\n         }\n     }\n \n-    @SneakyThrows\n     private Imp processImp(Imp imp) {\n         final Native xNative = imp.getXNative();\n \n         if (xNative != null) {\n-            final JsonNode nativeRequest = xNative.getRequest() != null\n-                    ? mapper.mapper().readValue(xNative.getRequest(), JsonNode.class)\n-                    : null;\n-\n-            final String newNativeRequest;\n-            final ObjectNode objectNode = mapper.mapper().createObjectNode().set(\"native\", nativeRequest);\n-            newNativeRequest = nativeRequest == null || nativeRequest.get(\"native\") == null\n-                    ? mapper.mapper().writeValueAsString(objectNode)\n-                    : null;\n-\n-            return newNativeRequest != null\n-                    ? imp.toBuilder().xNative(Native.builder().request(newNativeRequest).build()).build()\n+            final String resolvedNativeRequest = resolveNativeRequest(xNative.getRequest());\n+            return resolvedNativeRequest != null\n+                    ? imp.toBuilder().xNative(Native.builder().request(resolvedNativeRequest).build()).build()\n                     : imp;\n         }\n         return imp;\n     }\n \n+    @SneakyThrows", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d73f40edda0a5299a2d7442ddd2f326ccc8bacfc"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDM3OTA4MQ==", "bodyText": "Thx, less magic - good project.", "url": "https://github.com/prebid/prebid-server-java/pull/1063#discussion_r574379081", "createdAt": "2021-02-11T10:08:59Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/yeahmobi/YeahmobiBidder.java", "diffHunk": "@@ -90,32 +90,35 @@ private ExtImpYeahmobi parseImpExt(Imp imp) {\n         try {\n             return mapper.mapper().convertValue(imp.getExt(), YEAHMOBI_EXT_TYPE_REFERENCE).getBidder();\n         } catch (IllegalArgumentException e) {\n-            throw new PreBidException(e.getMessage(), e);\n+            throw new PreBidException(String.format(\"Impression id=%s, has invalid Ext\", imp.getId()));\n         }\n     }\n \n-    @SneakyThrows\n     private Imp processImp(Imp imp) {\n         final Native xNative = imp.getXNative();\n \n         if (xNative != null) {\n-            final JsonNode nativeRequest = xNative.getRequest() != null\n-                    ? mapper.mapper().readValue(xNative.getRequest(), JsonNode.class)\n-                    : null;\n-\n-            final String newNativeRequest;\n-            final ObjectNode objectNode = mapper.mapper().createObjectNode().set(\"native\", nativeRequest);\n-            newNativeRequest = nativeRequest == null || nativeRequest.get(\"native\") == null\n-                    ? mapper.mapper().writeValueAsString(objectNode)\n-                    : null;\n-\n-            return newNativeRequest != null\n-                    ? imp.toBuilder().xNative(Native.builder().request(newNativeRequest).build()).build()\n+            final String resolvedNativeRequest = resolveNativeRequest(xNative.getRequest());\n+            return resolvedNativeRequest != null\n+                    ? imp.toBuilder().xNative(Native.builder().request(resolvedNativeRequest).build()).build()\n                     : imp;\n         }\n         return imp;\n     }\n \n+    @SneakyThrows", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDM1OTc3Nw=="}, "originalCommit": {"oid": "d73f40edda0a5299a2d7442ddd2f326ccc8bacfc"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3858, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}