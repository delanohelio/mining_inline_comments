{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MDQwOTUx", "number": 1069, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNDoyNDozNVrOFSoP_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNTozNjoxM1rOFSqf2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1MDc4MTQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNDoyNDozNVrOIZpOKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNDoyNDozNVrOIZpOKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc2MDY4MQ==", "bodyText": "Catch exception", "url": "https://github.com/prebid/prebid-server-java/pull/1069#discussion_r563760681", "createdAt": "2021-01-25T14:24:35Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "diffHunk": "@@ -56,44 +60,68 @@ public TtxBidder(String endpointUrl, JacksonMapper mapper) {\n \n     @Override\n     public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n-        final Imp firstImp = request.getImp().get(0);\n         final List<BidderError> errors = new ArrayList<>();\n-        Imp updatedFirstImp = null;\n-        ExtImpTtx extImpTtx = null;\n-        try {\n-            extImpTtx = parseImpExt(firstImp);\n-            updatedFirstImp = updatedImp(firstImp, extImpTtx.getProductId(), extImpTtx.getZoneId(), errors);\n-        } catch (PreBidException e) {\n-            errors.add(BidderError.badInput(e.getMessage()));\n-        }\n-\n-        if (updatedFirstImp != null && updatedFirstImp.getBanner() == null && updatedFirstImp.getVideo() == null) {\n-            return Result.withError(BidderError.badInput(\"At least one of [banner, video] \"\n-                    + \"formats must be defined in Imp. None found\"));\n-        }\n+        final List<HttpRequest<BidRequest>> requests = new ArrayList<>();\n \n-        final HttpRequest<BidRequest> httpRequest = createRequest(request, extImpTtx, updatedFirstImp);\n+        final ExtRequest reqExt = updateExtRequest(request.getExt());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0edc2cd13a66d7fc96d6eab7a2f710885648c5"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1MDg0NjI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNDozNzoyOVrOIZp1qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNDozNzoyOVrOIZp1qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc3MDc5NQ==", "bodyText": "makeRequest seems redundant.\nCould you split it like.\nvalidateImp()\nparseImpExt()\nupdateImp()\ncreateRequest()", "url": "https://github.com/prebid/prebid-server-java/pull/1069#discussion_r563770795", "createdAt": "2021-01-25T14:37:29Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "diffHunk": "@@ -56,44 +60,68 @@ public TtxBidder(String endpointUrl, JacksonMapper mapper) {\n \n     @Override\n     public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n-        final Imp firstImp = request.getImp().get(0);\n         final List<BidderError> errors = new ArrayList<>();\n-        Imp updatedFirstImp = null;\n-        ExtImpTtx extImpTtx = null;\n-        try {\n-            extImpTtx = parseImpExt(firstImp);\n-            updatedFirstImp = updatedImp(firstImp, extImpTtx.getProductId(), extImpTtx.getZoneId(), errors);\n-        } catch (PreBidException e) {\n-            errors.add(BidderError.badInput(e.getMessage()));\n-        }\n-\n-        if (updatedFirstImp != null && updatedFirstImp.getBanner() == null && updatedFirstImp.getVideo() == null) {\n-            return Result.withError(BidderError.badInput(\"At least one of [banner, video] \"\n-                    + \"formats must be defined in Imp. None found\"));\n-        }\n+        final List<HttpRequest<BidRequest>> requests = new ArrayList<>();\n \n-        final HttpRequest<BidRequest> httpRequest = createRequest(request, extImpTtx, updatedFirstImp);\n+        final ExtRequest reqExt = updateExtRequest(request.getExt());\n \n-        return Result.of(Collections.singletonList(httpRequest), errors);\n+        for (Imp imp : request.getImp()) {\n+            try {\n+                requests.add(makeRequest(request, imp, reqExt));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0edc2cd13a66d7fc96d6eab7a2f710885648c5"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1MDg2MzU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNDo0MDo1MFrOIZqAGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNDo0MDo1MFrOIZqAGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc3MzQ2NQ==", "bodyText": "redundant /n", "url": "https://github.com/prebid/prebid-server-java/pull/1069#discussion_r563773465", "createdAt": "2021-01-25T14:40:50Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "diffHunk": "@@ -132,14 +159,15 @@ private static Integer resolvePlacement(Integer videoPlacement, String productId\n         return videoPlacement;\n     }\n \n-    private ObjectNode createImpExt(String productId, String zoneId) {\n-        final TtxImpExt ttxImpExt = TtxImpExt.of(TtxImpExtTtx.of(productId, StringUtils.stripToNull(zoneId)));\n+    private ObjectNode createImpExt(String productId, String zoneId, String siteId) {\n+        final TtxImpExt ttxImpExt = TtxImpExt.of(\n+                TtxImpExtTtx.of(productId, StringUtils.isNotEmpty(zoneId) ? zoneId : siteId));\n         return mapper.mapper().valueToTree(ttxImpExt);\n     }\n \n-    private HttpRequest<BidRequest> createRequest(BidRequest request, ExtImpTtx extImpTtx, Imp updatedFirstImp) {\n-        final Site updatedSite = extImpTtx != null ? updateSite(request.getSite(), extImpTtx.getSiteId()) : null;\n-        final BidRequest modifiedRequest = updateRequest(request, updatedSite, updatedFirstImp);\n+    private HttpRequest<BidRequest> createRequest(BidRequest request,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0edc2cd13a66d7fc96d6eab7a2f710885648c5"}, "originalPosition": 153}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1MDg2ODkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNDo0MTo0MlrOIZqDPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNDo0MTo0MlrOIZqDPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc3NDI2OQ==", "bodyText": "seems redundant method", "url": "https://github.com/prebid/prebid-server-java/pull/1069#discussion_r563774269", "createdAt": "2021-01-25T14:41:42Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/ttx/TtxBidder.java", "diffHunk": "@@ -150,27 +178,14 @@ private ObjectNode createImpExt(String productId, String zoneId) {\n                 .build();\n     }\n \n-    private static Site updateSite(Site site, String siteId) {\n-        return site == null ? null : site.toBuilder().id(siteId).build();\n-    }\n+    private static BidRequest updateRequest(BidRequest request, Imp requestImp, ExtRequest extRequest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0edc2cd13a66d7fc96d6eab7a2f710885648c5"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1MTE0OTcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/proto/openrtb/ext/FlexibleExtension.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNTozNjoxM1rOIZsulA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNTozNjoxM1rOIZsulA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzgxODEzMg==", "bodyText": "Let's discuss this approach", "url": "https://github.com/prebid/prebid-server-java/pull/1069#discussion_r563818132", "createdAt": "2021-01-25T15:36:13Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/proto/openrtb/ext/FlexibleExtension.java", "diffHunk": "@@ -19,7 +20,15 @@\n             new TypeReference<Map<String, JsonNode>>() {\n             };\n \n-    private final Map<String, JsonNode> properties = new HashMap<>();\n+    private final Map<String, JsonNode> properties;\n+\n+    protected FlexibleExtension(Map<String, JsonNode> properties) {\n+        this.properties = MapUtils.isNotEmpty(properties) ? new HashMap<>(properties) : new HashMap<>();\n+    }\n+\n+    protected FlexibleExtension() {\n+        this.properties = new HashMap<>();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e93ac535c623a98ef878b40fe12147b99ac756dd"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3861, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}