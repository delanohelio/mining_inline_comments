{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0Nzg0MzU5", "number": 618, "title": "Add customized admin endpoints", "bodyText": "This PR revises admin endpoints configuration options:\n\nadmin-endpoints.version.*\nadmin-endpoints.currency-rates.*\nadmin-endpoints.storedrequest.*\nadmin-endpoints.storedrequest-amp.*\nadmin-endpoints.cache-invalidation.*\nadmin-endpoints.logger-level-modifier.*\n\nAccess can be secured with admin-endpoints.credentials property, like:\nadmin-endpoints:\n  credentials:\n    user1: pass1\n    user2: pass2\n\nAlso, the path to each endpoint can be changed on demand with  admin-endpoints.NAME.path property.\nKeep in mind, we disable all admin endpoints by default.", "createdAt": "2020-02-13T10:22:49Z", "url": "https://github.com/prebid/prebid-server-java/pull/618", "merged": true, "mergeCommit": {"oid": "78233381c749565458a46aeeb64f197977d52393"}, "closed": true, "closedAt": "2020-08-11T13:42:11Z", "author": {"login": "DGarbar"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD4R-FAH2gAyMzc0Nzg0MzU5OjE0MDQxZTc5Nzk0M2NiZDk0ZGY2ZmRmYTc0NDcyODBiODBmYjU3YmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9i7YtAFqTQ2NDI2OTI5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "14041e797943cbd94df6fdfa7447280b80fb57bf", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/14041e797943cbd94df6fdfa7447280b80fb57bf", "committedDate": "2020-02-13T10:22:10Z", "message": "Add customized admin endpoints\n\nUpdate configuration docs\n\nChange\n`/storedrequests/amp` -> `/pbs-admin/storedrequests/amp` (settings.in-memory-cache.notification-endpoints-enabled)\n`/storedrequests/openrtb2` -> `/pbs-admin/storedrequests/openrtb2` (settings.in-memory-cache.notification-endpoints-enabled)\n`/admin` -> `/pbs-admin/admin` (logger-level-modifier.enabled)\n`/currency-rates` -> `/pbs-admin/currency-rates` (currency-converter.external-rates.enabled)\n\nKeep in mind, that if any enabled, you need to specified corresponding: (bc we don't use default)\n```\nadmin-endpoints.***.on-application-port=\nadmin-endpoints.***.protected=\n```\n\nAdd configuration differences."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTk5Njc1", "url": "https://github.com/prebid/prebid-server-java/pull/618#pullrequestreview-359599675", "createdAt": "2020-02-17T09:41:20Z", "commit": {"oid": "14041e797943cbd94df6fdfa7447280b80fb57bf"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOTo0MToyMFrOFqd5bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMDowMzozNlrOFqerFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA3NDM0OA==", "bodyText": "I would avoid polluting context with such generic bean as Map<String, String>. It's much more reliable and straightforward to inject AdminEndpointCredentials in ampCacheNotificationEndpoint factory method and just use getter getCredentials() right there.", "url": "https://github.com/prebid/prebid-server-java/pull/618#discussion_r380074348", "createdAt": "2020-02-17T09:41:20Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/spring/config/AdminEndpointsConfiguration.java", "diffHunk": "@@ -0,0 +1,106 @@\n+package org.prebid.server.spring.config;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.prebid.server.currency.CurrencyConversionService;\n+import org.prebid.server.execution.LogModifier;\n+import org.prebid.server.handler.AdminHandler;\n+import org.prebid.server.handler.CurrencyRatesHandler;\n+import org.prebid.server.handler.CustomizedAdminEndpoint;\n+import org.prebid.server.handler.SettingsCacheNotificationHandler;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.settings.SettingsCache;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+@Configuration\n+public class AdminEndpointsConfiguration {\n+\n+    private static final String LOGGER_LEVEL_ENDPOINT = \"/pbs-admin/admin\";\n+    private static final String CURRENCY_RATES_ENDPOINT = \"/pbs-admin/currency-rates\";\n+    private static final String STOREDREQUESTS_OPENRTB_ENDPOINT = \"/pbs-admin/storedrequests/openrtb2\";\n+    private static final String STOREDREQUESTS_AMP_ENDPOINT = \"/pbs-admin/storedrequests/amp\";\n+\n+    @Bean\n+    @ConditionalOnProperty(prefix = \"logger-level-modifier\", name = \"enabled\", havingValue = \"true\")\n+    CustomizedAdminEndpoint loggerLevelModifierEndpoint(\n+            LogModifier logModifier,\n+            @Autowired(required = false) Map<String, String> adminEndpointCredentials,\n+            @Value(\"${admin-endpoints.logger-level-modifier.on-application-port}\") boolean isOnApplicationPort,\n+            @Value(\"${admin-endpoints.logger-level-modifier.protected}\") boolean isProtected) {\n+        final AdminHandler adminHandler = new AdminHandler(logModifier);\n+        return new CustomizedAdminEndpoint(LOGGER_LEVEL_ENDPOINT, adminHandler, isOnApplicationPort,\n+                isProtected)\n+                .credentials(adminEndpointCredentials);\n+    }\n+\n+    @Bean\n+    @ConditionalOnProperty(prefix = \"currency-converter.external-rates\", name = \"enabled\", havingValue = \"true\")\n+    CustomizedAdminEndpoint currencyConversionRatesEndpoint(\n+            CurrencyConversionService currencyConversionRates,\n+            JacksonMapper mapper,\n+            @Autowired(required = false) Map<String, String> adminEndpointCredentials,\n+            @Value(\"${admin-endpoints.currency-rates.on-application-port}\") boolean isOnApplicationPort,\n+            @Value(\"${admin-endpoints.currency-rates.protected}\") boolean isProtected) {\n+        final CurrencyRatesHandler currencyRatesHandler = new CurrencyRatesHandler(currencyConversionRates, mapper);\n+        return new CustomizedAdminEndpoint(CURRENCY_RATES_ENDPOINT, currencyRatesHandler, isOnApplicationPort,\n+                isProtected)\n+                .credentials(adminEndpointCredentials);\n+    }\n+\n+    @Bean\n+    @ConditionalOnProperty(prefix = \"settings.in-memory-cache\", name = \"notification-endpoints-enabled\",\n+            havingValue = \"true\")\n+    CustomizedAdminEndpoint cacheNotificationEndpoint(\n+            SettingsCache settingsCache,\n+            JacksonMapper mapper,\n+            @Autowired(required = false) Map<String, String> adminEndpointCredentials,\n+            @Value(\"${admin-endpoints.storedrequest.on-application-port}\") boolean isOnApplicationPort,\n+            @Value(\"${admin-endpoints.storedrequest.protected}\") boolean isProtected) {\n+        final SettingsCacheNotificationHandler cacheNotificationHandler =\n+                new SettingsCacheNotificationHandler(settingsCache, mapper);\n+        return new CustomizedAdminEndpoint(STOREDREQUESTS_OPENRTB_ENDPOINT, cacheNotificationHandler,\n+                isOnApplicationPort, isProtected)\n+                .credentials(adminEndpointCredentials);\n+    }\n+\n+    @Bean\n+    @ConditionalOnProperty(prefix = \"settings.in-memory-cache\", name = \"notification-endpoints-enabled\",\n+            havingValue = \"true\")\n+    CustomizedAdminEndpoint ampCacheNotificationEndpoint(\n+            SettingsCache ampSettingsCache,\n+            JacksonMapper mapper,\n+            @Autowired(required = false) Map<String, String> adminEndpointCredentials,\n+            @Value(\"${admin-endpoints.storedrequest-amp.on-application-port}\") boolean isOnApplicationPort,\n+            @Value(\"${admin-endpoints.storedrequest-amp.protected}\") boolean isProtected) {\n+        final SettingsCacheNotificationHandler settingsCacheNotificationHandler =\n+                new SettingsCacheNotificationHandler(ampSettingsCache, mapper);\n+        return new CustomizedAdminEndpoint(STOREDREQUESTS_AMP_ENDPOINT, settingsCacheNotificationHandler,\n+                isOnApplicationPort, isProtected)\n+                .credentials(adminEndpointCredentials);\n+    }\n+\n+    @Bean\n+    Map<String, String> adminEndpointCredentials(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14041e797943cbd94df6fdfa7447280b80fb57bf"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA3NjQ5Mw==", "bodyText": "Having this method makes this class a bit of a puzzle as it looks more like a part of the builder approach whilst it is not the case. As a corresponding alternative to what this method is supposed to do you can create another constructor overload that accepts credentials in addition to other properties.", "url": "https://github.com/prebid/prebid-server-java/pull/618#discussion_r380076493", "createdAt": "2020-02-17T09:45:04Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/handler/CustomizedAdminEndpoint.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.prebid.server.handler;\n+\n+import io.vertx.core.Future;\n+import io.vertx.core.Handler;\n+import io.vertx.ext.auth.AuthProvider;\n+import io.vertx.ext.web.Router;\n+import io.vertx.ext.web.RoutingContext;\n+import io.vertx.ext.web.handler.BasicAuthHandler;\n+import org.apache.commons.collections4.MapUtils;\n+import org.apache.commons.lang3.StringUtils;\n+\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class CustomizedAdminEndpoint {\n+\n+    private final Handler<RoutingContext> handler;\n+    private final boolean isOnApplicationPort;\n+    private final boolean isProtected;\n+    private final String path;\n+    private Map<String, String> adminEndpointCredentials;\n+\n+    public CustomizedAdminEndpoint(String path, Handler<RoutingContext> handler, boolean isOnApplicationPort,\n+                                   boolean isProtected) {\n+        this.path = path;\n+        this.handler = handler;\n+        this.isOnApplicationPort = isOnApplicationPort;\n+        this.isProtected = isProtected;\n+    }\n+\n+    public CustomizedAdminEndpoint credentials(Map<String, String> adminEndpointCredentials) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14041e797943cbd94df6fdfa7447280b80fb57bf"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA4NzA2Mw==", "bodyText": "Since qualifier is used here I would suggest making router bean name explicit in place of its declaration (@Bean Router router(...) method)", "url": "https://github.com/prebid/prebid-server-java/pull/618#discussion_r380087063", "createdAt": "2020-02-17T10:03:36Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/spring/config/WebConfiguration.java", "diffHunk": "@@ -99,6 +94,7 @@\n     private ExceptionHandler exceptionHandler;\n \n     @Autowired\n+    @Qualifier(\"router\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14041e797943cbd94df6fdfa7447280b80fb57bf"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "718b18d16f4b515a7bf5c9119865e0cc024aa993", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/718b18d16f4b515a7bf5c9119865e0cc024aa993", "committedDate": "2020-02-17T12:19:17Z", "message": "Remove @LAZY\n\nRemove unnecessary Map @Bean.\n\nAdd explicit @Bean name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NzEzMTM2", "url": "https://github.com/prebid/prebid-server-java/pull/618#pullrequestreview-359713136", "createdAt": "2020-02-17T12:54:18Z", "commit": {"oid": "718b18d16f4b515a7bf5c9119865e0cc024aa993"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fb682382b7461e69100fb4c6f96706878c1f07f", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/2fb682382b7461e69100fb4c6f96706878c1f07f", "committedDate": "2020-05-08T12:09:00Z", "message": "Merge branch 'master' into admin-endpoints-open\n\n# Conflicts:\n#\tdocs/config-app.md\n#\tsrc/main/java/org/prebid/server/spring/config/WebConfiguration.java\n#\tsrc/test/java/org/prebid/server/it/ApplicationTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f2fb9f10254125c5d1e73109cae964587864964", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/7f2fb9f10254125c5d1e73109cae964587864964", "committedDate": "2020-08-06T13:36:55Z", "message": "Merge branch 'master' into admin-endpoints-open\n\n# Conflicts:\n#\tdocs/pbs-java-and-go-features-review.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6a13648fcbb5a3418bb17ff906689c2d2a8e0c0", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/d6a13648fcbb5a3418bb17ff906689c2d2a8e0c0", "committedDate": "2020-08-10T11:33:47Z", "message": "Fix geolocation spring configuration (#848)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96a313824cd20b6fbb3b7b5beae3db54b801926d", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/96a313824cd20b6fbb3b7b5beae3db54b801926d", "committedDate": "2020-08-10T14:09:26Z", "message": "Fixes after review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MjY5Mjk4", "url": "https://github.com/prebid/prebid-server-java/pull/618#pullrequestreview-464269298", "createdAt": "2020-08-10T14:17:06Z", "commit": {"oid": "96a313824cd20b6fbb3b7b5beae3db54b801926d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3282, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}