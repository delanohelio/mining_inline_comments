{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0MTc4MDI4", "number": 880, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowNjoxOVrOEdMM8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjozNDozM1rOEdM4nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDQ0MDgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/consumable/model/ConsumableDecision.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowNjoxOVrOHINNnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowNjoxOVrOHINNnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NzEzMg==", "bodyText": "redundant. Pls remove", "url": "https://github.com/prebid/prebid-server-java/pull/880#discussion_r478367132", "createdAt": "2020-08-27T12:06:19Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/consumable/model/ConsumableDecision.java", "diffHunk": "@@ -25,4 +25,10 @@\n \n     @JsonProperty(\"impressionUrl\")\n     String impressionUrl;\n+\n+    @JsonProperty(\"width\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "098e1c1714e7cfa6b8585ffdd05624740e23ab0f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDQ0MzIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/consumable/model/ConsumableDecision.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowNjo1M1rOHINO_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowNjo1M1rOHINO_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NzQ4Nw==", "bodyText": "redundant. Pls remove", "url": "https://github.com/prebid/prebid-server-java/pull/880#discussion_r478367487", "createdAt": "2020-08-27T12:06:53Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/consumable/model/ConsumableDecision.java", "diffHunk": "@@ -25,4 +25,10 @@\n \n     @JsonProperty(\"impressionUrl\")\n     String impressionUrl;\n+\n+    @JsonProperty(\"width\")\n+    Integer width;\n+\n+    @JsonProperty(\"height\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "098e1c1714e7cfa6b8585ffdd05624740e23ab0f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDU1MjYwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/bidder/consumable/ConsumableBidderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjozNDozM1rOHIOPIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjozNDozM1rOHIOPIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM4MzkwNQ==", "bodyText": "You used same values, which we used in Banner.format[0] so for better understanding, lets use diffrent one.\n(Also correct line 306)", "url": "https://github.com/prebid/prebid-server-java/pull/880#discussion_r478383905", "createdAt": "2020-08-27T12:34:33Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/bidder/consumable/ConsumableBidderTest.java", "diffHunk": "@@ -287,31 +285,12 @@ public void makeBidsShouldSkipDecisionsWithNullClearPrice() throws JsonProcessin\n         assertThat(result.getErrors()).isEmpty();\n     }\n \n-    @Test\n-    public void makeBidsShouldSkipDecisionsWithAbsentImpIdAndAddError() throws JsonProcessingException {\n-        // given\n-        final Map<String, ConsumableDecision> decisionMap = new HashMap<>();\n-        decisionMap.put(\"firstImp\", ConsumableDecision.builder().pricing(ConsumablePricing.of(10.5)).build());\n-        decisionMap.put(\"missing_Imp\", ConsumableDecision.builder().pricing(ConsumablePricing.of(1.1)).build());\n-\n-        final HttpCall<ConsumableBidRequest> httpCall = givenHttpCall(() -> ConsumableBidResponse.of(decisionMap));\n-\n-        // when\n-        final Result<List<BidderBid>> result = consumableBidder.makeBids(httpCall,\n-                givenBidRequestWithTwoImpsAndTwoFormats());\n-\n-        // then\n-        assertThat(result.getErrors()).hasSize(1)\n-                .containsOnly(BidderError.badServerResponse(\"ignoring bid id=request_id, request doesn't contain any \"\n-                        + \"impression with id=missing_Imp\"));\n-        assertThat(result.getValue()).hasSize(1);\n-    }\n-\n     @Test\n     public void makeBidsShouldReturnBannerBidWithExpectedFields() throws JsonProcessingException {\n         // given\n         final HttpCall<ConsumableBidRequest> httpCall = givenHttpCall(identity(),\n                 decision -> decision.pricing(ConsumablePricing.of(11.1)).adId(123L)\n+                        .width(120).height(90)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "098e1c1714e7cfa6b8585ffdd05624740e23ab0f"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4032, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}