{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MzQzMTc2", "number": 863, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoyMDo0NFrOEYDLPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoyNTo1N1rOEYDT_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjUzMzA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoyMDo0NFrOHALMnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoyMDo0NFrOHALMnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NTUwMQ==", "bodyText": "Just use special Result method for this occurrence", "url": "https://github.com/prebid/prebid-server-java/pull/863#discussion_r469945501", "createdAt": "2020-08-13T13:20:44Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java", "diffHunk": "@@ -46,6 +55,21 @@ public KubientBidder(String endpointUrl, JacksonMapper mapper) {\n \n     @Override\n     public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n+        final List<BidderError> errors = new ArrayList<>();\n+\n+        if (CollectionUtils.isEmpty(request.getImp())) {\n+            errors.add(BidderError.badInput(\"No valid impressions in the bid request\"));\n+            return Result.of(Collections.emptyList(), errors);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fd9429148af899f8c216926941e5f88cd6d591d"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjU1MjI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoyNToxMlrOHALX_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoyNToxMlrOHALX_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0ODQxMg==", "bodyText": "just validateImpExt", "url": "https://github.com/prebid/prebid-server-java/pull/863#discussion_r469948412", "createdAt": "2020-08-13T13:25:12Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java", "diffHunk": "@@ -46,6 +55,21 @@ public KubientBidder(String endpointUrl, JacksonMapper mapper) {\n \n     @Override\n     public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n+        final List<BidderError> errors = new ArrayList<>();\n+\n+        if (CollectionUtils.isEmpty(request.getImp())) {\n+            errors.add(BidderError.badInput(\"No valid impressions in the bid request\"));\n+            return Result.of(Collections.emptyList(), errors);\n+        }\n+\n+        for (Imp imp : request.getImp()) {\n+            try {\n+                parseAndValidateImpExt(imp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fd9429148af899f8c216926941e5f88cd6d591d"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjU1NTQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoyNTo1N1rOHALZ5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoyNTo1N1rOHALZ5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0ODkwMA==", "bodyText": "They will return empty result with errors if there any", "url": "https://github.com/prebid/prebid-server-java/pull/863#discussion_r469948900", "createdAt": "2020-08-13T13:25:57Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java", "diffHunk": "@@ -62,7 +86,21 @@ public KubientBidder(String endpointUrl, JacksonMapper mapper) {\n                         .headers(HttpUtil.headers())\n                         .payload(request)\n                         .build()),\n-                Collections.emptyList());\n+                errors);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fd9429148af899f8c216926941e5f88cd6d591d"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4011, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}