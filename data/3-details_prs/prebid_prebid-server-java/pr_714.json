{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2OTY5OTM5", "number": 714, "title": "Add usepbsrates flag to bidrequest", "bodyText": "Add usepbsrates flag to provide possibility overriding currency rates by publishers.\nIf usepbsrates flag is true - use currency rates from PBS.\nIf usepbsrates flag is false - use currency rates from request(provided by publisher).\nRemoved:\n\"currency\": {\n\"rates\": {\n\"EUR\": {\n\"USD\": 1.2406\n},\n\"USD\": {\n\"EUR\": 0.8110\n}\n}\n},", "createdAt": "2020-05-12T21:07:24Z", "url": "https://github.com/prebid/prebid-server-java/pull/714", "merged": true, "mergeCommit": {"oid": "ec86e8002ccdbc6573e1fbfb3856815a91d78d88"}, "closed": true, "closedAt": "2020-08-03T11:20:57Z", "author": {"login": "AndriyPavlyuk"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgqkFSgH2gAyNDE2OTY5OTM5OjE5NGVmMTExZmRkYjc1OWYyNjg5YTE5ZjliMzUwM2E3NDIxNjVkMWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7QE05AH2gAyNDE2OTY5OTM5OjI5MzMxZWEyMmFhMDBkZmFjODJmYmYwOGQyNTBiNzMyMmJlZWI3OGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/194ef111fddb759f2689a19f9b3503a742165d1c", "committedDate": "2020-05-12T20:47:05Z", "message": "Add usepbsrates flag to ext.request.currency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTk4ODQy", "url": "https://github.com/prebid/prebid-server-java/pull/714#pullrequestreview-413598842", "createdAt": "2020-05-18T13:34:33Z", "commit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozNDozM1rOGW3aKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo0NjozM1rOGW36Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyOTY3Mg==", "bodyText": "requestCurrencyRates not required here bc it can use externalValues from parameter.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426629672", "createdAt": "2020-05-18T13:34:33Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -155,6 +162,30 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n         return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n     }\n \n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency,\n+                                                           BigDecimal conversionRate) {\n+        if (requestCurrencyRates != null) {\n+            conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        }\n+        return conversionRate;\n+    }\n+\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> requestCurrencyRates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzMTUwMA==", "bodyText": "Does this logic can be in the getConversionRateFromServer method.\n(First we ask server and then request)\nP.s I do not like multiole if so close and another one in the method", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426631500", "createdAt": "2020-05-18T13:37:17Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,15 +138,21 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n         BigDecimal conversionRate = null;\n-        if (requestCurrencyRates != null) {\n-            conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n-        }\n-\n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (usepbsrates) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, adServerCurrency, effectiveBidCurrency,\n+                    conversionRate);\n+            if (conversionRate == null) {\n+                conversionRate = getConversionRateFromRequest(requestCurrencyRates, adServerCurrency,\n+                        effectiveBidCurrency, conversionRate);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzMTczMg==", "bodyText": "same as above but with getConversionRateFromRequest", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426631732", "createdAt": "2020-05-18T13:37:39Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,15 +138,21 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n         BigDecimal conversionRate = null;\n-        if (requestCurrencyRates != null) {\n-            conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n-        }\n-\n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (usepbsrates) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, adServerCurrency, effectiveBidCurrency,\n+                    conversionRate);\n+            if (conversionRate == null) {\n+                conversionRate = getConversionRateFromRequest(requestCurrencyRates, adServerCurrency,\n+                        effectiveBidCurrency, conversionRate);\n+            }\n+        } else {\n+            conversionRate = getConversionRateFromRequest(requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency, conversionRate);\n+            if (conversionRate == null) {\n+                conversionRate = getConversionRateFromServer(externalCurrencyRates, adServerCurrency,\n+                        effectiveBidCurrency, conversionRate);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNDc3Ng==", "bodyText": "is it really required ?", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426634776", "createdAt": "2020-05-18T13:42:01Z", "author": {"login": "DGarbar"}, "path": "src/test/resources/org/prebid/server/it/storedrequests/test-amp-stored-request.json", "diffHunk": "@@ -56,7 +56,8 @@\n           \"USD\": {\n             \"EUR\": 0.8110\n           }\n-        }\n+        },\n+        \"usepbsrates\": false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNTgxOA==", "bodyText": "currency.getUsepbsrates() retruns Boolean not boolean, so it can be null.\nI'd prefer if we extract this variable and return null.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426635818", "createdAt": "2020-05-18T13:43:30Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "diffHunk": "@@ -215,6 +215,15 @@ private static ExtRequestTargeting targeting(ExtBidRequest requestExt) {\n         return currency != null ? currency.getRates() : null;\n     }\n \n+    /**\n+     * Extracts usepbsrates flag from {@link ExtBidRequest}.\n+     */\n+    private static boolean usepbsrates(ExtBidRequest requestExt) {\n+        final ExtRequestPrebid prebid = requestExt != null ? requestExt.getPrebid() : null;\n+        final ExtRequestCurrency currency = prebid != null ? prebid.getCurrency() : null;\n+        return currency != null ? currency.getUsepbsrates() : false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNzg5MQ==", "bodyText": "boolean -> Boolean\nAnd a bit lower you can use BooleanUtils.isTrue to use appropriate logic. And it be good approach if you add comments, that false is by default\nisTrue = true only of true. So else case will be for null and false.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426637891", "createdAt": "2020-05-18T13:46:33Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -124,11 +124,12 @@ public ZonedDateTime getLastUpdated() {\n     }\n \n     /**\n-     * Converts price from bidCurrency to adServerCurrency using rates defined in request or if absent, from\n-     * latest currency rates. Throws {@link PreBidException} in case conversion is not possible.\n+     * Converts price from bidCurrency to adServerCurrency using rates and usepbsrates flag defined in request.\n+     * If usepbsrates is true it takes rates from prebid server, if false from request.\n+     * or if absent, from latest currency rates. Throws {@link PreBidException} in case conversion is not possible.\n      */\n     public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n-                                      String adServerCurrency, String bidCurrency) {\n+                                      String adServerCurrency, String bidCurrency, boolean usepbsrates) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/341b3d802bcea6826d686a8c6b18d5e4bd240d1e", "committedDate": "2020-05-20T19:54:48Z", "message": "Refactoring of code and tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2ODYxOTEx", "url": "https://github.com/prebid/prebid-server-java/pull/714#pullrequestreview-416861911", "createdAt": "2020-05-22T12:10:44Z", "commit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxMDo0NFrOGZU4mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxNDowOFrOGZU9ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIwOTc1NA==", "bodyText": "you need to return usepbsrates. bc this method (according to documentation above) shoud only extract", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429209754", "createdAt": "2020-05-22T12:10:44Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "diffHunk": "@@ -218,10 +218,11 @@ private static ExtRequestTargeting targeting(ExtBidRequest requestExt) {\n     /**\n      * Extracts usepbsrates flag from {@link ExtBidRequest}.\n      */\n-    private static boolean usepbsrates(ExtBidRequest requestExt) {\n+    private static Boolean usepbsrates(ExtBidRequest requestExt) {\n         final ExtRequestPrebid prebid = requestExt != null ? requestExt.getPrebid() : null;\n         final ExtRequestCurrency currency = prebid != null ? prebid.getCurrency() : null;\n-        return currency != null ? currency.getUsepbsrates() : false;\n+        final Boolean usepbsrates = currency != null ? currency.getUsepbsrates() : null;\n+        return usepbsrates != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMDE3Mg==", "bodyText": "we don't add specs in here. Pls specify it near usage", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429210172", "createdAt": "2020-05-22T12:11:52Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/proto/openrtb/ext/request/ExtRequestCurrency.java", "diffHunk": "@@ -18,6 +18,7 @@\n     Map<String, Map<String, BigDecimal>> rates;\n     /**\n      * Defines the contract for bidrequest.ext.prebid.currency.usepbsrates\n+     * default value is false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMDY5OQ==", "bodyText": "why it is not final ?", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429210699", "createdAt": "2020-05-22T12:13:14Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -139,21 +139,11 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n         }\n \n         BigDecimal conversionRate = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMDkwMQ==", "bodyText": "You do not need to pass returning value", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429210901", "createdAt": "2020-05-22T12:13:44Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -165,23 +155,33 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     /**\n      *  Get conversion rate from request currency rates if it is present\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n                                                            String adServerCurrency, String effectiveBidCurrency,\n                                                            BigDecimal conversionRate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMTA0Mw==", "bodyText": "You do not need to pass returning value", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429211043", "createdAt": "2020-05-22T12:14:08Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -165,23 +155,33 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     /**\n      *  Get conversion rate from request currency rates if it is present\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n                                                            String adServerCurrency, String effectiveBidCurrency,\n                                                            BigDecimal conversionRate) {\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n+\n+        if (conversionRate == null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency, conversionRate);\n+        }\n         return conversionRate;\n     }\n \n     /**\n      * Get conversion rate from server\n      */\n-    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                          Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n                                                           String adServerCurrency, String effectiveBidCurrency,\n                                                           BigDecimal conversionRate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "committedDate": "2020-05-22T20:05:59Z", "message": "Omit multiple if statements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NTUxOTY2", "url": "https://github.com/prebid/prebid-server-java/pull/714#pullrequestreview-417551966", "createdAt": "2020-05-25T08:37:43Z", "commit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODozNzo0M1rOGZ5ZKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODozNzo0M1rOGZ5ZKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNzkxMg==", "bodyText": "NPE", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429807912", "createdAt": "2020-05-25T08:37:43Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -138,12 +139,11 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        BigDecimal conversionRate = null;\n-        conversionRate = usepbsrates\n+        final BigDecimal conversionRate = usepbsrates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NTU2NTQy", "url": "https://github.com/prebid/prebid-server-java/pull/714#pullrequestreview-417556542", "createdAt": "2020-05-25T08:45:05Z", "commit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo0NTowNVrOGZ5nmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1ODozMFrOGZ6CxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxMTYxMQ==", "bodyText": "and then from server if it is not processed.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429811611", "createdAt": "2020-05-25T08:45:05Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxMTgxOA==", "bodyText": "Probably better name is getConversionRateFromRequestFirst", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429811818", "createdAt": "2020-05-25T08:45:31Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNjM5OQ==", "bodyText": "Probably better name is getConversionRateFromServerFirst", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429816399", "createdAt": "2020-05-25T08:54:24Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNjU4MQ==", "bodyText": "and then using request currency if it is not processed.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429816581", "createdAt": "2020-05-25T08:54:48Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNzE1MQ==", "bodyText": "You don't need to pass this parameter. Remove static and use variable", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429817151", "createdAt": "2020-05-25T08:55:52Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNzk2Mg==", "bodyText": "Endless recursive call if conversion rate = null.\nJust use getConversionRate with expected parameters", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429817962", "createdAt": "2020-05-25T08:57:22Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                          Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                          String adServerCurrency, String effectiveBidCurrency) {\n+        BigDecimal conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n \n-        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+        if (conversionRate == null && requestCurrencyRates != null) {\n+            conversionRate = getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates, adServerCurrency,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNzk5NQ==", "bodyText": "Endless recursive call if conversion rate = null.\nJust use getConversionRate with expected parameters", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429817995", "createdAt": "2020-05-25T08:57:25Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxODMxMg==", "bodyText": "/n", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429818312", "createdAt": "2020-05-25T08:58:00Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "diffHunk": "@@ -161,20 +165,47 @@ public void convertCurrencyShouldReturnConvertedBySingleDigitMultiplierPrice() {\n     @Test\n     public void convertCurrencyShouldUseLatestRatesIfRequestRatesIsNull() {\n         // when\n-        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP);\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP, false);\n \n         // then\n         assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n     }\n \n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromServerIfusepbsratesIsTrue() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxODM1MQ==", "bodyText": "/n", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429818351", "createdAt": "2020-05-25T08:58:05Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "diffHunk": "@@ -161,20 +165,47 @@ public void convertCurrencyShouldReturnConvertedBySingleDigitMultiplierPrice() {\n     @Test\n     public void convertCurrencyShouldUseLatestRatesIfRequestRatesIsNull() {\n         // when\n-        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP);\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP, false);\n \n         // then\n         assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n     }\n \n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromServerIfusepbsratesIsTrue() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, requestConversionRates, EUR, GBP,\n+                true);\n+\n+        // then\n+        assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n+    }\n+\n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromRequestIfusepbsratesIsFalse() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxODU2NA==", "bodyText": "can you use singletonMap in singletonMap", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429818564", "createdAt": "2020-05-25T08:58:30Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "diffHunk": "@@ -161,20 +165,47 @@ public void convertCurrencyShouldReturnConvertedBySingleDigitMultiplierPrice() {\n     @Test\n     public void convertCurrencyShouldUseLatestRatesIfRequestRatesIsNull() {\n         // when\n-        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP);\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP, false);\n \n         // then\n         assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n     }\n \n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromServerIfusepbsratesIsTrue() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, requestConversionRates, EUR, GBP,\n+                true);\n+\n+        // then\n+        assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n+    }\n+\n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromRequestIfusepbsratesIsFalse() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd", "committedDate": "2020-05-25T15:41:39Z", "message": "Additional refactoring of code and tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MjU4OTIy", "url": "https://github.com/prebid/prebid-server-java/pull/714#pullrequestreview-418258922", "createdAt": "2020-05-26T12:44:08Z", "commit": {"oid": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo0NDowOFrOGacfAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo0Nzo0OFrOGacnrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4Mjg1MQ==", "bodyText": "\"usepbsrates\": false // defaults to true   -> null + true\nBooleanUtils.isTrue // only true\nYou need to use isFalse and reverse if statement or isNotFalse.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r430382851", "createdAt": "2020-05-26T12:44:08Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -139,11 +140,9 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        final BigDecimal conversionRate = usepbsrates\n-                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n-                    effectiveBidCurrency)\n-                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n-                    adServerCurrency, effectiveBidCurrency);\n+        final BigDecimal conversionRate = BooleanUtils.isTrue(usepbsrates)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4Mzk4NQ==", "bodyText": "you can omit this check (or add similar one in getConversionRateFromServer, be consistent)", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r430383985", "createdAt": "2020-05-26T12:45:58Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -153,34 +152,30 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     }\n \n     /**\n-     *  Get conversion rate from request currency rates if it is present\n+     *  Get conversion rate from request currency rates if it is present and then from server if it is not processed.\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n-                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n-                                                           String adServerCurrency, String effectiveBidCurrency) {\n+    private BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                         String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4NTA3MQ==", "bodyText": "Did you remove 'First' in the end of the method intentionally?", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r430385071", "createdAt": "2020-05-26T12:47:48Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -153,34 +152,30 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     }\n \n     /**\n-     *  Get conversion rate from request currency rates if it is present\n+     *  Get conversion rate from request currency rates if it is present and then from server if it is not processed.\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n-                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n-                                                           String adServerCurrency, String effectiveBidCurrency) {\n+    private BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c29494e9594d957b8041089796f055f3868c34d", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/0c29494e9594d957b8041089796f055f3868c34d", "committedDate": "2020-05-26T13:26:01Z", "message": "Small changes in code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bafd2b52fe9ca5a702621684c3249d20590c793", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/3bafd2b52fe9ca5a702621684c3249d20590c793", "committedDate": "2020-05-26T13:46:54Z", "message": "Fix typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MzE1ODU1", "url": "https://github.com/prebid/prebid-server-java/pull/714#pullrequestreview-418315855", "createdAt": "2020-05-26T13:48:44Z", "commit": {"oid": "3bafd2b52fe9ca5a702621684c3249d20590c793"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ab46c8bdcf3b0cfecbd944685f0c5d1d29e7f1d", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/4ab46c8bdcf3b0cfecbd944685f0c5d1d29e7f1d", "committedDate": "2020-07-30T11:20:10Z", "message": "Merge branch 'master' into add-usepbsrates-flag-to-currency\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/auction/ExchangeService.java\n#\tsrc/test/java/org/prebid/server/auction/ExchangeServiceTest.java\n#\tsrc/test/resources/org/prebid/server/it/openrtb2/emxdigital/test-auction-emxdigital-response.json\n#\tsrc/test/resources/org/prebid/server/it/openrtb2/tripleliftnative/test-auction-triplelift-native-response.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abc55c3a3bfad53da0e6e04bbe8c18e2973086b8", "author": {"user": {"login": "AndriyPavlyuk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/abc55c3a3bfad53da0e6e04bbe8c18e2973086b8", "committedDate": "2020-07-30T13:24:17Z", "message": "Resolving conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0924ba19e5411e997f6d239ab7de626bd8bfd6d", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/e0924ba19e5411e997f6d239ab7de626bd8bfd6d", "committedDate": "2020-07-31T12:10:43Z", "message": "Merge branch 'master' into add-usepbsrates-flag-to-currency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29331ea22aa00dfac82fbf08d250b7322beeb78a", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/29331ea22aa00dfac82fbf08d250b7322beeb78a", "committedDate": "2020-08-03T11:11:22Z", "message": "Changes after review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3180, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}