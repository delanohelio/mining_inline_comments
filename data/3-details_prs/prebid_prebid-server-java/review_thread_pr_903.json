{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNzUxNDI5", "number": 903, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxNzo0OFrOEhoAhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxOToxNVrOEhoCSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjkzOTU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/metric/CacheMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxNzo0OFrOHPCjIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxNzo0OFrOHPCjIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzMjQ1MA==", "bodyText": "Pls change doc.", "url": "https://github.com/prebid/prebid-server-java/pull/903#discussion_r485532450", "createdAt": "2020-09-09T11:17:48Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/metric/CacheMetrics.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package org.prebid.server.metric;\n+\n+import com.codahale.metrics.MetricRegistry;\n+\n+import java.util.Objects;\n+import java.util.function.Function;\n+\n+/**\n+ * Account metrics support.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b6dba3cd8b4c39b3286f2aa62d825456153b8a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjk0NDA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/metric/CacheMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxOToxNVrOHPCl5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxOToxNVrOHPCl5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzMzE1Nw==", "bodyText": "Can we use createPrefix() method instead of duplicating string?", "url": "https://github.com/prebid/prebid-server-java/pull/903#discussion_r485533157", "createdAt": "2020-09-09T11:19:15Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/metric/CacheMetrics.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package org.prebid.server.metric;\n+\n+import com.codahale.metrics.MetricRegistry;\n+\n+import java.util.Objects;\n+import java.util.function.Function;\n+\n+/**\n+ * Account metrics support.\n+ */\n+class CacheMetrics extends UpdatableMetrics {\n+\n+    private final RequestMetrics requestsMetrics;\n+\n+    CacheMetrics(MetricRegistry metricRegistry, CounterType counterType) {\n+        super(\n+                Objects.requireNonNull(metricRegistry),\n+                Objects.requireNonNull(counterType),\n+                nameCreator(createPrefix()));\n+\n+        requestsMetrics = new RequestMetrics(metricRegistry, counterType, createPrefix());\n+    }\n+\n+    CacheMetrics(MetricRegistry metricRegistry, CounterType counterType, String prefix) {\n+        super(\n+                Objects.requireNonNull(metricRegistry),\n+                Objects.requireNonNull(counterType),\n+                nameCreator(createPrefix(Objects.requireNonNull(prefix))));\n+\n+        requestsMetrics = new RequestMetrics(metricRegistry, counterType, createPrefix(prefix));\n+    }\n+\n+    private static String createPrefix(String prefix) {\n+        return String.format(\"%s.prebid_cache\", prefix);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b6dba3cd8b4c39b3286f2aa62d825456153b8a"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3885, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}