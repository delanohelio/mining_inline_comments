{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3ODMxNDE1", "number": 687, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDoxNDo1NVrOD1s3ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTowODo1N1rOD1uHgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjM2MTk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDoxNDo1NVrOGLQtkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDoxNDo1NVrOGLQtkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2MTMzMQ==", "bodyText": "extract method", "url": "https://github.com/prebid/prebid-server-java/pull/687#discussion_r414461331", "createdAt": "2020-04-24T10:14:55Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java", "diffHunk": "@@ -249,7 +257,13 @@ void put(String prefix, String value) {\n         private List<String> createKeys(String prefix) {\n             final List<String> keys = new ArrayList<>(2);\n             if (includeBidderKeys && !excludedBidderKeys.contains(prefix)) {\n-                keys.add(String.format(\"%s_%s\", prefix, bidder));\n+                final String targetKey = String.format(\"%s_%s\", prefix, bidder);\n+                if (truncateAttrChars != null && !truncateAttrChars.equals(0)\n+                        && targetKey.length() >= truncateAttrChars) {\n+                    keys.add(targetKey.substring(0, truncateAttrChars));\n+                } else {\n+                    keys.add(targetKey);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d584a9d73ef42d60c93ae5f451d3b1f9f63364e"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjM3MzYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/handler/AuctionHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDoxNzo0NlrOGLQ0SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDoxNzo0NlrOGLQ0SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2MzA0OA==", "bodyText": "this is redundant", "url": "https://github.com/prebid/prebid-server-java/pull/687#discussion_r414463048", "createdAt": "2020-04-24T10:17:46Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/handler/AuctionHandler.java", "diffHunk": "@@ -402,12 +405,16 @@ private static PreBidResponse mergeBidsWithCacheResults(PreBidResponse preBidRes\n      * The bids are sorted by cpm to find the highest bid.\n      * The ad server targeting keywords are added to all bids, with specific keywords for the highest bid.\n      */\n-    private static PreBidResponse addTargetingKeywords(PreBidRequest preBidRequest, Account account,\n+    private PreBidResponse addTargetingKeywords(PreBidRequest preBidRequest, Account account,\n                                                        PreBidResponse preBidResponse) {\n         final Integer sortBids = preBidRequest.getSortBids();\n         if (sortBids != null && sortBids == 1) {\n+            final Integer truncateAttrChars = ObjectUtils.firstNonNull(account.getTruncateTargetAttr(),\n+                    preBidRequest.getMaxKeyLength(), this.truncateTargetingAttrMaxChars);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d584a9d73ef42d60c93ae5f451d3b1f9f63364e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjQxNTM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/spring/config/ServiceConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDoyODoyMlrOGLRM0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDoyODoyMlrOGLRM0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2OTMzMA==", "bodyText": "@rpanchyk\nIs it ok to perform validation in the configuration ?", "url": "https://github.com/prebid/prebid-server-java/pull/687#discussion_r414469330", "createdAt": "2020-04-24T10:28:22Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/spring/config/ServiceConfiguration.java", "diffHunk": "@@ -529,9 +529,16 @@ BidResponseCreator bidResponseCreator(\n             BidderCatalog bidderCatalog,\n             EventsService eventsService,\n             StoredRequestProcessor storedRequestProcessor,\n+            @Value(\"${settings.targeting.truncate-attr-chars}\") Integer truncateTargetingAttrMaxChars,\n             JacksonMapper mapper) {\n \n-        return new BidResponseCreator(cacheService, bidderCatalog, eventsService, storedRequestProcessor, mapper);\n+        if (truncateTargetingAttrMaxChars != null\n+                && (truncateTargetingAttrMaxChars < 0 || truncateTargetingAttrMaxChars > 255)) {\n+            throw new IllegalArgumentException(\n+                    \"application.yaml settings.targeting.truncate-attr-chars value must be from 0 to 225 or null\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d584a9d73ef42d60c93ae5f451d3b1f9f63364e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjU2NzA3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/application.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTowODo1N1rOGLSlNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTowODo1N1rOGLSlNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5MTk1OQ==", "bodyText": "@rpanchyk notice that default value for rubicon need to be 20", "url": "https://github.com/prebid/prebid-server-java/pull/687#discussion_r414491959", "createdAt": "2020-04-24T11:08:57Z", "author": {"login": "DGarbar"}, "path": "src/main/resources/application.yaml", "diffHunk": "@@ -76,6 +76,8 @@ settings:\n     ttl-seconds: 360\n     notification-endpoints-enabled: false\n     account-invalidation-enabled: true\n+  targeting:\n+    truncate-attr-chars: 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "223e08e730529e16ac3ef5d37cc70aacd07af8fd"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4209, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}