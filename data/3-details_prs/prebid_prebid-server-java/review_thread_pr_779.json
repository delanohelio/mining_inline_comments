{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNjE0NDU2", "number": 779, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNDowMjo0NFrOELQqBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwOToyODo0NFrOELnGAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjQyNjkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/AmpRequestFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNDowMjo0NFrOGsxXPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwODo0NDozNFrOGtORWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5OTI5Mg==", "bodyText": "This cast is worrisome - why not check if parsed JsonNode is object and make cast in readTargeting?", "url": "https://github.com/prebid/prebid-server-java/pull/779#discussion_r449599292", "createdAt": "2020-07-03T14:02:44Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/auction/AmpRequestFactory.java", "diffHunk": "@@ -221,37 +227,64 @@ private BidRequest overrideParameters(BidRequest bidRequest, HttpServerRequest r\n             }\n         }\n \n-        final Site updatedSite = overrideSite(bidRequest.getSite(), request);\n-        final Imp updatedImp = overrideImp(bidRequest.getImp().get(0), request);\n+        final String requestTargeting = request.getParam(TARGETING_REQUEST_PARAM);\n+        final Targeting targeting = parseTargeting(requestTargeting);\n+        final ObjectNode targetingNode = (ObjectNode) readTargeting(requestTargeting);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a7690d80554f359b94a89e8d0cc6a31fedea947"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA3MjkyMQ==", "bodyText": "fixed", "url": "https://github.com/prebid/prebid-server-java/pull/779#discussion_r450072921", "createdAt": "2020-07-06T08:44:34Z", "author": {"login": "BraslavskiyAndrey"}, "path": "src/main/java/org/prebid/server/auction/AmpRequestFactory.java", "diffHunk": "@@ -221,37 +227,64 @@ private BidRequest overrideParameters(BidRequest bidRequest, HttpServerRequest r\n             }\n         }\n \n-        final Site updatedSite = overrideSite(bidRequest.getSite(), request);\n-        final Imp updatedImp = overrideImp(bidRequest.getImp().get(0), request);\n+        final String requestTargeting = request.getParam(TARGETING_REQUEST_PARAM);\n+        final Targeting targeting = parseTargeting(requestTargeting);\n+        final ObjectNode targetingNode = (ObjectNode) readTargeting(requestTargeting);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5OTI5Mg=="}, "originalCommit": {"oid": "8a7690d80554f359b94a89e8d0cc6a31fedea947"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjQzMjg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/AmpRequestFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNDowNDo0N1rOGsxa6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwODo0NDoyNVrOGtOQ-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYwMDIzMw==", "bodyText": "requestTargeting looks to be the same value as input parameter in parseTargeting. However here it is not decoded prior to parsing. Is it intentional difference?", "url": "https://github.com/prebid/prebid-server-java/pull/779#discussion_r449600233", "createdAt": "2020-07-03T14:04:47Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/auction/AmpRequestFactory.java", "diffHunk": "@@ -221,37 +227,64 @@ private BidRequest overrideParameters(BidRequest bidRequest, HttpServerRequest r\n             }\n         }\n \n-        final Site updatedSite = overrideSite(bidRequest.getSite(), request);\n-        final Imp updatedImp = overrideImp(bidRequest.getImp().get(0), request);\n+        final String requestTargeting = request.getParam(TARGETING_REQUEST_PARAM);\n+        final Targeting targeting = parseTargeting(requestTargeting);\n+        final ObjectNode targetingNode = (ObjectNode) readTargeting(requestTargeting);\n+\n+        final Site updatedSite = overrideSite(bidRequest.getSite(), request, targeting);\n+        final Imp updatedImp = overrideImp(bidRequest.getImp().get(0), request, targetingNode);\n         final Long updatedTimeout = overrideTimeout(bidRequest.getTmax(), request);\n-        final User updatedUser = overrideUser(bidRequest.getUser(), gdprConsent);\n+        final User updatedUser = overrideUser(bidRequest.getUser(), gdprConsent, targeting);\n         final Regs updatedRegs = overrideRegs(bidRequest.getRegs(), ccpaConsent);\n+        final ExtRequest updatedExtBidRequest = overrideExtBidRequest(bidRequest.getExt(), targeting);\n \n         final BidRequest result;\n         if (updatedSite != null || updatedImp != null || updatedTimeout != null || updatedUser != null\n-                || updatedRegs != null) {\n+                || updatedRegs != null || updatedExtBidRequest != null) {\n             result = bidRequest.toBuilder()\n                     .site(updatedSite != null ? updatedSite : bidRequest.getSite())\n                     .imp(updatedImp != null ? Collections.singletonList(updatedImp) : bidRequest.getImp())\n                     .tmax(updatedTimeout != null ? updatedTimeout : bidRequest.getTmax())\n                     .user(updatedUser != null ? updatedUser : bidRequest.getUser())\n                     .regs(updatedRegs != null ? updatedRegs : bidRequest.getRegs())\n+                    .ext(updatedExtBidRequest != null ? updatedExtBidRequest : bidRequest.getExt())\n                     .build();\n         } else {\n             result = bidRequest;\n         }\n         return result;\n     }\n \n-    private Site overrideSite(Site site, HttpServerRequest request) {\n+    private JsonNode readTargeting(String requestTargeting) {\n+        try {\n+            return requestTargeting != null ? mapper.mapper().readTree(requestTargeting) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a7690d80554f359b94a89e8d0cc6a31fedea947"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA3MjgyNg==", "bodyText": "It is mistake, fixed", "url": "https://github.com/prebid/prebid-server-java/pull/779#discussion_r450072826", "createdAt": "2020-07-06T08:44:25Z", "author": {"login": "BraslavskiyAndrey"}, "path": "src/main/java/org/prebid/server/auction/AmpRequestFactory.java", "diffHunk": "@@ -221,37 +227,64 @@ private BidRequest overrideParameters(BidRequest bidRequest, HttpServerRequest r\n             }\n         }\n \n-        final Site updatedSite = overrideSite(bidRequest.getSite(), request);\n-        final Imp updatedImp = overrideImp(bidRequest.getImp().get(0), request);\n+        final String requestTargeting = request.getParam(TARGETING_REQUEST_PARAM);\n+        final Targeting targeting = parseTargeting(requestTargeting);\n+        final ObjectNode targetingNode = (ObjectNode) readTargeting(requestTargeting);\n+\n+        final Site updatedSite = overrideSite(bidRequest.getSite(), request, targeting);\n+        final Imp updatedImp = overrideImp(bidRequest.getImp().get(0), request, targetingNode);\n         final Long updatedTimeout = overrideTimeout(bidRequest.getTmax(), request);\n-        final User updatedUser = overrideUser(bidRequest.getUser(), gdprConsent);\n+        final User updatedUser = overrideUser(bidRequest.getUser(), gdprConsent, targeting);\n         final Regs updatedRegs = overrideRegs(bidRequest.getRegs(), ccpaConsent);\n+        final ExtRequest updatedExtBidRequest = overrideExtBidRequest(bidRequest.getExt(), targeting);\n \n         final BidRequest result;\n         if (updatedSite != null || updatedImp != null || updatedTimeout != null || updatedUser != null\n-                || updatedRegs != null) {\n+                || updatedRegs != null || updatedExtBidRequest != null) {\n             result = bidRequest.toBuilder()\n                     .site(updatedSite != null ? updatedSite : bidRequest.getSite())\n                     .imp(updatedImp != null ? Collections.singletonList(updatedImp) : bidRequest.getImp())\n                     .tmax(updatedTimeout != null ? updatedTimeout : bidRequest.getTmax())\n                     .user(updatedUser != null ? updatedUser : bidRequest.getUser())\n                     .regs(updatedRegs != null ? updatedRegs : bidRequest.getRegs())\n+                    .ext(updatedExtBidRequest != null ? updatedExtBidRequest : bidRequest.getExt())\n                     .build();\n         } else {\n             result = bidRequest;\n         }\n         return result;\n     }\n \n-    private Site overrideSite(Site site, HttpServerRequest request) {\n+    private JsonNode readTargeting(String requestTargeting) {\n+        try {\n+            return requestTargeting != null ? mapper.mapper().readTree(requestTargeting) : null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYwMDIzMw=="}, "originalCommit": {"oid": "8a7690d80554f359b94a89e8d0cc6a31fedea947"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjEwMzA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/AmpRequestFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwOToyODo0NFrOGtP0ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwOToyODo0NFrOGtP0ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA5ODI3Ng==", "bodyText": "Pls consider decodeUrl can produce IllegalArgumentException exception which must be wrapped.", "url": "https://github.com/prebid/prebid-server-java/pull/779#discussion_r450098276", "createdAt": "2020-07-06T09:28:44Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/auction/AmpRequestFactory.java", "diffHunk": "@@ -221,37 +226,76 @@ private BidRequest overrideParameters(BidRequest bidRequest, HttpServerRequest r\n             }\n         }\n \n-        final Site updatedSite = overrideSite(bidRequest.getSite(), request);\n-        final Imp updatedImp = overrideImp(bidRequest.getImp().get(0), request);\n+        final String requestTargeting = request.getParam(TARGETING_REQUEST_PARAM);\n+        final ObjectNode targetingNode = readTargeting(requestTargeting);\n+        final Targeting targeting = parseTargeting(targetingNode);\n+\n+        final Site updatedSite = overrideSite(bidRequest.getSite(), request, targeting);\n+        final Imp updatedImp = overrideImp(bidRequest.getImp().get(0), request, targetingNode);\n         final Long updatedTimeout = overrideTimeout(bidRequest.getTmax(), request);\n-        final User updatedUser = overrideUser(bidRequest.getUser(), gdprConsent);\n+        final User updatedUser = overrideUser(bidRequest.getUser(), gdprConsent, targeting);\n         final Regs updatedRegs = overrideRegs(bidRequest.getRegs(), ccpaConsent);\n+        final ExtRequest updatedExtBidRequest = overrideExtBidRequest(bidRequest.getExt(), targeting);\n \n         final BidRequest result;\n         if (updatedSite != null || updatedImp != null || updatedTimeout != null || updatedUser != null\n-                || updatedRegs != null) {\n+                || updatedRegs != null || updatedExtBidRequest != null) {\n             result = bidRequest.toBuilder()\n                     .site(updatedSite != null ? updatedSite : bidRequest.getSite())\n                     .imp(updatedImp != null ? Collections.singletonList(updatedImp) : bidRequest.getImp())\n                     .tmax(updatedTimeout != null ? updatedTimeout : bidRequest.getTmax())\n                     .user(updatedUser != null ? updatedUser : bidRequest.getUser())\n                     .regs(updatedRegs != null ? updatedRegs : bidRequest.getRegs())\n+                    .ext(updatedExtBidRequest != null ? updatedExtBidRequest : bidRequest.getExt())\n                     .build();\n         } else {\n             result = bidRequest;\n         }\n         return result;\n     }\n \n-    private Site overrideSite(Site site, HttpServerRequest request) {\n+    private ObjectNode readTargeting(String jsonTargeting) {\n+        try {\n+            final String decodedJsonTargeting = HttpUtil.decodeUrl(jsonTargeting);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "833888b5700d4aad148d546f1baec0a04cdb472b"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4113, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}