{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NjM5MDQy", "number": 849, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjowODoxMFrOEeR7jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzoxMDowMVrOEeTO4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTg2NTExOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjowODoxMFrOHJ2Iww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjowODoxMFrOHJ2Iww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4NjIxMQ==", "bodyText": "remove /n pls", "url": "https://github.com/prebid/prebid-server-java/pull/849#discussion_r480086211", "createdAt": "2020-08-31T12:08:10Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "diffHunk": "@@ -719,16 +725,30 @@ private Bid toBid(BidderBid bidderBid, String bidder, ExtRequestTargeting target\n         final Events events = eventsEnabled && eventsAllowedByRequest\n                 ? eventsService.createEvent(eventBidId, bidder, account.getId(), auctionTimestamp)\n                 : null;\n-\n-        final ExtBidPrebid prebidExt = ExtBidPrebid.of(\n-                generatedBidId, bidType, targetingKeywords, cache, storedVideo, events, null);\n+        final ExtBidPrebid prebidExt = ExtBidPrebid\n+                .builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2efb5add30a5f0540b30d1ab590c5c6fb32052d"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTg3MjAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjoxMDoxN1rOHJ2Mtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjoxMDoxN1rOHJ2Mtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4NzIyMw==", "bodyText": "Lets extract this method to be more consistent. (We extracted all methods above and use variables to build)", "url": "https://github.com/prebid/prebid-server-java/pull/849#discussion_r480087223", "createdAt": "2020-08-31T12:10:17Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "diffHunk": "@@ -719,16 +725,30 @@ private Bid toBid(BidderBid bidderBid, String bidder, ExtRequestTargeting target\n         final Events events = eventsEnabled && eventsAllowedByRequest\n                 ? eventsService.createEvent(eventBidId, bidder, account.getId(), auctionTimestamp)\n                 : null;\n-\n-        final ExtBidPrebid prebidExt = ExtBidPrebid.of(\n-                generatedBidId, bidType, targetingKeywords, cache, storedVideo, events, null);\n+        final ExtBidPrebid prebidExt = ExtBidPrebid\n+                .builder()\n+                .bidid(generatedBidId)\n+                .type(bidType)\n+                .targeting(targetingKeywords)\n+                .cache(cache)\n+                .storedRequestAttributes(storedVideo)\n+                .events(events)\n+                .video(getExtBidPrebidVideo(bid.getExt()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2efb5add30a5f0540b30d1ab590c5c6fb32052d"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjA3ODQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzoxMDowMVrOHJ4HpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzoxMDowMVrOHJ4HpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDExODY5Mg==", "bodyText": "Lets move this method to the end of the file, to match method workflow order", "url": "https://github.com/prebid/prebid-server-java/pull/849#discussion_r480118692", "createdAt": "2020-08-31T13:10:01Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "diffHunk": "@@ -719,16 +725,30 @@ private Bid toBid(BidderBid bidderBid, String bidder, ExtRequestTargeting target\n         final Events events = eventsEnabled && eventsAllowedByRequest\n                 ? eventsService.createEvent(eventBidId, bidder, account.getId(), auctionTimestamp)\n                 : null;\n-\n-        final ExtBidPrebid prebidExt = ExtBidPrebid.of(\n-                generatedBidId, bidType, targetingKeywords, cache, storedVideo, events, null);\n+        final ExtBidPrebid prebidExt = ExtBidPrebid\n+                .builder()\n+                .bidid(generatedBidId)\n+                .type(bidType)\n+                .targeting(targetingKeywords)\n+                .cache(cache)\n+                .storedRequestAttributes(storedVideo)\n+                .events(events)\n+                .video(getExtBidPrebidVideo(bid.getExt()))\n+                .build();\n \n         final ExtPrebid<ExtBidPrebid, ObjectNode> bidExt = ExtPrebid.of(prebidExt, bid.getExt());\n         bid.setExt(mapper.mapper().valueToTree(bidExt));\n \n         return bid;\n     }\n \n+    private ExtBidPrebidVideo getExtBidPrebidVideo(ObjectNode bidExt) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2efb5add30a5f0540b30d1ab590c5c6fb32052d"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3999, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}