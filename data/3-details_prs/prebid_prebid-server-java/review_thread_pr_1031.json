{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3MzM5NjIx", "number": 1031, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDowMzoxM1rOE-AejQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDowMzoxM1rOE-AejQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDU0OTg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/spring/config/MetricsConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDowMzoxM1rOH6_f-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDoxMjo0OFrOH6_y6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYxOTgzNA==", "bodyText": "Minor. Pls place this line near to usage.", "url": "https://github.com/prebid/prebid-server-java/pull/1031#discussion_r531619834", "createdAt": "2020-11-27T14:03:13Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/spring/config/MetricsConfiguration.java", "diffHunk": "@@ -113,7 +115,15 @@ Metrics metrics(@Value(\"${metrics.metricType}\") CounterType counterType, MetricR\n \n     @Bean\n     MetricRegistry metricRegistry() {\n-        return SharedMetricRegistries.getOrCreate(METRIC_REGISTRY_NAME);\n+        final boolean alreadyExists = SharedMetricRegistries.names().contains(METRIC_REGISTRY_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1193bdce453a35ae3a94529dbaf07dae8a3d2c1"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYyNDY4Mg==", "bodyText": "nvrmd", "url": "https://github.com/prebid/prebid-server-java/pull/1031#discussion_r531624682", "createdAt": "2020-11-27T14:12:48Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/spring/config/MetricsConfiguration.java", "diffHunk": "@@ -113,7 +115,15 @@ Metrics metrics(@Value(\"${metrics.metricType}\") CounterType counterType, MetricR\n \n     @Bean\n     MetricRegistry metricRegistry() {\n-        return SharedMetricRegistries.getOrCreate(METRIC_REGISTRY_NAME);\n+        final boolean alreadyExists = SharedMetricRegistries.names().contains(METRIC_REGISTRY_NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYxOTgzNA=="}, "originalCommit": {"oid": "f1193bdce453a35ae3a94529dbaf07dae8a3d2c1"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3823, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}