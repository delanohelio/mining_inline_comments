{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NDIwMTMx", "number": 1059, "title": "GumGum bidder review", "bodyText": "", "createdAt": "2020-12-08T12:33:30Z", "url": "https://github.com/prebid/prebid-server-java/pull/1059", "merged": true, "mergeCommit": {"oid": "1badbe3733696f2e97a9d5e2645db8b8092fc4ce"}, "closed": true, "closedAt": "2020-12-08T14:38:15Z", "author": {"login": "snahornyi"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkJXPDAH2gAyNTM0NDIwMTMxOjBkYjI1MWRlOTZiMGRiMzZmNGNkNzkzNDFlZDE3YmU0ODYwM2EzMGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkLDlngFqTU0NzI4ODYwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0db251de96b0db36f4cd79341ed17be48603a30a", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/0db251de96b0db36f4cd79341ed17be48603a30a", "committedDate": "2020-12-08T12:33:02Z", "message": "GumGum bidder review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a515ed172edce0b6afdf913f6a9820771402fa0c", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/a515ed172edce0b6afdf913f6a9820771402fa0c", "committedDate": "2020-12-08T13:07:19Z", "message": "Update adm resolve logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MjEyNTYw", "url": "https://github.com/prebid/prebid-server-java/pull/1059#pullrequestreview-547212560", "createdAt": "2020-12-08T13:03:15Z", "commit": {"oid": "0db251de96b0db36f4cd79341ed17be48603a30a"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzowMzoxNVrOIBZ2Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzowMzoxNVrOIBZ2Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM0Mjk0Mg==", "bodyText": "Minor. Not the issue but just to inform, in this case we may use ObjectUtils.defaultIfNull(..) since trackingId is a string value.", "url": "https://github.com/prebid/prebid-server-java/pull/1059#discussion_r538342942", "createdAt": "2020-12-08T13:03:15Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -156,7 +158,7 @@ private static boolean isNullOrZero(Integer number) {\n     }\n \n     private static Site modifySite(Site site, String trackingId) {\n-        return site != null ? site.toBuilder().id(trackingId).build() : null;\n+        return site != null ? site.toBuilder().id(Objects.toString(trackingId, \"\")).build() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db251de96b0db36f4cd79341ed17be48603a30a"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MjM2NDM0", "url": "https://github.com/prebid/prebid-server-java/pull/1059#pullrequestreview-547236434", "createdAt": "2020-12-08T13:33:23Z", "commit": {"oid": "a515ed172edce0b6afdf913f6a9820771402fa0c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzozMzoyM1rOIBbsmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzo0OTo0OVrOIBcw_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM3MzI3Mw==", "bodyText": "use ? :", "url": "https://github.com/prebid/prebid-server-java/pull/1059#discussion_r538373273", "createdAt": "2020-12-08T13:33:23Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -177,26 +180,34 @@ private static Site modifySite(Site site, String trackingId) {\n \n     private static List<BidderBid> bidsFromResponse(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse.getSeatbid().stream()\n+                .filter(Objects::nonNull)\n                 .map(SeatBid::getBid)\n                 .flatMap(Collection::stream)\n+                .filter(Objects::nonNull)\n                 .map(bid -> toBidderBid(bid, bidRequest, bidResponse.getCur()))\n                 .collect(Collectors.toList());\n     }\n \n     private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n         final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n         final Bid updatedBid = bidType == BidType.video\n-                ? bid.toBuilder().adm(bid.getAdm().replace(\"${AUCTION_PRICE}\", String.valueOf(bid.getPrice()))).build()\n-                : bid;\n+                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build() : bid;\n         return BidderBid.of(updatedBid, bidType, currency);\n     }\n \n     private static BidType getMediaType(String impId, List<Imp> requestImps) {\n         for (Imp imp : requestImps) {\n-            if (imp.getId().equals(impId) && imp.getBanner() != null) {\n-                return BidType.banner;\n+            if (imp.getId().equals(impId)) {\n+                if (imp.getBanner() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a515ed172edce0b6afdf913f6a9820771402fa0c"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM3MzkyMw==", "bodyText": "should set What?", "url": "https://github.com/prebid/prebid-server-java/pull/1059#discussion_r538373923", "createdAt": "2020-12-08T13:33:58Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/bidder/gumgum/GumgumBidderTest.java", "diffHunk": "@@ -121,12 +128,37 @@ public void makeHttpRequestsShouldSkipImpressionsWithoutBannerOrVideo() {\n \n         // then\n         assertThat(result.getErrors()).isEmpty();\n-        assertThat(result.getValue()).hasSize(1)\n-                .extracting(httpRequest -> mapper.readValue(httpRequest.getBody(), BidRequest.class))\n+        assertThat(result.getValue())\n+                .extracting(HttpRequest::getPayload)\n                 .flatExtracting(BidRequest::getImp)\n                 .extracting(Imp::getBanner)\n                 .extracting(Banner::getId)\n-                .containsOnly(\"banner_id\");\n+                .containsExactly(\"banner_id\");\n+    }\n+\n+    @Test\n+    public void makeHttpRequestsShouldSet() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a515ed172edce0b6afdf913f6a9820771402fa0c"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM4NDA3Mw==", "bodyText": "/n", "url": "https://github.com/prebid/prebid-server-java/pull/1059#discussion_r538384073", "createdAt": "2020-12-08T13:43:50Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -177,26 +180,34 @@ private static Site modifySite(Site site, String trackingId) {\n \n     private static List<BidderBid> bidsFromResponse(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse.getSeatbid().stream()\n+                .filter(Objects::nonNull)\n                 .map(SeatBid::getBid)\n                 .flatMap(Collection::stream)\n+                .filter(Objects::nonNull)\n                 .map(bid -> toBidderBid(bid, bidRequest, bidResponse.getCur()))\n                 .collect(Collectors.toList());\n     }\n \n     private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n         final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n         final Bid updatedBid = bidType == BidType.video\n-                ? bid.toBuilder().adm(bid.getAdm().replace(\"${AUCTION_PRICE}\", String.valueOf(bid.getPrice()))).build()\n-                : bid;\n+                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build() : bid;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a515ed172edce0b6afdf913f6a9820771402fa0c"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5MDc4Mg==", "bodyText": "replaceAll", "url": "https://github.com/prebid/prebid-server-java/pull/1059#discussion_r538390782", "createdAt": "2020-12-08T13:49:49Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -177,26 +180,34 @@ private static Site modifySite(Site site, String trackingId) {\n \n     private static List<BidderBid> bidsFromResponse(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse.getSeatbid().stream()\n+                .filter(Objects::nonNull)\n                 .map(SeatBid::getBid)\n                 .flatMap(Collection::stream)\n+                .filter(Objects::nonNull)\n                 .map(bid -> toBidderBid(bid, bidRequest, bidResponse.getCur()))\n                 .collect(Collectors.toList());\n     }\n \n     private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n         final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n         final Bid updatedBid = bidType == BidType.video\n-                ? bid.toBuilder().adm(bid.getAdm().replace(\"${AUCTION_PRICE}\", String.valueOf(bid.getPrice()))).build()\n-                : bid;\n+                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build() : bid;\n         return BidderBid.of(updatedBid, bidType, currency);\n     }\n \n     private static BidType getMediaType(String impId, List<Imp> requestImps) {\n         for (Imp imp : requestImps) {\n-            if (imp.getId().equals(impId) && imp.getBanner() != null) {\n-                return BidType.banner;\n+            if (imp.getId().equals(impId)) {\n+                if (imp.getBanner() != null) {\n+                    return BidType.banner;\n+                }\n+                return BidType.video;\n             }\n         }\n         return BidType.video;\n     }\n+\n+    private static String resolveAdm(String bidAdm, BigDecimal price) {\n+        return StringUtils.isNotBlank(bidAdm) ? bidAdm.replace(\"${AUCTION_PRICE}\", String.valueOf(price)) : bidAdm;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a515ed172edce0b6afdf913f6a9820771402fa0c"}, "originalPosition": 146}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c00cbe80a393fc67a50ce5b07e693fa2595fadec", "author": {"user": null}, "url": "https://github.com/prebid/prebid-server-java/commit/c00cbe80a393fc67a50ce5b07e693fa2595fadec", "committedDate": "2020-12-08T14:21:05Z", "message": "Fixes after review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3Mjg3MzA0", "url": "https://github.com/prebid/prebid-server-java/pull/1059#pullrequestreview-547287304", "createdAt": "2020-12-08T14:30:03Z", "commit": {"oid": "c00cbe80a393fc67a50ce5b07e693fa2595fadec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3Mjg4NjAz", "url": "https://github.com/prebid/prebid-server-java/pull/1059#pullrequestreview-547288603", "createdAt": "2020-12-08T14:31:23Z", "commit": {"oid": "c00cbe80a393fc67a50ce5b07e693fa2595fadec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2963, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}