{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNzQ1NjY3", "number": 729, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTozNToyMVrOEC67Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTozNToyMVrOEC67Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDk4MDM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/aja/AjaBidder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTozNToyMVrOGfq8mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTozNToyMVrOGfq8mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg2MjY4MQ==", "bodyText": "Probably you can remove this 'if' completely and later use impsByTagID.keySet(), the result should be the same.", "url": "https://github.com/prebid/prebid-server-java/pull/729#discussion_r435862681", "createdAt": "2020-06-05T11:35:21Z", "author": {"login": "BraslavskiyAndrey"}, "path": "src/main/java/org/prebid/server/bidder/aja/AjaBidder.java", "diffHunk": "@@ -0,0 +1,188 @@\n+package org.prebid.server.bidder.aja;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.iab.openrtb.request.BidRequest;\n+import com.iab.openrtb.request.Imp;\n+import com.iab.openrtb.response.Bid;\n+import com.iab.openrtb.response.BidResponse;\n+import com.iab.openrtb.response.SeatBid;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.vertx.core.http.HttpMethod;\n+import org.prebid.server.bidder.Bidder;\n+import org.prebid.server.bidder.aja.proto.ExtImpAja;\n+import org.prebid.server.bidder.model.BidderBid;\n+import org.prebid.server.bidder.model.BidderError;\n+import org.prebid.server.bidder.model.HttpCall;\n+import org.prebid.server.bidder.model.HttpRequest;\n+import org.prebid.server.bidder.model.Result;\n+import org.prebid.server.exception.PreBidException;\n+import org.prebid.server.json.DecodeException;\n+import org.prebid.server.json.EncodeException;\n+import org.prebid.server.json.JacksonMapper;\n+import org.prebid.server.proto.openrtb.ext.ExtPrebid;\n+import org.prebid.server.proto.openrtb.ext.response.BidType;\n+import org.prebid.server.util.HttpUtil;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+public class AjaBidder implements Bidder<BidRequest> {\n+\n+    private static final TypeReference<ExtPrebid<?, ExtImpAja>> AJA_EXT_TYPE_REFERENCE =\n+            new TypeReference<ExtPrebid<?, ExtImpAja>>() {\n+            };\n+\n+    private final String endpointUrl;\n+    private final JacksonMapper mapper;\n+\n+    public AjaBidder(String endpointUrl, JacksonMapper mapper) {\n+        this.endpointUrl = HttpUtil.validateUrl(Objects.requireNonNull(endpointUrl));\n+        this.mapper = Objects.requireNonNull(mapper);\n+    }\n+\n+    @Override\n+    public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest bidRequest) {\n+        final List<BidderError> errors = new ArrayList<>();\n+        final List<HttpRequest<BidRequest>> result = new ArrayList<>();\n+\n+        final List<String> tagIds = new ArrayList<>();\n+        final Map<String, Imp> impsByTagID = new HashMap<>();\n+\n+        for (Imp imp : bidRequest.getImp()) {\n+            final ExtImpAja extImpAja = parseExtAJA(imp, errors);\n+            if (extImpAja == null) {\n+                continue;\n+            }\n+            imp = imp.toBuilder()\n+                    .tagid(extImpAja.getAdSpotID())\n+                    .ext(null)\n+                    .build();\n+\n+            final String tagId = imp.getTagid();\n+            if (!impsByTagID.containsKey(tagId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3814afcfe6511c2da278bcdf54c039eb1daec543"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4071, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}