{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNjUwMTI4", "number": 1081, "title": "Add modifying of VAST for video bids and add validation", "bodyText": "Add validation for Video bids. bid.adm or bid.nurl needs to be present\n\nThis case now, is not possible <VASTAdTagURI><![CDATA[null]]></VASTAdTagURI>\n\n\nBid adm will be updated as cache. (see prebid/prebid-server#1015)\nBid type is defined by bidder, not our (imp.video != null, etc) checks. For example Appnexus use bid.ext.appnexus.bid_ad_type to define it. (that's why there are a lot of changed cache jsons. Also add ordering for tests)\n\nRefactored a bit.\n\nRemoved confusing maps\nRemoved confusing checks\nRemoved several imp to bid matching\n\nPossible improvements (in another ticket bc current PR is too large)\n\nExtract more event URL to another class\nUse bidInfo in BidResponseCreator for BidResponse", "createdAt": "2020-12-18T16:30:45Z", "url": "https://github.com/prebid/prebid-server-java/pull/1081", "merged": true, "mergeCommit": {"oid": "c172af7c0f5d898e328bb4aef93b0eec8dee5bf9"}, "closed": true, "closedAt": "2021-02-23T12:29:14Z", "author": {"login": "DGarbar"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnauONAH2gAyNTQyNjUwMTI4OmUxY2FkZjUyYjFiZThiOTVhMDM3Y2QxMDBlZDQ0MWJlMDE3YWQxZTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd87YowAFqTU5NjI3NjY2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e1cadf52b1be8b95a037cd100ed441be017ad1e3", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/e1cadf52b1be8b95a037cd100ed441be017ad1e3", "committedDate": "2020-12-18T16:28:18Z", "message": "Add modifying of VAST for video bids and add validation\n\n- Add validation for Video bids. `bid.adm` or `bid.nurl` needs to be present\n  - This case now, is not possible `<VASTAdTagURI><![CDATA[null]]></VASTAdTagURI>`\n- Bid adm will be updated as cache. (see https://github.com/prebid/prebid-server/issues/1015)\n- Bid type is defined by bidder, not our (`imp.video != null`, etc) checks. For example Appnexus use `bid.ext.appnexus.bid_ad_type` to define it. (that's why there are a lot of changed cache jsons. Also add ordering for tests)\n\nRefactored a bit.\n- Removed confusing maps\n- Removed confusing checks\n- Removed several imp to bid matching\n\nPossible improvements (in another ticket bc current PR is too large)\n- Extract more event URL to another class\n- Use bidInfo in BidResponseCreator for BidResponse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a23edb45ca28f69af1fea54540fac7d052cbaaac", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/a23edb45ca28f69af1fea54540fac7d052cbaaac", "committedDate": "2020-12-18T16:36:08Z", "message": "Merge remote-tracking branch 'origin/master' into bid-adm-vast-refactoring\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/validation/ResponseBidValidator.java\n#\tsrc/test/java/org/prebid/server/validation/ResponseBidValidatorTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9952c195fa5e5d09ee5270cdea7e303a6c7b2010", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/9952c195fa5e5d09ee5270cdea7e303a6c7b2010", "committedDate": "2020-12-18T17:43:29Z", "message": "Merged master and fixed corresponding imp can't be null"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Mzk4ODY4", "url": "https://github.com/prebid/prebid-server-java/pull/1081#pullrequestreview-556398868", "createdAt": "2020-12-21T14:00:19Z", "commit": {"oid": "9952c195fa5e5d09ee5270cdea7e303a6c7b2010"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNDowMDoxOVrOIJZNKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNDoyNDowOVrOIJZ9gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcyMTA2Nw==", "bodyText": "This variable could be inlined", "url": "https://github.com/prebid/prebid-server-java/pull/1081#discussion_r546721067", "createdAt": "2020-12-21T14:00:19Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "diffHunk": "@@ -243,6 +255,37 @@ private static ExtRequestTargeting targeting(BidRequest bidRequest) {\n         return prebid != null ? prebid.getTargeting() : null;\n     }\n \n+    private static List<BidInfo> toBidInfo(BidderResponse bidderResponse, List<Imp> imps) {\n+        return Stream.of(bidderResponse)\n+                .map(BidderResponse::getSeatBid)\n+                .filter(Objects::nonNull)\n+                .map(BidderSeatBid::getBids)\n+                .filter(Objects::nonNull)\n+                .flatMap(Collection::stream)\n+                .map(bidderBid -> toBidInfo(bidderBid.getBid(), bidderBid.getType(), imps, bidderResponse.getBidder()))\n+                .collect(Collectors.toList());\n+    }\n+\n+    private static BidInfo toBidInfo(Bid bid, BidType type, List<Imp> imps, String bidder) {\n+        final Imp imp = correspondingImp(bid, imps);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9952c195fa5e5d09ee5270cdea7e303a6c7b2010"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcyMjUzMw==", "bodyText": "If this isn't required for production usage, I would recommend removing this step.", "url": "https://github.com/prebid/prebid-server-java/pull/1081#discussion_r546722533", "createdAt": "2020-12-21T14:03:22Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/auction/BidResponseCreator.java", "diffHunk": "@@ -384,98 +428,60 @@ private static void tryAddWinningBidByBidder(Bid bid, String bidder,\n         }\n     }\n \n-    private static Stream<Bid> getBids(BidderResponse bidderResponse) {\n-        return Stream.of(bidderResponse)\n-                .map(BidderResponse::getSeatBid)\n-                .filter(Objects::nonNull)\n-                .map(BidderSeatBid::getBids)\n-                .filter(Objects::nonNull)\n-                .flatMap(Collection::stream)\n-                .map(BidderBid::getBid);\n-    }\n-\n     /**\n      * Corresponds cacheId (or null if not present) to each {@link Bid}.\n      */\n-    private Future<CacheServiceResult> toBidsWithCacheIds(List<BidderResponse> bidderResponses,\n-                                                          Set<Bid> bidsToCache,\n-                                                          AuctionContext auctionContext,\n-                                                          BidRequestCacheInfo cacheInfo,\n-                                                          EventsContext eventsContext) {\n-\n+    private Future<CacheServiceResult> cacheBids(Set<BidInfo> bidsToCache,\n+                                                 AuctionContext auctionContext,\n+                                                 BidRequestCacheInfo cacheInfo,\n+                                                 EventsContext eventsContext) {\n         if (!cacheInfo.isDoCaching()) {\n             return Future.succeededFuture(CacheServiceResult.of(null, null, toMapBidsWithEmptyCacheIds(bidsToCache)));\n         }\n \n         // do not submit non deals bids with zero price to prebid cache\n-        final List<Bid> bidsValidToBeCached = bidsToCache.stream()\n+        final List<BidInfo> bidsValidToBeCached = bidsToCache.stream()\n                 .filter(BidResponseCreator::isValidForCaching)\n+                // for test consistency", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9952c195fa5e5d09ee5270cdea7e303a6c7b2010"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjczMDA0NA==", "bodyText": "Minor: please add null checks", "url": "https://github.com/prebid/prebid-server-java/pull/1081#discussion_r546730044", "createdAt": "2020-12-21T14:17:36Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/vast/VastModifier.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.prebid.server.vast;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.TextNode;\n+import com.iab.openrtb.response.Bid;\n+import org.apache.commons.lang3.BooleanUtils;\n+import org.prebid.server.bidder.BidderCatalog;\n+import org.prebid.server.cache.proto.request.PutObject;\n+import org.prebid.server.events.EventsContext;\n+import org.prebid.server.events.EventsService;\n+\n+import java.util.Set;\n+\n+public class VastModifier {\n+\n+    private final BidderCatalog bidderCatalog;\n+    private final EventsService eventsService;\n+\n+    public VastModifier(BidderCatalog bidderCatalog, EventsService eventsService) {\n+        this.bidderCatalog = bidderCatalog;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9952c195fa5e5d09ee5270cdea7e303a6c7b2010"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjczMzQ0MQ==", "bodyText": "Perhaps localhost:8080 part is better to be replaced with a placeholder. Please consider this improvement in other modified test resources (where applicable).", "url": "https://github.com/prebid/prebid-server-java/pull/1081#discussion_r546733441", "createdAt": "2020-12-21T14:24:09Z", "author": {"login": "schernysh"}, "path": "src/test/resources/org/prebid/server/it/openrtb2/rubicon_appnexus/test-auction-rubicon-appnexus-response.json", "diffHunk": "@@ -267,7 +267,7 @@\n           \"id\": \"880290288\",\n           \"impid\": \"impId1\",\n           \"price\": 8.43,\n-          \"adm\": \"<Impression><![CDATA[]]><\\/Impression>\",\n+          \"adm\": \"<Impression><![CDATA[]]></Impression><Impression><![CDATA[http://localhost:8080/event?t=imp&b=880290288&a=5001&ts=1000&bidder=rubicon&f=b&int=dmbjs]]></Impression>\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9952c195fa5e5d09ee5270cdea7e303a6c7b2010"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "830c5d4adfb55525e9d44a0c6378e71176ad0ac4", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/830c5d4adfb55525e9d44a0c6378e71176ad0ac4", "committedDate": "2020-12-22T10:50:11Z", "message": "Fix after review. (without changing localhost/event)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a756cc115052bd5969acb32aad1511946d046695", "author": {"user": {"login": "schernysh", "name": "Sergii Chernysh"}}, "url": "https://github.com/prebid/prebid-server-java/commit/a756cc115052bd5969acb32aad1511946d046695", "committedDate": "2020-12-23T12:48:32Z", "message": "Use placeholders in test resources instead of concrete urls where possible (#1084)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51819be258491cd85685a551671e8095cb359149", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/51819be258491cd85685a551671e8095cb359149", "committedDate": "2020-12-23T14:48:09Z", "message": "Fix tests and remove ordering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67c81e51052203f71aa8d61093159fa8471bde6b", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/67c81e51052203f71aa8d61093159fa8471bde6b", "committedDate": "2020-12-28T10:07:22Z", "message": "Replace usage of Wiremock EqualToJsonPattern with custom implementation to prevent incorrect json comparison"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65145c2169574f9e00e54f298c190ef6febe73ae", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/65145c2169574f9e00e54f298c190ef6febe73ae", "committedDate": "2020-12-28T10:13:23Z", "message": "fix openx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17681916dd8d3f73c1fa576003e69e824d4e7e40", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/17681916dd8d3f73c1fa576003e69e824d4e7e40", "committedDate": "2020-12-28T12:07:39Z", "message": "Use equalToBidCacheRequest for consistency and add openrtbCacheDebugComparator() when debug is used (fix flaky tests)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "715c53c633e01093eafc1658e7af35929a94373c", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/715c53c633e01093eafc1658e7af35929a94373c", "committedDate": "2021-01-27T16:40:55Z", "message": "Merge remote-tracking branch 'origin/master' into bid-adm-vast-refactoring\n\nUpdate tests.\nRemove unnecessary code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3bbb79066d20d9e039d9e20d91460e6bf4d9cb4", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/f3bbb79066d20d9e039d9e20d91460e6bf4d9cb4", "committedDate": "2021-02-11T14:07:33Z", "message": "Merge remote-tracking branch 'origin/master' into bid-adm-vast-refactoring\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/cache/CacheService.java\n#\tsrc/test/java/org/prebid/server/cache/CacheServiceTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80d899d7eb42c8d835dfab0bd2dd09454420f016", "author": {"user": {"login": "DGarbar", "name": "Dmitriy"}}, "url": "https://github.com/prebid/prebid-server-java/commit/80d899d7eb42c8d835dfab0bd2dd09454420f016", "committedDate": "2021-02-12T12:21:33Z", "message": "Remove redundant code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97cb2449301dcd26d42a61d0776c39eea7cae127", "author": {"user": {"login": "rpanchyk", "name": null}}, "url": "https://github.com/prebid/prebid-server-java/commit/97cb2449301dcd26d42a61d0776c39eea7cae127", "committedDate": "2021-02-23T11:00:52Z", "message": "Merge branch 'master' into bid-adm-vast-refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2Mjc2NjYz", "url": "https://github.com/prebid/prebid-server-java/pull/1081#pullrequestreview-596276663", "createdAt": "2021-02-23T12:24:00Z", "commit": {"oid": "97cb2449301dcd26d42a61d0776c39eea7cae127"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2982, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}