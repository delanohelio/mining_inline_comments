{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2OTY5OTM5", "number": 714, "reviewThreads": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozNDozM1rOD9ZYmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo0Nzo0OFrOD_qFRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzA1NjI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozNDozM1rOGW3aKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozNDozM1rOGW3aKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyOTY3Mg==", "bodyText": "requestCurrencyRates not required here bc it can use externalValues from parameter.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426629672", "createdAt": "2020-05-18T13:34:33Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -155,6 +162,30 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n         return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n     }\n \n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency,\n+                                                           BigDecimal conversionRate) {\n+        if (requestCurrencyRates != null) {\n+            conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        }\n+        return conversionRate;\n+    }\n+\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> requestCurrencyRates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzA2NzU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozNzoxN1rOGW3hTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozNzoxN1rOGW3hTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzMTUwMA==", "bodyText": "Does this logic can be in the getConversionRateFromServer method.\n(First we ask server and then request)\nP.s I do not like multiole if so close and another one in the method", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426631500", "createdAt": "2020-05-18T13:37:17Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,15 +138,21 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n         BigDecimal conversionRate = null;\n-        if (requestCurrencyRates != null) {\n-            conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n-        }\n-\n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (usepbsrates) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, adServerCurrency, effectiveBidCurrency,\n+                    conversionRate);\n+            if (conversionRate == null) {\n+                conversionRate = getConversionRateFromRequest(requestCurrencyRates, adServerCurrency,\n+                        effectiveBidCurrency, conversionRate);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzA2OTA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozNzozOVrOGW3iNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozNzozOVrOGW3iNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzMTczMg==", "bodyText": "same as above but with getConversionRateFromRequest", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426631732", "createdAt": "2020-05-18T13:37:39Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,15 +138,21 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n         BigDecimal conversionRate = null;\n-        if (requestCurrencyRates != null) {\n-            conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n-        }\n-\n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (usepbsrates) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, adServerCurrency, effectiveBidCurrency,\n+                    conversionRate);\n+            if (conversionRate == null) {\n+                conversionRate = getConversionRateFromRequest(requestCurrencyRates, adServerCurrency,\n+                        effectiveBidCurrency, conversionRate);\n+            }\n+        } else {\n+            conversionRate = getConversionRateFromRequest(requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency, conversionRate);\n+            if (conversionRate == null) {\n+                conversionRate = getConversionRateFromServer(externalCurrencyRates, adServerCurrency,\n+                        effectiveBidCurrency, conversionRate);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzA4OTA1OnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/prebid/server/it/storedrequests/test-amp-stored-request.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo0MjowMVrOGW3uGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo0MjowMVrOGW3uGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNDc3Ng==", "bodyText": "is it really required ?", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426634776", "createdAt": "2020-05-18T13:42:01Z", "author": {"login": "DGarbar"}, "path": "src/test/resources/org/prebid/server/it/storedrequests/test-amp-stored-request.json", "diffHunk": "@@ -56,7 +56,8 @@\n           \"USD\": {\n             \"EUR\": 0.8110\n           }\n-        }\n+        },\n+        \"usepbsrates\": false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzA5NTQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo0MzozMFrOGW3yKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo0MzozMFrOGW3yKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNTgxOA==", "bodyText": "currency.getUsepbsrates() retruns Boolean not boolean, so it can be null.\nI'd prefer if we extract this variable and return null.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426635818", "createdAt": "2020-05-18T13:43:30Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "diffHunk": "@@ -215,6 +215,15 @@ private static ExtRequestTargeting targeting(ExtBidRequest requestExt) {\n         return currency != null ? currency.getRates() : null;\n     }\n \n+    /**\n+     * Extracts usepbsrates flag from {@link ExtBidRequest}.\n+     */\n+    private static boolean usepbsrates(ExtBidRequest requestExt) {\n+        final ExtRequestPrebid prebid = requestExt != null ? requestExt.getPrebid() : null;\n+        final ExtRequestCurrency currency = prebid != null ? prebid.getCurrency() : null;\n+        return currency != null ? currency.getUsepbsrates() : false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzEwODAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo0NjozM1rOGW36Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo0NjozM1rOGW36Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNzg5MQ==", "bodyText": "boolean -> Boolean\nAnd a bit lower you can use BooleanUtils.isTrue to use appropriate logic. And it be good approach if you add comments, that false is by default\nisTrue = true only of true. So else case will be for null and false.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426637891", "createdAt": "2020-05-18T13:46:33Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -124,11 +124,12 @@ public ZonedDateTime getLastUpdated() {\n     }\n \n     /**\n-     * Converts price from bidCurrency to adServerCurrency using rates defined in request or if absent, from\n-     * latest currency rates. Throws {@link PreBidException} in case conversion is not possible.\n+     * Converts price from bidCurrency to adServerCurrency using rates and usepbsrates flag defined in request.\n+     * If usepbsrates is true it takes rates from prebid server, if false from request.\n+     * or if absent, from latest currency rates. Throws {@link PreBidException} in case conversion is not possible.\n      */\n     public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n-                                      String adServerCurrency, String bidCurrency) {\n+                                      String adServerCurrency, String bidCurrency, boolean usepbsrates) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194ef111fddb759f2689a19f9b3503a742165d1c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzExMjU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxMDo0NFrOGZU4mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxMDo0NFrOGZU4mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIwOTc1NA==", "bodyText": "you need to return usepbsrates. bc this method (according to documentation above) shoud only extract", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429209754", "createdAt": "2020-05-22T12:10:44Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "diffHunk": "@@ -218,10 +218,11 @@ private static ExtRequestTargeting targeting(ExtBidRequest requestExt) {\n     /**\n      * Extracts usepbsrates flag from {@link ExtBidRequest}.\n      */\n-    private static boolean usepbsrates(ExtBidRequest requestExt) {\n+    private static Boolean usepbsrates(ExtBidRequest requestExt) {\n         final ExtRequestPrebid prebid = requestExt != null ? requestExt.getPrebid() : null;\n         final ExtRequestCurrency currency = prebid != null ? prebid.getCurrency() : null;\n-        return currency != null ? currency.getUsepbsrates() : false;\n+        final Boolean usepbsrates = currency != null ? currency.getUsepbsrates() : null;\n+        return usepbsrates != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzExNTM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/proto/openrtb/ext/request/ExtRequestCurrency.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxMTo1MlrOGZU6PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxMTo1MlrOGZU6PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMDE3Mg==", "bodyText": "we don't add specs in here. Pls specify it near usage", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429210172", "createdAt": "2020-05-22T12:11:52Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/proto/openrtb/ext/request/ExtRequestCurrency.java", "diffHunk": "@@ -18,6 +18,7 @@\n     Map<String, Map<String, BigDecimal>> rates;\n     /**\n      * Defines the contract for bidrequest.ext.prebid.currency.usepbsrates\n+     * default value is false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzExODY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxMzoxNFrOGZU8Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxMzoxNFrOGZU8Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMDY5OQ==", "bodyText": "why it is not final ?", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429210699", "createdAt": "2020-05-22T12:13:14Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -139,21 +139,11 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n         }\n \n         BigDecimal conversionRate = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzExOTk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxMzo0NFrOGZU9FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxMzo0NFrOGZU9FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMDkwMQ==", "bodyText": "You do not need to pass returning value", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429210901", "createdAt": "2020-05-22T12:13:44Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -165,23 +155,33 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     /**\n      *  Get conversion rate from request currency rates if it is present\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n                                                            String adServerCurrency, String effectiveBidCurrency,\n                                                            BigDecimal conversionRate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzEyMDg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxNDowOFrOGZU9ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxNDowOFrOGZU9ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMTA0Mw==", "bodyText": "You do not need to pass returning value", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429211043", "createdAt": "2020-05-22T12:14:08Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -165,23 +155,33 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     /**\n      *  Get conversion rate from request currency rates if it is present\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n                                                            String adServerCurrency, String effectiveBidCurrency,\n                                                            BigDecimal conversionRate) {\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n+\n+        if (conversionRate == null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency, conversionRate);\n+        }\n         return conversionRate;\n     }\n \n     /**\n      * Get conversion rate from server\n      */\n-    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                          Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n                                                           String adServerCurrency, String effectiveBidCurrency,\n                                                           BigDecimal conversionRate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzA5NjgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODozNzo0M1rOGZ5ZKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODozNzo0M1rOGZ5ZKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNzkxMg==", "bodyText": "NPE", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429807912", "createdAt": "2020-05-25T08:37:43Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -138,12 +139,11 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        BigDecimal conversionRate = null;\n-        conversionRate = usepbsrates\n+        final BigDecimal conversionRate = usepbsrates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzExOTExOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo0NTowNVrOGZ5nmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo0NTowNVrOGZ5nmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxMTYxMQ==", "bodyText": "and then from server if it is not processed.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429811611", "createdAt": "2020-05-25T08:45:05Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzEyMDMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo0NTozMVrOGZ5oag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo0NTozMVrOGZ5oag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxMTgxOA==", "bodyText": "Probably better name is getConversionRateFromRequestFirst", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429811818", "createdAt": "2020-05-25T08:45:31Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzE0OTYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1NDoyNFrOGZ56Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1NDoyNFrOGZ56Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNjM5OQ==", "bodyText": "Probably better name is getConversionRateFromServerFirst", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429816399", "createdAt": "2020-05-25T08:54:24Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzE1MDgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1NDo0OFrOGZ57BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1NDo0OFrOGZ57BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNjU4MQ==", "bodyText": "and then using request currency if it is not processed.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429816581", "createdAt": "2020-05-25T08:54:48Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzE1NDUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1NTo1MlrOGZ59Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1NTo1MlrOGZ59Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNzE1MQ==", "bodyText": "You don't need to pass this parameter. Remove static and use variable", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429817151", "createdAt": "2020-05-25T08:55:52Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzE1OTY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1NzoyMlrOGZ6Aag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1NzoyMlrOGZ6Aag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNzk2Mg==", "bodyText": "Endless recursive call if conversion rate = null.\nJust use getConversionRate with expected parameters", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429817962", "createdAt": "2020-05-25T08:57:22Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                          Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                          String adServerCurrency, String effectiveBidCurrency) {\n+        BigDecimal conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n \n-        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+        if (conversionRate == null && requestCurrencyRates != null) {\n+            conversionRate = getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates, adServerCurrency,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzE1OTk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1NzoyNVrOGZ6Aiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1NzoyNVrOGZ6Aiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNzk5NQ==", "bodyText": "Endless recursive call if conversion rate = null.\nJust use getConversionRate with expected parameters", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429817995", "createdAt": "2020-05-25T08:57:25Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzE2MTk4OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1ODowMFrOGZ6ByA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1ODowMFrOGZ6ByA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxODMxMg==", "bodyText": "/n", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429818312", "createdAt": "2020-05-25T08:58:00Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "diffHunk": "@@ -161,20 +165,47 @@ public void convertCurrencyShouldReturnConvertedBySingleDigitMultiplierPrice() {\n     @Test\n     public void convertCurrencyShouldUseLatestRatesIfRequestRatesIsNull() {\n         // when\n-        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP);\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP, false);\n \n         // then\n         assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n     }\n \n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromServerIfusepbsratesIsTrue() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzE2MjIxOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1ODowNVrOGZ6B7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1ODowNVrOGZ6B7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxODM1MQ==", "bodyText": "/n", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429818351", "createdAt": "2020-05-25T08:58:05Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "diffHunk": "@@ -161,20 +165,47 @@ public void convertCurrencyShouldReturnConvertedBySingleDigitMultiplierPrice() {\n     @Test\n     public void convertCurrencyShouldUseLatestRatesIfRequestRatesIsNull() {\n         // when\n-        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP);\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP, false);\n \n         // then\n         assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n     }\n \n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromServerIfusepbsratesIsTrue() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, requestConversionRates, EUR, GBP,\n+                true);\n+\n+        // then\n+        assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n+    }\n+\n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromRequestIfusepbsratesIsFalse() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzE2MzU0OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1ODozMFrOGZ6CxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODo1ODozMFrOGZ6CxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxODU2NA==", "bodyText": "can you use singletonMap in singletonMap", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429818564", "createdAt": "2020-05-25T08:58:30Z", "author": {"login": "DGarbar"}, "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "diffHunk": "@@ -161,20 +165,47 @@ public void convertCurrencyShouldReturnConvertedBySingleDigitMultiplierPrice() {\n     @Test\n     public void convertCurrencyShouldUseLatestRatesIfRequestRatesIsNull() {\n         // when\n-        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP);\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP, false);\n \n         // then\n         assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n     }\n \n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromServerIfusepbsratesIsTrue() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, requestConversionRates, EUR, GBP,\n+                true);\n+\n+        // then\n+        assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n+    }\n+\n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromRequestIfusepbsratesIsFalse() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDc0OTY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo0NDowOFrOGacfAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo0NDowOFrOGacfAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4Mjg1MQ==", "bodyText": "\"usepbsrates\": false // defaults to true   -> null + true\nBooleanUtils.isTrue // only true\nYou need to use isFalse and reverse if statement or isNotFalse.", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r430382851", "createdAt": "2020-05-26T12:44:08Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -139,11 +140,9 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        final BigDecimal conversionRate = usepbsrates\n-                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n-                    effectiveBidCurrency)\n-                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n-                    adServerCurrency, effectiveBidCurrency);\n+        final BigDecimal conversionRate = BooleanUtils.isTrue(usepbsrates)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDc1NjcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo0NTo1OFrOGacjcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo0NTo1OFrOGacjcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4Mzk4NQ==", "bodyText": "you can omit this check (or add similar one in getConversionRateFromServer, be consistent)", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r430383985", "createdAt": "2020-05-26T12:45:58Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -153,34 +152,30 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     }\n \n     /**\n-     *  Get conversion rate from request currency rates if it is present\n+     *  Get conversion rate from request currency rates if it is present and then from server if it is not processed.\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n-                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n-                                                           String adServerCurrency, String effectiveBidCurrency) {\n+    private BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                         String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDc2MzU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo0Nzo0OFrOGacnrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo0Nzo0OFrOGacnrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4NTA3MQ==", "bodyText": "Did you remove 'First' in the end of the method intentionally?", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r430385071", "createdAt": "2020-05-26T12:47:48Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -153,34 +152,30 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     }\n \n     /**\n-     *  Get conversion rate from request currency rates if it is present\n+     *  Get conversion rate from request currency rates if it is present and then from server if it is not processed.\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n-                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n-                                                           String adServerCurrency, String effectiveBidCurrency) {\n+    private BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4059, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}