{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2Nzg5Nzgx", "number": 966, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDo0NzozMVrOEzPdTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDo1OTo0M1rOEzPuOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTY2MDkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDo0NzozMVrOHqWKDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDo0NzozMVrOHqWKDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE2NTI2Mw==", "bodyText": "This argument should be called bidderRequests, now its name is deceiving. Later lambda parameter needs to be renamed too.", "url": "https://github.com/prebid/prebid-server-java/pull/966#discussion_r514165263", "createdAt": "2020-10-29T10:47:31Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "diffHunk": "@@ -929,6 +934,13 @@ private Timeout auctionTimeout(Timeout timeout, boolean shouldCacheBids) {\n         return shouldCacheBids ? timeout.minus(expectedCacheTime) : timeout;\n     }\n \n+    private CompositeFuture maybeLogBidderInteraction(AuctionContext context,\n+                                                      List<BidderRequest> bidderResponses,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a2fda5ffb1d1e3acc0d418a2341a8f751fe5b2"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTY4ODQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/log/HttpInteractionLogger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDo1NToyNlrOHqWbEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMToyMTowMlrOHqXSXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE2OTYxOA==", "bodyText": "impExt.set(bidder, impExtBidder) looks like a simpler way to achieve the same.", "url": "https://github.com/prebid/prebid-server-java/pull/966#discussion_r514169618", "createdAt": "2020-10-29T10:55:26Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/log/HttpInteractionLogger.java", "diffHunk": "@@ -85,6 +147,38 @@ private void incLoggedInteractions() {\n         }\n     }\n \n+    private BidRequest bidRequestWithBidderName(String bidder, BidRequest bidRequest) {\n+        final List<Imp> imps = bidRequest.getImp();\n+        if (CollectionUtils.isEmpty(imps)) {\n+            return bidRequest;\n+        }\n+\n+        final List<Imp> updatedImps = imps.stream()\n+                .map(imp -> makeImpExtBidderName(bidder, imp))\n+                .collect(Collectors.toList());\n+\n+        return bidRequest.toBuilder().imp(updatedImps).build();\n+    }\n+\n+    private Imp makeImpExtBidderName(String bidder, Imp imp) {\n+        final ObjectNode originalImpExt = imp.getExt();\n+        if (originalImpExt == null) {\n+            return imp;\n+        }\n+\n+        final ObjectNode impExt = originalImpExt.deepCopy();\n+        final Imp updatedImp = imp.toBuilder().ext(impExt).build();\n+\n+        final JsonNode impExtBidder = impExt.remove(\"bidder\");\n+        if (impExtBidder != null) {\n+            final Iterator<Map.Entry<String, JsonNode>> bidderParams = impExtBidder.fields();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a2fda5ffb1d1e3acc0d418a2341a8f751fe5b2"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4Mzc3Mw==", "bodyText": "nice", "url": "https://github.com/prebid/prebid-server-java/pull/966#discussion_r514183773", "createdAt": "2020-10-29T11:21:02Z", "author": {"login": "DGarbar"}, "path": "src/main/java/org/prebid/server/log/HttpInteractionLogger.java", "diffHunk": "@@ -85,6 +147,38 @@ private void incLoggedInteractions() {\n         }\n     }\n \n+    private BidRequest bidRequestWithBidderName(String bidder, BidRequest bidRequest) {\n+        final List<Imp> imps = bidRequest.getImp();\n+        if (CollectionUtils.isEmpty(imps)) {\n+            return bidRequest;\n+        }\n+\n+        final List<Imp> updatedImps = imps.stream()\n+                .map(imp -> makeImpExtBidderName(bidder, imp))\n+                .collect(Collectors.toList());\n+\n+        return bidRequest.toBuilder().imp(updatedImps).build();\n+    }\n+\n+    private Imp makeImpExtBidderName(String bidder, Imp imp) {\n+        final ObjectNode originalImpExt = imp.getExt();\n+        if (originalImpExt == null) {\n+            return imp;\n+        }\n+\n+        final ObjectNode impExt = originalImpExt.deepCopy();\n+        final Imp updatedImp = imp.toBuilder().ext(impExt).build();\n+\n+        final JsonNode impExtBidder = impExt.remove(\"bidder\");\n+        if (impExtBidder != null) {\n+            final Iterator<Map.Entry<String, JsonNode>> bidderParams = impExtBidder.fields();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE2OTYxOA=="}, "originalCommit": {"oid": "02a2fda5ffb1d1e3acc0d418a2341a8f751fe5b2"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTcwNDI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDo1OTo0M1rOHqWktA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDo1OTo0M1rOHqWktA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE3MjA4NA==", "bodyText": "I suggest that we move this step to be right after\n.map(bidderRequests -> updateRequestMetric(\n                        bidderRequests, uidsCookie, aliases, publisherId, context.getRequestTypeMetric()))\n\nbecause it will be clear there that this activity is outstanding and not related to making actual requests to bidders.", "url": "https://github.com/prebid/prebid-server-java/pull/966#discussion_r514172084", "createdAt": "2020-10-29T10:59:43Z", "author": {"login": "schernysh"}, "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "diffHunk": "@@ -160,7 +164,8 @@ public ExchangeService(long expectedCacheTime,\n                                 auctionTimeout(timeout, cacheInfo.isDoCaching()),\n                                 debugEnabled,\n                                 aliases))\n-                        .collect(Collectors.toList())))\n+                        .collect(Collectors.toList()))\n+                        .map(compositeFuture -> maybeLogBidderInteraction(context, bidderRequests, compositeFuture)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a2fda5ffb1d1e3acc0d418a2341a8f751fe5b2"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3941, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}