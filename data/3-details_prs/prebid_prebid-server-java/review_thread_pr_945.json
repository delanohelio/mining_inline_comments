{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTQzNzIy", "number": 945, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0Mzo0OFrOEqvNLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0Mzo0OFrOEqvNLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjQ5MDY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/prebid/server/bidder/aja/AjaBidder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0Mzo0OFrOHdHQlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNToyNzoyOVrOHdNWWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4OTY4NA==", "bodyText": "Have an idea here to create separate method like Result.empty(). This makes code  a little bit cleaner.", "url": "https://github.com/prebid/prebid-server-java/pull/945#discussion_r500289684", "createdAt": "2020-10-06T13:43:48Z", "author": {"login": "rpanchyk"}, "path": "src/main/java/org/prebid/server/bidder/aja/AjaBidder.java", "diffHunk": "@@ -122,16 +122,9 @@ private ExtImpAja parseExtAJA(Imp imp, List<BidderError> errors) {\n     @Override\n     public Result<List<BidderBid>> makeBids(HttpCall<BidRequest> httpCall, BidRequest bidRequest) {\n         final int statusCode = httpCall.getResponse().getStatusCode();\n-        if (statusCode != HttpResponseStatus.OK.code()) {\n-            if (statusCode == HttpResponseStatus.NO_CONTENT.code()) {\n-                return Result.of(Collections.emptyList(), Collections.emptyList());\n-            } else if (statusCode == HttpResponseStatus.BAD_REQUEST.code()) {\n-                return Result.emptyWithError(BidderError.badInput(\n-                        String.format(\"Unexpected status code: %d\", statusCode)));\n-            } else {\n-                return Result.emptyWithError(BidderError.badServerResponse(\n-                        String.format(\"Unexpected status code: %d\", statusCode)));\n-            }\n+\n+        if (statusCode == HttpResponseStatus.NO_CONTENT.code()) {\n+            return Result.of(Collections.emptyList(), Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2645562aa2feed58c3184b0113a2ae603126734"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM4OTQ2Nw==", "bodyText": "done", "url": "https://github.com/prebid/prebid-server-java/pull/945#discussion_r500389467", "createdAt": "2020-10-06T15:27:29Z", "author": {"login": "snahornyi"}, "path": "src/main/java/org/prebid/server/bidder/aja/AjaBidder.java", "diffHunk": "@@ -122,16 +122,9 @@ private ExtImpAja parseExtAJA(Imp imp, List<BidderError> errors) {\n     @Override\n     public Result<List<BidderBid>> makeBids(HttpCall<BidRequest> httpCall, BidRequest bidRequest) {\n         final int statusCode = httpCall.getResponse().getStatusCode();\n-        if (statusCode != HttpResponseStatus.OK.code()) {\n-            if (statusCode == HttpResponseStatus.NO_CONTENT.code()) {\n-                return Result.of(Collections.emptyList(), Collections.emptyList());\n-            } else if (statusCode == HttpResponseStatus.BAD_REQUEST.code()) {\n-                return Result.emptyWithError(BidderError.badInput(\n-                        String.format(\"Unexpected status code: %d\", statusCode)));\n-            } else {\n-                return Result.emptyWithError(BidderError.badServerResponse(\n-                        String.format(\"Unexpected status code: %d\", statusCode)));\n-            }\n+\n+        if (statusCode == HttpResponseStatus.NO_CONTENT.code()) {\n+            return Result.of(Collections.emptyList(), Collections.emptyList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4OTY4NA=="}, "originalCommit": {"oid": "a2645562aa2feed58c3184b0113a2ae603126734"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3915, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}