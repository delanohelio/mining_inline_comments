{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwODM4NzE1", "number": 62754, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDoyNTowOVrOEmBPaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTozNDozMFrOEmCn1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzAxNjczOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/lucene/search/AutomatonQueries.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDoyNToxMFrOHVzowA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMToxODoyOFrOHV1Rtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYyODE2MA==", "bodyText": "Wanted to use this, let me know if this shouldn't be that open. Another option is simpyl copying the logic over I think.", "url": "https://github.com/elastic/elasticsearch/pull/62754#discussion_r492628160", "createdAt": "2020-09-22T10:25:10Z", "author": {"login": "cbuescher"}, "path": "server/src/main/java/org/elasticsearch/common/lucene/search/AutomatonQueries.java", "diffHunk": "@@ -129,11 +129,11 @@ public static Automaton toCaseInsensitiveString(String s, int maxDeterminizedSta\n         Automaton a = Operations.concatenate(list);\n         a = MinimizationOperations.minimize(a, maxDeterminizedStates);\n         return a;\n- \n-    \n+\n+\n     }\n \n-    protected static Automaton toCaseInsensitiveChar(int codepoint, int maxDeterminizedStates) {\n+    public static Automaton toCaseInsensitiveChar(int codepoint, int maxDeterminizedStates) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2d6c88d20a7a94f494ff5dd96efc09cbfe20d25"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1NTAzMQ==", "bodyText": "LGTM", "url": "https://github.com/elastic/elasticsearch/pull/62754#discussion_r492655031", "createdAt": "2020-09-22T11:18:28Z", "author": {"login": "markharwood"}, "path": "server/src/main/java/org/elasticsearch/common/lucene/search/AutomatonQueries.java", "diffHunk": "@@ -129,11 +129,11 @@ public static Automaton toCaseInsensitiveString(String s, int maxDeterminizedSta\n         Automaton a = Operations.concatenate(list);\n         a = MinimizationOperations.minimize(a, maxDeterminizedStates);\n         return a;\n- \n-    \n+\n+\n     }\n \n-    protected static Automaton toCaseInsensitiveChar(int codepoint, int maxDeterminizedStates) {\n+    public static Automaton toCaseInsensitiveChar(int codepoint, int maxDeterminizedStates) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYyODE2MA=="}, "originalCommit": {"oid": "d2d6c88d20a7a94f494ff5dd96efc09cbfe20d25"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzI0MjAyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/versionfield/src/main/java/org/elasticsearch/xpack/versionfield/VersionStringFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTozNDowM1rOHV1wLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTozNDowM1rOHV1wLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY2MjgyOQ==", "bodyText": "Typo - missing i in Insensitive.", "url": "https://github.com/elastic/elasticsearch/pull/62754#discussion_r492662829", "createdAt": "2020-09-22T11:34:03Z", "author": {"login": "markharwood"}, "path": "x-pack/plugin/versionfield/src/main/java/org/elasticsearch/xpack/versionfield/VersionStringFieldMapper.java", "diffHunk": "@@ -139,7 +139,7 @@ public Query existsQuery(QueryShardContext context) {\n \n         @Override\n         public Query prefixQuery(String value, MultiTermQuery.RewriteMethod method, boolean caseInsensitve, QueryShardContext context) {\n-            return wildcardQuery(value + \"*\", method, context);\n+            return wildcardQuery(value + \"*\", method, caseInsensitve, context);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2d6c88d20a7a94f494ff5dd96efc09cbfe20d25"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzI0MzEwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/versionfield/src/main/java/org/elasticsearch/xpack/versionfield/VersionStringFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTozNDozMFrOHV1w6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTozNDozMFrOHV1w6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY2MzAxOQ==", "bodyText": "Typo", "url": "https://github.com/elastic/elasticsearch/pull/62754#discussion_r492663019", "createdAt": "2020-09-22T11:34:30Z", "author": {"login": "markharwood"}, "path": "x-pack/plugin/versionfield/src/main/java/org/elasticsearch/xpack/versionfield/VersionStringFieldMapper.java", "diffHunk": "@@ -244,7 +244,7 @@ public Query wildcardQuery(String value, MultiTermQuery.RewriteMethod method, bo\n                 );\n             }\n \n-            VersionFieldWildcardQuery query = new VersionFieldWildcardQuery(new Term(name(), value));\n+            VersionFieldWildcardQuery query = new VersionFieldWildcardQuery(new Term(name(), value), caseInsensitve);\n             QueryParsers.setRewriteMethod(query, method);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2d6c88d20a7a94f494ff5dd96efc09cbfe20d25"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3412, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}