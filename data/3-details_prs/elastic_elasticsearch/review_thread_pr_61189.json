{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NzAwNTA5", "number": 61189, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMjoxMDoyOFrOEZBPFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMTozNTowNFrOEZbsfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NjcwMTAyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/planner/QueryTranslator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMjoxMDoyOVrOHBmIdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTo0NDoxMFrOHCL1Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzNTM4Mg==", "bodyText": "Wouldn't this work better in ExpressionTranslators#Scalars where StartsWith is handled?", "url": "https://github.com/elastic/elasticsearch/pull/61189#discussion_r471435382", "createdAt": "2020-08-17T12:10:29Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/planner/QueryTranslator.java", "diffHunk": "@@ -108,6 +110,15 @@ public static Query doTranslate(ScalarFunction f, TranslatorHandler handler) {\n                     return new TermsQuery(f.source(), targetFieldName, set);\n                 }\n             }\n+            if (f instanceof StringContains) {\n+                StringContains sc = (StringContains) f;\n+                if (sc.isCaseSensitive() && sc.string() instanceof FieldAttribute && sc.substring().foldable()) {\n+                    String targetFieldName = handler.nameOf(((FieldAttribute) sc.string()).exactAttribute());\n+                    String substring = (String) sc.substring().fold();\n+\n+                    return new WildcardQuery(f.source(), targetFieldName, \"*\" + substring + \"*\");\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d48d589e04de1114bc394818a0d754ff364b595c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzNTk0NQ==", "bodyText": "Speaking of, having a rule for CaseSensitiveScalarFunction might work better since it handle the `if (isCaseSensitive && FieldAttribute && foldable) so subclasses would only look at the name and the query while reusing the infrastructure.", "url": "https://github.com/elastic/elasticsearch/pull/61189#discussion_r471435945", "createdAt": "2020-08-17T12:11:35Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/planner/QueryTranslator.java", "diffHunk": "@@ -108,6 +110,15 @@ public static Query doTranslate(ScalarFunction f, TranslatorHandler handler) {\n                     return new TermsQuery(f.source(), targetFieldName, set);\n                 }\n             }\n+            if (f instanceof StringContains) {\n+                StringContains sc = (StringContains) f;\n+                if (sc.isCaseSensitive() && sc.string() instanceof FieldAttribute && sc.substring().foldable()) {\n+                    String targetFieldName = handler.nameOf(((FieldAttribute) sc.string()).exactAttribute());\n+                    String substring = (String) sc.substring().fold();\n+\n+                    return new WildcardQuery(f.source(), targetFieldName, \"*\" + substring + \"*\");\n+                }\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzNTM4Mg=="}, "originalCommit": {"oid": "d48d589e04de1114bc394818a0d754ff364b595c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1MzA4Mg==", "bodyText": "StartsWith is special because is common to SQL and EQL while stringContains, endsWith belong only to EQL. Agree with a separate rule, though.", "url": "https://github.com/elastic/elasticsearch/pull/61189#discussion_r472053082", "createdAt": "2020-08-18T09:44:10Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/planner/QueryTranslator.java", "diffHunk": "@@ -108,6 +110,15 @@ public static Query doTranslate(ScalarFunction f, TranslatorHandler handler) {\n                     return new TermsQuery(f.source(), targetFieldName, set);\n                 }\n             }\n+            if (f instanceof StringContains) {\n+                StringContains sc = (StringContains) f;\n+                if (sc.isCaseSensitive() && sc.string() instanceof FieldAttribute && sc.substring().foldable()) {\n+                    String targetFieldName = handler.nameOf(((FieldAttribute) sc.string()).exactAttribute());\n+                    String substring = (String) sc.substring().fold();\n+\n+                    return new WildcardQuery(f.source(), targetFieldName, \"*\" + substring + \"*\");\n+                }\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzNTM4Mg=="}, "originalCommit": {"oid": "d48d589e04de1114bc394818a0d754ff364b595c"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NjcwNTUzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/test/resources/mapping-default.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMjoxMTo1NFrOHBmLOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMDowMjoxMlrOHCMd1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzNjA4OQ==", "bodyText": "I thought we can't tell whether something is a wildcard or keyword.", "url": "https://github.com/elastic/elasticsearch/pull/61189#discussion_r471436089", "createdAt": "2020-08-17T12:11:54Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/test/resources/mapping-default.json", "diffHunk": "@@ -56,7 +56,7 @@\n             \"type\" : \"text\",\n             \"fields\" : {\n                 \"keyword\" : {\n-                    \"type\" : \"keyword\",\n+                    \"type\" : \"wildcard\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d48d589e04de1114bc394818a0d754ff364b595c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA2MzQ0Nw==", "bodyText": "We cannot, but this doesn't mean we shouldn't test different field types.", "url": "https://github.com/elastic/elasticsearch/pull/61189#discussion_r472063447", "createdAt": "2020-08-18T10:02:12Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/test/resources/mapping-default.json", "diffHunk": "@@ -56,7 +56,7 @@\n             \"type\" : \"text\",\n             \"fields\" : {\n                 \"keyword\" : {\n-                    \"type\" : \"keyword\",\n+                    \"type\" : \"wildcard\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzNjA4OQ=="}, "originalCommit": {"oid": "d48d589e04de1114bc394818a0d754ff364b595c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTAzNjEyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/planner/QueryTranslator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMTozNTowNFrOHCPVnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNDozNDozNFrOHCXhnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjExMDQ5Mg==", "bodyText": "This looks wrong - in the case in particular - if the function is StringContains do something, otherwise return null?\nWhy not make the ExpressionTranslator for StringContains only instead of CaseSensitiveScalarFunction?", "url": "https://github.com/elastic/elasticsearch/pull/61189#discussion_r472110492", "createdAt": "2020-08-18T11:35:04Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/planner/QueryTranslator.java", "diffHunk": "@@ -112,4 +116,34 @@ public static Query doTranslate(ScalarFunction f, TranslatorHandler handler) {\n             return handler.wrapFunctionQuery(f, f, new ScriptQuery(f.source(), f.asScript()));\n         }\n     }\n+\n+    public static class CaseSensitiveScalarFunctions extends ExpressionTranslator<CaseSensitiveScalarFunction> {\n+\n+        @Override\n+        protected Query asQuery(CaseSensitiveScalarFunction f, TranslatorHandler handler) {\n+            return f.isCaseSensitive() ? doTranslate(f, handler) : null;\n+        }\n+\n+        public static Query doTranslate(CaseSensitiveScalarFunction f, TranslatorHandler handler) {\n+            Expression field = null;\n+            Expression constant = null;\n+\n+            if (f instanceof StringContains) {\n+                StringContains sc = (StringContains) f;\n+                field = sc.string();\n+                constant = sc.substring();\n+            } else {\n+                return null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9306ba0bce5fe304bf9b8bfcc57e28fc48a8d13"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI0NDYzNw==", "bodyText": "After this PR is merged, the follow up one (#61160 endsWith) will make this condition look like:\nif (f instanceof StringContains) {\n} else if (f instanceof EndsWith) {\n} else {\nreturn null;\n}", "url": "https://github.com/elastic/elasticsearch/pull/61189#discussion_r472244637", "createdAt": "2020-08-18T14:34:34Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/planner/QueryTranslator.java", "diffHunk": "@@ -112,4 +116,34 @@ public static Query doTranslate(ScalarFunction f, TranslatorHandler handler) {\n             return handler.wrapFunctionQuery(f, f, new ScriptQuery(f.source(), f.asScript()));\n         }\n     }\n+\n+    public static class CaseSensitiveScalarFunctions extends ExpressionTranslator<CaseSensitiveScalarFunction> {\n+\n+        @Override\n+        protected Query asQuery(CaseSensitiveScalarFunction f, TranslatorHandler handler) {\n+            return f.isCaseSensitive() ? doTranslate(f, handler) : null;\n+        }\n+\n+        public static Query doTranslate(CaseSensitiveScalarFunction f, TranslatorHandler handler) {\n+            Expression field = null;\n+            Expression constant = null;\n+\n+            if (f instanceof StringContains) {\n+                StringContains sc = (StringContains) f;\n+                field = sc.string();\n+                constant = sc.substring();\n+            } else {\n+                return null;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjExMDQ5Mg=="}, "originalCommit": {"oid": "d9306ba0bce5fe304bf9b8bfcc57e28fc48a8d13"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 913, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}