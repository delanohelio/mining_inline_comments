{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MDQxMjY1", "number": 57241, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoyMzowOVrOEAh8Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTowNDowNVrOEAjP5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTkxNTE1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoyMzowOVrOGb3fqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzo1ODoyMFrOGcAc3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg3Mzk2Mw==", "bodyText": "I presume this is what gets called by the collector, but I think it'd help to make this javadoc a little more explicit.", "url": "https://github.com/elastic/elasticsearch/pull/57241#discussion_r431873963", "createdAt": "2020-05-28T14:23:09Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -420,4 +392,141 @@ public boolean advanceExact(int target) throws IOException {\n             return false;\n         }\n     }\n+\n+    /**\n+     * Strategy for collecting global ordinals.\n+     */\n+    abstract class CollectionStrategy implements Releasable {\n+        /**\n+         * Short description of the collection mechanism added to the profile\n+         * output to help with debugging.\n+         */\n+        abstract String describe();\n+        /**\n+         * Called when the global ordinals are ready.\n+         */\n+        abstract void globalOrdsReady(SortedSetDocValues globalOrds);\n+        /**\n+         * Collect a global ordinal.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11f0beaa2faf77a8fadc3d22c84c744f8317d829"}, "originalPosition": 313}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyMDcwMQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/57241#discussion_r432020701", "createdAt": "2020-05-28T17:58:20Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -420,4 +392,141 @@ public boolean advanceExact(int target) throws IOException {\n             return false;\n         }\n     }\n+\n+    /**\n+     * Strategy for collecting global ordinals.\n+     */\n+    abstract class CollectionStrategy implements Releasable {\n+        /**\n+         * Short description of the collection mechanism added to the profile\n+         * output to help with debugging.\n+         */\n+        abstract String describe();\n+        /**\n+         * Called when the global ordinals are ready.\n+         */\n+        abstract void globalOrdsReady(SortedSetDocValues globalOrds);\n+        /**\n+         * Collect a global ordinal.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg3Mzk2Mw=="}, "originalCommit": {"oid": "11f0beaa2faf77a8fadc3d22c84c744f8317d829"}, "originalPosition": 313}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDA4OTM5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDo1NTowMVrOGb5MbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzo1MzoxNVrOGcAR3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwMTgwNA==", "bodyText": "Is there a reason not to just pass the collection strategy in directly?", "url": "https://github.com/elastic/elasticsearch/pull/57241#discussion_r431901804", "createdAt": "2020-05-28T14:55:01Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -89,32 +88,17 @@ public GlobalOrdinalsStringTermsAggregator(String name, AggregatorFactories fact\n                                                Map<String, Object> metadata) throws IOException {\n         super(name, factories, context, parent, order, format, bucketCountThresholds, collectionMode, showTermDocCountError, metadata);\n         this.valuesSource = valuesSource;\n-        this.includeExclude = includeExclude;\n         final IndexReader reader = context.searcher().getIndexReader();\n         final SortedSetDocValues values = reader.leaves().size() > 0 ?\n             valuesSource.globalOrdinalsValues(context.searcher().getIndexReader().leaves().get(0)) : DocValues.emptySortedSet();\n         this.valueCount = values.getValueCount();\n         this.lookupGlobalOrd = values::lookupOrd;\n-        this.acceptedGlobalOrdinals = includeExclude != null ? includeExclude.acceptedGlobalOrdinals(values) : null;\n-        this.bucketOrds = remapGlobalOrds ? new LongHash(1, context.bigArrays()) : null;\n-    }\n-\n-    boolean remapGlobalOrds() {\n-        return bucketOrds != null;\n+        this.acceptedGlobalOrdinals = includeExclude == null ? l -> true : includeExclude.acceptedGlobalOrdinals(values)::get;\n+        this.collectionStrategy = remapGlobalOrds ? new RemapGlobalOrds() : new DenseGlobalOrds();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11f0beaa2faf77a8fadc3d22c84c744f8317d829"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAxNzg4Ng==", "bodyText": "Hmmmm - I did think about it but we'd have to do that same \"pass a builder\" kind of thing because it is a non-static inner class.", "url": "https://github.com/elastic/elasticsearch/pull/57241#discussion_r432017886", "createdAt": "2020-05-28T17:53:15Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -89,32 +88,17 @@ public GlobalOrdinalsStringTermsAggregator(String name, AggregatorFactories fact\n                                                Map<String, Object> metadata) throws IOException {\n         super(name, factories, context, parent, order, format, bucketCountThresholds, collectionMode, showTermDocCountError, metadata);\n         this.valuesSource = valuesSource;\n-        this.includeExclude = includeExclude;\n         final IndexReader reader = context.searcher().getIndexReader();\n         final SortedSetDocValues values = reader.leaves().size() > 0 ?\n             valuesSource.globalOrdinalsValues(context.searcher().getIndexReader().leaves().get(0)) : DocValues.emptySortedSet();\n         this.valueCount = values.getValueCount();\n         this.lookupGlobalOrd = values::lookupOrd;\n-        this.acceptedGlobalOrdinals = includeExclude != null ? includeExclude.acceptedGlobalOrdinals(values) : null;\n-        this.bucketOrds = remapGlobalOrds ? new LongHash(1, context.bigArrays()) : null;\n-    }\n-\n-    boolean remapGlobalOrds() {\n-        return bucketOrds != null;\n+        this.acceptedGlobalOrdinals = includeExclude == null ? l -> true : includeExclude.acceptedGlobalOrdinals(values)::get;\n+        this.collectionStrategy = remapGlobalOrds ? new RemapGlobalOrds() : new DenseGlobalOrds();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwMTgwNA=="}, "originalCommit": {"oid": "11f0beaa2faf77a8fadc3d22c84c744f8317d829"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDEyOTY1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTowNDowNVrOGb5m4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzo1MzozMVrOGcASXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODU3Ng==", "bodyText": "I think your comment from the PR description that we have two collection strategies and each has two iteration strategies would fit well in the javadoc for this class.  Or at the very least, a note on forEach that it should account for both iteration cases.", "url": "https://github.com/elastic/elasticsearch/pull/57241#discussion_r431908576", "createdAt": "2020-05-28T15:04:05Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -420,4 +392,141 @@ public boolean advanceExact(int target) throws IOException {\n             return false;\n         }\n     }\n+\n+    /**\n+     * Strategy for collecting global ordinals.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11f0beaa2faf77a8fadc3d22c84c744f8317d829"}, "originalPosition": 300}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAxODAxNQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/57241#discussion_r432018015", "createdAt": "2020-05-28T17:53:31Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -420,4 +392,141 @@ public boolean advanceExact(int target) throws IOException {\n             return false;\n         }\n     }\n+\n+    /**\n+     * Strategy for collecting global ordinals.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODU3Ng=="}, "originalCommit": {"oid": "11f0beaa2faf77a8fadc3d22c84c744f8317d829"}, "originalPosition": 300}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3818, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}