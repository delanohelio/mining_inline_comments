{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MzYyMTUy", "number": 58511, "title": "Fix Memory Leak From Master Failover During Snapshot", "bodyText": "If we failed over while the data nodes were doing their work we would never resolve the listener and leak it.\nThis change fails all pending listeners on the previous master on fail-over to prevent the leak and adds a reproducing test (as well as some test infrastructure taken from #56911 to enable these tests).", "createdAt": "2020-06-24T17:55:41Z", "url": "https://github.com/elastic/elasticsearch/pull/58511", "merged": true, "mergeCommit": {"oid": "256339056024d8994ab02cf21c4bf5fdf3650af4"}, "closed": true, "closedAt": "2020-06-25T16:10:05Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcud1zogH2gAyNDM5MzYyMTUyOjVhOTgxMzk0MWQzYWQwNzQ5OWY4MjVjOTYxMDM4ZTE1NTAxNDQyMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcutBUZAFqTQzNzQwNjM4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5a9813941d3ad07499f825c961038e1550144217", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/5a9813941d3ad07499f825c961038e1550144217", "committedDate": "2020-06-24T17:52:37Z", "message": "Fix Memory Leak From Master Failover During Snapshot\n\nIf we failed over while the data nodes were doing their work\nwe would never resolve the listener and leak it.\nThis change fails all listeners if master fails over."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODc5NjIx", "url": "https://github.com/elastic/elasticsearch/pull/58511#pullrequestreview-436879621", "createdAt": "2020-06-24T17:56:49Z", "commit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1Njo0OVrOGodClA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1Njo0OVrOGodClA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA3MjAyMA==", "bodyText": "These tests should have access to the utilities from abstract snapshot tests.", "url": "https://github.com/elastic/elasticsearch/pull/58511#discussion_r445072020", "createdAt": "2020-06-24T17:56:49Z", "author": {"login": "original-brownbear"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/discovery/SnapshotDisruptionIT.java", "diffHunk": "@@ -65,7 +66,7 @@\n  * Tests snapshot operations during disruptions.\n  */\n @ESIntegTestCase.ClusterScope(scope = ESIntegTestCase.Scope.TEST, numDataNodes = 0)\n-public class SnapshotDisruptionIT extends ESIntegTestCase {\n+public class SnapshotDisruptionIT extends AbstractSnapshotIntegTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODgwMDY0", "url": "https://github.com/elastic/elasticsearch/pull/58511#pullrequestreview-436880064", "createdAt": "2020-06-24T17:57:26Z", "commit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1NzoyNlrOGodD6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1NzoyNlrOGodD6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA3MjM2Mg==", "bodyText": "Had to add this to force a cleanup run so the repo consistency check doesn't start complaining about leaked files from the broken snapshot run in this test.", "url": "https://github.com/elastic/elasticsearch/pull/58511#discussion_r445072362", "createdAt": "2020-06-24T17:57:26Z", "author": {"login": "original-brownbear"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/discovery/SnapshotDisruptionIT.java", "diffHunk": "@@ -228,6 +229,48 @@ public void testDisruptionAfterShardFinalization() throws Exception {\n                 client(masterNode).admin().cluster().prepareCreateSnapshot(repoName, \"snapshot-2\").setWaitForCompletion(true).get();\n         final SnapshotInfo successfulSnapshotInfo = successfulSnapshot.getSnapshotInfo();\n         assertThat(successfulSnapshotInfo.state(), is(SnapshotState.SUCCESS));\n+\n+        logger.info(\"--> making sure snapshot delete works out cleanly\");\n+        assertAcked(client().admin().cluster().prepareDeleteSnapshot(repoName, \"snapshot-2\").get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODgwNTg4", "url": "https://github.com/elastic/elasticsearch/pull/58511#pullrequestreview-436880588", "createdAt": "2020-06-24T17:58:07Z", "commit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1ODowN1rOGodFhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1ODowN1rOGodFhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA3Mjc3Mg==", "bodyText": "Gotta copy the keyset because failSnapshotCompletionListeners modifies the map", "url": "https://github.com/elastic/elasticsearch/pull/58511#discussion_r445072772", "createdAt": "2020-06-24T17:58:07Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -453,6 +453,15 @@ public void applyClusterState(ClusterChangedEvent event) {\n                 if (newMaster) {\n                     finalizeSnapshotDeletionFromPreviousMaster(event.state());\n                 }\n+            } else if (snapshotCompletionListeners.isEmpty() == false) {\n+                // We have snapshot listeners but are not the master any more. Fail all waiting listeners except for those that already\n+                // have their snapshots finalizing (those that are already finalizing will fail on their own from to update the cluster\n+                // state).\n+                for (Snapshot snapshot : Set.copyOf(snapshotCompletionListeners.keySet())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3Mjk5NTQ0", "url": "https://github.com/elastic/elasticsearch/pull/58511#pullrequestreview-437299544", "createdAt": "2020-06-25T08:57:24Z", "commit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODo1NzoyNVrOGoxrVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODo1NzoyNVrOGoxrVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxMDEzMw==", "bodyText": "Just to be sure, do we already assert somewhere else that there are not listeners leaking after any cluster state update?", "url": "https://github.com/elastic/elasticsearch/pull/58511#discussion_r445410133", "createdAt": "2020-06-25T08:57:25Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1330,6 +1339,20 @@ protected void doClose() {\n         clusterService.removeApplier(this);\n     }\n \n+    /**\n+     * Assert that no in-memory state for any running snapshot operation exists in this instance.\n+     */\n+    public boolean assertAllListenersResolved() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NDA2Mzg0", "url": "https://github.com/elastic/elasticsearch/pull/58511#pullrequestreview-437406384", "createdAt": "2020-06-25T11:33:46Z", "commit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 408, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}