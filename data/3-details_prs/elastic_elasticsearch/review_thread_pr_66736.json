{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MDc3NTg4", "number": 66736, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNDo1MToyNlrOFIL14w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjozMToxN1rOFK4D2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MTI2OTQ3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/writer/ScheduledEventsWriter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNDo1MToyNlrOIJ9zFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNDo1MToyNlrOIJ9zFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMyMDU5Ng==", "bodyText": "It's very non-standard in Elasticsearch to have a JSON document whose outermost level is an array.  That's why you've had to hand-craft a writer instead of using standard mechanisms.  I think instead you should use a format similar to the get scheduled events API response, with the document being an object at its outermost level, and containing a field events that is the array of scheduled events.  If you can tolerate the superfluous count you could actually reuse GetCalendarEventsAction.Response to create and print this.  Or create a new very simple ToXContentObject that contains a List<ScheduledEvent> and uses builder.field(\"events\", scheduledEvents) in its toXContent method.\nThen you'll need to change the C++ parser to accept the extra object layer and events field, but there needs to be a second PR on the C++ side anyway and since the current C++ code is disabled this PR can still be merged before the second round of C++ updates.", "url": "https://github.com/elastic/elasticsearch/pull/66736#discussion_r547320596", "createdAt": "2020-12-22T14:51:26Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/writer/ScheduledEventsWriter.java", "diffHunk": "@@ -58,4 +58,21 @@ public void write() throws IOException {\n             ++eventIndex;\n         }\n     }\n+\n+    public void writeJson() throws IOException {\n+        buffer.append('[');\n+        boolean first = true;\n+        for (ScheduledEvent event : scheduledEvents) {\n+            if (first) {\n+                first = false;\n+            } else {\n+                buffer.append(',');\n+            }\n+\n+            try (XContentBuilder contentBuilder = XContentFactory.jsonBuilder()) {\n+                buffer.append(Strings.toString(event.writeJson(bucketSpan, contentBuilder)));\n+            }\n+        }\n+        buffer.append(']');\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b160c09f53f34bb9f78f47411d736dbd5ce638b9"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2OTQ4NTY5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/AutodetectBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjozMToxN1rOINwDIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjozMToxN1rOINwDIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI4OTYzMw==", "bodyText": "As we're streaming scheduled events, I think it would be clearer to map these to a ScheduledEventToRuleWriter. Then the RULES ParseField added in ScheduledEvent can move in that writer class.", "url": "https://github.com/elastic/elasticsearch/pull/66736#discussion_r551289633", "createdAt": "2021-01-04T12:31:17Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/AutodetectBuilder.java", "diffHunk": "@@ -365,6 +372,28 @@ private void buildFieldConfig(List<String> command) throws IOException {\n         }\n     }\n \n+    private void buildScheduledEventsConfig(List<String> command) throws IOException {\n+        if (scheduledEvents.isEmpty()) {\n+            return;\n+        }\n+        Path eventsConfigFile = Files.createTempFile(env.tmpFile(), \"eventsConfig\", JSON_EXTENSION);\n+        filesToDelete.add(eventsConfigFile);\n+\n+        List<DetectionRuleWriter> detectionRuleWriters = scheduledEvents.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e6aa174ddfbbe6c9fa641f3446a9736aced8f0"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4417, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}