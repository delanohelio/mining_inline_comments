{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMjIzOTk5", "number": 50930, "title": "Track Snapshot Version in RepositoryData", "bodyText": "Add tracking of snapshot versions to RepositoryData to make BwC logic more efficient.\nFollow up to #50853", "createdAt": "2020-01-13T17:02:00Z", "url": "https://github.com/elastic/elasticsearch/pull/50930", "merged": true, "mergeCommit": {"oid": "e349c5eec0975cf751bbe59ad533a9658c12692e"}, "closed": true, "closedAt": "2020-01-14T16:15:01Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5_ZSRgH2gAyMzYyMjIzOTk5OmU5OWVhZWFiZDIxNDliOWNjNWVhMjQ0MGZiMDdjNGViOWM1MjdmMzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6SnLKgH2gAyMzYyMjIzOTk5OjAyZThjNGVlM2YwZWYzOGEyZmMwNTlmNTU4M2MyOWU4ZjVhMTMzYTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e99eaeabd2149b9cc5ea2440fb07c4eb9c527f35", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/e99eaeabd2149b9cc5ea2440fb07c4eb9c527f35", "committedDate": "2020-01-13T17:00:15Z", "message": "Track Snapshot Version in RepositoryData\n\nAdd tracking of snapshot versions to `RepositoryData` to make BwC logic more efficient.\nFollow up to #50853"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f45d07347c4a64d3550adc30117b8e9b3d4a136", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/6f45d07347c4a64d3550adc30117b8e9b3d4a136", "committedDate": "2020-01-13T17:07:53Z", "message": "shorter diff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "386f0c3e40cf79f757b4a14a0807c6d29cecf502", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/386f0c3e40cf79f757b4a14a0807c6d29cecf502", "committedDate": "2020-01-13T19:22:04Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMTc4MTU5", "url": "https://github.com/elastic/elasticsearch/pull/50930#pullrequestreview-342178159", "createdAt": "2020-01-13T22:18:13Z", "commit": {"oid": "386f0c3e40cf79f757b4a14a0807c6d29cecf502"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjoxODoxM1rOFdGdww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjoxODoxM1rOFdGdww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA1ODk0Nw==", "bodyText": "It is somewhat annoying that we have to load all SnapshotInfo here one-off but I think it's still the best solution available.\nIdeally, I was hoping to be able to just work from the assumption that if no version is set for a snapshot then it must be from before 8.0/7.6. But I gave up on that idea since it breaks as soon as some older version cluster (for whatever reason), takes a snapshot and removes all the version fields when writing out a new index-N (maybe that's the wrong trade off though, glad to hear opinions on this :) ... obviously you could argue that loading all the SnapshotInfo is too high a price to pay just so the repo can move to the new metadata version earlier, but IMO even on S3 etc. loading 100 snapshots or so won't take all that long or cost any meaningful amount of $$$).", "url": "https://github.com/elastic/elasticsearch/pull/50930#discussion_r366058947", "createdAt": "2020-01-13T22:18:13Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1252,8 +1254,34 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n                 }\n             });\n \n+        final StepListener<RepositoryData> filterRepositoryDataStep = new StepListener<>();\n+\n         // Step 2: Write new index-N blob to repository and update index.latest\n         setPendingStep.whenComplete(newGen -> threadPool().executor(ThreadPool.Names.SNAPSHOT).execute(ActionRunnable.wrap(listener, l -> {\n+            // BwC logic: Load snapshot version information if any snapshot is missing a version in RepositoryData so that the new\n+            // RepositoryData contains a version for every snapshot\n+            final List<SnapshotId> snapshotIdsWithoutVersion = repositoryData.getSnapshotIds().stream().filter(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "386f0c3e40cf79f757b4a14a0807c6d29cecf502"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMTc5MTM1", "url": "https://github.com/elastic/elasticsearch/pull/50930#pullrequestreview-342179135", "createdAt": "2020-01-13T22:20:05Z", "commit": {"oid": "386f0c3e40cf79f757b4a14a0807c6d29cecf502"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjoyMDowNVrOFdGguQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjoyMDowNVrOFdGguQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA1OTcwNQ==", "bodyText": "Obviously now that we're writing the version field to RepositoryData using shard generations to identify having any pre-7.6 snapshots or not goes away and we have to fake an old-style snapshot by stripping out the version fields manually.", "url": "https://github.com/elastic/elasticsearch/pull/50930#discussion_r366059705", "createdAt": "2020-01-13T22:20:05Z", "author": {"login": "original-brownbear"}, "path": "server/src/test/java/org/elasticsearch/snapshots/CorruptedBlobStoreRepositoryIT.java", "diffHunk": "@@ -263,11 +271,24 @@ public void testHandlingMissingRootLevelSnapshotMetadata() throws Exception {\n         logger.info(\"--> delete root level snapshot metadata blob for snapshot [{}]\", snapshotToCorrupt);\n         Files.delete(repo.resolve(String.format(Locale.ROOT, BlobStoreRepository.SNAPSHOT_NAME_FORMAT, snapshotToCorrupt.getUUID())));\n \n+        logger.info(\"--> strip version information from index-N blob\");\n+        final RepositoryData withoutVersions = new RepositoryData(repositoryData.getGenId(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "386f0c3e40cf79f757b4a14a0807c6d29cecf502"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ca7e7cec710292970e370fbf41c459f9777e812", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/4ca7e7cec710292970e370fbf41c459f9777e812", "committedDate": "2020-01-13T22:29:24Z", "message": "nicer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86ef75f330de32dae4ffc61212b3e9de74fcfa66", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/86ef75f330de32dae4ffc61212b3e9de74fcfa66", "committedDate": "2020-01-13T22:30:39Z", "message": "nicer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMTg0ODIw", "url": "https://github.com/elastic/elasticsearch/pull/50930#pullrequestreview-342184820", "createdAt": "2020-01-13T22:31:37Z", "commit": {"oid": "86ef75f330de32dae4ffc61212b3e9de74fcfa66"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjozMTozOFrOFdGylQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjozMTozOFrOFdGylQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA2NDI3Nw==", "bodyText": "info IMO since it's a one time thing and it would be nice to have some marker of the \"upgrade\" in the logs.", "url": "https://github.com/elastic/elasticsearch/pull/50930#discussion_r366064277", "createdAt": "2020-01-13T22:31:38Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1252,8 +1254,41 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n                 }\n             });\n \n+        final StepListener<RepositoryData> filterRepositoryDataStep = new StepListener<>();\n+\n         // Step 2: Write new index-N blob to repository and update index.latest\n         setPendingStep.whenComplete(newGen -> threadPool().executor(ThreadPool.Names.SNAPSHOT).execute(ActionRunnable.wrap(listener, l -> {\n+            // BwC logic: Load snapshot version information if any snapshot is missing a version in RepositoryData so that the new\n+            // RepositoryData contains a version for every snapshot\n+            final List<SnapshotId> snapshotIdsWithoutVersion = repositoryData.getSnapshotIds().stream().filter(\n+                snapshotId -> repositoryData.getVersion(snapshotId) == null).collect(Collectors.toList());\n+            if (snapshotIdsWithoutVersion.isEmpty() == false) {\n+                final Map<SnapshotId, Version> updatedVersionMap = new ConcurrentHashMap<>();\n+                final GroupedActionListener<Void> loadAllVersionsListener = new GroupedActionListener<>(\n+                    ActionListener.runAfter(\n+                        new ActionListener<>() {\n+                            @Override\n+                            public void onResponse(Collection<Void> voids) {\n+                                logger.info(\"Successfully loaded all snapshot's version information for {} from snapshot metadata\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86ef75f330de32dae4ffc61212b3e9de74fcfa66"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMTg1Mjgy", "url": "https://github.com/elastic/elasticsearch/pull/50930#pullrequestreview-342185282", "createdAt": "2020-01-13T22:32:37Z", "commit": {"oid": "86ef75f330de32dae4ffc61212b3e9de74fcfa66"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjozMjozN1rOFdGz5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjozMjozN1rOFdGz5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA2NDYxMg==", "bodyText": "Not great but just like in last week's discussion of SnapshotsService not introducing any new breakage here so we take whatever version information we can get and run with it even on exceptions.", "url": "https://github.com/elastic/elasticsearch/pull/50930#discussion_r366064612", "createdAt": "2020-01-13T22:32:37Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1252,8 +1254,41 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n                 }\n             });\n \n+        final StepListener<RepositoryData> filterRepositoryDataStep = new StepListener<>();\n+\n         // Step 2: Write new index-N blob to repository and update index.latest\n         setPendingStep.whenComplete(newGen -> threadPool().executor(ThreadPool.Names.SNAPSHOT).execute(ActionRunnable.wrap(listener, l -> {\n+            // BwC logic: Load snapshot version information if any snapshot is missing a version in RepositoryData so that the new\n+            // RepositoryData contains a version for every snapshot\n+            final List<SnapshotId> snapshotIdsWithoutVersion = repositoryData.getSnapshotIds().stream().filter(\n+                snapshotId -> repositoryData.getVersion(snapshotId) == null).collect(Collectors.toList());\n+            if (snapshotIdsWithoutVersion.isEmpty() == false) {\n+                final Map<SnapshotId, Version> updatedVersionMap = new ConcurrentHashMap<>();\n+                final GroupedActionListener<Void> loadAllVersionsListener = new GroupedActionListener<>(\n+                    ActionListener.runAfter(\n+                        new ActionListener<>() {\n+                            @Override\n+                            public void onResponse(Collection<Void> voids) {\n+                                logger.info(\"Successfully loaded all snapshot's version information for {} from snapshot metadata\",\n+                                    snapshotIdsWithoutVersion);\n+                            }\n+\n+                            @Override\n+                            public void onFailure(Exception e) {\n+                                logger.warn(\"Failure when trying to load missing version information from snapshot metadata\", e);\n+                            }\n+                        }, () -> filterRepositoryDataStep.onResponse(repositoryData.withVersions(updatedVersionMap))),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86ef75f330de32dae4ffc61212b3e9de74fcfa66"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb22ebb2230eccc36b2607765037b85613db8630", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/eb22ebb2230eccc36b2607765037b85613db8630", "committedDate": "2020-01-14T08:10:56Z", "message": "Merge remote-tracking branch 'elastic/master' into store-snapshot-version-in-index-N"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNTQ1Mjg5", "url": "https://github.com/elastic/elasticsearch/pull/50930#pullrequestreview-342545289", "createdAt": "2020-01-14T13:53:07Z", "commit": {"oid": "eb22ebb2230eccc36b2607765037b85613db8630"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMzo1MzowN1rOFdYKEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMzo1MzowN1rOFdYKEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM0ODgxOA==", "bodyText": "Given that snapshotIdsWithoutVersion can be very long. I was wondering if we should just display the size of snapshotIdsWithoutVersion here in the info logging.", "url": "https://github.com/elastic/elasticsearch/pull/50930#discussion_r366348818", "createdAt": "2020-01-14T13:53:07Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1252,8 +1254,41 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n                 }\n             });\n \n+        final StepListener<RepositoryData> filterRepositoryDataStep = new StepListener<>();\n+\n         // Step 2: Write new index-N blob to repository and update index.latest\n         setPendingStep.whenComplete(newGen -> threadPool().executor(ThreadPool.Names.SNAPSHOT).execute(ActionRunnable.wrap(listener, l -> {\n+            // BwC logic: Load snapshot version information if any snapshot is missing a version in RepositoryData so that the new\n+            // RepositoryData contains a version for every snapshot\n+            final List<SnapshotId> snapshotIdsWithoutVersion = repositoryData.getSnapshotIds().stream().filter(\n+                snapshotId -> repositoryData.getVersion(snapshotId) == null).collect(Collectors.toList());\n+            if (snapshotIdsWithoutVersion.isEmpty() == false) {\n+                final Map<SnapshotId, Version> updatedVersionMap = new ConcurrentHashMap<>();\n+                final GroupedActionListener<Void> loadAllVersionsListener = new GroupedActionListener<>(\n+                    ActionListener.runAfter(\n+                        new ActionListener<>() {\n+                            @Override\n+                            public void onResponse(Collection<Void> voids) {\n+                                logger.info(\"Successfully loaded all snapshot's version information for {} from snapshot metadata\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA2NDI3Nw=="}, "originalCommit": {"oid": "86ef75f330de32dae4ffc61212b3e9de74fcfa66"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99872cb4263774db3f6a4bd246f516a16e115d98", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/99872cb4263774db3f6a4bd246f516a16e115d98", "committedDate": "2020-01-14T14:56:59Z", "message": "Merge remote-tracking branch 'elastic/master' into store-snapshot-version-in-index-N"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02e8c4ee3f0ef38a2fc059f5583c29e8f5a133a3", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/02e8c4ee3f0ef38a2fc059f5583c29e8f5a133a3", "committedDate": "2020-01-14T15:23:37Z", "message": "nicer logging"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3205, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}