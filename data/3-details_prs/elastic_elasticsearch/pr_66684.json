{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNDAwNTQ5", "number": 66684, "title": "Phase 2 support for operator privileges: Cluster settings", "bodyText": "Phase 2 of operator privileges is to support operator-only settings. This includes:\n\nPrevent operator-only setting from being updated with cluster settings API unless the user is an operator\nSkip operator-only setting during restore unless the authenticating user is an operator.\n\nFor the restore process, even if the user is not an operator, the restore will not fail, but rather succeeds by skipping any operator-only settings. This means, if the current cluster state has values for an operator-only setting, it will have the same value after restore. When the user is an operator, the restore behaviour is essentially the same as of today.\n(EDIT: after discussions, the restore behaviour for operator-only settings will be the same for either operator or non-operator user. When operator privileges are enabled, operator-only settings will not be restored. Otherwise (if the feature is disabled), the behaviour is the same as of today.\nOperator and non-operator settings are differentiated with a new DynamicOperator property. The Setting constructor enforces that Dynamic and DynamicOperator cannot be both specified.\nI spent quite some time exploring how the restore code should be made aware of operator privileges. The challenge is that they are located in different packages. There are a few options, but at the end I decided to let the SnapshotRestoreRequest carry a flag to indicate whether or not to filter operator-only settings. This flag is set in AuthorizationService where operator privileges are enforced. This is similar to how RequestInterceptor works except it is for a cluster action instead of index actions. I personally think it is a reasonable, lightweight approach that does the job to separate the concerns of security and snapshot/restore. We could choose a more formal and heavier approach by introducing a new Plugin method (or even interface) to allow the main to pull settings filters from plugins. But I think it's an overkill just for this purpose.\nThe PR does have javaRestTest to test overall features, but otherwise lacks unit tests. I'll be adding them once the overall approach is approved.", "createdAt": "2020-12-21T10:45:15Z", "url": "https://github.com/elastic/elasticsearch/pull/66684", "merged": true, "mergeCommit": {"oid": "8e49ba9b18cb38be1208d80109ce5cb550beab9f"}, "closed": true, "closedAt": "2021-02-04T23:20:39Z", "author": {"login": "ywangd"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdoP4DAAH2gAyNTQzNDAwNTQ5OjZiOGQzMTc3MWMyNTMyYzUwMDI0ZTZmMWY0MTU4NjAzZTE0MDE4MjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd2uobMAH2gAyNTQzNDAwNTQ5OjY3ODQwYTkwNWE4MTRjYWI0OTRjYTg2MzYyY2QzNGE4Zjc3MDEyNzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6b8d31771c2532c50024e6f1f4158603e1401826", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/6b8d31771c2532c50024e6f1f4158603e1401826", "committedDate": "2020-12-21T06:24:00Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b104bd72d5ef20c5cab118adae17457857ae3b7", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/6b104bd72d5ef20c5cab118adae17457857ae3b7", "committedDate": "2020-12-21T10:08:57Z", "message": "Skip operator settings in restore when user is not operator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f18f660bb1afdcb36089b4907c578f26b4d28fe", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/5f18f660bb1afdcb36089b4907c578f26b4d28fe", "committedDate": "2020-12-21T10:28:46Z", "message": "tweak"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0a20b731be4b1a0917d757c650d2c326b8d8bad", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/e0a20b731be4b1a0917d757c650d2c326b8d8bad", "committedDate": "2020-12-22T00:02:56Z", "message": "Merge remote-tracking branch 'origin/master' into operator-privileges-phase-two-settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50f63df9d82f5bfcabddf3e75c3a92b51efe3259", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/50f63df9d82f5bfcabddf3e75c3a92b51efe3259", "committedDate": "2020-12-22T09:55:49Z", "message": "Merge remote-tracking branch 'origin/master' into operator-privileges-phase-two-settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2933b6885c649cc4bc7a115bca279b106d3965d9", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/2933b6885c649cc4bc7a115bca279b106d3965d9", "committedDate": "2020-12-22T10:11:24Z", "message": "Add ml settings for operator only"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1ffe0c7b120312b52437d7d438ea755e085bf9a", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/f1ffe0c7b120312b52437d7d438ea755e085bf9a", "committedDate": "2021-01-28T11:18:47Z", "message": "Merge remote-tracking branch 'origin/master' into operator-privileges-phase-two-settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f225e012f73b67f7436c29fb66586c25783d0cb", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/0f225e012f73b67f7436c29fb66586c25783d0cb", "committedDate": "2021-01-28T11:39:04Z", "message": "Update according to discussion email"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57f518c3ba88bc32caa4ec095895e0acf3f0e386", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/57f518c3ba88bc32caa4ec095895e0acf3f0e386", "committedDate": "2021-01-28T22:59:36Z", "message": "tweak"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "924d505de89fec8780ef428469928fada61a0962", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/924d505de89fec8780ef428469928fada61a0962", "committedDate": "2021-01-28T23:33:51Z", "message": "Merge remote-tracking branch 'origin/master' into operator-privileges-phase-two-settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80504794c19102a98006cd51c4d1e4734ecec78a", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/80504794c19102a98006cd51c4d1e4734ecec78a", "committedDate": "2021-02-01T06:02:12Z", "message": "add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMDM2MTk3", "url": "https://github.com/elastic/elasticsearch/pull/66684#pullrequestreview-580036197", "createdAt": "2021-02-01T06:07:00Z", "commit": {"oid": "80504794c19102a98006cd51c4d1e4734ecec78a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQwNjowNzowMFrOIdSgHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQwNjowNzowMFrOIdSgHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzU4Mjc1MQ==", "bodyText": "The code always sets the value of skipOperatorOnly because:\n\nSimilar to other authorization decision, the value is computed and local to every node\nThe value is always set properly so that a transport client cannot override this field (it is not exposed to Rest)", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r567582751", "createdAt": "2021-02-01T06:07:00Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java", "diffHunk": "@@ -78,6 +84,12 @@ public ElasticsearchSecurityException check(String action, TransportRequest requ\n             return null;\n         }\n \n+        public void maybeInterceptRequest(ThreadContext threadContext, TransportRequest request) {\n+            if (request instanceof RestoreSnapshotRequest) {\n+                ((RestoreSnapshotRequest) request).skipOperatorOnly(shouldProcess());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80504794c19102a98006cd51c4d1e4734ecec78a"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMDM2NDA5", "url": "https://github.com/elastic/elasticsearch/pull/66684#pullrequestreview-580036409", "createdAt": "2021-02-01T06:07:35Z", "commit": {"oid": "80504794c19102a98006cd51c4d1e4734ecec78a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQwNjowNzozNVrOIdSg1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQwNjowNzozNVrOIdSg1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzU4MjkzMg==", "bodyText": "Similarly, this field is always set even when operator privileges are not enabled to retain the default behaviour. See also above.", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r567582932", "createdAt": "2021-02-01T06:07:35Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java", "diffHunk": "@@ -92,5 +104,12 @@ public void maybeMarkOperatorUser(Authentication authentication, ThreadContext t\n         public ElasticsearchSecurityException check(String action, TransportRequest request, ThreadContext threadContext) {\n             return null;\n         }\n+\n+        @Override\n+        public void maybeInterceptRequest(ThreadContext threadContext, TransportRequest request) {\n+            if (request instanceof RestoreSnapshotRequest) {\n+                ((RestoreSnapshotRequest) request).skipOperatorOnly(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80504794c19102a98006cd51c4d1e4734ecec78a"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/2b9aea91628183a5d072592cd89192539bef4d28", "committedDate": "2021-02-01T06:33:22Z", "message": "forbidden api fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgyMDQwNDAy", "url": "https://github.com/elastic/elasticsearch/pull/66684#pullrequestreview-582040402", "createdAt": "2021-02-03T06:33:10Z", "commit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QwNjozMzoxMFrOIey55w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QwNjo0NDoyNlrOIezKFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTE2MjIxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean skipOperatorOnly = false; // this field does not get serialised because it is always set locally by authz\n          \n          \n            \n                private boolean skipOperatorOnlyState = false; // this field does not get serialised because it is always set locally by authz\n          \n      \n    \n    \n  \n\nI think adding a suffix is helpful because it makes it clear that the \"only\" refers to operator, not \"skip\".\nBy itself, skipOperatorOnly could mean \"skip operator, but nothing else\" which doesn't make sense if you know what \"operator\" means, but is still a cognitive hurdle.", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569162215", "createdAt": "2021-02-03T06:33:10Z", "author": {"login": "tvernum"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java", "diffHunk": "@@ -61,6 +61,7 @@\n     private boolean includeAliases = true;\n     private Settings indexSettings = EMPTY_SETTINGS;\n     private String[] ignoreIndexSettings = Strings.EMPTY_ARRAY;\n+    private boolean skipOperatorOnly = false; // this field does not get serialised because it is always set locally by authz", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTE2NDcxMA==", "bodyText": "What value do we get from combining these into 1 test case? It seems more natural to have 2 separate cases for action and settings.", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569164710", "createdAt": "2021-02-03T06:39:52Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesSingleNodeTests.java", "diffHunk": "@@ -63,20 +67,52 @@ protected Settings nodeSettings() {\n         return builder.build();\n     }\n \n-    public void testOutcomeOfSuperuserPerformingOperatorOnlyActionWillDependOnWhetherFeatureIsEnabled() {\n+    public void testOperatorOnlyActionOrSettingWillNotBeActionableByNormalSuperuser() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTE2NjM1OQ==", "bodyText": "I wonder whether this should just be isOperatorOnly()\nI think it would read better in OperatorOnlyRegistry.checkClusterUpdateSettings (because that code is really focused on \"is this an operator setting\" rather than \"is this dynamic, but only updateable by operators\")", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569166359", "createdAt": "2021-02-03T06:44:26Z", "author": {"login": "tvernum"}, "path": "server/src/main/java/org/elasticsearch/common/settings/Setting.java", "diffHunk": "@@ -295,7 +304,14 @@ public final Key getRawKey() {\n      * Returns <code>true</code> if this setting is dynamically updateable, otherwise <code>false</code>\n      */\n     public final boolean isDynamic() {\n-        return properties.contains(Property.Dynamic);\n+        return properties.contains(Property.Dynamic) || properties.contains(Property.OperatorDynamic);\n+    }\n+\n+    /**\n+     * Returns <code>true</code> if this setting is dynamically updateable by operators, otherwise <code>false</code>\n+     */\n+    public final boolean isDynamicOperator() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgyMTM3NTUw", "url": "https://github.com/elastic/elasticsearch/pull/66684#pullrequestreview-582137550", "createdAt": "2021-02-03T09:02:56Z", "commit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QwOTowMjo1NlrOIe3pRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QxMDoxODo0NlrOIe65kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTIzOTg3Nw==", "bodyText": "I did not spot the place where this is needed, perhaps it can be removed or alternatively moved to the specific line?", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569239877", "createdAt": "2021-02-03T09:02:56Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java", "diffHunk": "@@ -100,4 +102,142 @@ public void testOperatorPrivilegesXpackUsage() throws IOException {\n         assertTrue((boolean) operatorPrivileges.get(\"available\"));\n         assertTrue((boolean) operatorPrivileges.get(\"enabled\"));\n     }\n+\n+    public void testUpdateOperatorSettings() throws IOException {\n+        final Map<String, Object> settings = new HashMap<>(\n+            Map.of(\"xpack.security.http.filter.enabled\", \"false\", \"xpack.security.transport.filter.enabled\", \"false\")\n+        );\n+        final boolean extraSettings = randomBoolean();\n+        if (extraSettings) {\n+            settings.put(\"search.allow_expensive_queries\", false);\n+        }\n+        final ResponseException responseException = expectThrows(ResponseException.class, () -> updateSettings(settings, null));\n+        assertThat(responseException.getResponse().getStatusLine().getStatusCode(), equalTo(403));\n+        assertThat(responseException.getMessage(), containsString(\"is unauthorized for user\"));\n+        assertTrue(getPersistentSettings().isEmpty());\n+\n+        updateSettings(settings, OPERATOR_AUTH_HEADER);\n+\n+        Map<String, Object> persistentSettings = getPersistentSettings();\n+        assertThat(persistentSettings.get(\"xpack.security.http.filter.enabled\"), equalTo(\"false\"));\n+        assertThat(persistentSettings.get(\"xpack.security.transport.filter.enabled\"), equalTo(\"false\"));\n+        if (extraSettings) {\n+            assertThat(persistentSettings.get(\"search.allow_expensive_queries\"), equalTo(\"false\"));\n+        }\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI0MDc3MQ==", "bodyText": "I think we may want the opposite test too - checking that without operator privileges enabled, we do restore properties marked as operator?", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569240771", "createdAt": "2021-02-03T09:04:22Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java", "diffHunk": "@@ -100,4 +102,142 @@ public void testOperatorPrivilegesXpackUsage() throws IOException {\n         assertTrue((boolean) operatorPrivileges.get(\"available\"));\n         assertTrue((boolean) operatorPrivileges.get(\"enabled\"));\n     }\n+\n+    public void testUpdateOperatorSettings() throws IOException {\n+        final Map<String, Object> settings = new HashMap<>(\n+            Map.of(\"xpack.security.http.filter.enabled\", \"false\", \"xpack.security.transport.filter.enabled\", \"false\")\n+        );\n+        final boolean extraSettings = randomBoolean();\n+        if (extraSettings) {\n+            settings.put(\"search.allow_expensive_queries\", false);\n+        }\n+        final ResponseException responseException = expectThrows(ResponseException.class, () -> updateSettings(settings, null));\n+        assertThat(responseException.getResponse().getStatusLine().getStatusCode(), equalTo(403));\n+        assertThat(responseException.getMessage(), containsString(\"is unauthorized for user\"));\n+        assertTrue(getPersistentSettings().isEmpty());\n+\n+        updateSettings(settings, OPERATOR_AUTH_HEADER);\n+\n+        Map<String, Object> persistentSettings = getPersistentSettings();\n+        assertThat(persistentSettings.get(\"xpack.security.http.filter.enabled\"), equalTo(\"false\"));\n+        assertThat(persistentSettings.get(\"xpack.security.transport.filter.enabled\"), equalTo(\"false\"));\n+        if (extraSettings) {\n+            assertThat(persistentSettings.get(\"search.allow_expensive_queries\"), equalTo(\"false\"));\n+        }\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public void testSnapshotRestoreBehaviourOfOperatorSettings() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI0NTc0Mw==", "bodyText": "I think we want a test to validate that we can set operator settings when operator privileges are disabled too. Could also be in the single node test rather than rest test, if easier.", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569245743", "createdAt": "2021-02-03T09:11:46Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java", "diffHunk": "@@ -100,4 +102,142 @@ public void testOperatorPrivilegesXpackUsage() throws IOException {\n         assertTrue((boolean) operatorPrivileges.get(\"available\"));\n         assertTrue((boolean) operatorPrivileges.get(\"enabled\"));\n     }\n+\n+    public void testUpdateOperatorSettings() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI2OTc1OQ==", "bodyText": "nit: this is not included in toString, would be nice to add it for debugging purposes.", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569269759", "createdAt": "2021-02-03T09:45:57Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java", "diffHunk": "@@ -61,6 +61,7 @@\n     private boolean includeAliases = true;\n     private Settings indexSettings = EMPTY_SETTINGS;\n     private String[] ignoreIndexSettings = Strings.EMPTY_ARRAY;\n+    private boolean skipOperatorOnly = false; // this field does not get serialised because it is always set locally by authz", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI4NjU2Mw==", "bodyText": "Hopefully this never causes an issue, but I think this line should go below the modification of the settings below to ensure the updated settings are valid.", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569286563", "createdAt": "2021-02-03T10:09:04Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/snapshots/RestoreService.java", "diffHunk": "@@ -443,6 +445,22 @@ public ClusterState execute(ClusterState currentState) {\n                             if (metadata.persistentSettings() != null) {\n                                 Settings settings = metadata.persistentSettings();\n                                 clusterSettings.validateUpdate(settings);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI5MzIwMA==", "bodyText": "I wonder if it was nicer to verify that toXContent gives same result regardless of the skipOperatorOnly flag? I.e., invoke it on two instances with different skipOperatorOnly flag and verify the maps are identical.", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569293200", "createdAt": "2021-02-03T10:18:46Z", "author": {"login": "henningandersen"}, "path": "server/src/test/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequestTests.java", "diffHunk": "@@ -134,4 +135,24 @@ public void testSource() throws IOException {\n \n         assertEquals(original, processed);\n     }\n+\n+    public void testSkipOperatorOnlyWillNotBeSerialised() throws IOException {\n+        RestoreSnapshotRequest original = createTestInstance();\n+        assertFalse(original.skipOperatorOnly()); // default is false\n+        if (randomBoolean()) {\n+            original.skipOperatorOnly(true);\n+        }\n+        // It is not serialised as xcontent\n+        XContentBuilder builder = original.toXContent(XContentFactory.jsonBuilder(), new ToXContent.MapParams(Collections.emptyMap()));\n+        XContentParser parser = XContentType.JSON.xContent().createParser(\n+            NamedXContentRegistry.EMPTY, null, BytesReference.bytes(builder).streamInput());\n+        Map<String, Object> map = parser.mapOrdered();\n+        assertFalse(map.containsKey(\"skip_operator_only\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b9aea91628183a5d072592cd89192539bef4d28"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c798074ec4351700ae05b8feac73009687ff12e", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/8c798074ec4351700ae05b8feac73009687ff12e", "committedDate": "2021-02-04T03:38:33Z", "message": "Update server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java\n\nCo-authored-by: Tim Vernum <tim@adjective.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b9b6aa0731636ae738b2009dab1165c0a556004", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/2b9b6aa0731636ae738b2009dab1165c0a556004", "committedDate": "2021-02-04T03:39:05Z", "message": "Merge branch 'master' into operator-privileges-phase-two-settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a6ca705f3cfc1f05b1debcb2bbb071da3d9d729", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/0a6ca705f3cfc1f05b1debcb2bbb071da3d9d729", "committedDate": "2021-02-04T03:40:40Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45b6e4d18ab262afb40bef3889493e2f791d99f3", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/45b6e4d18ab262afb40bef3889493e2f791d99f3", "committedDate": "2021-02-04T03:43:11Z", "message": "fix names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d51630fbee51481cf8dd5c0e85fa1839724e5a5c", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/d51630fbee51481cf8dd5c0e85fa1839724e5a5c", "committedDate": "2021-02-04T03:44:21Z", "message": "more names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb8e8a26966222a783ec01bd42d61120e84d87c0", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/cb8e8a26966222a783ec01bd42d61120e84d87c0", "committedDate": "2021-02-04T05:05:09Z", "message": "address more feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d5ad5210795fb88e4c52ff8675cfbef0b1112bf", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/6d5ad5210795fb88e4c52ff8675cfbef0b1112bf", "committedDate": "2021-02-04T05:25:10Z", "message": "more feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9406afa81c51524bf82b7e209d42678a61e9292", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/c9406afa81c51524bf82b7e209d42678a61e9292", "committedDate": "2021-02-04T05:57:30Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67840a905a814cab494ca86362cd34a8f7701273", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/67840a905a814cab494ca86362cd34a8f7701273", "committedDate": "2021-02-04T06:08:56Z", "message": "add teardown"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4418, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}