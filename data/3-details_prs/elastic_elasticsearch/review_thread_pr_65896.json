{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjMyMjMx", "number": 65896, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0NToxM1rOFB3_0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNjo1Mjo0NFrOFK-BCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTEwMzU1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0NToxM1rOIAv-TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0NToxM1rOIAv-TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1NjkwOQ==", "bodyText": "Can you move this to AbstractSearchAsyncAction#getConnection ?  There's nothing that prevents to check the version there.", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537656909", "createdAt": "2020-12-07T16:45:13Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java", "diffHunk": "@@ -80,7 +84,11 @@ protected void executePhaseOnShard(final SearchShardIterator shardIt,\n                                        final SearchShardTarget shard,\n                                        final SearchActionListener<SearchPhaseResult> listener) {\n         ShardSearchRequest request = rewriteShardSearchRequest(super.buildShardSearchRequest(shardIt));\n-        getSearchTransport().sendExecuteQuery(getConnection(shard.getClusterAlias(), shard.getNodeId()), request, getTask(), listener);\n+        Transport.Connection conn = getConnection(shard.getClusterAlias(), shard.getNodeId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c41a9c07b764090260b82677dbb5503dbded1a3"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTEwOTI2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0NjoyMFrOIAwBjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0NjoyMFrOIAwBjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1Nzc0MQ==", "bodyText": "conn can be null too so you'll need to handle this case.", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537657741", "createdAt": "2020-12-07T16:46:20Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java", "diffHunk": "@@ -80,7 +84,11 @@ protected void executePhaseOnShard(final SearchShardIterator shardIt,\n                                        final SearchShardTarget shard,\n                                        final SearchActionListener<SearchPhaseResult> listener) {\n         ShardSearchRequest request = rewriteShardSearchRequest(super.buildShardSearchRequest(shardIt));\n-        getSearchTransport().sendExecuteQuery(getConnection(shard.getClusterAlias(), shard.getNodeId()), request, getTask(), listener);\n+        Transport.Connection conn = getConnection(shard.getClusterAlias(), shard.getNodeId());\n+        if (minVersion != null && conn.getVersion().before(minVersion)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c41a9c07b764090260b82677dbb5503dbded1a3"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTExNzIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0NzozNVrOIAwF4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0NzozNVrOIAwF4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1ODg1MQ==", "bodyText": "You need to start with 8.0.0 and adapt the checks after the backport", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537658851", "createdAt": "2020-12-07T16:47:35Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -214,6 +226,9 @@ public SearchRequest(StreamInput in) throws IOException {\n             finalReduce = true;\n         }\n         ccsMinimizeRoundtrips = in.readBoolean();\n+        if (in.getVersion().onOrAfter(Version.V_7_11_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c41a9c07b764090260b82677dbb5503dbded1a3"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTExNzg5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0Nzo0MlrOIAwGQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0Nzo0MlrOIAwGQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1ODk0NA==", "bodyText": "same here", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537658944", "createdAt": "2020-12-07T16:47:42Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -241,7 +256,9 @@ public void writeTo(StreamOutput out) throws IOException {\n             out.writeBoolean(finalReduce);\n         }\n         out.writeBoolean(ccsMinimizeRoundtrips);\n-\n+        if (out.getVersion().onOrAfter(Version.V_7_11_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c41a9c07b764090260b82677dbb5503dbded1a3"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTEyNDg1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0OTowM1rOIAwKSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0OTowM1rOIAwKSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1OTk3OQ==", "bodyText": "You don't need to check the minimum version if it's equal to the minimum compatible version (default value).", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537659979", "createdAt": "2020-12-07T16:49:03Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java", "diffHunk": "@@ -210,6 +210,10 @@ public final void run() {\n                     throw new SearchPhaseExecutionException(getName(), msg, null, ShardSearchFailure.EMPTY_ARRAY);\n                 }\n             }\n+            if (checkMinimumVersion(shardsIts) == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c41a9c07b764090260b82677dbb5503dbded1a3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTEyODkyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/ElasticsearchException.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0OTo0NlrOIAwMow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0OTo0NlrOIAwMow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY2MDU3OQ==", "bodyText": "For now it's just a 8.0.0 exception, you'll need to adapt the version after the backport", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537660579", "createdAt": "2020-12-07T16:49:46Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/ElasticsearchException.java", "diffHunk": "@@ -1047,7 +1047,12 @@ public String toString() {\n                 org.elasticsearch.transport.NoSeedNodeLeftException.class,\n                 org.elasticsearch.transport.NoSeedNodeLeftException::new,\n                 160,\n-                Version.V_7_10_0);\n+                Version.V_7_10_0),\n+        VERSION_MISMATCH_EXCEPTION(\n+                org.elasticsearch.action.search.VersionMismatchException.class,\n+                org.elasticsearch.action.search.VersionMismatchException::new,\n+                161,\n+                Version.V_7_11_0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c41a9c07b764090260b82677dbb5503dbded1a3"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODU2MjM4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwOTowMTo1NlrOIBObaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwOTowNToyMFrOIBOkrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1NTg4MA==", "bodyText": "You could reuse the subSearchRequest above and just add a nullable minCompatibleShardNode argument ? That makes sense to me because we need to set ccsMinimizeRoundtrips to false there too and these sub search requests are meant for internal use (using the transport client only).\nShould we add also a check that the min version is greater or equals than the minimum compatibility version ?", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r538155880", "createdAt": "2020-12-08T09:01:56Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -157,6 +159,16 @@ static SearchRequest subSearchRequest(SearchRequest originalSearchRequest, Strin\n         return new SearchRequest(originalSearchRequest, indices, clusterAlias, absoluteStartMillis, finalReduce);\n     }\n \n+    public static SearchRequest withMinimumVersion(SearchRequest searchRequest, Version minVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5410f2612ff331afa3c06fc9ca96afa40899072a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1ODI1Mg==", "bodyText": "We should also ensure that ccsMinimizeRoundtrips is set to false, otherwise the check will not be applied on the remote cluster. We can force the value here searchRequest.cssMinimizeRountrips(false) but we should also verify the final value in SearchRequest#validate.", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r538158252", "createdAt": "2020-12-08T09:05:20Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -157,6 +159,16 @@ static SearchRequest subSearchRequest(SearchRequest originalSearchRequest, Strin\n         return new SearchRequest(originalSearchRequest, indices, clusterAlias, absoluteStartMillis, finalReduce);\n     }\n \n+    public static SearchRequest withMinimumVersion(SearchRequest searchRequest, Version minVersion) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1NTg4MA=="}, "originalCommit": {"oid": "5410f2612ff331afa3c06fc9ca96afa40899072a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODYyMjE4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwOToxNDo0N1rOIBO-1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwOToxNDo0N1rOIBO-1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE2NDk0OQ==", "bodyText": "Maybe rename to something more explicit: minCompatibleShardNode ?", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r538164949", "createdAt": "2020-12-08T09:14:47Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -319,6 +336,9 @@ long getAbsoluteStartMillis() {\n         return absoluteStartMillis;\n     }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5410f2612ff331afa3c06fc9ca96afa40899072a"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MDQ2MTUyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNjo1Mjo0NFrOIN5I-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxMTowODowM1rOIO6nAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQzODU4Nw==", "bodyText": "Should we switch to a Boolean with a default value of null ? This way we can decide the default value depending on whether the minCompatibleShardNode is set or not ? It feels wrong that you have to explicitly disable this option when using minCompatibleShardNode. It should be done automatically unless the user sets the ccsMinimizeRoundtrips value explicitly.", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r551438587", "createdAt": "2021-01-04T16:52:44Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -97,6 +97,9 @@\n \n     private boolean ccsMinimizeRoundtrips = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c6ab18b46496268a40562f729fa25f970964c94"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjUxMTIzNQ==", "bodyText": "@jimczi I've made the change, but slightly different from your suggestion as it wasn't easy to enforce a certain value for ccsMinimizeRoundtrips in all cases. Thus, I've removed the setter and kept as the sole option of setting minCompatibleShardNode for a search request - a constructor (which will also set ccsMinimizeRoundtrips).", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r552511235", "createdAt": "2021-01-06T11:08:03Z", "author": {"login": "astefan"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -97,6 +97,9 @@\n \n     private boolean ccsMinimizeRoundtrips = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQzODU4Nw=="}, "originalCommit": {"oid": "7c6ab18b46496268a40562f729fa25f970964c94"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1750, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}