{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MzA2MzEx", "number": 63767, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTozOToyMVrOEuJQ8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTo0MTo0NlrOEuJU_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODIxNzQ1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/query/DistanceFeatureQueryBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTozOToyMVrOHiXKxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTo1MzoyOFrOHiXpuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc5MzIyMg==", "bodyText": "When we fix LongScriptFieldDistanceFeatureQuery, I think we could remove the boost parameter altogether from MappedFieldType#distanceFeatureQuery ?", "url": "https://github.com/elastic/elasticsearch/pull/63767#discussion_r505793222", "createdAt": "2020-10-15T19:39:21Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/index/query/DistanceFeatureQueryBuilder.java", "diffHunk": "@@ -112,7 +112,8 @@ protected Query doToQuery(QueryShardContext context) throws IOException {\n         if (fieldType == null) {\n             return Queries.newMatchNoDocsQuery(\"Can't run [\" + NAME + \"] query on unmapped fields!\");\n         }\n-        return fieldType.distanceFeatureQuery(origin.origin(), pivot, boost, context);\n+        // As we already apply boost in AbstractQueryBuilder::toQuery, we always passing a boost of 1.0 to distanceFeatureQuery\n+        return fieldType.distanceFeatureQuery(origin.origin(), pivot, 1.0f, context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6654c687971cd11a0afa7408050ab50a77d43b03"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgwMTE0NQ==", "bodyText": "Good point, I or Nik will do that.", "url": "https://github.com/elastic/elasticsearch/pull/63767#discussion_r505801145", "createdAt": "2020-10-15T19:53:28Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/main/java/org/elasticsearch/index/query/DistanceFeatureQueryBuilder.java", "diffHunk": "@@ -112,7 +112,8 @@ protected Query doToQuery(QueryShardContext context) throws IOException {\n         if (fieldType == null) {\n             return Queries.newMatchNoDocsQuery(\"Can't run [\" + NAME + \"] query on unmapped fields!\");\n         }\n-        return fieldType.distanceFeatureQuery(origin.origin(), pivot, boost, context);\n+        // As we already apply boost in AbstractQueryBuilder::toQuery, we always passing a boost of 1.0 to distanceFeatureQuery\n+        return fieldType.distanceFeatureQuery(origin.origin(), pivot, 1.0f, context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc5MzIyMg=="}, "originalCommit": {"oid": "6654c687971cd11a0afa7408050ab50a77d43b03"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODIyNzgyOnYy", "diffSide": "RIGHT", "path": "server/src/internalClusterTest/java/org/elasticsearch/search/query/SearchQueryIT.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTo0MTo0N1rOHiXQwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDo1MDozM1rOHiZ35g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc5NDc1Mw==", "bodyText": "It would be nice to rely on unit tests like DistanceFeatureQueryBuilderTests or a REST test instead of an integration test. We try to avoid new ESIntegTestCase cases unless a full cluster is really needed.", "url": "https://github.com/elastic/elasticsearch/pull/63767#discussion_r505794753", "createdAt": "2020-10-15T19:41:47Z", "author": {"login": "jtibshirani"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/search/query/SearchQueryIT.java", "diffHunk": "@@ -1626,6 +1627,33 @@ public void testRangeQueryWithLocaleMapping() throws Exception {\n         assertHitCount(searchResponse, 2L);\n     }\n \n+    public void testDistanceFeatureQuery() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6654c687971cd11a0afa7408050ab50a77d43b03"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgwMDkxMw==", "bodyText": "@jtibshirani Thanks for the suggestion. I was trying to make this test in REST yml tests, but yml tests don't have nice comparison of float scores (you can't set up delta, and also there are errors with double -> float conversions).\nI also considered adding this test in DistanceFeatureQueryBuilderTests, but then I need to work on the Lucene level there. But what I wanted to test is how ES parses this query and what scores are returned.  I could not find a smart way to do that in that test. WDYT?", "url": "https://github.com/elastic/elasticsearch/pull/63767#discussion_r505800913", "createdAt": "2020-10-15T19:52:59Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/search/query/SearchQueryIT.java", "diffHunk": "@@ -1626,6 +1627,33 @@ public void testRangeQueryWithLocaleMapping() throws Exception {\n         assertHitCount(searchResponse, 2L);\n     }\n \n+    public void testDistanceFeatureQuery() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc5NDc1Mw=="}, "originalCommit": {"oid": "6654c687971cd11a0afa7408050ab50a77d43b03"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgwNjYyNQ==", "bodyText": "yml tests don't have nice comparison of float scores\n\nGot it, that's good to know.\n\nBut what I wanted to test is how ES parses this query and what scores are returned.\n\nI guess we already test in DistanceFeatureQueryBuilderTests that the query is parsed correctly, since we check LatLonPointDistanceFeatureQuery has a boost of 1.0f. I also don't see a convenient way to test query scoring in a unit test.", "url": "https://github.com/elastic/elasticsearch/pull/63767#discussion_r505806625", "createdAt": "2020-10-15T20:04:22Z", "author": {"login": "jtibshirani"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/search/query/SearchQueryIT.java", "diffHunk": "@@ -1626,6 +1627,33 @@ public void testRangeQueryWithLocaleMapping() throws Exception {\n         assertHitCount(searchResponse, 2L);\n     }\n \n+    public void testDistanceFeatureQuery() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc5NDc1Mw=="}, "originalCommit": {"oid": "6654c687971cd11a0afa7408050ab50a77d43b03"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgzNzU0Mg==", "bodyText": "@jtibshirani\n\nI guess we already test in DistanceFeatureQueryBuilderTests that the query is parsed correctly, since we check LatLonPointDistanceFeatureQuery has a boost of 1.0f.\n\nIndeed, the tests in DistanceFeatureQueryBuilderTests should be enough for this PR. I've removed a test from SearchQueryIT.java in 7cbe160.  We can introduce this test on scores later, when we need to test the correct scores.", "url": "https://github.com/elastic/elasticsearch/pull/63767#discussion_r505837542", "createdAt": "2020-10-15T20:50:33Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/search/query/SearchQueryIT.java", "diffHunk": "@@ -1626,6 +1627,33 @@ public void testRangeQueryWithLocaleMapping() throws Exception {\n         assertHitCount(searchResponse, 2L);\n     }\n \n+    public void testDistanceFeatureQuery() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc5NDc1Mw=="}, "originalCommit": {"oid": "6654c687971cd11a0afa7408050ab50a77d43b03"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2917, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}