{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MDQyMzEz", "number": 53585, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOToyNDoyMVrODopBQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDoyNzowNFrODoqXrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTQxNjk4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/identity-provider/qa/idp-rest-tests/src/test/java/org/elasticsearch/xpack/idp/ManageServiceProviderRestIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOToyNDoyMVrOF3T6Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjo1NDoxMlrOF3a46A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU0MjIxNA==", "bodyText": "nit suggestion : why not import static org.opensaml.saml.common.xml.SAMLConstants.SAML2_REDIRECT_BINDING_URI; ?", "url": "https://github.com/elastic/elasticsearch/pull/53585#discussion_r393542214", "createdAt": "2020-03-17T09:24:21Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/identity-provider/qa/idp-rest-tests/src/test/java/org/elasticsearch/xpack/idp/ManageServiceProviderRestIT.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.idp;\n+\n+import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.client.ResponseException;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ObjectPath;\n+import org.elasticsearch.common.xcontent.json.JsonXContent;\n+import org.elasticsearch.xpack.idp.saml.sp.SamlServiceProviderIndex;\n+import org.elasticsearch.xpack.idp.saml.sp.SamlServiceProviderIndex.DocumentVersion;\n+\n+import java.io.IOException;\n+import java.net.URLEncoder;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Map;\n+\n+import static org.hamcrest.Matchers.containsInAnyOrder;\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+public class ManageServiceProviderRestIT extends IdpRestTestCase {\n+\n+    // From build.gradle\n+    private final String IDP_ENTITY_ID = \"https://idp.test.es.elasticsearch.org/\";\n+    // From SAMLConstants\n+    private final String REDIRECT_BINDING = \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09caec6d988b7dd94feba3701ecda424541c4467"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY1NjU1Mg==", "bodyText": "Because the QA project doesn't currently import OpenSAML and it seemed like overkill to make it do that just for this constant.", "url": "https://github.com/elastic/elasticsearch/pull/53585#discussion_r393656552", "createdAt": "2020-03-17T12:54:12Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/identity-provider/qa/idp-rest-tests/src/test/java/org/elasticsearch/xpack/idp/ManageServiceProviderRestIT.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.idp;\n+\n+import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.client.ResponseException;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ObjectPath;\n+import org.elasticsearch.common.xcontent.json.JsonXContent;\n+import org.elasticsearch.xpack.idp.saml.sp.SamlServiceProviderIndex;\n+import org.elasticsearch.xpack.idp.saml.sp.SamlServiceProviderIndex.DocumentVersion;\n+\n+import java.io.IOException;\n+import java.net.URLEncoder;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Map;\n+\n+import static org.hamcrest.Matchers.containsInAnyOrder;\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+public class ManageServiceProviderRestIT extends IdpRestTestCase {\n+\n+    // From build.gradle\n+    private final String IDP_ENTITY_ID = \"https://idp.test.es.elasticsearch.org/\";\n+    // From SAMLConstants\n+    private final String REDIRECT_BINDING = \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU0MjIxNA=="}, "originalCommit": {"oid": "09caec6d988b7dd94feba3701ecda424541c4467"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTYzODIwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/identity-provider/src/main/java/org/elasticsearch/xpack/idp/saml/rest/action/RestDeleteSamlServiceProviderAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDoyNzowNFrOF3WHbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDoyNzowNFrOF3WHbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU3ODM1MA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/53585#discussion_r393578350", "createdAt": "2020-03-17T10:27:04Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/identity-provider/src/main/java/org/elasticsearch/xpack/idp/saml/rest/action/RestDeleteSamlServiceProviderAction.java", "diffHunk": "@@ -49,7 +49,7 @@ protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient\n                 @Override\n                 public RestResponse buildResponse(DeleteSamlServiceProviderResponse response, XContentBuilder builder) throws Exception {\n                     response.toXContent(builder, restRequest);\n-                    return new BytesRestResponse(RestStatus.OK, builder);\n+                    return new BytesRestResponse(response.found() ? RestStatus.OK : RestStatus.NOT_FOUND, builder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09caec6d988b7dd94feba3701ecda424541c4467"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3260, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}