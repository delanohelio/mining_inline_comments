{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTMwODc3", "number": 56150, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyNjoxMFrOD5IbMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyNjoxMFrOD5IbMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjMzNDU5OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyNjoxMFrOGQO0Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTo0Njo1NFrOGQPjFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3MzE4Ng==", "bodyText": "Why only the last line? Why do we need to split instead of just checking the length of the entire output being zero?", "url": "https://github.com/elastic/elasticsearch/pull/56150#discussion_r419673186", "createdAt": "2020-05-04T19:26:10Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy", "diffHunk": "@@ -503,7 +503,12 @@ class BuildPlugin implements Plugin<Project> {\n             result.rethrowFailure()\n             result.assertNormalExitValue() // assert exit value in case the failure cause is null\n         }\n-        return (captureStdErr ? stderr : stdout).toString('UTF-8').trim()\n+        String[] lines = (captureStdErr ? stderr : stdout).toString('UTF-8').trim().split('\\n')\n+        if (lines.length == 0) {\n+            throw new GradleException(\"Expected command to produce output but it did not.\")\n+        }\n+\n+        return lines[lines.length - 1]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7117d5bb739e1fc1b555301a52b0ca13f7a190"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4NTE0MA==", "bodyText": "Because the JVM logs warning messages to stderr. What was happening is Jenkins sets JAVA_TOOL_OPTIONS which then results in jshell printing Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 to stderr. We need to ignore any such output and only care about the last thing printed out, which is going to be our script output.", "url": "https://github.com/elastic/elasticsearch/pull/56150#discussion_r419685140", "createdAt": "2020-05-04T19:46:54Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy", "diffHunk": "@@ -503,7 +503,12 @@ class BuildPlugin implements Plugin<Project> {\n             result.rethrowFailure()\n             result.assertNormalExitValue() // assert exit value in case the failure cause is null\n         }\n-        return (captureStdErr ? stderr : stdout).toString('UTF-8').trim()\n+        String[] lines = (captureStdErr ? stderr : stdout).toString('UTF-8').trim().split('\\n')\n+        if (lines.length == 0) {\n+            throw new GradleException(\"Expected command to produce output but it did not.\")\n+        }\n+\n+        return lines[lines.length - 1]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3MzE4Ng=="}, "originalCommit": {"oid": "da7117d5bb739e1fc1b555301a52b0ca13f7a190"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2363, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}