{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NjQ4MDgy", "number": 52478, "title": "Correct boost in script_score query and error on negative scores", "bodyText": "Before boost in script_score query was wrongly applied only to the subquery.\nThis commit makes sure that the boost is applied to the whole score\nthat comes out of script.\nAlso provide error 400x error message on negative scores in script_score.\nCloses #48465", "createdAt": "2020-02-18T14:27:51Z", "url": "https://github.com/elastic/elasticsearch/pull/52478", "merged": true, "mergeCommit": {"oid": "556ee9a7196131fbf232f7a73ef0571a6cd60e05"}, "closed": true, "closedAt": "2020-02-24T15:46:34Z", "author": {"login": "mayya-sharipova"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFixSvgH2gAyMzc2NjQ4MDgyOjdjOWY1ZjhkY2M3NzNkOTlhMmYyYjM2MzU5ZGY0MWQ0MDcyMDhiYWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKGbhagFqTM2ODIxMDU5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7c9f5f8dcc773d99a2f2b36359df41d407208bad", "author": {"user": {"login": "mayya-sharipova", "name": "Mayya Sharipova"}}, "url": "https://github.com/elastic/elasticsearch/commit/7c9f5f8dcc773d99a2f2b36359df41d407208bad", "committedDate": "2020-02-18T14:26:19Z", "message": "Correct boost calculation in script_score query\n\nBefore boost in script_score query was wrongly applied only to the subquery.\nThis commit makes sure that the boost is applied to the whole score\nthat comes out of script.\n\nCloses #48465"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDM2OTEx", "url": "https://github.com/elastic/elasticsearch/pull/52478#pullrequestreview-362036911", "createdAt": "2020-02-20T16:14:58Z", "commit": {"oid": "7c9f5f8dcc773d99a2f2b36359df41d407208bad"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjoxNDo1OFrOFsZxyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjoxOTo0M1rOFsZ9Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEwNDAxMQ==", "bodyText": "why did you remove the reference to the score docs?", "url": "https://github.com/elastic/elasticsearch/pull/52478#discussion_r382104011", "createdAt": "2020-02-20T16:14:58Z", "author": {"login": "matriv"}, "path": "docs/reference/query-dsl/script-score-query.asciidoc", "diffHunk": "@@ -48,9 +48,12 @@ scores be positive or `0`.\n --\n \n `min_score`::\n-(Optional, float) Documents with a <<relevance-scores,relevance score>> lower\n+(Optional, float) Documents with a score lower", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c9f5f8dcc773d99a2f2b36359df41d407208bad"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEwNjMxNw==", "bodyText": "This seems to be executed also when explanation == null? Or I'm missing something?\nMaybe it worths checking for a test that when the boost is  != 1 and explanation is false there is no explanation returned regarding the boost?\nAlso, why not return an explanation if the boost is 1, since it's asked by the user?", "url": "https://github.com/elastic/elasticsearch/pull/52478#discussion_r382106317", "createdAt": "2020-02-20T16:18:45Z", "author": {"login": "matriv"}, "path": "server/src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreQuery.java", "diffHunk": "@@ -143,7 +148,12 @@ public Explanation explain(LeafReaderContext context, int doc) throws IOExceptio\n                         explanation = Explanation.match(score, desc);\n                     }\n                 }\n-                \n+                if (boost != 1.0f) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c9f5f8dcc773d99a2f2b36359df41d407208bad"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEwNjkwNg==", "bodyText": "Maybe use a different score here, e.g.: 5 to make it more clear.", "url": "https://github.com/elastic/elasticsearch/pull/52478#discussion_r382106906", "createdAt": "2020-02-20T16:19:43Z", "author": {"login": "matriv"}, "path": "modules/lang-painless/src/test/resources/rest-api-spec/test/painless/110_script_score_boost.yml", "diffHunk": "@@ -0,0 +1,86 @@\n+# Integration tests for ScriptScoreQuery using Painless\n+setup:\n+  - skip:\n+      version: \" - 7.9.99\"\n+      reason: \"boost was corrected in script_score query from 8.0\"\n+  - do:\n+      indices.create:\n+        index: test_index\n+        body:\n+          settings:\n+            index:\n+              number_of_shards: 1\n+              number_of_replicas: 0\n+          mappings:\n+            properties:\n+              k:\n+                type: keyword\n+              i:\n+                type: integer\n+\n+  - do:\n+      bulk:\n+        index: test_index\n+        refresh: true\n+        body:\n+          - '{\"index\": {\"_id\": \"1\"}}'\n+          - '{\"k\": \"k\", \"i\" : 1}'\n+          - '{\"index\": {\"_id\": \"2\"}}'\n+          - '{\"k\": \"kk\", \"i\" : 2}'\n+          - '{\"index\": {\"_id\": \"3\"}}'\n+          - '{\"k\": \"kkk\", \"i\" : 3}'\n+---\n+\"Boost script_score\":\n+    - do:\n+        search:\n+          index: test_index\n+          body:\n+            query:\n+              script_score:\n+                query: {match_all: {}}\n+                script:\n+                  source: \"doc['i'].value * _score\"\n+                boost: 10\n+\n+    - match: { hits.total.value: 3 }\n+    - match: { hits.hits.0._score: 30 }\n+    - match: { hits.hits.1._score: 20 }\n+    - match: { hits.hits.2._score: 10 }\n+\n+---\n+\"Boost script_score and boost internal query\":\n+  - do:\n+      search:\n+        index: test_index\n+        body:\n+          query:\n+            script_score:\n+              query: {match_all: {boost: 10}}\n+              script:\n+                source: \"doc['i'].value * _score\"\n+              boost: 10", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c9f5f8dcc773d99a2f2b36359df41d407208bad"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d8313e2dea0abd143734ce6d44070fad32debbb", "author": {"user": {"login": "mayya-sharipova", "name": "Mayya Sharipova"}}, "url": "https://github.com/elastic/elasticsearch/commit/1d8313e2dea0abd143734ce6d44070fad32debbb", "committedDate": "2020-02-20T21:09:39Z", "message": "Address feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMzE5OTQ2", "url": "https://github.com/elastic/elasticsearch/pull/52478#pullrequestreview-362319946", "createdAt": "2020-02-20T23:57:26Z", "commit": {"oid": "1d8313e2dea0abd143734ce6d44070fad32debbb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDkxMDEx", "url": "https://github.com/elastic/elasticsearch/pull/52478#pullrequestreview-362491011", "createdAt": "2020-02-21T09:16:55Z", "commit": {"oid": "1d8313e2dea0abd143734ce6d44070fad32debbb"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOToxNjo1NlrOFswSOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOToyNDoyOVrOFswgew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3Mjc2Mw==", "bodyText": "I think it would be better if this error message returned the value produced by the script without the boost.", "url": "https://github.com/elastic/elasticsearch/pull/52478#discussion_r382472763", "createdAt": "2020-02-21T09:16:56Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreQuery.java", "diffHunk": "@@ -203,30 +213,33 @@ public int hashCode() {\n     private static class ScriptScorer extends Scorer {\n         private final ScoreScript scoreScript;\n         private final Scorer subQueryScorer;\n+        private final float boost;\n         private final ExplanationHolder explanation;\n \n         ScriptScorer(Weight weight, ScoreScript scoreScript, Scorer subQueryScorer,\n-                ScoreMode subQueryScoreMode, ExplanationHolder explanation) {\n+                ScoreMode subQueryScoreMode, float boost, ExplanationHolder explanation) {\n             super(weight);\n             this.scoreScript = scoreScript;\n             if (subQueryScoreMode == ScoreMode.COMPLETE) {\n                 scoreScript.setScorer(subQueryScorer);\n             }\n             this.subQueryScorer = subQueryScorer;\n+            this.boost = boost;\n             this.explanation = explanation;\n         }\n \n         @Override\n         public float score() throws IOException {\n             int docId = docID();\n             scoreScript.setDocument(docId);\n-            float score = (float) scoreScript.execute(explanation);\n+            float score = (float) scoreScript.execute(explanation) * boost;\n             if (score == Float.NEGATIVE_INFINITY || Float.isNaN(score)) {\n                 throw new ElasticsearchException(\n                     \"script_score query returned an invalid score [\" + score + \"] for doc [\" + docId + \"].\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8313e2dea0abd143734ce6d44070fad32debbb"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3NjQxMQ==", "bodyText": "I'd suggest wrapping the explanation instead of modifying it in-place: create the scorer with boost=1f a couple lines above, and then here:\nif (boost != 1f) {\n    explanation = Explanation.match(boost * explanation.getValue().floatValue(), \"Boosted score, product of:\",\n        Explanation.match(boost, \"boost\"),\n        explanation);\n}", "url": "https://github.com/elastic/elasticsearch/pull/52478#discussion_r382476411", "createdAt": "2020-02-21T09:24:29Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreQuery.java", "diffHunk": "@@ -143,7 +148,12 @@ public Explanation explain(LeafReaderContext context, int doc) throws IOExceptio\n                         explanation = Explanation.match(score, desc);\n                     }\n                 }\n-                \n+                if (boost != 1.0f) {\n+                    List<Explanation> subs = new ArrayList<>();\n+                    subs.addAll(Arrays.asList(explanation.getDetails()));\n+                    subs.add(Explanation.match(boost, \"boost\"));\n+                    explanation = Explanation.match(explanation.getValue(), explanation.getDescription(), subs);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8313e2dea0abd143734ce6d44070fad32debbb"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96db563f4c5eb0e3c9e694976db0c2b65ed2dd9b", "author": {"user": {"login": "mayya-sharipova", "name": "Mayya Sharipova"}}, "url": "https://github.com/elastic/elasticsearch/commit/96db563f4c5eb0e3c9e694976db0c2b65ed2dd9b", "committedDate": "2020-02-24T13:51:22Z", "message": "Address Feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c16c4446b86322131a4dac8af367f81f9b2680ee", "author": {"user": {"login": "mayya-sharipova", "name": "Mayya Sharipova"}}, "url": "https://github.com/elastic/elasticsearch/commit/c16c4446b86322131a4dac8af367f81f9b2680ee", "committedDate": "2020-02-24T14:04:09Z", "message": "Remove unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8882f397ecc1f1231b465b881a25e6781db52467", "author": {"user": {"login": "mayya-sharipova", "name": "Mayya Sharipova"}}, "url": "https://github.com/elastic/elasticsearch/commit/8882f397ecc1f1231b465b881a25e6781db52467", "committedDate": "2020-02-24T14:41:58Z", "message": "Merge remote-tracking branch 'upstream/master' into script_score_boost"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MjEwNTky", "url": "https://github.com/elastic/elasticsearch/pull/52478#pullrequestreview-368210592", "createdAt": "2020-03-03T18:14:48Z", "commit": {"oid": "8882f397ecc1f1231b465b881a25e6781db52467"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxODoxNDo0OVrOFxQ_7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxODoxNDo0OVrOFxQ_7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwMzA1NQ==", "bodyText": "@mayya-sharipova it looks like this PR also fixed a bug in script_score queries where we allowed negative scores. I think we should add a note to the breaking changes docs and also update the PR description to make it clear we included this change.", "url": "https://github.com/elastic/elasticsearch/pull/52478#discussion_r387203055", "createdAt": "2020-03-03T18:14:49Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreQuery.java", "diffHunk": "@@ -221,12 +225,13 @@ public float score() throws IOException {\n             int docId = docID();\n             scoreScript.setDocument(docId);\n             float score = (float) scoreScript.execute(explanation);\n-            if (score == Float.NEGATIVE_INFINITY || Float.isNaN(score)) {\n-                throw new ElasticsearchException(\n-                    \"script_score query returned an invalid score [\" + score + \"] for doc [\" + docId + \"].\");\n+            if (score < 0f || Float.isNaN(score)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8882f397ecc1f1231b465b881a25e6781db52467"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2380, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}