{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMTA0OTYy", "number": 57813, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzozNToyNlrOEDc0Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo0Mzo1NVrOEDdEcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDUzMzIzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzozNToyNlrOGgeYwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo1NjowNFrOGgfjbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwNTQ3NA==", "bodyText": "I think we should avoid putting null values into the map (in particular as ShardGenerations.Builder.put does not seem to define @Nullable String generation, and the semantics of putting null into map can be problematic, as the Map interface says the behavior is underspecified whether a NPE is thrown). I would prefer a boolean method here with conditional logic", "url": "https://github.com/elastic/elasticsearch/pull/57813#discussion_r436705474", "createdAt": "2020-06-08T13:35:26Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "diffHunk": "@@ -615,7 +619,9 @@ public static RepositoryData snapshotsFromXContent(final XContentParser parser,\n                         assert indexId != null;\n                         indexSnapshots.put(indexId, Collections.unmodifiableList(snapshotIds));\n                         for (int i = 0; i < gens.size(); i++) {\n-                            shardGenerations.put(indexId, i, gens.get(i));\n+                            final String parsedGen = gens.get(i);\n+                            shardGenerations.put(\n+                                    indexId, i, fixBrokenShardGens ? ShardGenerations.fixShardGeneration(parsedGen) : parsedGen);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61b60867517b54cc892ebc1b230cced965ab2e2b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcyNDU4OA==", "bodyText": "++ done", "url": "https://github.com/elastic/elasticsearch/pull/57813#discussion_r436724588", "createdAt": "2020-06-08T13:56:04Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "diffHunk": "@@ -615,7 +619,9 @@ public static RepositoryData snapshotsFromXContent(final XContentParser parser,\n                         assert indexId != null;\n                         indexSnapshots.put(indexId, Collections.unmodifiableList(snapshotIds));\n                         for (int i = 0; i < gens.size(); i++) {\n-                            shardGenerations.put(indexId, i, gens.get(i));\n+                            final String parsedGen = gens.get(i);\n+                            shardGenerations.put(\n+                                    indexId, i, fixBrokenShardGens ? ShardGenerations.fixShardGeneration(parsedGen) : parsedGen);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwNTQ3NA=="}, "originalCommit": {"oid": "61b60867517b54cc892ebc1b230cced965ab2e2b"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDU3NDU3OnYy", "diffSide": "RIGHT", "path": "test/framework/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreTestUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo0Mzo1NVrOGgex7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo1NDoxOVrOGgfcOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcxMTkxNw==", "bodyText": "why true here?", "url": "https://github.com/elastic/elasticsearch/pull/57813#discussion_r436711917", "createdAt": "2020-06-08T13:43:55Z", "author": {"login": "ywelsch"}, "path": "test/framework/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreTestUtil.java", "diffHunk": "@@ -129,7 +129,7 @@ public static void assertConsistency(BlobStoreRepository repository, Executor ex\n                 try (InputStream blob = blobContainer.readBlob(\"index-\" + latestGen);\n                      XContentParser parser = XContentType.JSON.xContent().createParser(NamedXContentRegistry.EMPTY,\n                          LoggingDeprecationHandler.INSTANCE, blob)) {\n-                    repositoryData = RepositoryData.snapshotsFromXContent(parser, latestGen);\n+                    repositoryData = RepositoryData.snapshotsFromXContent(parser, latestGen, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61b60867517b54cc892ebc1b230cced965ab2e2b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcyMjc0Ng==", "bodyText": "Right my bad no reason to be lenient here ... moved to false.", "url": "https://github.com/elastic/elasticsearch/pull/57813#discussion_r436722746", "createdAt": "2020-06-08T13:54:19Z", "author": {"login": "original-brownbear"}, "path": "test/framework/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreTestUtil.java", "diffHunk": "@@ -129,7 +129,7 @@ public static void assertConsistency(BlobStoreRepository repository, Executor ex\n                 try (InputStream blob = blobContainer.readBlob(\"index-\" + latestGen);\n                      XContentParser parser = XContentType.JSON.xContent().createParser(NamedXContentRegistry.EMPTY,\n                          LoggingDeprecationHandler.INSTANCE, blob)) {\n-                    repositoryData = RepositoryData.snapshotsFromXContent(parser, latestGen);\n+                    repositoryData = RepositoryData.snapshotsFromXContent(parser, latestGen, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcxMTkxNw=="}, "originalCommit": {"oid": "61b60867517b54cc892ebc1b230cced965ab2e2b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3629, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}