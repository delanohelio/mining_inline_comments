{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNTU2ODY0", "number": 54008, "title": "Scripting: stats per context in nodes stats", "bodyText": "Adds script cache stats to _node/stats.\nIf using the general cache:\n      \"script_cache\": {\n        \"sum\": {\n          \"compilations\": 12,\n          \"cache_evictions\": 9,\n          \"compilation_limit_triggered\": 5\n        }\n      }\n\n\nIf using context caches:\n      \"script_cache\": {       \n        \"sum\": {                 \n          \"compilations\": 13,                \n          \"cache_evictions\": 9,\n          \"compilation_limit_triggered\": 5\n        },                                \n        \"contexts\": [         \n          {                      \n            \"context\": \"aggregation_selector\",\n            \"compilations\": 8,\n            \"cache_evictions\": 6,\n            \"compilation_limit_triggered\": 3\n          },                  \n          {                      \n            \"context\": \"aggs\",              \n            \"compilations\": 5,\n            \"cache_evictions\": 3,\n            \"compilation_limit_triggered\": 2\n          },                  \n\nRefs: #50152", "createdAt": "2020-03-23T18:18:10Z", "url": "https://github.com/elastic/elasticsearch/pull/54008", "merged": true, "mergeCommit": {"oid": "32f46f2214808c0b2c2271bf977f2f08fe6d6fbc"}, "closed": true, "closedAt": "2020-03-26T22:53:17Z", "author": {"login": "stu-elastic"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQidZSgH2gAyMzkyNTU2ODY0OjQwYWE1ODVhYzRmODZmMjc0ZjA4YzA2ZTA2OTNmOWZjMmM5MzhiNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRi4E2gFqTM4MjQyOTM5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "40aa585ac4f86f274f08c06e0693f9fc2c938b70", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/40aa585ac4f86f274f08c06e0693f9fc2c938b70", "committedDate": "2020-03-23T18:17:45Z", "message": "Scripting: stats per context in nodes stats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89b93111fa66f5838a0f3ec2286029d653f54eb2", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/89b93111fa66f5838a0f3ec2286029d653f54eb2", "committedDate": "2020-03-23T19:19:44Z", "message": "ScriptContextStats -> ScriptCacheStats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3dd8a33c5ed6acf0b7ccbc841130378739fd479", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/b3dd8a33c5ed6acf0b7ccbc841130378739fd479", "committedDate": "2020-03-23T20:46:19Z", "message": "scriptCache -> script_cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3f93be3b2a80d270210b08d4d67ee9d0124e127", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/e3f93be3b2a80d270210b08d4d67ee9d0124e127", "committedDate": "2020-03-23T23:45:53Z", "message": "Avoid duplicating COMPILATIONS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11fdb994c664af45ce750bad4e4105e7a8f4f248", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/11fdb994c664af45ce750bad4e4105e7a8f4f248", "committedDate": "2020-03-23T23:59:47Z", "message": "Merge branch 'master' of github.com:elastic/elasticsearch into fix/50152-painless-limit-per-context__06__stats-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "322b061b8ffda11493036f88379b2364bd7b7112", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/322b061b8ffda11493036f88379b2364bd7b7112", "committedDate": "2020-03-24T00:15:38Z", "message": "Fix merge conflicts in CacheHolder.cacheStats"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNDQ4Njk1", "url": "https://github.com/elastic/elasticsearch/pull/54008#pullrequestreview-380448695", "createdAt": "2020-03-24T15:52:31Z", "commit": {"oid": "322b061b8ffda11493036f88379b2364bd7b7112"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNTo1MjozMVrOF628rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjoyNjozNlrOF64myA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI2MTk5OA==", "bodyText": "Will this become onOrAfter(Version.V_7_7_0) once bwc tests are handled?", "url": "https://github.com/elastic/elasticsearch/pull/54008#discussion_r397261998", "createdAt": "2020-03-24T15:52:31Z", "author": {"login": "williamrandolph"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java", "diffHunk": "@@ -108,6 +113,11 @@ public NodeStats(StreamInput in) throws IOException {\n         discoveryStats = in.readOptionalWriteable(DiscoveryStats::new);\n         ingestStats = in.readOptionalWriteable(IngestStats::new);\n         adaptiveSelectionStats = in.readOptionalWriteable(AdaptiveSelectionStats::new);\n+        if (in.getVersion().after(Version.V_7_7_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "322b061b8ffda11493036f88379b2364bd7b7112"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI4OTE2MA==", "bodyText": "I think it would be less confusing if this value matched the parameter in NodeStatsRequest (i.e. script_cache). I think in all other cases the option in the request matches the key in the response.", "url": "https://github.com/elastic/elasticsearch/pull/54008#discussion_r397289160", "createdAt": "2020-03-24T16:26:36Z", "author": {"login": "williamrandolph"}, "path": "server/src/main/java/org/elasticsearch/script/ScriptCacheStats.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.script;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.common.xcontent.ToXContentFragment;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+public class ScriptCacheStats implements Writeable, ToXContentFragment {\n+    private final Map<String,ScriptStats> context;\n+    private final ScriptStats general;\n+\n+    public ScriptCacheStats(Map<String, ScriptStats> context) {\n+        this.context = Collections.unmodifiableMap(context);\n+        this.general = null;\n+    }\n+\n+    public ScriptCacheStats(ScriptStats general) {\n+        this.general = Objects.requireNonNull(general);\n+        this.context = null;\n+    }\n+\n+    public ScriptCacheStats(StreamInput in) throws IOException {\n+        boolean isContext = in.readBoolean();\n+        if (isContext) {\n+            general = new ScriptStats(in);\n+            context = null;\n+            return;\n+        }\n+\n+        general = null;\n+        int size = in.readInt();\n+        Map<String,ScriptStats> context = new HashMap<>(size);\n+        for (int i=0; i < size; i++) {\n+            String name = in.readString();\n+            context.put(name, new ScriptStats(in));\n+        }\n+        this.context = Collections.unmodifiableMap(context);\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        if (general != null) {\n+            out.writeBoolean(false);\n+            general.writeTo(out);\n+            return;\n+        }\n+\n+        out.writeBoolean(true);\n+        out.writeInt(context.size());\n+        for (String name: context.keySet().stream().sorted().collect(Collectors.toList())) {\n+            out.writeString(name);\n+            context.get(name).writeTo(out);\n+        }\n+    }\n+\n+    @Override\n+    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n+        builder.startObject(Fields.SCRIPT_CONTEXT_STATS);\n+        builder.startObject(Fields.SUM);\n+        if (general != null) {\n+            builder.field(ScriptStats.Fields.COMPILATIONS, general.getCompilations());\n+            builder.field(ScriptStats.Fields.CACHE_EVICTIONS, general.getCacheEvictions());\n+            builder.field(ScriptStats.Fields.COMPILATION_LIMIT_TRIGGERED, general.getCompilationLimitTriggered());\n+            builder.endObject().endObject();\n+            return builder;\n+        }\n+\n+        ScriptStats sum = ScriptStats.sum(context.values());\n+        builder.field(ScriptStats.Fields.COMPILATIONS, sum.getCompilations());\n+        builder.field(ScriptStats.Fields.CACHE_EVICTIONS, sum.getCacheEvictions());\n+        builder.field(ScriptStats.Fields.COMPILATION_LIMIT_TRIGGERED, sum.getCompilationLimitTriggered());\n+        builder.endObject();\n+\n+        builder.startArray(Fields.CONTEXTS);\n+        for (String name: context.keySet().stream().sorted().collect(Collectors.toList())) {\n+            ScriptStats stats = context.get(name);\n+            builder.startObject();\n+            builder.field(Fields.CONTEXT, name);\n+            builder.field(ScriptStats.Fields.COMPILATIONS, stats.getCompilations());\n+            builder.field(ScriptStats.Fields.CACHE_EVICTIONS, stats.getCacheEvictions());\n+            builder.field(ScriptStats.Fields.COMPILATION_LIMIT_TRIGGERED, stats.getCompilationLimitTriggered());\n+            builder.endObject();\n+        }\n+        builder.endArray();\n+        builder.endObject();\n+\n+        return builder;\n+    }\n+\n+    static final class Fields {\n+        static final String SCRIPT_CONTEXT_STATS = \"script_context\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "322b061b8ffda11493036f88379b2364bd7b7112"}, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85cb4e850755bb8ea2aa4abfcebe446ec01b4b0b", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/85cb4e850755bb8ea2aa4abfcebe446ec01b4b0b", "committedDate": "2020-03-24T16:43:18Z", "message": "script_context -> script_cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad1dc9fb8dbbd86c0168d2de257407ac2280d565", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/ad1dc9fb8dbbd86c0168d2de257407ac2280d565", "committedDate": "2020-03-24T20:44:03Z", "message": "Merge branch 'master' of github.com:elastic/elasticsearch into fix/50152-painless-limit-per-context__06__stats-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a2c96dd54f0d10ba758b9be63c2d73e136aa088", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/3a2c96dd54f0d10ba758b9be63c2d73e136aa088", "committedDate": "2020-03-25T19:57:09Z", "message": "Merge branch 'master' of github.com:elastic/elasticsearch into fix/50152-painless-limit-per-context__06__stats-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01bd2eea48de784e7897bf260125174ca4a9ec82", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/01bd2eea48de784e7897bf260125174ca4a9ec82", "committedDate": "2020-03-26T16:05:19Z", "message": "Merge branch 'master' of github.com:elastic/elasticsearch into fix/50152-painless-limit-per-context__06__stats-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e31f1a9fd8089f4f02566cd18161e5b924cc88d", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/6e31f1a9fd8089f4f02566cd18161e5b924cc88d", "committedDate": "2020-03-26T17:39:19Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7eaa01af885df3cbe8f8d2f2a704a396fd4d1b85", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/7eaa01af885df3cbe8f8d2f2a704a396fd4d1b85", "committedDate": "2020-03-26T18:27:35Z", "message": "Test sum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbe5678cef61203aa7241acf58ed1ffe397e28a0", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/bbe5678cef61203aa7241acf58ed1ffe397e28a0", "committedDate": "2020-03-26T18:49:29Z", "message": "Merge branch 'master' of github.com:elastic/elasticsearch into fix/50152-painless-limit-per-context__06__stats-api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDIzMDU0", "url": "https://github.com/elastic/elasticsearch/pull/54008#pullrequestreview-382423054", "createdAt": "2020-03-26T21:10:36Z", "commit": {"oid": "bbe5678cef61203aa7241acf58ed1ffe397e28a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDI5Mzk5", "url": "https://github.com/elastic/elasticsearch/pull/54008#pullrequestreview-382429399", "createdAt": "2020-03-26T21:20:50Z", "commit": {"oid": "bbe5678cef61203aa7241acf58ed1ffe397e28a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1812, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}