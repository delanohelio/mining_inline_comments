{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NjQwMzQ5", "number": 64521, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNjoxMjozMFrOE1uvCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoxMDo1OFrOE2Bjlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0Nzc1NjkxOnYy", "diffSide": "RIGHT", "path": "test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNjoxMjozMFrOHuKzbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNjoxMjozMFrOHuKzbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE3MzU0OQ==", "bodyText": "This looks fishy but it's similar situation as we had before - ILM history index could pop up just after deleting all indices and it didn't do any harm", "url": "https://github.com/elastic/elasticsearch/pull/64521#discussion_r518173549", "createdAt": "2020-11-05T16:12:30Z", "author": {"login": "probakowski"}, "path": "test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java", "diffHunk": "@@ -646,7 +646,8 @@ private void wipeCluster() throws Exception {\n     protected static void wipeAllIndices() throws IOException {\n         boolean includeHidden = minimumNodeVersion().onOrAfter(Version.V_7_7_0);\n         try {\n-            final Request deleteRequest = new Request(\"DELETE\", \"*\");\n+            //remove all indices except ilm history which can pop up after deleting all data streams but shouldn't interfere\n+            final Request deleteRequest = new Request(\"DELETE\", \"*,-.ds-ilm-history-*\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52330f2813dca52777d557fa1e66dc5045921e2c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDg0MDU0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/history/ILMHistoryStore.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoxMDo1OFrOHun5fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDo1NjoyMVrOHwBSIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1MDIzOQ==", "bodyText": "I don't think we need this check here as well.\nIs this meant to catch the case when the ilm history was disabled between the time putAsync was called and the bulk was actually executed? If so, I think it'd be fine to allow it to go through as opposed to failing (and the next putAsync call will not record any history items anymore)\nIf we do decide to keep it I believe the exception should report the items it had not indexed.\nWhat do you think?", "url": "https://github.com/elastic/elasticsearch/pull/64521#discussion_r518650239", "createdAt": "2020-11-06T10:10:58Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/history/ILMHistoryStore.java", "diffHunk": "@@ -75,18 +65,12 @@ public ILMHistoryStore(Settings nodeSettings, Client client, ClusterService clus\n             new BulkProcessor.Listener() {\n                 @Override\n                 public void beforeBulk(long executionId, BulkRequest request) {\n-                    // Prior to actually performing the bulk, we should ensure the index exists, and\n-                    // if we were unable to create it or it was in a bad state, we should not\n-                    // attempt to index documents.\n-                    try {\n-                        final CompletableFuture<Boolean> indexCreated = new CompletableFuture<>();\n-                        ensureHistoryIndex(client, clusterService.state(), ActionListener.wrap(indexCreated::complete,\n-                            ex -> {\n-                                logger.warn(\"failed to create ILM history store index prior to issuing bulk request\", ex);\n-                                indexCreated.completeExceptionally(ex);\n-                            }));\n-                        indexCreated.get(2, TimeUnit.MINUTES);\n-                    } catch (Exception e) {\n+                    if (ilmHistoryEnabled == false) {\n+                        throw new ElasticsearchException(\"can not index ILM history items when ILM history is disabled\");\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52330f2813dca52777d557fa1e66dc5045921e2c"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA2MDE3MA==", "bodyText": "Since the indices.lifecycle.history_index_enabled setting is not dynamic, I don't think we need this check (since putAsync will always punt)", "url": "https://github.com/elastic/elasticsearch/pull/64521#discussion_r520060170", "createdAt": "2020-11-09T19:18:11Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/history/ILMHistoryStore.java", "diffHunk": "@@ -75,18 +65,12 @@ public ILMHistoryStore(Settings nodeSettings, Client client, ClusterService clus\n             new BulkProcessor.Listener() {\n                 @Override\n                 public void beforeBulk(long executionId, BulkRequest request) {\n-                    // Prior to actually performing the bulk, we should ensure the index exists, and\n-                    // if we were unable to create it or it was in a bad state, we should not\n-                    // attempt to index documents.\n-                    try {\n-                        final CompletableFuture<Boolean> indexCreated = new CompletableFuture<>();\n-                        ensureHistoryIndex(client, clusterService.state(), ActionListener.wrap(indexCreated::complete,\n-                            ex -> {\n-                                logger.warn(\"failed to create ILM history store index prior to issuing bulk request\", ex);\n-                                indexCreated.completeExceptionally(ex);\n-                            }));\n-                        indexCreated.get(2, TimeUnit.MINUTES);\n-                    } catch (Exception e) {\n+                    if (ilmHistoryEnabled == false) {\n+                        throw new ElasticsearchException(\"can not index ILM history items when ILM history is disabled\");\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1MDIzOQ=="}, "originalCommit": {"oid": "52330f2813dca52777d557fa1e66dc5045921e2c"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExNDcyMA==", "bodyText": "You are right, I've removed it", "url": "https://github.com/elastic/elasticsearch/pull/64521#discussion_r520114720", "createdAt": "2020-11-09T20:56:21Z", "author": {"login": "probakowski"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/history/ILMHistoryStore.java", "diffHunk": "@@ -75,18 +65,12 @@ public ILMHistoryStore(Settings nodeSettings, Client client, ClusterService clus\n             new BulkProcessor.Listener() {\n                 @Override\n                 public void beforeBulk(long executionId, BulkRequest request) {\n-                    // Prior to actually performing the bulk, we should ensure the index exists, and\n-                    // if we were unable to create it or it was in a bad state, we should not\n-                    // attempt to index documents.\n-                    try {\n-                        final CompletableFuture<Boolean> indexCreated = new CompletableFuture<>();\n-                        ensureHistoryIndex(client, clusterService.state(), ActionListener.wrap(indexCreated::complete,\n-                            ex -> {\n-                                logger.warn(\"failed to create ILM history store index prior to issuing bulk request\", ex);\n-                                indexCreated.completeExceptionally(ex);\n-                            }));\n-                        indexCreated.get(2, TimeUnit.MINUTES);\n-                    } catch (Exception e) {\n+                    if (ilmHistoryEnabled == false) {\n+                        throw new ElasticsearchException(\"can not index ILM history items when ILM history is disabled\");\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1MDIzOQ=="}, "originalCommit": {"oid": "52330f2813dca52777d557fa1e66dc5045921e2c"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4042, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}