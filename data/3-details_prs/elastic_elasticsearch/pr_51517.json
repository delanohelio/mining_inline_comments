{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3ODgxMTgx", "number": 51517, "title": "Add signing support to SAML IdP", "bodyText": "Adds a new SamlObjectSigner class that can sign messages such as\nauthn Response objects.", "createdAt": "2020-01-28T08:16:51Z", "url": "https://github.com/elastic/elasticsearch/pull/51517", "merged": true, "mergeCommit": {"oid": "bf2dee1ca9d78ffa1419d29952776b598a8ec051"}, "closed": true, "closedAt": "2020-02-12T00:58:16Z", "author": {"login": "tvernum"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_ZNs4gH2gAyMzY3ODgxMTgxOjcwZjhhODIwZTgyZDUxZTA0MGFkMGMwODhhNGM0ZGNlNjkyOWEwZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDTie9gFqTM1Njc1NjExOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "70f8a820e82d51e040ad0c088a4c4dce6929a0d3", "author": {"user": {"login": "tvernum", "name": "Tim Vernum"}}, "url": "https://github.com/elastic/elasticsearch/commit/70f8a820e82d51e040ad0c088a4c4dce6929a0d3", "committedDate": "2020-01-30T11:54:45Z", "message": "Add signing support for SAML IdP Messages\n\nAdds a new \"SamlObjectSigner\" class that can sign messages such as\nauthn Response objects"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "871ac08cd5e18343c6d96e8025c914cda6825d32", "author": {"user": {"login": "tvernum", "name": "Tim Vernum"}}, "url": "https://github.com/elastic/elasticsearch/commit/871ac08cd5e18343c6d96e8025c914cda6825d32", "committedDate": "2020-01-28T08:13:49Z", "message": "Add signing support for SAML IdP Messages\n\nAdds a new \"SamlObjectSigner\" class that can sign messages such as\nauthn Response objects"}, "afterCommit": {"oid": "70f8a820e82d51e040ad0c088a4c4dce6929a0d3", "author": {"user": {"login": "tvernum", "name": "Tim Vernum"}}, "url": "https://github.com/elastic/elasticsearch/commit/70f8a820e82d51e040ad0c088a4c4dce6929a0d3", "committedDate": "2020-01-30T11:54:45Z", "message": "Add signing support for SAML IdP Messages\n\nAdds a new \"SamlObjectSigner\" class that can sign messages such as\nauthn Response objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2762aea85df30d0528cb7d9c1bf393e3cd9c812", "author": {"user": {"login": "tvernum", "name": "Tim Vernum"}}, "url": "https://github.com/elastic/elasticsearch/commit/a2762aea85df30d0528cb7d9c1bf393e3cd9c812", "committedDate": "2020-01-30T12:14:50Z", "message": "Fix line length"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0110de527ce1efdc8adb25cb40eedd0640ccba33", "author": {"user": {"login": "tvernum", "name": "Tim Vernum"}}, "url": "https://github.com/elastic/elasticsearch/commit/0110de527ce1efdc8adb25cb40eedd0640ccba33", "committedDate": "2020-01-30T12:27:44Z", "message": "Fix imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDU1Nzc1", "url": "https://github.com/elastic/elasticsearch/pull/51517#pullrequestreview-351455775", "createdAt": "2020-01-31T11:50:46Z", "commit": {"oid": "0110de527ce1efdc8adb25cb40eedd0640ccba33"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMTo1MDo0NlrOFkJJzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMzowNDo0OFrOFkKwQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ0MzAyMw==", "bodyText": "We could still just deal with SignableXMLObjects here only. We only need to marshal the object, but we don't need to actually use the returned Element as marshalling is also setting the DOM in the object ( see here\n        samlFactory.toDomElement(object);\n        try {\n            Signer.signObject(signature);\n        } catch (SignatureException e) {\n            throw new ElasticsearchException(\"failed to sign SAML object \" + object, e);\n        }\n        return object;", "url": "https://github.com/elastic/elasticsearch/pull/51517#discussion_r373443023", "createdAt": "2020-01-31T11:50:46Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/identity-provider/src/main/java/org/elasticsearch/xpack/idp/saml/support/SamlObjectSigner.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.idp.saml.support;\n+\n+import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.xpack.idp.saml.idp.SamlIdentityProvider;\n+import org.opensaml.xmlsec.signature.SignableXMLObject;\n+import org.opensaml.xmlsec.signature.Signature;\n+import org.opensaml.xmlsec.signature.support.SignatureConstants;\n+import org.opensaml.xmlsec.signature.support.SignatureException;\n+import org.opensaml.xmlsec.signature.support.Signer;\n+import org.w3c.dom.Element;\n+\n+/**\n+ * Signs OpenSAML {@link SignableXMLObject} instances using {@link SamlIdentityProvider#getSigningCredential()}.\n+ */\n+public class SamlObjectSigner {\n+\n+    private final SamlFactory samlFactory;\n+    private final SamlIdentityProvider idp;\n+\n+    public SamlObjectSigner(SamlFactory samlFactory, SamlIdentityProvider idp) {\n+        this.samlFactory = samlFactory;\n+        this.idp = idp;\n+    }\n+\n+    public Element sign(SignableXMLObject object) {\n+        final Signature signature = samlFactory.object(Signature.class, Signature.DEFAULT_ELEMENT_NAME);\n+        signature.setSigningCredential(idp.getSigningCredential());\n+        signature.setSignatureAlgorithm(SignatureConstants.ALGO_ID_SIGNATURE_RSA_SHA256);\n+        signature.setCanonicalizationAlgorithm(SignatureConstants.ALGO_ID_C14N_EXCL_OMIT_COMMENTS);\n+        object.setSignature(signature);\n+        Element element = samlFactory.toDomElement(object);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0110de527ce1efdc8adb25cb40eedd0640ccba33"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2OTI0OA==", "bodyText": "I know we test sign in SuccessfulAuthenticationResponseMessageBuilderTests.java too but could we add a test that signs and validates a SAML Response which will be our main use case?", "url": "https://github.com/elastic/elasticsearch/pull/51517#discussion_r373469248", "createdAt": "2020-01-31T13:04:48Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/identity-provider/src/test/java/org/elasticsearch/xpack/idp/saml/support/SamlObjectSignerTests.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.idp.saml.support;\n+\n+import org.elasticsearch.xpack.core.security.support.RestorableContextClassLoader;\n+import org.elasticsearch.xpack.idp.saml.idp.SamlIdentityProvider;\n+import org.elasticsearch.xpack.idp.saml.test.IdpSamlTestCase;\n+import org.hamcrest.Matchers;\n+import org.joda.time.DateTime;\n+import org.mockito.Mockito;\n+import org.opensaml.saml.saml2.core.Issuer;\n+import org.opensaml.saml.saml2.core.LogoutRequest;\n+import org.opensaml.saml.saml2.core.NameID;\n+import org.opensaml.saml.saml2.core.NameIDType;\n+import org.opensaml.security.x509.X509Credential;\n+import org.opensaml.xmlsec.signature.support.SignatureException;\n+import org.opensaml.xmlsec.signature.support.SignatureValidator;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class SamlObjectSignerTests extends IdpSamlTestCase {\n+\n+    public void testSignLogoutRequest() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0110de527ce1efdc8adb25cb40eedd0640ccba33"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e39020ab9e78ef77273f5f538e16d45cfddd733e", "author": {"user": {"login": "tvernum", "name": "Tim Vernum"}}, "url": "https://github.com/elastic/elasticsearch/commit/e39020ab9e78ef77273f5f538e16d45cfddd733e", "committedDate": "2020-02-11T12:43:01Z", "message": "Add extra test for authn Response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68b5f555fa3d7759aaf7383a5b4f24835c41a01d", "author": {"user": {"login": "tvernum", "name": "Tim Vernum"}}, "url": "https://github.com/elastic/elasticsearch/commit/68b5f555fa3d7759aaf7383a5b4f24835c41a01d", "committedDate": "2020-02-11T12:44:48Z", "message": "Merge branch 'feature-internal-idp' into idp/signing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ece53ad9374be437739d30782a4a2a45caa3213c", "author": {"user": {"login": "tvernum", "name": "Tim Vernum"}}, "url": "https://github.com/elastic/elasticsearch/commit/ece53ad9374be437739d30782a4a2a45caa3213c", "committedDate": "2020-02-11T13:26:35Z", "message": "Merge branch 'feature-internal-idp' into idp/signing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NzU2MTE4", "url": "https://github.com/elastic/elasticsearch/pull/51517#pullrequestreview-356756118", "createdAt": "2020-02-11T15:33:43Z", "commit": {"oid": "ece53ad9374be437739d30782a4a2a45caa3213c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3167, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}