{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NDg3Nzgy", "number": 58327, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDowMTowNVrOEGw7Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDowNDowNlrOEGxAMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTI4NDU5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDowMTowNVrOGlwwGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDowMTowNVrOGlwwGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI0OTI0Mg==", "bodyText": "Minor error message suggestion -- I think \"aliases driven operations\" should be either \"alias-driven operations\" or just \"alias operations.\" I prefer the latter as it's simple and clear.", "url": "https://github.com/elastic/elasticsearch/pull/58327#discussion_r442249242", "createdAt": "2020-06-18T14:01:05Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesService.java", "diffHunk": "@@ -187,4 +189,13 @@ public ClusterState applyAliasActions(ClusterState currentState, Iterable<AliasA\n         }\n     }\n \n+    private void validateAliasTargetIsNotDSBackingIndex(ClusterState currentState, AliasAction action) {\n+        IndexAbstraction indexAbstraction = currentState.metadata().getIndicesLookup().get(action.getIndex());\n+        assert indexAbstraction != null : \"invalid cluster metadata. index [\" + action.getIndex() + \"] was not found\";\n+        if (indexAbstraction.getParentDataStream() != null) {\n+            throw new IllegalArgumentException(\"The provided index [ \" + action.getIndex()\n+                + \"] is a backing index belonging to data stream [\" + indexAbstraction.getParentDataStream().getName()\n+                + \"]. data streams and their backing indices don't support aliases driven operations.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72bef663465998b3e5c47cce86a043762023afd4"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTI5NTY3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDowMzo0MVrOGlw3Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDowMzo0MVrOGlw3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI1MTA2Mw==", "bodyText": "Minor: We're inconsistent across the codebase in whether we capitalize our error messages, but I think we should be consistent within a single error message. In other words, either make \"The provided...\" lowercase or capitalize the second sentence:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    + \"]. data streams and their backing indices don't support aliases.\");\n          \n          \n            \n                                    + \"]. Data streams and their backing indices don't support aliases.\");", "url": "https://github.com/elastic/elasticsearch/pull/58327#discussion_r442251063", "createdAt": "2020-06-18T14:03:41Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java", "diffHunk": "@@ -110,16 +111,26 @@ protected void masterOperation(Task task, final IndicesAliasesRequest request, f\n         //Expand the indices names\n         List<AliasActions> actions = request.aliasActions();\n         List<AliasAction> finalActions = new ArrayList<>();\n-\n         // Resolve all the AliasActions into AliasAction instances and gather all the aliases\n         Set<String> aliases = new HashSet<>();\n         for (AliasActions action : actions) {\n-            final Index[] concreteIndices = indexNameExpressionResolver.concreteIndices(state, request.indicesOptions(), action.indices());\n+            final Index[] concreteIndices = indexNameExpressionResolver.concreteIndices(state, request.indicesOptions(), false,\n+                action.indices());\n+            for (Index concreteIndex : concreteIndices) {\n+                IndexAbstraction indexAbstraction = state.metadata().getIndicesLookup().get(concreteIndex.getName());\n+                assert indexAbstraction != null : \"invalid cluster metadata. index [\" + concreteIndex.getName() + \"] was not found\";\n+                if (indexAbstraction.getParentDataStream() != null) {\n+                    throw new IllegalArgumentException(\"The provided expressions [\" + String.join(\",\", action.indices())\n+                        + \"] match a backing index belonging to data stream [\" + indexAbstraction.getParentDataStream().getName()\n+                        + \"]. data streams and their backing indices don't support aliases.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72bef663465998b3e5c47cce86a043762023afd4"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTI5Nzc3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDowNDowNlrOGlw4gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDowNDowNlrOGlw4gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI1MTM5Mg==", "bodyText": "Same thing about capitalization here.", "url": "https://github.com/elastic/elasticsearch/pull/58327#discussion_r442251392", "createdAt": "2020-06-18T14:04:06Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesService.java", "diffHunk": "@@ -187,4 +189,13 @@ public ClusterState applyAliasActions(ClusterState currentState, Iterable<AliasA\n         }\n     }\n \n+    private void validateAliasTargetIsNotDSBackingIndex(ClusterState currentState, AliasAction action) {\n+        IndexAbstraction indexAbstraction = currentState.metadata().getIndicesLookup().get(action.getIndex());\n+        assert indexAbstraction != null : \"invalid cluster metadata. index [\" + action.getIndex() + \"] was not found\";\n+        if (indexAbstraction.getParentDataStream() != null) {\n+            throw new IllegalArgumentException(\"The provided index [ \" + action.getIndex()\n+                + \"] is a backing index belonging to data stream [\" + indexAbstraction.getParentDataStream().getName()\n+                + \"]. data streams and their backing indices don't support aliases driven operations.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72bef663465998b3e5c47cce86a043762023afd4"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1458, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}