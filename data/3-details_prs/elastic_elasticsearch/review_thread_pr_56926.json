{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzY1MTgx", "number": 56926, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMDozMjozNVrOD9vNcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoxNjo1MlrOD90Zqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDYzMjE5OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "isResolved": false, "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMDozMjozNVrOGXaKlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToyNzoxMFrOGXmAOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw==", "bodyText": "I think it would be better to not extend this Plugin in other PrecommitPlugins but use composition here. So we would have a PreCommit plugin that is applied by all other specific PreCommitPlugins (e.g. the CheckstylePreCommitPlugin). The PreCommitPlugin would only create a 'precommit' task that depends on all tasks of a certain marker type like tasks.withType(PreCommitTask.class). The other specific precommit plugins would only need to ensure that the tasks they create are of type PreCommitTask which can be just common interface.\nAlso this maybeRegister method is relative expensive.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427199127", "createdAt": "2020-05-19T10:32:35Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIwNTA0NA==", "bodyText": "Thinking more about it an alternative would be if the specific PreCommit plugins are just responsible to wire things against the precommit task. That way you could skip the specific common task type. so these plugins would look always like\n...\napply(PreCommitPlugin)\n// register tasks I want to wire\ntasks.named(\"precommit\").configure { dependsOn 'specificTask; }\n...", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427205044", "createdAt": "2020-05-19T10:44:03Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4OTQ1MA==", "bodyText": "I think it would be better to not extend this Plugin in other PrecommitPlugins but use composition here\n\nUsing inheritance allows us ensure the correct wirings happen. With composition, we can forget to hook up the new task to precommit, but with inheritance we enforce this because the class and createTask methods are abstract. Additionally, it wouldn't make sense to have precommit alone, it only makes sense in the context of having a concrete task like forbiddenapis.\n\nThe other specific precommit plugins would only need to ensure that the tasks they create are of type PreCommitTask\n\nWe can't guarantee this since some tasks are external, like forbidden apis or checkstyle.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427289450", "createdAt": "2020-05-19T13:11:11Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzNTMxMg==", "bodyText": "I see. I would still split out the generation of the precommit task to a small (internal) plugin (e.g. PrecommitBase Plugin. By internal I mean we would not need to provide a public id for the plugin or even make it package protected. And here we would just apply this base plugin. This way we\na) ensure this task registration is done in a gradle idiomatic way\nb) ensure its only applied by the specific PreCommit Plugins.\nthis is a common pattern in gradle where a plugin just provides a lifecycle task and other plugins hook into this lifecycle.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427335312", "createdAt": "2020-05-19T14:15:04Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1NjEzMw==", "bodyText": "I think a separate plugin that creates the precommit task might be the way to go as well. Primary reason being that maybeRegister does exception-based flow control, which is incredibly expensive and basically negates all benefits of lazy tasks. In fact, I'd recommend we completely remove that method so folks don't use it. We are throwing hundreds of exceptions here during configuration time. Filling all those stack frames has a big penalty.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427356133", "createdAt": "2020-05-19T14:40:00Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1OTE3Nw==", "bodyText": "I don't know enough yet to understand how much this method is used. But for sure we could deprecate it.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427359177", "createdAt": "2020-05-19T14:43:26Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM2MzI0Mw==", "bodyText": "I believe this is the only usage. Since that is the case we should remove it and find another way here. The findByName method has the same problem. When investigating doing some more lazy task stuff I found that switching creation to registration leveraging findByName was slower due to all the additional exceptions. We should try and get this added to Gradle core in a proper API instead.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427363243", "createdAt": "2020-05-19T14:48:44Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM2NzUxMQ==", "bodyText": "\ud83d\udc4d small general thought on findByName. findByName often is an indicator of weak modelling that can be improved. I think in the build there's a lot of logic that is based on tasks that are around which should be more about what type of project (which plugins are applied) are we dealing with.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427367511", "createdAt": "2020-05-19T14:54:00Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3NTMwNg==", "bodyText": "findByName often is an indicator of weak modelling that can be improved\nThat's definitely true. If you have to check if a task exists that indicates a code smell.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427375306", "createdAt": "2020-05-19T15:03:52Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3NjI4MA==", "bodyText": "After chatting with Ryan I think I'm fine with plugin class extension. I'm less concerned about extending plugins when the superclass is abstract, that at least indicates this is purposeful. Extending non-abstract plugins is a no-no, and composition should be used instead as you say.\nWe can then have the abstract plugin apply a plugin which creates the precommit task that way Gradle handles idempotency for us rather than using maybeRegister.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427376280", "createdAt": "2020-05-19T15:05:11Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4NTEzNQ==", "bodyText": "We can then have the abstract plugin apply a plugin which creates the precommit task that way Gradle handles idempotency for us rather than using maybeRegister.\n\n\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427385135", "createdAt": "2020-05-19T15:16:51Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5MzA4MQ==", "bodyText": "I pushed b5dff57 which no longer uses maybeCreate. Instead we have an inner plugin that creates the task, but we still use inheritance to ensure we don't forget to add a task to it.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427393081", "createdAt": "2020-05-19T15:27:10Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE5OTEyNw=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTQ4MjY3OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoxNjo1MlrOGXikXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToyOTozOVrOGXmHnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzNjc5OA==", "bodyText": "In my opinion we should extract that into a JavaPreCommit plugin. this also ensure this code is not executed more than once per project.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427336798", "createdAt": "2020-05-19T14:16:52Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {\n+    @Override\n+    public final void apply(Project project) {\n+        TaskProvider<? extends Task> task = createTask(project);\n+        TaskProvider<DefaultTask> precommit = GradleUtils.maybeRegister(project.getTasks(), \"precommit\", DefaultTask.class, t -> {\n+            t.setGroup(JavaBasePlugin.VERIFICATION_GROUP);\n+            t.setDescription(\"Runs all non-test checks\");\n+        });\n+        precommit.configure(t -> t.dependsOn(task));\n+\n+        project.getPluginManager().withPlugin(\"java\", p -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5NDk3Mg==", "bodyText": "It's not doing anything extra, there is no java precommit task. This is only ensuring when we have java projects with precommit, we wire up the precommit task in the desired order. I can move it so it is only applied once.", "url": "https://github.com/elastic/elasticsearch/pull/56926#discussion_r427394972", "createdAt": "2020-05-19T15:29:39Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.elasticsearch.gradle.util.GradleUtils;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.artifacts.Dependency;\n+import org.gradle.api.plugins.JavaBasePlugin;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.TaskProvider;\n+import org.gradle.language.base.plugins.LifecycleBasePlugin;\n+\n+/**\n+ * Base plugin for adding a precommit task.\n+ */\n+public abstract class PrecommitPlugin implements Plugin<Project> {\n+    @Override\n+    public final void apply(Project project) {\n+        TaskProvider<? extends Task> task = createTask(project);\n+        TaskProvider<DefaultTask> precommit = GradleUtils.maybeRegister(project.getTasks(), \"precommit\", DefaultTask.class, t -> {\n+            t.setGroup(JavaBasePlugin.VERIFICATION_GROUP);\n+            t.setDescription(\"Runs all non-test checks\");\n+        });\n+        precommit.configure(t -> t.dependsOn(task));\n+\n+        project.getPluginManager().withPlugin(\"java\", p -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzNjc5OA=="}, "originalCommit": {"oid": "9aeca878a3c8302617f0215a950fef45e9e12003"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 368, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}