{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NzgxMDEx", "number": 61943, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzozNzowNVrOEgF3dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzozNzowNVrOEgF3dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDg2MDA2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzozNzowNVrOHMw7ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo1MjoyN1rOHMxcVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0NjYwMg==", "bodyText": "This is a tad nuanced. Could you add a comment here explaining the indirection for object reference reuse in the script parameters?", "url": "https://github.com/elastic/elasticsearch/pull/61943#discussion_r483146602", "createdAt": "2020-09-03T17:37:05Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsManager.java", "diffHunk": "@@ -263,11 +268,25 @@ private void reindexDataframeAndStartAnalysis(DataFrameAnalyticsTask task, DataF\n                 reindexRequest.setRefresh(true);\n                 reindexRequest.setSourceIndices(config.getSource().getIndex());\n                 reindexRequest.setSourceQuery(config.getSource().getParsedQuery());\n+                reindexRequest.getSearchRequest().allowPartialSearchResults(false);\n                 reindexRequest.getSearchRequest().source().fetchSource(config.getSource().getSourceFiltering());\n+                reindexRequest.getSearchRequest().source().sort(SeqNoFieldMapper.NAME, SortOrder.ASC);\n                 reindexRequest.setDestIndex(config.getDest().getIndex());\n-                reindexRequest.setScript(new Script(\"ctx._source.\" + DestinationIndex.ID_COPY + \" = ctx._id\"));\n+\n+                // We explicitly set slices to 1 as we cannot parallelize in order to have the incremental id\n+                reindexRequest.setSlices(1);\n+                Map<String, Object> counterValueParam = new HashMap<>();\n+                counterValueParam.put(\"value\", -1);\n+                reindexRequest.setScript(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d1d2af110a449a3c888d6c3df1496f438b81665"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1NTAyOQ==", "bodyText": "Ah, yes, of course!", "url": "https://github.com/elastic/elasticsearch/pull/61943#discussion_r483155029", "createdAt": "2020-09-03T17:52:27Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsManager.java", "diffHunk": "@@ -263,11 +268,25 @@ private void reindexDataframeAndStartAnalysis(DataFrameAnalyticsTask task, DataF\n                 reindexRequest.setRefresh(true);\n                 reindexRequest.setSourceIndices(config.getSource().getIndex());\n                 reindexRequest.setSourceQuery(config.getSource().getParsedQuery());\n+                reindexRequest.getSearchRequest().allowPartialSearchResults(false);\n                 reindexRequest.getSearchRequest().source().fetchSource(config.getSource().getSourceFiltering());\n+                reindexRequest.getSearchRequest().source().sort(SeqNoFieldMapper.NAME, SortOrder.ASC);\n                 reindexRequest.setDestIndex(config.getDest().getIndex());\n-                reindexRequest.setScript(new Script(\"ctx._source.\" + DestinationIndex.ID_COPY + \" = ctx._id\"));\n+\n+                // We explicitly set slices to 1 as we cannot parallelize in order to have the incremental id\n+                reindexRequest.setSlices(1);\n+                Map<String, Object> counterValueParam = new HashMap<>();\n+                counterValueParam.put(\"value\", -1);\n+                reindexRequest.setScript(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0NjYwMg=="}, "originalCommit": {"oid": "5d1d2af110a449a3c888d6c3df1496f438b81665"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1730, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}