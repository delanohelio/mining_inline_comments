{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNTYzMzYz", "number": 53752, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToyNjoyN1rODpbbyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDoyODo0OVrODpcy7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NzY3NjkxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToyNjoyN1rOF4mM5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToyNjoyN1rOF4mM5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MDQ3MQ==", "bodyText": "The only suggestion I'd make is about whether it's possible to consolidate the log messages. For example:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (parserName != null) {\n          \n          \n            \n                        deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, expected [{}] instead\",\n          \n          \n            \n                            parserName, location.get(), usedName, modernName);\n          \n          \n            \n                    } else {\n          \n          \n            \n                        deprecationLogger.deprecated(\"Deprecated field [{}] used, expected [{}] instead\", usedName, modernName);\n          \n          \n            \n                    }\n          \n          \n            \n                    String prefix = parserName == null ? \"\" :\n          \n          \n            \n                        \"[\" + parserName + \"][\" + location.get() + \"] \";\n          \n          \n            \n                    deprecationLogger.deprecated(\"{}Deprecated field [{}] used, expected [{}] instead\", prefix, usedName, modernName);", "url": "https://github.com/elastic/elasticsearch/pull/53752#discussion_r394890471", "createdAt": "2020-03-19T09:26:27Z", "author": {"login": "pugnascotia"}, "path": "server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java", "diffHunk": "@@ -49,17 +51,33 @@ private LoggingDeprecationHandler() {\n     }\n \n     @Override\n-    public void usedDeprecatedName(String usedName, String modernName) {\n-        deprecationLogger.deprecated(\"Deprecated field [{}] used, expected [{}] instead\", usedName, modernName);\n+    public void usedDeprecatedName(String parserName, Supplier<XContentLocation> location, String usedName, String modernName) {\n+        if (parserName != null) {\n+            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, expected [{}] instead\",\n+                parserName, location.get(), usedName, modernName);\n+        } else {\n+            deprecationLogger.deprecated(\"Deprecated field [{}] used, expected [{}] instead\", usedName, modernName);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d070a61ea17af1f86948efab2fb5e8c4e424ad95"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Nzg5OTk5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDoyODo0OVrOF4ob2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDoyOTo1NFrOF4oeNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyNzA2Nw==", "bodyText": "This doesn't look right \ud83e\udd14", "url": "https://github.com/elastic/elasticsearch/pull/53752#discussion_r394927067", "createdAt": "2020-03-19T10:28:49Z", "author": {"login": "pugnascotia"}, "path": "server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java", "diffHunk": "@@ -52,30 +52,24 @@ private LoggingDeprecationHandler() {\n \n     @Override\n     public void usedDeprecatedName(String parserName, Supplier<XContentLocation> location, String usedName, String modernName) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, expected [{}] instead\",\n-                parserName, location.get(), usedName, modernName);\n-        } else {\n-            deprecationLogger.deprecated(\"Deprecated field [{}] used, expected [{}] instead\", usedName, modernName);\n-        }\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        deprecationLogger.deprecated(\"{}Deprecated field [{}] used, expected [{}] instead\",\n+            prefix, usedName, modernName);\n     }\n \n     @Override\n     public void usedDeprecatedField(String parserName, Supplier<XContentLocation> location, String usedName, String replacedWith) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, replaced by [{}]\",\n-                parserName, location.get(), usedName, replacedWith);\n-        }\n-        else {\n-            deprecationLogger.deprecated(\"Deprecated field [{}] used, replaced by [{}]\", usedName, replacedWith);\n-        }\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        deprecationLogger.deprecated(\"{} Deprecated field [{}] used, replaced by [{}]\",\n+            prefix, usedName, replacedWith);\n     }\n \n     @Override\n     public void usedDeprecatedField(String parserName, Supplier<XContentLocation> location, String usedName) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, this field is unused and will be removed entirely\",\n-                parserName, location.get(), usedName);\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        if (true) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0a74921aaa3390ffc8039b786f90e8d3dc88400"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyNzU2OQ==", "bodyText": "It wasn't!", "url": "https://github.com/elastic/elasticsearch/pull/53752#discussion_r394927569", "createdAt": "2020-03-19T10:29:42Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java", "diffHunk": "@@ -52,30 +52,24 @@ private LoggingDeprecationHandler() {\n \n     @Override\n     public void usedDeprecatedName(String parserName, Supplier<XContentLocation> location, String usedName, String modernName) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, expected [{}] instead\",\n-                parserName, location.get(), usedName, modernName);\n-        } else {\n-            deprecationLogger.deprecated(\"Deprecated field [{}] used, expected [{}] instead\", usedName, modernName);\n-        }\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        deprecationLogger.deprecated(\"{}Deprecated field [{}] used, expected [{}] instead\",\n+            prefix, usedName, modernName);\n     }\n \n     @Override\n     public void usedDeprecatedField(String parserName, Supplier<XContentLocation> location, String usedName, String replacedWith) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, replaced by [{}]\",\n-                parserName, location.get(), usedName, replacedWith);\n-        }\n-        else {\n-            deprecationLogger.deprecated(\"Deprecated field [{}] used, replaced by [{}]\", usedName, replacedWith);\n-        }\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        deprecationLogger.deprecated(\"{} Deprecated field [{}] used, replaced by [{}]\",\n+            prefix, usedName, replacedWith);\n     }\n \n     @Override\n     public void usedDeprecatedField(String parserName, Supplier<XContentLocation> location, String usedName) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, this field is unused and will be removed entirely\",\n-                parserName, location.get(), usedName);\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        if (true) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyNzA2Nw=="}, "originalCommit": {"oid": "e0a74921aaa3390ffc8039b786f90e8d3dc88400"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyNzY3MA==", "bodyText": "Sorry, out-of-date diff \ud83d\ude05", "url": "https://github.com/elastic/elasticsearch/pull/53752#discussion_r394927670", "createdAt": "2020-03-19T10:29:54Z", "author": {"login": "pugnascotia"}, "path": "server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java", "diffHunk": "@@ -52,30 +52,24 @@ private LoggingDeprecationHandler() {\n \n     @Override\n     public void usedDeprecatedName(String parserName, Supplier<XContentLocation> location, String usedName, String modernName) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, expected [{}] instead\",\n-                parserName, location.get(), usedName, modernName);\n-        } else {\n-            deprecationLogger.deprecated(\"Deprecated field [{}] used, expected [{}] instead\", usedName, modernName);\n-        }\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        deprecationLogger.deprecated(\"{}Deprecated field [{}] used, expected [{}] instead\",\n+            prefix, usedName, modernName);\n     }\n \n     @Override\n     public void usedDeprecatedField(String parserName, Supplier<XContentLocation> location, String usedName, String replacedWith) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, replaced by [{}]\",\n-                parserName, location.get(), usedName, replacedWith);\n-        }\n-        else {\n-            deprecationLogger.deprecated(\"Deprecated field [{}] used, replaced by [{}]\", usedName, replacedWith);\n-        }\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        deprecationLogger.deprecated(\"{} Deprecated field [{}] used, replaced by [{}]\",\n+            prefix, usedName, replacedWith);\n     }\n \n     @Override\n     public void usedDeprecatedField(String parserName, Supplier<XContentLocation> location, String usedName) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, this field is unused and will be removed entirely\",\n-                parserName, location.get(), usedName);\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        if (true) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyNzA2Nw=="}, "originalCommit": {"oid": "e0a74921aaa3390ffc8039b786f90e8d3dc88400"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4335, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}