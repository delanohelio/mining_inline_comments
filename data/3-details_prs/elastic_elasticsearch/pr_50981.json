{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNjgyNzc3", "number": 50981, "title": "[7.x][ML] Explicitly require a OriginSettingClient in ML results iterators ", "bodyText": "In classes where the client is used directly rather than through a call to\nexecuteAsyncWithOrigin explicitly require the client to be OriginSettingClient\nrather than using the Client interface.\nAlso remove calls to deprecated ClientHelper.clientWithOrigin() method.\nBackport of #50802", "createdAt": "2020-01-14T15:04:49Z", "url": "https://github.com/elastic/elasticsearch/pull/50981", "merged": true, "mergeCommit": {"oid": "7f309a18f114ec83f4478089c1519264162af88d"}, "closed": true, "closedAt": "2020-01-14T17:14:39Z", "author": {"login": "davidkyle"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6SisDgFqTM0MjYwNjIzOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6S2CVgBqjI5NDc1NTk1OTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNjA2MjM4", "url": "https://github.com/elastic/elasticsearch/pull/50981#pullrequestreview-342606238", "createdAt": "2020-01-14T15:13:10Z", "commit": {"oid": "f31cf7e915966fbf9a1d4aac5a584094fddadf65"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNToxMzoxMVrOFda9Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNToxNzo0NFrOFdbHsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NDcxNA==", "bodyText": "Could this snippet be replaced with an appropriate mockSearchResponse call?", "url": "https://github.com/elastic/elasticsearch/pull/50981#discussion_r366394714", "createdAt": "2020-01-14T15:13:11Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/job/retention/AbstractExpiredJobDataRemoverTests.java", "diffHunk": "@@ -126,13 +140,14 @@ public void testRemoveGivenMultipleBatches() throws IOException {\n \n         AtomicInteger searchCount = new AtomicInteger(0);\n \n-        @SuppressWarnings(\"unchecked\")\n-        ActionFuture<SearchResponse> future = mock(ActionFuture.class);\n-        doAnswer(invocationOnMock -> responses.get(searchCount.getAndIncrement())).when(future).actionGet();\n-        when(client.search(any())).thenReturn(future);\n+        doAnswer(invocationOnMock -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f31cf7e915966fbf9a1d4aac5a584094fddadf65"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NTM1OQ==", "bodyText": "Why is this removed? Are there any new client interactions expected after your change?", "url": "https://github.com/elastic/elasticsearch/pull/50981#discussion_r366395359", "createdAt": "2020-01-14T15:14:17Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/job/retention/ExpiredModelSnapshotsRemoverTests.java", "diffHunk": "@@ -86,25 +91,22 @@ public void testRemove_GivenJobsWithoutRetentionPolicy() throws IOException {\n \n         listener.waitToCompletion();\n         assertThat(listener.success, is(true));\n-        verify(client).search(any());\n-        Mockito.verifyNoMoreInteractions(client);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f31cf7e915966fbf9a1d4aac5a584094fddadf65"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NjE2Mg==", "bodyText": "Could org.mockito.Mockito.mock be imported to avoid qualified name?", "url": "https://github.com/elastic/elasticsearch/pull/50981#discussion_r366396162", "createdAt": "2020-01-14T15:15:39Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/job/retention/ExpiredResultsRemoverTests.java", "diffHunk": "@@ -43,58 +41,48 @@\n public class ExpiredResultsRemoverTests extends ESTestCase {\n \n     private Client client;\n+    private OriginSettingClient originSettingClient;\n     private List<DeleteByQueryRequest> capturedDeleteByQueryRequests;\n     private ActionListener<Boolean> listener;\n \n     @Before\n     @SuppressWarnings(\"unchecked\")\n     public void setUpTests() {\n         capturedDeleteByQueryRequests = new ArrayList<>();\n-        client = mock(Client.class);\n-        ThreadPool threadPool = mock(ThreadPool.class);\n-        when(client.threadPool()).thenReturn(threadPool);\n-        when(threadPool.getThreadContext()).thenReturn(new ThreadContext(Settings.EMPTY));\n-        doAnswer(new Answer<Void>() {\n-                 @Override\n-                 public Void answer(InvocationOnMock invocationOnMock) throws Throwable {\n-                     capturedDeleteByQueryRequests.add((DeleteByQueryRequest) invocationOnMock.getArguments()[1]);\n-                     ActionListener<BulkByScrollResponse> listener =\n-                             (ActionListener<BulkByScrollResponse>) invocationOnMock.getArguments()[2];\n-                     listener.onResponse(null);\n-                     return null;\n-                 }\n-             }).when(client).execute(same(DeleteByQueryAction.INSTANCE), any(), any());\n+\n+        client = org.mockito.Mockito.mock(Client.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f31cf7e915966fbf9a1d4aac5a584094fddadf65"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NjgwNg==", "bodyText": "Please remove blank line.", "url": "https://github.com/elastic/elasticsearch/pull/50981#discussion_r366396806", "createdAt": "2020-01-14T15:16:48Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/test/MockOriginSettingClient.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.ml.test;\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f31cf7e915966fbf9a1d4aac5a584094fddadf65"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NzM2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return A OriginSettingClient using a mocked client\n          \n          \n            \n                 * @return An OriginSettingClient using a mocked client", "url": "https://github.com/elastic/elasticsearch/pull/50981#discussion_r366397361", "createdAt": "2020-01-14T15:17:44Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/test/MockOriginSettingClient.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.ml.test;\n+\n+\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.client.OriginSettingClient;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.mockito.Mockito;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * OriginSettingClient is a final class that cannot be mocked by mockito.\n+ * The solution is to wrap a non-mocked OriginSettingClient around a\n+ * mocked Client. All the mocking should take place on the client parameter.\n+ */\n+public class MockOriginSettingClient {\n+\n+    /**\n+     * Create a OriginSettingClient on a mocked client.\n+     *\n+     * @param client The mocked client\n+     * @param origin Whatever\n+     * @return A OriginSettingClient using a mocked client", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f31cf7e915966fbf9a1d4aac5a584094fddadf65"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9272b600570e5f4990f3b8b5e09ad134a1bfed0", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/c9272b600570e5f4990f3b8b5e09ad134a1bfed0", "committedDate": "2020-01-14T15:39:34Z", "message": "Explicitly require a OriginSettingClient in ML results iterators (#50802)\n\nIn classes where the client is used directly rather than through a call to \r\nexecuteAsyncWithOrigin explicitly require the client to be OriginSettingClient \r\nrather than using the Client interface. \r\n\r\nAlso remove calls to deprecated ClientHelper.clientWithOrigin() method."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b32e20ca840e54813a2332857e3f220e5f1d59af", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/b32e20ca840e54813a2332857e3f220e5f1d59af", "committedDate": "2020-01-14T15:39:34Z", "message": "Mock settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8889922de279b1153f876a584b645491b6f3e1c4", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/8889922de279b1153f876a584b645491b6f3e1c4", "committedDate": "2020-01-14T15:39:34Z", "message": "Address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f31cf7e915966fbf9a1d4aac5a584094fddadf65", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/f31cf7e915966fbf9a1d4aac5a584094fddadf65", "committedDate": "2020-01-14T15:02:23Z", "message": "Mock settings"}, "afterCommit": {"oid": "8889922de279b1153f876a584b645491b6f3e1c4", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/8889922de279b1153f876a584b645491b6f3e1c4", "committedDate": "2020-01-14T15:39:34Z", "message": "Address review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3062, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}