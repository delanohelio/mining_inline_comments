{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2OTU0MTc5", "number": 66204, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDozMjoyNlrOFLTY1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNDoyMDoyNlrOFNQM2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mzk2MzA5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/SearchModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDozMjoyNlrOIOZcZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDozMjoyNlrOIOZcZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2Nzg0NQ==", "bodyText": "should we call this setting max_nested_depth?", "url": "https://github.com/elastic/elasticsearch/pull/66204#discussion_r551967845", "createdAt": "2021-01-05T14:32:26Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/main/java/org/elasticsearch/search/SearchModule.java", "diffHunk": "@@ -269,6 +270,9 @@\n     public static final Setting<Integer> INDICES_MAX_CLAUSE_COUNT_SETTING = Setting.intSetting(\"indices.query.bool.max_clause_count\",\n             1024, 1, Integer.MAX_VALUE, Setting.Property.NodeScope);\n \n+    public static final Setting<Integer> INDICES_MAX_CLAUSE_NESTED_SETTING = Setting.intSetting(\"indices.query.bool.max_nested_count\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "335bc1a1012af1a3c4d621584de65613863dc18e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mzk2NDk1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDozMjo1M1rOIOZdlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDozMjo1M1rOIOZdlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2ODE0OA==", "bodyText": "should we can this function setMaxNestedDepth and also for corresponding error message?", "url": "https://github.com/elastic/elasticsearch/pull/66204#discussion_r551968148", "createdAt": "2021-01-05T14:32:53Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java", "diffHunk": "@@ -91,6 +92,17 @@ public BoolQueryBuilder(StreamInput in) throws IOException {\n         minimumShouldMatch = in.readOptionalString();\n     }\n \n+    /**\n+     * Set the maximum number of nested permitted per BooleanQuery.\n+     * Default value is 20.\n+     */\n+    public static void setMaxClauseCount(int maxNestedCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "335bc1a1012af1a3c4d621584de65613863dc18e"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NDI5MzAzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTo1MzoxN1rOIOcpSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTo1MzoxN1rOIOcpSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAyMDI5OA==", "bodyText": "may be an error message should be more detailed including what setting should be modified:\n\"the nested depth of the query exceeds the maximum nested depth for bool queries set in [\" + the name of the setting", "url": "https://github.com/elastic/elasticsearch/pull/66204#discussion_r552020298", "createdAt": "2021-01-05T15:53:17Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java", "diffHunk": "@@ -288,8 +300,12 @@ private static void doXArrayContent(ParseField field, List<QueryBuilder> clauses\n         PARSER.declareFloat(BoolQueryBuilder::boost, BOOST_FIELD);\n     }\n \n-    public static BoolQueryBuilder fromXContent(XContentParser parser) throws IOException, ParsingException {\n-        return PARSER.parse(parser, null);\n+    public static BoolQueryBuilder fromXContent(XContentParser parser, Integer nestedDepth) throws IOException, ParsingException {\n+        nestedDepth++;\n+        if (nestedDepth > maxNestedCount) {\n+            throw new IllegalArgumentException(\"maxNestedDepth is set to \" + maxNestedCount + \", but current depth is \" + nestedDepth);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "335bc1a1012af1a3c4d621584de65613863dc18e"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NDI5NTQ0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTo1Mzo0OFrOIOcqvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTo1Mzo0OFrOIOcqvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAyMDY2OA==", "bodyText": "should it be maxNestedDepth?", "url": "https://github.com/elastic/elasticsearch/pull/66204#discussion_r552020668", "createdAt": "2021-01-05T15:53:48Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java", "diffHunk": "@@ -59,6 +59,7 @@\n     private static final ParseField MUST = new ParseField(\"must\");\n     private static final ParseField MINIMUM_SHOULD_MATCH = new ParseField(\"minimum_should_match\");\n     private static final ParseField ADJUST_PURE_NEGATIVE = new ParseField(\"adjust_pure_negative\");\n+    private static int maxNestedCount = 20;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "335bc1a1012af1a3c4d621584de65613863dc18e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NDQwNjE1OnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/indices/search-settings.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNDoxODo1N1rOIRXPMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNDoxODo1N1rOIRXPMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA3NzQyNw==", "bodyText": "May be a little paraphrase the last sentence: \"Deep nesting of boolean queries may lead to stack overflow.\"", "url": "https://github.com/elastic/elasticsearch/pull/66204#discussion_r555077427", "createdAt": "2021-01-11T14:18:57Z", "author": {"login": "mayya-sharipova"}, "path": "docs/reference/modules/indices/search-settings.asciidoc", "diffHunk": "@@ -24,4 +24,11 @@ few resources.\n Maximum number of <<search-aggregations-bucket,aggregation buckets>> allowed in\n a single response. Defaults to 65,535.\n +\n-Requests that attempt to return more than this limit will return an error.\n\\ No newline at end of file\n+Requests that attempt to return more than this limit will return an error.\n+\n+[[indices-query-bool-max-nested-depth]]\n+`indices.query.bool.max_nested_depth`::\n+(<<static-cluster-setting,Static>>, integer) Maximum nested depth of bool queries. Defaults to `20`.\n++\n+This setting limits the nesting depth of bool queries. Nesting too deep will lead to stack overflow\n+errors.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62785d4ecb28c91e3b132ffad4e0bab32594ccfc"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NDQxMjQzOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/index/query/BoolQueryBuilderTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNDoyMDoyNlrOIRXTFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNDoyMDoyNlrOIRXTFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA3ODQyMA==", "bodyText": "The format of assertEquals is assertEquals(expected, actual), so we should write:\nassertEquals(\"The nested...\", e.getCause().getCause().getMessage());", "url": "https://github.com/elastic/elasticsearch/pull/66204#discussion_r555078420", "createdAt": "2021-01-11T14:20:26Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/test/java/org/elasticsearch/index/query/BoolQueryBuilderTests.java", "diffHunk": "@@ -447,4 +450,17 @@ public void testMustRewrite() throws IOException {\n                 () -> boolQuery.toQuery(context));\n         assertEquals(\"Rewrite first\", e.getMessage());\n     }\n+\n+    public void testExceedMaxNestedDepth() throws IOException {\n+        BoolQueryBuilder query = new BoolQueryBuilder();\n+        query.should(new BoolQueryBuilder().should(new BoolQueryBuilder().should(RandomQueryBuilder.createQuery(random()))));\n+        BoolQueryBuilder.setMaxNestedDepth(2);\n+        try (XContentParser parser = createParser(JsonXContent.jsonXContent, query.toString())) {\n+            XContentParseException e = expectThrows(XContentParseException.class,\n+                () -> parseInnerQueryBuilder(parser));\n+            assertThat(e.getCause().getCause(), Matchers.instanceOf(IllegalArgumentException.class));\n+            assertEquals(e.getCause().getCause().getMessage(), \"The nested depth of the query exceeds the maximum nested depth for bool queries set in [\" +\n+                INDICES_MAX_NESTED_DEPTH_SETTING.getKey() + \"]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62785d4ecb28c91e3b132ffad4e0bab32594ccfc"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4646, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}