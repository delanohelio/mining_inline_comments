{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MzYyODU0", "number": 61825, "title": "Change compound assignment structure to support String concatenation", "bodyText": "This change modifies the compound assignment structure of the ir tree to support string concatenation in Java 8. This aligns with the changes already pulled into the backport (#61755) up for review. The structure is changed so that when a StringBuilder is used for string concatenation it will be the first value pushed onto the stack prior loading the left-hand side of the compound assignment.", "createdAt": "2020-09-01T22:05:34Z", "url": "https://github.com/elastic/elasticsearch/pull/61825", "merged": true, "mergeCommit": {"oid": "0216a71dda795e7e7d8551b0bfa7d6170f6863ba"}, "closed": true, "closedAt": "2020-09-03T18:04:17Z", "author": {"login": "jdconrad"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEby0ygH2gAyNDc3MzYyODU0OjM2Zjc3Y2Q0ZjZjNWEwOWNlMmQ4Mjg0YWIxODk1ZDI3YzhjYzQ1N2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFTK9AgH2gAyNDc3MzYyODU0OmVlMzJiMjk2MzBhZDRkNWQxODZjZmYwM2NjZWEwZTBjODZhMmE2OTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "36f77cd4f6c5a09ce2d8284ab1895d27c8cc457e", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/36f77cd4f6c5a09ce2d8284ab1895d27c8cc457e", "committedDate": "2020-08-31T23:55:53Z", "message": "fix node ordering for string concatenation in compound assignment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8deb61cff9d97edf11e156292f2cee04446e0e2e", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/8deb61cff9d97edf11e156292f2cee04446e0e2e", "committedDate": "2020-09-01T22:02:15Z", "message": "update to work with Java 8"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98f5cc09ebc8d38fb8039514f8a2ed54f621b5ed", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/98f5cc09ebc8d38fb8039514f8a2ed54f621b5ed", "committedDate": "2020-09-01T23:31:15Z", "message": "Merge branch 'master' into stringnode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMDc2ODAx", "url": "https://github.com/elastic/elasticsearch/pull/61825#pullrequestreview-481076801", "createdAt": "2020-09-02T17:45:37Z", "commit": {"oid": "98f5cc09ebc8d38fb8039514f8a2ed54f621b5ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzo0NTozN1rOHL6buQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzo0NTozN1rOHL6buQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1Mzc1Mw==", "bodyText": "Brief comment on what this node is", "url": "https://github.com/elastic/elasticsearch/pull/61825#discussion_r482253753", "createdAt": "2020-09-02T17:45:37Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/BinaryImplNode.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.painless.ir;\n+\n+import org.elasticsearch.painless.ClassWriter;\n+import org.elasticsearch.painless.MethodWriter;\n+import org.elasticsearch.painless.phase.IRTreeVisitor;\n+import org.elasticsearch.painless.symbol.WriteScope;\n+\n+public class BinaryImplNode extends BinaryNode {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98f5cc09ebc8d38fb8039514f8a2ed54f621b5ed"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMTUwMzI2", "url": "https://github.com/elastic/elasticsearch/pull/61825#pullrequestreview-481150326", "createdAt": "2020-09-02T18:18:51Z", "commit": {"oid": "98f5cc09ebc8d38fb8039514f8a2ed54f621b5ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxODo1MVrOHL7n3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxODo1MVrOHL7n3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MzI0Ng==", "bodyText": "add a line about the subtlety here.", "url": "https://github.com/elastic/elasticsearch/pull/61825#discussion_r482273246", "createdAt": "2020-09-02T18:18:51Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -427,89 +426,63 @@ protected ExpressionNode injectCast(AExpression userExpressionNode, ScriptScope\n     protected ExpressionNode buildLoadStore(int accessDepth, Location location, boolean isNullSafe,\n             ExpressionNode irPrefixNode, ExpressionNode irIndexNode, ExpressionNode irLoadNode, StoreNode irStoreNode) {\n \n-        ExpressionNode irExpressionNode;\n-\n-        // this load/store is only a load (read)\n-        if (irStoreNode == null) {\n-            ExpressionNode irAccessNode;\n-\n-            // this load is a symbol or dot load with no index node\n-            if (irIndexNode == null) {\n-                irAccessNode = irLoadNode;\n-            // this load is a dot or brace load with an index node\n-            } else {\n-                BinaryNode irBinaryNode = new BinaryNode();\n-                irBinaryNode.setLocation(location);\n-                irBinaryNode.setExpressionType(irLoadNode.getExpressionType());\n-                irBinaryNode.setLeftNode(irIndexNode);\n-                irBinaryNode.setRightNode(irLoadNode);\n-\n-                irAccessNode = irBinaryNode;\n+        // build out the load structure for load/compound assignment or the store structure for just store\n+        ExpressionNode irExpressionNode = irLoadNode != null ? irLoadNode : irStoreNode;\n+\n+        // this load/store is a dot or brace load\n+        if (irPrefixNode != null) {\n+            // this load/store requires and index\n+            if (irIndexNode != null) {\n+                BinaryImplNode binaryImplNode = new BinaryImplNode();\n+                binaryImplNode.setLocation(location);\n+                binaryImplNode.setExpressionType(void.class);\n+\n+                if (isNullSafe) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98f5cc09ebc8d38fb8039514f8a2ed54f621b5ed"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMTUxNDc2", "url": "https://github.com/elastic/elasticsearch/pull/61825#pullrequestreview-481151476", "createdAt": "2020-09-02T18:20:33Z", "commit": {"oid": "98f5cc09ebc8d38fb8039514f8a2ed54f621b5ed"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoyMDozNFrOHL7uDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoyMTowM1rOHL7vuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3NDgzMA==", "bodyText": "maybe put these after the control structure on the same line so intellij doesn't keep \"intelligently\" moving them.", "url": "https://github.com/elastic/elasticsearch/pull/61825#discussion_r482274830", "createdAt": "2020-09-02T18:20:34Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -862,7 +835,7 @@ public void visitAssignment(EAssignment userAssignmentNode, ScriptScope scriptSc\n                 stringConcatenationNode.setLocation(irStoreNode.getLocation());\n                 stringConcatenationNode.setExpressionType(String.class);\n                 irCompoundNode = stringConcatenationNode;\n-            // handles when the operation is mathematical\n+                // handles when the operation is mathematical", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98f5cc09ebc8d38fb8039514f8a2ed54f621b5ed"}, "originalPosition": 211}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3NTI1OQ==", "bodyText": "indented", "url": "https://github.com/elastic/elasticsearch/pull/61825#discussion_r482275259", "createdAt": "2020-09-02T18:21:03Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -938,9 +911,11 @@ public void visitAssignment(EAssignment userAssignmentNode, ScriptScope scriptSc\n                 irBinaryMathNode.setLeftNode(irLoadNode);\n                 irBinaryMathNode.setRightNode(irValueNode);\n             }\n-        // handles a standard assignment\n+\n+            irAssignmentNode = irStoreNode;\n+            // handles a standard assignment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98f5cc09ebc8d38fb8039514f8a2ed54f621b5ed"}, "originalPosition": 240}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68eba526253f290a0f072ee3e35be32d7457a193", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/68eba526253f290a0f072ee3e35be32d7457a193", "committedDate": "2020-09-03T16:05:47Z", "message": "Merge branch 'master' into stringnode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b7bf1e516c16fcd43f43063236a9b74fa699b5a", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/7b7bf1e516c16fcd43f43063236a9b74fa699b5a", "committedDate": "2020-09-03T16:15:29Z", "message": "response to pr comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee32b29630ad4d5d186cff03ccea0e0c86a2a696", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/ee32b29630ad4d5d186cff03ccea0e0c86a2a696", "committedDate": "2020-09-03T16:27:01Z", "message": "handle java 8"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4976, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}