{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNzk1NzA3", "number": 53132, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoyMzoxOFrODlMLdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoyMzoxOFrODlMLdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzIzNDQ0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/boxplot/BoxplotAggregatorFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoyMzoxOFrOFx8XMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOToxMzoyMVrOFygcUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxMzUyMg==", "bodyText": "@talevy showed me that in cases like this, we can use a lambda with a type cast.  Since BoxplotAggregator already just takes a ValuesSource directly (as opposed to needing a cast), I think we can just say (BoxplotAggregationSupplier) BoxplotAggregator::new here.  We'll also need to add the @FunctionalInterface annotation to BoxplotAggregationSupplier.", "url": "https://github.com/elastic/elasticsearch/pull/53132#discussion_r387913522", "createdAt": "2020-03-04T20:23:18Z", "author": {"login": "not-napoleon"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/boxplot/BoxplotAggregatorFactory.java", "diffHunk": "@@ -24,6 +29,24 @@\n \n     private final double compression;\n \n+    static void registerAggregators(ValuesSourceRegistry valuesSourceRegistry) {\n+        valuesSourceRegistry.register(BoxplotAggregationBuilder.NAME,\n+            CoreValuesSourceType.NUMERIC, new BoxplotAggregatorSupplier() {\n+                @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed6b76cdf90098e693682f22822ced970ac3446d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUwNDY1OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/53132#discussion_r388504658", "createdAt": "2020-03-05T19:13:21Z", "author": {"login": "polyfractal"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/boxplot/BoxplotAggregatorFactory.java", "diffHunk": "@@ -24,6 +29,24 @@\n \n     private final double compression;\n \n+    static void registerAggregators(ValuesSourceRegistry valuesSourceRegistry) {\n+        valuesSourceRegistry.register(BoxplotAggregationBuilder.NAME,\n+            CoreValuesSourceType.NUMERIC, new BoxplotAggregatorSupplier() {\n+                @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxMzUyMg=="}, "originalCommit": {"oid": "ed6b76cdf90098e693682f22822ced970ac3446d"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3418, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}