{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4ODMyNTg4", "number": 59522, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzozMjo1MlrOEOkArQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwODowNTo0NVrOEOktkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzA1NTE3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzozMjo1MlrOGxx3Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTo1ODowOVrOGyj3vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1MDM0Ng==", "bodyText": "I think this field should be volatile? A different thread sets this field and a different thread reads this field.", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r454850346", "createdAt": "2020-07-15T07:32:52Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -89,6 +95,7 @@\n     private final ThreadPool threadPool;\n     private final IngestMetric totalMetrics = new IngestMetric();\n     private final List<Consumer<ClusterState>> ingestClusterStateListeners = new CopyOnWriteArrayList<>();\n+    private ClusterState state;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY2OTY5Mw==", "bodyText": "Good catch, I fixed it", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r455669693", "createdAt": "2020-07-16T09:58:09Z", "author": {"login": "probakowski"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -89,6 +95,7 @@\n     private final ThreadPool threadPool;\n     private final IngestMetric totalMetrics = new IngestMetric();\n     private final List<Consumer<ClusterState>> ingestClusterStateListeners = new CopyOnWriteArrayList<>();\n+    private ClusterState state;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1MDM0Ng=="}, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzA3NTA3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzozODo1NlrOGxyDLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMDo1Mzo0MVrOGy8Ziw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1MzQyMA==", "bodyText": "I think if state is null then an error should be returned? If a node has been started and is ready to accept requests then all components like IngestService should have been provided a cluster state.", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r454853420", "createdAt": "2020-07-15T07:38:56Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];\n                 innerExecute(slot, indexRequest, pipeline, onDropped, e -> {\n                     if (e != null) {\n                         onFailure.accept(slot, e);\n                     }\n \n-                    if (it.hasNext()) {\n-                        executePipelines(slot, it, indexRequest, onDropped, onFailure, counter, onCompletion, originalThread);\n+                    String newIndex = indexRequest.indices()[0];\n+                    if (newIndex != null && oldIndex.equals(newIndex) == false && hasFinalPipeline && it.hasNext() == false) {\n+                        totalMetrics.ingestFailed();\n+                        onFailure.accept(slot, new IllegalStateException(\"final pipeline [\"+ pipelineId +\n+                            \"] can't change the target index\"));\n+                    }\n+\n+                    Iterator<String> newIt = it;\n+                    boolean newHasFinalPipeline = hasFinalPipeline;\n+\n+                    if (oldIndex.equals(indexRequest.indices()[0]) == false && state != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 196}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY2OTU5Nw==", "bodyText": "I removed the check, as you said state should be always filled, if not we have deeper problem here. WDYT?", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r455669597", "createdAt": "2020-07-16T09:57:56Z", "author": {"login": "probakowski"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];\n                 innerExecute(slot, indexRequest, pipeline, onDropped, e -> {\n                     if (e != null) {\n                         onFailure.accept(slot, e);\n                     }\n \n-                    if (it.hasNext()) {\n-                        executePipelines(slot, it, indexRequest, onDropped, onFailure, counter, onCompletion, originalThread);\n+                    String newIndex = indexRequest.indices()[0];\n+                    if (newIndex != null && oldIndex.equals(newIndex) == false && hasFinalPipeline && it.hasNext() == false) {\n+                        totalMetrics.ingestFailed();\n+                        onFailure.accept(slot, new IllegalStateException(\"final pipeline [\"+ pipelineId +\n+                            \"] can't change the target index\"));\n+                    }\n+\n+                    Iterator<String> newIt = it;\n+                    boolean newHasFinalPipeline = hasFinalPipeline;\n+\n+                    if (oldIndex.equals(indexRequest.indices()[0]) == false && state != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1MzQyMA=="}, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 196}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MTU2Mw==", "bodyText": "Yes, then there is a deeper problem elsewhere.\nBut that is not related to ingest or bulk.", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r456071563", "createdAt": "2020-07-16T20:53:41Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];\n                 innerExecute(slot, indexRequest, pipeline, onDropped, e -> {\n                     if (e != null) {\n                         onFailure.accept(slot, e);\n                     }\n \n-                    if (it.hasNext()) {\n-                        executePipelines(slot, it, indexRequest, onDropped, onFailure, counter, onCompletion, originalThread);\n+                    String newIndex = indexRequest.indices()[0];\n+                    if (newIndex != null && oldIndex.equals(newIndex) == false && hasFinalPipeline && it.hasNext() == false) {\n+                        totalMetrics.ingestFailed();\n+                        onFailure.accept(slot, new IllegalStateException(\"final pipeline [\"+ pipelineId +\n+                            \"] can't change the target index\"));\n+                    }\n+\n+                    Iterator<String> newIt = it;\n+                    boolean newHasFinalPipeline = hasFinalPipeline;\n+\n+                    if (oldIndex.equals(indexRequest.indices()[0]) == false && state != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1MzQyMA=="}, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 196}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzEzODc2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo1Njo1MFrOGxyp1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTo1NjozMVrOGyj0Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg2MzMxOA==", "bodyText": "a return statement is missing here.", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r454863318", "createdAt": "2020-07-15T07:56:50Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];\n                 innerExecute(slot, indexRequest, pipeline, onDropped, e -> {\n                     if (e != null) {\n                         onFailure.accept(slot, e);\n                     }\n \n-                    if (it.hasNext()) {\n-                        executePipelines(slot, it, indexRequest, onDropped, onFailure, counter, onCompletion, originalThread);\n+                    String newIndex = indexRequest.indices()[0];\n+                    if (newIndex != null && oldIndex.equals(newIndex) == false && hasFinalPipeline && it.hasNext() == false) {\n+                        totalMetrics.ingestFailed();\n+                        onFailure.accept(slot, new IllegalStateException(\"final pipeline [\"+ pipelineId +\n+                            \"] can't change the target index\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY2ODgzNA==", "bodyText": "Fixed", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r455668834", "createdAt": "2020-07-16T09:56:31Z", "author": {"login": "probakowski"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];\n                 innerExecute(slot, indexRequest, pipeline, onDropped, e -> {\n                     if (e != null) {\n                         onFailure.accept(slot, e);\n                     }\n \n-                    if (it.hasNext()) {\n-                        executePipelines(slot, it, indexRequest, onDropped, onFailure, counter, onCompletion, originalThread);\n+                    String newIndex = indexRequest.indices()[0];\n+                    if (newIndex != null && oldIndex.equals(newIndex) == false && hasFinalPipeline && it.hasNext() == false) {\n+                        totalMetrics.ingestFailed();\n+                        onFailure.accept(slot, new IllegalStateException(\"final pipeline [\"+ pipelineId +\n+                            \"] can't change the target index\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg2MzMxOA=="}, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 190}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzE1OTIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwODowMjozM1rOGxy2QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTo1NjoyMVrOGyjz_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg2NjQ5Nw==", "bodyText": "Maybe Objects.equal(oldIndex, newIndex) == false instead of newIndex != null && oldIndex.equals(newIndex) == false", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r454866497", "createdAt": "2020-07-15T08:02:33Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];\n                 innerExecute(slot, indexRequest, pipeline, onDropped, e -> {\n                     if (e != null) {\n                         onFailure.accept(slot, e);\n                     }\n \n-                    if (it.hasNext()) {\n-                        executePipelines(slot, it, indexRequest, onDropped, onFailure, counter, onCompletion, originalThread);\n+                    String newIndex = indexRequest.indices()[0];\n+                    if (newIndex != null && oldIndex.equals(newIndex) == false && hasFinalPipeline && it.hasNext() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY2ODczNA==", "bodyText": "Yep, this is good idea, I've changed it", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r455668734", "createdAt": "2020-07-16T09:56:21Z", "author": {"login": "probakowski"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];\n                 innerExecute(slot, indexRequest, pipeline, onDropped, e -> {\n                     if (e != null) {\n                         onFailure.accept(slot, e);\n                     }\n \n-                    if (it.hasNext()) {\n-                        executePipelines(slot, it, indexRequest, onDropped, onFailure, counter, onCompletion, originalThread);\n+                    String newIndex = indexRequest.indices()[0];\n+                    if (newIndex != null && oldIndex.equals(newIndex) == false && hasFinalPipeline && it.hasNext() == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg2NjQ5Nw=="}, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 187}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzE3MDEwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwODowNTo0NVrOGxy82g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTo1NToxNlrOGyjxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg2ODE4Ng==", "bodyText": "maybe rename oldIndex to originalIndex?", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r454868186", "createdAt": "2020-07-15T08:05:45Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY2ODAyMA==", "bodyText": "Done", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r455668020", "createdAt": "2020-07-16T09:55:16Z", "author": {"login": "probakowski"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg2ODE4Ng=="}, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 178}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2389, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}