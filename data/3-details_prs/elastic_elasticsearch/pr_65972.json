{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzODQwMjA3", "number": 65972, "title": "[ML] Disable dynamic mapping to DFA dest index", "bodyText": "We need to disable dynamic mapping to the destination\nindex of data frame analytics jobs. If the source index\nhas dynamic mapping disabled, then after reindexing it is\npossible that we add mappings for fields that were previously\nunmapped, thus making them eligible features. This is\nconfusing to the user.\nThis commit disables dynamic mapping to the destination index.\nIt makes all result field mappings explicit.", "createdAt": "2020-12-07T17:45:35Z", "url": "https://github.com/elastic/elasticsearch/pull/65972", "merged": true, "mergeCommit": {"oid": "e6935d941f1be44e9b27c686bdd8018819d8a629"}, "closed": true, "closedAt": "2020-12-08T10:10:43Z", "author": {"login": "dimitris-athanasiou"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdj5KvHAH2gAyNTMzODQwMjA3OjM5MjA1ZjEzZGU1MDU4YWJlODA3Yzc5ZTlkYTdkMmZlMGE2ODY4YzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkGWRcAH2gAyNTMzODQwMjA3OjUzYTBhMjk0NmNmNzVjMjkyZTk4ZDlhNTI5NWYwNTI3YmIzZjk3Yzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "39205f13de5058abe807c79e9da7d2fe0a6868c6", "author": {"user": {"login": "dimitris-athanasiou", "name": "Dimitris Athanasiou"}}, "url": "https://github.com/elastic/elasticsearch/commit/39205f13de5058abe807c79e9da7d2fe0a6868c6", "committedDate": "2020-12-07T17:40:54Z", "message": "[ML] Disable dynamic mapping to DFA dest index\n\nWe need to disable dynamic mapping to the destination\nindex of data frame analytics jobs. If the source index\nhas dynamic mapping disabled, then after reindexing it is\npossible that we add mappings for fields that were previously\nunmapped, thus making them eligible features. This is\nconfusing to the user.\n\nThis commit disables dynamic mapping to the destination index.\nIt makes all result field mappings explicit."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2Mzk1MzIw", "url": "https://github.com/elastic/elasticsearch/pull/65972#pullrequestreview-546395320", "createdAt": "2020-12-07T17:56:04Z", "commit": {"oid": "39205f13de5058abe807c79e9da7d2fe0a6868c6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo1NjowNFrOIAzLuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo1NjowNFrOIAzLuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwOTQ5Nw==", "bodyText": "If you constructed a map containing the expected contents, then asserted equality with the merged mappings map then you'd get better feedback in the case of failure - both maps would get printed instead of (for example) just finding out that there were 3 items instead of 2.", "url": "https://github.com/elastic/elasticsearch/pull/65972#discussion_r537709497", "createdAt": "2020-12-07T17:56:04Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/dataframe/MappingsMergerTests.java", "diffHunk": "@@ -38,7 +38,12 @@ public void testMergeMappings_GivenIndicesWithIdenticalMappings() {\n \n         MappingMetadata mergedMappings = MappingsMerger.mergeMappings(newSource(), getMappingsResponse);\n \n-        assertThat(mergedMappings.getSourceAsMap(), equalTo(index1Mappings));\n+        Map<String, Object> mergedMappingsMap = mergedMappings.getSourceAsMap();\n+        assertThat(mergedMappingsMap.size(), equalTo(2));\n+        assertThat(mergedMappingsMap.containsKey(\"dynamic\"), is(true));\n+        assertThat(mergedMappingsMap.get(\"dynamic\"), equalTo(false));\n+        assertThat(mergedMappingsMap.containsKey(\"properties\"), is(true));\n+        assertThat(mergedMappingsMap.get(\"properties\"), equalTo(index1Mappings.get(\"properties\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39205f13de5058abe807c79e9da7d2fe0a6868c6"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5e061ee263dcc402646068a83af5896fbaafe2a", "author": {"user": {"login": "dimitris-athanasiou", "name": "Dimitris Athanasiou"}}, "url": "https://github.com/elastic/elasticsearch/commit/f5e061ee263dcc402646068a83af5896fbaafe2a", "committedDate": "2020-12-07T18:04:57Z", "message": "Improve map assertion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODE1ODMz", "url": "https://github.com/elastic/elasticsearch/pull/65972#pullrequestreview-546815833", "createdAt": "2020-12-08T07:35:28Z", "commit": {"oid": "f5e061ee263dcc402646068a83af5896fbaafe2a"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzozNToyOVrOIBK_ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzozNzozMlrOIBLFlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5OTYxNA==", "bodyText": "Could you also add is_training here?", "url": "https://github.com/elastic/elasticsearch/pull/65972#discussion_r538099614", "createdAt": "2020-12-08T07:35:29Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/RegressionTests.java", "diffHunk": "@@ -321,10 +321,10 @@ public void testFieldCardinalityLimitsIsEmpty() {\n         assertThat(createTestInstance().getFieldCardinalityConstraints(), is(empty()));\n     }\n \n-    public void testGetExplicitlyMappedFields() {\n-        Map<String, Object> explicitlyMappedFields = new Regression(\"foo\").getExplicitlyMappedFields(\"results\", null);\n-        assertThat(explicitlyMappedFields, hasEntry(\"results.foo_prediction\", Collections.singletonMap(\"type\", \"double\")));\n-        assertThat(explicitlyMappedFields, hasEntry(\"results.feature_importance\", Regression.FEATURE_IMPORTANCE_MAPPING));\n+    public void testGetResultMappings() {\n+        Map<String, Object> resultMappings = new Regression(\"foo\").getResultMappings(\"results\", null);\n+        assertThat(resultMappings, hasEntry(\"results.foo_prediction\", Collections.singletonMap(\"type\", \"double\")));\n+        assertThat(resultMappings, hasEntry(\"results.feature_importance\", Regression.FEATURE_IMPORTANCE_MAPPING));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5e061ee263dcc402646068a83af5896fbaafe2a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEwMTE0MA==", "bodyText": "[optional] An alternative which I sometimes find more readable is:\nassertThat(resultMappings, allOf(hasEntry(...), ..., hasEntry(...)));", "url": "https://github.com/elastic/elasticsearch/pull/65972#discussion_r538101140", "createdAt": "2020-12-08T07:37:32Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/ClassificationTests.java", "diffHunk": "@@ -362,43 +362,42 @@ public void testFieldCardinalityLimitsIsNonEmpty() {\n         assertThat(constraints.get(0).getUpperBound(), equalTo(30L));\n     }\n \n-    public void testGetExplicitlyMappedFields_FieldCapabilitiesResponseIsNull() {\n-        Map<String, Object> explicitlyMappedFields = new Classification(\"foo\").getExplicitlyMappedFields(\"results\", null);\n-        assertThat(explicitlyMappedFields, equalTo(singletonMap(\"results.feature_importance\", Classification.FEATURE_IMPORTANCE_MAPPING)));\n-    }\n-\n-    public void testGetExplicitlyMappedFields_DependentVariableMappingIsAbsent() {\n+    public void testGetResultMappings_DependentVariableMappingIsAbsent() {\n         FieldCapabilitiesResponse fieldCapabilitiesResponse = new FieldCapabilitiesResponse(new String[0], Collections.emptyMap());\n-        Map<String, Object> explicitlyMappedFields =\n-            new Classification(\"foo\").getExplicitlyMappedFields(\"results\", fieldCapabilitiesResponse);\n-        assertThat(explicitlyMappedFields, equalTo(singletonMap(\"results.feature_importance\", Classification.FEATURE_IMPORTANCE_MAPPING)));\n+        expectThrows(ElasticsearchStatusException.class,\n+            () -> new Classification(\"foo\").getResultMappings(\"results\", fieldCapabilitiesResponse));\n     }\n \n-    public void testGetExplicitlyMappedFields_DependentVariableMappingHasNoTypes() {\n+    public void testGetResultMappings_DependentVariableMappingHasNoTypes() {\n         FieldCapabilitiesResponse fieldCapabilitiesResponse =\n             new FieldCapabilitiesResponse(new String[0], Collections.singletonMap(\"foo\", Collections.emptyMap()));\n-        Map<String, Object> explicitlyMappedFields =\n-            new Classification(\"foo\").getExplicitlyMappedFields(\"results\", fieldCapabilitiesResponse);\n-        assertThat(explicitlyMappedFields, equalTo(singletonMap(\"results.feature_importance\", Classification.FEATURE_IMPORTANCE_MAPPING)));\n+        expectThrows(ElasticsearchStatusException.class,\n+            () -> new Classification(\"foo\").getResultMappings(\"results\", fieldCapabilitiesResponse));\n     }\n \n-    public void testGetExplicitlyMappedFields_DependentVariableMappingIsPresent() {\n+    public void testGetResultMappings_DependentVariableMappingIsPresent() {\n         Map<String, Object> expectedTopClassesMapping = new HashMap<>() {{\n             put(\"type\", \"nested\");\n             put(\"properties\", new HashMap<>() {{\n                 put(\"class_name\", singletonMap(\"type\", \"dummy\"));\n                 put(\"class_probability\", singletonMap(\"type\", \"double\"));\n+                put(\"class_score\", singletonMap(\"type\", \"double\"));\n             }});\n         }};\n         FieldCapabilitiesResponse fieldCapabilitiesResponse =\n             new FieldCapabilitiesResponse(\n                 new String[0],\n                 Collections.singletonMap(\"foo\", Collections.singletonMap(\"dummy\", createFieldCapabilities(\"foo\", \"dummy\"))));\n-        Map<String, Object> explicitlyMappedFields =\n-            new Classification(\"foo\").getExplicitlyMappedFields(\"results\", fieldCapabilitiesResponse);\n-        assertThat(explicitlyMappedFields, hasEntry(\"results.foo_prediction\", singletonMap(\"type\", \"dummy\")));\n-        assertThat(explicitlyMappedFields, hasEntry(\"results.top_classes\", expectedTopClassesMapping));\n-        assertThat(explicitlyMappedFields, hasEntry(\"results.feature_importance\", Classification.FEATURE_IMPORTANCE_MAPPING));\n+\n+        Map<String, Object> resultMappings =\n+            new Classification(\"foo\").getResultMappings(\"results\", fieldCapabilitiesResponse);\n+\n+        assertThat(resultMappings, hasEntry(\"results.foo_prediction\", singletonMap(\"type\", \"dummy\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5e061ee263dcc402646068a83af5896fbaafe2a"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53a0a2946cf75c292e98d9a5295f0527bb3f97c7", "author": {"user": {"login": "dimitris-athanasiou", "name": "Dimitris Athanasiou"}}, "url": "https://github.com/elastic/elasticsearch/commit/53a0a2946cf75c292e98d9a5295f0527bb3f97c7", "committedDate": "2020-12-08T09:02:16Z", "message": "Add assertion for is_training in regression tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4077, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}