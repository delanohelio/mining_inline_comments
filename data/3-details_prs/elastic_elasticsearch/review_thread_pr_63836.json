{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0OTY2OTgz", "number": 63836, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo0NDo1NlrOEvUjog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzoxMDoxMlrOEvao1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDU1MzMwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/geo/SpatialStrategy.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo0NDo1NlrOHkPFhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOToyNzowOFrOHlivjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1Nzk1OQ==", "bodyText": "This ended up catching a pre-existing bug in GeoShapeQueryTests, which was asking for TERM instead of term as a strategy, and therefore ending up falling back on null here, which was getting translated to recursive once the mapper had been parsed.  Silently falling back to recursive is a bug, I think, although on backport we will need to change this to emit a warning instead, as you can't change the strategy once it has been set and so existing mappings with badly-spelled term strategies will have to stay using recursive", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r507757959", "createdAt": "2020-10-19T13:44:56Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/common/geo/SpatialStrategy.java", "diffHunk": "@@ -54,6 +54,12 @@ public static SpatialStrategy fromString(String strategyName) {\n                 return strategy;\n             }\n         }\n-        return null;\n+        throw new IllegalArgumentException(\"Unknown strategy [\" + strategyName + \"]\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d892f6a848cd5963787e2623b54f0d9b5b7bf8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4NTQ4Mg==", "bodyText": "Do you think this is a breaking change?", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r508385482", "createdAt": "2020-10-20T10:24:14Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/common/geo/SpatialStrategy.java", "diffHunk": "@@ -54,6 +54,12 @@ public static SpatialStrategy fromString(String strategyName) {\n                 return strategy;\n             }\n         }\n-        return null;\n+        throw new IllegalArgumentException(\"Unknown strategy [\" + strategyName + \"]\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1Nzk1OQ=="}, "originalCommit": {"oid": "b4d892f6a848cd5963787e2623b54f0d9b5b7bf8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQxMDEzNQ==", "bodyText": "I'd say it was a bugfix rather than a breaking change, I think?", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r508410135", "createdAt": "2020-10-20T11:05:33Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/common/geo/SpatialStrategy.java", "diffHunk": "@@ -54,6 +54,12 @@ public static SpatialStrategy fromString(String strategyName) {\n                 return strategy;\n             }\n         }\n-        return null;\n+        throw new IllegalArgumentException(\"Unknown strategy [\" + strategyName + \"]\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1Nzk1OQ=="}, "originalCommit": {"oid": "b4d892f6a848cd5963787e2623b54f0d9b5b7bf8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEyNDcwNA==", "bodyText": "I opened #63975 to emit a deprecation warning for this case in 7.x", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r509124704", "createdAt": "2020-10-21T09:21:30Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/common/geo/SpatialStrategy.java", "diffHunk": "@@ -54,6 +54,12 @@ public static SpatialStrategy fromString(String strategyName) {\n                 return strategy;\n             }\n         }\n-        return null;\n+        throw new IllegalArgumentException(\"Unknown strategy [\" + strategyName + \"]\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1Nzk1OQ=="}, "originalCommit": {"oid": "b4d892f6a848cd5963787e2623b54f0d9b5b7bf8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEyNTgxNA==", "bodyText": "Existing mappings sort of fix themselves, btw, so my above comment was not correct.  Once a user has added a mapping with a bad strategy, it will serialize itself as recursive, so we don't need to worry about parsing mappings from previous versions.", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r509125814", "createdAt": "2020-10-21T09:23:04Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/common/geo/SpatialStrategy.java", "diffHunk": "@@ -54,6 +54,12 @@ public static SpatialStrategy fromString(String strategyName) {\n                 return strategy;\n             }\n         }\n-        return null;\n+        throw new IllegalArgumentException(\"Unknown strategy [\" + strategyName + \"]\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1Nzk1OQ=="}, "originalCommit": {"oid": "b4d892f6a848cd5963787e2623b54f0d9b5b7bf8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEyODU4OA==", "bodyText": "Yes, that is what I checked so the only change is that creating a mapping will throw an error when before it was successful.", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r509128588", "createdAt": "2020-10-21T09:27:08Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/common/geo/SpatialStrategy.java", "diffHunk": "@@ -54,6 +54,12 @@ public static SpatialStrategy fromString(String strategyName) {\n                 return strategy;\n             }\n         }\n-        return null;\n+        throw new IllegalArgumentException(\"Unknown strategy [\" + strategyName + \"]\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1Nzk1OQ=="}, "originalCommit": {"oid": "b4d892f6a848cd5963787e2623b54f0d9b5b7bf8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDU2MDg4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/geo/parsers/GeoJsonParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo0NjoyNFrOHkPJ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOToyNToxMFrOHliqMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1OTA5OQ==", "bodyText": "Whether or not a parameter has been explicitly set is of interest only to the mapper itself, and its serialization code; the PR changes these getters on the mappers to return simple booleans.", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r507759099", "createdAt": "2020-10-19T13:46:24Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/common/geo/parsers/GeoJsonParser.java", "diffHunk": "@@ -50,14 +49,10 @@ protected static ShapeBuilder parse(XContentParser parser, AbstractShapeGeometry\n         GeometryCollectionBuilder geometryCollections = null;\n \n         Orientation orientation = (shapeMapper == null)\n-            ? AbstractShapeGeometryFieldMapper.Defaults.ORIENTATION.value()\n+            ? Orientation.RIGHT\n             : shapeMapper.orientation();\n-        Explicit<Boolean> coerce = (shapeMapper == null)\n-            ? AbstractShapeGeometryFieldMapper.Defaults.COERCE\n-            : shapeMapper.coerce();\n-        Explicit<Boolean> ignoreZValue = (shapeMapper == null)\n-            ? AbstractShapeGeometryFieldMapper.Defaults.IGNORE_Z_VALUE\n-            : shapeMapper.ignoreZValue();\n+        boolean coerce = shapeMapper != null && shapeMapper.coerce();\n+        boolean ignoreZValue = shapeMapper == null || shapeMapper.ignoreZValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d892f6a848cd5963787e2623b54f0d9b5b7bf8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEyNzIxOQ==", "bodyText": "+1", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r509127219", "createdAt": "2020-10-21T09:25:10Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/common/geo/parsers/GeoJsonParser.java", "diffHunk": "@@ -50,14 +49,10 @@ protected static ShapeBuilder parse(XContentParser parser, AbstractShapeGeometry\n         GeometryCollectionBuilder geometryCollections = null;\n \n         Orientation orientation = (shapeMapper == null)\n-            ? AbstractShapeGeometryFieldMapper.Defaults.ORIENTATION.value()\n+            ? Orientation.RIGHT\n             : shapeMapper.orientation();\n-        Explicit<Boolean> coerce = (shapeMapper == null)\n-            ? AbstractShapeGeometryFieldMapper.Defaults.COERCE\n-            : shapeMapper.coerce();\n-        Explicit<Boolean> ignoreZValue = (shapeMapper == null)\n-            ? AbstractShapeGeometryFieldMapper.Defaults.IGNORE_Z_VALUE\n-            : shapeMapper.ignoreZValue();\n+        boolean coerce = shapeMapper != null && shapeMapper.coerce();\n+        boolean ignoreZValue = shapeMapper == null || shapeMapper.ignoreZValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1OTA5OQ=="}, "originalCommit": {"oid": "b4d892f6a848cd5963787e2623b54f0d9b5b7bf8"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDU4Mzc0OnYy", "diffSide": "RIGHT", "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/MapperTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo1MToyNVrOHkPYiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo1MToyNVrOHkPYiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc2MjgyNA==", "bodyText": "These needed to be changed to getters, rather than just asserting in themselves, so that the checks for deprecated boost parameters didn't get confused by the additional warnings.", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r507762824", "createdAt": "2020-10-19T13:51:25Z", "author": {"login": "romseygeek"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/MapperTestCase.java", "diffHunk": "@@ -205,12 +205,28 @@ public void testMinimalToMaximal() throws IOException {\n         assertParseMaximalWarnings();\n     }\n \n-    protected void assertParseMinimalWarnings() {\n+    protected final void assertParseMinimalWarnings() {\n+        String[] warnings = getParseMinimalWarnings();\n+        if (warnings.length > 0) {\n+            assertWarnings(warnings);\n+        }\n+    }\n+\n+    protected final void assertParseMaximalWarnings() {\n+        String[] warnings = getParseMaximalWarnings();\n+        if (warnings.length > 0) {\n+            assertWarnings(warnings);\n+        }\n+    }\n+\n+    protected String[] getParseMinimalWarnings() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d892f6a848cd5963787e2623b54f0d9b5b7bf8"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTU0Mzc0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/GeoShapeWithDocValuesFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzowODozOVrOHkYq6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzowODozOVrOHkYq6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkxNDk4Nw==", "bodyText": "It looks like the old code had a comment that this was intentionally a noop. I think it is worth keeping that.", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r507914987", "createdAt": "2020-10-19T17:08:39Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/GeoShapeWithDocValuesFieldMapper.java", "diffHunk": "@@ -198,8 +221,12 @@ public GeoShapeWithDocValuesFieldType fieldType() {\n     }\n \n     @Override\n-    protected String contentType() {\n-        return CONTENT_TYPE;\n+    protected void addStoredFields(ParseContext context, Geometry geometry) {\n+\n     }\n \n+    @Override\n+    protected void addMultiFields(ParseContext context, Geometry geometry) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c49b6270b7d4336227d46e77a77c051d76089169"}, "originalPosition": 263}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTU0OTY0OnYy", "diffSide": "LEFT", "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldMapper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzoxMDoxMlrOHkYugg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDowNToyMlrOHluOEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkxNTkwNg==", "bodyText": "We don't need to be equal to ParsedCartesianPoints?", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r507915906", "createdAt": "2020-10-19T17:10:12Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldMapper.java", "diffHunk": "@@ -186,12 +212,8 @@ public boolean equals(Object other) {\n                 CartesianPoint o = (CartesianPoint)other;\n                 oX = o.getX();\n                 oY = o.getY();\n-            } else if (other instanceof ParsedCartesianPoint == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c49b6270b7d4336227d46e77a77c051d76089169"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4MDAyMw==", "bodyText": "If we're comparing against a ParsedCartesianPoint, then the earlier instanceof CartesianPoint branch will already have matched, so this branch is never called.", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r508280023", "createdAt": "2020-10-20T07:46:03Z", "author": {"login": "romseygeek"}, "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldMapper.java", "diffHunk": "@@ -186,12 +212,8 @@ public boolean equals(Object other) {\n                 CartesianPoint o = (CartesianPoint)other;\n                 oX = o.getX();\n                 oY = o.getY();\n-            } else if (other instanceof ParsedCartesianPoint == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkxNTkwNg=="}, "originalCommit": {"oid": "c49b6270b7d4336227d46e77a77c051d76089169"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMxNjYyNw==", "bodyText": "++. I hadn't pulled it up.", "url": "https://github.com/elastic/elasticsearch/pull/63836#discussion_r509316627", "createdAt": "2020-10-21T14:05:22Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldMapper.java", "diffHunk": "@@ -186,12 +212,8 @@ public boolean equals(Object other) {\n                 CartesianPoint o = (CartesianPoint)other;\n                 oX = o.getX();\n                 oY = o.getY();\n-            } else if (other instanceof ParsedCartesianPoint == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkxNTkwNg=="}, "originalCommit": {"oid": "c49b6270b7d4336227d46e77a77c051d76089169"}, "originalPosition": 143}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2830, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}