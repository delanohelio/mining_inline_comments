{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3OTIxMTMy", "number": 60315, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzozOTo0OFrOETIhlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzo0MjozN1rOETIlbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDk4MDY5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/annotations/AnnotationPersister.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzozOTo0OFrOG4sY1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMTo1MjoxNVrOG4068Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwMDY5Mw==", "bodyText": "Just to make sure: would you also like to add the requireAlias(true) to the index requests in integration tests (like RevertModelSnapshotIT.java in line 217)? Or do you find it unnecessary?", "url": "https://github.com/elastic/elasticsearch/pull/60315#discussion_r462100693", "createdAt": "2020-07-29T07:39:48Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/annotations/AnnotationPersister.java", "diffHunk": "@@ -74,7 +74,7 @@ public Builder bulkPersisterBuilder(String jobId) {\n     public class Builder {\n \n         private final String jobId;\n-        private BulkRequest bulkRequest = new BulkRequest(AnnotationIndex.WRITE_ALIAS_NAME);\n+        private BulkRequest bulkRequest = new BulkRequest(AnnotationIndex.WRITE_ALIAS_NAME).requireAlias(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d586a15181ac8446f1b244f3dd7f1f49ab1815f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzNTM1Mg==", "bodyText": "I did not really think about adding it to integration tests. I can look in there and see whats up.", "url": "https://github.com/elastic/elasticsearch/pull/60315#discussion_r462235352", "createdAt": "2020-07-29T11:41:49Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/annotations/AnnotationPersister.java", "diffHunk": "@@ -74,7 +74,7 @@ public Builder bulkPersisterBuilder(String jobId) {\n     public class Builder {\n \n         private final String jobId;\n-        private BulkRequest bulkRequest = new BulkRequest(AnnotationIndex.WRITE_ALIAS_NAME);\n+        private BulkRequest bulkRequest = new BulkRequest(AnnotationIndex.WRITE_ALIAS_NAME).requireAlias(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwMDY5Mw=="}, "originalCommit": {"oid": "3d586a15181ac8446f1b244f3dd7f1f49ab1815f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MDQ5Nw==", "bodyText": "@przemekwitek added the value to our integration tests as well.", "url": "https://github.com/elastic/elasticsearch/pull/60315#discussion_r462240497", "createdAt": "2020-07-29T11:52:15Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/annotations/AnnotationPersister.java", "diffHunk": "@@ -74,7 +74,7 @@ public Builder bulkPersisterBuilder(String jobId) {\n     public class Builder {\n \n         private final String jobId;\n-        private BulkRequest bulkRequest = new BulkRequest(AnnotationIndex.WRITE_ALIAS_NAME);\n+        private BulkRequest bulkRequest = new BulkRequest(AnnotationIndex.WRITE_ALIAS_NAME).requireAlias(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwMDY5Mw=="}, "originalCommit": {"oid": "3d586a15181ac8446f1b244f3dd7f1f49ab1815f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDk5MDU1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsTask.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzo0MjozN1rOG4se-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjowOToxOVrOG41eJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwMjI2NA==", "bodyText": "One concern I have about this pattern of figuring out the value of requireAlias is that we need to be very careful to provide it with the right value as there is nothing (other than reading the code ;)) that could help us here.\nIdeally, I would like to see AnomalyDetectorsIndex.jobStateIndexWriteAlias() (and other methods of this kind) return a tuple (AliasOrIndex) with two fields: name and isAlias. This way the two pieces of information would be bundled together.\nHowever, this may be a big code change and the benefits are not easy to measure.\nAlternatively, you could have a local variable boolean requireAlias initialized to true in line 296 and set to false in line 298. This way, the decisions whether to use alias or index and whether to require alias would be logically grouped.", "url": "https://github.com/elastic/elasticsearch/pull/60315#discussion_r462102264", "createdAt": "2020-07-29T07:42:37Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsTask.java", "diffHunk": "@@ -299,6 +299,7 @@ static void persistProgress(Client client, String jobId, Runnable runnable) {\n                 }\n                 IndexRequest indexRequest = new IndexRequest(indexOrAlias)\n                     .id(progressDocId)\n+                    .setRequireAlias(AnomalyDetectorsIndex.jobStateIndexWriteAlias().equals(indexOrAlias))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d586a15181ac8446f1b244f3dd7f1f49ab1815f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIxMTc3MA==", "bodyText": "Note that AnomalyDetectorsIndex.jobStateIndexWriteAlias() always returns the alias. The issue here is that if we detect existing docs we want to overwrite them in the same index they exist rather than where the alias currently points at.", "url": "https://github.com/elastic/elasticsearch/pull/60315#discussion_r462211770", "createdAt": "2020-07-29T10:53:06Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsTask.java", "diffHunk": "@@ -299,6 +299,7 @@ static void persistProgress(Client client, String jobId, Runnable runnable) {\n                 }\n                 IndexRequest indexRequest = new IndexRequest(indexOrAlias)\n                     .id(progressDocId)\n+                    .setRequireAlias(AnomalyDetectorsIndex.jobStateIndexWriteAlias().equals(indexOrAlias))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwMjI2NA=="}, "originalCommit": {"oid": "3d586a15181ac8446f1b244f3dd7f1f49ab1815f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzNTE5Mg==", "bodyText": "I think the core issue here is the \"index or alias\" check, not what our original methods return. Callers of the method know they are getting an alias and should handle it accordingly.\nHere, we don't know because we searched for the concrete index name as well.", "url": "https://github.com/elastic/elasticsearch/pull/60315#discussion_r462235192", "createdAt": "2020-07-29T11:41:33Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsTask.java", "diffHunk": "@@ -299,6 +299,7 @@ static void persistProgress(Client client, String jobId, Runnable runnable) {\n                 }\n                 IndexRequest indexRequest = new IndexRequest(indexOrAlias)\n                     .id(progressDocId)\n+                    .setRequireAlias(AnomalyDetectorsIndex.jobStateIndexWriteAlias().equals(indexOrAlias))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwMjI2NA=="}, "originalCommit": {"oid": "3d586a15181ac8446f1b244f3dd7f1f49ab1815f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0OTUwOQ==", "bodyText": "Sure, the jobStateIndexWriteAlias method cannot know that.\nI was just thinking out loud whether some additional encapsulation would make the code cleaner but I don't see an easy way to fix it.", "url": "https://github.com/elastic/elasticsearch/pull/60315#discussion_r462249509", "createdAt": "2020-07-29T12:09:19Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsTask.java", "diffHunk": "@@ -299,6 +299,7 @@ static void persistProgress(Client client, String jobId, Runnable runnable) {\n                 }\n                 IndexRequest indexRequest = new IndexRequest(indexOrAlias)\n                     .id(progressDocId)\n+                    .setRequireAlias(AnomalyDetectorsIndex.jobStateIndexWriteAlias().equals(indexOrAlias))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwMjI2NA=="}, "originalCommit": {"oid": "3d586a15181ac8446f1b244f3dd7f1f49ab1815f"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2778, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}