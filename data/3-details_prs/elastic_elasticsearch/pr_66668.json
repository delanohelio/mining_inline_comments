{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMTQwNjE1", "number": 66668, "title": "Assign id to searcher using ids of segments", "bodyText": "The commit id introduced in #63963 does not work well with searchable snapshots as we create a new index commit when restoring from snapshots. This change revises the previous approach that generates a commit id using the ids of the segments of an index commit.\nRelates #63963", "createdAt": "2020-12-20T22:20:35Z", "url": "https://github.com/elastic/elasticsearch/pull/66668", "merged": true, "mergeCommit": {"oid": "fdec6c17478773daff8d9233672538b9d2c28f1c"}, "closed": true, "closedAt": "2020-12-21T15:18:29Z", "author": {"login": "dnhatn"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdoJzudgH2gAyNTQzMTQwNjE1Ojg5NzA0ZDgyNzcyYzEyY2M5MDAxY2VhY2QyZTQ1MzM4NDU3ODIwODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdoWSNAAH2gAyNTQzMTQwNjE1OmE2YWJkMDBlZTA1YmViMDNhZDI4MWU4Yjg3ZmFhNDJlNWU0ZTE1YjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "89704d82772c12cc9001ceacd2e4533845782085", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/89704d82772c12cc9001ceacd2e4533845782085", "committedDate": "2020-12-20T23:19:51Z", "message": "Generate searcher's commit id from ids of segments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97aecc91d500db1f5b2e2fa7ab0f7aa0e3bb83f2", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/97aecc91d500db1f5b2e2fa7ab0f7aa0e3bb83f2", "committedDate": "2020-12-20T23:19:13Z", "message": "stylecheck"}, "afterCommit": {"oid": "89704d82772c12cc9001ceacd2e4533845782085", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/89704d82772c12cc9001ceacd2e4533845782085", "committedDate": "2020-12-20T23:19:51Z", "message": "Generate searcher's commit id from ids of segments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eae1cb162b442ed0ea32fd447fef64f42762dbfc", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/eae1cb162b442ed0ea32fd447fef64f42762dbfc", "committedDate": "2020-12-21T02:32:39Z", "message": "wording"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjM3NDQy", "url": "https://github.com/elastic/elasticsearch/pull/66668#pullrequestreview-556237442", "createdAt": "2020-12-21T09:22:33Z", "commit": {"oid": "eae1cb162b442ed0ea32fd447fef64f42762dbfc"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOToyMjozNFrOIJRicQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOTo1MDo0NVrOIJSWoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5NTQ0MQ==", "bodyText": "Does this assume that the snapshot is mounted with replicas? Otherwise I am not sure we will hit this line.\nNotice that searchable snapshots by default mount with 0 replicas. Perhaps randomly add IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 1 to settings when mounting?", "url": "https://github.com/elastic/elasticsearch/pull/66668#discussion_r546595441", "createdAt": "2020-12-21T09:22:34Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/searchable-snapshots/src/internalClusterTest/java/org/elasticsearch/xpack/searchablesnapshots/RetrySearchIntegTests.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.searchablesnapshots;\n+\n+import org.elasticsearch.action.index.IndexRequestBuilder;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.index.IndexService;\n+import org.elasticsearch.index.engine.Engine;\n+import org.elasticsearch.index.shard.IndexShard;\n+import org.elasticsearch.indices.IndicesService;\n+import org.elasticsearch.snapshots.SnapshotId;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Set;\n+\n+import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+public class RetrySearchIntegTests extends BaseSearchableSnapshotsIntegTestCase {\n+\n+    public void testSearcherId() throws Exception {\n+        final String indexName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n+        final int numberOfShards = between(1, 5);\n+        assertAcked(\n+            client().admin()\n+                .indices()\n+                .prepareCreate(indexName)\n+                .setSettings(Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_SHARDS, numberOfShards).build())\n+                .setMapping(\"{\\\"properties\\\":{\\\"created_date\\\":{\\\"type\\\": \\\"date\\\", \\\"format\\\": \\\"yyyy-MM-dd\\\"}}}\")\n+        );\n+        final List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>();\n+        final int docCount = between(0, 100);\n+        for (int i = 0; i < docCount; i++) {\n+            indexRequestBuilders.add(client().prepareIndex(indexName).setSource(\"created_date\", \"2011-02-02\"));\n+        }\n+        indexRandom(true, false, indexRequestBuilders);\n+        assertThat(\n+            client().admin().indices().prepareForceMerge(indexName).setOnlyExpungeDeletes(true).setFlush(true).get().getFailedShards(),\n+            equalTo(0)\n+        );\n+        refresh(indexName);\n+        forceMerge();\n+\n+        final String repositoryName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n+        createRepository(repositoryName, \"fs\");\n+\n+        final SnapshotId snapshotOne = createSnapshot(repositoryName, \"snapshot-1\", List.of(indexName)).snapshotId();\n+        assertAcked(client().admin().indices().prepareDelete(indexName));\n+\n+        mountSnapshot(repositoryName, snapshotOne.getName(), indexName, indexName, Settings.EMPTY);\n+        ensureGreen(indexName);\n+\n+        final String[] searcherIds = new String[numberOfShards];\n+        Set<String> allocatedNodes = internalCluster().nodesInclude(indexName);\n+        for (String node : allocatedNodes) {\n+            IndexService indexService = internalCluster().getInstance(IndicesService.class, node).indexServiceSafe(resolveIndex(indexName));\n+            for (IndexShard indexShard : indexService) {\n+                try (Engine.SearcherSupplier searcher = indexShard.acquireSearcherSupplier()) {\n+                    assertNotNull(searcher.getCommitId());\n+                    if (searcherIds[indexShard.shardId().id()] != null) {\n+                        assertThat(searcher.getCommitId(), equalTo(searcherIds[indexShard.shardId().id()]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eae1cb162b442ed0ea32fd447fef64f42762dbfc"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYwNTgwNw==", "bodyText": "I wonder if we should rename the method to getSearcherId(), just like you did for the test case? Since it is no longer a commit-id, it might be a confusing name.", "url": "https://github.com/elastic/elasticsearch/pull/66668#discussion_r546605807", "createdAt": "2020-12-21T09:44:34Z", "author": {"login": "henningandersen"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/indices/state/CloseIndexIT.java", "diffHunk": "@@ -486,19 +488,42 @@ public void testCommitIdInSearcher() throws Exception {\n         assertAcked(client().admin().indices().prepareClose(indexName));\n         assertIndexIsClosed(indexName);\n         ensureGreen(indexName);\n-        final String nodeWithPrimary = Iterables.get(internalCluster().nodesInclude(indexName), 0);\n-        IndexShard shard = internalCluster().getInstance(IndicesService.class, nodeWithPrimary)\n-            .indexService(resolveIndex(indexName)).getShard(0);\n-        final String commitId;\n-        try (Engine.SearcherSupplier searcherSupplier = shard.acquireSearcherSupplier(randomFrom(Engine.SearcherScope.values()))) {\n-            assertNotNull(searcherSupplier.getCommitId());\n-            commitId = searcherSupplier.getCommitId();\n+        if (randomBoolean()) {\n+            assertAcked(client().admin().indices().prepareUpdateSettings(indexName)\n+                .setSettings(Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 1)));\n+            internalCluster().ensureAtLeastNumDataNodes(2);\n+            ensureGreen(indexName);\n+        }\n+        String[] searcherIds = new String[numberOfShards];\n+        Set<String> allocatedNodes = internalCluster().nodesInclude(indexName);\n+        for (String node : allocatedNodes) {\n+            IndexService indexService = internalCluster().getInstance(IndicesService.class, node).indexServiceSafe(resolveIndex(indexName));\n+            for (IndexShard shard : indexService) {\n+                try (Engine.SearcherSupplier searcher = shard.acquireSearcherSupplier()) {\n+                    assertNotNull(searcher.getCommitId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eae1cb162b442ed0ea32fd447fef64f42762dbfc"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYwODgwMA==", "bodyText": "Maybe name this lastSearcherId?", "url": "https://github.com/elastic/elasticsearch/pull/66668#discussion_r546608800", "createdAt": "2020-12-21T09:50:45Z", "author": {"login": "henningandersen"}, "path": "server/src/test/java/org/elasticsearch/index/engine/ReadOnlyEngineTests.java", "diffHunk": "@@ -294,4 +296,40 @@ public void testTranslogStats() throws IOException {\n             }\n         }\n     }\n+\n+    public void testSearcherId() throws Exception {\n+        IOUtils.close(engine, store);\n+        AtomicLong globalCheckpoint = new AtomicLong(SequenceNumbers.NO_OPS_PERFORMED);\n+        try (Store store = createStore()) {\n+            final EngineConfig config =\n+                config(defaultSettings, store, createTempDir(), NoMergePolicy.INSTANCE, null, null, globalCheckpoint::get);\n+            String lastCommitId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eae1cb162b442ed0ea32fd447fef64f42762dbfc"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2f78544003a1d9c5e56a5148b96b5d60bc1f0ff", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/d2f78544003a1d9c5e56a5148b96b5d60bc1f0ff", "committedDate": "2020-12-21T13:44:12Z", "message": "commitId -> searcherId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bba8f04d97163dda9097e0540b9025adf81b8b5d", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/bba8f04d97163dda9097e0540b9025adf81b8b5d", "committedDate": "2020-12-21T13:46:18Z", "message": "mount searchable snapshot with replicas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6abd00ee05beb03ad281e8b87faa42e5e4e15b2", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/a6abd00ee05beb03ad281e8b87faa42e5e4e15b2", "committedDate": "2020-12-21T13:52:00Z", "message": "lastCommitId -> lastSearcherId"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4410, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}