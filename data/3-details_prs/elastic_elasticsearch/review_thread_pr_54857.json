{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMDE1MDcw", "number": 54857, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODozNjo0M1rODvdQmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMTo1MDoyMFrODxOBew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDg5MDUwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODozNjo0M1rOGB49lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzozMDozMVrOGCZyrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzNTAzMQ==", "bodyText": "We should reuse the same logic as newFilter a couple lines below to resolve fields, in order to make sure to not break the behavior of exists queries. Can you extract how fields are resolved to a separate method, use it here, and rewrite to a MatchNoneQueryBuilder if none of the fields is mapped?", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r404635031", "createdAt": "2020-04-07T08:36:43Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "diffHunk": "@@ -77,6 +77,18 @@ public String fieldName() {\n         return this.fieldName;\n     }\n \n+    @Override\n+    protected QueryBuilder doRewrite(QueryRewriteContext queryShardContext) throws IOException {\n+        QueryShardContext context = queryShardContext.convertToShardContext();\n+        if (context != null) {\n+            MappedFieldType fieldType = context.fieldMapper(fieldName);\n+            if (!fieldName.contains(\"*\") && fieldType == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6a81669e38f26270ce7306f9d7f197e22db461f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3MjkxMQ==", "bodyText": "Sure, updated the PR. Let me know if that works", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r405172911", "createdAt": "2020-04-07T23:30:31Z", "author": {"login": "SivagurunathanV"}, "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "diffHunk": "@@ -77,6 +77,18 @@ public String fieldName() {\n         return this.fieldName;\n     }\n \n+    @Override\n+    protected QueryBuilder doRewrite(QueryRewriteContext queryShardContext) throws IOException {\n+        QueryShardContext context = queryShardContext.convertToShardContext();\n+        if (context != null) {\n+            MappedFieldType fieldType = context.fieldMapper(fieldName);\n+            if (!fieldName.contains(\"*\") && fieldType == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzNTAzMQ=="}, "originalCommit": {"oid": "a6a81669e38f26270ce7306f9d7f197e22db461f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzg5NDU3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwOToyNTo0MlrOGD1zRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwMzoyNDo1MFrOGER1_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4MDM5MA==", "bodyText": "It's very easy for this method to get out-of-sync with newFilter, which would likely translate into bugs. Can you make this method called by newFilter? For instance I wonder that it could return a collection of fields instead of a boolean, and all above return false statements would become return Collections.emptySet(); and then in doRewrite we'd check whether the return collection is empty? Finally in doToQuery we could raise an exception when the returned collection is empty, as it would mean that the query wasn't rewritten first even though it is a requirement of the API.", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r406680390", "createdAt": "2020-04-10T09:25:42Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "diffHunk": "@@ -181,6 +192,45 @@ private static Query newObjectFieldExistsQuery(QueryShardContext context, String\n         return new ConstantScoreQuery(booleanQuery.build());\n     }\n \n+    /**\n+     * Helper method to validate whether field is mapped\n+     * @return true if the field is mapped, false otherwise\n+     */\n+\n+    private static boolean isFieldMapped(QueryShardContext context, String fieldPattern) {\n+        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType = (FieldNamesFieldMapper.FieldNamesFieldType) context\n+            .getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n+\n+        if (fieldNamesFieldType == null) {\n+            // can only happen when no types exist, so no docs exist either\n+            return false;\n+        }\n+\n+        final Collection<String> fields;\n+        if (context.getObjectMapper(fieldPattern) != null) {\n+            // the _field_names field also indexes objects, so we don't have to\n+            // do any more work to support exists queries on whole objects\n+            fields = Collections.singleton(fieldPattern);\n+        } else {\n+            fields = context.simpleMatchToIndexNames(fieldPattern);\n+        }\n+\n+        if (fields.size() == 1) {\n+            String field = fields.iterator().next();\n+            MappedFieldType fieldType = context.getMapperService().fieldType(field);\n+            if (fieldType == null) {\n+                // The field does not exist as a leaf but could be an object so\n+                // check for an object mapper\n+                if (context.getObjectMapper(field) != null) {\n+                    return false;\n+                }\n+                return false; // no field mapped\n+            }\n+        }\n+\n+        return true;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfb2fbc8f62fb9ed9251812fa37c051ea9b53e6"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEzOTgzOA==", "bodyText": "A good suggestion \ud83d\udc4d I made the necessary changes. Thanks for pointing out.", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r407139838", "createdAt": "2020-04-12T03:24:50Z", "author": {"login": "SivagurunathanV"}, "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "diffHunk": "@@ -181,6 +192,45 @@ private static Query newObjectFieldExistsQuery(QueryShardContext context, String\n         return new ConstantScoreQuery(booleanQuery.build());\n     }\n \n+    /**\n+     * Helper method to validate whether field is mapped\n+     * @return true if the field is mapped, false otherwise\n+     */\n+\n+    private static boolean isFieldMapped(QueryShardContext context, String fieldPattern) {\n+        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType = (FieldNamesFieldMapper.FieldNamesFieldType) context\n+            .getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n+\n+        if (fieldNamesFieldType == null) {\n+            // can only happen when no types exist, so no docs exist either\n+            return false;\n+        }\n+\n+        final Collection<String> fields;\n+        if (context.getObjectMapper(fieldPattern) != null) {\n+            // the _field_names field also indexes objects, so we don't have to\n+            // do any more work to support exists queries on whole objects\n+            fields = Collections.singleton(fieldPattern);\n+        } else {\n+            fields = context.simpleMatchToIndexNames(fieldPattern);\n+        }\n+\n+        if (fields.size() == 1) {\n+            String field = fields.iterator().next();\n+            MappedFieldType fieldType = context.getMapperService().fieldType(field);\n+            if (fieldType == null) {\n+                // The field does not exist as a leaf but could be an object so\n+                // check for an object mapper\n+                if (context.getObjectMapper(field) != null) {\n+                    return false;\n+                }\n+                return false; // no field mapped\n+            }\n+        }\n+\n+        return true;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4MDM5MA=="}, "originalCommit": {"oid": "bbfb2fbc8f62fb9ed9251812fa37c051ea9b53e6"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzg5NjA4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwOToyNjoyNFrOGD10Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwMzoyNDoxMVrOGER11w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4MDYxOQ==", "bodyText": "please remove this empty line for consistency with the rest of the code base, we generally don't leave empty lines between javadocs and methods", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r406680619", "createdAt": "2020-04-10T09:26:24Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "diffHunk": "@@ -181,6 +192,45 @@ private static Query newObjectFieldExistsQuery(QueryShardContext context, String\n         return new ConstantScoreQuery(booleanQuery.build());\n     }\n \n+    /**\n+     * Helper method to validate whether field is mapped\n+     * @return true if the field is mapped, false otherwise\n+     */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfb2fbc8f62fb9ed9251812fa37c051ea9b53e6"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEzOTc5OQ==", "bodyText": "yes made changes.", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r407139799", "createdAt": "2020-04-12T03:24:11Z", "author": {"login": "SivagurunathanV"}, "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "diffHunk": "@@ -181,6 +192,45 @@ private static Query newObjectFieldExistsQuery(QueryShardContext context, String\n         return new ConstantScoreQuery(booleanQuery.build());\n     }\n \n+    /**\n+     * Helper method to validate whether field is mapped\n+     * @return true if the field is mapped, false otherwise\n+     */\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4MDYxOQ=="}, "originalCommit": {"oid": "bbfb2fbc8f62fb9ed9251812fa37c051ea9b53e6"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzkwNTkxOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwOTozMDozMVrOGD152g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwMzoyMzo1NlrOGER1rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4MjA3NA==", "bodyText": "Let's remove this assertion on the error message. I suspect that attempting to maintain this error message is not going to be worth the efforts, and there is no point in asserting on an error message that is not helpful.", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r406682074", "createdAt": "2020-04-10T09:30:31Z", "author": {"login": "jpountz"}, "path": "server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java", "diffHunk": "@@ -62,12 +62,12 @@ protected void doAssertLuceneQuery(ExistsQueryBuilder queryBuilder, Query query,\n         String fieldPattern = queryBuilder.fieldName();\n         Collection<String> fields = context.simpleMatchToIndexNames(fieldPattern);\n         Collection<String> mappedFields = fields.stream().filter((field) -> context.getObjectMapper(field) != null\n-                || context.getMapperService().fieldType(field) != null).collect(Collectors.toList());\n+            || context.getMapperService().fieldType(field) != null).collect(Collectors.toList());\n         if (fields.size() == 1 && mappedFields.size() == 0) {\n             assertThat(query, instanceOf(MatchNoDocsQuery.class));\n             MatchNoDocsQuery matchNoDocsQuery = (MatchNoDocsQuery) query;\n             assertThat(matchNoDocsQuery.toString(null),\n-                    containsString(\"No field \\\"\" + fields.iterator().next() + \"\\\" exists in mappings.\"));\n+                containsString(\"User requested \\\"match_none\\\" query.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfb2fbc8f62fb9ed9251812fa37c051ea9b53e6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEzOTc1OA==", "bodyText": "Sure, done.", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r407139758", "createdAt": "2020-04-12T03:23:56Z", "author": {"login": "SivagurunathanV"}, "path": "server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java", "diffHunk": "@@ -62,12 +62,12 @@ protected void doAssertLuceneQuery(ExistsQueryBuilder queryBuilder, Query query,\n         String fieldPattern = queryBuilder.fieldName();\n         Collection<String> fields = context.simpleMatchToIndexNames(fieldPattern);\n         Collection<String> mappedFields = fields.stream().filter((field) -> context.getObjectMapper(field) != null\n-                || context.getMapperService().fieldType(field) != null).collect(Collectors.toList());\n+            || context.getMapperService().fieldType(field) != null).collect(Collectors.toList());\n         if (fields.size() == 1 && mappedFields.size() == 0) {\n             assertThat(query, instanceOf(MatchNoDocsQuery.class));\n             MatchNoDocsQuery matchNoDocsQuery = (MatchNoDocsQuery) query;\n             assertThat(matchNoDocsQuery.toString(null),\n-                    containsString(\"No field \\\"\" + fields.iterator().next() + \"\\\" exists in mappings.\"));\n+                containsString(\"User requested \\\"match_none\\\" query.\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4MjA3NA=="}, "originalCommit": {"oid": "bbfb2fbc8f62fb9ed9251812fa37c051ea9b53e6"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzkwNjc3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwOTozMDo1N1rOGD16Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwMzoyNTowMFrOGER2BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4MjIxNA==", "bodyText": "can you undo all indentation changes to this pull request?", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r406682214", "createdAt": "2020-04-10T09:30:57Z", "author": {"login": "jpountz"}, "path": "server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java", "diffHunk": "@@ -115,7 +115,7 @@ public void testIllegalArguments() {\n \n     public void testFromJson() throws IOException {\n         String json =\n-                \"{\\n\" +\n+            \"{\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfb2fbc8f62fb9ed9251812fa37c051ea9b53e6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEzOTg0NQ==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r407139845", "createdAt": "2020-04-12T03:25:00Z", "author": {"login": "SivagurunathanV"}, "path": "server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java", "diffHunk": "@@ -115,7 +115,7 @@ public void testIllegalArguments() {\n \n     public void testFromJson() throws IOException {\n         String json =\n-                \"{\\n\" +\n+            \"{\\n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4MjIxNA=="}, "originalCommit": {"oid": "bbfb2fbc8f62fb9ed9251812fa37c051ea9b53e6"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTM2MzAzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMTo0OTowN1rOGEkTxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjowNTo1N1rOGGiExQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ0MjM3Mw==", "bodyText": "I believe that this entire if statement can be removed without affecting correctness. It is not possible to have a field that is neither and object nor a field at this stage.", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r407442373", "createdAt": "2020-04-13T11:49:07Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "diffHunk": "@@ -181,6 +183,43 @@ private static Query newObjectFieldExistsQuery(QueryShardContext context, String\n         return new ConstantScoreQuery(booleanQuery.build());\n     }\n \n+    /**\n+     * Helper method to get field mapped to this fieldPattern\n+     * @return return collection of fields if exists else return empty.\n+     */\n+    private static Collection<String> getMappedField(QueryShardContext context, String fieldPattern) {\n+        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType = (FieldNamesFieldMapper.FieldNamesFieldType) context\n+            .getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n+\n+        if (fieldNamesFieldType == null) {\n+            // can only happen when no types exist, so no docs exist either\n+            return Collections.emptySet();\n+        }\n+\n+        final Collection<String> fields;\n+        if (context.getObjectMapper(fieldPattern) != null) {\n+            // the _field_names field also indexes objects, so we don't have to\n+            // do any more work to support exists queries on whole objects\n+            fields = Collections.singleton(fieldPattern);\n+        } else {\n+            fields = context.simpleMatchToIndexNames(fieldPattern);\n+        }\n+\n+        if (fields.size() == 1) {\n+            String field = fields.iterator().next();\n+            MappedFieldType fieldType = context.getMapperService().fieldType(field);\n+            if (fieldType == null) {\n+                // The field does not exist as a leaf but could be an object so\n+                // check for an object mapper\n+                if (context.getObjectMapper(field) == null) {\n+                    return Collections.emptySet();\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13901cb4b9c16765e08a2365eb1da1880a18f2ed"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyNDQ2OA==", "bodyText": "But in this, if statement we are checking the field type.\n MappedFieldType fieldType = context.getMapperService().fieldType(field);", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r409324468", "createdAt": "2020-04-16T06:59:27Z", "author": {"login": "SivagurunathanV"}, "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "diffHunk": "@@ -181,6 +183,43 @@ private static Query newObjectFieldExistsQuery(QueryShardContext context, String\n         return new ConstantScoreQuery(booleanQuery.build());\n     }\n \n+    /**\n+     * Helper method to get field mapped to this fieldPattern\n+     * @return return collection of fields if exists else return empty.\n+     */\n+    private static Collection<String> getMappedField(QueryShardContext context, String fieldPattern) {\n+        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType = (FieldNamesFieldMapper.FieldNamesFieldType) context\n+            .getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n+\n+        if (fieldNamesFieldType == null) {\n+            // can only happen when no types exist, so no docs exist either\n+            return Collections.emptySet();\n+        }\n+\n+        final Collection<String> fields;\n+        if (context.getObjectMapper(fieldPattern) != null) {\n+            // the _field_names field also indexes objects, so we don't have to\n+            // do any more work to support exists queries on whole objects\n+            fields = Collections.singleton(fieldPattern);\n+        } else {\n+            fields = context.simpleMatchToIndexNames(fieldPattern);\n+        }\n+\n+        if (fields.size() == 1) {\n+            String field = fields.iterator().next();\n+            MappedFieldType fieldType = context.getMapperService().fieldType(field);\n+            if (fieldType == null) {\n+                // The field does not exist as a leaf but could be an object so\n+                // check for an object mapper\n+                if (context.getObjectMapper(field) == null) {\n+                    return Collections.emptySet();\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ0MjM3Mw=="}, "originalCommit": {"oid": "13901cb4b9c16765e08a2365eb1da1880a18f2ed"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUwMjkxNw==", "bodyText": "Thanks I had the wrong assumption that simpleMatchToIndexName would return an empty set if the field is not mapped.", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r409502917", "createdAt": "2020-04-16T12:05:57Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "diffHunk": "@@ -181,6 +183,43 @@ private static Query newObjectFieldExistsQuery(QueryShardContext context, String\n         return new ConstantScoreQuery(booleanQuery.build());\n     }\n \n+    /**\n+     * Helper method to get field mapped to this fieldPattern\n+     * @return return collection of fields if exists else return empty.\n+     */\n+    private static Collection<String> getMappedField(QueryShardContext context, String fieldPattern) {\n+        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType = (FieldNamesFieldMapper.FieldNamesFieldType) context\n+            .getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n+\n+        if (fieldNamesFieldType == null) {\n+            // can only happen when no types exist, so no docs exist either\n+            return Collections.emptySet();\n+        }\n+\n+        final Collection<String> fields;\n+        if (context.getObjectMapper(fieldPattern) != null) {\n+            // the _field_names field also indexes objects, so we don't have to\n+            // do any more work to support exists queries on whole objects\n+            fields = Collections.singleton(fieldPattern);\n+        } else {\n+            fields = context.simpleMatchToIndexNames(fieldPattern);\n+        }\n+\n+        if (fields.size() == 1) {\n+            String field = fields.iterator().next();\n+            MappedFieldType fieldType = context.getMapperService().fieldType(field);\n+            if (fieldType == null) {\n+                // The field does not exist as a leaf but could be an object so\n+                // check for an object mapper\n+                if (context.getObjectMapper(field) == null) {\n+                    return Collections.emptySet();\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ0MjM3Mw=="}, "originalCommit": {"oid": "13901cb4b9c16765e08a2365eb1da1880a18f2ed"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTM2NTcxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMTo1MDoyMFrOGEkVSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNjo1NzowOVrOGGXHRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ0Mjc2MQ==", "bodyText": "this line is unreachable right? maybe throw an IllegalStateException instead? If I'm wrong and this is not dead code, would you mind explaining the conditions under which it is triggered?", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r407442761", "createdAt": "2020-04-13T11:50:20Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "diffHunk": "@@ -165,7 +167,7 @@ private static Query newFieldExistsQuery(QueryShardContext context, String field\n             if (context.getObjectMapper(field) != null) {\n                 return newObjectFieldExistsQuery(context, field);\n             }\n-            return Queries.newMatchNoDocsQuery(\"No field \\\"\" + field + \"\\\" exists in mappings.\");\n+            return Queries.newMatchNoDocsQuery(\"User requested \\\"match_none\\\" query.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13901cb4b9c16765e08a2365eb1da1880a18f2ed"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyMzMzMw==", "bodyText": "No, when User looks for an Object field that does not exist in the mapping, it will fall into this - as per my understanding. please correct me if I am wrong.", "url": "https://github.com/elastic/elasticsearch/pull/54857#discussion_r409323333", "createdAt": "2020-04-16T06:57:09Z", "author": {"login": "SivagurunathanV"}, "path": "server/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java", "diffHunk": "@@ -165,7 +167,7 @@ private static Query newFieldExistsQuery(QueryShardContext context, String field\n             if (context.getObjectMapper(field) != null) {\n                 return newObjectFieldExistsQuery(context, field);\n             }\n-            return Queries.newMatchNoDocsQuery(\"No field \\\"\" + field + \"\\\" exists in mappings.\");\n+            return Queries.newMatchNoDocsQuery(\"User requested \\\"match_none\\\" query.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ0Mjc2MQ=="}, "originalCommit": {"oid": "13901cb4b9c16765e08a2365eb1da1880a18f2ed"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1276, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}