{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MzkwODAz", "number": 59038, "title": "Add the possibility to inject a custom RecoveryState factory to IndexStorePlugin implementations", "bodyText": "Add a custom factory for recovery state into IndexStorePlugin that\nallows different implementors to provide its own RecoveryState\nimplementation.", "createdAt": "2020-07-05T10:54:08Z", "url": "https://github.com/elastic/elasticsearch/pull/59038", "merged": true, "mergeCommit": {"oid": "793750e0992ca6b80a4921313185c050bb6936f6"}, "closed": true, "closedAt": "2020-07-07T09:14:26Z", "author": {"login": "fcofdez"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcx6aK5gH2gAyNDQ0MzkwODAzOjkwZjg1ZGExMDY5MGRmNTZjM2I1MTRkOTIxZjljYzY3MjE4NTljMjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyhfNTgH2gAyNDQ0MzkwODAzOjIzODc0MTdhN2MzNTY5OGUwNjEzZjRhYTZiOTA5ZmM5YTM1MGNjMGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "90f85da10690df56c3b514d921f9cc6721859c26", "author": {"user": {"login": "fcofdez", "name": "Francisco Fern\u00e1ndez Casta\u00f1o"}}, "url": "https://github.com/elastic/elasticsearch/commit/90f85da10690df56c3b514d921f9cc6721859c26", "committedDate": "2020-07-05T10:51:27Z", "message": "Add the possibility to inject a custom RecoveryState factory.\n\nAdd a custom factory for recovery state into IndexStorePlugin that\nallows different implementors to provide its own RecoveryState\nimplementation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyODYxNzY5", "url": "https://github.com/elastic/elasticsearch/pull/59038#pullrequestreview-442861769", "createdAt": "2020-07-06T08:12:42Z", "commit": {"oid": "90f85da10690df56c3b514d921f9cc6721859c26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwODoxMjo0MlrOGtNLcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwODoxMjo0MlrOGtNLcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA1NTAyNw==", "bodyText": "Can we lose this override? It looks only to be used in one test that could use the default recovery state factory anyway.", "url": "https://github.com/elastic/elasticsearch/pull/59038#discussion_r450055027", "createdAt": "2020-07-06T08:12:42Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/indices/IndicesService.java", "diffHunk": "@@ -742,6 +745,30 @@ public synchronized void verifyIndexMetadata(IndexMetadata metadata, IndexMetada\n         }\n     }\n \n+    @Override\n+    public IndexShard createShard(\n+            final ShardRouting shardRouting,\n+            final PeerRecoveryTargetService recoveryTargetService,\n+            final PeerRecoveryTargetService.RecoveryListener recoveryListener,\n+            final RepositoriesService repositoriesService,\n+            final Consumer<IndexShard.ShardFailure> onShardFailure,\n+            final Consumer<ShardId> globalCheckpointSyncer,\n+            final RetentionLeaseSyncer retentionLeaseSyncer,\n+            final DiscoveryNode targetNode,\n+            final DiscoveryNode sourceNode) throws IOException {\n+        IndexService indexService = indexService(shardRouting.index());\n+        RecoveryState recoveryState = indexService.createRecoveryState(shardRouting, targetNode, sourceNode);\n+\n+        return createShard(shardRouting,\n+            recoveryState,\n+            recoveryTargetService,\n+            recoveryListener,\n+            repositoriesService,\n+            onShardFailure,\n+            globalCheckpointSyncer,\n+            retentionLeaseSyncer);\n+    }\n+\n     @Override\n     public IndexShard createShard(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f85da10690df56c3b514d921f9cc6721859c26"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyODcyNTg2", "url": "https://github.com/elastic/elasticsearch/pull/59038#pullrequestreview-442872586", "createdAt": "2020-07-06T08:27:36Z", "commit": {"oid": "90f85da10690df56c3b514d921f9cc6721859c26"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwODoyNzozNlrOGtNsKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwODozNTo0NlrOGtN-BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA2MzQwMg==", "bodyText": "Can we assert that indexService exists?", "url": "https://github.com/elastic/elasticsearch/pull/59038#discussion_r450063402", "createdAt": "2020-07-06T08:27:36Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/indices/IndicesService.java", "diffHunk": "@@ -742,6 +745,30 @@ public synchronized void verifyIndexMetadata(IndexMetadata metadata, IndexMetada\n         }\n     }\n \n+    @Override\n+    public IndexShard createShard(\n+            final ShardRouting shardRouting,\n+            final PeerRecoveryTargetService recoveryTargetService,\n+            final PeerRecoveryTargetService.RecoveryListener recoveryListener,\n+            final RepositoriesService repositoriesService,\n+            final Consumer<IndexShard.ShardFailure> onShardFailure,\n+            final Consumer<ShardId> globalCheckpointSyncer,\n+            final RetentionLeaseSyncer retentionLeaseSyncer,\n+            final DiscoveryNode targetNode,\n+            final DiscoveryNode sourceNode) throws IOException {\n+        IndexService indexService = indexService(shardRouting.index());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f85da10690df56c3b514d921f9cc6721859c26"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA2Nzk3Mw==", "bodyText": "Can we add a test to ensure that a plugin cannot override the default recovery state factory? And that duplicates are not allowed too?", "url": "https://github.com/elastic/elasticsearch/pull/59038#discussion_r450067973", "createdAt": "2020-07-06T08:35:46Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/plugins/IndexStorePlugin.java", "diffHunk": "@@ -55,4 +60,26 @@\n      */\n     Map<String, DirectoryFactory> getDirectoryFactories();\n \n+    /**\n+     * An interface that allows to create a new {@link RecoveryState} per shard.\n+     */\n+    @FunctionalInterface\n+    interface RecoveryStateFactory {\n+        /**\n+         * Creates a new {@link RecoveryState} per shard. This method is called once per shard on shard creation.\n+         * @return a new RecoveryState instance\n+         */\n+        RecoveryState newRecoveryState(ShardRouting shardRouting, DiscoveryNode targetNode, @Nullable DiscoveryNode sourceNode);\n+    }\n+\n+    /**\n+     * The {@link RecoveryStateFactory} mappings for this plugin. When an index is created the recovery type setting\n+     * {@link org.elasticsearch.index.IndexModule#INDEX_RECOVERY_TYPE_SETTING} on the index will be examined and either use the default\n+     * or looked up among all the recovery state factories from {@link IndexStorePlugin} plugins.\n+     *\n+     * @return a map from recovery type to an recovery state factory\n+     */\n+    default Map<String, RecoveryStateFactory> getRecoveryStateFactories() {\n+        return Collections.emptyMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f85da10690df56c3b514d921f9cc6721859c26"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81c33e7d27253bb88c22f6c37c11ed929b1567d7", "author": {"user": {"login": "fcofdez", "name": "Francisco Fern\u00e1ndez Casta\u00f1o"}}, "url": "https://github.com/elastic/elasticsearch/commit/81c33e7d27253bb88c22f6c37c11ed929b1567d7", "committedDate": "2020-07-06T10:56:02Z", "message": "Address review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0aad47b516086140229ed4d1dc1e51e4db1e5558", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/0aad47b516086140229ed4d1dc1e51e4db1e5558", "committedDate": "2020-07-06T17:00:51Z", "message": "Merge branch 'master' into add-recovery-state-factory-to-index-store-plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjE0NzMw", "url": "https://github.com/elastic/elasticsearch/pull/59038#pullrequestreview-443614730", "createdAt": "2020-07-07T07:05:38Z", "commit": {"oid": "0aad47b516086140229ed4d1dc1e51e4db1e5558"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzowNTozOFrOGtxpAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzowNTozOFrOGtxpAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1MjQxNg==", "bodyText": "I think we shouldn't be asserting that our recovery factories have a toString() that returns org.elasticsearch.plugins.IndexStorePluginTests$RecoveryFactory@[\\\\w\\\\d]+: the fact that the message contains the duplicated key (and the string Duplicate key) should be enough IMO.\nBit of a pain the message doesn't contain the key in Java 8 but such is life.", "url": "https://github.com/elastic/elasticsearch/pull/59038#discussion_r450652416", "createdAt": "2020-07-07T07:05:38Z", "author": {"login": "DaveCTurner"}, "path": "server/src/test/java/org/elasticsearch/plugins/IndexStorePluginTests.java", "diffHunk": "@@ -92,4 +127,20 @@ public void testDuplicateIndexStoreFactories() {\n         }\n     }\n \n+    public void testDuplicateIndexStoreRecoveryStateFactories() {\n+        final Settings settings = Settings.builder().put(\"path.home\", createTempDir()).build();\n+        final IllegalStateException e = expectThrows(\n+            IllegalStateException.class, () -> new MockNode(settings, Arrays.asList(FooCustomRecoveryStore.class,\n+                                                                                    BarCustomRecoveryStore.class)));\n+        if (JavaVersion.current().compareTo(JavaVersion.parse(\"9\")) >= 0) {\n+            assertThat(e, hasToString(matches(\n+                \"java.lang.IllegalStateException: Duplicate key recovery-type \\\\(attempted merging values \" +\n+                    \"org.elasticsearch.plugins.IndexStorePluginTests\\\\$RecoveryFactory@[\\\\w\\\\d]+ \" +\n+                    \"and org.elasticsearch.plugins.IndexStorePluginTests\\\\$RecoveryFactory@[\\\\w\\\\d]+\\\\)\")));\n+        } else {\n+            assertThat(e, hasToString(matches(\n+                \"java.lang.IllegalStateException: Duplicate key \" +\n+                    \"org.elasticsearch.plugins.IndexStorePluginTests$RecoveryFactory@[\\\\w\\\\d]+\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0aad47b516086140229ed4d1dc1e51e4db1e5558"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjI3MjYx", "url": "https://github.com/elastic/elasticsearch/pull/59038#pullrequestreview-443627261", "createdAt": "2020-07-07T07:24:55Z", "commit": {"oid": "0aad47b516086140229ed4d1dc1e51e4db1e5558"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2387417a7c35698e0613f4aa6b909fc9a350cc0b", "author": {"user": {"login": "fcofdez", "name": "Francisco Fern\u00e1ndez Casta\u00f1o"}}, "url": "https://github.com/elastic/elasticsearch/commit/2387417a7c35698e0613f4aa6b909fc9a350cc0b", "committedDate": "2020-07-07T08:23:15Z", "message": "Addres reveiw comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2267, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}