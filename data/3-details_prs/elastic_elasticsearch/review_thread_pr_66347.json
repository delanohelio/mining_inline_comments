{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMjg3MTU3", "number": 66347, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNTo1MVrOFFnr6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNzowM1rOFFnu3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDM3NDE5OnYy", "diffSide": "RIGHT", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/MlClientDocumentationIT.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNTo1MVrOIGN9xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzowNjoyN1rOIGWJtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5MTE3Mw==", "bodyText": "Just double-checking: Is it ok that this snippet will be printed in the public docs?", "url": "https://github.com/elastic/elasticsearch/pull/66347#discussion_r543391173", "createdAt": "2020-12-15T14:25:51Z", "author": {"login": "przemekwitek"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/MlClientDocumentationIT.java", "diffHunk": "@@ -1789,7 +1798,10 @@ public void testPostData() throws Exception {\n             postDataRequest.setResetStart(null);\n \n             // tag::post-data-execute\n-            PostDataResponse postDataResponse = client.machineLearning().postData(postDataRequest, RequestOptions.DEFAULT);\n+            RequestOptions ignoreDeprecationsWarningsOptions = RequestOptions.DEFAULT.toBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "170f85058435c16376e7f9b6f36dcaff6462bf3d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyMzc5OA==", "bodyText": "This is the worst thing about this PR.  The end user won't need to ignore the deprecation warnings, because they won't be fatal for the end user, only our test framework.  But I tried a few ways to avoid this while still keeping the code executable and they didn't work - putting it in an if (false) with the else doing the version that works in the test framework and putting the appropriate end user code in a try/catch (AssertionError e).\nI just thought of a couple of other ways to do it that might work - putting the tagged code in a /*/*/ block comment or in a dummy method that's not called.  I'll see if those work.", "url": "https://github.com/elastic/elasticsearch/pull/66347#discussion_r543423798", "createdAt": "2020-12-15T15:04:13Z", "author": {"login": "droberts195"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/MlClientDocumentationIT.java", "diffHunk": "@@ -1789,7 +1798,10 @@ public void testPostData() throws Exception {\n             postDataRequest.setResetStart(null);\n \n             // tag::post-data-execute\n-            PostDataResponse postDataResponse = client.machineLearning().postData(postDataRequest, RequestOptions.DEFAULT);\n+            RequestOptions ignoreDeprecationsWarningsOptions = RequestOptions.DEFAULT.toBuilder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5MTE3Mw=="}, "originalCommit": {"oid": "170f85058435c16376e7f9b6f36dcaff6462bf3d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUyNTMwMg==", "bodyText": "putting the tagged code in a /*/*/ block comment\n\nThis approach passed the PR CI.  I don't know what it will look like in the final HTML docs though.  I will check after this is merged and if it doesn't work then try a different approach in a followup.", "url": "https://github.com/elastic/elasticsearch/pull/66347#discussion_r543525302", "createdAt": "2020-12-15T17:06:27Z", "author": {"login": "droberts195"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/MlClientDocumentationIT.java", "diffHunk": "@@ -1789,7 +1798,10 @@ public void testPostData() throws Exception {\n             postDataRequest.setResetStart(null);\n \n             // tag::post-data-execute\n-            PostDataResponse postDataResponse = client.machineLearning().postData(postDataRequest, RequestOptions.DEFAULT);\n+            RequestOptions ignoreDeprecationsWarningsOptions = RequestOptions.DEFAULT.toBuilder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5MTE3Mw=="}, "originalCommit": {"oid": "170f85058435c16376e7f9b6f36dcaff6462bf3d"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDM4MTcyOnYy", "diffSide": "RIGHT", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNzowM1rOIGOCGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNzowM1rOIGOCGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5MjI4MQ==", "bodyText": "Would it make sense to introduce POST_DATA_OPTIONS static member just like you did in the other test?", "url": "https://github.com/elastic/elasticsearch/pull/66347#discussion_r543392281", "createdAt": "2020-12-15T14:27:03Z", "author": {"login": "przemekwitek"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningIT.java", "diffHunk": "@@ -435,7 +435,11 @@ public void testForecastJob() throws Exception {\n             builder.addDoc(hashMap);\n         }\n         PostDataRequest postDataRequest = new PostDataRequest(jobId, builder);\n-        machineLearningClient.postData(postDataRequest, RequestOptions.DEFAULT);\n+        // Post data is deprecated, so expect a deprecation warning\n+        RequestOptions requestOptions = RequestOptions.DEFAULT.toBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "170f85058435c16376e7f9b6f36dcaff6462bf3d"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4611, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}