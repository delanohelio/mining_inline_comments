{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0ODk0Mjg1", "number": 64543, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjoyNTowOVrOE1TLrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjoyNTowOVrOE1TLrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzI0MjY5OnYy", "diffSide": "LEFT", "path": "server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjoyNTowOVrOHtfzHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjoyNTowOVrOHtfzHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ2ODk1OA==", "bodyText": "Could you add the indenting back for this one?", "url": "https://github.com/elastic/elasticsearch/pull/64543#discussion_r517468958", "createdAt": "2020-11-04T16:25:09Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java", "diffHunk": "@@ -436,61 +448,62 @@ public void testMultipleLevelsIncludeRoot2() throws Exception {\n \n         ParsedDocument doc = docMapper.parse(new SourceToParse(\"test\", \"1\",\n             BytesReference.bytes(XContentFactory.jsonBuilder()\n-                        .startObject().startArray(\"nested1\")\n-                        .startObject().startArray(\"nested2\")\n-                        .startObject().startArray(\"nested3\").startObject().field(\"foo\", \"bar\")\n-                        .endObject().endArray().endObject().endArray().endObject().endArray()\n-                        .endObject()),\n+                .startObject().startArray(\"nested1\")\n+                .startObject().startArray(\"nested2\")\n+                .startObject().startArray(\"nested3\").startObject().field(\"foo\", \"bar\")\n+                .endObject().endArray().endObject().endArray().endObject().endArray()\n+                .endObject()),\n             XContentType.JSON));\n \n         final Collection<IndexableField> fields = doc.rootDoc().getFields();\n         assertThat(fields.size(), equalTo(new HashSet<>(fields).size()));\n     }\n \n-   /**\n+    /**\n      * Same as {@link NestedObjectMapperTests#testMultipleLevelsIncludeRoot1()} but tests that\n      * the redundant includes are removed even if each individual mapping doesn't contain the\n      * redundancy, only the merged mapping does.\n      */\n     public void testMultipleLevelsIncludeRootWithMerge() throws Exception {\n-        MapperService mapperService = createIndex(\"test\").mapperService();\n+        MapperService mapperService = createMapperService(mapping(b -> {\n+        }));\n \n         String firstMapping = Strings.toString(XContentFactory.jsonBuilder().startObject()\n             .startObject(MapperService.SINGLE_MAPPING_NAME)\n-                .startObject(\"properties\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52283ab0712567023d2ee579680d3994526c3bf0"}, "originalPosition": 259}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4051, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}