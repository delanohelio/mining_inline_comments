{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MDQ1NTAw", "number": 63276, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOToyOToxNlrOEqc8Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOToyOToxNlrOEqc8Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTQ5ODU5OnYy", "diffSide": "LEFT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/optimizer/Optimizer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOToyOToxNlrOHcqwxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTo1MDoyOFrOHcrbRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgyMjc4OQ==", "bodyText": "Can this be kept around but not actually used?", "url": "https://github.com/elastic/elasticsearch/pull/63276#discussion_r499822789", "createdAt": "2020-10-05T19:29:16Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/optimizer/Optimizer.java", "diffHunk": "@@ -108,51 +102,6 @@ public LogicalPlan optimize(LogicalPlan verified) {\n         return Arrays.asList(substitutions, operators, constraints, operators, ordering, local, label);\n     }\n \n-    private static class ReplaceWildcards extends OptimizerRule<Filter> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9efd6042f31629b76a26ce3a59f03381521a146"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgzMzY2OQ==", "bodyText": "It can be but considering it worked when dealing with operators and * within a string, unless this scenario applies again this rule will not be needed.", "url": "https://github.com/elastic/elasticsearch/pull/63276#discussion_r499833669", "createdAt": "2020-10-05T19:50:28Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/optimizer/Optimizer.java", "diffHunk": "@@ -108,51 +102,6 @@ public LogicalPlan optimize(LogicalPlan verified) {\n         return Arrays.asList(substitutions, operators, constraints, operators, ordering, local, label);\n     }\n \n-    private static class ReplaceWildcards extends OptimizerRule<Filter> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgyMjc4OQ=="}, "originalCommit": {"oid": "a9efd6042f31629b76a26ce3a59f03381521a146"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3202, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}