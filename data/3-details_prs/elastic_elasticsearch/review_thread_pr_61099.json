{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NDI5MTM0", "number": 61099, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzozNzowNFrOEYKSTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzo0MDozM1rOEYKaNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzY5ODA3OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/ArgumentsNode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzozNzowNFrOHAWUYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzo0Njo0MVrOHAW07g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEyNzcxNQ==", "bodyText": "Copy/Paste error", "url": "https://github.com/elastic/elasticsearch/pull/61099#discussion_r470127715", "createdAt": "2020-08-13T17:37:04Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/ArgumentsNode.java", "diffHunk": "@@ -36,6 +36,6 @@ public void addArgumentNode(ExpressionNode argumentNode) {\n         return argumentNodes;\n     }\n \n-    /* ---- end tree structure */\n+    /* ---- end tree structure, visitor ---- */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd23c889e6da86b4035266c0bc59ccee9d2bab10"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEzNjA0Ng==", "bodyText": "Fixed.", "url": "https://github.com/elastic/elasticsearch/pull/61099#discussion_r470136046", "createdAt": "2020-08-13T17:46:41Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/ArgumentsNode.java", "diffHunk": "@@ -36,6 +36,6 @@ public void addArgumentNode(ExpressionNode argumentNode) {\n         return argumentNodes;\n     }\n \n-    /* ---- end tree structure */\n+    /* ---- end tree structure, visitor ---- */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEyNzcxNQ=="}, "originalCommit": {"oid": "fd23c889e6da86b4035266c0bc59ccee9d2bab10"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzcxODI4OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/IRNode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzo0MDozM1rOHAWgoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzo1MjozMVrOHAXDmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEzMDg0OA==", "bodyText": "Can this be declared abstract?", "url": "https://github.com/elastic/elasticsearch/pull/61099#discussion_r470130848", "createdAt": "2020-08-13T17:40:33Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/IRNode.java", "diffHunk": "@@ -44,10 +44,17 @@ public Location getLocation() {\n     /**\n      * Callback to visit an ir tree node.\n      */\n-    public <Input, Output> Output visit(IRTreeVisitor<Input, Output> irTreeVisitor, Input input) {\n+    public <Scope> void visit(IRTreeVisitor<Scope> irTreeVisitor, Scope scope) {\n         throw new UnsupportedOperationException(\"cannot visit ir node type [\" + getClass().getCanonicalName() + \"]\");\n     }\n \n+    /**\n+     * Visits all child ir tree nodes for this ir tree node.\n+     */\n+    public <Scope> void visitChildren(IRTreeVisitor<Scope> irTreevisitor, Scope scope) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd23c889e6da86b4035266c0bc59ccee9d2bab10"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEzOTgwMQ==", "bodyText": "Yes, changed. Good call.", "url": "https://github.com/elastic/elasticsearch/pull/61099#discussion_r470139801", "createdAt": "2020-08-13T17:52:31Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/IRNode.java", "diffHunk": "@@ -44,10 +44,17 @@ public Location getLocation() {\n     /**\n      * Callback to visit an ir tree node.\n      */\n-    public <Input, Output> Output visit(IRTreeVisitor<Input, Output> irTreeVisitor, Input input) {\n+    public <Scope> void visit(IRTreeVisitor<Scope> irTreeVisitor, Scope scope) {\n         throw new UnsupportedOperationException(\"cannot visit ir node type [\" + getClass().getCanonicalName() + \"]\");\n     }\n \n+    /**\n+     * Visits all child ir tree nodes for this ir tree node.\n+     */\n+    public <Scope> void visitChildren(IRTreeVisitor<Scope> irTreevisitor, Scope scope) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEzMDg0OA=="}, "originalCommit": {"oid": "fd23c889e6da86b4035266c0bc59ccee9d2bab10"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2485, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}