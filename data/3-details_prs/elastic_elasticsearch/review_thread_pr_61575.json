{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczODUwMDQ0", "number": 61575, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwMTowNDo0NlrOEkSyAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwMTowNzozMlrOEkS2Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NDkxOTA2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/decision/AutoscalingCapacity.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwMTowNDo0NlrOHTJdKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNTowODo1OFrOHURKWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgzOTkxMw==", "bodyText": "I wonder if the name of this should be general from the beginning, something indicating resources like AutoscalingResources?", "url": "https://github.com/elastic/elasticsearch/pull/61575#discussion_r489839913", "createdAt": "2020-09-17T01:04:46Z", "author": {"login": "jasontedor"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/decision/AutoscalingCapacity.java", "diffHunk": "@@ -0,0 +1,262 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling.decision;\n+\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.common.unit.ByteSizeValue;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+/**\n+ * Represents current/required capacity of a single tier.\n+ */\n+public class AutoscalingCapacity implements ToXContent, Writeable {\n+\n+    private final StorageAndMemory tier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4977c03523923490569078bf4698418433cb9803"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg0MDQ0OQ==", "bodyText": "To be clear, I'm not suggesting that it be a general container, it would still be only storage and memory today, but we'll have CPU later and then we'd rename this to CpuStorageAndMemory? That's what I mean by general, the name only.", "url": "https://github.com/elastic/elasticsearch/pull/61575#discussion_r489840449", "createdAt": "2020-09-17T01:05:31Z", "author": {"login": "jasontedor"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/decision/AutoscalingCapacity.java", "diffHunk": "@@ -0,0 +1,262 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling.decision;\n+\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.common.unit.ByteSizeValue;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+/**\n+ * Represents current/required capacity of a single tier.\n+ */\n+public class AutoscalingCapacity implements ToXContent, Writeable {\n+\n+    private final StorageAndMemory tier;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgzOTkxMw=="}, "originalCommit": {"oid": "4977c03523923490569078bf4698418433cb9803"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxNDc0Nw==", "bodyText": "Yes, that is nicer, chose your name in 7bed89e", "url": "https://github.com/elastic/elasticsearch/pull/61575#discussion_r491014747", "createdAt": "2020-09-18T15:08:58Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/decision/AutoscalingCapacity.java", "diffHunk": "@@ -0,0 +1,262 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling.decision;\n+\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.common.unit.ByteSizeValue;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+/**\n+ * Represents current/required capacity of a single tier.\n+ */\n+public class AutoscalingCapacity implements ToXContent, Writeable {\n+\n+    private final StorageAndMemory tier;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgzOTkxMw=="}, "originalCommit": {"oid": "4977c03523923490569078bf4698418433cb9803"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NDkzMDExOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/decision/AutoscalingDecision.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwMTowNzozMlrOHTJkpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNTowODoyNlrOHURJGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg0MTgyOA==", "bodyText": "If these are expected to be immutable (i.e., there's never a setter), we have a rather loose guideline that we'd name it summary.", "url": "https://github.com/elastic/elasticsearch/pull/61575#discussion_r489841828", "createdAt": "2020-09-17T01:07:32Z", "author": {"login": "jasontedor"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/decision/AutoscalingDecision.java", "diffHunk": "@@ -16,70 +17,70 @@\n import java.util.Objects;\n \n /**\n- * Represents an autoscaling decision.\n+ * Represents an autoscaling decision from a single decider\n  */\n public class AutoscalingDecision implements ToXContent, Writeable {\n \n-    private final String name;\n+    private final AutoscalingCapacity requiredCapacity;\n+    private final Reason reason;\n \n-    public String name() {\n-        return name;\n+    public interface Reason extends ToXContent, NamedWriteable {\n+        String getSummary();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4977c03523923490569078bf4698418433cb9803"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxNDQyNw==", "bodyText": "\ud83d\udc4d , fixed in 75e410b", "url": "https://github.com/elastic/elasticsearch/pull/61575#discussion_r491014427", "createdAt": "2020-09-18T15:08:26Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/decision/AutoscalingDecision.java", "diffHunk": "@@ -16,70 +17,70 @@\n import java.util.Objects;\n \n /**\n- * Represents an autoscaling decision.\n+ * Represents an autoscaling decision from a single decider\n  */\n public class AutoscalingDecision implements ToXContent, Writeable {\n \n-    private final String name;\n+    private final AutoscalingCapacity requiredCapacity;\n+    private final Reason reason;\n \n-    public String name() {\n-        return name;\n+    public interface Reason extends ToXContent, NamedWriteable {\n+        String getSummary();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg0MTgyOA=="}, "originalCommit": {"oid": "4977c03523923490569078bf4698418433cb9803"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 708, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}