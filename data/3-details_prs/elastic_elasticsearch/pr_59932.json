{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzODA1NTIy", "number": 59932, "title": "Thread safe clean up of LocalNodeModeListeners", "bodyText": "This commit continues on the work in #59801 and makes other\nimplementors of the LocalNodeMasterListener interface thread safe in\nthat they will no longer allow the callbacks to run on different\nthreads and possibly race each other. This also helps address other\nissues where these events could be queued to wait for execution while\nthe service keeps moving forward thinking it is the master even when\nthat is not the case.\nIn order to accomplish this, the LocalNodeMasterListener no longer has\nthe executorName() method to prevent future uses that could encounter\nthis trappy behavior.\nEach use was inspected and if the class was also a\nClusterStateListener, the implementation of LocalNodeMasterListener\nwas removed in favor of a single listener that combined the logic. A\nsingle listener is used and there is currently no guarantee on execution\norder between ClusterStateListeners and LocalNodeMasterListeners,\nso a future change there could cause undesired consequences. For other\nclasses, the implementations of the callbacks were inspected and if the\noperations were lightweight, the overriden executorName method was\nremoved to use the default, which runs on the same thread.", "createdAt": "2020-07-20T20:24:09Z", "url": "https://github.com/elastic/elasticsearch/pull/59932", "merged": true, "mergeCommit": {"oid": "f269738155b9ef7a0470ba37f817cd4a05282950"}, "closed": true, "closedAt": "2020-07-21T18:42:44Z", "author": {"login": "jaymode"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc23VhqgH2gAyNDUzODA1NTIyOmY5ZDNhZjRmMWI5MjdhNGM1ZWNjZjcxZTdjOWI3MTRkNGM3ZjhlMDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3J6z7AFqTQ1MjY5MDM0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f9d3af4f1b927a4c5eccf71e7c9b714d4c7f8e04", "author": {"user": {"login": "jaymode", "name": "Jay Modi"}}, "url": "https://github.com/elastic/elasticsearch/commit/f9d3af4f1b927a4c5eccf71e7c9b714d4c7f8e04", "committedDate": "2020-07-20T20:06:17Z", "message": "Thread safe clean up of LocalNodeModeListeners\n\nThis commit continues on the work in #59801 and makes other\nimplementors of the `LocalNodeMasterListener` interface thread safe in\nthat they will no longer allow the callbacks to run on different\nthreads and possibly race each other. This also helps address other\nissues where these events could be queued to wait for execution while\nthe service keeps moving forward thinking it is the master even when\nthat is not the case.\n\nIn order to accomplish this, the `LocalNodeMasterListener` now provides\na default implementation of the `executorName()` and the javadocs have\nbeen updated to indicate the dangers of using an executor that could\nexecute the listeners concurrently.\n\nEach use was inspected and if the class was also a\n`ClusterStateListener`, the implementation of `LocalNodeMasterListener`\nwas removed in favor of a single listener that combined the logic. A\nsingle listener is used and there is currently no guarantee on execution\norder between `ClusterStateListener`s and `LocalNodeMasterListener`s,\nso a future change there could cause undesired consequences. For other\nclasses, the implementations of the callbacks were inspected and if the\noperations were lightweight, the overriden `executorName` method was\nremoved to use the default, which runs on the same thread."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNDUwNTAw", "url": "https://github.com/elastic/elasticsearch/pull/59932#pullrequestreview-452450500", "createdAt": "2020-07-21T13:23:16Z", "commit": {"oid": "f9d3af4f1b927a4c5eccf71e7c9b714d4c7f8e04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNTYwMTQ2", "url": "https://github.com/elastic/elasticsearch/pull/59932#pullrequestreview-452560146", "createdAt": "2020-07-21T15:12:45Z", "commit": {"oid": "f9d3af4f1b927a4c5eccf71e7c9b714d4c7f8e04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd", "author": {"user": {"login": "jaymode", "name": "Jay Modi"}}, "url": "https://github.com/elastic/elasticsearch/commit/3c9142bbcdf64264e8483dc4b736f38e9bdeffbd", "committedDate": "2020-07-21T16:06:09Z", "message": "Merge branch 'master' into cleanup_localnode_listeners"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjEzNzI0", "url": "https://github.com/elastic/elasticsearch/pull/59932#pullrequestreview-452613724", "createdAt": "2020-07-21T16:09:25Z", "commit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjowOToyNVrOG0_Wzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjowOToyNVrOG0_Wzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxNzE2Ng==", "bodyText": "Sorry for the conflicts with #59880, but I think we need this line still.", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458217166", "createdAt": "2020-07-21T16:09:25Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java", "diffHunk": "@@ -111,9 +111,6 @@ public InternalClusterInfoService(Settings settings, ClusterService clusterServi\n         clusterSettings.addSettingsUpdateConsumer(INTERNAL_CLUSTER_INFO_UPDATE_INTERVAL_SETTING, this::setUpdateFrequency);\n         clusterSettings.addSettingsUpdateConsumer(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_THRESHOLD_ENABLED_SETTING,\n                                                   this::setEnabled);\n-\n-        // listen for state changes (this node starts/stops being the elected master, or new nodes are added)\n-        clusterService.addListener(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjIwOTYz", "url": "https://github.com/elastic/elasticsearch/pull/59932#pullrequestreview-452620963", "createdAt": "2020-07-21T16:17:41Z", "commit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjoxNzo0MVrOG0_szA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjoyMDozMVrOG0_0EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyMjc5Ng==", "bodyText": "This looks never to be overridden, can we inline it (and simplify threadPool.executor(SAME).execute(r) to r.run() in the ClusterApplierService?", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458222796", "createdAt": "2020-07-21T16:17:41Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/LocalNodeMasterListener.java", "diffHunk": "@@ -37,16 +39,20 @@\n     /**\n      * The name of the executor that the implementation of the callbacks of this lister should be executed on. The thread\n      * that is responsible for managing instances of this lister is the same thread handling the cluster state events. If\n-     * the work done is the callbacks above is inexpensive, this value may be\n+     * the work done is the callbacks above is inexpensive, this value should be\n      * {@link org.elasticsearch.threadpool.ThreadPool.Names#SAME SAME} (indicating that the callbacks will run on the same thread\n      * as the cluster state events are fired with). On the other hand, if the logic in the callbacks are heavier and take\n      * longer to process (or perhaps involve blocking due to IO operations), prefer to execute them on a separate more appropriate\n-     * executor (eg. {@link org.elasticsearch.threadpool.ThreadPool.Names#GENERIC GENERIC}\n-     * or {@link org.elasticsearch.threadpool.ThreadPool.Names#MANAGEMENT MANAGEMENT}).\n+     * executor; for example management operations would use {@link org.elasticsearch.threadpool.ThreadPool.Names#MANAGEMENT MANAGEMENT}).\n+     *\n+     * <em>Note</em>: when using an executor with more than one thread the callbacks <i>could</i> run concurrently, so care\n+     * should be taken to ensure proper locking is used for correctness.\n      *\n      * @return The name of the executor that will run the callbacks of this listener.\n      */\n-    String executorName();\n+    default String executorName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyNDY1Ng==", "bodyText": "We use this executor to run MlMemoryTracker#refresh and MlMemoryTracker #iterateAnomalyDetectorJobTasks, are you sure it's ok to run them on the SAME thread now?", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458224656", "createdAt": "2020-07-21T16:20:31Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/process/MlMemoryTracker.java", "diffHunk": "@@ -131,11 +130,6 @@ public void stop() {\n         logger.debug(\"ML memory tracker stopped\");\n     }\n \n-    @Override\n-    public String executorName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59a7feee7cc2ec9ce13f353a3af798e6eaa06116", "author": {"user": {"login": "jaymode", "name": "Jay Modi"}}, "url": "https://github.com/elastic/elasticsearch/commit/59a7feee7cc2ec9ce13f353a3af798e6eaa06116", "committedDate": "2020-07-21T17:00:21Z", "message": "update after changes from #59880"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d30872145f375f109ed20e2d26db6946436c3b4e", "author": {"user": {"login": "jaymode", "name": "Jay Modi"}}, "url": "https://github.com/elastic/elasticsearch/commit/d30872145f375f109ed20e2d26db6946436c3b4e", "committedDate": "2020-07-21T17:03:29Z", "message": "MlMemoryTracker executes on utility thread pool still"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63be6ab56326f0a496a33588730130aa227bb45f", "author": {"user": {"login": "jaymode", "name": "Jay Modi"}}, "url": "https://github.com/elastic/elasticsearch/commit/63be6ab56326f0a496a33588730130aa227bb45f", "committedDate": "2020-07-21T17:42:41Z", "message": "no more executorName!!!!!"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjkwMzQy", "url": "https://github.com/elastic/elasticsearch/pull/59932#pullrequestreview-452690342", "createdAt": "2020-07-21T17:45:11Z", "commit": {"oid": "63be6ab56326f0a496a33588730130aa227bb45f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NToxMlrOG1DD7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NToxMlrOG1DD7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3Nzg2OQ==", "bodyText": "Hurrah \ud83c\udf89", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458277869", "createdAt": "2020-07-21T17:45:12Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/LocalNodeMasterListener.java", "diffHunk": "@@ -33,20 +33,5 @@\n      * Called when the local node used to be the master, a new master was elected and it's no longer the local node.\n      */\n     void offMaster();\n-\n-    /**\n-     * The name of the executor that the implementation of the callbacks of this lister should be executed on. The thread\n-     * that is responsible for managing instances of this lister is the same thread handling the cluster state events. If\n-     * the work done is the callbacks above is inexpensive, this value may be\n-     * {@link org.elasticsearch.threadpool.ThreadPool.Names#SAME SAME} (indicating that the callbacks will run on the same thread\n-     * as the cluster state events are fired with). On the other hand, if the logic in the callbacks are heavier and take\n-     * longer to process (or perhaps involve blocking due to IO operations), prefer to execute them on a separate more appropriate\n-     * executor (eg. {@link org.elasticsearch.threadpool.ThreadPool.Names#GENERIC GENERIC}\n-     * or {@link org.elasticsearch.threadpool.ThreadPool.Names#MANAGEMENT MANAGEMENT}).\n-     *\n-     * @return The name of the executor that will run the callbacks of this listener.\n-     */\n-    String executorName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63be6ab56326f0a496a33588730130aa227bb45f"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4137, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}