{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3Njk0OTI0", "number": 64768, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTozNDo1NlrOE2uSDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMjo0NTo1NlrOE2vyXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODE2ODQ1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/inference/InferenceRunner.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTozNDo1NlrOHvqiag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTozNDo1NlrOHvqiag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MjA1OA==", "bodyText": "Could it be renamed to retryMessage for consistency?", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519742058", "createdAt": "2020-11-09T11:34:56Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/inference/InferenceRunner.java", "diffHunk": "@@ -160,6 +160,6 @@ private void executeBulkRequest(BulkRequest bulkRequest) {\n             bulkRequest,\n             config.getId(),\n             () -> isCancelled == false,\n-            errorMsg -> {});\n+            retryMsg -> {});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a80a567a2ee0a4eba52e7ebaa33b67fd54847fb6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODE2OTEwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/DataFrameRowsJoiner.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTozNTowNFrOHvqiyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTozNTowNFrOHvqiyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MjE1Mg==", "bodyText": "Could it be renamed to retryMessage for consistency?", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519742152", "createdAt": "2020-11-09T11:35:04Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/DataFrameRowsJoiner.java", "diffHunk": "@@ -109,7 +109,7 @@ private void executeBulkRequest(BulkRequest bulkRequest) {\n             bulkRequest,\n             analyticsId,\n             () -> isCancelled == false,\n-            errorMsg -> {});\n+            retryMsg -> {});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a80a567a2ee0a4eba52e7ebaa33b67fd54847fb6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODE3NDkwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/stats/StatsPersister.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTozNjo0M1rOHvqmNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMjozMzoxNFrOHvsbhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MzAyOA==", "bodyText": "Double-checking: should it be semicolon or colon in this string: \"]; \"?", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519743028", "createdAt": "2020-11-09T11:36:43Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/stats/StatsPersister.java", "diffHunk": "@@ -46,13 +46,13 @@ public void persistWithRetry(ToXContentObject result, Function<String, String> d\n                 docIdSupplier.apply(jobId),\n                 true,\n                 () -> true,\n-                errorMsg -> auditor.error(jobId,\n-                    \"failed to persist result with id [\" + docIdSupplier.apply(jobId) + \"]; \" + errorMsg)\n+                retryMessage -> LOGGER.debug(\"[{}] failed to persist result with id [{}]; {}\", jobId, docIdSupplier.apply(jobId), retryMessage)\n             );\n         } catch (IOException ioe) {\n             LOGGER.error(() -> new ParameterizedMessage(\"[{}] Failed serializing stats result\", jobId), ioe);\n         } catch (Exception e) {\n             LOGGER.error(() -> new ParameterizedMessage(\"[{}] Failed indexing stats result\", jobId), e);\n+            auditor.error(jobId, \"Failed indexing stats result with id [\" + docIdSupplier.apply(jobId) + \"]; \" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a80a567a2ee0a4eba52e7ebaa33b67fd54847fb6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc3MTU3Nw==", "bodyText": "Good question. I tend avoid semi-colons as I don't know how to use them correctly.\nThis one was copied from the old usage above", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519771577", "createdAt": "2020-11-09T12:30:11Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/stats/StatsPersister.java", "diffHunk": "@@ -46,13 +46,13 @@ public void persistWithRetry(ToXContentObject result, Function<String, String> d\n                 docIdSupplier.apply(jobId),\n                 true,\n                 () -> true,\n-                errorMsg -> auditor.error(jobId,\n-                    \"failed to persist result with id [\" + docIdSupplier.apply(jobId) + \"]; \" + errorMsg)\n+                retryMessage -> LOGGER.debug(\"[{}] failed to persist result with id [{}]; {}\", jobId, docIdSupplier.apply(jobId), retryMessage)\n             );\n         } catch (IOException ioe) {\n             LOGGER.error(() -> new ParameterizedMessage(\"[{}] Failed serializing stats result\", jobId), ioe);\n         } catch (Exception e) {\n             LOGGER.error(() -> new ParameterizedMessage(\"[{}] Failed indexing stats result\", jobId), e);\n+            auditor.error(jobId, \"Failed indexing stats result with id [\" + docIdSupplier.apply(jobId) + \"]; \" + e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MzAyOA=="}, "originalCommit": {"oid": "a80a567a2ee0a4eba52e7ebaa33b67fd54847fb6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc3MzA2MA==", "bodyText": "@dimitris-athanasiou you wrote this code originally can you comment on ; vs : please", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519773060", "createdAt": "2020-11-09T12:33:14Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/stats/StatsPersister.java", "diffHunk": "@@ -46,13 +46,13 @@ public void persistWithRetry(ToXContentObject result, Function<String, String> d\n                 docIdSupplier.apply(jobId),\n                 true,\n                 () -> true,\n-                errorMsg -> auditor.error(jobId,\n-                    \"failed to persist result with id [\" + docIdSupplier.apply(jobId) + \"]; \" + errorMsg)\n+                retryMessage -> LOGGER.debug(\"[{}] failed to persist result with id [{}]; {}\", jobId, docIdSupplier.apply(jobId), retryMessage)\n             );\n         } catch (IOException ioe) {\n             LOGGER.error(() -> new ParameterizedMessage(\"[{}] Failed serializing stats result\", jobId), ioe);\n         } catch (Exception e) {\n             LOGGER.error(() -> new ParameterizedMessage(\"[{}] Failed indexing stats result\", jobId), e);\n+            auditor.error(jobId, \"Failed indexing stats result with id [\" + docIdSupplier.apply(jobId) + \"]; \" + e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MzAyOA=="}, "originalCommit": {"oid": "a80a567a2ee0a4eba52e7ebaa33b67fd54847fb6"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODQxNTAwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsPersister.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMjo0NTo1NlrOHvs29Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMjo0NTo1NlrOHvs29Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc4MDA4NQ==", "bodyText": "<3", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519780085", "createdAt": "2020-11-09T12:45:56Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsPersister.java", "diffHunk": "@@ -524,10 +524,12 @@ void persist(ActionListener<IndexResponse> listener, boolean requireAlias) {\n         }\n \n         private void logCall(String indexName) {\n-            if (id != null) {\n-                logger.trace(\"[{}] ES API CALL: to index {} with ID [{}]\", jobId, indexName, id);\n-            } else {\n-                logger.trace(\"[{}] ES API CALL: to index {} with auto-generated ID\", jobId, indexName);\n+            if (logger.isTraceEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8693ee598a524898704999248faeb721b6f8ef9"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3142, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}