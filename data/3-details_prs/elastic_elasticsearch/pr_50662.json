{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NTg2MDg2", "number": 50662, "title": "Make Multiplexer inherit filter chains analysis mode", "bodyText": "Currently, if an updateable synonym filter is included in a multiplexer filter, it is not reloaded\nvia the _reload_search_analyzers because the multiplexer itself doesn't pass on the analysis mode\nof the filters it contains, so its not recognized as \"updateable\" in itself. Instead we can check and merge\nthe AnalysisMode  settings of all filters in the multiplexer and use the resulting mode (e.g. search-time only)\nfor the multiplexer itself, thus making any synonym filters contained in it reloadable. This, of course, will also\nmake the analyzers using the multiplexer be usable at search-time only.\nMarking this as WIP for now to get some test runs and for discussion.\nCloses #50554", "createdAt": "2020-01-06T15:18:15Z", "url": "https://github.com/elastic/elasticsearch/pull/50662", "merged": true, "mergeCommit": {"oid": "4b366a4cbb43b6d29bc63613307888622a9188a3"}, "closed": true, "closedAt": "2020-01-08T17:25:01Z", "author": {"login": "cbuescher"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3tLkuAH2gAyMzU5NTg2MDg2OmI3MGRhOTQ5ZDk2MjEyZTVjZDQxNDA2MmU0NzlhNmQ0M2Y5YTI5MzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4X84OAH2gAyMzU5NTg2MDg2OmMyZWIzYWY3ODBhNzE2MjUyMGM3MGM2ZjQyZjY1NWE1OTM2MmM0Yzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b70da949d96212e5cd414062e479a6d43f9a2931", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/b70da949d96212e5cd414062e479a6d43f9a2931", "committedDate": "2020-01-06T14:39:08Z", "message": "Make Multiplexer inherit filter chains analysis mode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e695a788e46101bc6e3ceca032d5ae6fe83a82d5", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/e695a788e46101bc6e3ceca032d5ae6fe83a82d5", "committedDate": "2020-01-07T17:17:02Z", "message": "Merge branch 'master' into fix-50554"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5ODQyOTU0", "url": "https://github.com/elastic/elasticsearch/pull/50662#pullrequestreview-339842954", "createdAt": "2020-01-08T12:52:37Z", "commit": {"oid": "e695a788e46101bc6e3ceca032d5ae6fe83a82d5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMjo1MjozOFrOFbV8Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMjo1ODo0MlrOFbWE3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxNTM1OA==", "bodyText": "nit: I think this is a leftover?", "url": "https://github.com/elastic/elasticsearch/pull/50662#discussion_r364215358", "createdAt": "2020-01-08T12:52:38Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MapperService.java", "diffHunk": "@@ -20,6 +20,7 @@\n package org.elasticsearch.index.mapper;\n \n import com.carrotsearch.hppc.ObjectHashSet;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e695a788e46101bc6e3ceca032d5ae6fe83a82d5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxNTc1Mw==", "bodyText": "Given that this is reused in three different tests now, I wonder if it's worth extracting it as a separate method?", "url": "https://github.com/elastic/elasticsearch/pull/50662#discussion_r364215753", "createdAt": "2020-01-08T12:53:44Z", "author": {"login": "romseygeek"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/action/ReloadSynonymAnalyzerTests.java", "diffHunk": "@@ -126,6 +122,74 @@ public void testSynonymsUpdateable() throws FileNotFoundException, IOException {\n         assertHitCount(response, 1L);\n     }\n \n+    public void testSynonymsInMultiplexerUpdateable() throws FileNotFoundException, IOException {\n+        String synonymsFileName = \"synonyms.txt\";\n+        Path configDir = node().getEnvironment().configFile();\n+        if (Files.exists(configDir) == false) {\n+            Files.createDirectory(configDir);\n+        }\n+        Path synonymsFile = configDir.resolve(synonymsFileName);\n+        if (Files.exists(synonymsFile) == false) {\n+            Files.createFile(synonymsFile);\n+        }\n+        try (PrintWriter out = new PrintWriter(\n+                new OutputStreamWriter(Files.newOutputStream(synonymsFile, StandardOpenOption.WRITE), StandardCharsets.UTF_8))) {\n+            out.println(\"foo, baz\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e695a788e46101bc6e3ceca032d5ae6fe83a82d5"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxNjc1Mw==", "bodyText": "This compression of multiple settings onto single lines seems to me to make test more difficult to follow, can we keep the indentation as it was before?", "url": "https://github.com/elastic/elasticsearch/pull/50662#discussion_r364216753", "createdAt": "2020-01-08T12:56:35Z", "author": {"login": "romseygeek"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/action/ReloadSynonymAnalyzerTests.java", "diffHunk": "@@ -143,20 +207,15 @@ public void testUpdateableSynonymsRejectedAtIndexTime() throws FileNotFoundExcep\n \n         final String indexName = \"test\";\n         final String analyzerName = \"my_synonym_analyzer\";\n-        MapperException ex = expectThrows(MapperException.class, () -> client().admin().indices().prepareCreate(indexName)\n-                .setSettings(Settings.builder()\n-                .put(\"index.number_of_shards\", 5)\n-                .put(\"index.number_of_replicas\", 0)\n-                .put(\"analysis.analyzer.\" + analyzerName + \".tokenizer\", \"standard\")\n-                .putList(\"analysis.analyzer.\" + analyzerName + \".filter\", \"lowercase\", \"synonym_filter\")\n-                .put(\"analysis.filter.synonym_filter.type\", \"synonym\")\n-                .put(\"analysis.filter.synonym_filter.updateable\", \"true\")\n-                .put(\"analysis.filter.synonym_filter.synonyms_path\", synonymsFileName))\n-                .addMapping(\"_doc\", \"field\", \"type=text,analyzer=\" + analyzerName).get());\n-\n-        assertEquals(\n-                \"Failed to parse mapping: analyzer [my_synonym_analyzer] \"\n-                + \"contains filters [synonym_filter] that are not allowed to run in all mode.\",\n-                ex.getMessage());\n+        MapperException ex = expectThrows(MapperException.class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e695a788e46101bc6e3ceca032d5ae6fe83a82d5"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxNzU2NA==", "bodyText": "Maybe also add a test asserting that a multiplexer containing updateable synonyms is rejected as an index-time analyzer as well?", "url": "https://github.com/elastic/elasticsearch/pull/50662#discussion_r364217564", "createdAt": "2020-01-08T12:58:42Z", "author": {"login": "romseygeek"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/action/ReloadSynonymAnalyzerTests.java", "diffHunk": "@@ -126,6 +122,74 @@ public void testSynonymsUpdateable() throws FileNotFoundException, IOException {\n         assertHitCount(response, 1L);\n     }\n \n+    public void testSynonymsInMultiplexerUpdateable() throws FileNotFoundException, IOException {\n+        String synonymsFileName = \"synonyms.txt\";\n+        Path configDir = node().getEnvironment().configFile();\n+        if (Files.exists(configDir) == false) {\n+            Files.createDirectory(configDir);\n+        }\n+        Path synonymsFile = configDir.resolve(synonymsFileName);\n+        if (Files.exists(synonymsFile) == false) {\n+            Files.createFile(synonymsFile);\n+        }\n+        try (PrintWriter out = new PrintWriter(\n+                new OutputStreamWriter(Files.newOutputStream(synonymsFile, StandardOpenOption.WRITE), StandardCharsets.UTF_8))) {\n+            out.println(\"foo, baz\");\n+        }\n+\n+        final String indexName = \"test\";\n+        final String synonymAnalyzerName = \"synonym_in_multiplexer_analyzer\";\n+        assertAcked(client().admin().indices().prepareCreate(indexName)\n+                .setSettings(Settings.builder().put(\"index.number_of_shards\", 5).put(\"index.number_of_replicas\", 0)\n+                        .put(\"analysis.analyzer.\" + synonymAnalyzerName + \".tokenizer\", \"whitespace\")\n+                        .putList(\"analysis.analyzer.\" + synonymAnalyzerName + \".filter\", \"my_multiplexer\")\n+                        .put(\"analysis.filter.synonym_filter.type\", \"synonym\").put(\"analysis.filter.synonym_filter.updateable\", \"true\")\n+                        .put(\"analysis.filter.synonym_filter.synonyms_path\", synonymsFileName)\n+                        .put(\"analysis.filter.my_multiplexer.type\", \"multiplexer\")\n+                        .putList(\"analysis.filter.my_multiplexer.filters\", \"synonym_filter\"))\n+                .addMapping(\"_doc\", \"field\", \"type=text,analyzer=standard,search_analyzer=\" + synonymAnalyzerName));\n+\n+        client().prepareIndex(indexName).setId(\"1\").setSource(\"field\", \"foo\").get();\n+        assertNoFailures(client().admin().indices().prepareRefresh(indexName).execute().actionGet());\n+\n+        SearchResponse response = client().prepareSearch(indexName).setQuery(QueryBuilders.matchQuery(\"field\", \"baz\")).get();\n+        assertHitCount(response, 1L);\n+        response = client().prepareSearch(indexName).setQuery(QueryBuilders.matchQuery(\"field\", \"buzz\")).get();\n+        assertHitCount(response, 0L);\n+\n+        Response analyzeResponse = client().admin().indices().prepareAnalyze(indexName, \"foo\").setAnalyzer(synonymAnalyzerName).get();\n+        assertEquals(2, analyzeResponse.getTokens().size());\n+        final Set<String> tokens = new HashSet<>();\n+        analyzeResponse.getTokens().stream().map(AnalyzeToken::getTerm).forEach(t -> tokens.add(t));\n+        assertTrue(tokens.contains(\"foo\"));\n+        assertTrue(tokens.contains(\"baz\"));\n+\n+        // now update synonyms file and trigger reloading\n+        try (PrintWriter out = new PrintWriter(\n+                new OutputStreamWriter(Files.newOutputStream(synonymsFile, StandardOpenOption.WRITE), StandardCharsets.UTF_8))) {\n+            out.println(\"foo, baz, buzz\");\n+        }\n+        ReloadAnalyzersResponse reloadResponse = client().execute(ReloadAnalyzerAction.INSTANCE, new ReloadAnalyzersRequest(indexName))\n+                .actionGet();\n+        assertNoFailures(reloadResponse);\n+        Set<String> reloadedAnalyzers = reloadResponse.getReloadDetails().get(indexName).getReloadedAnalyzers();\n+        assertEquals(1, reloadedAnalyzers.size());\n+        assertTrue(reloadedAnalyzers.contains(synonymAnalyzerName));\n+\n+        analyzeResponse = client().admin().indices().prepareAnalyze(indexName, \"foo\").setAnalyzer(synonymAnalyzerName).get();\n+        assertEquals(3, analyzeResponse.getTokens().size());\n+        tokens.clear();\n+        analyzeResponse.getTokens().stream().map(AnalyzeToken::getTerm).forEach(t -> tokens.add(t));\n+        assertTrue(tokens.contains(\"foo\"));\n+        assertTrue(tokens.contains(\"baz\"));\n+        assertTrue(tokens.contains(\"buzz\"));\n+\n+        response = client().prepareSearch(indexName).setQuery(QueryBuilders.matchQuery(\"field\", \"baz\")).get();\n+        assertHitCount(response, 1L);\n+        response = client().prepareSearch(indexName).setQuery(QueryBuilders.matchQuery(\"field\", \"buzz\")).get();\n+        assertHitCount(response, 1L);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e695a788e46101bc6e3ceca032d5ae6fe83a82d5"}, "originalPosition": 122}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a744116cfe5cd9c394de63cb7c3a90015f2a221", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/5a744116cfe5cd9c394de63cb7c3a90015f2a221", "committedDate": "2020-01-08T16:10:00Z", "message": "Revert unnecessary change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cd50b4341a0b43f777f1a61fcfa4e6746b4f7c3", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/7cd50b4341a0b43f777f1a61fcfa4e6746b4f7c3", "committedDate": "2020-01-08T16:10:10Z", "message": "factor out synonym file setup and fix settings formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63bee0dd65e8c58ceee367e9e08bc4c3e2c841ff", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/63bee0dd65e8c58ceee367e9e08bc4c3e2c841ff", "committedDate": "2020-01-08T16:10:18Z", "message": "add test for rejection of a multiplexer with updateable synonyms at index time"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5OTc4OTkw", "url": "https://github.com/elastic/elasticsearch/pull/50662#pullrequestreview-339978990", "createdAt": "2020-01-08T16:19:28Z", "commit": {"oid": "63bee0dd65e8c58ceee367e9e08bc4c3e2c841ff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2eb3af780a7162520c70c6f42f655a59362c4c8", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/c2eb3af780a7162520c70c6f42f655a59362c4c8", "committedDate": "2020-01-08T16:29:00Z", "message": "Merge branch 'master' into fix-50554"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3848, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}