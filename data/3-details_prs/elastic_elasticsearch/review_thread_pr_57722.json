{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NDI3MDE4", "number": 57722, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo1NTozMlrOEC8dng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzoxMzo0M1rOEDCHxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTIzMjMwOnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/delete-expired-data.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo1NTozMlrOGftW3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo1NTozMlrOGftW3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkwMjE3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <2> Optionally set a job ID. Use `null` for the default wild card all `*`.\n          \n          \n            \n            <2> Optionally set a job ID. Use `null` for the default wild card all `*`.\n          \n          \n            \n                Default is `null`.", "url": "https://github.com/elastic/elasticsearch/pull/57722#discussion_r435902172", "createdAt": "2020-06-05T12:55:32Z", "author": {"login": "benwtrent"}, "path": "docs/java-rest/high-level/ml/delete-expired-data.asciidoc", "diffHunk": "@@ -21,9 +21,10 @@ A `DeleteExpiredDataRequest` object does not require any arguments.\n include-tagged::{doc-tests-file}[{api}-request]\n ---------------------------------------------------\n <1> Constructing a new request.\n-<2> Providing requests per second throttling for the\n+<2> Optionally set a job ID. Use `null` for the default wild card all `*`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "657dc35bb90649cae725a656584501fad6611f1b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTIzNzIwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/DeleteExpiredDataAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo1NzowOFrOGftaKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzowNDo1NlrOGf2Xkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkwMzAxOA==", "bodyText": "Is this supposed to be used anywhere?", "url": "https://github.com/elastic/elasticsearch/pull/57722#discussion_r435903018", "createdAt": "2020-06-05T12:57:08Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/DeleteExpiredDataAction.java", "diffHunk": "@@ -51,6 +52,14 @@ private DeleteExpiredDataAction() {\n             PARSER.declareString(Request::setJobId, Job.ID);\n         }\n \n+        public static Request parseRequest(String jobId, XContentParser parser) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "657dc35bb90649cae725a656584501fad6611f1b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA0OTgxMA==", "bodyText": "Yes it is. Good spot thanks", "url": "https://github.com/elastic/elasticsearch/pull/57722#discussion_r436049810", "createdAt": "2020-06-05T17:04:56Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/DeleteExpiredDataAction.java", "diffHunk": "@@ -51,6 +52,14 @@ private DeleteExpiredDataAction() {\n             PARSER.declareString(Request::setJobId, Job.ID);\n         }\n \n+        public static Request parseRequest(String jobId, XContentParser parser) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkwMzAxOA=="}, "originalCommit": {"oid": "657dc35bb90649cae725a656584501fad6611f1b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjE1OTQwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/DeleteExpiredDataAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzoxMzo0M1rOGf2n5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzoxMzo0M1rOGf2n5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1Mzk5MA==", "bodyText": "There are no null checks now on the object. Looking at the wire serialization, this would fail if jobId was null since it only calls jobId = in.readString(); or out.writeString(jobId);", "url": "https://github.com/elastic/elasticsearch/pull/57722#discussion_r436053990", "createdAt": "2020-06-05T17:13:43Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/DeleteExpiredDataAction.java", "diffHunk": "@@ -54,15 +53,13 @@ private DeleteExpiredDataAction() {\n \n         public static Request parseRequest(String jobId, XContentParser parser) {\n             Request request = PARSER.apply(parser, null);\n-            if (jobId != null) {\n-                request.jobId = jobId;\n-            }\n+            request.jobId = jobId;\n             return request;\n         }\n \n         private Float requestsPerSecond;\n         private TimeValue timeout;\n-        private String jobId = Metadata.ALL;\n+        private String jobId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "931003314c9762badd46215effa22972336626c1"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3710, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}