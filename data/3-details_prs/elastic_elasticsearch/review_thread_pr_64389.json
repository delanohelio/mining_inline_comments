{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyODI1MDU0", "number": 64389, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0NDo1MlrOFA89dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0NDo1OFrOFB0KBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTQzMDk1OnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/main/java/org/elasticsearch/ingest/attachment/AttachmentProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0NDo1MlrOH_fiaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDowMDozMVrOH_gCtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMzOTA1MQ==", "bodyText": "I think this should call readOptionalStringProperty so that any existing fields named file_name that are not intended for Tika will not be inadvertently used.", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r536339051", "createdAt": "2020-12-04T19:44:52Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/main/java/org/elasticsearch/ingest/attachment/AttachmentProcessor.java", "diffHunk": "@@ -197,6 +203,7 @@ int getIndexedChars() {\n         public AttachmentProcessor create(Map<String, Processor.Factory> registry, String processorTag,\n                                           String description, Map<String, Object> config) throws Exception {\n             String field = readStringProperty(TYPE, processorTag, config, \"field\");\n+            String fileName = readStringProperty(TYPE, processorTag, config, \"file_name\", \"file_name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8adca4029a3353f584101d7b612e835750672fe"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM0NzMxOQ==", "bodyText": "Also, is there any particular reason why you chose file_name as the property name when it's called resourceName on the Tika side? Unless there's a good reason for file_name, it's probably best to stick with resource_name since that's what Tika calls the property.", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r536347319", "createdAt": "2020-12-04T20:00:31Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/main/java/org/elasticsearch/ingest/attachment/AttachmentProcessor.java", "diffHunk": "@@ -197,6 +203,7 @@ int getIndexedChars() {\n         public AttachmentProcessor create(Map<String, Processor.Factory> registry, String processorTag,\n                                           String description, Map<String, Object> config) throws Exception {\n             String field = readStringProperty(TYPE, processorTag, config, \"field\");\n+            String fileName = readStringProperty(TYPE, processorTag, config, \"file_name\", \"file_name\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMzOTA1MQ=="}, "originalCommit": {"oid": "f8adca4029a3353f584101d7b612e835750672fe"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTQzNDQ4OnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/main/java/org/elasticsearch/ingest/attachment/AttachmentProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0NjowMFrOH_fkig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0NjowMFrOH_fkig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMzOTU5NA==", "bodyText": "When readOptionalStringProperty is used as I suggested in another comment, this should retrieve the field value only when fileName != null.", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r536339594", "createdAt": "2020-12-04T19:46:00Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/main/java/org/elasticsearch/ingest/attachment/AttachmentProcessor.java", "diffHunk": "@@ -77,6 +79,7 @@ public IngestDocument execute(IngestDocument ingestDocument) {\n         Map<String, Object> additionalFields = new HashMap<>();\n \n         byte[] input = ingestDocument.getFieldValueAsBytes(field, ignoreMissing);\n+        String fileNameInput = ingestDocument.getFieldValue(fileName, String.class, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8adca4029a3353f584101d7b612e835750672fe"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQzOTk4OnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDozODoyNVrOIAp2UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDozODoyNVrOIAp2UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1NjU2MA==", "bodyText": "Let's leave this unspecified so the existing behavior of the processor without a resource_name is still verified.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 10000, false, null, \"resource_name\");\n          \n          \n            \n                        \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 10000, false, null, null);", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537556560", "createdAt": "2020-12-07T14:38:25Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -55,7 +55,7 @@\n     @Before\n     public void createStandardProcessor() {\n         processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\",\n-            \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 10000, false, null);\n+            \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 10000, false, null, \"resource_name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ0NDg1OnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDozOToyMlrOIAp5IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDozOToyMlrOIAp5IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1NzI4MQ==", "bodyText": "Same here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"target_field\", selectedProperties, 10000, false, null, \"resource_name\");\n          \n          \n            \n                        \"target_field\", selectedProperties, 10000, false, null, null);", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537557281", "createdAt": "2020-12-07T14:39:22Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -88,7 +88,7 @@ public void testHtmlDocumentWithRandomFields() throws Exception {\n             selectedProperties.add(AttachmentProcessor.Property.DATE);\n         }\n         processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\",\n-            \"target_field\", selectedProperties, 10000, false, null);\n+            \"target_field\", selectedProperties, 10000, false, null, \"resource_name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ0NzY2OnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDozOTo1M1rOIAp6vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo1MDoyN1rOIAqbfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1NzY5NQ==", "bodyText": "This test will remain unchanged:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/x-asciidoc\"));\n          \n          \n            \n                    assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537557695", "createdAt": "2020-12-07T14:39:53Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -211,7 +211,7 @@ public void testAsciidocDocument() throws Exception {\n         Map<String, Object> attachmentData = parseDocument(\"asciidoc.asciidoc\", processor);\n \n         assertThat(attachmentData.keySet(), containsInAnyOrder(\"language\", \"content_type\", \"content\", \"content_length\"));\n-        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/x-asciidoc\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2Mjk1Mg==", "bodyText": "but it's will make the test fail", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537562952", "createdAt": "2020-12-07T14:46:37Z", "author": {"login": "yangyaofei"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -211,7 +211,7 @@ public void testAsciidocDocument() throws Exception {\n         Map<String, Object> attachmentData = parseDocument(\"asciidoc.asciidoc\", processor);\n \n         assertThat(attachmentData.keySet(), containsInAnyOrder(\"language\", \"content_type\", \"content\", \"content_length\"));\n-        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/x-asciidoc\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1NzY5NQ=="}, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2NjA3OQ==", "bodyText": "Not if resource_name is not specified for this test.", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537566079", "createdAt": "2020-12-07T14:50:27Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -211,7 +211,7 @@ public void testAsciidocDocument() throws Exception {\n         Map<String, Object> attachmentData = parseDocument(\"asciidoc.asciidoc\", processor);\n \n         assertThat(attachmentData.keySet(), containsInAnyOrder(\"language\", \"content_type\", \"content\", \"content_length\"));\n-        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/x-asciidoc\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1NzY5NQ=="}, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ1MDcxOnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MDozMFrOIAp8lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo1MTo0OFrOIAqf4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1ODE2NA==", "bodyText": "Let's remove this line so these tests remain unchanged as well.", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537558164", "createdAt": "2020-12-07T14:40:30Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -229,6 +229,7 @@ public void testParseAsBytesArray() throws Exception {\n \n         Map<String, Object> document = new HashMap<>();\n         document.put(\"source_field\", bytes);\n+        document.put(\"resource_name\", path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2NDkxOA==", "bodyText": "but, the new field \"resource_name\"  should be added here, if not , the \"resource_name\" will meaningless", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537564918", "createdAt": "2020-12-07T14:48:59Z", "author": {"login": "yangyaofei"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -229,6 +229,7 @@ public void testParseAsBytesArray() throws Exception {\n \n         Map<String, Object> document = new HashMap<>();\n         document.put(\"source_field\", bytes);\n+        document.put(\"resource_name\", path);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1ODE2NA=="}, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2NzIwMQ==", "bodyText": "Please see my other comment here: #64389 (comment) -- I would like to isolate the testing for resource_name to a new test method and keep the existing tests to verify that the processor's behavior doesn't change if resource_name is unspecified. Let me know if you have any questions about that.", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537567201", "createdAt": "2020-12-07T14:51:48Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -229,6 +229,7 @@ public void testParseAsBytesArray() throws Exception {\n \n         Map<String, Object> document = new HashMap<>();\n         document.put(\"source_field\", bytes);\n+        document.put(\"resource_name\", path);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1ODE2NA=="}, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ1MjI0OnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MDo0OFrOIAp9fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MDo0OFrOIAp9fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1ODM5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"randomTarget\", null, 10, true, null, \"resource_name\");\n          \n          \n            \n                        \"randomTarget\", null, 10, true, null, null);", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537558397", "createdAt": "2020-12-07T14:40:48Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -247,15 +248,17 @@ public void testNullValueWithIgnoreMissing() throws Exception {\n         IngestDocument originalIngestDocument = RandomDocumentPicks.randomIngestDocument(random(),\n             Collections.singletonMap(\"source_field\", null));\n         IngestDocument ingestDocument = new IngestDocument(originalIngestDocument);\n-        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\", \"randomTarget\", null, 10, true, null);\n+        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\",\n+            \"randomTarget\", null, 10, true, null, \"resource_name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ1MzE5OnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MDo1OVrOIAp-FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MDo1OVrOIAp-FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1ODU0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"randomTarget\", null, 10, true, null, \"resource_name\");\n          \n          \n            \n                        \"randomTarget\", null, 10, true, null, null);", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537558549", "createdAt": "2020-12-07T14:40:59Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -247,15 +248,17 @@ public void testNullValueWithIgnoreMissing() throws Exception {\n         IngestDocument originalIngestDocument = RandomDocumentPicks.randomIngestDocument(random(),\n             Collections.singletonMap(\"source_field\", null));\n         IngestDocument ingestDocument = new IngestDocument(originalIngestDocument);\n-        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\", \"randomTarget\", null, 10, true, null);\n+        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\",\n+            \"randomTarget\", null, 10, true, null, \"resource_name\");\n         processor.execute(ingestDocument);\n         assertIngestDocument(originalIngestDocument, ingestDocument);\n     }\n \n     public void testNonExistentWithIgnoreMissing() throws Exception {\n         IngestDocument originalIngestDocument = RandomDocumentPicks.randomIngestDocument(random(), Collections.emptyMap());\n         IngestDocument ingestDocument = new IngestDocument(originalIngestDocument);\n-        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\", \"randomTarget\", null, 10, true, null);\n+        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\",\n+            \"randomTarget\", null, 10, true, null, \"resource_name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ1NDIxOnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MToxMlrOIAp-qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MToxMlrOIAp-qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1ODY5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"randomTarget\", null, 10, false, null, \"resource_name\");\n          \n          \n            \n                        \"randomTarget\", null, 10, false, null, null);", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537558699", "createdAt": "2020-12-07T14:41:12Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -264,15 +267,17 @@ public void testNullWithoutIgnoreMissing() throws Exception {\n         IngestDocument originalIngestDocument = RandomDocumentPicks.randomIngestDocument(random(),\n             Collections.singletonMap(\"source_field\", null));\n         IngestDocument ingestDocument = new IngestDocument(originalIngestDocument);\n-        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\", \"randomTarget\", null, 10, false, null);\n+        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\",\n+            \"randomTarget\", null, 10, false, null, \"resource_name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ1NTA1OnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MToyM1rOIAp_Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MToyM1rOIAp_Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1ODgyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"randomTarget\", null, 10, false, null, \"resource_name\");\n          \n          \n            \n                        \"randomTarget\", null, 10, false, null, null);", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537558826", "createdAt": "2020-12-07T14:41:23Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -264,15 +267,17 @@ public void testNullWithoutIgnoreMissing() throws Exception {\n         IngestDocument originalIngestDocument = RandomDocumentPicks.randomIngestDocument(random(),\n             Collections.singletonMap(\"source_field\", null));\n         IngestDocument ingestDocument = new IngestDocument(originalIngestDocument);\n-        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\", \"randomTarget\", null, 10, false, null);\n+        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\",\n+            \"randomTarget\", null, 10, false, null, \"resource_name\");\n         Exception exception = expectThrows(Exception.class, () -> processor.execute(ingestDocument));\n         assertThat(exception.getMessage(), equalTo(\"field [source_field] is null, cannot parse.\"));\n     }\n \n     public void testNonExistentWithoutIgnoreMissing() throws Exception {\n         IngestDocument originalIngestDocument = RandomDocumentPicks.randomIngestDocument(random(), Collections.emptyMap());\n         IngestDocument ingestDocument = new IngestDocument(originalIngestDocument);\n-        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\", \"randomTarget\", null, 10, false, null);\n+        Processor processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\",\n+            \"randomTarget\", null, 10, false, null, \"resource_name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ2MTQzOnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MjoyOVrOIAqCyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo1NzoyNlrOIAqylg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1OTc1NQ==", "bodyText": "Could you add an override for the parseDocument method that adds a boolean includeResourceName parameter and only add resource_name if that parameter is true?", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537559755", "createdAt": "2020-12-07T14:42:29Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -285,6 +290,7 @@ public void testNonExistentWithoutIgnoreMissing() throws Exception {\n         throws Exception {\n         Map<String, Object> document = new HashMap<>();\n         document.put(\"source_field\", getAsBinaryOrBase64(file));\n+        document.put(\"resource_name\", file);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3MTk5MA==", "bodyText": "That what I'm going to do, please stay here, I don't want to wait for another week to continue this conversation. I will finish this this night", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537571990", "createdAt": "2020-12-07T14:57:26Z", "author": {"login": "yangyaofei"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -285,6 +290,7 @@ public void testNonExistentWithoutIgnoreMissing() throws Exception {\n         throws Exception {\n         Map<String, Object> document = new HashMap<>();\n         document.put(\"source_field\", getAsBinaryOrBase64(file));\n+        document.put(\"resource_name\", file);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1OTc1NQ=="}, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ2Mzc4OnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0Mjo1NFrOIAqEHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0Mjo1NFrOIAqEHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2MDA5Mw==", "bodyText": "Let's not change the behavior of these tests:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 19, false, null, \"resource_name\");\n          \n          \n            \n                        \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 19, false, null, null);", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537560093", "createdAt": "2020-12-07T14:42:54Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -297,7 +303,7 @@ public void testNonExistentWithoutIgnoreMissing() throws Exception {\n \n     public void testIndexedChars() throws Exception {\n         processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\",\n-            \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 19, false, null);\n+            \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 19, false, null, \"resource_name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ2NzQ1OnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MzozOVrOIAqGUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0MzozOVrOIAqGUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2MDY1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 19, false, \"max_length\", \"resource_name\");\n          \n          \n            \n                        \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 19, false, \"max_length\", null);", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537560658", "createdAt": "2020-12-07T14:43:39Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -308,7 +314,7 @@ public void testIndexedChars() throws Exception {\n         assertThat(attachmentData.get(\"content_length\"), is(19L));\n \n         processor = new AttachmentProcessor(randomAlphaOfLength(10), null, \"source_field\",\n-            \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 19, false, \"max_length\");\n+            \"target_field\", EnumSet.allOf(AttachmentProcessor.Property.class), 19, false, \"max_length\", \"resource_name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ3NDI5OnYy", "diffSide": "RIGHT", "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0NDo1OFrOIAqKVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo1MDo1MVrOIAqcyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2MTY4Ng==", "bodyText": "Can you add these tests to a new test method named something like testIndexedCharsWithResourceName that calls your new overloaded parseDocument method with includeResourceName as true so that it separately tests your new functionality without changing the existing tests?", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537561686", "createdAt": "2020-12-07T14:44:58Z", "author": {"login": "danhermann"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -333,6 +339,30 @@ public void testIndexedChars() throws Exception {\n         assertThat(attachmentData.get(\"content\"), is(\"\\\"God Save the Queen\\\" (alternatively \\\"God Save the King\\\"\"));\n         assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));\n         assertThat(attachmentData.get(\"content_length\"), is(56L));\n+\n+        attachmentData = parseDocument(\"text-cjk-big5.txt\", processor, Collections.singletonMap(\"max_length\", 100));\n+\n+        assertThat(attachmentData.keySet(), containsInAnyOrder(\"language\", \"content\", \"content_type\", \"content_length\"));\n+        assertThat(attachmentData.get(\"content\").toString(), containsString(\"\u78a9\u9f20\u78a9\u9f20\uff0c\u7121\u98df\u6211\u9ecd\uff01\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"charset=Big5\"));\n+        assertThat(attachmentData.get(\"content_length\"), is(100L));\n+\n+        attachmentData = parseDocument(\"text-cjk-gbk.txt\", processor, Collections.singletonMap(\"max_length\", 100));\n+\n+        assertThat(attachmentData.keySet(), containsInAnyOrder(\"language\", \"content\", \"content_type\", \"content_length\"));\n+        assertThat(attachmentData.get(\"content\").toString(), containsString(\"\u7855\u9f20\u7855\u9f20\uff0c\u65e0\u98df\u6211\u9ecd\uff01\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"charset=GB18030\"));\n+        assertThat(attachmentData.get(\"content_length\"), is(100L));\n+\n+        attachmentData = parseDocument(\"text-cjk-euc-jp.txt\", processor, Collections.singletonMap(\"max_length\", 100));\n+\n+        assertThat(attachmentData.keySet(), containsInAnyOrder(\"language\", \"content\", \"content_type\", \"content_length\"));\n+        assertThat(attachmentData.get(\"content\").toString(), containsString(\"\u78a9\u9f20\u3088\u78a9\u9f20\u3088\u3001\\n\u6211\u304c\u9ecd\u3092\u98df\u3089\u3046\u7121\u304b\u308c\uff01\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"charset=EUC-JP\"));\n+        assertThat(attachmentData.get(\"content_length\"), is(100L));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2NjQwOA==", "bodyText": "ok, I get it ,wait for a moment", "url": "https://github.com/elastic/elasticsearch/pull/64389#discussion_r537566408", "createdAt": "2020-12-07T14:50:51Z", "author": {"login": "yangyaofei"}, "path": "plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/AttachmentProcessorTests.java", "diffHunk": "@@ -333,6 +339,30 @@ public void testIndexedChars() throws Exception {\n         assertThat(attachmentData.get(\"content\"), is(\"\\\"God Save the Queen\\\" (alternatively \\\"God Save the King\\\"\"));\n         assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));\n         assertThat(attachmentData.get(\"content_length\"), is(56L));\n+\n+        attachmentData = parseDocument(\"text-cjk-big5.txt\", processor, Collections.singletonMap(\"max_length\", 100));\n+\n+        assertThat(attachmentData.keySet(), containsInAnyOrder(\"language\", \"content\", \"content_type\", \"content_length\"));\n+        assertThat(attachmentData.get(\"content\").toString(), containsString(\"\u78a9\u9f20\u78a9\u9f20\uff0c\u7121\u98df\u6211\u9ecd\uff01\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"charset=Big5\"));\n+        assertThat(attachmentData.get(\"content_length\"), is(100L));\n+\n+        attachmentData = parseDocument(\"text-cjk-gbk.txt\", processor, Collections.singletonMap(\"max_length\", 100));\n+\n+        assertThat(attachmentData.keySet(), containsInAnyOrder(\"language\", \"content\", \"content_type\", \"content_length\"));\n+        assertThat(attachmentData.get(\"content\").toString(), containsString(\"\u7855\u9f20\u7855\u9f20\uff0c\u65e0\u98df\u6211\u9ecd\uff01\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"charset=GB18030\"));\n+        assertThat(attachmentData.get(\"content_length\"), is(100L));\n+\n+        attachmentData = parseDocument(\"text-cjk-euc-jp.txt\", processor, Collections.singletonMap(\"max_length\", 100));\n+\n+        assertThat(attachmentData.keySet(), containsInAnyOrder(\"language\", \"content\", \"content_type\", \"content_length\"));\n+        assertThat(attachmentData.get(\"content\").toString(), containsString(\"\u78a9\u9f20\u3088\u78a9\u9f20\u3088\u3001\\n\u6211\u304c\u9ecd\u3092\u98df\u3089\u3046\u7121\u304b\u308c\uff01\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"text/plain\"));\n+        assertThat(attachmentData.get(\"content_type\").toString(), containsString(\"charset=EUC-JP\"));\n+        assertThat(attachmentData.get(\"content_length\"), is(100L));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2MTY4Ng=="}, "originalCommit": {"oid": "d8e46385fe6d3612eeb5b01f4f2dbef205d6203a"}, "originalPosition": 137}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4096, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}