{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MTUxNTk3", "number": 56784, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzozODoxNFrOEEyGng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzozODoxNFrOEEyGng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDUwNjU0OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzozODoxNFrOGinw0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjoyNDozOVrOGjKNSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NjI0Mg==", "bodyText": "Is this indent correct?", "url": "https://github.com/elastic/elasticsearch/pull/56784#discussion_r438956242", "createdAt": "2020-06-11T17:38:14Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFor.java", "diffHunk": "@@ -33,18 +33,36 @@\n  */\n public class SFor extends AStatement {\n \n-    protected final ANode initializer;\n-    protected final AExpression condition;\n-    protected final AExpression afterthought;\n-    protected final SBlock block;\n-\n-    public SFor(Location location, ANode initializer, AExpression condition, AExpression afterthought, SBlock block) {\n-        super(location);\n-\n-        this.initializer = initializer;\n-        this.condition = condition;\n-        this.afterthought = afterthought;\n-        this.block = block;\n+    private final ANode initializerNode;\n+    private final AExpression conditionNode;\n+    private final AExpression afterthoughtNode;\n+    private final SBlock blockNode;\n+\n+    public SFor(int identifier, Location location,\n+            ANode initializerNode, AExpression conditionNode, AExpression afterthoughtNode, SBlock blockNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8a7eae2b54ad2dce22bb06e903d896577bf9ee0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyMDU4Nw==", "bodyText": "Unfortunately, it is. Without, it will exceed our characters-per-line limit.", "url": "https://github.com/elastic/elasticsearch/pull/56784#discussion_r439520587", "createdAt": "2020-06-12T16:24:39Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFor.java", "diffHunk": "@@ -33,18 +33,36 @@\n  */\n public class SFor extends AStatement {\n \n-    protected final ANode initializer;\n-    protected final AExpression condition;\n-    protected final AExpression afterthought;\n-    protected final SBlock block;\n-\n-    public SFor(Location location, ANode initializer, AExpression condition, AExpression afterthought, SBlock block) {\n-        super(location);\n-\n-        this.initializer = initializer;\n-        this.condition = condition;\n-        this.afterthought = afterthought;\n-        this.block = block;\n+    private final ANode initializerNode;\n+    private final AExpression conditionNode;\n+    private final AExpression afterthoughtNode;\n+    private final SBlock blockNode;\n+\n+    public SFor(int identifier, Location location,\n+            ANode initializerNode, AExpression conditionNode, AExpression afterthoughtNode, SBlock blockNode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NjI0Mg=="}, "originalCommit": {"oid": "b8a7eae2b54ad2dce22bb06e903d896577bf9ee0"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 424, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}