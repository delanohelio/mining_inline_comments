{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMDQ1MzEw", "number": 54980, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNDo0Mjo1N1rODwb41A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNDo0Mjo1N1rODwb41A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTE1MTU2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/ttest/TTestAggregatorFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNDo0Mjo1N1rOGDb5lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNToyNjoxOVrOGDdxww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI1NjAyMw==", "bodyText": "Should we validate/throw an exception/something if people specify an unpaired type, but don't provide filters?  Not sure where to put that validation logic but it seems we should disallow folks from basically running an unpaired test on two match-all's?", "url": "https://github.com/elastic/elasticsearch/pull/54980#discussion_r406256023", "createdAt": "2020-04-09T14:42:57Z", "author": {"login": "polyfractal"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/ttest/TTestAggregatorFactory.java", "diffHunk": "@@ -63,13 +76,46 @@ protected Aggregator doCreateInternal(SearchContext searchContext,\n         }\n         switch (testType) {\n             case PAIRED:\n+                if (filterA != null || filterB != null) {\n+                    throw new IllegalArgumentException(\"Paired t-test doesn't support filters\");\n+                }\n                 return new PairedTTestAggregator(name, numericMultiVS, tails, format, searchContext, parent, metadata);\n             case HOMOSCEDASTIC:\n-                return new UnpairedTTestAggregator(name, numericMultiVS, tails, true, format, searchContext, parent, metadata);\n+                return new UnpairedTTestAggregator(name, numericMultiVS, tails, true, this::getWeights, format, searchContext, parent,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bb9ee2f1f6ceb4040eec260ab35d6e2da4bdbea"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI4Njc4Nw==", "bodyText": "I was thinking about support for something like this:\n{\"before\": [1,2,3], \"after\":[6,7,8,9,10]}\n\nIt currently works for unpaired, fails on paired and doesn't require filters.", "url": "https://github.com/elastic/elasticsearch/pull/54980#discussion_r406286787", "createdAt": "2020-04-09T15:26:19Z", "author": {"login": "imotov"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/ttest/TTestAggregatorFactory.java", "diffHunk": "@@ -63,13 +76,46 @@ protected Aggregator doCreateInternal(SearchContext searchContext,\n         }\n         switch (testType) {\n             case PAIRED:\n+                if (filterA != null || filterB != null) {\n+                    throw new IllegalArgumentException(\"Paired t-test doesn't support filters\");\n+                }\n                 return new PairedTTestAggregator(name, numericMultiVS, tails, format, searchContext, parent, metadata);\n             case HOMOSCEDASTIC:\n-                return new UnpairedTTestAggregator(name, numericMultiVS, tails, true, format, searchContext, parent, metadata);\n+                return new UnpairedTTestAggregator(name, numericMultiVS, tails, true, this::getWeights, format, searchContext, parent,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI1NjAyMw=="}, "originalCommit": {"oid": "0bb9ee2f1f6ceb4040eec260ab35d6e2da4bdbea"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1192, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}