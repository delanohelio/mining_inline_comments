{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTU0NTc0", "number": 59265, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo0NDo0NlrOEM_q1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo0NjozNFrOEM_tMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDYxNTI1OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStatsTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo0NDo0NlrOGvbfKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo0NDo0NlrOGvbfKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4NjYwMQ==", "bodyText": "deserializedScriptCacheStats -> deserializedScriptStats", "url": "https://github.com/elastic/elasticsearch/pull/59265#discussion_r452386601", "createdAt": "2020-07-09T17:44:46Z", "author": {"login": "stu-elastic"}, "path": "server/src/test/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStatsTests.java", "diffHunk": "@@ -241,11 +243,35 @@ public void testSerialization() throws IOException {\n                     }\n                 }\n                 ScriptStats scriptStats = nodeStats.getScriptStats();\n+                ScriptStats deserializedScriptCacheStats = deserializedNodeStats.getScriptStats();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "390332d8e2a129487785fc282f3c6b102d1a73a8"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDYyMTI4OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStatsTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo0NjozNFrOGvbjCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo0NjozNFrOGvbjCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4NzU5NA==", "bodyText": "Add indent back.", "url": "https://github.com/elastic/elasticsearch/pull/59265#discussion_r452387594", "createdAt": "2020-07-09T17:46:34Z", "author": {"login": "stu-elastic"}, "path": "server/src/test/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStatsTests.java", "diffHunk": "@@ -514,20 +525,10 @@ public static NodeStats createNodeStats() {\n             }\n             adaptiveSelectionStats = new AdaptiveSelectionStats(nodeConnections, nodeStats);\n         }\n-        ScriptCacheStats scriptCacheStats = null;\n-        if (frequently()) {\n-            int numContents = randomIntBetween(0, 20);\n-            Map<String,ScriptStats> stats = new HashMap<>(numContents);\n-            for (int i = 0; i < numContents; i++) {\n-                String context = randomValueOtherThanMany(stats::containsKey, () -> randomAlphaOfLength(12));\n-                stats.put(context, new ScriptStats(randomLongBetween(0, 1024), randomLongBetween(0, 1024), randomLongBetween(0, 1024)));\n-            }\n-            scriptCacheStats = new ScriptCacheStats(stats);\n-        }\n         //TODO NodeIndicesStats are not tested here, way too complicated to create, also they need to be migrated to Writeable yet\n         return new NodeStats(node, randomNonNegativeLong(), null, osStats, processStats, jvmStats, threadPoolStats,\n-                fsInfo, transportStats, httpStats, allCircuitBreakerStats, scriptStats, discoveryStats,\n-                ingestStats, adaptiveSelectionStats, scriptCacheStats);\n+            fsInfo, transportStats, httpStats, allCircuitBreakerStats, scriptStats, discoveryStats,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "390332d8e2a129487785fc282f3c6b102d1a73a8"}, "originalPosition": 137}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1910, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}