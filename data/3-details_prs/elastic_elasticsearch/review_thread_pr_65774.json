{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMjU3Mjgw", "number": 65774, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzoxOTowN1rOE__yWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzoxOTowN1rOE__yWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NTQwODI2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzoxOTowN1rOH-BEVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzoxOTowN1rOH-BEVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc5MTI1Mw==", "bodyText": "If I see correctly, the pattern of parsing the response and verifying getInferenceCount is repeated 4 times.\nPlease consider extracting the snippet to a separate method parameterized by the expected inference count.", "url": "https://github.com/elastic/elasticsearch/pull/65774#discussion_r534791253", "createdAt": "2020-12-03T07:19:07Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -135,13 +144,23 @@ public void testPathologicalPipelineCreationAndDeletion() throws Exception {\n             try {\n                 Response statsResponse = client().performRequest(new Request(\"GET\",\n                     \"_ml/trained_models/\" + classificationModelId + \"/_stats\"));\n-                String response = EntityUtils.toString(statsResponse.getEntity());\n-                assertThat(response, containsString(\"\\\"inference_count\\\":10\"));\n-                assertThat(response, containsString(\"\\\"cache_miss_count\\\":30\"));\n+                try (XContentParser parser = createParser(JsonXContent.jsonXContent, statsResponse.getEntity().getContent())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9500f9abaa08f56f4070daa201b236a3285f5a75"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1810, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}