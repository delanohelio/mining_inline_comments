{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MDYxOTE1", "number": 64031, "title": "Fixing a problem with potential dirty read of a token document on token refresh", "bodyText": "As discussed in (#55816) #55816 (comment)\nRelated to #59685", "createdAt": "2020-10-22T06:51:28Z", "url": "https://github.com/elastic/elasticsearch/pull/64031", "merged": true, "mergeCommit": {"oid": "c23c0577b13a107c53249f7b724c65a0cfbd9794"}, "closed": true, "closedAt": "2020-10-26T16:08:34Z", "author": {"login": "BigPandaToo"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdU0YDBgH2gAyNTA4MDYxOTE1OjJjM2UzYzFmOGFkMDA2MjM0NzEzYjI5YzBmMjcyMDE2NjhmODNkMmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWWC1zgH2gAyNTA4MDYxOTE1OmRhNGZlNzI5OGY2YzFkZjk0ZmIxMDU0Y2JhMGU2NmFmNjQ0ZjY4MTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2c3e3c1f8ad006234713b29c0f27201668f83d2d", "author": {"user": {"login": "BigPandaToo", "name": "Lyudmila Fokina"}}, "url": "https://github.com/elastic/elasticsearch/commit/2c3e3c1f8ad006234713b29c0f27201668f83d2d", "committedDate": "2020-10-21T21:37:03Z", "message": "Fixing a problem with potential dirty read of a token document.\nRelated to #59685"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NDIwNDI2", "url": "https://github.com/elastic/elasticsearch/pull/64031#pullrequestreview-514420426", "createdAt": "2020-10-22T07:11:08Z", "commit": {"oid": "2c3e3c1f8ad006234713b29c0f27201668f83d2d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzoxMTowOFrOHmTkfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzoxMTowOFrOHmTkfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkyODU3NQ==", "bodyText": "Having Tuples of Tuples usually is a good sign that we need a new object for this", "url": "https://github.com/elastic/elasticsearch/pull/64031#discussion_r509928575", "createdAt": "2020-10-22T07:11:08Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java", "diffHunk": "@@ -254,7 +254,7 @@ public TokenService(Settings settings, Clock clock, Client client, XPackLicenseS\n      * {@link #VERSION_TOKENS_INDEX_INTRODUCED} and to a specific security tokens index for later versions.\n      */\n     public void createOAuth2Tokens(Authentication authentication, Authentication originatingClientAuth, Map<String, Object> metadata,\n-                                   boolean includeRefreshToken, ActionListener<Tuple<String, String>> listener) {\n+                                   boolean includeRefreshToken, ActionListener<Tuple<Tuple<String, String>, Authentication>> listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c3e3c1f8ad006234713b29c0f27201668f83d2d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1061a048b7b505b1c292502c136348f13a9d8f2", "author": {"user": {"login": "BigPandaToo", "name": "Lyudmila Fokina"}}, "url": "https://github.com/elastic/elasticsearch/commit/a1061a048b7b505b1c292502c136348f13a9d8f2", "committedDate": "2020-10-22T16:20:34Z", "message": "Fixing a problem with potential dirty read of a token document.\nAdding CreateTokenResult to hold authentication object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4f378b6375bfdb6829cd97795580617a18166e9", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/d4f378b6375bfdb6829cd97795580617a18166e9", "committedDate": "2020-10-22T17:16:05Z", "message": "Merge branch 'master' into FixRefreshTokenResponse"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDg1NDQw", "url": "https://github.com/elastic/elasticsearch/pull/64031#pullrequestreview-516485440", "createdAt": "2020-10-26T06:02:49Z", "commit": {"oid": "d4f378b6375bfdb6829cd97795580617a18166e9"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjowMjo0OVrOHoBxaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjoyODoyM1rOHoCLFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczNDEyMw==", "bodyText": "This class can be static since it does not need need access any instance variables.", "url": "https://github.com/elastic/elasticsearch/pull/64031#discussion_r511734123", "createdAt": "2020-10-26T06:02:49Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java", "diffHunk": "@@ -1910,6 +1919,30 @@ boolean isExpirationInProgress() {\n         return expiredTokenRemover.isExpirationInProgress();\n     }\n \n+    public final class CreateTokenResult {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f378b6375bfdb6829cd97795580617a18166e9"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0MDY5NA==", "bodyText": "There are 3 authentication objects here:\n\nThe originating authentication\nThe authentication for which the token is created\nThe token's own authentication\n\nWe had brief discussion during the team meeting and agreed that above item 2 should be returned. However, we are returning item 3 here. The tokenResult.getAuthentication() is the authentication object of the newly created token, while No.2 is technically the old access token's authentication object.\nI don't think it could cause any practical problem, in fact, No. 2 and 3 should be identical here. But it is strictly speaking an inconsistency. I am raising it here in case it's worth any discussion.", "url": "https://github.com/elastic/elasticsearch/pull/64031#discussion_r511740694", "createdAt": "2020-10-26T06:28:23Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/token/TransportRefreshTokenAction.java", "diffHunk": "@@ -31,13 +30,12 @@ public TransportRefreshTokenAction(TransportService transportService, ActionFilt\n \n     @Override\n     protected void doExecute(Task task, CreateTokenRequest request, ActionListener<CreateTokenResponse> listener) {\n-        tokenService.refreshToken(request.getRefreshToken(), ActionListener.wrap(tuple -> {\n+        tokenService.refreshToken(request.getRefreshToken(), ActionListener.wrap(tokenResult -> {\n             final String scope = getResponseScopeValue(request.getScope());\n-            tokenService.authenticateToken(new SecureString(tuple.v1()), ActionListener.wrap(authentication -> {\n-                listener.onResponse(new CreateTokenResponse(tuple.v1(), tokenService.getExpirationDelay(), scope, tuple.v2(), null,\n-                    authentication));\n-            },\n-                listener::onFailure));\n+            final CreateTokenResponse response =\n+                new CreateTokenResponse(tokenResult.getAccessToken(), tokenService.getExpirationDelay(), scope,\n+                    tokenResult.getRefreshToken(), null, tokenResult.getAuthentication());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f378b6375bfdb6829cd97795580617a18166e9"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NTg3MDQx", "url": "https://github.com/elastic/elasticsearch/pull/64031#pullrequestreview-516587041", "createdAt": "2020-10-26T09:16:48Z", "commit": {"oid": "d4f378b6375bfdb6829cd97795580617a18166e9"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOToxNjo0OVrOHoGqhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOToyMjo1NlrOHoG4ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgxNDI3OQ==", "bodyText": "Please also update the javadoc", "url": "https://github.com/elastic/elasticsearch/pull/64031#discussion_r511814279", "createdAt": "2020-10-26T09:16:49Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java", "diffHunk": "@@ -311,7 +311,7 @@ public void createOAuth2Tokens(String accessToken, String refreshToken, Authenti\n      */\n     private void createOAuth2Tokens(String accessToken, String refreshToken, Version tokenVersion, SecurityIndexManager tokensIndex,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f378b6375bfdb6829cd97795580617a18166e9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgxNTU1MA==", "bodyText": "The authentication type would be different, right? I also think we should pass authentication and not tokenAuth in the CreateTokenResult object", "url": "https://github.com/elastic/elasticsearch/pull/64031#discussion_r511815550", "createdAt": "2020-10-26T09:18:57Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/token/TransportRefreshTokenAction.java", "diffHunk": "@@ -31,13 +30,12 @@ public TransportRefreshTokenAction(TransportService transportService, ActionFilt\n \n     @Override\n     protected void doExecute(Task task, CreateTokenRequest request, ActionListener<CreateTokenResponse> listener) {\n-        tokenService.refreshToken(request.getRefreshToken(), ActionListener.wrap(tuple -> {\n+        tokenService.refreshToken(request.getRefreshToken(), ActionListener.wrap(tokenResult -> {\n             final String scope = getResponseScopeValue(request.getScope());\n-            tokenService.authenticateToken(new SecureString(tuple.v1()), ActionListener.wrap(authentication -> {\n-                listener.onResponse(new CreateTokenResponse(tuple.v1(), tokenService.getExpirationDelay(), scope, tuple.v2(), null,\n-                    authentication));\n-            },\n-                listener::onFailure));\n+            final CreateTokenResponse response =\n+                new CreateTokenResponse(tokenResult.getAccessToken(), tokenService.getExpirationDelay(), scope,\n+                    tokenResult.getRefreshToken(), null, tokenResult.getAuthentication());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0MDY5NA=="}, "originalCommit": {"oid": "d4f378b6375bfdb6829cd97795580617a18166e9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgxNTkyNg==", "bodyText": "update javadoc", "url": "https://github.com/elastic/elasticsearch/pull/64031#discussion_r511815926", "createdAt": "2020-10-26T09:19:35Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java", "diffHunk": "@@ -862,7 +862,7 @@ private void indexInvalidation(Collection<String> tokenIds, SecurityIndexManager\n      * @param listener The listener to call upon completion with a {@link Tuple} containing the\n      *                 serialized access token and serialized refresh token as these will be returned to the client\n      */\n-    public void refreshToken(String refreshToken, ActionListener<Tuple<String, String>> listener) {\n+    public void refreshToken(String refreshToken, ActionListener<CreateTokenResult> listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f378b6375bfdb6829cd97795580617a18166e9"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgxNjIwOQ==", "bodyText": "update javadoc", "url": "https://github.com/elastic/elasticsearch/pull/64031#discussion_r511816209", "createdAt": "2020-10-26T09:20:02Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java", "diffHunk": "@@ -1126,11 +1128,13 @@ public void onFailure(Exception e) {\n      * @param refreshTokenStatus The {@link RefreshTokenStatus} containing information about the superseding tokens as retrieved from the\n      *                           index\n      * @param tokensIndex        the manager for the index where the tokens are stored\n-     * @param listener           The listener to call upon completion with a {@link Tuple} containing the\n-     *                           serialized access token and serialized refresh token as these will be returned to the client\n+     * @param authentication     The authentication object representing the user for which the tokens are created\n+     * @param listener           The listener to call upon completion with a {@link Tuple} containing the Tuple of\n+     *                           serialized access token and serialized refresh token and Authentication object as these will be returned\n+     *                           to the client\n      */\n     void decryptAndReturnSupersedingTokens(String refreshToken, RefreshTokenStatus refreshTokenStatus, SecurityIndexManager tokensIndex,\n-                                           ActionListener<Tuple<String, String>> listener) {\n+                                           Authentication authentication, ActionListener<CreateTokenResult> listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f378b6375bfdb6829cd97795580617a18166e9"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgxNzkxNA==", "bodyText": "nit: I think we can update those methods in here to return a  CreateTokenResult and we could also test that the authentication object is what we expect", "url": "https://github.com/elastic/elasticsearch/pull/64031#discussion_r511817914", "createdAt": "2020-10-26T09:22:56Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/saml/TransportSamlInvalidateSessionActionTests.java", "diffHunk": "@@ -376,9 +376,9 @@ public void testInvalidateCorrectTokensFromLogoutRequest() throws Exception {\n         Authentication authentication = new Authentication(new User(\"bob\"),\n                 new RealmRef(\"native\", NativeRealmSettings.TYPE, \"node01\"), null);\n         final Map<String, Object> metadata = samlRealm.createTokenMetadata(nameId, session);\n-        final PlainActionFuture<Tuple<String, String>> future = new PlainActionFuture<>();\n+        final PlainActionFuture<TokenService.CreateTokenResult> future = new PlainActionFuture<>();\n         tokenService.createOAuth2Tokens(userTokenId, refreshToken, authentication, authentication, metadata, future);\n-        return future.actionGet();\n+        return new Tuple<>(future.actionGet().getAccessToken(), future.actionGet().getRefreshToken());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f378b6375bfdb6829cd97795580617a18166e9"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2bd246f60ebbcad08183983f6402c79a28ff3b8", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/e2bd246f60ebbcad08183983f6402c79a28ff3b8", "committedDate": "2020-10-26T14:14:05Z", "message": "Merge branch 'master' into FixRefreshTokenResponse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da4fe7298f6c1df94fb1054cba0e66af644f6819", "author": {"user": {"login": "BigPandaToo", "name": "Lyudmila Fokina"}}, "url": "https://github.com/elastic/elasticsearch/commit/da4fe7298f6c1df94fb1054cba0e66af644f6819", "committedDate": "2020-10-26T15:24:35Z", "message": "Fixing a problem with potential dirty read of a token document.\nAdding CreateTokenResult to hold authentication object"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1103, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}