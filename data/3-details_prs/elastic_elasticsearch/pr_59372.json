{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3OTEzMjM3", "number": 59372, "title": "Add term query for keyword script fields", "bodyText": "This adds what I think is just about the simplest possible term query\nimplementation for keyword script fields and wires it into the field\nmapper that we build for them.\nRelates to #59332", "createdAt": "2020-07-12T15:12:48Z", "url": "https://github.com/elastic/elasticsearch/pull/59372", "merged": true, "mergeCommit": {"oid": "265964863fbb163e72d8f181887da227dbbd5d4e"}, "closed": true, "closedAt": "2020-07-13T21:23:04Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0OUgmgH2gAyNDQ3OTEzMjM3OmI3YTQ1NGU5NDA3ZmU5N2RmMmJjZTkxOTQxMjQ4NzA4NzZiNmNmNWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0m-Z9AH2gAyNDQ3OTEzMjM3OjYzMTRmOTBlMWY5YmI4NWU2OWU0NjJjMjhjM2VkMDk2YzhjYzlhMGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b7a454e9407fe97df2bce9194124870876b6cf5d", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/b7a454e9407fe97df2bce9194124870876b6cf5d", "committedDate": "2020-07-12T15:11:13Z", "message": "Add term query for keyword script fields\n\nThis adds what I think is just about the simplest possible `term` query\nimplementation for `keyword` script fields and wires it into the field\nmapper that we build for them."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ee138caf2959d23b9b7a78cbd33c6bf03623b33", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/9ee138caf2959d23b9b7a78cbd33c6bf03623b33", "committedDate": "2020-07-13T15:25:10Z", "message": "Helper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79fccfc02879a7d4284a9377c24c8ff938c415e5", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/79fccfc02879a7d4284a9377c24c8ff938c415e5", "committedDate": "2020-07-13T16:14:01Z", "message": "Accumulate a list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTI2MjYz", "url": "https://github.com/elastic/elasticsearch/pull/59372#pullrequestreview-447526263", "createdAt": "2020-07-13T19:10:51Z", "commit": {"oid": "79fccfc02879a7d4284a9377c24c8ff938c415e5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToxMDo1MlrOGw2HJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToxMDo1MlrOGw2HJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3MTM5Nw==", "bodyText": "did we say that approximation.cost() was not good here?", "url": "https://github.com/elastic/elasticsearch/pull/59372#discussion_r453871397", "createdAt": "2020-07-13T19:10:52Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/query/StringScriptFieldTermQuery.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.runtimefields.query;\n+\n+import org.apache.lucene.index.LeafReaderContext;\n+import org.apache.lucene.index.Term;\n+import org.apache.lucene.search.ConstantScoreScorer;\n+import org.apache.lucene.search.ConstantScoreWeight;\n+import org.apache.lucene.search.DocIdSetIterator;\n+import org.apache.lucene.search.IndexSearcher;\n+import org.apache.lucene.search.Query;\n+import org.apache.lucene.search.QueryVisitor;\n+import org.apache.lucene.search.ScoreMode;\n+import org.apache.lucene.search.Scorer;\n+import org.apache.lucene.search.TwoPhaseIterator;\n+import org.apache.lucene.search.Weight;\n+import org.elasticsearch.xpack.runtimefields.StringScriptFieldScript;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+public class StringScriptFieldTermQuery extends Query {\n+    private final StringScriptFieldScript.LeafFactory leafFactory;\n+    private final String fieldName;\n+    private final String term;\n+\n+    public StringScriptFieldTermQuery(StringScriptFieldScript.LeafFactory leafFactory, String fieldName, String term) {\n+        this.leafFactory = leafFactory;\n+        this.fieldName = fieldName;\n+        this.term = term;\n+    }\n+\n+    @Override\n+    public final Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n+        return new ConstantScoreWeight(this, boost) {\n+            @Override\n+            public boolean isCacheable(LeafReaderContext ctx) {\n+                return false; // scripts aren't really cacheable at this point\n+            }\n+\n+            @Override\n+            public Scorer scorer(LeafReaderContext ctx) throws IOException {\n+                StringScriptFieldScript script = leafFactory.newInstance(ctx);\n+                DocIdSetIterator approximation = DocIdSetIterator.all(ctx.reader().maxDoc());\n+                TwoPhaseIterator twoPhase = new TwoPhaseIterator(approximation) {\n+                    @Override\n+                    public boolean matches() throws IOException {\n+                        for (String result : script.resultsForDoc(approximation().docID())) {\n+                            if (term.equals(result)) {\n+                                return true;\n+                            }\n+                        }\n+                        return false;\n+                    }\n+\n+                    @Override\n+                    public float matchCost() {\n+                        // TODO we don't have a good way of estimating the complexity of the script so we just go with 9000\n+                        return 9000f;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79fccfc02879a7d4284a9377c24c8ff938c415e5"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6314f90e1f9bb85e69e462c28c3ed096c8cc9a0d", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/6314f90e1f9bb85e69e462c28c3ed096c8cc9a0d", "committedDate": "2020-07-13T19:54:42Z", "message": "Merge branch 'feature/runtime_fields' into runtime_string_term"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4497, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}