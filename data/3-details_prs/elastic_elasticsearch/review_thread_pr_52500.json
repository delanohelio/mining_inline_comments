{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2OTQ0NjEx", "number": 52500, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzowOTowMVrODhEAkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzowOTowMVrODhEAkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTk1MjgzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/geo/CentroidCalculator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzowOTowMVrOFrnZpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjowNjo1OVrOFrtOMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI3ODYyOA==", "bodyText": "Shouldn't we make these private as we have getters for them?", "url": "https://github.com/elastic/elasticsearch/pull/52500#discussion_r381278628", "createdAt": "2020-02-19T13:09:01Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/common/geo/CentroidCalculator.java", "diffHunk": "@@ -31,29 +31,45 @@\n import org.elasticsearch.geometry.Point;\n import org.elasticsearch.geometry.Polygon;\n import org.elasticsearch.geometry.Rectangle;\n+import org.elasticsearch.search.aggregations.metrics.CompensatedSum;\n+\n+import static org.elasticsearch.common.geo.DimensionalShapeType.LINE;\n+import static org.elasticsearch.common.geo.DimensionalShapeType.POINT;\n+import static org.elasticsearch.common.geo.DimensionalShapeType.POLYGON;\n \n /**\n  * This class keeps a running Kahan-sum of coordinates\n  * that are to be averaged in {@link TriangleTreeWriter} for use\n  * as the centroid of a shape.\n  */\n public class CentroidCalculator {\n-    private double compX;\n-    private double compY;\n-    private double sumX;\n-    private double sumY;\n-    private double sumWeight;\n+    CompensatedSum compSumX;\n+    CompensatedSum compSumY;\n+    CompensatedSum compSumWeight;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad5ce73750bf724e186ec0e53c2794eaec52e88"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM3NDAwMQ==", "bodyText": "I've removed the getters! thanks", "url": "https://github.com/elastic/elasticsearch/pull/52500#discussion_r381374001", "createdAt": "2020-02-19T16:06:59Z", "author": {"login": "talevy"}, "path": "server/src/main/java/org/elasticsearch/common/geo/CentroidCalculator.java", "diffHunk": "@@ -31,29 +31,45 @@\n import org.elasticsearch.geometry.Point;\n import org.elasticsearch.geometry.Polygon;\n import org.elasticsearch.geometry.Rectangle;\n+import org.elasticsearch.search.aggregations.metrics.CompensatedSum;\n+\n+import static org.elasticsearch.common.geo.DimensionalShapeType.LINE;\n+import static org.elasticsearch.common.geo.DimensionalShapeType.POINT;\n+import static org.elasticsearch.common.geo.DimensionalShapeType.POLYGON;\n \n /**\n  * This class keeps a running Kahan-sum of coordinates\n  * that are to be averaged in {@link TriangleTreeWriter} for use\n  * as the centroid of a shape.\n  */\n public class CentroidCalculator {\n-    private double compX;\n-    private double compY;\n-    private double sumX;\n-    private double sumY;\n-    private double sumWeight;\n+    CompensatedSum compSumX;\n+    CompensatedSum compSumY;\n+    CompensatedSum compSumWeight;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI3ODYyOA=="}, "originalCommit": {"oid": "3ad5ce73750bf724e186ec0e53c2794eaec52e88"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3971, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}