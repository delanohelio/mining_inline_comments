{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNzg2MjMy", "number": 65814, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNToxODozMlrOFATeEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNToxODozMlrOFATeEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODYzMzE0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/task/OpenJobPersistentTasksExecutor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNToxODozMlrOH-hfvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOTowNzoxNFrOH_Ha4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMyMjU1OQ==", "bodyText": "Can you change \"performing recovery\" to something like \"reverting to last good model snapshot [X]\"\nBut only if modelSnapshotId != ModelSnapshot.EMPTY_SNAPSHOT_ID", "url": "https://github.com/elastic/elasticsearch/pull/65814#discussion_r535322559", "createdAt": "2020-12-03T15:18:32Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/task/OpenJobPersistentTasksExecutor.java", "diffHunk": "@@ -200,16 +201,15 @@ private void runJob(JobTask jobTask, JobState jobState, OpenJobAction.JobParams\n             return;\n         }\n \n-        ActionListener<DatafeedContext> datafeedContextListener = ActionListener.wrap(\n-            datafeedContext -> {\n-                if (datafeedContext != null && datafeedContext.shouldRecoverFromCurrentSnapshot()) {\n-                    // This job has a datafeed attached to it and the job had advanced past the current model snapshot.\n+        ActionListener<Boolean> hasRunningDatafeedTaskListener = ActionListener.wrap(\n+            hasRunningDatafeed -> {\n+                if (hasRunningDatafeed) {\n+                    // This job has a running datafeed attached to it.\n                     // In order to prevent gaps in the model we revert to the current snapshot deleting intervening results.\n-                    ModelSnapshot modelSnapshot = datafeedContext.getModelSnapshot() == null ?\n-                        ModelSnapshot.emptySnapshot(jobTask.getJobId()) : datafeedContext.getModelSnapshot();\n-                    logger.info(\"[{}] job had advanced past its current model snapshot [{}]; performing recovery\",\n-                        jobTask.getJobId(), modelSnapshot.getSnapshotId());\n-                    revertToSnapshot(modelSnapshot, ActionListener.wrap(\n+                    String modelSnapshotId = params.getJob().getModelSnapshotId() == null ?\n+                        ModelSnapshot.EMPTY_SNAPSHOT_ID : params.getJob().getModelSnapshotId();\n+                    logger.info(\"[{}] job has running datafeed task; performing recovery\", jobTask.getJobId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e87b968a0bac4222536eed835d82f5cebc75b2a7"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM0OTM3MA==", "bodyText": "Right after that log message, we'll get the logging from the revert action which follows up and explains the recovery. I thought that was nice. Does it make sense or you still prefer to mention we're going to revert in there?", "url": "https://github.com/elastic/elasticsearch/pull/65814#discussion_r535349370", "createdAt": "2020-12-03T15:45:15Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/task/OpenJobPersistentTasksExecutor.java", "diffHunk": "@@ -200,16 +201,15 @@ private void runJob(JobTask jobTask, JobState jobState, OpenJobAction.JobParams\n             return;\n         }\n \n-        ActionListener<DatafeedContext> datafeedContextListener = ActionListener.wrap(\n-            datafeedContext -> {\n-                if (datafeedContext != null && datafeedContext.shouldRecoverFromCurrentSnapshot()) {\n-                    // This job has a datafeed attached to it and the job had advanced past the current model snapshot.\n+        ActionListener<Boolean> hasRunningDatafeedTaskListener = ActionListener.wrap(\n+            hasRunningDatafeed -> {\n+                if (hasRunningDatafeed) {\n+                    // This job has a running datafeed attached to it.\n                     // In order to prevent gaps in the model we revert to the current snapshot deleting intervening results.\n-                    ModelSnapshot modelSnapshot = datafeedContext.getModelSnapshot() == null ?\n-                        ModelSnapshot.emptySnapshot(jobTask.getJobId()) : datafeedContext.getModelSnapshot();\n-                    logger.info(\"[{}] job had advanced past its current model snapshot [{}]; performing recovery\",\n-                        jobTask.getJobId(), modelSnapshot.getSnapshotId());\n-                    revertToSnapshot(modelSnapshot, ActionListener.wrap(\n+                    String modelSnapshotId = params.getJob().getModelSnapshotId() == null ?\n+                        ModelSnapshot.EMPTY_SNAPSHOT_ID : params.getJob().getModelSnapshotId();\n+                    logger.info(\"[{}] job has running datafeed task; performing recovery\", jobTask.getJobId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMyMjU1OQ=="}, "originalCommit": {"oid": "e87b968a0bac4222536eed835d82f5cebc75b2a7"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk0MzkwNw==", "bodyText": "OK, changed it to \"reverting to current snapshot\"", "url": "https://github.com/elastic/elasticsearch/pull/65814#discussion_r535943907", "createdAt": "2020-12-04T09:07:14Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/task/OpenJobPersistentTasksExecutor.java", "diffHunk": "@@ -200,16 +201,15 @@ private void runJob(JobTask jobTask, JobState jobState, OpenJobAction.JobParams\n             return;\n         }\n \n-        ActionListener<DatafeedContext> datafeedContextListener = ActionListener.wrap(\n-            datafeedContext -> {\n-                if (datafeedContext != null && datafeedContext.shouldRecoverFromCurrentSnapshot()) {\n-                    // This job has a datafeed attached to it and the job had advanced past the current model snapshot.\n+        ActionListener<Boolean> hasRunningDatafeedTaskListener = ActionListener.wrap(\n+            hasRunningDatafeed -> {\n+                if (hasRunningDatafeed) {\n+                    // This job has a running datafeed attached to it.\n                     // In order to prevent gaps in the model we revert to the current snapshot deleting intervening results.\n-                    ModelSnapshot modelSnapshot = datafeedContext.getModelSnapshot() == null ?\n-                        ModelSnapshot.emptySnapshot(jobTask.getJobId()) : datafeedContext.getModelSnapshot();\n-                    logger.info(\"[{}] job had advanced past its current model snapshot [{}]; performing recovery\",\n-                        jobTask.getJobId(), modelSnapshot.getSnapshotId());\n-                    revertToSnapshot(modelSnapshot, ActionListener.wrap(\n+                    String modelSnapshotId = params.getJob().getModelSnapshotId() == null ?\n+                        ModelSnapshot.EMPTY_SNAPSHOT_ID : params.getJob().getModelSnapshotId();\n+                    logger.info(\"[{}] job has running datafeed task; performing recovery\", jobTask.getJobId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMyMjU1OQ=="}, "originalCommit": {"oid": "e87b968a0bac4222536eed835d82f5cebc75b2a7"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1839, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}