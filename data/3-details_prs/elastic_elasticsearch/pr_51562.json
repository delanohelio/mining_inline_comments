{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MjA2NDMy", "number": 51562, "title": "SQL: Fix ORDER BY YEAR() function", "bodyText": "Previously, if YEAR() was used as and ORDER BY argument without being\nwrapped with another scalar (e.g. YEAR(birth_date) + 10), no script\nordering was used but instead the underlying field (e.g. birth_date)\nwas used instead as a performance optimisation. This works correctly if\nYEAR() is the only ORDER BY arg but if further args are used as tie\nbreakers for the ordering wrong results are produced. This is because\n2 rows with the different birth_date but on the same year are not tied\nas the underlying ordering is on birth_date and not on the\nYEAR(birth_date), and the following ORDER BY args are ignored.\nRemove this optimisation for YEAR() to avoid incorrect results in\nsuch cases.\nAs a consequence another bug is revealed: scalar functions on top\nof nested fields produce scripted sorting/filtering which is not yet\nsupported. In such cases no error was thrown but instead all values for\nsuch nested fields were null and were passed to the script implementing\nthe sorting/filtering, producing incorrect results.\nDetect such cases and throw a validation exception.\nFixes: #51224", "createdAt": "2020-01-28T20:10:50Z", "url": "https://github.com/elastic/elasticsearch/pull/51562", "merged": true, "mergeCommit": {"oid": "f41efd6753dc3650a7eabb3e07b02b3b32c5704c"}, "closed": true, "closedAt": "2020-01-30T13:48:35Z", "author": {"login": "matriv"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-3o0kAH2gAyMzY4MjA2NDMyOjM0ZDMxZjMzODY5YTg4ODNjZDM5YjkwNDViZWE3Zjc4MTc0MGUxZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_ZbnggH2gAyMzY4MjA2NDMyOjg4NTUzZGJhNThmNDc2M2E2ODk1MTIyNzJjZWE5M2Q1N2ZkNzdiZDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "34d31f33869a8883cd39b9045bea7f781740e1e9", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/34d31f33869a8883cd39b9045bea7f781740e1e9", "committedDate": "2020-01-28T20:47:36Z", "message": "SQL: Fix ORDER BY YEAR() function\n\nPreviously, if `YEAR()` was used as and ORDER BY argument without being\nwrapped with another scalar (e.g. `YEAR(birth_date) + 10`), no script\nordering was used but instead the underlying field (e.g. `birth_date`)\nwas used instead as a performance optimisation. This works correctly if\nYEAR() is the only ORDER BY arg but if further args are used as tie\nbreakers for the ordering wrong results are produced. This is because\n2 rows with the different `birth_date but on the same year are not tied\nas the underlying ordering is on `birth_date` and not on the\n`YEAR(birth_date)`, and the following ORDER BY args are ignored.\n\nRemove this optimisation for `YEAR()` to avoid incorrect results in\nsuch cases.\n\nFixes: #51224"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94251c9b43c0a21f829ff82d23abd55c5859aab1", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/94251c9b43c0a21f829ff82d23abd55c5859aab1", "committedDate": "2020-01-28T20:54:36Z", "message": "adapt test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3f7fbbe9859ce349a960ea78e8665389584da4b", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/b3f7fbbe9859ce349a960ea78e8665389584da4b", "committedDate": "2020-01-28T19:54:57Z", "message": "SQL: Fix ORDER BY YEAR() function\n\nPreviously, if `YEAR()` was used as and ORDER BY argument without being\nwrapped with another scalar (e.g. `YEAR(birth_date) + 10`), no script\nordering was used but instead the underlying field (e.g. `birth_date`)\nwas used instead as a performance optimisation. This works correctly if\nYEAR() is the only ORDER BY arg but if further args are used as tie\nbreakers for the ordering wrong results are produced. This is because\n2 rows with the different `birth_date but on the same year are not tied\nas the underlying ordering is on `birth_date` and not on the\n`YEAR(birth_date)`, and the following ORDER BY args are ignored.\n\nRemove this optimisation for `YEAR()` to avoid incorrect results in\nsuch cases.\n\nFixes: #51224"}, "afterCommit": {"oid": "94251c9b43c0a21f829ff82d23abd55c5859aab1", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/94251c9b43c0a21f829ff82d23abd55c5859aab1", "committedDate": "2020-01-28T20:54:36Z", "message": "adapt test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NzUwMjYy", "url": "https://github.com/elastic/elasticsearch/pull/51562#pullrequestreview-349750262", "createdAt": "2020-01-28T22:28:31Z", "commit": {"oid": "94251c9b43c0a21f829ff82d23abd55c5859aab1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoyODozMVrOFi22vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjozMDo1NFrOFi26eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5NDY1Mw==", "bodyText": "This test is not relevant (anymore). Can you add dep.from_date to the projections?\nWhy did the order change since the PR should address ONLY the case of ordering by year and something else?", "url": "https://github.com/elastic/elasticsearch/pull/51562#discussion_r372094653", "createdAt": "2020-01-28T22:28:31Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/qa/src/main/resources/nested.csv-spec", "diffHunk": "@@ -106,23 +106,23 @@ SELECT first_name f, last_name l, YEAR(dep.from_date) start FROM test_emp WHERE\n \n f:s                  | l:s           | start:i\n \n-Sreekrishna          |Servieres      |1985           \n-Zhongwei             |Rosen          |1986           \n-Chirstian            |Koblick        |1986           \n-null                 |Chappelet      |1988           \n-Zvonko               |Nyanchama      |1989     \n+Parto                |Bamford        |1995\n+Chirstian            |Koblick        |1986\n+Duangkaew            |Piveteau       |1996\n+Kazuhide             |Peha           |1992\n+null                 |Demeyer        |1994\n ;\n \n selectWithScalarOnNestedWithoutProjection\n SELECT first_name f, last_name l FROM test_emp WHERE dep.dep_name = 'Production' AND languages > 1 ORDER BY YEAR(dep.from_date) LIMIT 5;\n \n f:s                  | l:s\n \n-Sreekrishna          |Servieres      \n-Zhongwei             |Rosen          \n-Chirstian            |Koblick        \n-null                 |Chappelet      \n-Zvonko               |Nyanchama  \n+Parto                |Bamford", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94251c9b43c0a21f829ff82d23abd55c5859aab1"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5NTYwOQ==", "bodyText": "Ordering here is completely wrong. 1995, 1986, 1996.... The query has ORDER BY start where start is YEAR(dep.from_date).", "url": "https://github.com/elastic/elasticsearch/pull/51562#discussion_r372095609", "createdAt": "2020-01-28T22:30:54Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/qa/src/main/resources/nested.csv-spec", "diffHunk": "@@ -106,23 +106,23 @@ SELECT first_name f, last_name l, YEAR(dep.from_date) start FROM test_emp WHERE\n \n f:s                  | l:s           | start:i\n \n-Sreekrishna          |Servieres      |1985           \n-Zhongwei             |Rosen          |1986           \n-Chirstian            |Koblick        |1986           \n-null                 |Chappelet      |1988           \n-Zvonko               |Nyanchama      |1989     \n+Parto                |Bamford        |1995", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94251c9b43c0a21f829ff82d23abd55c5859aab1"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aa1aee5b0268b432400ff3f001906b765b09f8b", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/2aa1aee5b0268b432400ff3f001906b765b09f8b", "committedDate": "2020-01-29T11:15:53Z", "message": "Merge remote-tracking branch 'upstream/master' into fix-51224"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1875e76cba5d7d0cacdd40c1d6a738c5648b460f", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/1875e76cba5d7d0cacdd40c1d6a738c5648b460f", "committedDate": "2020-01-29T17:22:09Z", "message": "Detect and prevent scalars on nested for ORDER BY"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDQ1MTYy", "url": "https://github.com/elastic/elasticsearch/pull/51562#pullrequestreview-350445162", "createdAt": "2020-01-29T21:43:16Z", "commit": {"oid": "1875e76cba5d7d0cacdd40c1d6a738c5648b460f"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo0MzoxNlrOFjYjHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo0Njo0MVrOFjYpig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NjY4Ng==", "bodyText": "I think the method can be removed entirely - is it used anywhere else?", "url": "https://github.com/elastic/elasticsearch/pull/51562#discussion_r372646686", "createdAt": "2020-01-29T21:43:16Z", "author": {"login": "costin"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/function/scalar/ScalarFunction.java", "diffHunk": "@@ -39,17 +39,15 @@ protected ScalarFunction(Source source, List<Expression> fields) {\n         super(source, fields);\n     }\n \n-    // used if the function is monotonic and thus does not have to be computed for ordering purposes\n-    // null means the script needs to be used; expression means the field/expression to be used instead\n+    // Every function needs to be translated to a script\n+    // which will be used for the ordering", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1875e76cba5d7d0cacdd40c1d6a738c5648b460f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NzE2Mg==", "bodyText": "why (fa)?", "url": "https://github.com/elastic/elasticsearch/pull/51562#discussion_r372647162", "createdAt": "2020-01-29T21:44:13Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -722,16 +722,19 @@ private static void checkForScoreInsideFunctions(LogicalPlan p, Set<Failure> loc\n                 Function.class));\n     }\n \n-    private static void checkNestedUsedInGroupByOrHaving(LogicalPlan p, Set<Failure> localFailures) {\n+    private static void checkNestedUsedInGroupByOrHavingOrOrderBy(LogicalPlan p, Set<Failure> localFailures,\n+                                                                  AttributeMap<Expression> attributeRefs) {\n         List<FieldAttribute> nested = new ArrayList<>();\n-        Consumer<FieldAttribute> match = fa -> {\n+        Consumer<FieldAttribute> match = (fa) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1875e76cba5d7d0cacdd40c1d6a738c5648b460f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0ODMzMA==", "bodyText": "Small nit - this type of call seems to be used 3 times (last time twice) - maybe could be extracted into a small method to avoid repetition.\nMaybe check if it's used anywhere else so even more of a reuse...", "url": "https://github.com/elastic/elasticsearch/pull/51562#discussion_r372648330", "createdAt": "2020-01-29T21:46:41Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -722,16 +722,19 @@ private static void checkForScoreInsideFunctions(LogicalPlan p, Set<Failure> loc\n                 Function.class));\n     }\n \n-    private static void checkNestedUsedInGroupByOrHaving(LogicalPlan p, Set<Failure> localFailures) {\n+    private static void checkNestedUsedInGroupByOrHavingOrOrderBy(LogicalPlan p, Set<Failure> localFailures,\n+                                                                  AttributeMap<Expression> attributeRefs) {\n         List<FieldAttribute> nested = new ArrayList<>();\n-        Consumer<FieldAttribute> match = fa -> {\n+        Consumer<FieldAttribute> match = (fa) -> {\n             if (fa.isNested()) {\n                 nested.add(fa);\n             }\n         };\n \n         // nested fields shouldn't be used in aggregates or having (yet)\n-        p.forEachDown(a -> a.groupings().forEach(agg -> agg.forEachUp(match, FieldAttribute.class)), Aggregate.class);\n+        p.forEachDown(a -> a.groupings().forEach(agg -> agg.forEachUp(e ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1875e76cba5d7d0cacdd40c1d6a738c5648b460f"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNzE4NTQy", "url": "https://github.com/elastic/elasticsearch/pull/51562#pullrequestreview-350718542", "createdAt": "2020-01-30T10:26:44Z", "commit": {"oid": "1875e76cba5d7d0cacdd40c1d6a738c5648b460f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "801ca3e00e9efbf285ea92e13a847d443fa644ed", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/801ca3e00e9efbf285ea92e13a847d443fa644ed", "committedDate": "2020-01-30T11:46:10Z", "message": "Address comments - disallow also in WHERE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e50c2fd143080e6e3ac01f05ff7dcd0beac482cb", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/e50c2fd143080e6e3ac01f05ff7dcd0beac482cb", "committedDate": "2020-01-30T11:49:06Z", "message": "Merge remote-tracking branch 'upstream/master' into fix-51224"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNzY0NDI0", "url": "https://github.com/elastic/elasticsearch/pull/51562#pullrequestreview-350764424", "createdAt": "2020-01-30T11:48:01Z", "commit": {"oid": "801ca3e00e9efbf285ea92e13a847d443fa644ed"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTo0ODowMVrOFjoRxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMjowMDozMVrOFjomow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwNDM5MQ==", "bodyText": "Capital letters for length?", "url": "https://github.com/elastic/elasticsearch/pull/51562#discussion_r372904391", "createdAt": "2020-01-30T11:48:01Z", "author": {"login": "astefan"}, "path": "docs/reference/sql/limitations.asciidoc", "diffHunk": "@@ -31,6 +31,34 @@ For example:\n SELECT dep.dep_name.keyword FROM test_emp GROUP BY languages;\n --------------------------------------------------\n \n+[float]\n+=== Scalar functions on nested fields are not allowed in `WHERE` and `ORDER BY` clauses\n+{es-sql} doesn't support the usage of scalar functions on top of nested fields in `WHERE`\n+and `ORDER BY` clauses with the exception of comparison and logical operators.\n+\n+For example:\n+\n+[source, sql]\n+--------------------------------------------------\n+SELECT * FROM test_emp WHERE length(dep.dep_name.keyword) > 5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801ca3e00e9efbf285ea92e13a847d443fa644ed"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwNzc2MQ==", "bodyText": "Typo in the variable name: checkForNestedInFcuntion .", "url": "https://github.com/elastic/elasticsearch/pull/51562#discussion_r372907761", "createdAt": "2020-01-30T11:56:24Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -735,33 +740,61 @@ private static void checkForScoreInsideFunctions(LogicalPlan p, Set<Failure> loc\n                 Function.class));\n     }\n \n-    private static void checkNestedUsedInGroupByOrHaving(LogicalPlan p, Set<Failure> localFailures) {\n+    private static void checkNestedUsedInGroupByOrHavingOrWhereOrOrderBy(LogicalPlan p, Set<Failure> localFailures,\n+                                                                         AttributeMap<Expression> attributeRefs) {\n         List<FieldAttribute> nested = new ArrayList<>();\n-        Consumer<FieldAttribute> match = fa -> {\n+        Consumer<FieldAttribute> matchNested = fa -> {\n             if (fa.isNested()) {\n                 nested.add(fa);\n             }\n         };\n+        Consumer<Expression> checkForNested = e ->\n+                attributeRefs.getOrDefault(e, e).forEachUp(matchNested, FieldAttribute.class);\n+        Consumer<ScalarFunction> checkForNestedInFcuntion =  f -> f.arguments().forEach(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e50c2fd143080e6e3ac01f05ff7dcd0beac482cb"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwOTczMQ==", "bodyText": "I don't understand why this logic is removed. We removed the faulty support for sorting on nested fields that needs scripting, but why is this block of code associated with nested fields?", "url": "https://github.com/elastic/elasticsearch/pull/51562#discussion_r372909731", "createdAt": "2020-01-30T12:00:31Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/planner/QueryFolder.java", "diffHunk": "@@ -695,21 +695,8 @@ protected PhysicalPlan rule(OrderExec plan) {\n                         // scalar functions typically require script ordering\n                         if (orderExpression instanceof ScalarFunction) {\n                             ScalarFunction sf = (ScalarFunction) orderExpression;\n-                            // is there an expression to order by?\n-                            if (sf.orderBy() != null) {\n-                                Expression orderBy = sf.orderBy();\n-                                if (orderBy instanceof NamedExpression) {\n-                                    orderBy = qContainer.aliases().getOrDefault(orderBy, orderBy);\n-                                    qContainer = qContainer\n-                                            .addSort(new AttributeSort(((NamedExpression) orderBy).toAttribute(), direction, missing));\n-                                } else if (orderBy.foldable() == false) {\n-                                    // ignore constant\n-                                    throw new PlanningException(\"does not know how to order by expression {}\", orderBy);\n-                                }\n-                            } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e50c2fd143080e6e3ac01f05ff7dcd0beac482cb"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88553dba58f4763a689512272cea93d57fd77bd5", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/88553dba58f4763a689512272cea93d57fd77bd5", "committedDate": "2020-01-30T12:09:57Z", "message": "address comments - typos/formatting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3188, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}