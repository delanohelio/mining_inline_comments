{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNTYxMzI0", "number": 56209, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOToxMTo1N1rOD5ir2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNjo0MToyNlrOD5sAcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjYzNzA1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/DocWriteRequest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOToxMTo1N1rOGQ3yfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNzo1Mjo1M1rOGbWgSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM0NDQ0NQ==", "bodyText": "Having to maintain the old format for 8.x (here and all throughout this change set pretty much) is quite annoying but I think unavoidable because we need to continue to support a 7.x TransportClient sending us a BulkRequest.", "url": "https://github.com/elastic/elasticsearch/pull/56209#discussion_r420344445", "createdAt": "2020-05-05T19:11:57Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteRequest.java", "diffHunk": "@@ -195,16 +197,22 @@ public static OpType fromString(String sOpType) {\n         }\n     }\n \n-    /** read a document write (index/delete/update) request */\n-    static DocWriteRequest<?> readDocumentRequest(StreamInput in) throws IOException {\n+    /**\n+     * Read a document write (index/delete/update) request\n+     *\n+     * @param shardId shard id of the request. {@code null} when reading as part of a {@link org.elasticsearch.action.bulk.BulkRequest}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e6aaea3bae3a9c44defe4145b26494644779539"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAwODU0Mg==", "bodyText": "That sounds suspicious. The transport client is deprecated in 7.x, do we expect it to work at all against a cluster containing v8 nodes? Even if we do, do we expect it to work even if the client version is earlier than 7.last? Perhaps I'm missing something here...", "url": "https://github.com/elastic/elasticsearch/pull/56209#discussion_r431008542", "createdAt": "2020-05-27T10:13:34Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteRequest.java", "diffHunk": "@@ -195,16 +197,22 @@ public static OpType fromString(String sOpType) {\n         }\n     }\n \n-    /** read a document write (index/delete/update) request */\n-    static DocWriteRequest<?> readDocumentRequest(StreamInput in) throws IOException {\n+    /**\n+     * Read a document write (index/delete/update) request\n+     *\n+     * @param shardId shard id of the request. {@code null} when reading as part of a {@link org.elasticsearch.action.bulk.BulkRequest}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM0NDQ0NQ=="}, "originalCommit": {"oid": "7e6aaea3bae3a9c44defe4145b26494644779539"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMzMzQ1MA==", "bodyText": "The transport client is deprecated in 7.x, do we expect it to work at all against a cluster containing v8 nodes?\n\nGood question. I guess as of today it will be able to connect to a v8 cluster at least with 7.last.\n\nEven if we do, do we expect it to work even if the client version is earlier than 7.last?\n\nNo I don't think so. Only 7.last should work, ES won't connect to anything older.\n=> still ... it would be my understanding that we have to support this request in 8.x unless we patch the transport client in 7.last to not connect to 8.x nodes. (I'd be all for that)\nNo matter what we do there, I'd keep this compatibility step here for this PR so I can backport it to 7.x as is. We can then look into if and how we want to go about removing over the wire serialization for BulkRequest in 8.x in a separate issue?", "url": "https://github.com/elastic/elasticsearch/pull/56209#discussion_r431333450", "createdAt": "2020-05-27T17:52:53Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteRequest.java", "diffHunk": "@@ -195,16 +197,22 @@ public static OpType fromString(String sOpType) {\n         }\n     }\n \n-    /** read a document write (index/delete/update) request */\n-    static DocWriteRequest<?> readDocumentRequest(StreamInput in) throws IOException {\n+    /**\n+     * Read a document write (index/delete/update) request\n+     *\n+     * @param shardId shard id of the request. {@code null} when reading as part of a {@link org.elasticsearch.action.bulk.BulkRequest}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM0NDQ0NQ=="}, "originalCommit": {"oid": "7e6aaea3bae3a9c44defe4145b26494644779539"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODE2MTAyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/support/replication/ReplicationRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNjozOTo1OVrOGRFx-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNjozOTo1OVrOGRFx-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3MzY4OQ==", "bodyText": "This null check is kind of annoying. In many cases we logically wouldn't need it (technically) because we are serializing a request instance that doesn't have the shard id set yet as part of a bulk request (but is known) on the coordinating node (when first sorting the various bulk request parts per shard). We can make a follow-up improvement here to make use of the known ShardId in these cases so that we don't needlessly serialize the index name if it isn't an alias.", "url": "https://github.com/elastic/elasticsearch/pull/56209#discussion_r420573689", "createdAt": "2020-05-06T06:39:59Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/support/replication/ReplicationRequest.java", "diffHunk": "@@ -197,6 +210,23 @@ public void writeTo(StreamOutput out) throws IOException {\n         out.writeVLong(routedBasedOnClusterVersion);\n     }\n \n+    /**\n+     * Thin serialization that does not write {@link #shardId} and will only write {@link #index} if it is different from the index name in\n+     * {@link #shardId}.\n+     */\n+    public void writeThin(StreamOutput out) throws IOException {\n+        super.writeTo(out);\n+        waitForActiveShards.writeTo(out);\n+        out.writeTimeValue(timeout);\n+        if (shardId != null && index.equals(shardId.getIndexName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84e3912f6930f26e2fd41b73a573402a35c4e423"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODE2NDM1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/support/single/instance/InstanceShardOperationRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNjo0MToyNlrOGRF0DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNjo0MToyNlrOGRF0DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3NDIyMQ==", "bodyText": "Same here, the ShardId is often known on the coordinating node, we can improve this situation to less often serialize the actual name.", "url": "https://github.com/elastic/elasticsearch/pull/56209#discussion_r420574221", "createdAt": "2020-05-06T06:41:26Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/support/single/instance/InstanceShardOperationRequest.java", "diffHunk": "@@ -130,5 +141,16 @@ public void writeTo(StreamOutput out) throws IOException {\n         out.writeOptionalString(concreteIndex);\n     }\n \n+    public void writeThin(StreamOutput out) throws IOException {\n+        super.writeTo(out);\n+        if (shardId != null && index.equals(shardId.getIndexName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84e3912f6930f26e2fd41b73a573402a35c4e423"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2388, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}