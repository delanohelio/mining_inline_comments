{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2ODAyMzY3", "number": 52492, "title": "Do not lock on reads of XPackLicenseState", "bodyText": "XPackLicenseState reads to necessary to validate a number of cluster\noperations. This reads occasionally occur on transport threads which\nshould not be blocked. Currently we sychronize when reading. However,\nthis is unecessary as only a single piece of state is updateable. This\ncommit makes this state volatile and removes the locking.", "createdAt": "2020-02-18T19:46:53Z", "url": "https://github.com/elastic/elasticsearch/pull/52492", "merged": true, "mergeCommit": {"oid": "6669e53f08d386c8806b28ccc72d9baab607a121"}, "closed": true, "closedAt": "2020-02-25T22:38:36Z", "author": {"login": "tbrooks8"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFohA7AFqTM2MDY3MjYyMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH5KlTABqjMwNzExMTU2Nzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjcyNjIy", "url": "https://github.com/elastic/elasticsearch/pull/52492#pullrequestreview-360672622", "createdAt": "2020-02-18T21:06:56Z", "commit": {"oid": "d87144f4257304fb25eccb9d7e433f9bf42cf3ae"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTowNjo1N1rOFrSayA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTowNzo0N1rOFrScMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNDg1Ng==", "bodyText": "Suggested change", "url": "https://github.com/elastic/elasticsearch/pull/52492#discussion_r380934856", "createdAt": "2020-02-18T21:06:57Z", "author": {"login": "jaymode"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -555,9 +594,12 @@ public synchronized boolean isMonitoringClusterAlertsAllowed() {\n      *\n      * @return {@code true} if the user is allowed to modify the retention. Otherwise {@code false}.\n      */\n-    public synchronized boolean isUpdateRetentionAllowed() {\n-        final OperationMode mode = status.mode;\n-        return mode != OperationMode.BASIC && mode != OperationMode.MISSING;\n+    public boolean isUpdateRetentionAllowed() {\n+        return checkAgainstStatus(status -> {\n+            final OperationMode mode = status.mode;\n+            return mode != OperationMode.BASIC && mode != OperationMode.MISSING;\n+        });\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d87144f4257304fb25eccb9d7e433f9bf42cf3ae"}, "originalPosition": 387}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNDkzMQ==", "bodyText": "Suggested change", "url": "https://github.com/elastic/elasticsearch/pull/52492#discussion_r380934931", "createdAt": "2020-02-18T21:07:08Z", "author": {"login": "jaymode"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -593,9 +637,9 @@ public synchronized boolean isGraphAllowed() {\n      * @return {@code true} as long as the license is valid. Otherwise\n      *         {@code false}.\n      */\n-    public synchronized boolean isMachineLearningAllowed() {\n-        final Status currentStatus = status;\n-        return currentStatus.active && isMachineLearningAllowedForOperationMode(currentStatus.mode);\n+    public boolean isMachineLearningAllowed() {\n+        return checkAgainstStatus(status -> status.active && isMachineLearningAllowedForOperationMode(status.mode));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d87144f4257304fb25eccb9d7e433f9bf42cf3ae"}, "originalPosition": 421}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTAyNA==", "bodyText": "Suggested change", "url": "https://github.com/elastic/elasticsearch/pull/52492#discussion_r380935024", "createdAt": "2020-02-18T21:07:19Z", "author": {"login": "jaymode"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -684,10 +726,9 @@ public synchronized boolean isUpgradeAllowed() {\n      *         {@code false}.\n      */\n     public boolean isIndexLifecycleAllowed() {\n-        // status is volatile\n-        Status localStatus = status;\n         // Should work on all active licenses\n-        return localStatus.active;\n+        return checkAgainstStatus(status -> status.active);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d87144f4257304fb25eccb9d7e433f9bf42cf3ae"}, "originalPosition": 512}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTE3OQ==", "bodyText": "Suggested change", "url": "https://github.com/elastic/elasticsearch/pull/52492#discussion_r380935179", "createdAt": "2020-02-18T21:07:41Z", "author": {"login": "jaymode"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -780,32 +821,30 @@ public synchronized boolean isOdbcAllowed() {\n      *         {@code false}.\n      */\n     public boolean isSpatialAllowed() {\n-        // status is volatile\n-        Status localStatus = status;\n         // Should work on all active licenses\n-        return localStatus.active;\n+        return checkAgainstStatus(status -> status.active);\n     }\n \n     /**\n      * Analytics is always available as long as there is a valid license\n      *\n      * @return true if the license is active\n      */\n-    public synchronized boolean isAnalyticsAllowed() {\n-        return status.active;\n-    }\n-\n-    public synchronized boolean isTrialLicense() {\n-        return status.mode == OperationMode.TRIAL;\n+    public boolean isAnalyticsAllowed() {\n+        return checkAgainstStatus(status -> status.active);\n     }\n \n     /**\n      * @return true if security is available to be used with the current license type\n      */\n-    public synchronized boolean isSecurityAvailable() {\n-        OperationMode mode = status.mode;\n-        return mode == OperationMode.GOLD || mode == OperationMode.PLATINUM || mode == OperationMode.STANDARD ||\n+    public boolean isSecurityAvailable() {\n+        return checkAgainstStatus(status -> {\n+            OperationMode mode = status.mode;\n+            return mode == OperationMode.GOLD || mode == OperationMode.PLATINUM || mode == OperationMode.STANDARD ||\n                 mode == OperationMode.TRIAL || mode == OperationMode.BASIC;\n+        });\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d87144f4257304fb25eccb9d7e433f9bf42cf3ae"}, "originalPosition": 651}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTIxOA==", "bodyText": "Suggested change", "url": "https://github.com/elastic/elasticsearch/pull/52492#discussion_r380935218", "createdAt": "2020-02-18T21:07:47Z", "author": {"login": "jaymode"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -780,32 +821,30 @@ public synchronized boolean isOdbcAllowed() {\n      *         {@code false}.\n      */\n     public boolean isSpatialAllowed() {\n-        // status is volatile\n-        Status localStatus = status;\n         // Should work on all active licenses\n-        return localStatus.active;\n+        return checkAgainstStatus(status -> status.active);\n     }\n \n     /**\n      * Analytics is always available as long as there is a valid license\n      *\n      * @return true if the license is active\n      */\n-    public synchronized boolean isAnalyticsAllowed() {\n-        return status.active;\n-    }\n-\n-    public synchronized boolean isTrialLicense() {\n-        return status.mode == OperationMode.TRIAL;\n+    public boolean isAnalyticsAllowed() {\n+        return checkAgainstStatus(status -> status.active);\n     }\n \n     /**\n      * @return true if security is available to be used with the current license type\n      */\n-    public synchronized boolean isSecurityAvailable() {\n-        OperationMode mode = status.mode;\n-        return mode == OperationMode.GOLD || mode == OperationMode.PLATINUM || mode == OperationMode.STANDARD ||\n+    public boolean isSecurityAvailable() {\n+        return checkAgainstStatus(status -> {\n+            OperationMode mode = status.mode;\n+            return mode == OperationMode.GOLD || mode == OperationMode.PLATINUM || mode == OperationMode.STANDARD ||\n                 mode == OperationMode.TRIAL || mode == OperationMode.BASIC;\n+        });\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d87144f4257304fb25eccb9d7e433f9bf42cf3ae"}, "originalPosition": 650}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48ee863625c6deb454e3f3bc9b50b53e5d600501", "author": {"user": {"login": "tbrooks8", "name": "Tim Brooks"}}, "url": "https://github.com/elastic/elasticsearch/commit/48ee863625c6deb454e3f3bc9b50b53e5d600501", "committedDate": "2020-02-25T21:39:16Z", "message": "Do not lock on reads of XPackLicenseState (#52437)\n\nXPackLicenseState reads to necessary to validate a number of cluster\r\noperations. This reads occasionally occur on transport threads which\r\nshould not be blocked. Currently we sychronize when reading. However,\r\nthis is unecessary as only a single piece of state is updateable. This\r\ncommit makes this state volatile and removes the locking."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63d87a81fb2a2b73de227e8ee05615be55dfdb70", "author": {"user": {"login": "tbrooks8", "name": "Tim Brooks"}}, "url": "https://github.com/elastic/elasticsearch/commit/63d87a81fb2a2b73de227e8ee05615be55dfdb70", "committedDate": "2020-02-18T21:33:25Z", "message": "Checkstyle"}, "afterCommit": {"oid": "48ee863625c6deb454e3f3bc9b50b53e5d600501", "author": {"user": {"login": "tbrooks8", "name": "Tim Brooks"}}, "url": "https://github.com/elastic/elasticsearch/commit/48ee863625c6deb454e3f3bc9b50b53e5d600501", "committedDate": "2020-02-25T21:39:16Z", "message": "Do not lock on reads of XPackLicenseState (#52437)\n\nXPackLicenseState reads to necessary to validate a number of cluster\r\noperations. This reads occasionally occur on transport threads which\r\nshould not be blocked. Currently we sychronize when reading. However,\r\nthis is unecessary as only a single piece of state is updateable. This\r\ncommit makes this state volatile and removes the locking."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2401, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}