{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjU3MDk2", "number": 57758, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTo1NDowOFrOEDmujQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoxODo1MlrOEDnMMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjE1NjkzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/BytesKeyedBucketOrds.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTo1NDowOFrOGguGzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTo1NDowOFrOGguGzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MzAyMQ==", "bodyText": "Oh, that reminds me, I should put a private default constructor on ValuesSourceConfig, thanks.", "url": "https://github.com/elastic/elasticsearch/pull/57758#discussion_r436963021", "createdAt": "2020-06-08T19:54:08Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/BytesKeyedBucketOrds.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.search.aggregations.bucket.terms;\n+\n+import org.apache.lucene.util.BytesRef;\n+import org.elasticsearch.common.lease.Releasable;\n+import org.elasticsearch.common.lease.Releasables;\n+import org.elasticsearch.common.util.BigArrays;\n+import org.elasticsearch.common.util.BytesRefHash;\n+\n+/**\n+ * Maps {@link BytesRef} bucket keys to bucket ordinals.\n+ */\n+public abstract class BytesKeyedBucketOrds implements Releasable {\n+    /**\n+     * Build a {@link LongKeyedBucketOrds}.\n+     */\n+    public static BytesKeyedBucketOrds build(BigArrays bigArrays, boolean collectsFromSingleBucket) {\n+        return collectsFromSingleBucket ? new FromSingle(bigArrays) : new FromMany(bigArrays);\n+    }\n+\n+    private BytesKeyedBucketOrds() {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04bf452d3f06fac8219b9d91be4e940889ab547"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjIzMjgxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoxODo1MlrOGgu3cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMToxNTo0NVrOGgwtTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NTQ3Mg==", "bodyText": "How confidant are we that this assert will never trip?  I'm wondering if it makes sense to change the condition to read if (remapGlobalOrds || collectFromSingleBucket==false)", "url": "https://github.com/elastic/elasticsearch/pull/57758#discussion_r436975472", "createdAt": "2020-06-08T20:18:52Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -104,7 +106,13 @@ public GlobalOrdinalsStringTermsAggregator(\n         this.valueCount = values.getValueCount();\n         this.lookupGlobalOrd = values::lookupOrd;\n         this.acceptedGlobalOrdinals = includeExclude == null ? ALWAYS_TRUE : includeExclude.acceptedGlobalOrdinals(values)::get;\n-        this.collectionStrategy = remapGlobalOrds ? new RemapGlobalOrds() : new DenseGlobalOrds();\n+        if (remapGlobalOrds) {\n+            this.collectionStrategy = new RemapGlobalOrds(collectsFromSingleBucket);\n+        } else {\n+            // Dense ords don't know how to collect from many buckets\n+            assert collectsFromSingleBucket;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04bf452d3f06fac8219b9d91be4e940889ab547"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAwNTY0NQ==", "bodyText": "I'm pretty confident. But I'll switch it to a hard check just for extra assurance.", "url": "https://github.com/elastic/elasticsearch/pull/57758#discussion_r437005645", "createdAt": "2020-06-08T21:15:45Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -104,7 +106,13 @@ public GlobalOrdinalsStringTermsAggregator(\n         this.valueCount = values.getValueCount();\n         this.lookupGlobalOrd = values::lookupOrd;\n         this.acceptedGlobalOrdinals = includeExclude == null ? ALWAYS_TRUE : includeExclude.acceptedGlobalOrdinals(values)::get;\n-        this.collectionStrategy = remapGlobalOrds ? new RemapGlobalOrds() : new DenseGlobalOrds();\n+        if (remapGlobalOrds) {\n+            this.collectionStrategy = new RemapGlobalOrds(collectsFromSingleBucket);\n+        } else {\n+            // Dense ords don't know how to collect from many buckets\n+            assert collectsFromSingleBucket;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NTQ3Mg=="}, "originalCommit": {"oid": "c04bf452d3f06fac8219b9d91be4e940889ab547"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3593, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}