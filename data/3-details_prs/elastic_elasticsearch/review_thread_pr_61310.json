{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5OTUwNTE1", "number": 61310, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTo0ODoxNVrOEacVJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTo0OToyNlrOEacXzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTYyNTk4OnYy", "diffSide": "RIGHT", "path": "test/framework/src/main/java/org/elasticsearch/test/disruption/DisruptableMockTransport.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTo0ODoxNVrOHD4LSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzoxNzozNVrOHEASdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgyODE3MQ==", "bodyText": "Hmm I think I'd prefer a long delay on the response here using onBlackholedDuringSend too. We're using DISCONNECTED to indicate that the connection actively rejects the message, e.g. sends a RST, but if it rejects the response then the original requester is none the wiser and may wait for a long time before discovering the disconnect.\nIn practice it's almost never going to be that bad but I'd rather err on the pathological side if possible.", "url": "https://github.com/elastic/elasticsearch/pull/61310#discussion_r473828171", "createdAt": "2020-08-20T09:48:15Z", "author": {"login": "DaveCTurner"}, "path": "test/framework/src/main/java/org/elasticsearch/test/disruption/DisruptableMockTransport.java", "diffHunk": "@@ -198,8 +205,12 @@ public void run() {\n                                 break;\n \n                             case BLACK_HOLE:\n+                                logger.trace(\"blackholed during response to {}: channel is {}\", requestDescription, connectionStatus);\n+                                onBlackholedDuringSend(requestId, action, destinationTransport);\n+                                break;\n                             case DISCONNECTED:\n-                                logger.trace(\"dropping response to {}: channel is {}\", requestDescription, connectionStatus);\n+                                logger.trace(\"disconnected during response to {}: channel is {}\", requestDescription, connectionStatus);\n+                                onDisconnectedDuringSend(requestId, action, destinationTransport);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f4526b0a72371b02451cc46f114dc3de096016b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk2MTA3Ng==", "bodyText": "++ adjusted accordingly in b181920 for both spots", "url": "https://github.com/elastic/elasticsearch/pull/61310#discussion_r473961076", "createdAt": "2020-08-20T13:17:35Z", "author": {"login": "original-brownbear"}, "path": "test/framework/src/main/java/org/elasticsearch/test/disruption/DisruptableMockTransport.java", "diffHunk": "@@ -198,8 +205,12 @@ public void run() {\n                                 break;\n \n                             case BLACK_HOLE:\n+                                logger.trace(\"blackholed during response to {}: channel is {}\", requestDescription, connectionStatus);\n+                                onBlackholedDuringSend(requestId, action, destinationTransport);\n+                                break;\n                             case DISCONNECTED:\n-                                logger.trace(\"dropping response to {}: channel is {}\", requestDescription, connectionStatus);\n+                                logger.trace(\"disconnected during response to {}: channel is {}\", requestDescription, connectionStatus);\n+                                onDisconnectedDuringSend(requestId, action, destinationTransport);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgyODE3MQ=="}, "originalCommit": {"oid": "6f4526b0a72371b02451cc46f114dc3de096016b"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTYzMjc2OnYy", "diffSide": "RIGHT", "path": "test/framework/src/main/java/org/elasticsearch/test/disruption/DisruptableMockTransport.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTo0OToyNlrOHD4Pxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTo0OToyNlrOHD4Pxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgyOTMxOA==", "bodyText": "Similarly, we should delay notifying the sender here too.", "url": "https://github.com/elastic/elasticsearch/pull/61310#discussion_r473829318", "createdAt": "2020-08-20T09:49:26Z", "author": {"login": "DaveCTurner"}, "path": "test/framework/src/main/java/org/elasticsearch/test/disruption/DisruptableMockTransport.java", "diffHunk": "@@ -228,8 +239,14 @@ public void run() {\n                                 break;\n \n                             case BLACK_HOLE:\n+                                logger.trace(\"blackholed during exception response to {}: channel is {}\",\n+                                        requestDescription, connectionStatus);\n+                                onBlackholedDuringSend(requestId, action, destinationTransport);\n+                                break;\n                             case DISCONNECTED:\n-                                logger.trace(\"dropping exception response to {}: channel is {}\", requestDescription, connectionStatus);\n+                                logger.trace(\"disconnected during exception response to {}: channel is {}\",\n+                                        requestDescription, connectionStatus);\n+                                onDisconnectedDuringSend(requestId, action, destinationTransport);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f4526b0a72371b02451cc46f114dc3de096016b"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 850, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}