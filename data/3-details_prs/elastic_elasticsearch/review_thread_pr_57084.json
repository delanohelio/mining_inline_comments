{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMjc3MzE4", "number": 57084, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDowMTozM1rOEABRtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDowMTozM1rOEABRtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDU2Mzc0OnYy", "diffSide": "RIGHT", "path": "modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDowMTozM1rOGbCRPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDozNToxN1rOGbDZWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAwMTkxOA==", "bodyText": "Can we assert context == null here?", "url": "https://github.com/elastic/elasticsearch/pull/57084#discussion_r431001918", "createdAt": "2020-05-27T10:01:33Z", "author": {"login": "DaveCTurner"}, "path": "modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java", "diffHunk": "@@ -190,13 +190,23 @@ private void failQueuedWrites() {\n \n     private static final class WriteOperation {\n \n-        private final ByteBuf buf;\n+        private ByteBuf buf;\n+\n+        private OutboundHandler.SendContext context;\n \n         private final ChannelPromise promise;\n \n-        WriteOperation(ByteBuf buf, ChannelPromise promise) {\n-            this.buf = buf;\n+        WriteOperation(OutboundHandler.SendContext context, ChannelPromise promise) {\n+            this.context = context;\n             this.promise = promise;\n         }\n+\n+        ByteBuf buffer() throws IOException {\n+            if (buf == null) {\n+                buf = Netty4Utils.toByteBuf(context.get());\n+                context = null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e710ff2b3d2b3c81fe69fb70895cd869278b9aba"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyMDM3OQ==", "bodyText": "Sure thing, added it. But yes, all of this is happening on a single IO thread thread so this is all safe I think :)", "url": "https://github.com/elastic/elasticsearch/pull/57084#discussion_r431020379", "createdAt": "2020-05-27T10:35:17Z", "author": {"login": "original-brownbear"}, "path": "modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java", "diffHunk": "@@ -190,13 +190,23 @@ private void failQueuedWrites() {\n \n     private static final class WriteOperation {\n \n-        private final ByteBuf buf;\n+        private ByteBuf buf;\n+\n+        private OutboundHandler.SendContext context;\n \n         private final ChannelPromise promise;\n \n-        WriteOperation(ByteBuf buf, ChannelPromise promise) {\n-            this.buf = buf;\n+        WriteOperation(OutboundHandler.SendContext context, ChannelPromise promise) {\n+            this.context = context;\n             this.promise = promise;\n         }\n+\n+        ByteBuf buffer() throws IOException {\n+            if (buf == null) {\n+                buf = Netty4Utils.toByteBuf(context.get());\n+                context = null;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAwMTkxOA=="}, "originalCommit": {"oid": "e710ff2b3d2b3c81fe69fb70895cd869278b9aba"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3926, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}