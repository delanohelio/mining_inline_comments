{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4OTk2MDI5", "number": 59555, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzo1MzowMlrOEVNQQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzo1MzowMlrOEVNQQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjcyNzA0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/time/FormatNames.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzo1MzowMlrOG71VHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDozOToyM1rOG72HqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MjkyNQ==", "bodyText": "@pgomulka The renaming of this to week_year seems inconsistent with the use of weekyear in other formats\nWEEK_YEAR_WEEK(\"weekyearWeek\", \"weekyear_week\"),\nWEEKYEAR_WEEK_DAY(\"weekyearWeekDay\", \"weekyear_week_day\"),\nand\nSTRICT_WEEKYEAR(\"strictWeekyear\", \"strict_weekyear\"),\nSTRICT_WEEKYEAR_WEEK(\"strictWeekyearWeek\", \"strict_weekyear_week\"),\nSTRICT_WEEKYEAR_WEEK_DAY(\"strictWeekyearWeekDay\", \"strict_weekyear_week_day\"),", "url": "https://github.com/elastic/elasticsearch/pull/59555#discussion_r465392925", "createdAt": "2020-08-04T23:53:02Z", "author": {"login": "russcam"}, "path": "server/src/main/java/org/elasticsearch/common/time/FormatNames.java", "diffHunk": "@@ -0,0 +1,167 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.common.time;\n+\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.util.LazyInitializable;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+public enum FormatNames {\n+    ISO8601(null, \"iso8601\"),\n+    BASIC_DATE(\"basicDate\", \"basic_date\"),\n+    BASIC_DATE_TIME(\"basicDateTime\", \"basic_date_time\"),\n+    BASIC_DATE_TIME_NO_MILLIS(\"basicDateTimeNoMillis\", \"basic_date_time_no_millis\"),\n+    BASIC_ORDINAL_DATE(\"basicOrdinalDate\", \"basic_ordinal_date\"),\n+    BASIC_ORDINAL_DATE_TIME(\"basicOrdinalDateTime\", \"basic_ordinal_date_time\"),\n+    BASIC_ORDINAL_DATE_TIME_NO_MILLIS(\"basicOrdinalDateTimeNoMillis\", \"basic_ordinal_date_time_no_millis\"),\n+    BASIC_TIME(\"basicTime\", \"basic_time\"),\n+    BASIC_TIME_NO_MILLIS(\"basicTimeNoMillis\", \"basic_time_no_millis\"),\n+    BASIC_T_TIME(\"basicTTime\", \"basic_t_time\"),\n+    BASIC_T_TIME_NO_MILLIS(\"basicTTimeNoMillis\", \"basic_t_time_no_millis\"),\n+    BASIC_WEEK_DATE(\"basicWeekDate\", \"basic_week_date\"),\n+    BASIC_WEEK_DATE_TIME(\"basicWeekDateTime\", \"basic_week_date_time\"),\n+    BASIC_WEEK_DATE_TIME_NO_MILLIS(\"basicWeekDateTimeNoMillis\", \"basic_week_date_time_no_millis\"),\n+    DATE(null, \"date\"),\n+    DATE_HOUR(\"dateHour\", \"date_hour\"),\n+    DATE_HOUR_MINUTE(\"dateHourMinute\", \"date_hour_minute\"),\n+    DATE_HOUR_MINUTE_SECOND(\"dateHourMinuteSecond\", \"date_hour_minute_second\"),\n+    DATE_HOUR_MINUTE_SECOND_FRACTION(\"dateHourMinuteSecondFraction\", \"date_hour_minute_second_fraction\"),\n+    DATE_HOUR_MINUTE_SECOND_MILLIS(\"dateHourMinuteSecondMillis\", \"date_hour_minute_second_millis\"),\n+    DATE_OPTIONAL_TIME(\"dateOptionalTime\", \"date_optional_time\"),\n+    DATE_TIME(\"dateTime\", \"date_time\"),\n+    DATE_TIME_NO_MILLIS(\"dateTimeNoMillis\", \"date_time_no_millis\"),\n+    HOUR(null, \"hour\"),\n+    HOUR_MINUTE(\"hourMinute\", \"hour_minute\"),\n+    HOUR_MINUTE_SECOND(\"hourMinuteSecond\", \"hour_minute_second\"),\n+    HOUR_MINUTE_SECOND_FRACTION(\"hourMinuteSecondFraction\", \"hour_minute_second_fraction\"),\n+    HOUR_MINUTE_SECOND_MILLIS(\"hourMinuteSecondMillis\", \"hour_minute_second_millis\"),\n+    ORDINAL_DATE(\"ordinalDate\", \"ordinal_date\"),\n+    ORDINAL_DATE_TIME(\"ordinalDateTime\", \"ordinal_date_time\"),\n+    ORDINAL_DATE_TIME_NO_MILLIS(\"ordinalDateTimeNoMillis\", \"ordinal_date_time_no_millis\"),\n+    TIME(null, \"time\"),\n+    TIME_NO_MILLIS(\"timeNoMillis\", \"time_no_millis\"),\n+    T_TIME(\"tTime\", \"t_time\"),\n+    T_TIME_NO_MILLIS(\"tTimeNoMillis\", \"t_time_no_millis\"),\n+    WEEK_DATE(\"weekDate\", \"week_date\"),\n+    WEEK_DATE_TIME(\"weekDateTime\", \"week_date_time\"),\n+    WEEK_DATE_TIME_NO_MILLIS(\"weekDateTimeNoMillis\", \"week_date_time_no_millis\"),\n+    WEEK_YEAR(\"weekyear\", \"week_year\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "210132ad24806b85ab06b3ab8e53aa260719cc4d"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwMDMyOQ==", "bodyText": "To be clear, there isn't any rename in this PR. There is only bringing java formats inline with the already existing joda formats, which have this:\n} else if (\"weekyear\".equals(input) || \"week_year\".equals(input)) {\n\nI agree thought we should stick with weekyear, as that was not camelCase to begin with.", "url": "https://github.com/elastic/elasticsearch/pull/59555#discussion_r465400329", "createdAt": "2020-08-05T00:18:28Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/common/time/FormatNames.java", "diffHunk": "@@ -0,0 +1,167 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.common.time;\n+\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.util.LazyInitializable;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+public enum FormatNames {\n+    ISO8601(null, \"iso8601\"),\n+    BASIC_DATE(\"basicDate\", \"basic_date\"),\n+    BASIC_DATE_TIME(\"basicDateTime\", \"basic_date_time\"),\n+    BASIC_DATE_TIME_NO_MILLIS(\"basicDateTimeNoMillis\", \"basic_date_time_no_millis\"),\n+    BASIC_ORDINAL_DATE(\"basicOrdinalDate\", \"basic_ordinal_date\"),\n+    BASIC_ORDINAL_DATE_TIME(\"basicOrdinalDateTime\", \"basic_ordinal_date_time\"),\n+    BASIC_ORDINAL_DATE_TIME_NO_MILLIS(\"basicOrdinalDateTimeNoMillis\", \"basic_ordinal_date_time_no_millis\"),\n+    BASIC_TIME(\"basicTime\", \"basic_time\"),\n+    BASIC_TIME_NO_MILLIS(\"basicTimeNoMillis\", \"basic_time_no_millis\"),\n+    BASIC_T_TIME(\"basicTTime\", \"basic_t_time\"),\n+    BASIC_T_TIME_NO_MILLIS(\"basicTTimeNoMillis\", \"basic_t_time_no_millis\"),\n+    BASIC_WEEK_DATE(\"basicWeekDate\", \"basic_week_date\"),\n+    BASIC_WEEK_DATE_TIME(\"basicWeekDateTime\", \"basic_week_date_time\"),\n+    BASIC_WEEK_DATE_TIME_NO_MILLIS(\"basicWeekDateTimeNoMillis\", \"basic_week_date_time_no_millis\"),\n+    DATE(null, \"date\"),\n+    DATE_HOUR(\"dateHour\", \"date_hour\"),\n+    DATE_HOUR_MINUTE(\"dateHourMinute\", \"date_hour_minute\"),\n+    DATE_HOUR_MINUTE_SECOND(\"dateHourMinuteSecond\", \"date_hour_minute_second\"),\n+    DATE_HOUR_MINUTE_SECOND_FRACTION(\"dateHourMinuteSecondFraction\", \"date_hour_minute_second_fraction\"),\n+    DATE_HOUR_MINUTE_SECOND_MILLIS(\"dateHourMinuteSecondMillis\", \"date_hour_minute_second_millis\"),\n+    DATE_OPTIONAL_TIME(\"dateOptionalTime\", \"date_optional_time\"),\n+    DATE_TIME(\"dateTime\", \"date_time\"),\n+    DATE_TIME_NO_MILLIS(\"dateTimeNoMillis\", \"date_time_no_millis\"),\n+    HOUR(null, \"hour\"),\n+    HOUR_MINUTE(\"hourMinute\", \"hour_minute\"),\n+    HOUR_MINUTE_SECOND(\"hourMinuteSecond\", \"hour_minute_second\"),\n+    HOUR_MINUTE_SECOND_FRACTION(\"hourMinuteSecondFraction\", \"hour_minute_second_fraction\"),\n+    HOUR_MINUTE_SECOND_MILLIS(\"hourMinuteSecondMillis\", \"hour_minute_second_millis\"),\n+    ORDINAL_DATE(\"ordinalDate\", \"ordinal_date\"),\n+    ORDINAL_DATE_TIME(\"ordinalDateTime\", \"ordinal_date_time\"),\n+    ORDINAL_DATE_TIME_NO_MILLIS(\"ordinalDateTimeNoMillis\", \"ordinal_date_time_no_millis\"),\n+    TIME(null, \"time\"),\n+    TIME_NO_MILLIS(\"timeNoMillis\", \"time_no_millis\"),\n+    T_TIME(\"tTime\", \"t_time\"),\n+    T_TIME_NO_MILLIS(\"tTimeNoMillis\", \"t_time_no_millis\"),\n+    WEEK_DATE(\"weekDate\", \"week_date\"),\n+    WEEK_DATE_TIME(\"weekDateTime\", \"week_date_time\"),\n+    WEEK_DATE_TIME_NO_MILLIS(\"weekDateTimeNoMillis\", \"week_date_time_no_millis\"),\n+    WEEK_YEAR(\"weekyear\", \"week_year\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MjkyNQ=="}, "originalCommit": {"oid": "210132ad24806b85ab06b3ab8e53aa260719cc4d"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNTg2NA==", "bodyText": "Apologies, I don't think I was clear in my comment; I was referring to the enum ctor snakeCaseName parameter argument rather than the enum constant name (although the constant name WEEK_YEAR does look inconsistent). I came here because we have a failing test in the .NET client: elastic/elasticsearch-net#4920. It's related to #60044; thinking about it now, I should have opened it there I think \ud83d\ude04", "url": "https://github.com/elastic/elasticsearch/pull/59555#discussion_r465405864", "createdAt": "2020-08-05T00:39:23Z", "author": {"login": "russcam"}, "path": "server/src/main/java/org/elasticsearch/common/time/FormatNames.java", "diffHunk": "@@ -0,0 +1,167 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.common.time;\n+\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.util.LazyInitializable;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+public enum FormatNames {\n+    ISO8601(null, \"iso8601\"),\n+    BASIC_DATE(\"basicDate\", \"basic_date\"),\n+    BASIC_DATE_TIME(\"basicDateTime\", \"basic_date_time\"),\n+    BASIC_DATE_TIME_NO_MILLIS(\"basicDateTimeNoMillis\", \"basic_date_time_no_millis\"),\n+    BASIC_ORDINAL_DATE(\"basicOrdinalDate\", \"basic_ordinal_date\"),\n+    BASIC_ORDINAL_DATE_TIME(\"basicOrdinalDateTime\", \"basic_ordinal_date_time\"),\n+    BASIC_ORDINAL_DATE_TIME_NO_MILLIS(\"basicOrdinalDateTimeNoMillis\", \"basic_ordinal_date_time_no_millis\"),\n+    BASIC_TIME(\"basicTime\", \"basic_time\"),\n+    BASIC_TIME_NO_MILLIS(\"basicTimeNoMillis\", \"basic_time_no_millis\"),\n+    BASIC_T_TIME(\"basicTTime\", \"basic_t_time\"),\n+    BASIC_T_TIME_NO_MILLIS(\"basicTTimeNoMillis\", \"basic_t_time_no_millis\"),\n+    BASIC_WEEK_DATE(\"basicWeekDate\", \"basic_week_date\"),\n+    BASIC_WEEK_DATE_TIME(\"basicWeekDateTime\", \"basic_week_date_time\"),\n+    BASIC_WEEK_DATE_TIME_NO_MILLIS(\"basicWeekDateTimeNoMillis\", \"basic_week_date_time_no_millis\"),\n+    DATE(null, \"date\"),\n+    DATE_HOUR(\"dateHour\", \"date_hour\"),\n+    DATE_HOUR_MINUTE(\"dateHourMinute\", \"date_hour_minute\"),\n+    DATE_HOUR_MINUTE_SECOND(\"dateHourMinuteSecond\", \"date_hour_minute_second\"),\n+    DATE_HOUR_MINUTE_SECOND_FRACTION(\"dateHourMinuteSecondFraction\", \"date_hour_minute_second_fraction\"),\n+    DATE_HOUR_MINUTE_SECOND_MILLIS(\"dateHourMinuteSecondMillis\", \"date_hour_minute_second_millis\"),\n+    DATE_OPTIONAL_TIME(\"dateOptionalTime\", \"date_optional_time\"),\n+    DATE_TIME(\"dateTime\", \"date_time\"),\n+    DATE_TIME_NO_MILLIS(\"dateTimeNoMillis\", \"date_time_no_millis\"),\n+    HOUR(null, \"hour\"),\n+    HOUR_MINUTE(\"hourMinute\", \"hour_minute\"),\n+    HOUR_MINUTE_SECOND(\"hourMinuteSecond\", \"hour_minute_second\"),\n+    HOUR_MINUTE_SECOND_FRACTION(\"hourMinuteSecondFraction\", \"hour_minute_second_fraction\"),\n+    HOUR_MINUTE_SECOND_MILLIS(\"hourMinuteSecondMillis\", \"hour_minute_second_millis\"),\n+    ORDINAL_DATE(\"ordinalDate\", \"ordinal_date\"),\n+    ORDINAL_DATE_TIME(\"ordinalDateTime\", \"ordinal_date_time\"),\n+    ORDINAL_DATE_TIME_NO_MILLIS(\"ordinalDateTimeNoMillis\", \"ordinal_date_time_no_millis\"),\n+    TIME(null, \"time\"),\n+    TIME_NO_MILLIS(\"timeNoMillis\", \"time_no_millis\"),\n+    T_TIME(\"tTime\", \"t_time\"),\n+    T_TIME_NO_MILLIS(\"tTimeNoMillis\", \"t_time_no_millis\"),\n+    WEEK_DATE(\"weekDate\", \"week_date\"),\n+    WEEK_DATE_TIME(\"weekDateTime\", \"week_date_time\"),\n+    WEEK_DATE_TIME_NO_MILLIS(\"weekDateTimeNoMillis\", \"week_date_time_no_millis\"),\n+    WEEK_YEAR(\"weekyear\", \"week_year\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MjkyNQ=="}, "originalCommit": {"oid": "210132ad24806b85ab06b3ab8e53aa260719cc4d"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2301, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}