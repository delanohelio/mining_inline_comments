{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMjUxNzcy", "number": 51803, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMToxMDoxNVrODcmJjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMToxMDoxNVrODcmJjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzExNzU3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/discovery/AbstractDisruptionTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMToxMDoxNVrOFkt2lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTozMzoyNlrOFkubIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA0NDMxMA==", "bodyText": "I think we should do the same for the follower check, which is also racing publication and can depend on writing out state. For full symmetry, perhaps also for leader check.", "url": "https://github.com/elastic/elasticsearch/pull/51803#discussion_r374044310", "createdAt": "2020-02-03T11:10:15Z", "author": {"login": "ywelsch"}, "path": "server/src/test/java/org/elasticsearch/discovery/AbstractDisruptionTestCase.java", "diffHunk": "@@ -128,7 +128,7 @@ protected void beforeIndexDeletion() throws Exception {\n             .put(FollowersChecker.FOLLOWER_CHECK_TIMEOUT_SETTING.getKey(), \"1s\") // for hitting simulated network failures quickly\n             .put(FollowersChecker.FOLLOWER_CHECK_RETRY_COUNT_SETTING.getKey(), 1) // for hitting simulated network failures quickly\n             .put(JoinHelper.JOIN_TIMEOUT_SETTING.getKey(), \"10s\") // still long to induce failures but to long so test won't time out\n-            .put(Coordinator.PUBLISH_TIMEOUT_SETTING.getKey(), \"1s\") // <-- for hitting simulated network failures quickly\n+            .put(Coordinator.PUBLISH_TIMEOUT_SETTING.getKey(), \"5s\") // <-- for hitting simulated network failures quickly", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32c30c989ff4b4141a40a81da3594a1448a4e9cb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1MzY2Ng==", "bodyText": "Fixed here 3163f62", "url": "https://github.com/elastic/elasticsearch/pull/51803#discussion_r374053666", "createdAt": "2020-02-03T11:33:26Z", "author": {"login": "henningandersen"}, "path": "server/src/test/java/org/elasticsearch/discovery/AbstractDisruptionTestCase.java", "diffHunk": "@@ -128,7 +128,7 @@ protected void beforeIndexDeletion() throws Exception {\n             .put(FollowersChecker.FOLLOWER_CHECK_TIMEOUT_SETTING.getKey(), \"1s\") // for hitting simulated network failures quickly\n             .put(FollowersChecker.FOLLOWER_CHECK_RETRY_COUNT_SETTING.getKey(), 1) // for hitting simulated network failures quickly\n             .put(JoinHelper.JOIN_TIMEOUT_SETTING.getKey(), \"10s\") // still long to induce failures but to long so test won't time out\n-            .put(Coordinator.PUBLISH_TIMEOUT_SETTING.getKey(), \"1s\") // <-- for hitting simulated network failures quickly\n+            .put(Coordinator.PUBLISH_TIMEOUT_SETTING.getKey(), \"5s\") // <-- for hitting simulated network failures quickly", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA0NDMxMA=="}, "originalCommit": {"oid": "32c30c989ff4b4141a40a81da3594a1448a4e9cb"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 38, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}