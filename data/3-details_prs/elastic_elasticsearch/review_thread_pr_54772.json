{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MTAxNDc5", "number": 54772, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDoyMDoyMFrODu4a_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDoyMjozNFrODu4bvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDg1NTAwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/TransportCreateSnapshotAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDoyMDoyMFrOGBAaDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDoyMDoyMFrOGBAaDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcwODQyOQ==", "bodyText": "First step of creating a snapshot nowadays is putting the init state snapshot in the CS => forking to the CS thread right away anyway", "url": "https://github.com/elastic/elasticsearch/pull/54772#discussion_r403708429", "createdAt": "2020-04-05T14:20:20Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/TransportCreateSnapshotAction.java", "diffHunk": "@@ -53,9 +53,7 @@ public TransportCreateSnapshotAction(TransportService transportService, ClusterS\n \n     @Override\n     protected String executor() {\n-        // Using the generic instead of the snapshot threadpool here as the snapshot threadpool might be blocked on long running tasks\n-        // which would block the request from getting an error response because of the ongoing task\n-        return ThreadPool.Names.GENERIC;\n+        return ThreadPool.Names.SAME;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5027ef285dc51f8c9c0a44414b0bad73c1f359f5"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDg1NTM0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/verify/TransportVerifyRepositoryAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDoyMDo0NlrOGBAaOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDoyMDo0NlrOGBAaOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcwODQ3NA==", "bodyText": "Forks straight to the snapshot thread under the hood", "url": "https://github.com/elastic/elasticsearch/pull/54772#discussion_r403708474", "createdAt": "2020-04-05T14:20:46Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/verify/TransportVerifyRepositoryAction.java", "diffHunk": "@@ -57,7 +57,7 @@ public TransportVerifyRepositoryAction(TransportService transportService, Cluste\n \n     @Override\n     protected String executor() {\n-        return ThreadPool.Names.MANAGEMENT;\n+        return ThreadPool.Names.SAME;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5027ef285dc51f8c9c0a44414b0bad73c1f359f5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDg1NTc5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/TransportGetRepositoriesAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDoyMToyMlrOGBAadg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDoyMToyMlrOGBAadg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcwODUzNA==", "bodyText": "Only looks at the CS and that's it.", "url": "https://github.com/elastic/elasticsearch/pull/54772#discussion_r403708534", "createdAt": "2020-04-05T14:21:22Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/TransportGetRepositoriesAction.java", "diffHunk": "@@ -60,7 +60,7 @@ public TransportGetRepositoriesAction(TransportService transportService, Cluster\n \n     @Override\n     protected String executor() {\n-        return ThreadPool.Names.MANAGEMENT;\n+        return ThreadPool.Names.SAME;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5027ef285dc51f8c9c0a44414b0bad73c1f359f5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDg1Njk0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDoyMjozNFrOGBAbDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDoyMjozNFrOGBAbDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcwODY4NQ==", "bodyText": "getMultipleReposSnapshotInfo forks to the generic pool for every individual repo in the response, no need to fork setting up the task for each repo.", "url": "https://github.com/elastic/elasticsearch/pull/54772#discussion_r403708685", "createdAt": "2020-04-05T14:22:34Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java", "diffHunk": "@@ -110,16 +110,11 @@ protected void masterOperation(Task task, final GetSnapshotsRequest request, fin\n         final String[] repositories = request.repositories();\n         final SnapshotsInProgress snapshotsInProgress = state.custom(SnapshotsInProgress.TYPE);\n         transportService.sendChildRequest(transportService.getLocalNode(), GetRepositoriesAction.NAME,\n-                new GetRepositoriesRequest(repositories), task, TransportRequestOptions.EMPTY,\n-                new ActionListenerResponseHandler<>(\n-                        ActionListener.wrap(\n-                                response ->\n-                                        // switch to GENERIC thread pool because it might be long running operation\n-                                        threadPool.executor(ThreadPool.Names.GENERIC).execute(\n-                                                () -> getMultipleReposSnapshotInfo(snapshotsInProgress, response.repositories(),\n-                                                    request.snapshots(), request.ignoreUnavailable(), request.verbose(), listener)),\n-                                listener::onFailure),\n-                        GetRepositoriesResponse::new));\n+            new GetRepositoriesRequest(repositories), task, TransportRequestOptions.EMPTY,\n+            new ActionListenerResponseHandler<>(\n+                ActionListener.wrap(response -> getMultipleReposSnapshotInfo(snapshotsInProgress, response.repositories(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5027ef285dc51f8c9c0a44414b0bad73c1f359f5"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1353, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}