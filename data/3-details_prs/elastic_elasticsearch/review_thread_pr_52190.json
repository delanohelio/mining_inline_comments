{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNTYxNDY2", "number": 52190, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo1Mzo0NlrODe1XGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo1Mzo0NlrODe1XGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjU4MTM2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/pivot/AggregationsTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo1Mzo0NlrOFoMAUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo1Mzo0NlrOFoMAUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4NDA0OQ==", "bodyText": "I think \"Have you added\" or \"Did you add\" might sound a bit better here... We could also change it to something less accusative \ud83d\ude04 like \"If this is a newly added aggregation, please open...\"", "url": "https://github.com/elastic/elasticsearch/pull/52190#discussion_r377684049", "createdAt": "2020-02-11T14:53:46Z", "author": {"login": "imotov"}, "path": "x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/pivot/AggregationsTests.java", "diffHunk": "@@ -68,4 +78,30 @@ public void testResolveTargetMapping() {\n         assertEquals(\"double\", Aggregations.resolveTargetMapping(\"percentiles\", null));\n         assertEquals(\"double\", Aggregations.resolveTargetMapping(\"percentiles\", \"int\"));\n     }\n+\n+    public void testAggregationsVsTransforms() {\n+        // Note: if a new plugin is added, it must be added here\n+        SearchModule searchModule = new SearchModule(Settings.EMPTY, Arrays.asList((new AnalyticsPlugin()), new MatrixAggregationPlugin()));\n+        List<NamedWriteableRegistry.Entry> namedWriteables = searchModule.getNamedWriteables();\n+\n+        List<String> aggregationNames = namedWriteables.stream()\n+            .filter(namedWritable -> namedWritable.categoryClass.equals(AggregationBuilder.class))\n+            .map(namedWritable -> namedWritable.name)\n+            .collect(Collectors.toList());\n+\n+        for (String aggregationName : aggregationNames) {\n+            assertTrue(\n+                \"The following aggregation is unknown to transform: [\"\n+                    + aggregationName\n+                    + \"]. Did you added a new aggregation? \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb99145e4aa19e00fb44277e033857e9953f35d9"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4743, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}