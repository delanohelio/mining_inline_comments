{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNTczOTY3", "number": 58029, "title": "Account for remaining recovery in disk allocator", "bodyText": "Today the disk-based shard allocator accounts for incoming shards by\nsubtracting the estimated size of the incoming shard from the free space on the\nnode. This is an overly conservative estimate if the incoming shard has almost\nfinished its recovery since in that case it is already consuming most of the\ndisk space it needs.\nThis change adds to the shard stats a measure of how much larger each store is\nexpected to grow, computed from the ongoing recovery, and uses this to account\nfor the disk usage of incoming shards more accurately.", "createdAt": "2020-06-12T09:35:58Z", "url": "https://github.com/elastic/elasticsearch/pull/58029", "merged": true, "mergeCommit": {"oid": "83d6589b2ae4a4f8deb384cfebeda63cc2024846"}, "closed": true, "closedAt": "2020-07-01T07:04:46Z", "author": {"login": "DaveCTurner"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqffDygH2gAyNDMzNTczOTY3OjhhMTNhNGQ1YmYxZWIzNWI5YTRiZTUxY2YwZmEwYjI4NmFmNzY2Njg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwWThggH2gAyNDMzNTczOTY3OjU3ODUwMDIxMmYxZWNkYTM0MWQ1NDk2NzM4ODExNWNjZGMxNjRlYzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a13a4d5bf1eb35b9a4be51cf0fa0b286af76668", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/8a13a4d5bf1eb35b9a4be51cf0fa0b286af76668", "committedDate": "2020-06-12T09:31:53Z", "message": "Account for remaining recovery in disk allocator\n\nToday the disk-based shard allocator accounts for incoming shards by\nsubtracting the estimated size of the incoming shard from the free space on the\nnode. This is an overly conservative estimate if the incoming shard has almost\nfinished its recovery since in that case it is already consuming most of the\ndisk space it needs.\n\nThis change adds to the shard stats a measure of how much larger each store is\nexpected to grow, computed from the ongoing recovery, and uses this to account\nfor the disk usage of incoming shards more accurately."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a6a7cc083e744897a58b57f0425e6f6970f082b", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/4a6a7cc083e744897a58b57f0425e6f6970f082b", "committedDate": "2020-06-12T11:19:05Z", "message": "Fix up tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NzQwNjU0", "url": "https://github.com/elastic/elasticsearch/pull/58029#pullrequestreview-429740654", "createdAt": "2020-06-12T13:29:49Z", "commit": {"oid": "4a6a7cc083e744897a58b57f0425e6f6970f082b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMzoyOTo0OVrOGjD_wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMzo1ODozNFrOGjFBIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQxODgxNw==", "bodyText": "use writeMap?", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r439418817", "createdAt": "2020-06-12T13:29:49Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/cluster/ClusterInfo.java", "diffHunk": "@@ -109,6 +127,14 @@ public void writeTo(StreamOutput out) throws IOException {\n             c.key.writeTo(out);\n             out.writeString(c.value);\n         }\n+\n+        if (out.getVersion().onOrAfter(StoreStats.RESERVED_BYTES_VERSION)) {\n+            out.writeVInt(this.reservedSpace.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a6a7cc083e744897a58b57f0425e6f6970f082b"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQzMzU5Ng==", "bodyText": "can we avoid going under the global mutex here? Perhaps by adding a method to recoveryState (which has its own synchronization).", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r439433596", "createdAt": "2020-06-12T13:56:10Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/index/shard/IndexShard.java", "diffHunk": "@@ -1004,8 +1004,24 @@ public GetStats getStats() {\n     }\n \n     public StoreStats storeStats() {\n+        final LongSupplier remainingRecoveryBytesSupplier;\n+        synchronized (mutex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a6a7cc083e744897a58b57f0425e6f6970f082b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQzNTU1Mw==", "bodyText": "why 0 here instead of UNKNOWN_RESERVED_BYTES?", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r439435553", "createdAt": "2020-06-12T13:58:34Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/index/shard/IndexShard.java", "diffHunk": "@@ -1004,8 +1004,24 @@ public GetStats getStats() {\n     }\n \n     public StoreStats storeStats() {\n+        final LongSupplier remainingRecoveryBytesSupplier;\n+        synchronized (mutex) {\n+            if (recoveryState == null) {\n+                remainingRecoveryBytesSupplier = () -> 0L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a6a7cc083e744897a58b57f0425e6f6970f082b"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0e9452aa390e45cbcd7380480a68de9bb1529f9", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/a0e9452aa390e45cbcd7380480a68de9bb1529f9", "committedDate": "2020-06-15T09:59:08Z", "message": "Tidy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a7060c3d7d79adedf06d3058c41b7da62e0a56c", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/6a7060c3d7d79adedf06d3058c41b7da62e0a56c", "committedDate": "2020-06-15T10:03:48Z", "message": "UNKNOWN before marked as recovering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5275ed96d0e07dec02a7c5d5e0ecb990f872fd1", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/a5275ed96d0e07dec02a7c5d5e0ecb990f872fd1", "committedDate": "2020-06-15T10:20:02Z", "message": "Volatile, no mutex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50495f2a200517141b8da43af85f2113a19229f2", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/50495f2a200517141b8da43af85f2113a19229f2", "committedDate": "2020-06-15T10:38:02Z", "message": "Always use getIndex().bytesStillToRecover() ignoring stage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNDg0MTcx", "url": "https://github.com/elastic/elasticsearch/pull/58029#pullrequestreview-430484171", "createdAt": "2020-06-15T09:44:05Z", "commit": {"oid": "4a6a7cc083e744897a58b57f0425e6f6970f082b"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwOTo0NDowNVrOGjq4cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMDo0MzoxMVrOGjs02Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA1NTkyMA==", "bodyText": "I think these stats will be cluster-wide and not per node?", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r440055920", "createdAt": "2020-06-15T09:44:05Z", "author": {"login": "henningandersen"}, "path": "docs/reference/cluster/stats.asciidoc", "diffHunk": "@@ -231,6 +231,18 @@ Total size of all shards assigned to selected nodes.\n `size_in_bytes`::\n (integer)\n Total size, in bytes, of all shards assigned to selected nodes.\n+\n+`reserved`::\n+(<<byte-units,byte value>>)\n+A prediction of how much larger the shard stores on this node will eventually", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a6a7cc083e744897a58b57f0425e6f6970f082b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA2MDY1NA==", "bodyText": "Is there an added race condition risk here? In that we risk using a cluster-info combined of an old reserved space and a new shard-sizes for making decisions and thus could be either under or over-estimating the usage?\nI think it would be nicer to encapsulate the two in one object that is then assigned once to a volatile field.", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r440060654", "createdAt": "2020-06-15T09:52:06Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java", "diffHunk": "@@ -318,15 +323,21 @@ public void onFailure(Exception e) {\n             }\n         });\n \n-        final CountDownLatch indicesLatch = updateIndicesStats(new ActionListener<IndicesStatsResponse>() {\n+        final CountDownLatch indicesLatch = updateIndicesStats(new ActionListener<>() {\n             @Override\n             public void onResponse(IndicesStatsResponse indicesStatsResponse) {\n-                ShardStats[] stats = indicesStatsResponse.getShards();\n-                ImmutableOpenMap.Builder<String, Long> newShardSizes = ImmutableOpenMap.builder();\n-                ImmutableOpenMap.Builder<ShardRouting, String> newShardRoutingToDataPath = ImmutableOpenMap.builder();\n-                buildShardLevelInfo(logger, stats, newShardSizes, newShardRoutingToDataPath);\n-                shardSizes = newShardSizes.build();\n-                shardRoutingToDataPath = newShardRoutingToDataPath.build();\n+                final ShardStats[] stats = indicesStatsResponse.getShards();\n+                final ImmutableOpenMap.Builder<String, Long> shardSizeByIdentifierBuilder = ImmutableOpenMap.builder();\n+                final ImmutableOpenMap.Builder<ShardRouting, String> dataPathByShardRoutingBuilder = ImmutableOpenMap.builder();\n+                final Map<ClusterInfo.NodeAndPath, ClusterInfo.ReservedSpace.Builder> reservedSpaceBuilders = new HashMap<>();\n+                buildShardLevelInfo(logger, stats, shardSizeByIdentifierBuilder, dataPathByShardRoutingBuilder, reservedSpaceBuilders);\n+\n+                final ImmutableOpenMap.Builder<ClusterInfo.NodeAndPath, ClusterInfo.ReservedSpace> rsrvdSpace = ImmutableOpenMap.builder();\n+                reservedSpaceBuilders.forEach((nodeAndPath, builder) -> rsrvdSpace.put(nodeAndPath, builder.build()));\n+\n+                shardSizes = shardSizeByIdentifierBuilder.build();\n+                shardRoutingToDataPath = dataPathByShardRoutingBuilder.build();\n+                reservedSpace = rsrvdSpace.build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a6a7cc083e744897a58b57f0425e6f6970f082b"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA2NTgwMg==", "bodyText": "I would have thought this should merge the contents to accommodate for all shards on a specific NodePath rather than only the first encountered? Or am I missing something?", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r440065802", "createdAt": "2020-06-15T10:01:08Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java", "diffHunk": "@@ -383,16 +395,28 @@ public void addListener(Consumer<ClusterInfo> clusterInfoConsumer) {\n         listeners.add(clusterInfoConsumer);\n     }\n \n-    static void buildShardLevelInfo(Logger logger, ShardStats[] stats, ImmutableOpenMap.Builder<String, Long> newShardSizes,\n-                                    ImmutableOpenMap.Builder<ShardRouting, String> newShardRoutingToDataPath) {\n+    static void buildShardLevelInfo(Logger logger, ShardStats[] stats, ImmutableOpenMap.Builder<String, Long> shardSizes,\n+                                    ImmutableOpenMap.Builder<ShardRouting, String> newShardRoutingToDataPath,\n+                                    Map<ClusterInfo.NodeAndPath, ClusterInfo.ReservedSpace.Builder> reservedSpaceByShard) {\n         for (ShardStats s : stats) {\n-            newShardRoutingToDataPath.put(s.getShardRouting(), s.getDataPath());\n-            long size = s.getStats().getStore().sizeInBytes();\n-            String sid = ClusterInfo.shardIdentifierFromRouting(s.getShardRouting());\n+            final ShardRouting shardRouting = s.getShardRouting();\n+            newShardRoutingToDataPath.put(shardRouting, s.getDataPath());\n+\n+            final StoreStats storeStats = s.getStats().getStore();\n+            final long size = storeStats.sizeInBytes();\n+            final long reserved = storeStats.getReservedSize().getBytes();\n+\n+            final String shardIdentifier = ClusterInfo.shardIdentifierFromRouting(shardRouting);\n             if (logger.isTraceEnabled()) {\n-                logger.trace(\"shard: {} size: {}\", sid, size);\n+                logger.trace(\"shard: {} size: {} reserved: {}\", shardIdentifier, size, reserved);\n+            }\n+            shardSizes.put(shardIdentifier, size);\n+\n+            if (reserved != StoreStats.UNKNOWN_RESERVED_BYTES) {\n+                reservedSpaceByShard.computeIfAbsent(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a6a7cc083e744897a58b57f0425e6f6970f082b"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA2OTUyMQ==", "bodyText": "AFAICS this compensation affects two functionalities:\n\nTriggering a reroute when going under low threshold\nAuto-releasing indices when disk usage goes below high threshold.\n\nI think 1) is fine, but I am a bit concerned about 2), since the primary reason we only release when under high threshold is to have some hysteresis to not trigger flood-stage on/off rapidly. I think I would prefer to do the auto-release based on the non-compensated number (just like we move to flood-stage based on that), but am curious on your thoughts on this.", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r440069521", "createdAt": "2020-06-15T10:07:46Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java", "diffHunk": "@@ -140,6 +140,10 @@ public void onNewInfo(ClusterInfo info) {\n             final DiskUsage usage = entry.value;\n             final RoutingNode routingNode = routingNodes.node(node);\n \n+            final long reservedSpace = info.getReservedSpace(usage.getNodeId(), usage.getPath()).getTotal();\n+            final DiskUsage usageWithReservedSpace = new DiskUsage(usage.getNodeId(), usage.getNodeName(), usage.getPath(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a6a7cc083e744897a58b57f0425e6f6970f082b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA3ODU3Ng==", "bodyText": "Not sure I understand why this needs to be in a finally?", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r440078576", "createdAt": "2020-06-15T10:25:05Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/index/shard/StoreRecovery.java", "diffHunk": "@@ -403,13 +404,15 @@ private void internalRecoverFromStore(IndexShard indexShard) throws IndexShardRe\n                     writeEmptyRetentionLeasesFile(indexShard);\n                 }\n                 // since we recover from local, just fill the files and size\n+                final RecoveryState.Index index = recoveryState.getIndex();\n                 try {\n-                    final RecoveryState.Index index = recoveryState.getIndex();\n                     if (si != null) {\n                         addRecoveredFileDetails(si, store, index);\n                     }\n                 } catch (IOException e) {\n                     logger.debug(\"failed to list file details\", e);\n+                } finally {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a7060c3d7d79adedf06d3058c41b7da62e0a56c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA4Nzc2OQ==", "bodyText": "We count reserved space as only the space for the original files in phase 1 of recovery. This makes us slightly more optimistic than desired, in that any changes coming in after getting the original file list are not accounted for as reserved. For instance in cases like described in #58011.\nI wonder if it (for recoveries and relocations) was more precise to adjust by adding (primarySize - alreadyRecovered) - or just (primarySize - replicaSize), where we track each replica individually? This unfortunately does not give us snapshot, which the presented mechanism does, i.e. , we probably need both.", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r440087769", "createdAt": "2020-06-15T10:43:11Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java", "diffHunk": "@@ -98,9 +99,16 @@ public DiskThresholdDecider(Settings settings, ClusterSettings clusterSettings)\n      */\n     public static long sizeOfRelocatingShards(RoutingNode node, boolean subtractShardsMovingAway, String dataPath, ClusterInfo clusterInfo,\n                                               Metadata metadata, RoutingTable routingTable) {\n-        long totalSize = 0L;\n-\n-        for (ShardRouting routing : node.shardsWithState(ShardRoutingState.INITIALIZING)) {\n+        // Account for reserved space wherever it is available\n+        final ClusterInfo.ReservedSpace reservedSpace = clusterInfo.getReservedSpace(node.nodeId(), dataPath);\n+        long totalSize = reservedSpace.getTotal();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5275ed96d0e07dec02a7c5d5e0ecb990f872fd1"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b89a56770caa137261dd7f5e03336b7b22af2012", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/b89a56770caa137261dd7f5e03336b7b22af2012", "committedDate": "2020-06-15T10:50:08Z", "message": "Don't mention nodes in cluster stats docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9639659aa690679fa4f181885724a7dfd35b32e6", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/9639659aa690679fa4f181885724a7dfd35b32e6", "committedDate": "2020-06-15T10:58:37Z", "message": "Atomically summarise indices stats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76d65541f3d767396a43a90e18570e6470dd697f", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/76d65541f3d767396a43a90e18570e6470dd697f", "committedDate": "2020-06-18T08:34:12Z", "message": "Merge branch 'master' into 2020-06-12-reserve-bytes-in-store-stats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "669e4e5af7b41c3a6f240cd2e7d0c4525bc86e8c", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/669e4e5af7b41c3a6f240cd2e7d0c4525bc86e8c", "committedDate": "2020-06-18T08:37:13Z", "message": "Add skip to REST tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77cdf89b2a4d959e73c62dcf6aced3782938ec57", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/77cdf89b2a4d959e73c62dcf6aced3782938ec57", "committedDate": "2020-06-18T09:32:52Z", "message": "Strengthen auto-release test to show reserved space affects release"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cad0a5f7b952499ab9af2318cef2835861a561c", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/5cad0a5f7b952499ab9af2318cef2835861a561c", "committedDate": "2020-06-24T08:00:48Z", "message": "Merge branch 'master' into 2020-06-12-reserve-bytes-in-store-stats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf9faca0d0d6a8859c821f165847267f66153d6a", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/bf9faca0d0d6a8859c821f165847267f66153d6a", "committedDate": "2020-06-24T08:02:19Z", "message": "Clarify"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf23d43f59fb1330fd0ab791e3f772654b6825f1", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf23d43f59fb1330fd0ab791e3f772654b6825f1", "committedDate": "2020-06-24T08:03:05Z", "message": "No finally needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8afaf36f6d723a485c39dd53c26a3d3dbdcf7cf", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/d8afaf36f6d723a485c39dd53c26a3d3dbdcf7cf", "committedDate": "2020-06-24T08:28:03Z", "message": "Ignore reserved space when releasing index block"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e75e1ff2f96e1b8096276bd2369b436eab8d36b", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/4e75e1ff2f96e1b8096276bd2369b436eab8d36b", "committedDate": "2020-06-24T08:55:12Z", "message": "Negate skip"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NTQ4NzE1", "url": "https://github.com/elastic/elasticsearch/pull/58029#pullrequestreview-436548715", "createdAt": "2020-06-24T11:12:47Z", "commit": {"oid": "4e75e1ff2f96e1b8096276bd2369b436eab8d36b"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMToxMjo0OFrOGoNpjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMToyMDoxM1rOGoN3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgxOTg1Mw==", "bodyText": "add comment here // single volatile read", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r444819853", "createdAt": "2020-06-24T11:12:48Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java", "diffHunk": "@@ -200,7 +201,9 @@ public void clusterChanged(ClusterChangedEvent event) {\n \n     @Override\n     public ClusterInfo getClusterInfo() {\n-        return new ClusterInfo(leastAvailableSpaceUsages, mostAvailableSpaceUsages, shardSizes, shardRoutingToDataPath);\n+        final IndicesStatsSummary indicesStatsSummary = this.indicesStatsSummary;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e75e1ff2f96e1b8096276bd2369b436eab8d36b"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgyMjIyNA==", "bodyText": "Can you move the creation of this object to the place where it's first used? Or should we  alternatively call the other usage instead usageWithoutReservedSpace to make it clearer  when we are using one vs the other", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r444822224", "createdAt": "2020-06-24T11:17:49Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java", "diffHunk": "@@ -140,6 +140,10 @@ public void onNewInfo(ClusterInfo info) {\n             final DiskUsage usage = entry.value;\n             final RoutingNode routingNode = routingNodes.node(node);\n \n+            final long reservedSpace = info.getReservedSpace(usage.getNodeId(), usage.getPath()).getTotal();\n+            final DiskUsage usageWithReservedSpace = new DiskUsage(usage.getNodeId(), usage.getNodeName(), usage.getPath(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e75e1ff2f96e1b8096276bd2369b436eab8d36b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgyMzM0Nw==", "bodyText": "Control flow is  a bit crazy in this method now. Any thoughts on simplifying it?", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r444823347", "createdAt": "2020-06-24T11:20:13Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java", "diffHunk": "@@ -158,18 +162,26 @@ public void onNewInfo(ClusterInfo info) {\n                 logger.warn(\"flood stage disk watermark [{}] exceeded on {}, all indices on this node will be marked read-only\",\n                     diskThresholdSettings.describeFloodStageThreshold(), usage);\n \n-            } else if (usage.getFreeBytes() < diskThresholdSettings.getFreeBytesThresholdHigh().getBytes() ||\n-                usage.getFreeDiskAsPercentage() < diskThresholdSettings.getFreeDiskThresholdHigh()) {\n+                continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e75e1ff2f96e1b8096276bd2369b436eab8d36b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78d353e035146eb1f25c58ace0cff6548a3c83ca", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/78d353e035146eb1f25c58ace0cff6548a3c83ca", "committedDate": "2020-06-24T11:29:12Z", "message": "single volatile read"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56ecdb71c243a9fdac03826d8c5b210ccb18d23b", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/56ecdb71c243a9fdac03826d8c5b210ccb18d23b", "committedDate": "2020-06-24T11:33:06Z", "message": "Construct usageWithReservedSpace later"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2OTk0Njk2", "url": "https://github.com/elastic/elasticsearch/pull/58029#pullrequestreview-436994696", "createdAt": "2020-06-24T20:47:28Z", "commit": {"oid": "56ecdb71c243a9fdac03826d8c5b210ccb18d23b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDo0NzoyOFrOGoijVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMTowNDozOVrOGojFoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE2MjMyNg==", "bodyText": "I am slightly torn on the -1b value here. It only takes one shard with unknown reserved size to hide the summarized value. And mostly this is just bad timing anyway, the information we have is not a consistent snapshot across the cluster and interpreting correlations between different parts of the stats in a very precise manner is unlikely to be fruitful.\nAlso, it looks as if TransportClusterStatsAction.nodeOperation only summarizes started shards, so I wonder if the reserved bytes will ever be anything but 0 here? Am I missing something (would not be the first time \ud83d\ude42 ).\nI think I am in favor of either removing this from cluster stats (if we think it is always 0) or changing StoreStats.add to treat unknown as 0 (or ideally, do everything we can to figure out the expected size like look at primary size, but that is a bigger ask and something for another day).", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r445162326", "createdAt": "2020-06-24T20:47:28Z", "author": {"login": "henningandersen"}, "path": "docs/reference/cluster/stats.asciidoc", "diffHunk": "@@ -231,6 +231,18 @@ Total size of all shards assigned to selected nodes.\n `size_in_bytes`::\n (integer)\n Total size, in bytes, of all shards assigned to selected nodes.\n+\n+`reserved`::\n+(<<byte-units,byte value>>)\n+A prediction of how much larger the shard stores will eventually grow due to\n+ongoing peer recoveries, restoring snapshots, and similar activities. A value\n+of `-1b` indicates that this is not available.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56ecdb71c243a9fdac03826d8c5b210ccb18d23b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE3MTEwNA==", "bodyText": "See comment below on -1b, I think I would be in favor of ignoring unknowns when summarizing reserved stats.", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r445171104", "createdAt": "2020-06-24T21:04:39Z", "author": {"login": "henningandersen"}, "path": "docs/reference/cluster/nodes-stats.asciidoc", "diffHunk": "@@ -245,6 +245,18 @@ Total size of all shards assigned to the node.\n `size_in_bytes`::\n (integer)\n Total size, in bytes, of all shards assigned to the node.\n+\n+`reserved`::\n+(<<byte-units,byte value>>)\n+A prediction of how much larger the shard stores on this node will eventually\n+grow due to ongoing peer recoveries, restoring snapshots, and similar\n+activities. A value of `-1b` indicates that this is not available.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56ecdb71c243a9fdac03826d8c5b210ccb18d23b"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62a19449a57413c5bae4b1c6af0cc121081041ee", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/62a19449a57413c5bae4b1c6af0cc121081041ee", "committedDate": "2020-06-29T12:05:07Z", "message": "Merge branch 'master' into 2020-06-12-reserve-bytes-in-store-stats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cee87b760a2338472b2272c1263cfdd2676888d", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/6cee87b760a2338472b2272c1263cfdd2676888d", "committedDate": "2020-06-29T12:11:35Z", "message": "Ignore reserved bytes in aggregations if unknown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29fb53054a50239af44a6b20d052e60a12660277", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/29fb53054a50239af44a6b20d052e60a12660277", "committedDate": "2020-06-29T13:39:37Z", "message": "Fix up test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDM3OTIx", "url": "https://github.com/elastic/elasticsearch/pull/58029#pullrequestreview-440037921", "createdAt": "2020-06-30T13:53:36Z", "commit": {"oid": "29fb53054a50239af44a6b20d052e60a12660277"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzo1MzozNlrOGq9eKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzo1MzozNlrOGq9eKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwMDUyMA==", "bodyText": "I think we can then leave out the -1 notice here? May still need to be on the node-stats due to the shard level info, but AFAICS, it can never be -1 at cluster stats level?", "url": "https://github.com/elastic/elasticsearch/pull/58029#discussion_r447700520", "createdAt": "2020-06-30T13:53:36Z", "author": {"login": "henningandersen"}, "path": "docs/reference/cluster/stats.asciidoc", "diffHunk": "@@ -231,6 +231,18 @@ Total size of all shards assigned to selected nodes.\n `size_in_bytes`::\n (integer)\n Total size, in bytes, of all shards assigned to selected nodes.\n+\n+`reserved`::\n+(<<byte-units,byte value>>)\n+A prediction of how much larger the shard stores will eventually grow due to\n+ongoing peer recoveries, restoring snapshots, and similar activities. A value\n+of `-1b` indicates that this is not available.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE2MjMyNg=="}, "originalCommit": {"oid": "56ecdb71c243a9fdac03826d8c5b210ccb18d23b"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02c983d5c753d45792feabb9d9119d11ff75aa7c", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/02c983d5c753d45792feabb9d9119d11ff75aa7c", "committedDate": "2020-06-30T14:13:16Z", "message": "Merge branch 'master' into 2020-06-12-reserve-bytes-in-store-stats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "578500212f1ecda341d54967388115ccdc164ec7", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/578500212f1ecda341d54967388115ccdc164ec7", "committedDate": "2020-06-30T14:13:41Z", "message": "Omniscience"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 624, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}