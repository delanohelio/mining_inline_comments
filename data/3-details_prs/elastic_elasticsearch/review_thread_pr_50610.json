{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MDM0MzEx", "number": 50610, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMDowMDoyMVrODV7mgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMDowMTowNlrODV7nJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzIzMjAxOnYy", "diffSide": "RIGHT", "path": "qa/os/src/test/java/org/elasticsearch/packaging/test/KeystoreManagementTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMDowMDoyMVrOFaZoWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMDowMDoyMVrOFaZoWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIyNzIyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(\"has-passwd should fail\", r.exitCode, not(is(0)));\n          \n          \n            \n                    assertFalse(\"has-passwd should fail\", r.isSuccess());", "url": "https://github.com/elastic/elasticsearch/pull/50610#discussion_r363227224", "createdAt": "2020-01-06T10:00:21Z", "author": {"login": "pugnascotia"}, "path": "qa/os/src/test/java/org/elasticsearch/packaging/test/KeystoreManagementTests.java", "diffHunk": "@@ -80,9 +83,30 @@ public void test11InstallPackageDistribution() throws Exception {\n         Shell.Result r = sh.runIgnoreExitCode(bin.keystoreTool.toString() + \" has-passwd\");\n         assertThat(\"has-passwd should fail\", r.exitCode, not(is(0)));\n         assertThat(\"has-passwd should fail\", r.stderr, containsString(\"ERROR: Keystore is not password-protected\"));\n+        Shell.Result r2 = bin.keystoreTool.run(\"list\");\n+        assertThat(r2.stdout, containsString(\"keystore.seed\"));\n+    }\n+\n+    /** Test initial Docker state */\n+    public void test12InstallDockerDistribution() throws Exception {\n+        assumeTrue(distribution().packaging == Distribution.Packaging.DOCKER);\n+\n+        installation = Docker.runContainer(distribution());\n+\n+        try {\n+            waitForPathToExist(installation.config(\"elasticsearch.keystore\"));\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        final Installation.Executables bin = installation.executables();\n+        Shell.Result r = sh.runIgnoreExitCode(bin.keystoreTool.toString() + \" has-passwd\");\n+        assertThat(\"has-passwd should fail\", r.exitCode, not(is(0)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d93631ca663b0c0febff3fe79a20a4d74e116aec"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzIzMzY0OnYy", "diffSide": "RIGHT", "path": "qa/os/src/test/java/org/elasticsearch/packaging/test/KeystoreManagementTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMDowMTowNlrOFaZpXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMDowMTowNlrOFaZpXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIyNzQ4NA==", "bodyText": "Since the previous line checked that the command failed, how about changing the message here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(\"has-passwd should fail\", r.stdout, containsString(\"ERROR: Keystore is not password-protected\"));\n          \n          \n            \n                    assertThat(\"has-passwd didn't fail with the expected error\", r.stdout, containsString(\"ERROR: Keystore is not password-protected\"));", "url": "https://github.com/elastic/elasticsearch/pull/50610#discussion_r363227484", "createdAt": "2020-01-06T10:01:06Z", "author": {"login": "pugnascotia"}, "path": "qa/os/src/test/java/org/elasticsearch/packaging/test/KeystoreManagementTests.java", "diffHunk": "@@ -80,9 +83,30 @@ public void test11InstallPackageDistribution() throws Exception {\n         Shell.Result r = sh.runIgnoreExitCode(bin.keystoreTool.toString() + \" has-passwd\");\n         assertThat(\"has-passwd should fail\", r.exitCode, not(is(0)));\n         assertThat(\"has-passwd should fail\", r.stderr, containsString(\"ERROR: Keystore is not password-protected\"));\n+        Shell.Result r2 = bin.keystoreTool.run(\"list\");\n+        assertThat(r2.stdout, containsString(\"keystore.seed\"));\n+    }\n+\n+    /** Test initial Docker state */\n+    public void test12InstallDockerDistribution() throws Exception {\n+        assumeTrue(distribution().packaging == Distribution.Packaging.DOCKER);\n+\n+        installation = Docker.runContainer(distribution());\n+\n+        try {\n+            waitForPathToExist(installation.config(\"elasticsearch.keystore\"));\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        final Installation.Executables bin = installation.executables();\n+        Shell.Result r = sh.runIgnoreExitCode(bin.keystoreTool.toString() + \" has-passwd\");\n+        assertThat(\"has-passwd should fail\", r.exitCode, not(is(0)));\n+        assertThat(\"has-passwd should fail\", r.stdout, containsString(\"ERROR: Keystore is not password-protected\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d93631ca663b0c0febff3fe79a20a4d74e116aec"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4970, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}