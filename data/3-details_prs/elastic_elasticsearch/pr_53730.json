{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNDU4NzQ4", "number": 53730, "title": "Save a little space in agg tree", "bodyText": "This drop the \"top level\" pipeline aggregators from the aggregation\nresult tree which should save a little memory and a few serialization\nbytes. Perhaps more imporantly, this provides a mechanism by which we\ncan remove all pipelines from the aggregation result tree. This will\nsave quite a bit of space when pipelines are deep in the tree.\nSadly, doing this isn't simple because of backwards compatibility. Nodes\nbefore 7.8.0 need those pipelines. We provide them by setting passing\na Supplier<PipelineTree> into the root of the aggregation tree that we\nonly call if we need to serialize to a version before 7.8.0.\nThis solution works for cross cluster search because we always reduce\nthe aggregations in each remote cluster and then forward them back to\nthe coordinating node. Its quite possible that the coordinating node\nneeds the pipeline (say it is version 7.1.0) and the gateway node in the\nremote cluster doesn't (version 7.8.0). In that case the data nodes\nwon't send the pipeline aggregations back to the gateway node.\nCritically, the gateway node will send the pipeline aggregations back\nto the coordinating node. This is all managed with that\nSupplier<PipelineTree>, but how it is managed is a bit tricky.", "createdAt": "2020-03-18T14:09:42Z", "url": "https://github.com/elastic/elasticsearch/pull/53730", "merged": true, "mergeCommit": {"oid": "e8c54c73dbee2877637c8dd076d82fb5a94e1b47"}, "closed": true, "closedAt": "2020-03-25T12:52:21Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO33llgH2gAyMzkwNDU4NzQ4Ojg1NTI5MzlkNjk3MWIyZGI5NDVlODFlMjFlODFkOGU2ZDdkYWQ4MTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRFKIPgH2gAyMzkwNDU4NzQ4OjEyZGFlNzlhNmRiZGRjZmI0Y2Y1ODdjMzk3OWU4NGJjN2YyZjk3MGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8552939d6971b2db945e81e21e81d8e6d7dad813", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/8552939d6971b2db945e81e21e81d8e6d7dad813", "committedDate": "2020-03-18T14:06:31Z", "message": "Save a little space in agg tree\n\nThis drop the \"top level\" pipeline aggregators from the aggregation\nresult tree which should save a little memory and a few serialization\nbytes. Perhaps more imporantly, this provides a mechanism by which we\ncan remove *all* pipelines from the aggregation result tree. This will\nsave quite a bit of space when pipelines are deep in the tree.\n\nSadly, doing this isn't simple because of backwards compatibility. Nodes\nbefore 7.7.0 *need* those pipelines. We provide them by setting passing\na `Supplier<PipelineTree>` into the root of the aggregation tree that we\nonly call if we need to serialize to a version before 7.7.0.\n\nThis solution works for cross cluster search because we always reduce\nthe aggregations in each remote cluster and then forward them back to\nthe coordinating node. Its quite possible that the coordinating node\nneeds the pipeline (say it is version 7.1.0) and the gateway node in the\nremote cluster doesn't (version 7.7.0). In that case the data nodes\nwon't send the pipeline aggregations back to the gateway node.\nCritically, the gateway node *will* send the pipeline aggregations back\nto the coordinating node. This is all managed with that\n`Supplier<PipelineTree>`, but *how* it is managed is a bit tricky."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c9db0249736d4395093dacbcf2623b963653672", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/4c9db0249736d4395093dacbcf2623b963653672", "committedDate": "2020-03-18T14:10:26Z", "message": "replace nocommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b36280eee679d9ebb2e0a99276cabd0ed8c0bda", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/5b36280eee679d9ebb2e0a99276cabd0ed8c0bda", "committedDate": "2020-03-18T18:44:52Z", "message": "Test CCS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd890bc5e6037be0164fd5dccf8ca30e98959dac", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/bd890bc5e6037be0164fd5dccf8ca30e98959dac", "committedDate": "2020-03-18T20:01:41Z", "message": "Merge branch 'master' into pipeline_drop_serialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa33bbe71707264a450e987826e99cd76a672dd8", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/aa33bbe71707264a450e987826e99cd76a672dd8", "committedDate": "2020-03-19T11:56:37Z", "message": "Merge branch 'master' into pipeline_drop_serialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9f4cda693655193d7b60e4bf176902ec7ebb161", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/b9f4cda693655193d7b60e4bf176902ec7ebb161", "committedDate": "2020-03-19T13:16:14Z", "message": "Merge branch 'master' into pipeline_drop_serialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1562e76cda04565e8b8caedc585d54205c4d762f", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/1562e76cda04565e8b8caedc585d54205c4d762f", "committedDate": "2020-03-23T20:06:22Z", "message": "Merge branch 'master' into pipeline_drop_serialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cff7a673c19fd9f723d87896d844b58604b1452f", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/cff7a673c19fd9f723d87896d844b58604b1452f", "committedDate": "2020-03-23T21:20:58Z", "message": "Boo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NzY2OTcy", "url": "https://github.com/elastic/elasticsearch/pull/53730#pullrequestreview-379766972", "createdAt": "2020-03-23T19:43:45Z", "commit": {"oid": "b9f4cda693655193d7b60e4bf176902ec7ebb161"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTo0Mzo0NlrOF6VZ2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNzo0MTozNVrOF675Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxMjQxMA==", "bodyText": "Hmm, should we maybe split this out into it's own test?  Just thinking that long multi-step yaml tests can be tricky to debug sometimes.\nHaven't looked at the rest of the tests in this yaml though, so it might not be easy to move the indexing (or whatever else) steps up to the setup though.", "url": "https://github.com/elastic/elasticsearch/pull/53730#discussion_r396712410", "createdAt": "2020-03-23T19:43:46Z", "author": {"login": "polyfractal"}, "path": "qa/multi-cluster-search/src/test/resources/rest-api-spec/test/multi_cluster/10_basic.yml", "diffHunk": "@@ -115,6 +115,39 @@\n   - match: { aggregations.cluster.buckets.0.key: \"local_cluster\" }\n   - match: { aggregations.cluster.buckets.0.doc_count: 5 }\n \n+  # once more, this time with a pipeline agg", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9f4cda693655193d7b60e4bf176902ec7ebb161"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcyMDUzNQ==", "bodyText": "Looks like the comment trails off without finishing it's thought :)", "url": "https://github.com/elastic/elasticsearch/pull/53730#discussion_r396720535", "createdAt": "2020-03-23T19:57:36Z", "author": {"login": "polyfractal"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java", "diffHunk": "@@ -54,35 +59,56 @@\n         }\n     };\n \n-    private final List<SiblingPipelineAggregator> topLevelPipelineAggregators;\n+    /**\n+     * The way to build a tree of pipeline aggregators. Used only for\n+     * serialization backwards compatibility.\n+     */\n+    private final Supplier<PipelineAggregator.PipelineTree> pipelineTreeForBwcSerialization;\n \n     /**\n      * Constructs a new aggregation.\n      */\n     public InternalAggregations(List<InternalAggregation> aggregations) {\n         super(aggregations);\n-        this.topLevelPipelineAggregators = Collections.emptyList();\n+        this.pipelineTreeForBwcSerialization = null;\n     }\n \n     /**\n-     * Constructs a new aggregation providing its {@link InternalAggregation}s and {@link SiblingPipelineAggregator}s\n+     * Constructs a node in the aggregation tree.\n+     * @param pipelineTreeSource must be null inside the tree or after final reduction. Should reference the\n+     *                           search request otherwise so we can properly serialize the response to\n+     *                           versions of Elasticsearch that require the pipelines to be serialized.\n      */\n-    public InternalAggregations(List<InternalAggregation> aggregations, List<SiblingPipelineAggregator> topLevelPipelineAggregators) {\n+    public InternalAggregations(List<InternalAggregation> aggregations, Supplier<PipelineAggregator.PipelineTree> pipelineTreeSource) {\n         super(aggregations);\n-        this.topLevelPipelineAggregators = Objects.requireNonNull(topLevelPipelineAggregators);\n+        this.pipelineTreeForBwcSerialization = pipelineTreeSource;\n     }\n \n     public InternalAggregations(StreamInput in) throws IOException {\n         super(in.readList(stream -> in.readNamedWriteable(InternalAggregation.class)));\n-        this.topLevelPipelineAggregators = in.readList(\n-            stream -> (SiblingPipelineAggregator)in.readNamedWriteable(PipelineAggregator.class));\n+        if (in.getVersion().before(Version.V_8_0_0)) { // TODO switch to 7.7.0 before merging\n+            in.readNamedWriteableList(PipelineAggregator.class); \n+        }\n+        /*\n+         * Setting the pipeline tree source to null is here is correct but\n+         * only because we don't immediately pass the InternalAggregations\n+         * off to another node. Instead, we always reduce together with\n+         * many aggregations and that always adds the ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9f4cda693655193d7b60e4bf176902ec7ebb161"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0MjI2Nw==", "bodyText": "Should we have a similar test for the rolling-upgrade module?  Theoretically it should be the same as CCS, but it might also smoke out different issues due to heterogeneous serialization inside the same cluster (instead of funneling through a gateway).", "url": "https://github.com/elastic/elasticsearch/pull/53730#discussion_r397342267", "createdAt": "2020-03-24T17:40:24Z", "author": {"login": "polyfractal"}, "path": "qa/multi-cluster-search/src/test/resources/rest-api-spec/test/multi_cluster/10_basic.yml", "diffHunk": "@@ -115,6 +115,39 @@\n   - match: { aggregations.cluster.buckets.0.key: \"local_cluster\" }\n   - match: { aggregations.cluster.buckets.0.doc_count: 5 }\n \n+  # once more, this time with a pipeline agg\n+  - do:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff7a673c19fd9f723d87896d844b58604b1452f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0MzA3NQ==", "bodyText": "Should we add a non-top-level pipeline agg just to confirm they aren't affected?", "url": "https://github.com/elastic/elasticsearch/pull/53730#discussion_r397343075", "createdAt": "2020-03-24T17:41:35Z", "author": {"login": "polyfractal"}, "path": "qa/multi-cluster-search/src/test/resources/rest-api-spec/test/multi_cluster/10_basic.yml", "diffHunk": "@@ -115,6 +115,39 @@\n   - match: { aggregations.cluster.buckets.0.key: \"local_cluster\" }\n   - match: { aggregations.cluster.buckets.0.doc_count: 5 }\n \n+  # once more, this time with a pipeline agg\n+  - do:\n+      search:\n+        rest_total_hits_as_int: true\n+        index: test_index,my_remote_cluster:test_index\n+        body:\n+          seq_no_primary_term: true\n+          aggs:\n+            cluster:\n+              terms:\n+                field: f1.keyword\n+              aggs:\n+                s:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff7a673c19fd9f723d87896d844b58604b1452f"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f335863fd32cad3a8b1a5554d0167dd8cb212481", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/f335863fd32cad3a8b1a5554d0167dd8cb212481", "committedDate": "2020-03-24T17:46:17Z", "message": "Merge branch 'master' into pipeline_drop_serialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "feb194c96af2d736de2fbbec6450304661114e95", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/feb194c96af2d736de2fbbec6450304661114e95", "committedDate": "2020-03-24T18:56:20Z", "message": "Update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNjI1NTQ3", "url": "https://github.com/elastic/elasticsearch/pull/53730#pullrequestreview-380625547", "createdAt": "2020-03-24T19:20:04Z", "commit": {"oid": "feb194c96af2d736de2fbbec6450304661114e95"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12dae79a6dbddcfb4cf587c3979e84bc7f2f970b", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/12dae79a6dbddcfb4cf587c3979e84bc7f2f970b", "committedDate": "2020-03-25T10:43:23Z", "message": "Switch version"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2010, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}