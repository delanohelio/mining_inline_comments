{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5OTI5MDU3", "number": 63483, "title": "SQL: enhance IN operator support for formatted date fields. Extend allowed conversions", "bodyText": "The IN operator fails the comparison against datetime values, if these have a custom format; reason being that translation of these values is unaware of the field mapping format and just use the strict_date_time one in a terms query.\nTo overcome this limitation the PR changes the translation to a boolean should of ranges query, which allow providing a format parameter (which still won't be that of the mapped field, but one that allows ES to interpret the provided values of the range).\nThe PR also adjusts the way IN converts the values in the set, in case the clause uses a field attribute: currently, the type of the first value in the IN set is considered as the reference and all subsequent values converted to it. This is changed to take the type of the field attribute instead as the reference.\nThe data type validation between the operands of the IN is also changed from a compatibility test to a convertibility test (which is what the query generation eventually does anyways).\nThese two changes allow for a wide range of implicit conversions (like WHERE datetime_field IN ('datetime_literal'::datetime, 'date_literal'::date, 'datetime_literal'), what other implementation also support).\nCloses #58932.\nCo-authored-by: yinanwu yinanwu@tencent.com", "createdAt": "2020-10-08T13:37:46Z", "url": "https://github.com/elastic/elasticsearch/pull/63483", "merged": true, "mergeCommit": {"oid": "45a6023a0d5793b197f55242ab6912b632695a49"}, "closed": true, "closedAt": "2020-10-15T10:41:54Z", "author": {"login": "bpintea"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5qMKoAH2gAyNDk5OTI5MDU3OjJiOTRmODg2MzlkYmYxNDI1NzZhMWYyNGFmMzQxNTZiMDMzMTkwYjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSbMRngH2gAyNDk5OTI5MDU3OjhiZTQ1MDE1ZDMyMzdmNWE5ZDY1YTNjZjcxMTc3NzI2Y2FjMGQzOTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2b94f88639dbf142576a1f24af34156b033190b2", "author": {"user": null}, "url": "https://github.com/elastic/elasticsearch/commit/2b94f88639dbf142576a1f24af34156b033190b2", "committedDate": "2020-07-29T12:29:04Z", "message": "SQL: IN operator incorrectly handling specified date format (#58932)\n\nIn `IN` operator, the ExpressionTranslator<In> translates expression into terms query, but when the expression is date format, the terms query get unexpected results. This commit changes the terms query into bool should query when data type is `DATETIME`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17e00a8b8fa3b1c6ff827929be6214682a17ae06", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/17e00a8b8fa3b1c6ff827929be6214682a17ae06", "committedDate": "2020-10-06T16:00:43Z", "message": "Merge remote-tracking branch 'upstream/master' into fix/in_with_format_dates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b58d385ad96dc16c706c97fc3679a9a9e4c3cc4f", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/b58d385ad96dc16c706c97fc3679a9a9e4c3cc4f", "committedDate": "2020-10-08T10:27:19Z", "message": "fix IN values conversion for fields. add tests\n\nIn case the IN operator compares against a field, its translation logic\ntakes the first type in the value set and converts subsequent values to\nit. This commit will change that to have the field type be considered as\nthe reference and have the values in the IN set be converted by it.\n\nThe IN operator is also changed to validate types by their\nconvertability, not compatibility.\n\nThese allow more confortable implicit conversions (of the type `WHERE\nip_field in ('127.0.0.1', ...)`).\n\nTests have been added to check the DATETIME handling of the IN operator."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f79ce8679737baa23f5f8d12f638b8d6b106534", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/0f79ce8679737baa23f5f8d12f638b8d6b106534", "committedDate": "2020-10-08T13:23:36Z", "message": "Fix order of types in conversion check\n\nSwap operands in convertability check for the IN operator.\nSmall simplification, join two loopings on same list."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5be5b8caf96dda165ea4ff797396f579518fe4e9", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/5be5b8caf96dda165ea4ff797396f579518fe4e9", "committedDate": "2020-10-08T13:38:07Z", "message": "Merge branch 'master' into fix/in_with_format_dates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0Nzk2NzAw", "url": "https://github.com/elastic/elasticsearch/pull/63483#pullrequestreview-504796700", "createdAt": "2020-10-08T13:43:24Z", "commit": {"oid": "5be5b8caf96dda165ea4ff797396f579518fe4e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo0MzoyNFrOHefP1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo0MzoyNFrOHefP1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTczMTI4NA==", "bodyText": "This test result - and logic allowing it - now corrected.", "url": "https://github.com/elastic/elasticsearch/pull/63483#discussion_r501731284", "createdAt": "2020-10-08T13:43:24Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/qa/server/src/main/resources/filter.csv-spec", "diffHunk": "@@ -131,21 +131,22 @@ SELECT COUNT(*), TRUNCATE(emp_no, -2) t FROM test_emp WHERE 'aaabbb' RLIKE 'a{2,\n ;\n \n inWithCompatibleDateTypes\n-SELECT birth_date FROM test_emp WHERE birth_date IN ({d '1959-07-23'},CAST('1959-12-25T12:12:12' AS TIMESTAMP)) OR birth_date IS NULL ORDER BY birth_date;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be5b8caf96dda165ea4ff797396f579518fe4e9"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0Nzk2ODEy", "url": "https://github.com/elastic/elasticsearch/pull/63483#pullrequestreview-504796812", "createdAt": "2020-10-08T13:43:31Z", "commit": {"oid": "5be5b8caf96dda165ea4ff797396f579518fe4e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo0MzozMVrOHefQMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo0MzozMVrOHefQMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTczMTM3OQ==", "bodyText": "This test is now possible (and inline with what other SQL implementations do).", "url": "https://github.com/elastic/elasticsearch/pull/63483#discussion_r501731379", "createdAt": "2020-10-08T13:43:31Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/analysis/analyzer/VerifierErrorMessagesTests.java", "diffHunk": "@@ -665,14 +665,10 @@ public void testHavingOnScalar() {\n                 error(\"SELECT int FROM test GROUP BY int HAVING 2 < ABS(int)\"));\n     }\n \n-    public void testInWithDifferentDataTypes() {\n-        assertEquals(\"1:8: 2nd argument of [1 IN (2, '3', 4)] must be [integer], found value ['3'] type [keyword]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be5b8caf96dda165ea4ff797396f579518fe4e9"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a02719cb3d0433d380345bb5397c877057af0665", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/a02719cb3d0433d380345bb5397c877057af0665", "committedDate": "2020-10-08T14:18:13Z", "message": "Fix style\n\nRemove unused import."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0ODc4ODEz", "url": "https://github.com/elastic/elasticsearch/pull/63483#pullrequestreview-504878813", "createdAt": "2020-10-08T15:01:03Z", "commit": {"oid": "5be5b8caf96dda165ea4ff797396f579518fe4e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNTowMTowNFrOHei-aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNTowMTowNFrOHei-aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc5MjM2MQ==", "bodyText": "@matriv, related to your suggestion, there are similarities with BinaryComparisons's times values code, but not sure if enough for a common extraction to make sense (despite the comment reference). But happy to further iterate.", "url": "https://github.com/elastic/elasticsearch/pull/63483#discussion_r501792361", "createdAt": "2020-10-08T15:01:04Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/planner/ExpressionTranslators.java", "diffHunk": "@@ -391,18 +391,32 @@ public static Query doTranslate(In in, TranslatorHandler handler) {\n             if (in.value() instanceof FieldAttribute) {\n                 // equality should always be against an exact match (which is important for strings)\n                 FieldAttribute fa = (FieldAttribute) in.value();\n-                List<Expression> list = in.list();\n+                DataType dt = fa.dataType();\n \n-                // TODO: this needs to be handled inside the optimizer\n-                list.removeIf(e -> DataTypes.isNull(e.dataType()));\n-                DataType dt = list.get(0).dataType();\n+                List<Expression> list = in.list();\n                 Set<Object> set = new LinkedHashSet<>(CollectionUtils.mapSize(list.size()));\n-\n-                for (Expression e : list) {\n-                    set.add(handler.convert(valueOf(e), dt));\n+                list.forEach(e -> {\n+                    // TODO: this needs to be handled inside the optimizer\n+                    if (DataTypes.isNull(e.dataType()) == false) {\n+                        set.add(handler.convert(valueOf(e), dt));\n+                    }\n+                });\n+\n+                if (dt == DATETIME) {\n+                    DateFormatter formatter = DateFormatter.forPattern(DATE_FORMAT);\n+\n+                    q = null;\n+                    for (Object o : set) {\n+                        assert o instanceof ZonedDateTime;\n+                        // see comment in Ranges#doTranslate() as to why formatting as String is required\n+                        String zdt = formatter.format((ZonedDateTime) o);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be5b8caf96dda165ea4ff797396f579518fe4e9"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0ODkwMzYz", "url": "https://github.com/elastic/elasticsearch/pull/63483#pullrequestreview-504890363", "createdAt": "2020-10-08T15:12:24Z", "commit": {"oid": "a02719cb3d0433d380345bb5397c877057af0665"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNToxMjoyNFrOHejfJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNToxNDowNFrOHejjxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgwMDc0Mw==", "bodyText": "minor, but better add a short msg.", "url": "https://github.com/elastic/elasticsearch/pull/63483#discussion_r501800743", "createdAt": "2020-10-08T15:12:24Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/planner/ExpressionTranslators.java", "diffHunk": "@@ -391,18 +391,32 @@ public static Query doTranslate(In in, TranslatorHandler handler) {\n             if (in.value() instanceof FieldAttribute) {\n                 // equality should always be against an exact match (which is important for strings)\n                 FieldAttribute fa = (FieldAttribute) in.value();\n-                List<Expression> list = in.list();\n+                DataType dt = fa.dataType();\n \n-                // TODO: this needs to be handled inside the optimizer\n-                list.removeIf(e -> DataTypes.isNull(e.dataType()));\n-                DataType dt = list.get(0).dataType();\n+                List<Expression> list = in.list();\n                 Set<Object> set = new LinkedHashSet<>(CollectionUtils.mapSize(list.size()));\n-\n-                for (Expression e : list) {\n-                    set.add(handler.convert(valueOf(e), dt));\n+                list.forEach(e -> {\n+                    // TODO: this needs to be handled inside the optimizer\n+                    if (DataTypes.isNull(e.dataType()) == false) {\n+                        set.add(handler.convert(valueOf(e), dt));\n+                    }\n+                });\n+\n+                if (dt == DATETIME) {\n+                    DateFormatter formatter = DateFormatter.forPattern(DATE_FORMAT);\n+\n+                    q = null;\n+                    for (Object o : set) {\n+                        assert o instanceof ZonedDateTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a02719cb3d0433d380345bb5397c877057af0665"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgwMTkyNw==", "bodyText": "Yeah, seems fine as is.", "url": "https://github.com/elastic/elasticsearch/pull/63483#discussion_r501801927", "createdAt": "2020-10-08T15:14:04Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/planner/ExpressionTranslators.java", "diffHunk": "@@ -391,18 +391,32 @@ public static Query doTranslate(In in, TranslatorHandler handler) {\n             if (in.value() instanceof FieldAttribute) {\n                 // equality should always be against an exact match (which is important for strings)\n                 FieldAttribute fa = (FieldAttribute) in.value();\n-                List<Expression> list = in.list();\n+                DataType dt = fa.dataType();\n \n-                // TODO: this needs to be handled inside the optimizer\n-                list.removeIf(e -> DataTypes.isNull(e.dataType()));\n-                DataType dt = list.get(0).dataType();\n+                List<Expression> list = in.list();\n                 Set<Object> set = new LinkedHashSet<>(CollectionUtils.mapSize(list.size()));\n-\n-                for (Expression e : list) {\n-                    set.add(handler.convert(valueOf(e), dt));\n+                list.forEach(e -> {\n+                    // TODO: this needs to be handled inside the optimizer\n+                    if (DataTypes.isNull(e.dataType()) == false) {\n+                        set.add(handler.convert(valueOf(e), dt));\n+                    }\n+                });\n+\n+                if (dt == DATETIME) {\n+                    DateFormatter formatter = DateFormatter.forPattern(DATE_FORMAT);\n+\n+                    q = null;\n+                    for (Object o : set) {\n+                        assert o instanceof ZonedDateTime;\n+                        // see comment in Ranges#doTranslate() as to why formatting as String is required\n+                        String zdt = formatter.format((ZonedDateTime) o);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc5MjM2MQ=="}, "originalCommit": {"oid": "5be5b8caf96dda165ea4ff797396f579518fe4e9"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6b8a9bca76b90e831893d224d82743ec6690698", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/a6b8a9bca76b90e831893d224d82743ec6690698", "committedDate": "2020-10-09T15:48:12Z", "message": "Address review comments\n\nAdd assert message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b3e9c51c59d5ca0032da36e3a5ba9182a24df6f", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/9b3e9c51c59d5ca0032da36e3a5ba9182a24df6f", "committedDate": "2020-10-09T15:49:53Z", "message": "Merge branch 'master' into fix/in_with_format_dates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTAxMjMz", "url": "https://github.com/elastic/elasticsearch/pull/63483#pullrequestreview-506101233", "createdAt": "2020-10-10T14:25:10Z", "commit": {"oid": "9b3e9c51c59d5ca0032da36e3a5ba9182a24df6f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MTMyMDg0", "url": "https://github.com/elastic/elasticsearch/pull/63483#pullrequestreview-508132084", "createdAt": "2020-10-14T08:53:17Z", "commit": {"oid": "9b3e9c51c59d5ca0032da36e3a5ba9182a24df6f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "208ef712b2f992b0aa45eef082eca0dba16e2263", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/208ef712b2f992b0aa45eef082eca0dba16e2263", "committedDate": "2020-10-14T11:04:27Z", "message": "Merge remote-tracking branch 'upstream/master' into fix/in_with_format_dates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8be45015d3237f5a9d65a3cf71177726cac0d399", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/8be45015d3237f5a9d65a3cf71177726cac0d399", "committedDate": "2020-10-14T11:08:43Z", "message": "Add IN test with TIME values\n\nAdd CSV test to test IN against a TIME convered value."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4225, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}