{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMTc2Njk4", "number": 57144, "title": "Introduce Annotation.event field", "bodyText": "This PR introduces Annotation.event field to distinguish annotations created for different purposes.\nCurrently the two existing events are delayed_data and model_snapshot_stored.\nThis field is not required. Older annotations will have null value for it.\nAdditionally, this PR:\n\nmakes Annotation.type field of type enum. Wire format stays \"string\" in order to achieve BWC.\nmakes Annotation parser strict\nadds a parser method Annotation::fromXContent so that external code can use that instead of Annotation.Builder parser object\n\nRelates #55781", "createdAt": "2020-05-26T12:32:25Z", "url": "https://github.com/elastic/elasticsearch/pull/57144", "merged": true, "mergeCommit": {"oid": "e1c84762632104555c2cfa92363d7b1342548d45"}, "closed": true, "closedAt": "2020-06-01T17:13:24Z", "author": {"login": "przemekwitek"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclomosgBqjMzODE0MjU5MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnCuSlAH2gAyNDIzMTc2Njk4OjA2MjRhYTBjMWM3MTdmYTFmZTAwMDUwNjA2MDBiMjM0NDlkNmExNWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09c97f83eb5d22b1006d8aa6411f26a9a51a3516", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/09c97f83eb5d22b1006d8aa6411f26a9a51a3516", "committedDate": "2020-05-26T12:29:00Z", "message": "Introduce Annotation.subtype field"}, "afterCommit": {"oid": "016dcac7bb954ad8b56ca1c85a4d6332c2107b7f", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/016dcac7bb954ad8b56ca1c85a4d6332c2107b7f", "committedDate": "2020-05-28T07:18:53Z", "message": "Introduce Annotation.event field"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5ODQ1NjA5", "url": "https://github.com/elastic/elasticsearch/pull/57144#pullrequestreview-419845609", "createdAt": "2020-05-28T07:30:04Z", "commit": {"oid": "b76f79500ecb087102069c6359e509172a8210c6"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzozMDowNFrOGbo8uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzozNTo1NVrOGbpICw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNTY0Mw==", "bodyText": "I think you should also add COMMENT here, to keep the UI and backend in sync - the UI defines it here https://github.com/elastic/kibana/blob/995c2cb725a5588fc843b35895d48408036ed8ca/x-pack/plugins/ml/common/types/annotations.ts#L75", "url": "https://github.com/elastic/elasticsearch/pull/57144#discussion_r431635643", "createdAt": "2020-05-28T07:30:04Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/annotations/Annotation.java", "diffHunk": "@@ -14,15 +14,44 @@\n import org.elasticsearch.common.xcontent.ObjectParser;\n import org.elasticsearch.common.xcontent.ToXContentObject;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n import org.elasticsearch.xpack.core.common.time.TimeUtils;\n import org.elasticsearch.xpack.core.ml.job.config.Job;\n \n import java.io.IOException;\n import java.util.Date;\n+import java.util.Locale;\n import java.util.Objects;\n \n public class Annotation implements ToXContentObject, Writeable {\n \n+    public enum Type {\n+        ANNOTATION;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76f79500ecb087102069c6359e509172a8210c6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNjY0Mg==", "bodyText": "We need to think about what the UI will put in this field for user-added annotations.  user?  manual?  Or leave it null.  Please can you talk to the UI team about this.", "url": "https://github.com/elastic/elasticsearch/pull/57144#discussion_r431636642", "createdAt": "2020-05-28T07:32:03Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/annotations/Annotation.java", "diffHunk": "@@ -14,15 +14,44 @@\n import org.elasticsearch.common.xcontent.ObjectParser;\n import org.elasticsearch.common.xcontent.ToXContentObject;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n import org.elasticsearch.xpack.core.common.time.TimeUtils;\n import org.elasticsearch.xpack.core.ml.job.config.Job;\n \n import java.io.IOException;\n import java.util.Date;\n+import java.util.Locale;\n import java.util.Objects;\n \n public class Annotation implements ToXContentObject, Writeable {\n \n+    public enum Type {\n+        ANNOTATION;\n+\n+        public static Type fromString(String value) {\n+            return valueOf(value.toUpperCase(Locale.ROOT));\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return name().toLowerCase(Locale.ROOT);\n+        }\n+    }\n+\n+    public enum Event {\n+        DELAYED_DATA,\n+        MODEL_SNAPSHOT_STORED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76f79500ecb087102069c6359e509172a8210c6"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzODUzOQ==", "bodyText": "Since this is generally a lenient parser (ignoreUnknownFields = true), I wonder if it should catch a fromString exception here and set event to null.  Otherwise the parser is not lenient in tolerating new events we may add in the future, and it is very likely we will add new events.", "url": "https://github.com/elastic/elasticsearch/pull/57144#discussion_r431638539", "createdAt": "2020-05-28T07:35:55Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/annotations/Annotation.java", "diffHunk": "@@ -54,7 +88,18 @@\n         PARSER.declareField(Builder::setModifiedTime,\n             p -> TimeUtils.parseTimeField(p, MODIFIED_TIME.getPreferredName()), MODIFIED_TIME, ObjectParser.ValueType.VALUE);\n         PARSER.declareString(Builder::setModifiedUsername, MODIFIED_USERNAME);\n-        PARSER.declareString(Builder::setType, TYPE);\n+        PARSER.declareField(Builder::setType, p -> {\n+            if (p.currentToken() == XContentParser.Token.VALUE_STRING) {\n+                return Type.fromString(p.text());\n+            }\n+            throw new IllegalArgumentException(\"Unsupported token [\" + p.currentToken() + \"]\");\n+        }, TYPE, ObjectParser.ValueType.STRING);\n+        PARSER.declareField(Builder::setEvent, p -> {\n+            if (p.currentToken() == XContentParser.Token.VALUE_STRING) {\n+                return Event.fromString(p.text());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76f79500ecb087102069c6359e509172a8210c6"}, "originalPosition": 79}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80d86cb2fe8a970d3219ef86253fd324b0af869e", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/80d86cb2fe8a970d3219ef86253fd324b0af869e", "committedDate": "2020-05-28T11:16:43Z", "message": "Add Event.USER enum value for user-generated annotations"}, "afterCommit": {"oid": "fd488e166d201fd8ffda0ed037cef7e6b3a54f78", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/fd488e166d201fd8ffda0ed037cef7e6b3a54f78", "committedDate": "2020-05-29T12:44:58Z", "message": "Add Event.USER enum value for user-generated annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4512c0a5f272d3bc8356ff184d6679e5796afc6", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/c4512c0a5f272d3bc8356ff184d6679e5796afc6", "committedDate": "2020-06-01T08:16:37Z", "message": "Introduce Annotation.event field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c220db1626c2f39ef827677ac64b6ac3e2df6e2e", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/c220db1626c2f39ef827677ac64b6ac3e2df6e2e", "committedDate": "2020-06-01T08:16:37Z", "message": "Use Annotation parser rather than Annotation.Builder throughout the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "606b44315870b75237248afbdf668b5727c41b2d", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/606b44315870b75237248afbdf668b5727c41b2d", "committedDate": "2020-06-01T08:16:37Z", "message": "Apply review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0e372eea565bab05413cf9b3806fd1ee5cf0616", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/b0e372eea565bab05413cf9b3806fd1ee5cf0616", "committedDate": "2020-06-01T08:16:37Z", "message": "Add Event.USER enum value for user-generated annotations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd488e166d201fd8ffda0ed037cef7e6b3a54f78", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/fd488e166d201fd8ffda0ed037cef7e6b3a54f78", "committedDate": "2020-05-29T12:44:58Z", "message": "Add Event.USER enum value for user-generated annotations"}, "afterCommit": {"oid": "b0e372eea565bab05413cf9b3806fd1ee5cf0616", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/b0e372eea565bab05413cf9b3806fd1ee5cf0616", "committedDate": "2020-06-01T08:16:37Z", "message": "Add Event.USER enum value for user-generated annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c13a5ce3c07f28dbd2779e2b3aba4341b75b823f", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/c13a5ce3c07f28dbd2779e2b3aba4341b75b823f", "committedDate": "2020-06-01T15:29:12Z", "message": "Make Annotation parser strict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTgyNzE3", "url": "https://github.com/elastic/elasticsearch/pull/57144#pullrequestreview-421982717", "createdAt": "2020-06-01T16:12:16Z", "commit": {"oid": "c13a5ce3c07f28dbd2779e2b3aba4341b75b823f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjoxMjoxN1rOGdQ6BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjoxMjoxN1rOGdQ6BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzODg4NQ==", "bodyText": "I think it would be worth naming the variable STRICT_PARSER.  It someone ever does need to parse these documents out of an index then a lenient parser will be needed, but at that time it would be easy to assume that a variable named simply PARSER can be used.  The person doing that future work won't read the discussion in this PR - they'll just go by what they can easily navigate to in the IDE.", "url": "https://github.com/elastic/elasticsearch/pull/57144#discussion_r433338885", "createdAt": "2020-06-01T16:12:17Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/annotations/Annotation.java", "diffHunk": "@@ -80,11 +71,17 @@ public String toString() {\n     public static final ParseField BY_FIELD_NAME = new ParseField(\"by_field_name\");\n     public static final ParseField BY_FIELD_VALUE = new ParseField(\"by_field_value\");\n \n+    /**\n+     * Parses {@link Annotation} using a strict parser.\n+     */\n     public static Annotation fromXContent(XContentParser parser, Void context) {\n         return PARSER.apply(parser, context).build();\n     }\n \n-    private static final ObjectParser<Builder, Void> PARSER = new ObjectParser<>(ANNOTATION.getPreferredName(), true, Builder::new);\n+    /**\n+     * Strict parser for cases when {@link Annotation} is returned from C++ as an ML result.\n+     */\n+    private static final ObjectParser<Builder, Void> PARSER = new ObjectParser<>(ANNOTATION.getPreferredName(), false, Builder::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13a5ce3c07f28dbd2779e2b3aba4341b75b823f"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0624aa0c1c717fa1fe0005060600b23449d6a15a", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/0624aa0c1c717fa1fe0005060600b23449d6a15a", "committedDate": "2020-06-01T16:19:30Z", "message": "Rename PARSER to STRICT_PARSER"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4184, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}