{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzODg3ODgw", "number": 62229, "title": "Share more query execution code for runtime fields", "bodyText": "For runtime fields we have written quite some lucene queries that work against runtime values that are the result of the execution of the different script contexts that runtime fields support.\nThe all (but one) share the same main logic: use a two phase iterator, iterate over all documents, and decide whether the current doc matches or not based on what the script returns. I went ahead and shared this bit of code in the base class for all queries on top of runtime fields.", "createdAt": "2020-09-10T13:55:09Z", "url": "https://github.com/elastic/elasticsearch/pull/62229", "merged": true, "mergeCommit": {"oid": "6169dc511112a7c46787e9ea5dc92e671ec0baee"}, "closed": true, "closedAt": "2020-09-10T15:50:27Z", "author": {"login": "javanna"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHgRWUgH2gAyNDgzODg3ODgwOmI1NzU3YmE5NzQyYjQyZjk4ZDdiNjA5ZjI0MmVjMThkMjdmZTY0OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHhcTMgH2gAyNDgzODg3ODgwOjE2OGUyMjU4YmY1MDFhMWIzNmNhM2VhNTA2ZmFlMTkzNzU1ZDdiNTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b5757ba9742b42f98d7b609f242ec18d27fe6490", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/b5757ba9742b42f98d7b609f242ec18d27fe6490", "committedDate": "2020-09-10T12:50:37Z", "message": "LeafFactory#newInstance does not throw IOException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05db6492f42ce8c6726c59bb2c80eb77ac4162ea", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/05db6492f42ce8c6726c59bb2c80eb77ac4162ea", "committedDate": "2020-09-10T13:50:41Z", "message": "centralize runtime fields query execution"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1OTY1NTk1", "url": "https://github.com/elastic/elasticsearch/pull/62229#pullrequestreview-485965595", "createdAt": "2020-09-10T13:59:25Z", "commit": {"oid": "05db6492f42ce8c6726c59bb2c80eb77ac4162ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1OTY1Njg5", "url": "https://github.com/elastic/elasticsearch/pull/62229#pullrequestreview-485965689", "createdAt": "2020-09-10T13:59:29Z", "commit": {"oid": "05db6492f42ce8c6726c59bb2c80eb77ac4162ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMzo1OToyOVrOHP1dag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMzo1OToyOVrOHP1dag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM2NjU3MA==", "bodyText": "is scriptContext a good name here? I wish that we rename also the different BooleanScriptFieldScript in a followup. That is effectively the script context for boolean runtime fields?", "url": "https://github.com/elastic/elasticsearch/pull/62229#discussion_r486366570", "createdAt": "2020-09-10T13:59:29Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/query/AbstractBooleanScriptFieldQuery.java", "diffHunk": "@@ -6,32 +6,24 @@\n \n package org.elasticsearch.xpack.runtimefields.query;\n \n-import org.apache.lucene.index.LeafReaderContext;\n-import org.apache.lucene.search.ConstantScoreScorer;\n-import org.apache.lucene.search.ConstantScoreWeight;\n-import org.apache.lucene.search.DocIdSetIterator;\n-import org.apache.lucene.search.IndexSearcher;\n import org.apache.lucene.search.QueryVisitor;\n-import org.apache.lucene.search.ScoreMode;\n-import org.apache.lucene.search.Scorer;\n-import org.apache.lucene.search.TwoPhaseIterator;\n-import org.apache.lucene.search.Weight;\n import org.elasticsearch.script.Script;\n import org.elasticsearch.xpack.runtimefields.BooleanScriptFieldScript;\n import org.elasticsearch.xpack.runtimefields.DoubleScriptFieldScript;\n \n-import java.io.IOException;\n-import java.util.Objects;\n-\n /**\n  * Abstract base class for building queries based on {@link DoubleScriptFieldScript}.\n  */\n-abstract class AbstractBooleanScriptFieldQuery extends AbstractScriptFieldQuery {\n-    private final BooleanScriptFieldScript.LeafFactory leafFactory;\n+abstract class AbstractBooleanScriptFieldQuery extends AbstractScriptFieldQuery<BooleanScriptFieldScript> {\n \n     AbstractBooleanScriptFieldQuery(Script script, BooleanScriptFieldScript.LeafFactory leafFactory, String fieldName) {\n-        super(script, fieldName);\n-        this.leafFactory = Objects.requireNonNull(leafFactory);\n+        super(script, fieldName, leafFactory::newInstance);\n+    }\n+\n+    @Override\n+    protected boolean matches(BooleanScriptFieldScript scriptContext, int docId) {\n+        scriptContext.runForDoc(docId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05db6492f42ce8c6726c59bb2c80eb77ac4162ea"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1OTY5MDk2", "url": "https://github.com/elastic/elasticsearch/pull/62229#pullrequestreview-485969096", "createdAt": "2020-09-10T14:02:41Z", "commit": {"oid": "05db6492f42ce8c6726c59bb2c80eb77ac4162ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDowMjo0MVrOHP1nVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDowMjo0MVrOHP1nVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM2OTEwOA==", "bodyText": "Maybe leafFactor should be a function everywhere like it is for long, because the function is all we need after all.", "url": "https://github.com/elastic/elasticsearch/pull/62229#discussion_r486369108", "createdAt": "2020-09-10T14:02:41Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/query/AbstractStringScriptFieldQuery.java", "diffHunk": "@@ -6,63 +6,27 @@\n \n package org.elasticsearch.xpack.runtimefields.query;\n \n-import org.apache.lucene.index.LeafReaderContext;\n-import org.apache.lucene.search.ConstantScoreScorer;\n-import org.apache.lucene.search.ConstantScoreWeight;\n-import org.apache.lucene.search.DocIdSetIterator;\n-import org.apache.lucene.search.IndexSearcher;\n-import org.apache.lucene.search.ScoreMode;\n-import org.apache.lucene.search.Scorer;\n-import org.apache.lucene.search.TwoPhaseIterator;\n-import org.apache.lucene.search.Weight;\n import org.elasticsearch.script.Script;\n import org.elasticsearch.xpack.runtimefields.StringScriptFieldScript;\n \n-import java.io.IOException;\n import java.util.List;\n-import java.util.Objects;\n \n /**\n  * Abstract base class for building queries based on {@link StringScriptFieldScript}.\n  */\n-abstract class AbstractStringScriptFieldQuery extends AbstractScriptFieldQuery {\n-    private final StringScriptFieldScript.LeafFactory leafFactory;\n+abstract class AbstractStringScriptFieldQuery extends AbstractScriptFieldQuery<StringScriptFieldScript> {\n \n     AbstractStringScriptFieldQuery(Script script, StringScriptFieldScript.LeafFactory leafFactory, String fieldName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05db6492f42ce8c6726c59bb2c80eb77ac4162ea"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1OTcwOTUx", "url": "https://github.com/elastic/elasticsearch/pull/62229#pullrequestreview-485970951", "createdAt": "2020-09-10T14:04:29Z", "commit": {"oid": "05db6492f42ce8c6726c59bb2c80eb77ac4162ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDowNDoyOVrOHP1soQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDowNDoyOVrOHP1soQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM3MDQ2NQ==", "bodyText": "I was also wondering if the visit methods are consistent, i see that most of the impl share the same code, but there are subtleties as not all impls override it. I was about to move the standard impl to the base class but I refrained.", "url": "https://github.com/elastic/elasticsearch/pull/62229#discussion_r486370465", "createdAt": "2020-09-10T14:04:29Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/query/AbstractBooleanScriptFieldQuery.java", "diffHunk": "@@ -41,35 +33,6 @@\n      */\n     protected abstract boolean matches(int trues, int falses);\n \n-    @Override\n-    public final Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n-        return new ConstantScoreWeight(this, boost) {\n-            @Override\n-            public boolean isCacheable(LeafReaderContext ctx) {\n-                return false; // scripts aren't really cacheable at this point\n-            }\n-\n-            @Override\n-            public Scorer scorer(LeafReaderContext ctx) throws IOException {\n-                BooleanScriptFieldScript script = leafFactory.newInstance(ctx);\n-                DocIdSetIterator approximation = DocIdSetIterator.all(ctx.reader().maxDoc());\n-                TwoPhaseIterator twoPhase = new TwoPhaseIterator(approximation) {\n-                    @Override\n-                    public boolean matches() throws IOException {\n-                        script.runForDoc(approximation().docID());\n-                        return AbstractBooleanScriptFieldQuery.this.matches(script.trues(), script.falses());\n-                    }\n-\n-                    @Override\n-                    public float matchCost() {\n-                        return MATCH_COST;\n-                    }\n-                };\n-                return new ConstantScoreScorer(this, score(), scoreMode, twoPhase);\n-            }\n-        };\n-    }\n-\n     @Override\n     public final void visit(QueryVisitor visitor) {\n         // No subclasses contain any Terms because those have to be strings.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05db6492f42ce8c6726c59bb2c80eb77ac4162ea"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "168e2258bf501a1b36ca3ea506fae193755d7b56", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/168e2258bf501a1b36ca3ea506fae193755d7b56", "committedDate": "2020-09-10T14:12:29Z", "message": "Merge branch 'master' into enhancement/runtime_fields_share_query"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4691, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}