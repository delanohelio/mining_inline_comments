{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MzMyNDc2", "number": 62631, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDowMzoxOVrOEk-9XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDozNDoyOVrOElG7vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjE1NzA5OnYy", "diffSide": "RIGHT", "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldTypeTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDowMzoxOVrOHUOiUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDowMzoxOVrOHUOiUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3MTczMA==", "bodyText": "Maybe collapse these two into a single method that takes a boolean parameter?", "url": "https://github.com/elastic/elasticsearch/pull/62631#discussion_r490971730", "createdAt": "2020-09-18T14:03:19Z", "author": {"login": "romseygeek"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldTypeTestCase.java", "diffHunk": "@@ -40,4 +40,48 @@ static QueryShardContext createMockQueryShardContext(boolean allowExpensiveQueri\n         return queryShardContext;\n     }\n \n+    protected boolean hasConfigurableDocValues() {\n+        return true;\n+    }\n+\n+    protected abstract MappedFieldType createDefaultFieldType();\n+\n+    protected MappedFieldType createFieldTypeWithDocValuesEnabled() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef4187872c0907477a31695af8642f95171048f4"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjE3MDk5OnYy", "diffSide": "RIGHT", "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldTypeTestCase.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDowNjo0MVrOHUOqzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDoyMDowM1rOHUPOjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3MzkwMQ==", "bodyText": "I\"m not sure that we want to enforce this association between hasDocValues and isAggregatable.  I think they're asserting different things - hasDocValues is an implementation detail about how we build exists queries (and also how we build documents, but that will be going away once all mappers are parametrized), whereas isAggregatable says something about the capabilities of the field.  I can even see hasDocValues() being removed entirely and it just being a member field used for the exists query impl.", "url": "https://github.com/elastic/elasticsearch/pull/62631#discussion_r490973901", "createdAt": "2020-09-18T14:06:41Z", "author": {"login": "romseygeek"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldTypeTestCase.java", "diffHunk": "@@ -40,4 +40,48 @@ static QueryShardContext createMockQueryShardContext(boolean allowExpensiveQueri\n         return queryShardContext;\n     }\n \n+    protected boolean hasConfigurableDocValues() {\n+        return true;\n+    }\n+\n+    protected abstract MappedFieldType createDefaultFieldType();\n+\n+    protected MappedFieldType createFieldTypeWithDocValuesEnabled() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    protected MappedFieldType createFieldTypeWithDocValuesDisabled() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    protected boolean isAggregatableWhenDocValuesAreDisabled() {\n+        return false;\n+    }\n+\n+    protected boolean isAggregatableWhenDocValuesAreEnabled() {\n+        return true;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef4187872c0907477a31695af8642f95171048f4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk4MDIyOQ==", "bodyText": "I can see how this association may go away, but it exists today as most of the times a field is aggregatable through doc_values, hence its exists query goes also through doc_values. The test is not so beautiful, yet it would have caught this inconsistency in the first place? I would not want to break the exists query because hasDocValue is not properly set and I thought today one way to verify that it's set correctly is by checking that a field is aggregatable, besides exceptions.", "url": "https://github.com/elastic/elasticsearch/pull/62631#discussion_r490980229", "createdAt": "2020-09-18T14:16:18Z", "author": {"login": "javanna"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldTypeTestCase.java", "diffHunk": "@@ -40,4 +40,48 @@ static QueryShardContext createMockQueryShardContext(boolean allowExpensiveQueri\n         return queryShardContext;\n     }\n \n+    protected boolean hasConfigurableDocValues() {\n+        return true;\n+    }\n+\n+    protected abstract MappedFieldType createDefaultFieldType();\n+\n+    protected MappedFieldType createFieldTypeWithDocValuesEnabled() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    protected MappedFieldType createFieldTypeWithDocValuesDisabled() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    protected boolean isAggregatableWhenDocValuesAreDisabled() {\n+        return false;\n+    }\n+\n+    protected boolean isAggregatableWhenDocValuesAreEnabled() {\n+        return true;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3MzkwMQ=="}, "originalCommit": {"oid": "ef4187872c0907477a31695af8642f95171048f4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk4Mjg0Ng==", "bodyText": "Right, but the test structure I outlined here would also catch that, I think, and wouldn't involve adding all these extra methods?", "url": "https://github.com/elastic/elasticsearch/pull/62631#discussion_r490982846", "createdAt": "2020-09-18T14:19:45Z", "author": {"login": "romseygeek"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldTypeTestCase.java", "diffHunk": "@@ -40,4 +40,48 @@ static QueryShardContext createMockQueryShardContext(boolean allowExpensiveQueri\n         return queryShardContext;\n     }\n \n+    protected boolean hasConfigurableDocValues() {\n+        return true;\n+    }\n+\n+    protected abstract MappedFieldType createDefaultFieldType();\n+\n+    protected MappedFieldType createFieldTypeWithDocValuesEnabled() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    protected MappedFieldType createFieldTypeWithDocValuesDisabled() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    protected boolean isAggregatableWhenDocValuesAreDisabled() {\n+        return false;\n+    }\n+\n+    protected boolean isAggregatableWhenDocValuesAreEnabled() {\n+        return true;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3MzkwMQ=="}, "originalCommit": {"oid": "ef4187872c0907477a31695af8642f95171048f4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk4MzA1NA==", "bodyText": "besides exceptions\n\nThis is the bit I worry about :)", "url": "https://github.com/elastic/elasticsearch/pull/62631#discussion_r490983054", "createdAt": "2020-09-18T14:20:03Z", "author": {"login": "romseygeek"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldTypeTestCase.java", "diffHunk": "@@ -40,4 +40,48 @@ static QueryShardContext createMockQueryShardContext(boolean allowExpensiveQueri\n         return queryShardContext;\n     }\n \n+    protected boolean hasConfigurableDocValues() {\n+        return true;\n+    }\n+\n+    protected abstract MappedFieldType createDefaultFieldType();\n+\n+    protected MappedFieldType createFieldTypeWithDocValuesEnabled() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    protected MappedFieldType createFieldTypeWithDocValuesDisabled() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    protected boolean isAggregatableWhenDocValuesAreDisabled() {\n+        return false;\n+    }\n+\n+    protected boolean isAggregatableWhenDocValuesAreEnabled() {\n+        return true;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3MzkwMQ=="}, "originalCommit": {"oid": "ef4187872c0907477a31695af8642f95171048f4"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjM4MzMzOnYy", "diffSide": "RIGHT", "path": "plugins/analysis-icu/src/test/java/org/elasticsearch/index/mapper/CollationFieldTypeTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDo1NjoyOFrOHUQsiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNTowNTowNFrOHURBEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAwNzExMw==", "bodyText": "Do we still need these changes?", "url": "https://github.com/elastic/elasticsearch/pull/62631#discussion_r491007113", "createdAt": "2020-09-18T14:56:28Z", "author": {"login": "romseygeek"}, "path": "plugins/analysis-icu/src/test/java/org/elasticsearch/index/mapper/CollationFieldTypeTests.java", "diffHunk": "@@ -42,8 +42,12 @@\n \n     private static final Collator DEFAULT_COLLATOR = Collator.getInstance(ULocale.ROOT).freeze();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247da6bc63105291204f56fb84ac99ace7a76e3a"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxMjM3MQ==", "bodyText": "I think these are not strictly needed but don't hurt either. Mostly I got lazy while reverting all of the other changes :)", "url": "https://github.com/elastic/elasticsearch/pull/62631#discussion_r491012371", "createdAt": "2020-09-18T15:05:04Z", "author": {"login": "javanna"}, "path": "plugins/analysis-icu/src/test/java/org/elasticsearch/index/mapper/CollationFieldTypeTests.java", "diffHunk": "@@ -42,8 +42,12 @@\n \n     private static final Collator DEFAULT_COLLATOR = Collator.getInstance(ULocale.ROOT).freeze();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAwNzExMw=="}, "originalCommit": {"oid": "247da6bc63105291204f56fb84ac99ace7a76e3a"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjM4NDQ1OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/index/mapper/RangeFieldTypeTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDo1Njo0M1rOHUQtQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDo1Njo0M1rOHUQtQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAwNzI5OQ==", "bodyText": "Same here?", "url": "https://github.com/elastic/elasticsearch/pull/62631#discussion_r491007299", "createdAt": "2020-09-18T14:56:43Z", "author": {"login": "romseygeek"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/RangeFieldTypeTests.java", "diffHunk": "@@ -54,7 +54,6 @@\n \n public class RangeFieldTypeTests extends FieldTypeTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247da6bc63105291204f56fb84ac99ace7a76e3a"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzQ2MzY0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/mapper/DenseVectorFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDozNDoyOVrOHUbGcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDozNDoyOVrOHUbGcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE3NzU4NA==", "bodyText": "This approach makes sense to me. I wondered if we should FieldMapper#isAggregatable more robust/ general, now that there are field types that produce field data but don't support aggregations. But I think dense_vector is the only example right now, so we can avoid generalizing too early.", "url": "https://github.com/elastic/elasticsearch/pull/62631#discussion_r491177584", "createdAt": "2020-09-18T20:34:29Z", "author": {"login": "jtibshirani"}, "path": "x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/mapper/DenseVectorFieldMapper.java", "diffHunk": "@@ -129,6 +129,11 @@ public Query existsQuery(QueryShardContext context) {\n             return new DocValuesFieldExistsQuery(name());\n         }\n \n+        @Override\n+        public boolean isAggregatable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb3c0400dabd089fb47e04738d523679fa1c507"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3470, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}