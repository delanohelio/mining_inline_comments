{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNjYyMTU4", "number": 54936, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODowMDoxNFrODv4J4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODowMDoxNFrODv4J4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTI5Njk4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODowMDoxNFrOGCjcTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxOToxMlrOGC5LIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzMTAyMw==", "bodyText": "I wonder if we could/should combine this with org.elasticsearch.common.util.CollectionUtils#ensureNoSelfReferences(java.lang.Object, java.lang.String) somehow? It seems like technically we would want to use this in all the spots that we currently also use that method to validate script returns (maybe I'm missing some detail and we wouldn't need to do this kind of validation in other script return spots and only need the no-self-references there for some reason?). That way we'd save iterating through the object to validate twice?", "url": "https://github.com/elastic/elasticsearch/pull/54936#discussion_r405331023", "createdAt": "2020-04-08T08:00:14Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregator.java", "diffHunk": "@@ -90,6 +91,7 @@ public InternalAggregation buildAggregation(long owningBucketOrdinal) {\n         } else {\n             aggregation = aggState;\n         }\n+        StreamOutput.checkWriteable(aggregation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0921afa81308f0191f0315a6024601b5fdeb26a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MjA2OA==", "bodyText": "I'm not sure we need both in all cases. ensureNoSelfReferences guarantees we can do any operation on the object in question (not resulting in an infinite loop). Checking if the object is writeable is only needed when we plan to write the object to transfer to another node. For example, with scripted metric aggs, we don't every write the node local results from init or map scripts, only the output of combine here that would be transferred to the coordinating node for the final reduce.", "url": "https://github.com/elastic/elasticsearch/pull/54936#discussion_r405682068", "createdAt": "2020-04-08T17:10:56Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregator.java", "diffHunk": "@@ -90,6 +91,7 @@ public InternalAggregation buildAggregation(long owningBucketOrdinal) {\n         } else {\n             aggregation = aggState;\n         }\n+        StreamOutput.checkWriteable(aggregation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzMTAyMw=="}, "originalCommit": {"oid": "c0921afa81308f0191f0315a6024601b5fdeb26a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NzA3NA==", "bodyText": "Ok makes sense then :) => I think the approach is fine.", "url": "https://github.com/elastic/elasticsearch/pull/54936#discussion_r405687074", "createdAt": "2020-04-08T17:19:12Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregator.java", "diffHunk": "@@ -90,6 +91,7 @@ public InternalAggregation buildAggregation(long owningBucketOrdinal) {\n         } else {\n             aggregation = aggState;\n         }\n+        StreamOutput.checkWriteable(aggregation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzMTAyMw=="}, "originalCommit": {"oid": "c0921afa81308f0191f0315a6024601b5fdeb26a"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1174, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}