{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjc5Mzkw", "number": 51105, "title": "[DOCS] Expands the documentation of Node Query Cache", "bodyText": "This PR adds further information to the Node Query Cache documentation.\nRelated issue that this PR closes #47955\nPreview: http://elasticsearch_51105.docs-preview.app.elstc.co/guide/en/elasticsearch/reference/master/query-cache.html", "createdAt": "2020-01-16T14:38:41Z", "url": "https://github.com/elastic/elasticsearch/pull/51105", "merged": true, "mergeCommit": {"oid": "451eb1fa1f0591083ea0bf58a6cea6ab3b57e1d1"}, "closed": true, "closedAt": "2020-01-20T10:11:58Z", "author": {"login": "szabosteve"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb67H-ngH2gAyMzYzNjc5MzkwOmFjMDIwNGU5NGY5ZjVmMTM2NWQzYmZlN2Q5N2E0NmJjYjc0ZWFlNmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8JP-ngH2gAyMzYzNjc5MzkwOmJmOGI4M2Q0ODk0YjdjY2U3MGM4ZGJhNTg2OTBmNGVlOWVmMGM4ZmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a", "author": {"user": {"login": "szabosteve", "name": "Istv\u00e1n Zolt\u00e1n Szab\u00f3"}}, "url": "https://github.com/elastic/elasticsearch/commit/ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a", "committedDate": "2020-01-16T14:35:39Z", "message": "[DOCS] Expands the documentation of Node Query Cache."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTA1NzY0", "url": "https://github.com/elastic/elasticsearch/pull/51105#pullrequestreview-344905764", "createdAt": "2020-01-18T00:26:38Z", "commit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDoyNjozOVrOFfIZLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDozNjowOVrOFfIe5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4NzY5Mg==", "bodyText": "I'd take the opportunity to tighten this up a bit.\nThe results of queries used in the filter context are cached in the node query cache for fast lookup.\nThe cache uses an LRU eviction policy: when the cache is full, the least recently used query results are evicted to make way for new data. You cannot inspect the contents of the query cache.", "url": "https://github.com/elastic/elasticsearch/pull/51105#discussion_r368187692", "createdAt": "2020-01-18T00:26:39Z", "author": {"login": "debadair"}, "path": "docs/reference/modules/indices/query_cache.asciidoc", "diffHunk": "@@ -1,27 +1,35 @@\n [[query-cache]]\n === Node Query Cache\n \n-The query cache is responsible for caching the results of queries.\n-There is one queries cache per node that is shared by all shards.\n-The cache implements an LRU eviction policy: when a cache becomes full, the\n-least recently used data is evicted to make way for new data.\n-It is not possible to look at the contents being cached.\n+The query cache is responsible for caching the results of queries. There is one \n+queries cache per node that is shared by all shards. The cache implements an LRU \n+eviction policy: when a cache becomes full, the least recently used data is \n+evicted to make way for new data. It is not possible to look at the contents \n+being cached.\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4ODMyOQ==", "bodyText": "If you mention that this cache is for queries used in a filter context above, you can probably just focus on the exceptions here:\nTerm queries and queries used outside of a filter context are not eligible for caching.", "url": "https://github.com/elastic/elasticsearch/pull/51105#discussion_r368188329", "createdAt": "2020-01-18T00:30:46Z", "author": {"login": "debadair"}, "path": "docs/reference/modules/indices/query_cache.asciidoc", "diffHunk": "@@ -1,27 +1,35 @@\n [[query-cache]]\n === Node Query Cache\n \n-The query cache is responsible for caching the results of queries.\n-There is one queries cache per node that is shared by all shards.\n-The cache implements an LRU eviction policy: when a cache becomes full, the\n-least recently used data is evicted to make way for new data.\n-It is not possible to look at the contents being cached.\n+The query cache is responsible for caching the results of queries. There is one \n+queries cache per node that is shared by all shards. The cache implements an LRU \n+eviction policy: when a cache becomes full, the least recently used data is \n+evicted to make way for new data. It is not possible to look at the contents \n+being cached.\n \n-The query cache only caches queries which are being used in a filter context.\n+The query cache only caches queries which are being used in a filter context. \n+However, term queries are not eligible for caching, not even in the filter \n+context.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4ODU5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It caches up to 10000 queries in up to 10% of the total heap space by default. \n          \n          \n            \n            By default, the cache holds a maximum of 10000 queries in up to 10% of the total heap space.", "url": "https://github.com/elastic/elasticsearch/pull/51105#discussion_r368188590", "createdAt": "2020-01-18T00:32:19Z", "author": {"login": "debadair"}, "path": "docs/reference/modules/indices/query_cache.asciidoc", "diffHunk": "@@ -1,27 +1,35 @@\n [[query-cache]]\n === Node Query Cache\n \n-The query cache is responsible for caching the results of queries.\n-There is one queries cache per node that is shared by all shards.\n-The cache implements an LRU eviction policy: when a cache becomes full, the\n-least recently used data is evicted to make way for new data.\n-It is not possible to look at the contents being cached.\n+The query cache is responsible for caching the results of queries. There is one \n+queries cache per node that is shared by all shards. The cache implements an LRU \n+eviction policy: when a cache becomes full, the least recently used data is \n+evicted to make way for new data. It is not possible to look at the contents \n+being cached.\n \n-The query cache only caches queries which are being used in a filter context.\n+The query cache only caches queries which are being used in a filter context. \n+However, term queries are not eligible for caching, not even in the filter \n+context.\n+\n+It caches up to 10000 queries in up to 10% of the total heap space by default. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4ODkwNQ==", "bodyText": "I'd probably switch this to the active voice:\nTo determine if a query is eligible for caching, Elasticsearch maintains a query history to track occurrences.", "url": "https://github.com/elastic/elasticsearch/pull/51105#discussion_r368188905", "createdAt": "2020-01-18T00:34:11Z", "author": {"login": "debadair"}, "path": "docs/reference/modules/indices/query_cache.asciidoc", "diffHunk": "@@ -1,27 +1,35 @@\n [[query-cache]]\n === Node Query Cache\n \n-The query cache is responsible for caching the results of queries.\n-There is one queries cache per node that is shared by all shards.\n-The cache implements an LRU eviction policy: when a cache becomes full, the\n-least recently used data is evicted to make way for new data.\n-It is not possible to look at the contents being cached.\n+The query cache is responsible for caching the results of queries. There is one \n+queries cache per node that is shared by all shards. The cache implements an LRU \n+eviction policy: when a cache becomes full, the least recently used data is \n+evicted to make way for new data. It is not possible to look at the contents \n+being cached.\n \n-The query cache only caches queries which are being used in a filter context.\n+The query cache only caches queries which are being used in a filter context. \n+However, term queries are not eligible for caching, not even in the filter \n+context.\n+\n+It caches up to 10000 queries in up to 10% of the total heap space by default. \n+To determine if a query is eligible for caching, a history of queries is \n+maintained to track occurrences.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4OTE1Nw==", "bodyText": "Maybe:\nBecause caching is per segment, merging segments can invalidate cached queries.", "url": "https://github.com/elastic/elasticsearch/pull/51105#discussion_r368189157", "createdAt": "2020-01-18T00:36:09Z", "author": {"login": "debadair"}, "path": "docs/reference/modules/indices/query_cache.asciidoc", "diffHunk": "@@ -1,27 +1,35 @@\n [[query-cache]]\n === Node Query Cache\n \n-The query cache is responsible for caching the results of queries.\n-There is one queries cache per node that is shared by all shards.\n-The cache implements an LRU eviction policy: when a cache becomes full, the\n-least recently used data is evicted to make way for new data.\n-It is not possible to look at the contents being cached.\n+The query cache is responsible for caching the results of queries. There is one \n+queries cache per node that is shared by all shards. The cache implements an LRU \n+eviction policy: when a cache becomes full, the least recently used data is \n+evicted to make way for new data. It is not possible to look at the contents \n+being cached.\n \n-The query cache only caches queries which are being used in a filter context.\n+The query cache only caches queries which are being used in a filter context. \n+However, term queries are not eligible for caching, not even in the filter \n+context.\n+\n+It caches up to 10000 queries in up to 10% of the total heap space by default. \n+To determine if a query is eligible for caching, a history of queries is \n+maintained to track occurrences.\n+\n+Caching is done on a per segment basis if a segment contains at least 10000 \n+documents and the segment has at least 3% of the total documents of a shard. Due \n+to the per segment basis, segment merging can invalidate a cached query.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5bd87d3f0cdd2ce20e512cfd99a719952a3b07c", "author": {"user": {"login": "szabosteve", "name": "Istv\u00e1n Zolt\u00e1n Szab\u00f3"}}, "url": "https://github.com/elastic/elasticsearch/commit/d5bd87d3f0cdd2ce20e512cfd99a719952a3b07c", "committedDate": "2020-01-20T08:58:51Z", "message": "Update docs/reference/modules/indices/query_cache.asciidoc\n\nCo-Authored-By: debadair <debadair@elastic.co>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf8b83d4894b7cce70c8dba58690f4ee9ef0c8fd", "author": {"user": {"login": "szabosteve", "name": "Istv\u00e1n Zolt\u00e1n Szab\u00f3"}}, "url": "https://github.com/elastic/elasticsearch/commit/bf8b83d4894b7cce70c8dba58690f4ee9ef0c8fd", "committedDate": "2020-01-20T09:36:59Z", "message": "[DOCS] Addresses feedback."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2914, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}