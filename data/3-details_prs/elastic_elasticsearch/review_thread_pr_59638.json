{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTkyODAz", "number": 59638, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOTo0NzoxMlrOEO1UsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOTo0NzoxMlrOEO1UsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTg5MTY5OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/SemanticHeaderPhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOTo0NzoxMlrOGyNVVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjowNDowNlrOGyx5LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMwMDQzOQ==", "bodyText": "Check canonicalTypeNameParameters.size() != parameterNames.size()?", "url": "https://github.com/elastic/elasticsearch/pull/59638#discussion_r455300439", "createdAt": "2020-07-15T19:47:12Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/SemanticHeaderPhase.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.painless.phase;\n+\n+import org.elasticsearch.painless.lookup.PainlessLookup;\n+import org.elasticsearch.painless.node.SClass;\n+import org.elasticsearch.painless.node.SFunction;\n+import org.elasticsearch.painless.symbol.FunctionTable;\n+import org.elasticsearch.painless.symbol.ScriptScope;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class SemanticHeaderPhase extends UserTreeBaseVisitor<ScriptScope, Void> {\n+\n+    @Override\n+    public Void visitClass(SClass userClassNode, ScriptScope scriptScope) {\n+        for (SFunction userFunctionNode : userClassNode.getFunctionNodes()) {\n+            visitFunction(userFunctionNode, scriptScope);\n+        }\n+\n+        return null;\n+    }\n+\n+    @Override\n+    public Void visitFunction(SFunction userFunctionNode, ScriptScope scriptScope) {\n+        String functionName = userFunctionNode.getFunctionName();\n+        List<String> canonicalTypeNameParameters = userFunctionNode.getCanonicalTypeNameParameters();\n+        List<String> parameterNames = userFunctionNode.getParameterNames();\n+        int parameterCount = canonicalTypeNameParameters.size();\n+\n+        if (parameterCount != parameterNames.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af98c81ac67701a350431d1d0c1e0059d756a33a"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5OTQzNg==", "bodyText": "Good catch. Guessing this was left over from prior to the refactor where this was actually re-used more than once. Fixed.", "url": "https://github.com/elastic/elasticsearch/pull/59638#discussion_r455899436", "createdAt": "2020-07-16T16:04:06Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/SemanticHeaderPhase.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.painless.phase;\n+\n+import org.elasticsearch.painless.lookup.PainlessLookup;\n+import org.elasticsearch.painless.node.SClass;\n+import org.elasticsearch.painless.node.SFunction;\n+import org.elasticsearch.painless.symbol.FunctionTable;\n+import org.elasticsearch.painless.symbol.ScriptScope;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class SemanticHeaderPhase extends UserTreeBaseVisitor<ScriptScope, Void> {\n+\n+    @Override\n+    public Void visitClass(SClass userClassNode, ScriptScope scriptScope) {\n+        for (SFunction userFunctionNode : userClassNode.getFunctionNodes()) {\n+            visitFunction(userFunctionNode, scriptScope);\n+        }\n+\n+        return null;\n+    }\n+\n+    @Override\n+    public Void visitFunction(SFunction userFunctionNode, ScriptScope scriptScope) {\n+        String functionName = userFunctionNode.getFunctionName();\n+        List<String> canonicalTypeNameParameters = userFunctionNode.getCanonicalTypeNameParameters();\n+        List<String> parameterNames = userFunctionNode.getParameterNames();\n+        int parameterCount = canonicalTypeNameParameters.size();\n+\n+        if (parameterCount != parameterNames.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMwMDQzOQ=="}, "originalCommit": {"oid": "af98c81ac67701a350431d1d0c1e0059d756a33a"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2322, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}