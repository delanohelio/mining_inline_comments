{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyODQ3NTAz", "number": 51006, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMzoxNDowNVrODYK2aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMzoxNDowNVrODYK2aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjcwMTg0OnYy", "diffSide": "RIGHT", "path": "qa/repository-multi-version/src/test/java/org/elasticsearch/upgrades/MultiVersionRepositoryAccessIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMzoxNDowNVrOFd31NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMzoxNDowNVrOFd31NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg2Nzc2NQ==", "bodyText": "remove this?", "url": "https://github.com/elastic/elasticsearch/pull/51006#discussion_r366867765", "createdAt": "2020-01-15T13:14:05Z", "author": {"login": "ywelsch"}, "path": "qa/repository-multi-version/src/test/java/org/elasticsearch/upgrades/MultiVersionRepositoryAccessIT.java", "diffHunk": "@@ -269,14 +266,20 @@ private void deleteSnapshot(RestHighLevelClient client, String repoName, String\n         }\n     }\n \n-    private static void ensureSnapshotRestoreWorks(RestHighLevelClient client, String repoName, String name,\n-                                                   int shards) throws IOException {\n+    @SuppressWarnings(\"unchecked\")\n+    private void ensureSnapshotRestoreWorks(String repoName, String name, int shards) throws IOException {\n         wipeAllIndices();\n-        final RestoreInfo restoreInfo =\n-            client.snapshot().restore(new RestoreSnapshotRequest().repository(repoName).snapshot(name).waitForCompletion(true),\n-                RequestOptions.DEFAULT).getRestoreInfo();\n-        assertThat(restoreInfo.failedShards(), is(0));\n-        assertThat(restoreInfo.successfulShards(), equalTo(shards));\n+        try (InputStream entity = client().performRequest(\n+            new Request(\"POST\", \"/_snapshot/\" + repoName + \"/\" + name + \"/_restore?wait_for_completion=true\")).getEntity().getContent();\n+            XContentParser parser = JsonXContent.jsonXContent.createParser(\n+            xContentRegistry(), DeprecationHandler.THROW_UNSUPPORTED_OPERATION, entity)) {\n+            final Map<String, Object> raw = parser.map();\n+            logger.error(raw);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14debdf591cf7bf579190fd1fba6d418b5f0a383"}, "originalPosition": 101}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4584, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}