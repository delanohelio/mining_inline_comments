{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3Mzc4Njcx", "number": 61093, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzo1MjoxMFrOEYKwRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDozOTowNVrOEYOiaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzc3NDc4OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzo1MjoxMFrOHAXCig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTowNToyMVrOHAZtbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEzOTUzMA==", "bodyText": "Should we use a Provider here so we an avoid any future issues of configuration ordering if individual modules override target compatibility version?", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470139530", "createdAt": "2020-08-13T17:52:10Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -173,21 +173,14 @@ public static void configureCompile(Project project) {\n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n \n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n                 final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n-\n+                compileOptions.getRelease().set(Integer.parseInt(targetCompatibilityVersion.getMajorVersion()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3f9b29f1ecfdfcd5d10744d314c587ceb468e9c"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE4MzI3Nw==", "bodyText": "strictly speaking not required as this is done in an afterEvaluate block, BUT it brings use closer to getting rid of that   afterEvaluate . On it.", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470183277", "createdAt": "2020-08-13T19:05:21Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -173,21 +173,14 @@ public static void configureCompile(Project project) {\n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n \n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n                 final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n-\n+                compileOptions.getRelease().set(Integer.parseInt(targetCompatibilityVersion.getMajorVersion()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEzOTUzMA=="}, "originalCommit": {"oid": "b3f9b29f1ecfdfcd5d10744d314c587ceb468e9c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODM4MTAwOnYy", "diffSide": "LEFT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDozNToxMFrOHAcrsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDozNToxMFrOHAcrsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMTk4Nw==", "bodyText": "just removed unused code", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470231987", "createdAt": "2020-08-13T20:35:10Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -140,14 +139,6 @@ public static void configureCompile(Project project) {\n         java.setSourceCompatibility(BuildParams.getMinimumRuntimeVersion());\n         java.setTargetCompatibility(BuildParams.getMinimumRuntimeVersion());\n \n-        Function<File, String> canonicalPath = file -> {\n-            try {\n-                return file.getCanonicalPath();\n-            } catch (IOException e) {\n-                throw new GradleException(\"Failed to get canonical path for \" + file, e);\n-            }\n-        };\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODM4MjU0OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDozNTozNVrOHAcsjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOToyODowOVrOHAt-Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMjIwNQ==", "bodyText": "TODO: discuss workaround and fix for the need with gradle core team", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470232205", "createdAt": "2020-08-13T20:35:35Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -172,26 +163,26 @@ public static void configureCompile(Project project) {\n \n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n-\n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n-\n+                compileTask.getConventionMapping().map(\"sourceCompatibility\", () -> java.getSourceCompatibility().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ2Nzg4Nw==", "bodyText": "raised this issue in the gradle slack channel: https://gradle-community.slack.com/archives/CA7UM03V3/p1597391556271600", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470467887", "createdAt": "2020-08-14T07:53:38Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -172,26 +163,26 @@ public static void configureCompile(Project project) {\n \n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n-\n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n-\n+                compileTask.getConventionMapping().map(\"sourceCompatibility\", () -> java.getSourceCompatibility().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMjIwNQ=="}, "originalCommit": {"oid": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUxNTI5MA==", "bodyText": "gradle/gradle#14141", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470515290", "createdAt": "2020-08-14T09:28:09Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -172,26 +163,26 @@ public static void configureCompile(Project project) {\n \n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n-\n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n-\n+                compileTask.getConventionMapping().map(\"sourceCompatibility\", () -> java.getSourceCompatibility().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMjIwNQ=="}, "originalCommit": {"oid": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODM5MDA3OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDozNzozNlrOHAcw1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNzo1NjozNFrOHArKgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMzMwMw==", "bodyText": "TODO: the only left reason for this afterEvaluate is that compileOptions.get/setArguments(...) is not using the provider api. Discuss this and maybe raise a ticket at gradle core.", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470233303", "createdAt": "2020-08-13T20:37:36Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -140,14 +139,6 @@ public static void configureCompile(Project project) {\n         java.setSourceCompatibility(BuildParams.getMinimumRuntimeVersion());\n         java.setTargetCompatibility(BuildParams.getMinimumRuntimeVersion());\n \n-        Function<File, String> canonicalPath = file -> {\n-            try {\n-                return file.getCanonicalPath();\n-            } catch (IOException e) {\n-                throw new GradleException(\"Failed to get canonical path for \" + file, e);\n-            }\n-        };\n-\n         project.afterEvaluate(p -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ2OTI1MA==", "bodyText": "no concrete plans from the gradle core team except \"Before the heat death of the universe, yes.\"", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470469250", "createdAt": "2020-08-14T07:56:34Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -140,14 +139,6 @@ public static void configureCompile(Project project) {\n         java.setSourceCompatibility(BuildParams.getMinimumRuntimeVersion());\n         java.setTargetCompatibility(BuildParams.getMinimumRuntimeVersion());\n \n-        Function<File, String> canonicalPath = file -> {\n-            try {\n-                return file.getCanonicalPath();\n-            } catch (IOException e) {\n-                throw new GradleException(\"Failed to get canonical path for \" + file, e);\n-            }\n-        };\n-\n         project.afterEvaluate(p -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMzMwMw=="}, "originalCommit": {"oid": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODM5NDY3OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDozOTowNVrOHAczqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDo0MTowMlrOHAc4Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzNDAyNw==", "bodyText": "What is this line doing exactly? Are we just overriding the default convention mapping?", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470234027", "createdAt": "2020-08-13T20:39:05Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -172,26 +163,26 @@ public static void configureCompile(Project project) {\n \n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n-\n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n-\n+                compileTask.getConventionMapping().map(\"sourceCompatibility\", () -> java.getSourceCompatibility().toString());\n+                compileTask.getConventionMapping().map(\"targetCompatibility\", () -> java.getTargetCompatibility().toString());\n+                compileOptions.getRelease().set(releaseVersionProviderFromCompileTask(project, compileTask));\n             });\n             // also apply release flag to groovy, which is used in build-tools\n             project.getTasks().withType(GroovyCompile.class).configureEach(compileTask -> {\n-\n                 // TODO: this probably shouldn't apply to groovy at all?\n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                final List<String> compilerArgs = compileTask.getOptions().getCompilerArgs();\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n+                compileTask.setSourceCompatibility(compileTask.getSourceCompatibility());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzNTE2Ng==", "bodyText": "oversight. already removed. The --release value is only taken for JavaCompile tasks", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470235166", "createdAt": "2020-08-13T20:41:02Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -172,26 +163,26 @@ public static void configureCompile(Project project) {\n \n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n-\n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n-\n+                compileTask.getConventionMapping().map(\"sourceCompatibility\", () -> java.getSourceCompatibility().toString());\n+                compileTask.getConventionMapping().map(\"targetCompatibility\", () -> java.getTargetCompatibility().toString());\n+                compileOptions.getRelease().set(releaseVersionProviderFromCompileTask(project, compileTask));\n             });\n             // also apply release flag to groovy, which is used in build-tools\n             project.getTasks().withType(GroovyCompile.class).configureEach(compileTask -> {\n-\n                 // TODO: this probably shouldn't apply to groovy at all?\n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                final List<String> compilerArgs = compileTask.getOptions().getCompilerArgs();\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n+                compileTask.setSourceCompatibility(compileTask.getSourceCompatibility());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzNDAyNw=="}, "originalCommit": {"oid": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2481, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}