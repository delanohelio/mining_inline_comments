{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNzM1MDc1", "number": 58056, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTowNjozNVrOEFF8Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTowNjozNVrOEFF8Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzc1NzA3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTowNjozNVrOGjHgkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToxMzozNlrOGjHwBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ3NjM3MA==", "bodyText": "Could also go for the write pool here (as suggested in #58018) but I figured I wouldn't change that in this PR.", "url": "https://github.com/elastic/elasticsearch/pull/58056#discussion_r439476370", "createdAt": "2020-06-12T15:06:35Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java", "diffHunk": "@@ -366,13 +367,11 @@ private void performTranslogOps(final RecoveryTranslogOperationsRequest request,\n                 observer.waitForNextChange(new ClusterStateObserver.Listener() {\n                     @Override\n                     public void onNewClusterState(ClusterState state) {\n-                        try {\n+                        threadPool.generic().execute(ActionRunnable.wrap(listener, l -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1daee47e8541425645e8eddc74bb5a732b14cdff"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MDMyNw==", "bodyText": "+1", "url": "https://github.com/elastic/elasticsearch/pull/58056#discussion_r439480327", "createdAt": "2020-06-12T15:13:36Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java", "diffHunk": "@@ -366,13 +367,11 @@ private void performTranslogOps(final RecoveryTranslogOperationsRequest request,\n                 observer.waitForNextChange(new ClusterStateObserver.Listener() {\n                     @Override\n                     public void onNewClusterState(ClusterState state) {\n-                        try {\n+                        threadPool.generic().execute(ActionRunnable.wrap(listener, l -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ3NjM3MA=="}, "originalCommit": {"oid": "1daee47e8541425645e8eddc74bb5a732b14cdff"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1591, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}