{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTYwMzkw", "number": 60841, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODo1MzowMVrOEW6wyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODo1MzowMVrOEW6wyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDY2ODkxOnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODo1MzowMVrOG-bKQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOTowMDoyNlrOG-baDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwOTg5MQ==", "bodyText": "This semi is lonely.", "url": "https://github.com/elastic/elasticsearch/pull/60841#discussion_r468109891", "createdAt": "2020-08-10T18:53:01Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1368,20 +1372,31 @@ public void visitBrace(EBrace userBraceNode, ScriptScope scriptScope) {\n         Class<?> prefixValueType = scriptScope.getDecoration(userBraceNode.getPrefixNode(), ValueType.class).getValueType();\n \n         if (prefixValueType.isArray()) {\n+            FlipArrayIndex irFlipArrayIndex = new FlipArrayIndex();\n+            irFlipArrayIndex.setLocation(userBraceNode.getIndexNode().getLocation());\n+            irFlipArrayIndex.setExpressionType(int.class);\n+            irFlipArrayIndex.setIndexNode(injectCast(userBraceNode.getIndexNode(), scriptScope));\n+\n             BraceSubNode irBraceSubNode = new BraceSubNode();\n-            irBraceSubNode.setChildNode(injectCast(userBraceNode.getIndexNode(), scriptScope));\n+            irBraceSubNode.setIndexNode(irFlipArrayIndex);\n             irBraceSubNode.setLocation(userBraceNode.getLocation());\n             irBraceSubNode.setExpressionType(scriptScope.getDecoration(userBraceNode, ValueType.class).getValueType());\n             irExpressionNode = irBraceSubNode;\n         } else if (prefixValueType == def.class) {\n+            ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ee21c7cba9d202259bac2e25edda5994341fe66"}, "originalPosition": 382}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzkzNA==", "bodyText": "Good catch. Fixed!", "url": "https://github.com/elastic/elasticsearch/pull/60841#discussion_r468113934", "createdAt": "2020-08-10T19:00:26Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1368,20 +1372,31 @@ public void visitBrace(EBrace userBraceNode, ScriptScope scriptScope) {\n         Class<?> prefixValueType = scriptScope.getDecoration(userBraceNode.getPrefixNode(), ValueType.class).getValueType();\n \n         if (prefixValueType.isArray()) {\n+            FlipArrayIndex irFlipArrayIndex = new FlipArrayIndex();\n+            irFlipArrayIndex.setLocation(userBraceNode.getIndexNode().getLocation());\n+            irFlipArrayIndex.setExpressionType(int.class);\n+            irFlipArrayIndex.setIndexNode(injectCast(userBraceNode.getIndexNode(), scriptScope));\n+\n             BraceSubNode irBraceSubNode = new BraceSubNode();\n-            irBraceSubNode.setChildNode(injectCast(userBraceNode.getIndexNode(), scriptScope));\n+            irBraceSubNode.setIndexNode(irFlipArrayIndex);\n             irBraceSubNode.setLocation(userBraceNode.getLocation());\n             irBraceSubNode.setExpressionType(scriptScope.getDecoration(userBraceNode, ValueType.class).getValueType());\n             irExpressionNode = irBraceSubNode;\n         } else if (prefixValueType == def.class) {\n+            ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwOTg5MQ=="}, "originalCommit": {"oid": "9ee21c7cba9d202259bac2e25edda5994341fe66"}, "originalPosition": 382}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2593, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}