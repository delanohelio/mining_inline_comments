{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0ODc3MzU5", "number": 53228, "title": "Compatible version of typed Index And Get API", "bodyText": "Providing a REST infrastructure to handle compatible APIs. Rest APIs that were removed in 8 will be available only if an HTTP request had a compatible header. At the moment is is expecting an Accept header to contain application/vnd.elasticsearch+json;compatible-with=7. This might be changed though when #52370 is resolved.\nThe REST changes contain\n\n\nenriching RestRequest with a parameter Compatible-With. The value is taken from Accept header. See RestRequest creation. Used when deciding if a request to a compatible handler can be dispatched. See RestController.\n//TODO this at the moment can be simplified to only use a value from a header. However in rest layer we often have only access to Params, so headers won't be accessible when implementing some compatible code\n\n\nenriching XContentBuilder with a compatible version value. See AbstractRestChannel. Used when shape of a response is changed. see DocWriteResponse and GetResult\n\n\nMediaType parsing change - see XContentType. because we expect a different media type now application/vnd.elasticsearch+json;compatible-with=7 (when previously application/json or similar)\n\n\ntesting changes - compat tests will have a compatible header set. see AbstractCompatRestTest.java\n\n\nCompatible rest handlers - based on RestIndexAction and RestGetAction. See modules/rest-compatibility. These extend already existing handlers and register them in a RestCompatPlugin under a typed paths. They will only be accessible when a compatible header is present (use of compatibilityRequired method from RestHandler interface)\n\n\nWithout this PR 283 tests from 7.x are failing. - rest api spec tests only\nwith this PR 228 tests are passing - with almost all tests from index/* package passed (missing 2 tests that require change for include_type_param, to be added in a new PR)\nrelates #51816", "createdAt": "2020-03-06T15:21:31Z", "url": "https://github.com/elastic/elasticsearch/pull/53228", "merged": true, "mergeCommit": {"oid": "878ed120148968965b87b9ca2ba4e31a5bc9fe81"}, "closed": true, "closedAt": "2020-03-25T13:19:57Z", "author": {"login": "pgomulka"}, "timelineItems": {"totalCount": 50, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKqCi1gH2gAyMzg0ODc3MzU5OmE0ZjgwY2FlY2FlY2FmNzdmYzRhZDNhODg4MDI4MTYwZmNhZjE5MmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ5dRfAFqTM4MDY5NTk1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a4f80caecaecaf77fc4ad3a888028160fcaf192e", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a4f80caecaecaf77fc4ad3a888028160fcaf192e", "committedDate": "2020-03-05T11:44:07Z", "message": "rest index action - 283 nofix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c99b81800e544cc45c946f3dad42a167997fd7ca", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/c99b81800e544cc45c946f3dad42a167997fd7ca", "committedDate": "2020-03-06T10:16:50Z", "message": "Index and Get and Infra\n\n1226 tests, 227 failures, 16ignored\n23 / 2 failled in index/*\nfailing\nCompatRestIT. test {yaml=index/70_mix_typeless_typeful/Index call that\nintroduces new field mappings}\nCompatRestIT. test {yaml=index/70_mix_typeless_typeful/Index with\ntypeless API on an index that has types}"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9c0e55319bbc7f2f8ae6522d5347713ad1e406e", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/c9c0e55319bbc7f2f8ae6522d5347713ad1e406e", "committedDate": "2020-03-06T15:19:50Z", "message": "minor tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "258542ee492623977592838f24c9950ead6bbd60", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/258542ee492623977592838f24c9950ead6bbd60", "committedDate": "2020-03-06T18:35:18Z", "message": "compile fixees"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "548fbd902235830bfc0dcf5cba478f0e70f96894", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/548fbd902235830bfc0dcf5cba478f0e70f96894", "committedDate": "2020-03-09T09:54:02Z", "message": "Merge branch 'compat_rest_api' into compat/type-index-get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dbea8a9650e63c2a7938a156639889523097a2f", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/0dbea8a9650e63c2a7938a156639889523097a2f", "committedDate": "2020-03-09T13:07:47Z", "message": "disable testing conventions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTYyNDQx", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-371562441", "createdAt": "2020-03-09T22:08:47Z", "commit": {"oid": "0dbea8a9650e63c2a7938a156639889523097a2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjowODo0N1rOFz7DMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjowODo0N1rOFz7DMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4OTE2OQ==", "bodyText": "Until we defined a better approach, can you start adding in something like this\nassert Version.CURRENT.major == 8 : \"REST API compatilbity for version 7 is only supported on version 8\";```", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r389989169", "createdAt": "2020-03-09T22:08:47Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/rest/action/document/RestGetAction.java", "diffHunk": "@@ -86,4 +100,30 @@ protected RestStatus getStatus(final GetResponse response) {\n         });\n     }\n \n+    public static class CompatibleRestGetAction extends RestGetAction {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dbea8a9650e63c2a7938a156639889523097a2f"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTY1MTMw", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-371565130", "createdAt": "2020-03-09T22:14:38Z", "commit": {"oid": "0dbea8a9650e63c2a7938a156639889523097a2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjoxNDozOFrOFz7MKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjoxNDozOFrOFz7MKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk5MTQ2Ng==", "bodyText": "Can you add a TODO in here to ensure we get some buy in on #52370 before we merge the header format.", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r389991466", "createdAt": "2020-03-09T22:14:38Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/rest/CompatibleHandlers.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.elasticsearch.rest;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.index.mapper.MapperService;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Consumer;\n+import java.util.function.UnaryOperator;\n+\n+public class CompatibleHandlers {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dbea8a9650e63c2a7938a156639889523097a2f"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cf6bc1ef4a7eeec3134accc607b4a89d34e1ab7", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/4cf6bc1ef4a7eeec3134accc607b4a89d34e1ab7", "committedDate": "2020-03-10T12:40:06Z", "message": "assertions and todo for header fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ac22b1eeb2deb05f63dbd197255e48c927bf0a5", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/3ac22b1eeb2deb05f63dbd197255e48c927bf0a5", "committedDate": "2020-03-10T19:18:17Z", "message": "more tests and cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38721fed27dbb76d6c71832ba5a1add83b3f6f54", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/38721fed27dbb76d6c71832ba5a1add83b3f6f54", "committedDate": "2020-03-11T00:36:12Z", "message": "Merge remote-tracking branch 'upstream/compat_rest_api' into compat/type-index-get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2db19f600d4e9f8572253cd7a155ad9aee7d872", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/f2db19f600d4e9f8572253cd7a155ad9aee7d872", "committedDate": "2020-03-11T00:45:53Z", "message": "introduce a module to house the REST code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b83b4ce8f6da0e244dc670406858d6c98c06e65d", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/b83b4ce8f6da0e244dc670406858d6c98c06e65d", "committedDate": "2020-03-11T02:03:32Z", "message": "fix preCommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf1d340cfce333197afb727afe8821c22071d3e0", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf1d340cfce333197afb727afe8821c22071d3e0", "committedDate": "2020-03-11T08:33:43Z", "message": "Merge pull request #18 from jakelandis/introduce_module\n\nIntroduce module for compat code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/5c4a02dc991b3de482eb271b0da1cbce5b397071", "committedDate": "2020-03-11T09:37:04Z", "message": "move restindex compatible handlers to rest-compatibility module. 228 failing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzQ1NzY0", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372745764", "createdAt": "2020-03-11T13:16:34Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoxNjozNFrOF02YKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoxNjozNFrOF02YKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MTE5Mw==", "bodyText": "I think the above can be removed ?", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r390961193", "createdAt": "2020-03-11T13:16:34Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/rest/action/document/RestIndexAction.java", "diffHunk": "@@ -19,26 +19,40 @@\n \n package org.elasticsearch.rest.action.document;\n \n+import org.apache.logging.log4j.LogManager;\n import org.elasticsearch.Version;\n import org.elasticsearch.action.index.IndexRequest;\n import org.elasticsearch.action.support.ActiveShardCount;\n import org.elasticsearch.client.node.NodeClient;\n import org.elasticsearch.cluster.node.DiscoveryNodes;\n+import org.elasticsearch.common.logging.DeprecationLogger;\n import org.elasticsearch.index.VersionType;\n import org.elasticsearch.rest.BaseRestHandler;\n+import org.elasticsearch.rest.CompatibleHandlers;\n import org.elasticsearch.rest.RestRequest;\n import org.elasticsearch.rest.action.RestActions;\n import org.elasticsearch.rest.action.RestStatusToXContentListener;\n \n import java.io.IOException;\n import java.util.List;\n import java.util.Locale;\n+import java.util.function.Consumer;\n import java.util.function.Supplier;\n \n+import static java.util.Arrays.asList;\n+import static java.util.Collections.singletonList;\n+import static java.util.Collections.unmodifiableList;\n import static org.elasticsearch.rest.RestRequest.Method.POST;\n import static org.elasticsearch.rest.RestRequest.Method.PUT;\n \n public class RestIndexAction extends BaseRestHandler {\n+    private static final String TYPES_DEPRECATION_MESSAGE = \"[types removal] Specifying types in document \" +\n+        \"index requests is deprecated, use the typeless endpoints instead (/{index}/_doc/{id}, /{index}/_doc, \" +\n+        \"or /{index}/_create/{id}).\";\n+    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(\n+        LogManager.getLogger(RestIndexAction.class));\n+    private static final Consumer<RestRequest> DEPRECATION_WARNING =\n+        r -> deprecationLogger.deprecatedAndMaybeLog(\"index_with_types\",TYPES_DEPRECATION_MESSAGE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzU0ODY5", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372754869", "createdAt": "2020-03-11T13:27:35Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoyNzozNVrOF02zsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoyNzozNVrOF02zsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2ODI0Mw==", "bodyText": "Can we make this major version - 1 , so that when v9 it is auto incremented to 8 ?", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r390968243", "createdAt": "2020-03-11T13:27:35Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/rest/CompatibleHandlers.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest;\n+\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+\n+import java.util.function.Consumer;\n+\n+public class CompatibleHandlers {\n+\n+    /**\n+     * TODO revisit when https://github.com/elastic/elasticsearch/issues/52370 is resolved\n+     */\n+    public static final String COMPATIBLE_HEADER = \"Accept\";\n+    public static final String COMPATIBLE_PARAMS_KEY = \"Compatible-With\";\n+    public static final String COMPATIBLE_VERSION = \"7\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzU1OTAy", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372755902", "createdAt": "2020-03-11T13:28:47Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoyODo0N1rOF0220A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoyODo0N1rOF0220A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTA0MA==", "bodyText": "this method and the one below feel like REST v7 concerns. Can they be moved to the module ?\n(which would leave this class pretty empty and possibly move the constant strings elsewhere ?)", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r390969040", "createdAt": "2020-03-11T13:28:47Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/rest/CompatibleHandlers.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest;\n+\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+\n+import java.util.function.Consumer;\n+\n+public class CompatibleHandlers {\n+\n+    /**\n+     * TODO revisit when https://github.com/elastic/elasticsearch/issues/52370 is resolved\n+     */\n+    public static final String COMPATIBLE_HEADER = \"Accept\";\n+    public static final String COMPATIBLE_PARAMS_KEY = \"Compatible-With\";\n+    public static final String COMPATIBLE_VERSION = \"7\";\n+\n+    public static Consumer<RestRequest> consumeParameterType(DeprecationLogger deprecationLogger) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzU4MzE3", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372758317", "createdAt": "2020-03-11T13:31:44Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzozMTo0NFrOF02-Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzozMTo0NFrOF02-Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3MDkxMA==", "bodyText": "any way to remove the v7 here ? ideally this would be agnostic to the actual version (which I think it already is in all but the name)", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r390970910", "createdAt": "2020-03-11T13:31:44Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/rest/RestController.java", "diffHunk": "@@ -328,7 +328,13 @@ private void tryAllHandlers(final RestRequest request, final RestChannel channel\n                       return;\n                   }\n                 } else {\n-                    dispatchRequest(request, channel, handler);\n+                    if(handler.compatibilityRequired() == false //regular (not removed) handlers are always dispatched\n+                        //handlers that were registered compatible, require request to be compatible\n+                        || CompatibleHandlers.isV7Compatible(request)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzYxNDQx", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372761441", "createdAt": "2020-03-11T13:35:22Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzozNToyMlrOF03HWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzozNToyMlrOF03HWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3MzI3Mw==", "bodyText": "I am on the fence about this message, but leaning towards removing it.  I am not sure we need to tell people that this could be a compatible path.", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r390973273", "createdAt": "2020-03-11T13:35:22Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/rest/RestController.java", "diffHunk": "@@ -340,6 +346,13 @@ private void tryAllHandlers(final RestRequest request, final RestChannel channel\n         handleBadRequest(uri, requestMethod, channel);\n     }\n \n+    private void handleCompatibleNotAllowed(String rawPath, RestChannel channel) throws IOException {\n+        String msg = \"Compatible api can be only accessed with Compatible Header. Path used: \" + rawPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzY5MTQy", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372769142", "createdAt": "2020-03-11T13:44:31Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo0NDozMVrOF03evw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo0NDozMVrOF03evw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3OTI2Mw==", "bodyText": "note to other reviewers - the qa/rest-compat-tests is a temporary test fixture and currently runs the core REST rest tests from bwc:minor against a single current test cluster.  No need to review anything out of qa/rest-compat-tests since it will be going away in favor of per module/plugin tests.\nThe (diminishing) number of failed core REST tests is what is guiding these early efforts.", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r390979263", "createdAt": "2020-03-11T13:44:31Z", "author": {"login": "jakelandis"}, "path": "qa/rest-compat-tests/src/main/java/org/elasticsearch/rest/compat/AbstractCompatRestTest.java", "diffHunk": "@@ -76,11 +77,17 @@ private static void mutateTestCandidate(ClientYamlTestCandidate testCandidate) {\n             DoSection doSection = (DoSection) ds;\n             //TODO: be more selective here\n             doSection.setIgnoreWarnings(true);\n-            //TODO: use the real header compatibility header\n-            doSection.getApiCallSection().addHeaders(Collections.singletonMap(\"compatible-with\", \"v7\"));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzc4MDgy", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372778082", "createdAt": "2020-03-11T13:54:40Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo1NDo0MFrOF0356A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo1NDo0MFrOF0356A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4NjIxNg==", "bodyText": "can you also test yaml,cbor, and smile ?\nalso, does case matter ? (can you add a test for that too)", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r390986216", "createdAt": "2020-03-11T13:54:40Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/common/xcontent/XContentTypeTests.java", "diffHunk": "@@ -84,4 +84,11 @@ public void testFromRubbish() throws Exception {\n         assertThat(XContentType.fromMediaTypeOrFormat(\"text/plain\"), nullValue());\n         assertThat(XContentType.fromMediaTypeOrFormat(\"gobbly;goop\"), nullValue());\n     }\n+\n+    public void testMediaType() throws Exception {\n+        String mediaType = XContentType.parseMediaType(\"application/vnd.elasticsearch+json;compatible-with=7\");\n+        assertThat(mediaType,equalTo(\"application/json\"));\n+        mediaType = XContentType.parseMediaType(\"application/json\");\n+        assertThat(mediaType,equalTo(\"application/json\"));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzgwOTc3", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372780977", "createdAt": "2020-03-11T13:57:43Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo1Nzo0NFrOF04CTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo1Nzo0NFrOF04CTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4ODM2Ng==", "bodyText": "can you use a random value for the compatible with (to help catch any regex assumptions around single digits)", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r390988366", "createdAt": "2020-03-11T13:57:44Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/common/xcontent/XContentTypeTests.java", "diffHunk": "@@ -84,4 +84,11 @@ public void testFromRubbish() throws Exception {\n         assertThat(XContentType.fromMediaTypeOrFormat(\"text/plain\"), nullValue());\n         assertThat(XContentType.fromMediaTypeOrFormat(\"gobbly;goop\"), nullValue());\n     }\n+\n+    public void testMediaType() throws Exception {\n+        String mediaType = XContentType.parseMediaType(\"application/vnd.elasticsearch+json;compatible-with=7\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzgxNTk1", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372781595", "createdAt": "2020-03-11T13:58:20Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo1ODoyMVrOF04EJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo1ODoyMVrOF04EJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4ODgzOA==", "bodyText": "can you also test parseVersion ?", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r390988838", "createdAt": "2020-03-11T13:58:21Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/common/xcontent/XContentTypeTests.java", "diffHunk": "@@ -84,4 +84,11 @@ public void testFromRubbish() throws Exception {\n         assertThat(XContentType.fromMediaTypeOrFormat(\"text/plain\"), nullValue());\n         assertThat(XContentType.fromMediaTypeOrFormat(\"gobbly;goop\"), nullValue());\n     }\n+\n+    public void testMediaType() throws Exception {\n+        String mediaType = XContentType.parseMediaType(\"application/vnd.elasticsearch+json;compatible-with=7\");\n+        assertThat(mediaType,equalTo(\"application/json\"));\n+        mediaType = XContentType.parseMediaType(\"application/json\");\n+        assertThat(mediaType,equalTo(\"application/json\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzg0OTU2", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372784956", "createdAt": "2020-03-11T14:02:03Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDowMjowM1rOF04OPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDowMjowM1rOF04OPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5MTQyMA==", "bodyText": "I think can wrap this registration in an \"if version == 8\", so when v9 is cut, the code would effectively be dead.", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r390991420", "createdAt": "2020-03-11T14:02:03Z", "author": {"login": "jakelandis"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/rest/compat/RestCompatPlugin.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest.compat;\n+\n+import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;\n+import org.elasticsearch.cluster.node.DiscoveryNodes;\n+import org.elasticsearch.common.settings.ClusterSettings;\n+import org.elasticsearch.common.settings.IndexScopedSettings;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.settings.SettingsFilter;\n+import org.elasticsearch.plugins.ActionPlugin;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.rest.RestController;\n+import org.elasticsearch.rest.RestHandler;\n+import org.elasticsearch.rest.compat.version7.RestGetActionV7;\n+import org.elasticsearch.rest.compat.version7.RestIndexActionV7;\n+\n+import java.util.List;\n+import java.util.function.Supplier;\n+\n+public class RestCompatPlugin extends Plugin implements ActionPlugin {\n+\n+    @Override\n+    public List<RestHandler> getRestHandlers(\n+        Settings settings,\n+        RestController restController,\n+        ClusterSettings clusterSettings,\n+        IndexScopedSettings indexScopedSettings,\n+        SettingsFilter settingsFilter,\n+        IndexNameExpressionResolver indexNameExpressionResolver,\n+        Supplier<DiscoveryNodes> nodesInCluster\n+    ) {\n+        return List.of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzk0ODUw", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372794850", "createdAt": "2020-03-11T14:13:02Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxMzowM1rOF04r-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxMzowM1rOF04r-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5OTAzMw==", "bodyText": "Is it possible to move this test (and any other compatible tests) over to the compatible module under the version7 package ?  Ideally, we keep this coverage, but make it super easy to remove.\nedit: If necessary to mirror the package name for package protected scope, maybe we should create a v7 sub module instead of just a package name.", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r390999033", "createdAt": "2020-03-11T14:13:03Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/action/DocWriteResponseTests.java", "diffHunk": "@@ -107,4 +107,34 @@ public void testToXContentDoesntIncludeForcedRefreshUnlessForced() throws IOExce\n             }\n         }\n     }\n+\n+    public void testTypeWhenCompatible() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzk3OTQ4", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372797948", "createdAt": "2020-03-11T14:16:11Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxNjoxMVrOF041vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxNjoxMVrOF041vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMTUzMw==", "bodyText": "++ this needs to be handled by the compat test frame work, but is good here for now.", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r391001533", "createdAt": "2020-03-11T14:16:11Z", "author": {"login": "jakelandis"}, "path": "test/framework/src/main/java/org/elasticsearch/test/rest/yaml/section/MatchAssertion.java", "diffHunk": "@@ -56,6 +56,12 @@ public MatchAssertion(XContentLocation location, String field, Object expectedVa\n \n     @Override\n     protected void doAssert(Object actualValue, Object expectedValue) {\n+        // TODO this needs to be moved to override directory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyODAwNjEy", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372800612", "createdAt": "2020-03-11T14:18:55Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxODo1NVrOF0490Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxODo1NVrOF0490Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMzYwMQ==", "bodyText": "can you use a random version ?", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r391003601", "createdAt": "2020-03-11T14:18:55Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/http/DefaultRestChannelTests.java", "diffHunk": "@@ -212,6 +214,14 @@ public void testHeadersSet() {\n         assertEquals(resp.contentType(), headers.get(DefaultRestChannel.CONTENT_TYPE).get(0));\n     }\n \n+    public void testCompatibleParamIsSet(){\n+        final TestRequest httpRequest = new TestRequest(HttpRequest.HttpVersion.HTTP_1_1, RestRequest.Method.GET, \"/\");\n+        httpRequest.getHeaders().put(HttpHeaders.ACCEPT, List.of(\"application/vnd.elasticsearch+json;compatible-with=7\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyODA0MDI4", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372804028", "createdAt": "2020-03-11T14:22:27Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoyMjoyN1rOF05IPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoyMjoyN1rOF05IPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwNjI2OQ==", "bodyText": "can you use a random version ?", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r391006269", "createdAt": "2020-03-11T14:22:27Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/rest/RestControllerTests.java", "diffHunk": "@@ -623,6 +623,39 @@ public void testDispatchRestrictSystemIndices() {\n         assertFalse(context.isSystemIndexAccessAllowed());\n     }\n \n+    public void testDispatchCompatibleHandler() {\n+        final String mimeType = randomFrom(\"application/vnd.elasticsearch+json;compatible-with=7\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyODA1MTIy", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372805122", "createdAt": "2020-03-11T14:23:38Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoyMzozOFrOF05Llg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoyMzozOFrOF05Llg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwNzEyNg==", "bodyText": "Here we are passing in both Content-Type and Accept headers. Should we test one or the other or both ? (if so a random selection would be good)", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r391007126", "createdAt": "2020-03-11T14:23:38Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/rest/RestControllerTests.java", "diffHunk": "@@ -623,6 +623,39 @@ public void testDispatchRestrictSystemIndices() {\n         assertFalse(context.isSystemIndexAccessAllowed());\n     }\n \n+    public void testDispatchCompatibleHandler() {\n+        final String mimeType = randomFrom(\"application/vnd.elasticsearch+json;compatible-with=7\");\n+        String content = randomAlphaOfLength((int) Math.round(BREAKER_LIMIT.getBytes() / inFlightRequestsBreaker.getOverhead()));\n+        final List<String> contentTypeHeader = Collections.singletonList(mimeType);\n+        FakeRestRequest fakeRestRequest = new FakeRestRequest.Builder(NamedXContentRegistry.EMPTY)\n+            .withContent(new BytesArray(content), RestRequest.parseContentType(contentTypeHeader)).withPath(\"/foo\")\n+            .withHeaders(Map.of(\"Content-Type\", contentTypeHeader, \"Accept\", contentTypeHeader))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyODA3NTY5", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-372807569", "createdAt": "2020-03-11T14:26:08Z", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoyNjowOFrOF05TAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoyNjowOFrOF05TAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwOTAyNA==", "bodyText": "Also, what happens if you set the Content-Type to application/json, but Accept to application/vnd.elasticsearch+json;compatible-with=7 ?\nI wonder if we need more testing for these edge cases ?(either unit or integration)", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r391009024", "createdAt": "2020-03-11T14:26:08Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/rest/RestControllerTests.java", "diffHunk": "@@ -623,6 +623,39 @@ public void testDispatchRestrictSystemIndices() {\n         assertFalse(context.isSystemIndexAccessAllowed());\n     }\n \n+    public void testDispatchCompatibleHandler() {\n+        final String mimeType = randomFrom(\"application/vnd.elasticsearch+json;compatible-with=7\");\n+        String content = randomAlphaOfLength((int) Math.round(BREAKER_LIMIT.getBytes() / inFlightRequestsBreaker.getOverhead()));\n+        final List<String> contentTypeHeader = Collections.singletonList(mimeType);\n+        FakeRestRequest fakeRestRequest = new FakeRestRequest.Builder(NamedXContentRegistry.EMPTY)\n+            .withContent(new BytesArray(content), RestRequest.parseContentType(contentTypeHeader)).withPath(\"/foo\")\n+            .withHeaders(Map.of(\"Content-Type\", contentTypeHeader, \"Accept\", contentTypeHeader))\n+            .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ef7e1840c9eb391299cfbfedf760f88cde65c0f", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/0ef7e1840c9eb391299cfbfedf760f88cde65c0f", "committedDate": "2020-03-11T18:36:41Z", "message": "moving test classes and compat related code to separate v7 module\n\ncode review follow up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDY3MTk0", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-373067194", "createdAt": "2020-03-11T19:38:54Z", "commit": {"oid": "0ef7e1840c9eb391299cfbfedf760f88cde65c0f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTozODo1NVrOF1F6lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMTo1Mjo1NVrOF1KZ1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIxNTc2Nw==", "bodyText": "I think renaming this to consumeTypeParameter would make its purpose more clear. Also, could we just have a method void consumeParameterType(DeprecationLogger deprecationLogger, RestRequest request) instead of using a Consumer?  Let me know if I'm missing something around why consumers are necessary, to me they make the logic less straightforward.", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r391215767", "createdAt": "2020-03-11T19:38:55Z", "author": {"login": "jtibshirani"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/rest/compat/version7/CompatibleHandlers.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest.compat.version7;\n+\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.rest.RestRequest;\n+\n+import java.util.function.Consumer;\n+\n+public class CompatibleHandlers {\n+\n+    public static Consumer<RestRequest> consumeParameterType(DeprecationLogger deprecationLogger) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ef7e1840c9eb391299cfbfedf760f88cde65c0f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI4MzQ2Mw==", "bodyText": "Could we avoid introducing a Consumer here and just call deprecationLogger.deprecatedAndMaybeLog(...) directly inside prepareRequest?", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r391283463", "createdAt": "2020-03-11T21:38:51Z", "author": {"login": "jtibshirani"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/rest/compat/version7/RestGetActionV7.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest.compat.version7;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.rest.CompatibleConstants;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.action.document.RestGetAction;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+import static org.elasticsearch.rest.RestRequest.Method.GET;\n+import static org.elasticsearch.rest.RestRequest.Method.HEAD;\n+\n+public class RestGetActionV7 extends RestGetAction {\n+\n+    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(RestGetAction.class));\n+    private static final String TYPES_DEPRECATION_MESSAGE = \"[types removal] Specifying types in \"\n+        + \"document get requests is deprecated, use the /{index}/_doc/{id} endpoint instead.\";\n+    private static final Consumer<RestRequest> DEPRECATION_WARNING = r -> deprecationLogger.deprecatedAndMaybeLog(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ef7e1840c9eb391299cfbfedf760f88cde65c0f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI4NjgyNg==", "bodyText": "If I'm understanding correctly, it seems like we'll log two deprecation messages per request, both the endpoint-specific one like \"Specifying types in document get requests is deprecated...\" and this more general one \"Using type as a path parameter is deprecated\". I think we could just stick with the endpoint-specific one to avoid warning twice about the same issue.\nAs a side note, this general deprecation message is also logged under the key \"create_index_with_types\", I think we'd want a more precise name.", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r391286826", "createdAt": "2020-03-11T21:46:53Z", "author": {"login": "jtibshirani"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/rest/compat/version7/CompatibleHandlers.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest.compat.version7;\n+\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.rest.RestRequest;\n+\n+import java.util.function.Consumer;\n+\n+public class CompatibleHandlers {\n+\n+    public static Consumer<RestRequest> consumeParameterType(DeprecationLogger deprecationLogger) {\n+        String TYPES_DEPRECATION_MESSAGE = \"[types removal] Using type as a path parameter is deprecated.\";\n+\n+        return r -> {\n+            deprecationLogger.deprecatedAndMaybeLog(\"create_index_with_types\", TYPES_DEPRECATION_MESSAGE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ef7e1840c9eb391299cfbfedf760f88cde65c0f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI4ODc5Mw==", "bodyText": "I think you can just do the following, I've never had to wrap a string inside a Text object:\nbuilder.field(TYPE_FIELD_NAME, MapperService.SINGLE_MAPPING_NAME);", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r391288793", "createdAt": "2020-03-11T21:51:29Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -276,6 +280,9 @@ public void writeTo(StreamOutput out) throws IOException {\n     @Override\n     public final XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n         builder.startObject();\n+        if (builder.getCompatibleMajorVersion() == Version.V_7_0_0.major) {\n+            builder.field(TYPE_FIELD_NAME, SINGLE_MAPPING_TYPE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ef7e1840c9eb391299cfbfedf760f88cde65c0f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI4OTMwMw==", "bodyText": "Small comment, would be good to revert this.", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r391289303", "createdAt": "2020-03-11T21:52:55Z", "author": {"login": "jtibshirani"}, "path": "server/src/test/java/org/elasticsearch/action/DocWriteResponseTests.java", "diffHunk": "@@ -107,4 +107,6 @@ public void testToXContentDoesntIncludeForcedRefreshUnlessForced() throws IOExce\n             }\n         }\n     }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ef7e1840c9eb391299cfbfedf760f88cde65c0f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "835ce563ffe8ad47c13cb19d1679f3bf208995dd", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/835ce563ffe8ad47c13cb19d1679f3bf208995dd", "committedDate": "2020-03-13T10:27:25Z", "message": "test class rename and return 400 when compatible header not present"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4402316e351d2738d584cbc128ef09fd55f87ba", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f4402316e351d2738d584cbc128ef09fd55f87ba", "committedDate": "2020-03-13T10:50:33Z", "message": "clean up deprecation warnings and remove use of consumers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84f1ddeef546172bf0eafdf1c879a371ea8e675f", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/84f1ddeef546172bf0eafdf1c879a371ea8e675f", "committedDate": "2020-03-13T12:19:18Z", "message": "v7 compatible actions warnings tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTEzOTI2", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-374513926", "createdAt": "2020-03-13T18:12:15Z", "commit": {"oid": "84f1ddeef546172bf0eafdf1c879a371ea8e675f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxODoxMjoxNVrOF2Nvmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxODoxODoxNFrOF2N6hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5MjYwMg==", "bodyText": "Wouldn't we never have more than one major versions worth of compat in a single version? If that is the case, why do we need to version the class names?", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r392392602", "createdAt": "2020-03-13T18:12:15Z", "author": {"login": "rjernst"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/rest/compat/RestCompatPlugin.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest.compat;\n+\n+import org.elasticsearch.Version;\n+import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;\n+import org.elasticsearch.cluster.node.DiscoveryNodes;\n+import org.elasticsearch.common.settings.ClusterSettings;\n+import org.elasticsearch.common.settings.IndexScopedSettings;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.settings.SettingsFilter;\n+import org.elasticsearch.plugins.ActionPlugin;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.rest.RestController;\n+import org.elasticsearch.rest.RestHandler;\n+import org.elasticsearch.rest.compat.version7.RestGetActionV7;\n+import org.elasticsearch.rest.compat.version7.RestIndexActionV7;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.function.Supplier;\n+\n+public class RestCompatPlugin extends Plugin implements ActionPlugin {\n+\n+    @Override\n+    public List<RestHandler> getRestHandlers(\n+        Settings settings,\n+        RestController restController,\n+        ClusterSettings clusterSettings,\n+        IndexScopedSettings indexScopedSettings,\n+        SettingsFilter settingsFilter,\n+        IndexNameExpressionResolver indexNameExpressionResolver,\n+        Supplier<DiscoveryNodes> nodesInCluster\n+    ) {\n+        if (Version.CURRENT.major == 8) {\n+            return List.of(\n+                new RestGetActionV7(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f1ddeef546172bf0eafdf1c879a371ea8e675f"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5Mjk0Ng==", "bodyText": "I see tests in this PR; why are they disabled?", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r392392946", "createdAt": "2020-03-13T18:12:58Z", "author": {"login": "rjernst"}, "path": "modules/rest-compatibility/build.gradle", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+esplugin {\n+  description 'Adds a compatiblity layer for the prior major versions REST API'\n+  classname 'org.elasticsearch.rest.compat.RestCompatPlugin'\n+}\n+\n+integTest.enabled = false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f1ddeef546172bf0eafdf1c879a371ea8e675f"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5MzgxNQ==", "bodyText": "If we are just looking at major version number, using the Version constant just to extract \"7\" seems overkill and less readable than just using the literal 7.", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r392393815", "createdAt": "2020-03-13T18:14:54Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -276,6 +278,9 @@ public void writeTo(StreamOutput out) throws IOException {\n     @Override\n     public final XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n         builder.startObject();\n+        if (builder.getCompatibleMajorVersion() == Version.V_7_0_0.major) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f1ddeef546172bf0eafdf1c879a371ea8e675f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5NTM5OA==", "bodyText": "Why is this V7 specific? Aren't the compatible params version agnostic?", "url": "https://github.com/elastic/elasticsearch/pull/53228#discussion_r392395398", "createdAt": "2020-03-13T18:18:14Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/rest/RestController.java", "diffHunk": "@@ -340,6 +349,11 @@ private void tryAllHandlers(final RestRequest request, final RestChannel channel\n         handleBadRequest(uri, requestMethod, channel);\n     }\n \n+    public static boolean isV7Compatible(ToXContent.Params params) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f1ddeef546172bf0eafdf1c879a371ea8e675f"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d106d1ba66027268c061875b3aab86f92bb8c690", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/d106d1ba66027268c061875b3aab86f92bb8c690", "committedDate": "2020-03-16T09:59:17Z", "message": "rename tests and enable them"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf61bbddd2ebbb318958f9a1a1064aca79615bd3", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf61bbddd2ebbb318958f9a1a1064aca79615bd3", "committedDate": "2020-03-16T10:03:49Z", "message": "rename isV7Compatible method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f00f438b8c66a39938a24fc99b523787229be4c5", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f00f438b8c66a39938a24fc99b523787229be4c5", "committedDate": "2020-03-16T13:53:20Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae1799ff9f5ca11da20105ce5f9f814aa9b61b21", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/ae1799ff9f5ca11da20105ce5f9f814aa9b61b21", "committedDate": "2020-03-16T13:53:33Z", "message": "Merge branch 'master' into compat/type-index-get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0fce895fa6388c05c668c8d56ca3cc93ab24650", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a0fce895fa6388c05c668c8d56ca3cc93ab24650", "committedDate": "2020-03-16T14:42:25Z", "message": "Revert \"Merge branch 'master' into compat/type-index-get\"\n\nThis reverts commit ae1799ff9f5ca11da20105ce5f9f814aa9b61b21, reversing\nchanges made to f00f438b8c66a39938a24fc99b523787229be4c5."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e55744216646a1acd993f144456602bbe414f56", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/7e55744216646a1acd993f144456602bbe414f56", "committedDate": "2020-03-16T14:43:48Z", "message": "Merge branch 'compat_rest_api' into compat/type-index-get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00fe62dbf8cdcd25d592ba971b96049ce511de34", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/00fe62dbf8cdcd25d592ba971b96049ce511de34", "committedDate": "2020-03-16T15:02:26Z", "message": "Revert \"Revert \"Merge branch 'master' into compat/type-index-get\"\"\n\nThis reverts commit a0fce895fa6388c05c668c8d56ca3cc93ab24650."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6f0b9a3b7f611e935558290f7b3e343e8e33b5a", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a6f0b9a3b7f611e935558290f7b3e343e8e33b5a", "committedDate": "2020-03-17T07:57:44Z", "message": "use locale with toLowerCase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eff534736a890668572710498c97741d985463a", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/4eff534736a890668572710498c97741d985463a", "committedDate": "2020-03-17T12:47:34Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d4161cb7bdc9f52e49636a246f742c1a4ab0894", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/2d4161cb7bdc9f52e49636a246f742c1a4ab0894", "committedDate": "2020-03-17T13:23:27Z", "message": "imports and disable integ tests as there are none"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6830f97d740edb9d35b348e9f1e06e538b3584fd", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/6830f97d740edb9d35b348e9f1e06e538b3584fd", "committedDate": "2020-03-17T14:12:07Z", "message": "fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NzIwOTY4", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-379720968", "createdAt": "2020-03-23T18:45:49Z", "commit": {"oid": "6830f97d740edb9d35b348e9f1e06e538b3584fd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNjk1OTUz", "url": "https://github.com/elastic/elasticsearch/pull/53228#pullrequestreview-380695953", "createdAt": "2020-03-24T21:05:26Z", "commit": {"oid": "6830f97d740edb9d35b348e9f1e06e538b3584fd"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1839, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}