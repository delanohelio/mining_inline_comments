{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNTYxMDQz", "number": 66597, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMjoyNTo1OFrOFHxghw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMjoyNTo1OFrOFHxghw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjk1NDk1OnYy", "diffSide": "RIGHT", "path": "server/src/internalClusterTest/java/org/elasticsearch/plugins/IndexFoldersDeletionListenerIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMjoyNTo1OFrOIJWlhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMDo0MjozMVrOINtAQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY3ODE1MQ==", "bodyText": "I am not sure I follow how number of shards/replicas interact with this test?", "url": "https://github.com/elastic/elasticsearch/pull/66597#discussion_r546678151", "createdAt": "2020-12-21T12:25:58Z", "author": {"login": "henningandersen"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/plugins/IndexFoldersDeletionListenerIT.java", "diffHunk": "@@ -67,15 +67,24 @@\n         return plugins;\n     }\n \n+    @Override\n+    protected Settings nodeSettings(int nodeOrdinal) {\n+        return Settings.builder()\n+            .put(super.nodeSettings(nodeOrdinal))\n+            // prevent shards to move around after they got assigned the first time\n+            .put(EnableAllocationDecider.CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(), EnableAllocationDecider.Rebalance.NONE)\n+            .build();\n+    }\n+\n     public void testListenersInvokedWhenIndexIsDeleted() throws Exception {\n         final String masterNode = internalCluster().startMasterOnlyNode();\n         internalCluster().startDataOnlyNodes(2);\n         ensureStableCluster(2 + 1, masterNode);\n \n         final String indexName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n         createIndex(indexName, Settings.builder()\n-            .put(IndexMetadata.SETTING_NUMBER_OF_SHARDS, 2 * between(1, 2))\n-            .put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, between(0, 1))\n+            .put(IndexMetadata.SETTING_NUMBER_OF_SHARDS, 2)\n+            .put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27182225d438502f85035479da6c0e74ebfcafb0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIzOTc0NA==", "bodyText": "I've restored the randomized replicas.", "url": "https://github.com/elastic/elasticsearch/pull/66597#discussion_r551239744", "createdAt": "2021-01-04T10:42:31Z", "author": {"login": "tlrx"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/plugins/IndexFoldersDeletionListenerIT.java", "diffHunk": "@@ -67,15 +67,24 @@\n         return plugins;\n     }\n \n+    @Override\n+    protected Settings nodeSettings(int nodeOrdinal) {\n+        return Settings.builder()\n+            .put(super.nodeSettings(nodeOrdinal))\n+            // prevent shards to move around after they got assigned the first time\n+            .put(EnableAllocationDecider.CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(), EnableAllocationDecider.Rebalance.NONE)\n+            .build();\n+    }\n+\n     public void testListenersInvokedWhenIndexIsDeleted() throws Exception {\n         final String masterNode = internalCluster().startMasterOnlyNode();\n         internalCluster().startDataOnlyNodes(2);\n         ensureStableCluster(2 + 1, masterNode);\n \n         final String indexName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n         createIndex(indexName, Settings.builder()\n-            .put(IndexMetadata.SETTING_NUMBER_OF_SHARDS, 2 * between(1, 2))\n-            .put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, between(0, 1))\n+            .put(IndexMetadata.SETTING_NUMBER_OF_SHARDS, 2)\n+            .put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY3ODE1MQ=="}, "originalCommit": {"oid": "27182225d438502f85035479da6c0e74ebfcafb0"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4480, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}