{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMzcxODQ2", "number": 63614, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTo0Nzo0NFrOEtZ57w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTo0Nzo0NFrOEtZ57w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDQ1ODA3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTo0Nzo0NFrOHhLFbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMToyMjo0NFrOHhOSwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU0NjY2OQ==", "bodyText": "Aren't we potentially introducing all kinds of races here when we run this concurrently and update a bunch of maps in parallel? It seems that the logic in this method doesn't really expect this to happen and it could actually have functional impact with all the various checks we do on those maps in the computations below?", "url": "https://github.com/elastic/elasticsearch/pull/63614#discussion_r504546669", "createdAt": "2020-10-14T09:47:44Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java", "diffHunk": "@@ -99,15 +99,23 @@ public DiskThresholdMonitor(Settings settings, Supplier<ClusterState> clusterSta\n         this.client = client;\n     }\n \n+    private boolean checkInProgress(final boolean expectedValue, final boolean newValue) {\n+        if (diskThresholdSettings.allowForcedUpdate()) {\n+            assert checkInProgress.get() == false;\n+            return true;\n+        }\n+        return checkInProgress.compareAndSet(expectedValue, newValue);\n+    }\n+\n     private void checkFinished() {\n-        final boolean checkFinished = checkInProgress.compareAndSet(true, false);\n+        final boolean checkFinished = checkInProgress(true, false);\n         assert checkFinished;\n         logger.trace(\"checkFinished\");\n     }\n \n     public void onNewInfo(ClusterInfo info) {\n \n-        if (checkInProgress.compareAndSet(false, true) == false) {\n+        if (checkInProgress(false, true) == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38275afd76b9a61213a8e675772be163366ae670"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1NjcyMQ==", "bodyText": "Yes, but that's the only \"simple\" way I found to ensure that DiskThresholdMonitor effectively runs the reroute after the disk space has been updated... At this point I think we should just re execute refreshDiskUsage in the assertBusy() loop until we have what we want (as initially done in #62358 (comment)).", "url": "https://github.com/elastic/elasticsearch/pull/63614#discussion_r504556721", "createdAt": "2020-10-14T10:04:24Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java", "diffHunk": "@@ -99,15 +99,23 @@ public DiskThresholdMonitor(Settings settings, Supplier<ClusterState> clusterSta\n         this.client = client;\n     }\n \n+    private boolean checkInProgress(final boolean expectedValue, final boolean newValue) {\n+        if (diskThresholdSettings.allowForcedUpdate()) {\n+            assert checkInProgress.get() == false;\n+            return true;\n+        }\n+        return checkInProgress.compareAndSet(expectedValue, newValue);\n+    }\n+\n     private void checkFinished() {\n-        final boolean checkFinished = checkInProgress.compareAndSet(true, false);\n+        final boolean checkFinished = checkInProgress(true, false);\n         assert checkFinished;\n         logger.trace(\"checkFinished\");\n     }\n \n     public void onNewInfo(ClusterInfo info) {\n \n-        if (checkInProgress.compareAndSet(false, true) == false) {\n+        if (checkInProgress(false, true) == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU0NjY2OQ=="}, "originalCommit": {"oid": "38275afd76b9a61213a8e675772be163366ae670"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3NTk0NA==", "bodyText": "At this point I think we should just re execute refreshDiskUsage in the assertBusy() loop until we have what we want (as initially done in #62358 (comment)).\n\nYea I tend to agree :( (begrudgingly :D ... maybe add a TODO to look into a cleaner way and do that?)", "url": "https://github.com/elastic/elasticsearch/pull/63614#discussion_r504575944", "createdAt": "2020-10-14T10:38:44Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java", "diffHunk": "@@ -99,15 +99,23 @@ public DiskThresholdMonitor(Settings settings, Supplier<ClusterState> clusterSta\n         this.client = client;\n     }\n \n+    private boolean checkInProgress(final boolean expectedValue, final boolean newValue) {\n+        if (diskThresholdSettings.allowForcedUpdate()) {\n+            assert checkInProgress.get() == false;\n+            return true;\n+        }\n+        return checkInProgress.compareAndSet(expectedValue, newValue);\n+    }\n+\n     private void checkFinished() {\n-        final boolean checkFinished = checkInProgress.compareAndSet(true, false);\n+        final boolean checkFinished = checkInProgress(true, false);\n         assert checkFinished;\n         logger.trace(\"checkFinished\");\n     }\n \n     public void onNewInfo(ClusterInfo info) {\n \n-        if (checkInProgress.compareAndSet(false, true) == false) {\n+        if (checkInProgress(false, true) == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU0NjY2OQ=="}, "originalCommit": {"oid": "38275afd76b9a61213a8e675772be163366ae670"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU5OTIzNA==", "bodyText": "I pushed 7cddec2", "url": "https://github.com/elastic/elasticsearch/pull/63614#discussion_r504599234", "createdAt": "2020-10-14T11:22:44Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java", "diffHunk": "@@ -99,15 +99,23 @@ public DiskThresholdMonitor(Settings settings, Supplier<ClusterState> clusterSta\n         this.client = client;\n     }\n \n+    private boolean checkInProgress(final boolean expectedValue, final boolean newValue) {\n+        if (diskThresholdSettings.allowForcedUpdate()) {\n+            assert checkInProgress.get() == false;\n+            return true;\n+        }\n+        return checkInProgress.compareAndSet(expectedValue, newValue);\n+    }\n+\n     private void checkFinished() {\n-        final boolean checkFinished = checkInProgress.compareAndSet(true, false);\n+        final boolean checkFinished = checkInProgress(true, false);\n         assert checkFinished;\n         logger.trace(\"checkFinished\");\n     }\n \n     public void onNewInfo(ClusterInfo info) {\n \n-        if (checkInProgress.compareAndSet(false, true) == false) {\n+        if (checkInProgress(false, true) == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU0NjY2OQ=="}, "originalCommit": {"oid": "38275afd76b9a61213a8e675772be163366ae670"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2966, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}