{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NDY5NTU5", "number": 56565, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxNzowMFrOD7fkiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxNzowMFrOD7fkiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzA5ODMzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/bootstrap/BootstrapChecks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxNzowMFrOGT2Yjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxNzowMFrOGT2Yjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2NzE1MQ==", "bodyText": "Shouldn't the memory locking part be in the other condition's message, since this is the not memory locked case?", "url": "https://github.com/elastic/elasticsearch/pull/56565#discussion_r423467151", "createdAt": "2020-05-12T05:17:00Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/bootstrap/BootstrapChecks.java", "diffHunk": "@@ -226,12 +226,22 @@ public BootstrapCheckResult check(BootstrapContext context) {\n             final long initialHeapSize = getInitialHeapSize();\n             final long maxHeapSize = getMaxHeapSize();\n             if (initialHeapSize != 0 && maxHeapSize != 0 && initialHeapSize != maxHeapSize) {\n-                final String message = String.format(\n+                final String message;\n+                if (isMemoryLocked()) {\n+                    message = String.format(\n+                        Locale.ROOT,\n+                        \"initial heap size [%d] not equal to maximum heap size [%d]; \" +\n+                            \"this can cause resize pauses\",\n+                        getInitialHeapSize(),\n+                        getMaxHeapSize());\n+                } else {\n+                    message = String.format(\n                         Locale.ROOT,\n                         \"initial heap size [%d] not equal to maximum heap size [%d]; \" +\n-                                \"this can cause resize pauses and prevents mlockall from locking the entire heap\",\n+                            \"this can cause resize pauses and prevents memory locking from locking the entire heap\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3c3dc9f2195d28f59ccce8dad5e3fd6475643d6"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 559, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}