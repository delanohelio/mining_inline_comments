{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MDEzMDY1", "number": 55454, "title": "SQL: Implement FORMAT function", "bodyText": "Implement FORMAT according to the SQL Server spec: https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql?view=sql-server-ver15#ExampleD by translating to the java.time patterns used in DATETIME_FORMAT.\nRelates to #54965", "createdAt": "2020-04-20T11:45:27Z", "url": "https://github.com/elastic/elasticsearch/pull/55454", "merged": true, "mergeCommit": {"oid": "da511f4e033db6e8a6aa2a54b23e906b5e026845"}, "closed": true, "closedAt": "2020-09-21T13:32:12Z", "author": {"login": "binu-r"}, "timelineItems": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZdlyzgH2gAyNDA2MDEzMDY1OjRjNDFmZjY2NWRhYmZkYTdlNTJmOWJhYjU4MGU4NDBjNTQ5NGQ4NGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLCs3WgH2gAyNDA2MDEzMDY1OjVlOGM2ZGZhNzAzZGJjN2RhMTIwYmNiY2RiMDA1M2VlNjUyZWVmZGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4c41ff665dabfda7e52f9bab580e840c5494d84a", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/4c41ff665dabfda7e52f9bab580e840c5494d84a", "committedDate": "2020-04-20T11:42:43Z", "message": "SQL: Implement FORMAT function\n\nImplement FORMAT according to the SQL Server spec: https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql?view=sql-server-ver15#ExampleD by translating to the java.time patterns used in DATETIME_FORMAT.\n\nRelates to #54965"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNTgzMTIx", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-410583121", "createdAt": "2020-05-13T04:44:03Z", "commit": {"oid": "4c41ff665dabfda7e52f9bab580e840c5494d84a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d24cf75f2bbc2c0cbc5dfaac102ec09ab662b9cb", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/d24cf75f2bbc2c0cbc5dfaac102ec09ab662b9cb", "committedDate": "2020-06-13T14:01:06Z", "message": "Removed new pipe and processor. Used enum for formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abd4725b32de169880f170a5b0ea09aa068e6cc9", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/abd4725b32de169880f170a5b0ea09aa068e6cc9", "committedDate": "2020-06-17T06:52:24Z", "message": "Corrected formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf8d71bcabe3029256fe5c4a1cac517d8d4068f3", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf8d71bcabe3029256fe5c4a1cac517d8d4068f3", "committedDate": "2020-06-17T07:05:39Z", "message": "Merge branch 'master' into impl-format-function\n\n# Conflicts:\n#\tdocs/reference/sql/functions/index.asciidoc\n#\tx-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/whitelist/InternalSqlScriptUtils.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NzU4NzI0", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-435758724", "createdAt": "2020-06-23T13:03:58Z", "commit": {"oid": "cf8d71bcabe3029256fe5c4a1cac517d8d4068f3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzowMzo1OVrOGnoMkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzoyMDo1MFrOGno5HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIwNjIyNw==", "bodyText": "nit: you could avoid the variable and use the randomValueOtherThan() here directly.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r444206227", "createdAt": "2020-06-23T13:03:59Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/DateTimeFormatProcessorTests.java", "diffHunk": "@@ -57,14 +57,16 @@ protected ZoneId instanceZoneId(DateTimeFormatProcessor instance) {\n \n     @Override\n     protected DateTimeFormatProcessor mutateInstance(DateTimeFormatProcessor instance) {\n+        Formatter replaced = randomValueOtherThan(instance.formatter(), () -> randomFrom(Formatter.values()));\n         return new DateTimeFormatProcessor(\n             new ConstantProcessor(DateTimeTestUtils.nowWithMillisResolution()),\n             new ConstantProcessor(ESTestCase.randomRealisticUnicodeOfLength(128)),\n-            randomValueOtherThan(instance.zoneId(), ESTestCase::randomZone)\n+            randomZone(),\n+            replaced", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8d71bcabe3029256fe5c4a1cac517d8d4068f3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIwODAwMw==", "bodyText": "I think it's not necessary since, if there is no pattern found, no replacement occurs.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r444208003", "createdAt": "2020-06-23T13:06:33Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/DateTimeFormatProcessor.java", "diffHunk": "@@ -17,55 +18,90 @@\n import java.time.format.DateTimeFormatter;\n import java.time.temporal.TemporalAccessor;\n import java.util.Locale;\n+import java.util.Objects;\n \n import static org.elasticsearch.xpack.sql.util.DateUtils.asTimeAtZone;\n \n public class DateTimeFormatProcessor extends BinaryDateTimeProcessor {\n \n     public static final String NAME = \"dtformat\";\n+    private static final String[][] JAVA_TIME_FORMAT_REPLACEMENTS = {\n+        {\"tt\", \"a\"},\n+        {\"t\", \"a\"},\n+        {\"dddd\", \"eeee\"},\n+        {\"ddd\", \"eee\"},\n+        {\"K\", \"v\"},\n+        {\"g\", \"G\"},\n+        {\"f\", \"S\"},\n+    };\n+    private final Formatter formatter;\n \n-    public DateTimeFormatProcessor(Processor source1, Processor source2, ZoneId zoneId) {\n+\n+    public enum Formatter {\n+        FORMAT,\n+        DATE_TIME_FORMAT;\n+\n+        public String getJavaPattern(final Object pattern) {\n+            String javaDateFormat = (String) pattern;\n+            if (this == FORMAT) {\n+\n+                for (String[] replacement : JAVA_TIME_FORMAT_REPLACEMENTS) {\n+                    if (javaDateFormat.contains(replacement[0])) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8d71bcabe3029256fe5c4a1cac517d8d4068f3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIxNzYyOA==", "bodyText": "Did you use this table: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings for the patterns?\nI see for example the F, FF, etc. is not addressed.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r444217628", "createdAt": "2020-06-23T13:20:50Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/DateTimeFormatProcessor.java", "diffHunk": "@@ -17,55 +18,90 @@\n import java.time.format.DateTimeFormatter;\n import java.time.temporal.TemporalAccessor;\n import java.util.Locale;\n+import java.util.Objects;\n \n import static org.elasticsearch.xpack.sql.util.DateUtils.asTimeAtZone;\n \n public class DateTimeFormatProcessor extends BinaryDateTimeProcessor {\n \n     public static final String NAME = \"dtformat\";\n+    private static final String[][] JAVA_TIME_FORMAT_REPLACEMENTS = {\n+        {\"tt\", \"a\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8d71bcabe3029256fe5c4a1cac517d8d4068f3"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "429fd9ba63de53d0e2e12c20aea7d4fc6f8c3e7d", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/429fd9ba63de53d0e2e12c20aea7d4fc6f8c3e7d", "committedDate": "2020-06-23T15:51:30Z", "message": "removed unnecessary variable declaration replaced"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a194236d4a28908aeeec9daa77e87ab49c21c69", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/9a194236d4a28908aeeec9daa77e87ab49c21c69", "committedDate": "2020-06-23T15:59:09Z", "message": "removed if check before replacement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a750ae3bca97da0949a825d5db7e4912e308c275", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/a750ae3bca97da0949a825d5db7e4912e308c275", "committedDate": "2020-06-24T11:41:15Z", "message": "Added replacement pattern for `F`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NTcyOTE3", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-436572917", "createdAt": "2020-06-24T11:51:56Z", "commit": {"oid": "a750ae3bca97da0949a825d5db7e4912e308c275"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTo1MTo1NlrOGoOy5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTo1MTo1NlrOGoOy5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgzODYzMA==", "bodyText": "I'd rather have it as a separate [NOTE] and please add more detail: that it doesn't work as optional (0 digits will be printed out).", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r444838630", "createdAt": "2020-06-24T11:51:56Z", "author": {"login": "matriv"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -745,8 +745,9 @@ https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql?view=sq\n If any of the two arguments is `null` or the pattern is an empty string `null` is returned.\n \n [NOTE]\n-If the 1st argument is of type `time`, then pattern specified by the 2nd argument cannot contain date related units\n-(e.g. 'dd', 'MM', 'YYYY', etc.). If it contains such units an error is returned.\n+[1] If the 1st argument is of type `time`, then pattern specified by the 2nd argument cannot contain date related units\n+(e.g. 'dd', 'MM', 'YYYY', etc.). If it contains such units an error is returned. +\n+[2] Format specifier `F` will be working similar to format specifier `f`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a750ae3bca97da0949a825d5db7e4912e308c275"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ad149e6419748cfaa3dd6cc3488c75ab02b06ed", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/4ad149e6419748cfaa3dd6cc3488c75ab02b06ed", "committedDate": "2020-06-24T14:36:25Z", "message": "Add detailed note about F format specifier"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2OTIxNDE2", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-436921416", "createdAt": "2020-06-24T18:56:28Z", "commit": {"oid": "4ad149e6419748cfaa3dd6cc3488c75ab02b06ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1NjoyOFrOGofB0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1NjoyOFrOGofB0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNDU5Mg==", "bodyText": "... seconds fraction and all trailing 0s will be printed to meet the number of Fs in the pattern, e.g.: for a time part 10:20:30.1234and patternHH:mm:ss.FFFFFF, the output string of the function would be:  10:20:30.123400`.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r445104592", "createdAt": "2020-06-24T18:56:28Z", "author": {"login": "matriv"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -745,9 +745,13 @@ https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql?view=sq\n If any of the two arguments is `null` or the pattern is an empty string `null` is returned.\n \n [NOTE]\n-[1] If the 1st argument is of type `time`, then pattern specified by the 2nd argument cannot contain date related units\n-(e.g. 'dd', 'MM', 'YYYY', etc.). If it contains such units an error is returned. +\n-[2] Format specifier `F` will be working similar to format specifier `f`.\n+If the 1st argument is of type `time`, then pattern specified by the 2nd argument cannot contain date related units\n+(e.g. 'dd', 'MM', 'YYYY', etc.). If it contains such units an error is returned.\n+\n+[NOTE]\n+Format specifier `F` will be working similar to format specifier `f`.\n+It represents the most significant digit of the seconds fraction; that is,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ad149e6419748cfaa3dd6cc3488c75ab02b06ed"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24d1f898f4a7e3532b71c5568627e8291c8cb580", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/24d1f898f4a7e3532b71c5568627e8291c8cb580", "committedDate": "2020-06-25T04:29:00Z", "message": "corrected [NOTE] about F format specifier."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTk4OTkx", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-440998991", "createdAt": "2020-07-01T15:54:54Z", "commit": {"oid": "24d1f898f4a7e3532b71c5568627e8291c8cb580"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNTo1NDo1NFrOGrr3Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNTo1NDo1NFrOGrr3Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ2MDU4Ng==", "bodyText": "Please revert this. We don't allow * imports.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r448460586", "createdAt": "2020-07-01T15:54:54Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/DateTimeFormatProcessorTests.java", "diffHunk": "@@ -13,15 +13,14 @@\n import org.elasticsearch.xpack.ql.tree.Source;\n import org.elasticsearch.xpack.sql.AbstractSqlWireSerializingTestCase;\n import org.elasticsearch.xpack.sql.SqlIllegalArgumentException;\n+import org.elasticsearch.xpack.sql.expression.function.scalar.datetime.DateTimeFormatProcessor.Formatter;\n \n import java.time.Instant;\n import java.time.OffsetTime;\n import java.time.ZoneId;\n \n import static org.elasticsearch.xpack.ql.expression.Literal.NULL;\n-import static org.elasticsearch.xpack.ql.expression.function.scalar.FunctionTestUtils.l;\n-import static org.elasticsearch.xpack.ql.expression.function.scalar.FunctionTestUtils.randomDatetimeLiteral;\n-import static org.elasticsearch.xpack.ql.expression.function.scalar.FunctionTestUtils.randomStringLiteral;\n+import static org.elasticsearch.xpack.ql.expression.function.scalar.FunctionTestUtils.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24d1f898f4a7e3532b71c5568627e8291c8cb580"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fe52c33cda134a47e6ac5e1c9ea0e63134698a9", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/1fe52c33cda134a47e6ac5e1c9ea0e63134698a9", "committedDate": "2020-07-01T17:04:20Z", "message": "corrected AvoidStarImport checkstyle rule violation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e72fb768191cfc40b4fb49f325a06b95c84171a2", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/e72fb768191cfc40b4fb49f325a06b95c84171a2", "committedDate": "2020-07-06T08:42:23Z", "message": "Merge remote-tracking branch 'upstream/master' into impl-format-function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMDQ0MjQx", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-443044241", "createdAt": "2020-07-06T12:49:26Z", "commit": {"oid": "e72fb768191cfc40b4fb49f325a06b95c84171a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDY0NTQy", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-453464542", "createdAt": "2020-07-22T16:04:36Z", "commit": {"oid": "e72fb768191cfc40b4fb49f325a06b95c84171a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowNDozNlrOG1pYGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowNDozNlrOG1pYGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwNTYyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Format specifier `F` will be working similar to format specifier `f`.\n          \n          \n            \n            It represents the most significant digit of the seconds fraction and all trailing `0` s will be printed to meet the number of `F` s in the pattern,\n          \n          \n            \n            e.g.: for a time part `10:20:30.1234` and pattern `HH:mm:ss.FFFFFF`, the output string of the function would be: `10:20:30.123400`.\n          \n          \n            \n            Diverging from the reference documentation, format specifier `F` behaves identical to format specifier `f`.\n          \n      \n    \n    \n  \n\nIMO the docs for f should explain sufficiently F's behavior, we shouldn't need an extra example.\nBut stepping back, if f==F, why do we need F at all? @matriv, do we want to plug into some SQL Server's FORMAT usages? Otherwise I guess it could be dropped altogether.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r458905624", "createdAt": "2020-07-22T16:04:36Z", "author": {"login": "bpintea"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -721,6 +721,53 @@ include-tagged::{sql-specs}/docs/docs.csv-spec[truncateIntervalHour]\n include-tagged::{sql-specs}/docs/docs.csv-spec[truncateIntervalDay]\n --------------------------------------------------\n \n+[[sql-functions-datetime-format]]\n+==== `FORMAT`\n+\n+.Synopsis:\n+[source, sql]\n+--------------------------------------------------\n+FORMAT(\n+    date_exp/datetime_exp/time_exp, <1>\n+    string_exp) <2>\n+--------------------------------------------------\n+\n+*Input*:\n+\n+<1> date/datetime/time expression\n+<2> format pattern\n+\n+*Output*: string\n+\n+*Description*: Returns the date/datetime/time as a string using the format specified in the 2nd argument. The formatting\n+pattern used is the one from\n+https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql?view=sql-server-ver15#ExampleD[Microsoft SQL Server Format Specification].\n+If any of the two arguments is `null` or the pattern is an empty string `null` is returned.\n+\n+[NOTE]\n+If the 1st argument is of type `time`, then pattern specified by the 2nd argument cannot contain date related units\n+(e.g. 'dd', 'MM', 'YYYY', etc.). If it contains such units an error is returned.\n+\n+[NOTE]\n+Format specifier `F` will be working similar to format specifier `f`.\n+It represents the most significant digit of the seconds fraction and all trailing `0` s will be printed to meet the number of `F` s in the pattern,\n+e.g.: for a time part `10:20:30.1234` and pattern `HH:mm:ss.FFFFFF`, the output string of the function would be: `10:20:30.123400`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e72fb768191cfc40b4fb49f325a06b95c84171a2"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDY0NjYw", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-453464660", "createdAt": "2020-07-22T16:04:45Z", "commit": {"oid": "e72fb768191cfc40b4fb49f325a06b95c84171a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowNDo0NVrOG1pYfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowNDo0NVrOG1pYfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwNTcyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql?view=sql-server-ver15#ExampleD[Microsoft SQL Server Format Specification].\n          \n          \n            \n            https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql#ExampleD[Microsoft SQL Server Format Specification].\n          \n      \n    \n    \n  \n\nview URL param's superfluous, but not hurting either.\nHowever, wouldn't the source reference page itself be more suitable as the format reference, instead of an example page? We could/should still reference the SQL Server FORMAT function (in the lines of \"as used by the FORMAT function\" or similar) to link it back to SQL, however.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r458905726", "createdAt": "2020-07-22T16:04:45Z", "author": {"login": "bpintea"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -721,6 +721,53 @@ include-tagged::{sql-specs}/docs/docs.csv-spec[truncateIntervalHour]\n include-tagged::{sql-specs}/docs/docs.csv-spec[truncateIntervalDay]\n --------------------------------------------------\n \n+[[sql-functions-datetime-format]]\n+==== `FORMAT`\n+\n+.Synopsis:\n+[source, sql]\n+--------------------------------------------------\n+FORMAT(\n+    date_exp/datetime_exp/time_exp, <1>\n+    string_exp) <2>\n+--------------------------------------------------\n+\n+*Input*:\n+\n+<1> date/datetime/time expression\n+<2> format pattern\n+\n+*Output*: string\n+\n+*Description*: Returns the date/datetime/time as a string using the format specified in the 2nd argument. The formatting\n+pattern used is the one from\n+https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql?view=sql-server-ver15#ExampleD[Microsoft SQL Server Format Specification].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e72fb768191cfc40b4fb49f325a06b95c84171a2"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDY1NTMz", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-453465533", "createdAt": "2020-07-22T16:05:44Z", "commit": {"oid": "e72fb768191cfc40b4fb49f325a06b95c84171a2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e164740373641332b43c93279e7b09db1910b718", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/e164740373641332b43c93279e7b09db1910b718", "committedDate": "2020-07-23T15:52:40Z", "message": "updated links for format function specification by Microsoft Sql Server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MzA5MDA1", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-454309005", "createdAt": "2020-07-23T16:36:21Z", "commit": {"oid": "e164740373641332b43c93279e7b09db1910b718"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9963e444a68c08e73d776a65299b4e4824728469", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/9963e444a68c08e73d776a65299b4e4824728469", "committedDate": "2020-07-23T17:53:03Z", "message": "updated documentation of 'F' format specifier to avoid confusion."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f7fd40846d7ee977beb3125c959179da732b379", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/7f7fd40846d7ee977beb3125c959179da732b379", "committedDate": "2020-07-27T10:27:27Z", "message": "Merge branch 'master' into impl-format-function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NzUwODE5", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-455750819", "createdAt": "2020-07-27T12:53:21Z", "commit": {"oid": "7f7fd40846d7ee977beb3125c959179da732b379"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjo1MzoyMVrOG3hIEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo1OTozNVrOG3jv8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg2NzYwMQ==", "bodyText": "I think it's better as Fs (no whitespace between F and s).\nAlso, up to instead of upto.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r460867601", "createdAt": "2020-07-27T12:53:21Z", "author": {"login": "astefan"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -765,6 +765,55 @@ include-tagged::{sql-specs}/docs/docs.csv-spec[truncateIntervalHour]\n include-tagged::{sql-specs}/docs/docs.csv-spec[truncateIntervalDay]\n --------------------------------------------------\n \n+[[sql-functions-datetime-format]]\n+==== `FORMAT`\n+\n+.Synopsis:\n+[source, sql]\n+--------------------------------------------------\n+FORMAT(\n+    date_exp/datetime_exp/time_exp, <1>\n+    string_exp) <2>\n+--------------------------------------------------\n+\n+*Input*:\n+\n+<1> date/datetime/time expression\n+<2> format pattern\n+\n+*Output*: string\n+\n+*Description*: Returns the date/datetime/time as a string using the\n+https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql#argumentsl[format] specified in the 2nd argument. The formatting\n+pattern used is the one from\n+https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings[Microsoft SQL Server Format Specification].\n+If any of the two arguments is `null` or the pattern is an empty string `null` is returned.\n+\n+[NOTE]\n+If the 1st argument is of type `time`, then pattern specified by the 2nd argument cannot contain date related units\n+(e.g. 'dd', 'MM', 'YYYY', etc.). If it contains such units an error is returned.\n+\n+[NOTE]\n+Format specifier `F` will be working similar to format specifier `f`.\n+It will return the fractional part of seconds, and the number of digits will be same as of the number of `F` s provided as input (upto 9 digits).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f7fd40846d7ee977beb3125c959179da732b379"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg2ODczOA==", "bodyText": "Please, correctly indent the result header to match the columns size of the actual result rows.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r460868738", "createdAt": "2020-07-27T12:55:22Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/qa/server/src/main/resources/datetime.csv-spec", "diffHunk": "@@ -1017,6 +1017,110 @@ F       | 1997-05-19 00:00:00.000Z\n M       | 1996-11-05 00:00:00.000Z\n ;\n \n+selectFormat\n+schema::format_date:s|format_datetime:s|format_time:s\n+SELECT FORMAT('2020-04-05T11:22:33.123Z'::date, 'dd/MM/YYYY HH:mm:ss.fff') AS format_date,\n+FORMAT('2020-04-05T11:22:33.123Z'::datetime, 'dd/MM/YYYY HH:mm:ss.ff') AS format_datetime,\n+FORMAT('11:22:33.123456789Z'::time, 'HH:mm:ss.ff') AS format_time;\n+\n+       format_date          |    format_datetime         |   format_time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f7fd40846d7ee977beb3125c959179da732b379"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg2OTczMA==", "bodyText": "Same thing here, as well: indent the results properly.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r460869730", "createdAt": "2020-07-27T12:57:11Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/qa/server/src/main/resources/datetime.csv-spec", "diffHunk": "@@ -1017,6 +1017,110 @@ F       | 1997-05-19 00:00:00.000Z\n M       | 1996-11-05 00:00:00.000Z\n ;\n \n+selectFormat\n+schema::format_date:s|format_datetime:s|format_time:s\n+SELECT FORMAT('2020-04-05T11:22:33.123Z'::date, 'dd/MM/YYYY HH:mm:ss.fff') AS format_date,\n+FORMAT('2020-04-05T11:22:33.123Z'::datetime, 'dd/MM/YYYY HH:mm:ss.ff') AS format_datetime,\n+FORMAT('11:22:33.123456789Z'::time, 'HH:mm:ss.ff') AS format_time;\n+\n+       format_date          |    format_datetime         |   format_time\n+------------------------+------------------------+----------------\n+05/04/2020 00:00:00.000 | 05/04/2020 11:22:33.12 | 11:22:33.12\n+;\n+\n+selectFormatWithField\n+schema::birth_date:ts|format_birth_date1:s|format_birth_date2:s\n+SELECT birth_date, FORMAT(birth_date, 'MM/dd/YYYY') AS format_birth_date1, FORMAT(birth_date, concat(gender, 'M/dd')) AS format_birth_date2\n+FROM test_emp WHERE gender = 'M' AND emp_no BETWEEN 10037 AND 10052 ORDER BY emp_no;\n+\n+       birth_date        | format_birth_date1 | format_birth_date2\n+-------------------------+----------------+----------------\n+1963-07-22 00:00:00.000Z | 07/22/1963     | 07/22", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f7fd40846d7ee977beb3125c959179da732b379"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg3NjMwNQ==", "bodyText": "Please, add emp_no to the SELECT. This is the only way I can make sure the results are ordered properly, without actually testing this myself.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r460876305", "createdAt": "2020-07-27T13:08:07Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/qa/server/src/main/resources/datetime.csv-spec", "diffHunk": "@@ -1017,6 +1017,110 @@ F       | 1997-05-19 00:00:00.000Z\n M       | 1996-11-05 00:00:00.000Z\n ;\n \n+selectFormat\n+schema::format_date:s|format_datetime:s|format_time:s\n+SELECT FORMAT('2020-04-05T11:22:33.123Z'::date, 'dd/MM/YYYY HH:mm:ss.fff') AS format_date,\n+FORMAT('2020-04-05T11:22:33.123Z'::datetime, 'dd/MM/YYYY HH:mm:ss.ff') AS format_datetime,\n+FORMAT('11:22:33.123456789Z'::time, 'HH:mm:ss.ff') AS format_time;\n+\n+       format_date          |    format_datetime         |   format_time\n+------------------------+------------------------+----------------\n+05/04/2020 00:00:00.000 | 05/04/2020 11:22:33.12 | 11:22:33.12\n+;\n+\n+selectFormatWithField\n+schema::birth_date:ts|format_birth_date1:s|format_birth_date2:s\n+SELECT birth_date, FORMAT(birth_date, 'MM/dd/YYYY') AS format_birth_date1, FORMAT(birth_date, concat(gender, 'M/dd')) AS format_birth_date2\n+FROM test_emp WHERE gender = 'M' AND emp_no BETWEEN 10037 AND 10052 ORDER BY emp_no;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f7fd40846d7ee977beb3125c959179da732b379"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg3NzI4Nw==", "bodyText": "Same here: add emp_no to the SELECT.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r460877287", "createdAt": "2020-07-27T13:09:45Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/qa/server/src/main/resources/datetime.csv-spec", "diffHunk": "@@ -1017,6 +1017,110 @@ F       | 1997-05-19 00:00:00.000Z\n M       | 1996-11-05 00:00:00.000Z\n ;\n \n+selectFormat\n+schema::format_date:s|format_datetime:s|format_time:s\n+SELECT FORMAT('2020-04-05T11:22:33.123Z'::date, 'dd/MM/YYYY HH:mm:ss.fff') AS format_date,\n+FORMAT('2020-04-05T11:22:33.123Z'::datetime, 'dd/MM/YYYY HH:mm:ss.ff') AS format_datetime,\n+FORMAT('11:22:33.123456789Z'::time, 'HH:mm:ss.ff') AS format_time;\n+\n+       format_date          |    format_datetime         |   format_time\n+------------------------+------------------------+----------------\n+05/04/2020 00:00:00.000 | 05/04/2020 11:22:33.12 | 11:22:33.12\n+;\n+\n+selectFormatWithField\n+schema::birth_date:ts|format_birth_date1:s|format_birth_date2:s\n+SELECT birth_date, FORMAT(birth_date, 'MM/dd/YYYY') AS format_birth_date1, FORMAT(birth_date, concat(gender, 'M/dd')) AS format_birth_date2\n+FROM test_emp WHERE gender = 'M' AND emp_no BETWEEN 10037 AND 10052 ORDER BY emp_no;\n+\n+       birth_date        | format_birth_date1 | format_birth_date2\n+-------------------------+----------------+----------------\n+1963-07-22 00:00:00.000Z | 07/22/1963     | 07/22\n+1960-07-20 00:00:00.000Z | 07/20/1960     | 07/20\n+1959-10-01 00:00:00.000Z | 10/01/1959     | 10/01\n+null                     | null           | null\n+null                     | null           | null\n+null                     | null           | null\n+null                     | null           | null\n+null                     | null           | null\n+1958-05-21 00:00:00.000Z | 05/21/1958     | 05/21\n+1953-07-28 00:00:00.000Z | 07/28/1953     | 07/28\n+1961-02-26 00:00:00.000Z | 02/26/1961     | 02/26\n+;\n+\n+formatWhere\n+schema::birth_date:ts|format_birth_date:s\n+SELECT birth_date, FORMAT(birth_date, 'MM') AS format_birth_date FROM test_emp\n+WHERE FORMAT(birth_date, 'MM')::integer > 10 ORDER BY emp_no LIMIT 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f7fd40846d7ee977beb3125c959179da732b379"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwOTM0NA==", "bodyText": "I think there are some unit tests missing, regarding the various patterns.\n\nm - The minute, from 0 through 59\nM - The month, from 1 through 12\nh - The hour, using a 12-hour clock from 1 to 12\nH - The hour, using a 24-hour clock from 0 to 23\nd - The day of the month, from 1 through 31\nMMM\nMMMM\ns\nother flavors of the year formatting (y, yy, yyy, yyyyy)\nother flavors of z (zz, zzz)\nalso, special handling situations: %, \\, any string literal.\nmaybe others I missed.\n\nIf we don't plan on supporting any of the above, at least take them out from the docs, because as the docs read now, we support patterns according  with https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings.\nCC @matriv", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r460909344", "createdAt": "2020-07-27T13:57:58Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/DateTimeFormatProcessorTests.java", "diffHunk": "@@ -141,5 +184,62 @@ public void testFormatting() {\n                 .asProcessor()\n                 .process(null)\n         );\n+\n+\n+        zoneId = ZoneId.of(\"Etc/GMT-10\");\n+        dateTime = l(dateTime(2019, 9, 3, 18, 10, 37, 123456789));\n+\n+        assertEquals(\"AD : 3\", new Format(Source.EMPTY, dateTime, l(\"G : Q\"), zoneId).makePipe().asProcessor().process(null));\n+        assertEquals(\"AD\", new Format(Source.EMPTY, dateTime, l(\"g\"), zoneId).makePipe().asProcessor().process(null));\n+        assertEquals(\n+            \"2019-09-04\",\n+            new Format(Source.EMPTY, dateTime, l(\"YYYY-MM-dd\"), zoneId).makePipe().asProcessor().process(null)\n+        );\n+        assertEquals(\n+            \"2019-09-04 Wed\",\n+            new Format(Source.EMPTY, dateTime, l(\"YYYY-MM-dd ddd\"), zoneId).makePipe().asProcessor().process(null)\n+        );\n+        assertEquals(\n+            \"2019-09-04 Wednesday\",\n+            new Format(Source.EMPTY, dateTime, l(\"YYYY-MM-dd dddd\"), zoneId).makePipe().asProcessor().process(null)\n+        );\n+        assertEquals(\n+            \"04:10:37.123456\",\n+            new Format(Source.EMPTY, dateTime, l(\"HH:mm:ss.ffffff\"), zoneId).makePipe().asProcessor().process(null)\n+        );\n+        assertEquals(\n+            \"2019-09-04 04:10:37.12345678\",\n+            new Format(Source.EMPTY, dateTime, l(\"YYYY-MM-dd HH:mm:ss.ffffffff\"), zoneId).makePipe().asProcessor().process(null)\n+        );\n+        assertEquals(\n+            \"2019-09-04 04:10:37.12345678 AM\",\n+            new Format(Source.EMPTY, dateTime, l(\"YYYY-MM-dd HH:mm:ss.ffffffff tt\"), zoneId).makePipe().asProcessor().process(null)\n+        );\n+        assertEquals(\n+            \"2019-09-04 04:10:37.12345678 AM\",\n+            new Format(Source.EMPTY, dateTime, l(\"YYYY-MM-dd HH:mm:ss.ffffffff t\"), zoneId).makePipe().asProcessor().process(null)\n+        );\n+        assertEquals(\"+1000\", new Format(Source.EMPTY, dateTime, l(\"Z\"), zoneId).makePipe().asProcessor().process(null));\n+        assertEquals(\"Etc/GMT-10\", new Format(Source.EMPTY, dateTime, l(\"z\"), zoneId).makePipe().asProcessor().process(null));\n+        assertEquals(\"Etc/GMT-10\", new Format(Source.EMPTY, dateTime, l(\"VV\"), zoneId).makePipe().asProcessor().process(null));\n+        assertEquals(\"Etc/GMT-10\", new Format(Source.EMPTY, dateTime, l(\"K\"), zoneId).makePipe().asProcessor().process(null));\n+\n+        assertEquals(\"1\", new Format(Source.EMPTY, dateTime, l(\"F\"), zoneId).makePipe().asProcessor().process(null));\n+        assertEquals(\"12\", new Format(Source.EMPTY, dateTime, l(\"FF\"), zoneId).makePipe().asProcessor().process(null));\n+\n+        zoneId = ZoneId.of(\"America/Sao_Paulo\");\n+        assertEquals(\"-0300\", new Format(Source.EMPTY, dateTime, l(\"Z\"), zoneId).makePipe().asProcessor().process(null));\n+        assertEquals(\"BRT\", new Format(Source.EMPTY, dateTime, l(\"z\"), zoneId).makePipe().asProcessor().process(null));\n+        assertEquals(\n+            \"America/Sao_Paulo\",\n+            new Format(Source.EMPTY, dateTime, l(\"VV\"), zoneId).makePipe().asProcessor().process(null)\n+        );\n+\n+        assertEquals(\n+            \"07:11:22.1234\",\n+            new Format(Source.EMPTY, l(time(10, 11, 22, 123456789), TIME), l(\"HH:mm:ss.ffff\"), zoneId).makePipe()\n+                .asProcessor()\n+                .process(null)\n+        );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f7fd40846d7ee977beb3125c959179da732b379"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxMDU3Nw==", "bodyText": "Please, change the pattern to be String and make sure the method gets a String instead of blindly casting it to String.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r460910577", "createdAt": "2020-07-27T13:59:35Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/DateTimeFormatProcessor.java", "diffHunk": "@@ -17,55 +18,88 @@\n import java.time.format.DateTimeFormatter;\n import java.time.temporal.TemporalAccessor;\n import java.util.Locale;\n+import java.util.Objects;\n \n import static org.elasticsearch.xpack.sql.util.DateUtils.asTimeAtZone;\n \n public class DateTimeFormatProcessor extends BinaryDateTimeProcessor {\n \n     public static final String NAME = \"dtformat\";\n+    private static final String[][] JAVA_TIME_FORMAT_REPLACEMENTS = {\n+        {\"tt\", \"a\"},\n+        {\"t\", \"a\"},\n+        {\"dddd\", \"eeee\"},\n+        {\"ddd\", \"eee\"},\n+        {\"K\", \"v\"},\n+        {\"g\", \"G\"},\n+        {\"f\", \"S\"},\n+        {\"F\", \"S\"}\n+    };\n+    private final Formatter formatter;\n \n-    public DateTimeFormatProcessor(Processor source1, Processor source2, ZoneId zoneId) {\n+\n+    public enum Formatter {\n+        FORMAT,\n+        DATE_TIME_FORMAT;\n+\n+        public String getJavaPattern(final Object pattern) {\n+            String javaDateFormat = (String) pattern;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f7fd40846d7ee977beb3125c959179da732b379"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1990dbeee4f16be9c2dcc9ccd6260d1bc4ea6f99", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/1990dbeee4f16be9c2dcc9ccd6260d1bc4ea6f99", "committedDate": "2020-07-27T16:35:55Z", "message": "Changed getJavaPattern method to private"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70ad4071a7254d4aa873e2b30e8491ba08de4d38", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/70ad4071a7254d4aa873e2b30e8491ba08de4d38", "committedDate": "2020-07-30T15:48:23Z", "message": "updated documentation of 'F'. (corrected typo)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7660eff90d00dae6783ee0fbc1a02ea54991dee", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/e7660eff90d00dae6783ee0fbc1a02ea54991dee", "committedDate": "2020-07-31T14:04:46Z", "message": "corrected indentation in integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76cc786c9b8fb692db760ef650cf0b3c667914c9", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/76cc786c9b8fb692db760ef650cf0b3c667914c9", "committedDate": "2020-07-31T14:07:03Z", "message": "Added new IT to pass result of format to LENGTH function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eea920f728313df1e5377d88e52281f4087c5c54", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/eea920f728313df1e5377d88e52281f4087c5c54", "committedDate": "2020-07-31T14:36:48Z", "message": "IT added emp_no field to result. Corrected indentation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e092a18271e77ab16268a319982454e678ab036", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/1e092a18271e77ab16268a319982454e678ab036", "committedDate": "2020-07-31T15:06:04Z", "message": "Added more Unit Tests regarding more patterns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76b71051c9326fe360a697f5a3182adf6da11a13", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/76b71051c9326fe360a697f5a3182adf6da11a13", "committedDate": "2020-09-17T16:01:06Z", "message": "Added Special cases in documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjc0OTc4", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-491274978", "createdAt": "2020-09-18T08:54:13Z", "commit": {"oid": "76b71051c9326fe360a697f5a3182adf6da11a13"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwODo1NDoxM1rOHUEI9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwODo1NDoxM1rOHUEI9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwMTM5OQ==", "bodyText": "This is not 100% correct. if you have a year with 2 digits (let's say year 45) and use 3 or 4 y -> yyy or yyyy then you will get it with left padded 0s -> 045 and 0045. Could you please add some test like that, and properly rephrase the docs?", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r490801399", "createdAt": "2020-09-18T08:54:13Z", "author": {"login": "matriv"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -793,11 +793,14 @@ If any of the two arguments is `null` or the pattern is an empty string `null` i\n If the 1st argument is of type `time`, then pattern specified by the 2nd argument cannot contain date related units\n (e.g. 'dd', 'MM', 'YYYY', etc.). If it contains such units an error is returned.\n \n-[NOTE]\n-Format specifier `F` will be working similar to format specifier `f`.\n+*Special Cases*\n+\n+- Format specifier `F` will be working similar to format specifier `f`.\n It will return the fractional part of seconds, and the number of digits will be same as of the number of `Fs` provided as input (up to 9 digits).\n Result will contain `0` appended in the end to match with number of `F` provided.\n e.g.: for a time part `10:20:30.1234` and pattern `HH:mm:ss.FFFFFF`, the output string of the function would be: `10:20:30.123400`.\n+- Format Specifier `y` will be working similar to `yyyy`. eg.: For year `2009`, `y` will be returning `2009` instead of `9`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76b71051c9326fe360a697f5a3182adf6da11a13"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d60a289ec92f91fe3bbe9525ed2c18168f9f7715", "author": {"user": {"login": "binu-r", "name": "Binu R J"}}, "url": "https://github.com/elastic/elasticsearch/commit/d60a289ec92f91fe3bbe9525ed2c18168f9f7715", "committedDate": "2020-09-18T12:26:45Z", "message": "updated documentation for 'y' format specifier"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNDcyMjAw", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-491472200", "createdAt": "2020-09-18T13:37:50Z", "commit": {"oid": "d60a289ec92f91fe3bbe9525ed2c18168f9f7715"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzozNzo1MFrOHUNgiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzozNzo1MFrOHUNgiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk1NDg5MQ==", "bodyText": "You're not mentioning the left 0 padding when the ys are more than the digits of the year.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r490954891", "createdAt": "2020-09-18T13:37:50Z", "author": {"login": "matriv"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -799,8 +799,9 @@ If the 1st argument is of type `time`, then pattern specified by the 2nd argumen\n It will return the fractional part of seconds, and the number of digits will be same as of the number of `Fs` provided as input (up to 9 digits).\n Result will contain `0` appended in the end to match with number of `F` provided.\n e.g.: for a time part `10:20:30.1234` and pattern `HH:mm:ss.FFFFFF`, the output string of the function would be: `10:20:30.123400`.\n-- Format Specifier `y` will be working similar to `yyyy`. eg.: For year `2009`, `y` will be returning `2009` instead of `9`.\n-- Special characters like `\"` , `\\` and `%` will be returned as it is without any change. eg.: formatting year `17-sep-2020` with `%M` will return `%9`\n+- Format Specifier `y` will return year-of-era instead of one/two low-order digits.\n+eg.: For year `2009`, `y` will be returning `2009` instead of `9`. For year `43`, `y` format specifier will return `43`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d60a289ec92f91fe3bbe9525ed2c18168f9f7715"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5168d831ad7abb340ede63463db255cfcbb80e6d", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/5168d831ad7abb340ede63463db255cfcbb80e6d", "committedDate": "2020-09-20T09:31:43Z", "message": "Merge branch 'master' into impl-format-function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMTkwMzA3", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-492190307", "createdAt": "2020-09-20T11:52:54Z", "commit": {"oid": "5168d831ad7abb340ede63463db255cfcbb80e6d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNTQzMzM1", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-492543335", "createdAt": "2020-09-21T12:25:58Z", "commit": {"oid": "5168d831ad7abb340ede63463db255cfcbb80e6d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNTQ4NzEw", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-492548710", "createdAt": "2020-09-21T12:31:10Z", "commit": {"oid": "5168d831ad7abb340ede63463db255cfcbb80e6d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjozMToxMFrOHVNpxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjozMToxMFrOHVNpxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAwNTgyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql#argumentsl[format] specified in the 2nd argument. The formatting\n          \n          \n            \n            https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql#arguments[format] specified in the 2nd argument. The formatting\n          \n      \n    \n    \n  \n\nsorry, spotted only now.", "url": "https://github.com/elastic/elasticsearch/pull/55454#discussion_r492005828", "createdAt": "2020-09-21T12:31:10Z", "author": {"login": "bpintea"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -765,6 +765,59 @@ include-tagged::{sql-specs}/docs/docs.csv-spec[truncateIntervalHour]\n include-tagged::{sql-specs}/docs/docs.csv-spec[truncateIntervalDay]\n --------------------------------------------------\n \n+[[sql-functions-datetime-format]]\n+==== `FORMAT`\n+\n+.Synopsis:\n+[source, sql]\n+--------------------------------------------------\n+FORMAT(\n+    date_exp/datetime_exp/time_exp, <1>\n+    string_exp) <2>\n+--------------------------------------------------\n+\n+*Input*:\n+\n+<1> date/datetime/time expression\n+<2> format pattern\n+\n+*Output*: string\n+\n+*Description*: Returns the date/datetime/time as a string using the\n+https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql#argumentsl[format] specified in the 2nd argument. The formatting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5168d831ad7abb340ede63463db255cfcbb80e6d"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNTQ5MDAw", "url": "https://github.com/elastic/elasticsearch/pull/55454#pullrequestreview-492549000", "createdAt": "2020-09-21T12:31:30Z", "commit": {"oid": "5168d831ad7abb340ede63463db255cfcbb80e6d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e8c6dfa703dbc7da120bcbcdb0053ee652eefde", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/5e8c6dfa703dbc7da120bcbcdb0053ee652eefde", "committedDate": "2020-09-21T12:39:13Z", "message": "Update docs/reference/sql/functions/date-time.asciidoc\r\n\r\ntypo\n\nCo-authored-by: Bogdan Pintea <bpintea@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 709, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}