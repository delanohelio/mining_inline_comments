{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODU1ODMz", "number": 52316, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMTo1Nzo1MFrODftmXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzo1NjozMFrODf-IUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTc5NTQ4OnYy", "diffSide": "RIGHT", "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/Docker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMTo1Nzo1MFrOFpk_mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMTo1Nzo1MFrOFpk_mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0MjA0MQ==", "bodyText": "We lose the original exception in this scenario and effectively replace it with one about not being able to fetch logs. We should probably still rethrow the original exception and maybe add this one as a suppressed exception.", "url": "https://github.com/elastic/elasticsearch/pull/52316#discussion_r379142041", "createdAt": "2020-02-13T21:57:50Z", "author": {"login": "mark-vieira"}, "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/Docker.java", "diffHunk": "@@ -291,6 +291,22 @@ public static void copyFromContainer(Path from, Path to) {\n \n             return super.getScriptCommand(\"docker exec --user elasticsearch:root --tty \" + containerId + \" \" + script);\n         }\n+\n+        @Override\n+        public Result run(String script) {\n+            try {\n+                return super.run(script);\n+            } catch (ShellException e) {\n+                try {\n+                    final Shell.Result dockerLogs = getContainerLogs();\n+                    throw new ShellException(\n+                        e.getMessage() + \"\\n\\nContainer stdout: \" + dockerLogs.stdout + \"\\n\\nContainer stderr: \" + dockerLogs.stderr\n+                    );\n+                } catch (ShellException logsException) {\n+                    throw new ShellException(\"Command failed, and couldn't get docker logs\", logsException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22e78cef736df31de1acfb194107a5cffde468f2"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTc5NzYwOnYy", "diffSide": "RIGHT", "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/Docker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMTo1ODozMlrOFplA7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMTo1ODozMlrOFplA7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0MjM4Mw==", "bodyText": "Even though we are logging the original exception message, we should still add it as the cause to this one, otherwise we lose the original call site stacktrace.", "url": "https://github.com/elastic/elasticsearch/pull/52316#discussion_r379142383", "createdAt": "2020-02-13T21:58:32Z", "author": {"login": "mark-vieira"}, "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/Docker.java", "diffHunk": "@@ -291,6 +291,22 @@ public static void copyFromContainer(Path from, Path to) {\n \n             return super.getScriptCommand(\"docker exec --user elasticsearch:root --tty \" + containerId + \" \" + script);\n         }\n+\n+        @Override\n+        public Result run(String script) {\n+            try {\n+                return super.run(script);\n+            } catch (ShellException e) {\n+                try {\n+                    final Shell.Result dockerLogs = getContainerLogs();\n+                    throw new ShellException(\n+                        e.getMessage() + \"\\n\\nContainer stdout: \" + dockerLogs.stdout + \"\\n\\nContainer stderr: \" + dockerLogs.stderr", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22e78cef736df31de1acfb194107a5cffde468f2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjQ1ODg0OnYy", "diffSide": "RIGHT", "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/Docker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNDoyMzozMVrOFprStg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNDoyMzozMVrOFprStg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0NTIzOA==", "bodyText": "Why are we catching an exception we just threw on the line above? It seems like we are adding an additional stack frame, why?", "url": "https://github.com/elastic/elasticsearch/pull/52316#discussion_r379245238", "createdAt": "2020-02-14T04:23:31Z", "author": {"login": "rjernst"}, "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/Docker.java", "diffHunk": "@@ -291,6 +291,22 @@ public static void copyFromContainer(Path from, Path to) {\n \n             return super.getScriptCommand(\"docker exec --user elasticsearch:root --tty \" + containerId + \" \" + script);\n         }\n+\n+        @Override\n+        public Result run(String script) {\n+            try {\n+                return super.run(script);\n+            } catch (ShellException e) {\n+                try {\n+                    final Shell.Result dockerLogs = getContainerLogs();\n+                    throw new ShellException(\n+                        e.getMessage() + \"\\n\\nContainer stdout: \" + dockerLogs.stdout + \"\\n\\nContainer stderr: \" + dockerLogs.stderr\n+                    );\n+                } catch (ShellException logsException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22e78cef736df31de1acfb194107a5cffde468f2"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODUwMzg1OnYy", "diffSide": "RIGHT", "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/Docker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzo1NjozMFrOFp-4RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzo1NjozMFrOFp-4RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU2NjE0OQ==", "bodyText": "This is losing the stack trace of the nested exception. Instead we should attach this as a suppressed exception to the original exception", "url": "https://github.com/elastic/elasticsearch/pull/52316#discussion_r379566149", "createdAt": "2020-02-14T17:56:30Z", "author": {"login": "rjernst"}, "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/Docker.java", "diffHunk": "@@ -291,6 +291,36 @@ public static void copyFromContainer(Path from, Path to) {\n \n             return super.getScriptCommand(\"docker exec --user elasticsearch:root --tty \" + containerId + \" \" + script);\n         }\n+\n+        /**\n+         * Overrides {@link Shell#run(String)} to attempt to collect Docker container\n+         * logs when a command fails to execute successfully.\n+         * @param script the command to run\n+         * @return the command's output\n+         */\n+        @Override\n+        public Result run(String script) {\n+            try {\n+                return super.run(script);\n+            } catch (ShellException e) {\n+                try {\n+                    final Shell.Result dockerLogs = getContainerLogs();\n+                    logger.error(\n+                        \"Command [{}] failed.\\n\\nContainer stdout: [{}]\\n\\nContainer stderr: [{}]\",\n+                        script,\n+                        dockerLogs.stdout,\n+                        dockerLogs.stderr\n+                    );\n+                } catch (ShellException shellException) {\n+                    logger.error(\n+                        \"Command [{}] failed.\\n\\nTried to dump container logs but that failed too: [{}]\",\n+                        script,\n+                        shellException.getMessage()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c31c7f017ae2abd684ca9152de2c488ad0114ba"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3992, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}