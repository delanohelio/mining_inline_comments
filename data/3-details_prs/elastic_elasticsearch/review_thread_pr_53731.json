{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNDcxNDE5", "number": 53731, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODo0OToyOVrODqgt-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODo0OToyOVrODqgt-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTAyODQzOnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODo0OToyOVrOF6Tdyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTowNToxMVrOF6mtsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4MDY1MQ==", "bodyText": "@romseygeek sorry for the late review, I'm wondering why this check wasn't sufficient for emitting a deprecation warning? Was it not triggered on all the relevant code paths?\nIt would be nice to keep this strategy if possible, since it's consistent with all our other types deprecation warnings (deprecatedAndMaybeLog(\"api_name_with_types\", TYPES_DEPRECATION_MESSAGE);). It also lets us avoid adding an allowed_warnings section to the yml tests, since in 7.x we already ignore all warnings in yml tests that start with [types removal] ... .", "url": "https://github.com/elastic/elasticsearch/pull/53731#discussion_r396680651", "createdAt": "2020-03-23T18:49:29Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java", "diffHunk": "@@ -402,15 +395,9 @@ public static TermsQueryBuilder fromXContent(XContentParser parser) throws IOExc\n                     \"followed by array of terms or a document lookup specification\");\n         }\n \n-        TermsQueryBuilder builder = new TermsQueryBuilder(fieldName, values, termsLookup)\n+        return new TermsQueryBuilder(fieldName, values, termsLookup)\n             .boost(boost)\n             .queryName(queryName);\n-\n-        if (builder.isTypeless() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2bb3c28a7a684ca091cbe7bb77ba029f821f48"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk5NjAxNw==", "bodyText": "There was a path that didn't trigger the warning, but I can't find it now, so it may have been refactored away elsewhere.  I'll have a look, it would be good to remove some of these extra allowed_warnings messages.", "url": "https://github.com/elastic/elasticsearch/pull/53731#discussion_r396996017", "createdAt": "2020-03-24T09:05:11Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java", "diffHunk": "@@ -402,15 +395,9 @@ public static TermsQueryBuilder fromXContent(XContentParser parser) throws IOExc\n                     \"followed by array of terms or a document lookup specification\");\n         }\n \n-        TermsQueryBuilder builder = new TermsQueryBuilder(fieldName, values, termsLookup)\n+        return new TermsQueryBuilder(fieldName, values, termsLookup)\n             .boost(boost)\n             .queryName(queryName);\n-\n-        if (builder.isTypeless() == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4MDY1MQ=="}, "originalCommit": {"oid": "4a2bb3c28a7a684ca091cbe7bb77ba029f821f48"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4332, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}