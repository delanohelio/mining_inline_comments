{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NDcyMzU5", "number": 51267, "title": "[ML][Inference] fixing ingest IT tests", "bodyText": "Converts InferenceIngestIT into a ESRestTestCase.\ncloses #51201", "createdAt": "2020-01-21T19:31:36Z", "url": "https://github.com/elastic/elasticsearch/pull/51267", "merged": true, "mergeCommit": {"oid": "004fbef905b66b086eeefde016a994b96e9ec130"}, "closed": true, "closedAt": "2020-01-22T13:49:38Z", "author": {"login": "benwtrent"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8mCbnAH2gAyMzY1NDcyMzU5OmQzZTUxZDVjYjljNmZiZjE2MmYzMmY4NjljY2QxZDExMWQ0OGNiMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb82AmjgFqTM0NjU5NjAwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d3e51d5cb9c6fbf162f32f869ccd1d111d48cb23", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/d3e51d5cb9c6fbf162f32f869ccd1d111d48cb23", "committedDate": "2020-01-21T19:09:26Z", "message": "[ML][Inference] fixing ingest IT tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4d6115e383a28488e35dd6989c1927ff282dce6", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/c4d6115e383a28488e35dd6989c1927ff282dce6", "committedDate": "2020-01-21T20:00:37Z", "message": "Merge branch 'master' into feature/ml-inference-fix-issue-51201"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MzkyMzIw", "url": "https://github.com/elastic/elasticsearch/pull/51267#pullrequestreview-346392320", "createdAt": "2020-01-22T07:45:36Z", "commit": {"oid": "c4d6115e383a28488e35dd6989c1927ff282dce6"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzo0NTozN1rOFgS4fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzo1OTozMlrOFgTJZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwODEyNg==", "bodyText": "Could you add a comment explaining how does changing MlNativeAutodetectIntegTestCase to ESRestTestCase solve the issue this PR is supposed to solve?\nIf I were to write a new IT test, how would I know which base class should I use?", "url": "https://github.com/elastic/elasticsearch/pull/51267#discussion_r369408126", "createdAt": "2020-01-22T07:45:37Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -5,141 +5,107 @@\n  */\n package org.elasticsearch.xpack.ml.integration;\n \n-import org.elasticsearch.action.admin.indices.refresh.RefreshRequest;\n-import org.elasticsearch.action.ingest.SimulateDocumentBaseResult;\n-import org.elasticsearch.action.ingest.SimulatePipelineResponse;\n-import org.elasticsearch.action.search.SearchRequest;\n-import org.elasticsearch.common.bytes.BytesArray;\n-import org.elasticsearch.common.xcontent.DeprecationHandler;\n+import org.apache.http.util.EntityUtils;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n import org.elasticsearch.common.xcontent.XContentHelper;\n-import org.elasticsearch.common.xcontent.XContentParser;\n import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.index.query.QueryBuilder;\n import org.elasticsearch.index.query.QueryBuilders;\n-import org.elasticsearch.search.builder.SearchSourceBuilder;\n-import org.elasticsearch.xpack.core.ml.action.DeleteTrainedModelAction;\n-import org.elasticsearch.xpack.core.ml.action.PutTrainedModelAction;\n+import org.elasticsearch.test.SecuritySettingsSourceField;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n import org.elasticsearch.xpack.core.ml.inference.MlInferenceNamedXContentProvider;\n-import org.elasticsearch.xpack.core.ml.inference.TrainedModelConfig;\n+import org.elasticsearch.xpack.core.ml.integration.MlRestTestStateCleaner;\n import org.junit.After;\n import org.junit.Before;\n \n import java.io.IOException;\n-import java.nio.charset.StandardCharsets;\n import java.util.HashMap;\n-import java.util.List;\n import java.util.Map;\n \n+import static org.elasticsearch.xpack.core.security.authc.support.UsernamePasswordToken.basicAuthHeaderValue;\n import static org.hamcrest.CoreMatchers.containsString;\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.is;\n \n-public class InferenceIngestIT extends MlNativeAutodetectIntegTestCase {\n+public class InferenceIngestIT extends ESRestTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d6115e383a28488e35dd6989c1927ff282dce6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwOTQ1MQ==", "bodyText": "Do you plan to use this method in other places?\nIf not, you can either inline it into cleanUpData or make it private.", "url": "https://github.com/elastic/elasticsearch/pull/51267#discussion_r369409451", "createdAt": "2020-01-22T07:50:13Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -5,141 +5,107 @@\n  */\n package org.elasticsearch.xpack.ml.integration;\n \n-import org.elasticsearch.action.admin.indices.refresh.RefreshRequest;\n-import org.elasticsearch.action.ingest.SimulateDocumentBaseResult;\n-import org.elasticsearch.action.ingest.SimulatePipelineResponse;\n-import org.elasticsearch.action.search.SearchRequest;\n-import org.elasticsearch.common.bytes.BytesArray;\n-import org.elasticsearch.common.xcontent.DeprecationHandler;\n+import org.apache.http.util.EntityUtils;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n import org.elasticsearch.common.xcontent.XContentHelper;\n-import org.elasticsearch.common.xcontent.XContentParser;\n import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.index.query.QueryBuilder;\n import org.elasticsearch.index.query.QueryBuilders;\n-import org.elasticsearch.search.builder.SearchSourceBuilder;\n-import org.elasticsearch.xpack.core.ml.action.DeleteTrainedModelAction;\n-import org.elasticsearch.xpack.core.ml.action.PutTrainedModelAction;\n+import org.elasticsearch.test.SecuritySettingsSourceField;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n import org.elasticsearch.xpack.core.ml.inference.MlInferenceNamedXContentProvider;\n-import org.elasticsearch.xpack.core.ml.inference.TrainedModelConfig;\n+import org.elasticsearch.xpack.core.ml.integration.MlRestTestStateCleaner;\n import org.junit.After;\n import org.junit.Before;\n \n import java.io.IOException;\n-import java.nio.charset.StandardCharsets;\n import java.util.HashMap;\n-import java.util.List;\n import java.util.Map;\n \n+import static org.elasticsearch.xpack.core.security.authc.support.UsernamePasswordToken.basicAuthHeaderValue;\n import static org.hamcrest.CoreMatchers.containsString;\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.is;\n \n-public class InferenceIngestIT extends MlNativeAutodetectIntegTestCase {\n+public class InferenceIngestIT extends ESRestTestCase {\n+\n+    private static final String BASIC_AUTH_VALUE_SUPER_USER =\n+        basicAuthHeaderValue(\"x_pack_rest_user\", SecuritySettingsSourceField.TEST_PASSWORD_SECURE_STRING);\n \n     @Before\n     public void createBothModels() throws Exception {\n-        client().execute(PutTrainedModelAction.INSTANCE, new PutTrainedModelAction.Request(buildClassificationModel())).actionGet();\n-        client().execute(PutTrainedModelAction.INSTANCE, new PutTrainedModelAction.Request(buildRegressionModel())).actionGet();\n+        Request request = new Request(\"PUT\", \"_ml/inference/test_classification\");\n+        request.setJsonEntity(CLASSIFICATION_CONFIG);\n+        client().performRequest(request);\n+\n+        request = new Request(\"PUT\", \"_ml/inference/test_regression\");\n+        request.setJsonEntity(REGRESSION_CONFIG);\n+        client().performRequest(request);\n+    }\n+\n+    public void clearMlState() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d6115e383a28488e35dd6989c1927ff282dce6"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQxMDg5Mw==", "bodyText": "Before the isAcknowledged bit was being checked. Would it be possible to add an equivalent check in the new setting?", "url": "https://github.com/elastic/elasticsearch/pull/51267#discussion_r369410893", "createdAt": "2020-01-22T07:54:37Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -5,141 +5,107 @@\n  */\n package org.elasticsearch.xpack.ml.integration;\n \n-import org.elasticsearch.action.admin.indices.refresh.RefreshRequest;\n-import org.elasticsearch.action.ingest.SimulateDocumentBaseResult;\n-import org.elasticsearch.action.ingest.SimulatePipelineResponse;\n-import org.elasticsearch.action.search.SearchRequest;\n-import org.elasticsearch.common.bytes.BytesArray;\n-import org.elasticsearch.common.xcontent.DeprecationHandler;\n+import org.apache.http.util.EntityUtils;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n import org.elasticsearch.common.xcontent.XContentHelper;\n-import org.elasticsearch.common.xcontent.XContentParser;\n import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.index.query.QueryBuilder;\n import org.elasticsearch.index.query.QueryBuilders;\n-import org.elasticsearch.search.builder.SearchSourceBuilder;\n-import org.elasticsearch.xpack.core.ml.action.DeleteTrainedModelAction;\n-import org.elasticsearch.xpack.core.ml.action.PutTrainedModelAction;\n+import org.elasticsearch.test.SecuritySettingsSourceField;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n import org.elasticsearch.xpack.core.ml.inference.MlInferenceNamedXContentProvider;\n-import org.elasticsearch.xpack.core.ml.inference.TrainedModelConfig;\n+import org.elasticsearch.xpack.core.ml.integration.MlRestTestStateCleaner;\n import org.junit.After;\n import org.junit.Before;\n \n import java.io.IOException;\n-import java.nio.charset.StandardCharsets;\n import java.util.HashMap;\n-import java.util.List;\n import java.util.Map;\n \n+import static org.elasticsearch.xpack.core.security.authc.support.UsernamePasswordToken.basicAuthHeaderValue;\n import static org.hamcrest.CoreMatchers.containsString;\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.is;\n \n-public class InferenceIngestIT extends MlNativeAutodetectIntegTestCase {\n+public class InferenceIngestIT extends ESRestTestCase {\n+\n+    private static final String BASIC_AUTH_VALUE_SUPER_USER =\n+        basicAuthHeaderValue(\"x_pack_rest_user\", SecuritySettingsSourceField.TEST_PASSWORD_SECURE_STRING);\n \n     @Before\n     public void createBothModels() throws Exception {\n-        client().execute(PutTrainedModelAction.INSTANCE, new PutTrainedModelAction.Request(buildClassificationModel())).actionGet();\n-        client().execute(PutTrainedModelAction.INSTANCE, new PutTrainedModelAction.Request(buildRegressionModel())).actionGet();\n+        Request request = new Request(\"PUT\", \"_ml/inference/test_classification\");\n+        request.setJsonEntity(CLASSIFICATION_CONFIG);\n+        client().performRequest(request);\n+\n+        request = new Request(\"PUT\", \"_ml/inference/test_regression\");\n+        request.setJsonEntity(REGRESSION_CONFIG);\n+        client().performRequest(request);\n+    }\n+\n+    public void clearMlState() throws Exception {\n+        new MlRestTestStateCleaner(logger, adminClient()).clearMlMetadata();\n+        ESRestTestCase.waitForPendingTasks(adminClient());\n+    }\n+\n+    @Override\n+    protected Settings restClientSettings() {\n+        return Settings.builder().put(ThreadContext.PREFIX + \".Authorization\", BASIC_AUTH_VALUE_SUPER_USER).build();\n     }\n \n     @After\n-    public void deleteBothModels() {\n-        client().execute(DeleteTrainedModelAction.INSTANCE, new DeleteTrainedModelAction.Request(\"test_classification\")).actionGet();\n-        client().execute(DeleteTrainedModelAction.INSTANCE, new DeleteTrainedModelAction.Request(\"test_regression\")).actionGet();\n+    public void cleanUpData() throws Exception {\n+        clearMlState();\n+        client().performRequest(new Request(\"DELETE\", \"_ml/inference/test_classification\"));\n+        client().performRequest(new Request(\"DELETE\", \"_ml/inference/test_regression\"));\n     }\n \n     public void testPipelineCreationAndDeletion() throws Exception {\n \n         for (int i = 0; i < 10; i++) {\n-            assertThat(client().admin().cluster().preparePutPipeline(\"simple_classification_pipeline\",\n-                new BytesArray(CLASSIFICATION_PIPELINE.getBytes(StandardCharsets.UTF_8)),\n-                XContentType.JSON).get().isAcknowledged(), is(true));\n-\n-            client().prepareIndex(\"index_for_inference_test\")\n-                .setSource(new HashMap<>(){{\n-                    put(\"col1\", randomFrom(\"female\", \"male\"));\n-                    put(\"col2\", randomFrom(\"S\", \"M\", \"L\", \"XL\"));\n-                    put(\"col3\", randomFrom(\"true\", \"false\", \"none\", \"other\"));\n-                    put(\"col4\", randomIntBetween(0, 10));\n-                }})\n-                .setPipeline(\"simple_classification_pipeline\")\n-                .get();\n-\n-            assertThat(client().admin().cluster().prepareDeletePipeline(\"simple_classification_pipeline\").get().isAcknowledged(),\n-                is(true));\n-\n-            assertThat(client().admin().cluster().preparePutPipeline(\"simple_regression_pipeline\",\n-                new BytesArray(REGRESSION_PIPELINE.getBytes(StandardCharsets.UTF_8)),\n-                XContentType.JSON).get().isAcknowledged(), is(true));\n-\n-            client().prepareIndex(\"index_for_inference_test\")\n-                .setSource(new HashMap<>(){{\n-                    put(\"col1\", randomFrom(\"female\", \"male\"));\n-                    put(\"col2\", randomFrom(\"S\", \"M\", \"L\", \"XL\"));\n-                    put(\"col3\", randomFrom(\"true\", \"false\", \"none\", \"other\"));\n-                    put(\"col4\", randomIntBetween(0, 10));\n-                }})\n-                .setPipeline(\"simple_regression_pipeline\")\n-                .get();\n-\n-            assertThat(client().admin().cluster().prepareDeletePipeline(\"simple_regression_pipeline\").get().isAcknowledged(),\n-                is(true));\n-        }\n+            client().performRequest(putPipeline(\"simple_classification_pipeline\", CLASSIFICATION_PIPELINE));\n+            client().performRequest(indexRequest(\"index_for_inference_test\", \"simple_classification_pipeline\", generateSourceDoc()));\n+            client().performRequest(new Request(\"DELETE\", \"_ingest/pipeline/simple_classification_pipeline\"));\n \n-        assertThat(client().admin().cluster().preparePutPipeline(\"simple_classification_pipeline\",\n-            new BytesArray(CLASSIFICATION_PIPELINE.getBytes(StandardCharsets.UTF_8)),\n-            XContentType.JSON).get().isAcknowledged(), is(true));\n+            client().performRequest(putPipeline(\"simple_regression_pipeline\", REGRESSION_PIPELINE));\n+            client().performRequest(indexRequest(\"index_for_inference_test\", \"simple_regression_pipeline\", generateSourceDoc()));\n+            client().performRequest(new Request(\"DELETE\", \"_ingest/pipeline/simple_regression_pipeline\"));\n+        }\n \n-        assertThat(client().admin().cluster().preparePutPipeline(\"simple_regression_pipeline\",\n-            new BytesArray(REGRESSION_PIPELINE.getBytes(StandardCharsets.UTF_8)),\n-            XContentType.JSON).get().isAcknowledged(), is(true));\n+        client().performRequest(putPipeline(\"simple_classification_pipeline\", CLASSIFICATION_PIPELINE));\n+        client().performRequest(putPipeline(\"simple_regression_pipeline\", REGRESSION_PIPELINE));\n \n         for (int i = 0; i < 10; i++) {\n-            client().prepareIndex(\"index_for_inference_test\")\n-                .setSource(generateSourceDoc())\n-                .setPipeline(\"simple_classification_pipeline\")\n-                .get();\n-\n-            client().prepareIndex(\"index_for_inference_test\")\n-                .setSource(generateSourceDoc())\n-                .setPipeline(\"simple_regression_pipeline\")\n-                .get();\n+            client().performRequest(indexRequest(\"index_for_inference_test\", \"simple_classification_pipeline\", generateSourceDoc()));\n+            client().performRequest(indexRequest(\"index_for_inference_test\", \"simple_regression_pipeline\", generateSourceDoc()));\n         }\n \n-        assertThat(client().admin().cluster().prepareDeletePipeline(\"simple_classification_pipeline\").get().isAcknowledged(),\n-            is(true));\n-\n-        assertThat(client().admin().cluster().prepareDeletePipeline(\"simple_regression_pipeline\").get().isAcknowledged(),\n-            is(true));\n-\n-        client().admin().indices().refresh(new RefreshRequest(\"index_for_inference_test\")).get();\n-\n-        assertThat(client().search(new SearchRequest().indices(\"index_for_inference_test\")\n-                .source(new SearchSourceBuilder()\n-                    .size(0)\n-                    .trackTotalHits(true)\n-                    .query(QueryBuilders.boolQuery()\n-                        .filter(\n-                            QueryBuilders.existsQuery(\"ml.inference.regression.predicted_value\"))))).get().getHits().getTotalHits().value,\n-            equalTo(20L));\n-\n-        assertThat(client().search(new SearchRequest().indices(\"index_for_inference_test\")\n-                .source(new SearchSourceBuilder()\n-                    .size(0)\n-                    .trackTotalHits(true)\n-                    .query(QueryBuilders.boolQuery()\n-                        .filter(\n-                            QueryBuilders.existsQuery(\"ml.inference.classification.predicted_value\")))))\n-                .get()\n-                .getHits()\n-                .getTotalHits()\n-                .value,\n-            equalTo(20L));\n+        client().performRequest(new Request(\"DELETE\", \"_ingest/pipeline/simple_regression_pipeline\"));\n+        client().performRequest(new Request(\"DELETE\", \"_ingest/pipeline/simple_classification_pipeline\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d6115e383a28488e35dd6989c1927ff282dce6"}, "originalPosition": 184}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQxMjQ1NA==", "bodyText": "Is this a standard practice in REST tests to grep for substrings rather than parsing the response into JSON?", "url": "https://github.com/elastic/elasticsearch/pull/51267#discussion_r369412454", "createdAt": "2020-01-22T07:59:32Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -181,15 +147,10 @@ public void testSimulate() {\n             \"    }}]\\n\" +\n             \"}\";\n \n-        SimulatePipelineResponse response = client().admin().cluster()\n-            .prepareSimulatePipeline(new BytesArray(source.getBytes(StandardCharsets.UTF_8)),\n-                XContentType.JSON).get();\n-        SimulateDocumentBaseResult baseResult = (SimulateDocumentBaseResult)response.getResults().get(0);\n-        assertThat(baseResult.getIngestDocument().getFieldValue(\"ml.regression.predicted_value\", Double.class), equalTo(1.0));\n-        assertThat(baseResult.getIngestDocument().getFieldValue(\"ml.classification.predicted_value\", String.class),\n-            equalTo(\"second\"));\n-        assertThat(baseResult.getIngestDocument().getFieldValue(\"ml.classification.result_class_prob\", List.class).size(),\n-            equalTo(2));\n+        Response response = client().performRequest(simulateRequest(source));\n+        String responseString = EntityUtils.toString(response.getEntity());\n+        assertThat(responseString, containsString(\"\\\"predicted_value\\\":\\\"second\\\"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d6115e383a28488e35dd6989c1927ff282dce6"}, "originalPosition": 224}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17226fb257bc64b4cb151ec01f3b968a1631612c", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/17226fb257bc64b4cb151ec01f3b968a1631612c", "committedDate": "2020-01-22T12:30:39Z", "message": "changing test cleanup code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af52810cd911415435c0762c9708d55df54ab397", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/af52810cd911415435c0762c9708d55df54ab397", "committedDate": "2020-01-22T12:30:48Z", "message": "Merge branch 'feature/ml-inference-fix-issue-51201' of github.com:benwtrent/elasticsearch into feature/ml-inference-fix-issue-51201"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NTU0MjMx", "url": "https://github.com/elastic/elasticsearch/pull/51267#pullrequestreview-346554231", "createdAt": "2020-01-22T12:36:16Z", "commit": {"oid": "c4d6115e383a28488e35dd6989c1927ff282dce6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjozNjoxN1rOFgamHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjozNjoxN1rOFgamHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUzNDQ5Mw==", "bodyText": "Could you add at least one sentence in class-level comment? Just in an unlikely case someone does a rewrite of this test to MlNativeAutodetectIntegTestCase in a year from now not remembering there was an issue.", "url": "https://github.com/elastic/elasticsearch/pull/51267#discussion_r369534493", "createdAt": "2020-01-22T12:36:17Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -5,141 +5,107 @@\n  */\n package org.elasticsearch.xpack.ml.integration;\n \n-import org.elasticsearch.action.admin.indices.refresh.RefreshRequest;\n-import org.elasticsearch.action.ingest.SimulateDocumentBaseResult;\n-import org.elasticsearch.action.ingest.SimulatePipelineResponse;\n-import org.elasticsearch.action.search.SearchRequest;\n-import org.elasticsearch.common.bytes.BytesArray;\n-import org.elasticsearch.common.xcontent.DeprecationHandler;\n+import org.apache.http.util.EntityUtils;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n import org.elasticsearch.common.xcontent.XContentHelper;\n-import org.elasticsearch.common.xcontent.XContentParser;\n import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.index.query.QueryBuilder;\n import org.elasticsearch.index.query.QueryBuilders;\n-import org.elasticsearch.search.builder.SearchSourceBuilder;\n-import org.elasticsearch.xpack.core.ml.action.DeleteTrainedModelAction;\n-import org.elasticsearch.xpack.core.ml.action.PutTrainedModelAction;\n+import org.elasticsearch.test.SecuritySettingsSourceField;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n import org.elasticsearch.xpack.core.ml.inference.MlInferenceNamedXContentProvider;\n-import org.elasticsearch.xpack.core.ml.inference.TrainedModelConfig;\n+import org.elasticsearch.xpack.core.ml.integration.MlRestTestStateCleaner;\n import org.junit.After;\n import org.junit.Before;\n \n import java.io.IOException;\n-import java.nio.charset.StandardCharsets;\n import java.util.HashMap;\n-import java.util.List;\n import java.util.Map;\n \n+import static org.elasticsearch.xpack.core.security.authc.support.UsernamePasswordToken.basicAuthHeaderValue;\n import static org.hamcrest.CoreMatchers.containsString;\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.is;\n \n-public class InferenceIngestIT extends MlNativeAutodetectIntegTestCase {\n+public class InferenceIngestIT extends ESRestTestCase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwODEyNg=="}, "originalCommit": {"oid": "c4d6115e383a28488e35dd6989c1927ff282dce6"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5046572b51eb44284d046c3897050c7c4c50f89", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/f5046572b51eb44284d046c3897050c7c4c50f89", "committedDate": "2020-01-22T12:40:46Z", "message": "Adding comment as to why it is a rest test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "416a8024e581784fe0b0a181b225a739f8446a54", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/416a8024e581784fe0b0a181b225a739f8446a54", "committedDate": "2020-01-22T13:03:03Z", "message": "Merge branch 'master' into feature/ml-inference-fix-issue-51201"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NTk2MDAw", "url": "https://github.com/elastic/elasticsearch/pull/51267#pullrequestreview-346596000", "createdAt": "2020-01-22T13:45:55Z", "commit": {"oid": "416a8024e581784fe0b0a181b225a739f8446a54"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2798, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}