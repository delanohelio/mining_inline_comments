{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NjQ4NjM5", "number": 54653, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToxMToyNFrODuF7OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToxMzowM1rODuF9aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjU4MTY4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/put-inference.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToxMToyNFrOF_5rwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToxMToyNFrOF_5rwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0OTY5OA==", "bodyText": "IMO it's hard to figure out how all these partial examples fit together.  Could we provide one full example and then just link to https://github.com/elastic/ml-json-schemas/tree/master/examples for other combinations? If yes, this can be a separate PR.", "url": "https://github.com/elastic/elasticsearch/pull/54653#discussion_r402549698", "createdAt": "2020-04-02T19:11:24Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/put-inference.asciidoc", "diffHunk": "@@ -324,35 +260,160 @@ consequently, the probability of class 0 is `1 - P_1`. The class with the\n highest probability (either 0 or 1) is then returned. For more information about \n logistic regression, see \n https://en.wikipedia.org/wiki/Logistic_regression[this wiki article].\n-\n-`logistic_regression`.`weights`:::\n++\n+.Properties of `logistic_regression`\n+[%collapsible%open]\n+========\n+`weights`:::\n (Required, double) \n The weights to multiply by the input values (the inference values of the trained \n models).\n+========\n+//End logistic regression\n \n+//Begin weighted sum\n `weighted_sum`::\n (Optional, object) \n This `aggregated_output` type works with regression. The weighted sum of the \n input values.\n-\n-`weighted_sum`.`weights`:::\n++\n+.Properties of `weighted_sum`\n+[%collapsible%open]\n+========\n+`weights`:::\n (Required, double) \n The weights to multiply by the input values (the inference values of the trained \n models).\n+========\n+//End weighted sum\n \n+//Begin weighted mode\n `weighted_mode`::\n (Optional, object) \n This `aggregated_output` type works with regression or classification. It takes \n a weighted vote of the input values. The most common input value (taking the \n weights into account) is returned.\n-\n-`weighted_mode`.`weights`:::\n++\n+.Properties of `weighted_mode`\n+[%collapsible%open]\n+========\n+`weights`:::\n (Required, double) \n The weights to multiply by the input values (the inference values of the trained \n models).\n+========\n+//End weighted mode\n \n See <<ml-put-inference-aggregated-output-example>> for more details.\n \n+=======\n+//End aggregate output\n+\n+`classification_labels`::\n+(Optional, string) \n+An array of classification labels.\n+\n+`feature_names`::\n+(Optional, string)\n+Features expected by the ensemble, in their expected order.\n+\n+`target_type`::\n+(Required, string) \n+String indicating the model target type; `regression` or `classification.`\n+\n+`trained_models`::\n+(Required, object)\n+An array of `trained_model` objects. Supported trained models are `tree` and \n+`ensemble`.\n+======\n+//End ensemble\n+\n+See <<ml-put-inference-model-example>> for more details.\n+\n+=====\n+//End trained model\n+\n+====\n+//End definition\n+\n+`description`::\n+(Optional, string) \n+A human-readable description of the {infer} trained model.\n+\n+//Begin inference_config\n+`inference_config`::\n+(Required, object)\n+The default configuration for inference. This can be either a `regression`\n+or `classification` configuration. It must match the underlying\n+`definition.trained_model`'s `target_type`.\n++\n+.Properties of `inference_config`\n+[%collapsible%open]\n+====\n+`regression`:::\n+(Optional, object)\n+Regression configuration for inference.\n++\n+.Properties of regression inference\n+[%collapsible%open]\n+=====\n+`num_top_feature_importance_values`::::\n+(Optional, integer)\n+include::{docdir}/ml/ml-shared.asciidoc[tag=inference-config-regression-num-top-feature-importance-values]\n+\n+`results_field`::::\n+(Optional, string)\n+include::{docdir}/ml/ml-shared.asciidoc[tag=inference-config-results-field]\n+=====\n+\n+`classification`:::\n+(Optional, object)\n+Classification configuration for inference.\n++\n+.Properties of classification inference\n+[%collapsible%open]\n+=====\n+`num_top_classes`::::\n+(Optional, integer)\n+include::{docdir}/ml/ml-shared.asciidoc[tag=inference-config-classification-num-top-classes]\n+\n+`num_top_feature_importance_values`::::\n+(Optional, integer)\n+include::{docdir}/ml/ml-shared.asciidoc[tag=inference-config-classification-num-top-feature-importance-values]\n+\n+`results_field`::::\n+(Optional, string)\n+include::{docdir}/ml/ml-shared.asciidoc[tag=inference-config-results-field]\n+\n+`top_classes_results_field`::::\n+(Optional, string)\n+include::{docdir}/ml/ml-shared.asciidoc[tag=inference-config-classification-top-classes-results-field]\n+=====\n+====\n+//End of inference_config\n+\n+//Begin input\n+`input`::\n+(Required, object) \n+The input field names for the model definition.\n++\n+.Properties of `input`\n+[%collapsible%open]\n+====\n+`field_names`:::\n+(Required, string) \n+An array of input field names for the model.\n+====\n+//End input\n+\n+`metadata`::\n+(Optional, object) \n+An object map that contains metadata about the model.\n+\n+`tags`::\n+(Optional, string) \n+An array of tags to organize the model.\n+\n \n [[ml-put-inference-example]]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4da3f71fe6eb8e887f189d02109b7c367bf93bc"}, "originalPosition": 529}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjU4NzMxOnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/ml-shared.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToxMzowM1rOF_5vhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToxMzowM1rOF_5vhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1MDY2Mg==", "bodyText": "FYI I merged the two results_field definitions per discussions related to #54421", "url": "https://github.com/elastic/elasticsearch/pull/54653#discussion_r402550662", "createdAt": "2020-04-02T19:13:03Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/ml-shared.asciidoc", "diffHunk": "@@ -1242,10 +1237,10 @@ importance] values per document. By default, it is zero and no feature importanc\n calculation occurs.\n end::inference-config-regression-num-top-feature-importance-values[]\n \n-tag::inference-config-regression-results-field[]\n-Specifies the field to which the inference prediction is written. Defaults to\n-`predicted_value`.\n-end::inference-config-regression-results-field[]\n+tag::inference-config-results-field[]\n+The field that is added to incoming documents to contain the inference", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4da3f71fe6eb8e887f189d02109b7c367bf93bc"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3964, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}