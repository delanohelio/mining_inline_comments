{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNzUxOTI3", "number": 57962, "title": "Fix bug in circuit-breaker check for geoshape grid aggregations", "bodyText": "There was a bug in the geoshape circuit-breaker check where the\nhash values array was being allocated before its new size was\naccounted for by the circuit breaker.\nFixes #57847.", "createdAt": "2020-06-10T23:25:48Z", "url": "https://github.com/elastic/elasticsearch/pull/57962", "merged": true, "mergeCommit": {"oid": "8762cd6d663c3dadc0fdf8c9670e8d832fb27d1d"}, "closed": true, "closedAt": "2020-07-16T23:14:35Z", "author": {"login": "talevy"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqCIr-AH2gAyNDMyNzUxOTI3OjMzMzMzNzZmOTY5NTMxODc5ZDlkMjExOGQ4YmJjNWY1MDQ0YWQxMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1j5KdgH2gAyNDMyNzUxOTI3OmIxOTY3ZjZmMTFiMWM0ZmQ0NjJkZTg4NDc0OTI3ZjI1ZmYxNzNkYTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3333376f969531879d9d2118d8bbc5f5044ad101", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/3333376f969531879d9d2118d8bbc5f5044ad101", "committedDate": "2020-06-10T23:20:12Z", "message": "Fix bug in circuit-breaker check for geoshape grid aggregations\n\nThere was a bug in the geoshape circuit-breaker check where the\nhash values array was being allocated before its new size was\naccounted for by the circuit breaker.\n\nFixes #57847."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTA2OTA3", "url": "https://github.com/elastic/elasticsearch/pull/57962#pullrequestreview-428506907", "createdAt": "2020-06-11T00:02:51Z", "commit": {"oid": "3333376f969531879d9d2118d8bbc5f5044ad101"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dba17fce7c8abdd3267e67634df722ae0acd50e", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/2dba17fce7c8abdd3267e67634df722ae0acd50e", "committedDate": "2020-06-11T15:32:26Z", "message": "take into account arraycopy size"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c5406b9670d3f823cc83ce0f67107572a493082", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/8c5406b9670d3f823cc83ce0f67107572a493082", "committedDate": "2020-06-11T15:46:26Z", "message": "Merge remote-tracking branch 'elastic/master' into fixGeoTileOOM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a75d6f2ccff4ac902946f414f5020e79d786fcd", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/6a75d6f2ccff4ac902946f414f5020e79d786fcd", "committedDate": "2020-07-14T18:34:43Z", "message": "Merge remote-tracking branch 'elastic/master' into fixGeoTileOOM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc4e372ceb575ca2a4492493123d4499685098fd", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/bc4e372ceb575ca2a4492493123d4499685098fd", "committedDate": "2020-07-14T20:20:56Z", "message": "push the breaker up to SortingNumericDocValues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92be53bcd920064492da89a3c78a983b8063dc49", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/92be53bcd920064492da89a3c78a983b8063dc49", "committedDate": "2020-07-15T02:35:34Z", "message": "fix default consumer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcb9693543769d63aca080d796e8c878e3637a4b", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/dcb9693543769d63aca080d796e8c878e3637a4b", "committedDate": "2020-07-15T02:35:38Z", "message": "Merge remote-tracking branch 'elastic/master' into fixGeoTileOOM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42105ae128883438f663033d59bbd4c6afecf764", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/42105ae128883438f663033d59bbd4c6afecf764", "committedDate": "2020-07-15T03:00:29Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NzEwMzU2", "url": "https://github.com/elastic/elasticsearch/pull/57962#pullrequestreview-448710356", "createdAt": "2020-07-15T07:49:57Z", "commit": {"oid": "42105ae128883438f663033d59bbd4c6afecf764"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40b5388f2b6313d02b9996f51adec2fca25f5546", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/40b5388f2b6313d02b9996f51adec2fca25f5546", "committedDate": "2020-07-15T15:57:24Z", "message": "Merge remote-tracking branch 'elastic/master' into fixGeoTileOOM"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MjI1MzMz", "url": "https://github.com/elastic/elasticsearch/pull/57962#pullrequestreview-449225333", "createdAt": "2020-07-15T18:31:17Z", "commit": {"oid": "40b5388f2b6313d02b9996f51adec2fca25f5546"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODozMToxN1rOGyKxRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODozNjozN1rOGyK9Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI1ODQzNg==", "bodyText": "l -> {} is good enough. But this is cool too.", "url": "https://github.com/elastic/elasticsearch/pull/57962#discussion_r455258436", "createdAt": "2020-07-15T18:31:17Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/SortingNumericDocValues.java", "diffHunk": "@@ -33,8 +35,13 @@\n     protected long[] values;\n     protected int valuesCursor;\n     private final Sorter sorter;\n+    private LongConsumer circuitBreakerConsumer;\n \n     protected SortingNumericDocValues() {\n+        this((l) -> {});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40b5388f2b6313d02b9996f51adec2fca25f5546"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI2MDIxNQ==", "bodyText": "Why not increment by the new size here and then decrement by the old size when we're done?", "url": "https://github.com/elastic/elasticsearch/pull/57962#discussion_r455260215", "createdAt": "2020-07-15T18:34:18Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/SortingNumericDocValues.java", "diffHunk": "@@ -51,16 +58,40 @@ protected int compare(int i, int j) {\n                 return Long.compare(values[i], values[j]);\n             }\n         };\n+        this.circuitBreakerConsumer = circuitBreakerConsumer;\n+        // account for initial values size of 1\n+        this.circuitBreakerConsumer.accept(Long.BYTES);\n     }\n \n     /**\n      * Set the {@link #docValueCount()} and ensure that the {@link #values} array can\n      * store at least that many entries.\n      */\n     protected final void resize(int newSize) {\n+        int oldValuesLength = values.length;\n+        long oldValuesSizeInBytes = values.length * Long.BYTES;\n+\n+        // If array is expected to grow, increment the circuit breaker\n+        // to include both the additional bytes used by the grown array\n+        // as well as the overhead of keeping both arrays in memory while\n+        // copying.\n+        if (newSize > values.length) {\n+            int newValuesLength = ArrayUtil.oversize(newSize, Long.BYTES);\n+            long bytesDiff = (newValuesLength - oldValuesLength) * Long.BYTES;\n+            circuitBreakerConsumer.accept(bytesDiff);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40b5388f2b6313d02b9996f51adec2fca25f5546"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI2MDcyMw==", "bodyText": "I think it'd be clearer to bail early if the newSize <= values.length rather than relying on the behavior of ArrayUtils.grow", "url": "https://github.com/elastic/elasticsearch/pull/57962#discussion_r455260723", "createdAt": "2020-07-15T18:35:12Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/SortingNumericDocValues.java", "diffHunk": "@@ -51,16 +58,40 @@ protected int compare(int i, int j) {\n                 return Long.compare(values[i], values[j]);\n             }\n         };\n+        this.circuitBreakerConsumer = circuitBreakerConsumer;\n+        // account for initial values size of 1\n+        this.circuitBreakerConsumer.accept(Long.BYTES);\n     }\n \n     /**\n      * Set the {@link #docValueCount()} and ensure that the {@link #values} array can\n      * store at least that many entries.\n      */\n     protected final void resize(int newSize) {\n+        int oldValuesLength = values.length;\n+        long oldValuesSizeInBytes = values.length * Long.BYTES;\n+\n+        // If array is expected to grow, increment the circuit breaker\n+        // to include both the additional bytes used by the grown array\n+        // as well as the overhead of keeping both arrays in memory while\n+        // copying.\n+        if (newSize > values.length) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40b5388f2b6313d02b9996f51adec2fca25f5546"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI2MTU0Mw==", "bodyText": "I think it'd be clearer overside on our side and then call growExact. That way you end up with a precise value that you are growing to for tracking. And I don't have to go and read the source of grow, just oversize.", "url": "https://github.com/elastic/elasticsearch/pull/57962#discussion_r455261543", "createdAt": "2020-07-15T18:36:37Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/SortingNumericDocValues.java", "diffHunk": "@@ -51,16 +58,40 @@ protected int compare(int i, int j) {\n                 return Long.compare(values[i], values[j]);\n             }\n         };\n+        this.circuitBreakerConsumer = circuitBreakerConsumer;\n+        // account for initial values size of 1\n+        this.circuitBreakerConsumer.accept(Long.BYTES);\n     }\n \n     /**\n      * Set the {@link #docValueCount()} and ensure that the {@link #values} array can\n      * store at least that many entries.\n      */\n     protected final void resize(int newSize) {\n+        int oldValuesLength = values.length;\n+        long oldValuesSizeInBytes = values.length * Long.BYTES;\n+\n+        // If array is expected to grow, increment the circuit breaker\n+        // to include both the additional bytes used by the grown array\n+        // as well as the overhead of keeping both arrays in memory while\n+        // copying.\n+        if (newSize > values.length) {\n+            int newValuesLength = ArrayUtil.oversize(newSize, Long.BYTES);\n+            long bytesDiff = (newValuesLength - oldValuesLength) * Long.BYTES;\n+            circuitBreakerConsumer.accept(bytesDiff);\n+            circuitBreakerConsumer.accept(oldValuesSizeInBytes);\n+        }\n+\n+        // resize\n         count = newSize;\n         values = ArrayUtil.grow(values, count);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40b5388f2b6313d02b9996f51adec2fca25f5546"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d470c72d3b1934d1a8fac06ed910a025a77252d", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/1d470c72d3b1934d1a8fac06ed910a025a77252d", "committedDate": "2020-07-15T23:06:48Z", "message": "make better tests and cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5ODExNTIz", "url": "https://github.com/elastic/elasticsearch/pull/57962#pullrequestreview-449811523", "createdAt": "2020-07-16T12:46:47Z", "commit": {"oid": "1d470c72d3b1934d1a8fac06ed910a025a77252d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjo0Njo0OFrOGypS1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjo0Njo0OFrOGypS1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1ODU1MA==", "bodyText": "s/clean up/account for freeing/?", "url": "https://github.com/elastic/elasticsearch/pull/57962#discussion_r455758550", "createdAt": "2020-07-16T12:46:48Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/SortingNumericDocValues.java", "diffHunk": "@@ -51,16 +58,35 @@ protected int compare(int i, int j) {\n                 return Long.compare(values[i], values[j]);\n             }\n         };\n+        this.circuitBreakerConsumer = circuitBreakerConsumer;\n+        // account for initial values size of 1\n+        this.circuitBreakerConsumer.accept(Long.BYTES);\n     }\n \n     /**\n      * Set the {@link #docValueCount()} and ensure that the {@link #values} array can\n      * store at least that many entries.\n      */\n     protected final void resize(int newSize) {\n+        if (newSize <= values.length) {\n+            return;\n+        }\n+\n+        // Array is expected to grow so increment the circuit breaker\n+        // to include both the additional bytes used by the grown array\n+        // as well as the overhead of keeping both arrays in memory while\n+        // copying.\n+        long oldValuesSizeInBytes = values.length * Long.BYTES;\n+        int newValuesLength = ArrayUtil.oversize(newSize, Long.BYTES);\n+        circuitBreakerConsumer.accept(newValuesLength * Long.BYTES);\n+\n+        // resize\n         count = newSize;\n-        values = ArrayUtil.grow(values, count);\n+        values = ArrayUtil.growExact(values, newValuesLength);\n         valuesCursor = 0;\n+\n+        // clean up old values array", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d470c72d3b1934d1a8fac06ed910a025a77252d"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f0568f84ee5384bd900778c750a92253025235b", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/8f0568f84ee5384bd900778c750a92253025235b", "committedDate": "2020-07-16T18:01:42Z", "message": "fix up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04d86e1ccfcea1d061065a929fb6eec05ab62c9f", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/04d86e1ccfcea1d061065a929fb6eec05ab62c9f", "committedDate": "2020-07-16T18:01:52Z", "message": "Merge remote-tracking branch 'elastic/master' into fixGeoTileOOM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1967f6f11b1c4fd462de88474927f25ff173da9", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/b1967f6f11b1c4fd462de88474927f25ff173da9", "committedDate": "2020-07-16T18:53:11Z", "message": "fix yaml tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 774, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}