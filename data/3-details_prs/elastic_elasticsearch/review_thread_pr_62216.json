{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzNzkyODQx", "number": 62216, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoyNDo1M1rOEiN_qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoyNDo1M1rOEiN_qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzE2MzI5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/Version.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoyNDo1M1rOHP-SnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzo0NzozOFrOHP_Glw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUxMTI2MQ==", "bodyText": "technically shouldn't we declare these as volatile?", "url": "https://github.com/elastic/elasticsearch/pull/62216#discussion_r486511261", "createdAt": "2020-09-10T17:24:53Z", "author": {"login": "jaymode"}, "path": "server/src/main/java/org/elasticsearch/Version.java", "diffHunk": "@@ -285,6 +286,14 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         static final List<Version> DECLARED_VERSIONS = Collections.unmodifiableList(getDeclaredVersions(Version.class));\n     }\n \n+    // lazy initialized because we don't yet have the declared versions ready when instantiating the cached Version\n+    // instances\n+    private Version minCompatVersion;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457d4d622fc78cd0b1b7700198e5e1f016658bad"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNDU2Nw==", "bodyText": "technically shouldn't we declare these as volatile?\n\nI figured no because we don't actively deduplicate this value so if we recompute it a few times (and realistically this is probably almost never going to happen) at startup it doesn't hurt but we pay the overhead in method size for volatile forever. But this was coded wrong even under that assumption now that I look at it again. I pushed 153763a so that it's safe even if out of order reads were to ever occur.", "url": "https://github.com/elastic/elasticsearch/pull/62216#discussion_r486524567", "createdAt": "2020-09-10T17:47:38Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/Version.java", "diffHunk": "@@ -285,6 +286,14 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         static final List<Version> DECLARED_VERSIONS = Collections.unmodifiableList(getDeclaredVersions(Version.class));\n     }\n \n+    // lazy initialized because we don't yet have the declared versions ready when instantiating the cached Version\n+    // instances\n+    private Version minCompatVersion;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUxMTI2MQ=="}, "originalCommit": {"oid": "457d4d622fc78cd0b1b7700198e5e1f016658bad"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1609, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}