{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NzAzOTY0", "number": 53651, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjo1MjoxMlrODotQyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjo1MjoxMlrODotQyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDExMjEwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/identity-provider/src/test/java/org/elasticsearch/xpack/idp/saml/rest/action/IdpBaseRestHandlerTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjo1MjoxMlrOF3a0kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjo1MjoxMlrOF3a0kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY1NTQ0MA==", "bodyText": "MISSING is here twice.\nThe other option, rather than explicitly listing non-enterprise modes is to use randomValueOtherThanMany like:\nLicense.OperationMode mode = randomValueOtherThanMany( m -> m == License.OperationMode.ENTERPRISE || m == License.OperationMode.TRIAL, () -> randomFrom(License.OperationMode.values()) )", "url": "https://github.com/elastic/elasticsearch/pull/53651#discussion_r393655440", "createdAt": "2020-03-17T12:52:12Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/identity-provider/src/test/java/org/elasticsearch/xpack/idp/saml/rest/action/IdpBaseRestHandlerTests.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.idp.saml.rest.action;\n+\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.license.License;\n+import org.elasticsearch.license.TestUtils;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+\n+public class IdpBaseRestHandlerTests extends ESTestCase {\n+\n+    public void testIdpAvailableOnTrialOrEnterprise() {\n+        final IdpBaseRestHandler handler = buildHandler(randomFrom(License.OperationMode.ENTERPRISE, License.OperationMode.TRIAL));\n+        assertThat(handler.isIdpFeatureAllowed(), equalTo(true));\n+    }\n+\n+    public void testIdpNotAvailableOnOtherLicenses() {\n+        final IdpBaseRestHandler handler = buildHandler(randomFrom(\n+            License.OperationMode.BASIC, License.OperationMode.GOLD, License.OperationMode.MISSING, License.OperationMode.MISSING,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "387ce557d4a2b03180a5e5dc3b4c53829cf9aa50"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4297, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}