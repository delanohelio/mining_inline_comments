{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4ODA4MDY3", "number": 55758, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTo0MDowM1rOD3HG2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjoyNToxNlrOD3KySw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MTE0NzEzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTo0MDowM1rOGNLnLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDozNzo0MFrOGR4q-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDkyNw==", "bodyText": "I believe this makes what gets returned more consistent with what _search does, though we lose information on how many shards the partial results come from. We possibly need to expand the info that we return if we want to better represent this scenario where there are partial results yet the whole search has failed hence stopped.", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r416474927", "createdAt": "2020-04-28T09:40:03Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "diffHunk": "@@ -120,6 +129,10 @@ synchronized void updateWithFailure(Exception exc) {\n         failIfFrozen();\n         // copy the response headers from the current context\n         this.responseHeaders = threadContext.getResponseHeaders();\n+        //We may have already received some partial results, in which case the number of successful shards reflects that despite the search\n+        //has failed entirely at a later stage. We should consider all shards as failed given that none of them was able to e.g. fetch\n+        //skipped shards are considered successful though\n+        this.successfulShards = this.skippedShards;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU3MTcyMQ==", "bodyText": "Why do we need to update these informations ? They are not used anymore when the response is final. I think #55683 has the more straightforward approach of keeping the final response as is.", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r416571721", "createdAt": "2020-04-28T12:28:43Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "diffHunk": "@@ -120,6 +129,10 @@ synchronized void updateWithFailure(Exception exc) {\n         failIfFrozen();\n         // copy the response headers from the current context\n         this.responseHeaders = threadContext.getResponseHeaders();\n+        //We may have already received some partial results, in which case the number of successful shards reflects that despite the search\n+        //has failed entirely at a later stage. We should consider all shards as failed given that none of them was able to e.g. fetch\n+        //skipped shards are considered successful though\n+        this.successfulShards = this.skippedShards;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDkyNw=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYwNzM2Mg==", "bodyText": "I think that this is the reason why you can end up with situations like successful: 3 failed: 3 total: 3 .", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r416607362", "createdAt": "2020-04-28T13:21:39Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "diffHunk": "@@ -120,6 +129,10 @@ synchronized void updateWithFailure(Exception exc) {\n         failIfFrozen();\n         // copy the response headers from the current context\n         this.responseHeaders = threadContext.getResponseHeaders();\n+        //We may have already received some partial results, in which case the number of successful shards reflects that despite the search\n+        //has failed entirely at a later stage. We should consider all shards as failed given that none of them was able to e.g. fetch\n+        //skipped shards are considered successful though\n+        this.successfulShards = this.skippedShards;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDkyNw=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYwNzg1NA==", "bodyText": "I would rather want successful: 0 failed: 3 total:3 ( I left skipped out for simplicity)\nI have yet to look at the linked PR, will do", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r416607854", "createdAt": "2020-04-28T13:22:18Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "diffHunk": "@@ -120,6 +129,10 @@ synchronized void updateWithFailure(Exception exc) {\n         failIfFrozen();\n         // copy the response headers from the current context\n         this.responseHeaders = threadContext.getResponseHeaders();\n+        //We may have already received some partial results, in which case the number of successful shards reflects that despite the search\n+        //has failed entirely at a later stage. We should consider all shards as failed given that none of them was able to e.g. fetch\n+        //skipped shards are considered successful though\n+        this.successfulShards = this.skippedShards;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDkyNw=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA5NjkzNw==", "bodyText": "ok I am now up-to-date, I agree with you on updateFinalResponse, no need to touch successful shards anymore, but you commented on updateWithFailure which still has the problem of returning a shards header that search does not return? Hence shall we signal how many shards have returned partial results although all of them later failed, or shall we just zero the successful shards that makes things more consistent with search? Otherwise I think we would need to add more details on which phase has failed to the response to be more accurate... I will update and merge conflicts.", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r418096937", "createdAt": "2020-04-30T15:29:10Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "diffHunk": "@@ -120,6 +129,10 @@ synchronized void updateWithFailure(Exception exc) {\n         failIfFrozen();\n         // copy the response headers from the current context\n         this.responseHeaders = threadContext.getResponseHeaders();\n+        //We may have already received some partial results, in which case the number of successful shards reflects that despite the search\n+        //has failed entirely at a later stage. We should consider all shards as failed given that none of them was able to e.g. fetch\n+        //skipped shards are considered successful though\n+        this.successfulShards = this.skippedShards;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDkyNw=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1NzA0OQ==", "bodyText": "I think we'll solve this discrepancy when wee add partial top hits in the response. In the meantime I don't think we should reset the successful shards, it would be weird to have successful: 0 (assuming no shards were skipped) but some partial results in the response ?", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r418257049", "createdAt": "2020-04-30T20:03:45Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "diffHunk": "@@ -120,6 +129,10 @@ synchronized void updateWithFailure(Exception exc) {\n         failIfFrozen();\n         // copy the response headers from the current context\n         this.responseHeaders = threadContext.getResponseHeaders();\n+        //We may have already received some partial results, in which case the number of successful shards reflects that despite the search\n+        //has failed entirely at a later stage. We should consider all shards as failed given that none of them was able to e.g. fetch\n+        //skipped shards are considered successful though\n+        this.successfulShards = this.skippedShards;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDkyNw=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI4MjkxNw==", "bodyText": "I think it's weird either way. I cant make up my mind on which way is less weird :) I will revert this bit then and maybe add a comment that explains what happens today.", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r418282917", "createdAt": "2020-04-30T20:54:24Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "diffHunk": "@@ -120,6 +129,10 @@ synchronized void updateWithFailure(Exception exc) {\n         failIfFrozen();\n         // copy the response headers from the current context\n         this.responseHeaders = threadContext.getResponseHeaders();\n+        //We may have already received some partial results, in which case the number of successful shards reflects that despite the search\n+        //has failed entirely at a later stage. We should consider all shards as failed given that none of them was able to e.g. fetch\n+        //skipped shards are considered successful though\n+        this.successfulShards = this.skippedShards;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDkyNw=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc2NDE4Mg==", "bodyText": "maybe one thing we could rather do in this case is to reset shard failures, as they have caused a fatal failure and don't need to be returned as part of the search response too, they are already in the outer error section. That way we would have failed: 0 in the inner search response, which makes more sense as it's a snapshot of the results before the failure happened. Not too sure though if this may end up causing problems in other scenarios. Doing nothing is also fine with me, as long as we are aware that the shards section can be weird at times.", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r420764182", "createdAt": "2020-05-06T12:50:49Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "diffHunk": "@@ -120,6 +129,10 @@ synchronized void updateWithFailure(Exception exc) {\n         failIfFrozen();\n         // copy the response headers from the current context\n         this.responseHeaders = threadContext.getResponseHeaders();\n+        //We may have already received some partial results, in which case the number of successful shards reflects that despite the search\n+        //has failed entirely at a later stage. We should consider all shards as failed given that none of them was able to e.g. fetch\n+        //skipped shards are considered successful though\n+        this.successfulShards = this.skippedShards;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDkyNw=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwNzQ4Mw==", "bodyText": "What about ignoring fetch shard failures when building partial responses ?\nWe never return partial top hits if the response is partial so the successful and failure counts should only reflect the query phase ? This will change when we add the support for partial top hits but that's the least confusing solution I can think of.", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r421407483", "createdAt": "2020-05-07T10:37:40Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "diffHunk": "@@ -120,6 +129,10 @@ synchronized void updateWithFailure(Exception exc) {\n         failIfFrozen();\n         // copy the response headers from the current context\n         this.responseHeaders = threadContext.getResponseHeaders();\n+        //We may have already received some partial results, in which case the number of successful shards reflects that despite the search\n+        //has failed entirely at a later stage. We should consider all shards as failed given that none of them was able to e.g. fetch\n+        //skipped shards are considered successful though\n+        this.successfulShards = this.skippedShards;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDkyNw=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MTc0OTg3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjoyNToxNlrOGNRYOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowMzo0MlrOGNYnew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU2OTQwMQ==", "bodyText": "+1, #55683 has the same change", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r416569401", "createdAt": "2020-04-28T12:25:16Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -387,7 +387,7 @@ public void onFinalReduce(List<SearchShard> shards, TotalHits totalHits, Interna\n \n         @Override\n         public void onResponse(SearchResponse response) {\n-            searchResponse.get().updateFinalResponse(response.getSuccessfulShards(), response.getInternalResponse());\n+            searchResponse.get().updateFinalResponse(response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYyNTQyNg==", "bodyText": "When I was working on mine I was wondering if I should assert that the final response looks \"right\" based on our updates. I never did that, but maybe it is good?", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r416625426", "createdAt": "2020-04-28T13:45:29Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -387,7 +387,7 @@ public void onFinalReduce(List<SearchShard> shards, TotalHits totalHits, Interna\n \n         @Override\n         public void onResponse(SearchResponse response) {\n-            searchResponse.get().updateFinalResponse(response.getSuccessfulShards(), response.getInternalResponse());\n+            searchResponse.get().updateFinalResponse(response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU2OTQwMQ=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2NzU3Mw==", "bodyText": "what do you mean by \"right\" here?", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r416667573", "createdAt": "2020-04-28T14:38:25Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -387,7 +387,7 @@ public void onFinalReduce(List<SearchShard> shards, TotalHits totalHits, Interna\n \n         @Override\n         public void onResponse(SearchResponse response) {\n-            searchResponse.get().updateFinalResponse(response.getSuccessfulShards(), response.getInternalResponse());\n+            searchResponse.get().updateFinalResponse(response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU2OTQwMQ=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4MDgyMA==", "bodyText": "I'm not sure! That was part of why I didn't do it....\nI was thinking that it might be useful to know if the response that we got here \"agrees\" with the results we got from the listener. Maybe that is just checking counts or something.", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r416680820", "createdAt": "2020-04-28T14:54:38Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -387,7 +387,7 @@ public void onFinalReduce(List<SearchShard> shards, TotalHits totalHits, Interna\n \n         @Override\n         public void onResponse(SearchResponse response) {\n-            searchResponse.get().updateFinalResponse(response.getSuccessfulShards(), response.getInternalResponse());\n+            searchResponse.get().updateFinalResponse(response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU2OTQwMQ=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4MzA0OA==", "bodyText": "You've already added the assertions below. Ignore me!", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r416683048", "createdAt": "2020-04-28T14:57:18Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -387,7 +387,7 @@ public void onFinalReduce(List<SearchShard> shards, TotalHits totalHits, Interna\n \n         @Override\n         public void onResponse(SearchResponse response) {\n-            searchResponse.get().updateFinalResponse(response.getSuccessfulShards(), response.getInternalResponse());\n+            searchResponse.get().updateFinalResponse(response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU2OTQwMQ=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4Nzk5NQ==", "bodyText": "I see, yea that is the reason why I added the whole response as argument ;)", "url": "https://github.com/elastic/elasticsearch/pull/55758#discussion_r416687995", "createdAt": "2020-04-28T15:03:42Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -387,7 +387,7 @@ public void onFinalReduce(List<SearchShard> shards, TotalHits totalHits, Interna\n \n         @Override\n         public void onResponse(SearchResponse response) {\n-            searchResponse.get().updateFinalResponse(response.getSuccessfulShards(), response.getInternalResponse());\n+            searchResponse.get().updateFinalResponse(response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU2OTQwMQ=="}, "originalCommit": {"oid": "03115aa9547ed519f7c1991927aaa5ec5bb65bb8"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2577, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}