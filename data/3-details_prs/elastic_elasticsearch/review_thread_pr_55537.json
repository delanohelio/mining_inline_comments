{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NzExMTc5", "number": 55537, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjo1Mjo0MlrOD0l0yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjo1Mjo0MlrOD0l0yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDcyMjY3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/extractor/aggregation/AbstractAggregationDataExtractor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjo1Mjo0MlrOGJmPwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMToyMjoxNFrOGJxK-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNjk5Mg==", "bodyText": "what about adding .setAllowPartialSearchResults(false) on the output of buildSearchRequest(...) instead of doing it per sub-class? Seems cleaner to me.", "url": "https://github.com/elastic/elasticsearch/pull/55537#discussion_r412716992", "createdAt": "2020-04-22T06:52:42Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/extractor/aggregation/AbstractAggregationDataExtractor.java", "diffHunk": "@@ -107,12 +107,11 @@ public long getEndTime() {\n         return Optional.ofNullable(processNextBatch());\n     }\n \n-    private Aggregations search() throws IOException {\n+    private Aggregations search() {\n         LOGGER.debug(\"[{}] Executing aggregated search\", context.jobId);\n         SearchResponse searchResponse = executeSearchRequest(buildSearchRequest(buildBaseSearchSource()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f402b3151290ee67e7fbc54906ef812a5b69b947"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc4NzYzMA==", "bodyText": "Although I see @hendrikmuhs 's point, I prefer the way it's done currently in this PR as it keeps all the settings on the search request together. Even though it means duplicating it, I think it helps readability as it brings all relevant info together when you're reading the buildSearchRequest methods.", "url": "https://github.com/elastic/elasticsearch/pull/55537#discussion_r412787630", "createdAt": "2020-04-22T08:39:14Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/extractor/aggregation/AbstractAggregationDataExtractor.java", "diffHunk": "@@ -107,12 +107,11 @@ public long getEndTime() {\n         return Optional.ofNullable(processNextBatch());\n     }\n \n-    private Aggregations search() throws IOException {\n+    private Aggregations search() {\n         LOGGER.debug(\"[{}] Executing aggregated search\", context.jobId);\n         SearchResponse searchResponse = executeSearchRequest(buildSearchRequest(buildBaseSearchSource()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNjk5Mg=="}, "originalCommit": {"oid": "f402b3151290ee67e7fbc54906ef812a5b69b947"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc5OTc0Ng==", "bodyText": "Fair enough, your choice.\nTo address my concern, what about having an assert searchRequest.allowPartialSearchResults(). It's easy to forget otherwise and with the removed response handling its a candidate for a regression if the subclass is re-factored or a new one is introduced.", "url": "https://github.com/elastic/elasticsearch/pull/55537#discussion_r412799746", "createdAt": "2020-04-22T08:55:34Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/extractor/aggregation/AbstractAggregationDataExtractor.java", "diffHunk": "@@ -107,12 +107,11 @@ public long getEndTime() {\n         return Optional.ofNullable(processNextBatch());\n     }\n \n-    private Aggregations search() throws IOException {\n+    private Aggregations search() {\n         LOGGER.debug(\"[{}] Executing aggregated search\", context.jobId);\n         SearchResponse searchResponse = executeSearchRequest(buildSearchRequest(buildBaseSearchSource()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNjk5Mg=="}, "originalCommit": {"oid": "f402b3151290ee67e7fbc54906ef812a5b69b947"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg5NTk5Mg==", "bodyText": "assert searchRequest.allowPartialSearchResults() sounds good. I will put that in", "url": "https://github.com/elastic/elasticsearch/pull/55537#discussion_r412895992", "createdAt": "2020-04-22T11:22:14Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/extractor/aggregation/AbstractAggregationDataExtractor.java", "diffHunk": "@@ -107,12 +107,11 @@ public long getEndTime() {\n         return Optional.ofNullable(processNextBatch());\n     }\n \n-    private Aggregations search() throws IOException {\n+    private Aggregations search() {\n         LOGGER.debug(\"[{}] Executing aggregated search\", context.jobId);\n         SearchResponse searchResponse = executeSearchRequest(buildSearchRequest(buildBaseSearchSource()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNjk5Mg=="}, "originalCommit": {"oid": "f402b3151290ee67e7fbc54906ef812a5b69b947"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2774, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}