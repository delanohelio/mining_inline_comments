{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MzUwMjA4", "number": 52741, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjo0MToyMlrODjzMjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjo0NTozM1rODjzRPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODY1NTQ4OnYy", "diffSide": "RIGHT", "path": "modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorQuerySearchIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjo0MToyMlrOFvzsLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxODoyNTo1MVrOFxRXCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NDI4Nw==", "bodyText": "Is this change needed for this pr ? It seems unrelated.", "url": "https://github.com/elastic/elasticsearch/pull/52741#discussion_r385674287", "createdAt": "2020-02-28T12:41:22Z", "author": {"login": "jimczi"}, "path": "modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorQuerySearchIT.java", "diffHunk": "@@ -71,6 +75,14 @@\n \n public class PercolatorQuerySearchIT extends ESIntegTestCase {\n \n+    @Override\n+    protected Collection<Class<? extends Plugin>> nodePlugins() {\n+        List<Class<? extends Plugin>> plugins = new ArrayList<>();\n+        plugins.addAll(super.nodePlugins());\n+        plugins.add(PercolatorPlugin.class);\n+        return plugins;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ccec44e0b39a7b91ed4ad6b5c39406a37dd6412"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwODk3MA==", "bodyText": "The problem is that MockNioTransport does not register NamedWriteables from the bundled plugins. We need to manually register the percolate plugin in the test as we now de/serialize the Percolate QueryBuilder between search phases. I looked into how to fix this issue, but it should be in a follow-up.", "url": "https://github.com/elastic/elasticsearch/pull/52741#discussion_r387208970", "createdAt": "2020-03-03T18:25:51Z", "author": {"login": "dnhatn"}, "path": "modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorQuerySearchIT.java", "diffHunk": "@@ -71,6 +75,14 @@\n \n public class PercolatorQuerySearchIT extends ESIntegTestCase {\n \n+    @Override\n+    protected Collection<Class<? extends Plugin>> nodePlugins() {\n+        List<Class<? extends Plugin>> plugins = new ArrayList<>();\n+        plugins.addAll(super.nodePlugins());\n+        plugins.add(PercolatorPlugin.class);\n+        return plugins;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NDI4Nw=="}, "originalCommit": {"oid": "1ccec44e0b39a7b91ed4ad6b5c39406a37dd6412"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODY2NzUwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/SearchPhaseResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjo0NTozM1rOFvzzGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxODoyNjowNFrOFxRXjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NjA1Nw==", "bodyText": "we could apply the TODO here and clean the (de)serialization ? This would mean reconciling the logic between the different implementations and move the serialization of the object accessible here to this function. Happy to do this in a follow up though.", "url": "https://github.com/elastic/elasticsearch/pull/52741#discussion_r385676057", "createdAt": "2020-02-28T12:45:33Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/SearchPhaseResult.java", "diffHunk": "@@ -90,6 +94,23 @@ public QuerySearchResult queryResult() {\n      */\n     public FetchSearchResult fetchResult() { return null; }\n \n+    @Nullable\n+    public ShardSearchRequest getShardSearchRequest() {\n+        return shardSearchRequest;\n+    }\n+\n+    public void setShardSearchRequest(ShardSearchRequest shardSearchRequest) {\n+        this.shardSearchRequest = shardSearchRequest;\n+    }\n+\n+    public RescoreDocIds getRescoreDocIds() {\n+        return rescoreDocIds;\n+    }\n+\n+    public void setRescoreDocIds(RescoreDocIds rescoreDocIds) {\n+        this.rescoreDocIds = rescoreDocIds;\n+    }\n+\n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n         // TODO: this seems wrong, SearchPhaseResult should have a writeTo?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ccec44e0b39a7b91ed4ad6b5c39406a37dd6412"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwOTEwMQ==", "bodyText": "++. I will do this in a follow-up.", "url": "https://github.com/elastic/elasticsearch/pull/52741#discussion_r387209101", "createdAt": "2020-03-03T18:26:04Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/search/SearchPhaseResult.java", "diffHunk": "@@ -90,6 +94,23 @@ public QuerySearchResult queryResult() {\n      */\n     public FetchSearchResult fetchResult() { return null; }\n \n+    @Nullable\n+    public ShardSearchRequest getShardSearchRequest() {\n+        return shardSearchRequest;\n+    }\n+\n+    public void setShardSearchRequest(ShardSearchRequest shardSearchRequest) {\n+        this.shardSearchRequest = shardSearchRequest;\n+    }\n+\n+    public RescoreDocIds getRescoreDocIds() {\n+        return rescoreDocIds;\n+    }\n+\n+    public void setRescoreDocIds(RescoreDocIds rescoreDocIds) {\n+        this.rescoreDocIds = rescoreDocIds;\n+    }\n+\n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n         // TODO: this seems wrong, SearchPhaseResult should have a writeTo?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NjA1Nw=="}, "originalCommit": {"oid": "1ccec44e0b39a7b91ed4ad6b5c39406a37dd6412"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3770, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}