{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1ODI3Njcz", "number": 51304, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTo0MjowMFrODZ4Lfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTo0MjowMFrODZ4Lfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDYxNDM5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/discovery/HandshakingTransportAddressConnector.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTo0MjowMFrOFgg0_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTo0MjowMFrOFgg0_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYzNjYwNA==", "bodyText": "Why move to wrap here? We (mostly Henning :)) are currently trying to remove the number of instances of passing broken listeners to transport APIs that don't handle their own exceptions and this seems like a step in the wrong direction. Can we fix the listener to handle its exception instead?", "url": "https://github.com/elastic/elasticsearch/pull/51304#discussion_r369636604", "createdAt": "2020-01-22T15:42:00Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/discovery/HandshakingTransportAddressConnector.java", "diffHunk": "@@ -99,17 +100,23 @@ protected void innerOnResponse(DiscoveryNode remoteNode) {\n                                     IOUtils.closeWhileHandlingException(connection);\n \n                                     if (remoteNode.equals(transportService.getLocalNode())) {\n-                                        // TODO cache this result for some time? forever?\n                                         listener.onFailure(new ConnectTransportException(remoteNode, \"local node found\"));\n                                     } else if (remoteNode.isMasterNode() == false) {\n-                                        // TODO cache this result for some time?\n                                         listener.onFailure(new ConnectTransportException(remoteNode, \"non-master-eligible node found\"));\n                                     } else {\n-                                        transportService.connectToNode(remoteNode, ActionListener.delegateFailure(listener,\n-                                            (l, ignored) -> {\n-                                                logger.trace(\"[{}] full connection successful: {}\", thisConnectionAttempt, remoteNode);\n-                                                listener.onResponse(remoteNode);\n-                                            }));\n+                                        transportService.connectToNode(remoteNode, ActionListener.wrap(ignored -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787138641585b3e090d89ef49de78cd7e0d0165"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4434, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}