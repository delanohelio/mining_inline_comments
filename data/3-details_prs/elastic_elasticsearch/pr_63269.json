{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3OTk5MTA4", "number": 63269, "title": "Convert TextFieldMapper to parametrized form", "bodyText": "As a result of this, we can remove a chunk of code from TypeParsers as well.  Tests\nfor search/index mode analyzers have moved into their own file.  This commit also\nrationalises the serialization checks for parameters into a single SerializerCheck\ninterface that takes the values includeDefaults, isConfigured and the value\nitself.\nRelates to #62988", "createdAt": "2020-10-05T17:15:31Z", "url": "https://github.com/elastic/elasticsearch/pull/63269", "merged": true, "mergeCommit": {"oid": "f4c85e4562c79e6411801904f2d80e3310c6dbe7"}, "closed": true, "closedAt": "2020-10-07T09:29:30Z", "author": {"login": "romseygeek"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPm3ZaAH2gAyNDk3OTk5MTA4OjNiNzkwMzZhZjVmOTM2YWM0N2Q4Njc4ZjcwNDkzN2IxZjZkZDIzZjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQItOsABqjM4NDkyNDk4MDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3b79036af5f936ac47d8678f704937b1f6dd23f5", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/3b79036af5f936ac47d8678f704937b1f6dd23f5", "committedDate": "2020-10-05T17:03:00Z", "message": "Convert TextFieldMapper to parametrized form"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad4b5adc1cd1ce53ffe532d67a664192439962dc", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/ad4b5adc1cd1ce53ffe532d67a664192439962dc", "committedDate": "2020-10-05T17:12:47Z", "message": "nits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMzEzMDM4", "url": "https://github.com/elastic/elasticsearch/pull/63269#pullrequestreview-502313038", "createdAt": "2020-10-05T18:27:46Z", "commit": {"oid": "ad4b5adc1cd1ce53ffe532d67a664192439962dc"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODoyNzo0NlrOHcoyVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODozNDo1MFrOHcpAnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MDQyMg==", "bodyText": "Could you move this below all the Parameter so I don't lose it?", "url": "https://github.com/elastic/elasticsearch/pull/63269#discussion_r499790422", "createdAt": "2020-10-05T18:27:46Z", "author": {"login": "nik9000"}, "path": "plugins/mapper-annotated-text/src/main/java/org/elasticsearch/index/mapper/annotatedtext/AnnotatedTextFieldMapper.java", "diffHunk": "@@ -72,92 +70,94 @@\n  * This code is largely a copy of TextFieldMapper which is less than ideal -\n  * my attempts to subclass TextFieldMapper failed but we can revisit this.\n  **/\n-public class AnnotatedTextFieldMapper extends FieldMapper {\n+public class AnnotatedTextFieldMapper extends ParametrizedFieldMapper {\n \n     public static final String CONTENT_TYPE = \"annotated_text\";\n     private static final int POSITION_INCREMENT_GAP_USE_ANALYZER = -1;\n \n-    public static class Builder extends TextFieldMapper.Builder {\n+    private static Builder builder(FieldMapper in) {\n+        return ((AnnotatedTextFieldMapper)in).builder;\n+    }\n \n-        private int positionIncrementGap = POSITION_INCREMENT_GAP_USE_ANALYZER;\n+    public static class Builder extends ParametrizedFieldMapper.Builder {\n \n-        public Builder(String name) {\n-            super(name);\n-            builder = this;\n-        }\n+        private final Parameter<Boolean> index = Parameter.indexParam(m -> builder(m).index.getValue(), true);\n+        private final Parameter<Boolean> store = Parameter.storeParam(m -> builder(m).store.getValue(), false);\n \n-        public Builder positionIncrementGap(int positionIncrementGap) {\n-            if (positionIncrementGap < 0) {\n-                throw new MapperParsingException(\"[positions_increment_gap] must be positive, got \" + positionIncrementGap);\n-            }\n-            this.positionIncrementGap = positionIncrementGap;\n-            return this;\n+        final TextParams.Analyzers analyzers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad4b5adc1cd1ce53ffe532d67a664192439962dc"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MjEwMg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/63269#discussion_r499792102", "createdAt": "2020-10-05T18:30:51Z", "author": {"login": "nik9000"}, "path": "plugins/mapper-annotated-text/src/main/java/org/elasticsearch/index/mapper/annotatedtext/AnnotatedTextFieldMapper.java", "diffHunk": "@@ -191,22 +191,18 @@ public static AnnotatedText parse (String textPlusMarkup) {\n                 String value = null;\n                 for (String pair : pairs) {\n                     String[] kv = pair.split(\"=\");\n-                    try {\n-                        if(kv.length == 2){\n-                            throw new ElasticsearchParseException(\"key=value pairs are not supported in annotations\");\n-                        }\n-                        if(kv.length == 1) {\n-                            //Check \"=\" sign wasn't in the pair string\n-                            if(kv[0].length() == pair.length()) {\n-                                //untyped value\n-                                value = URLDecoder.decode(kv[0], \"UTF-8\");\n-                            }\n-                        }\n-                        if (value!=null && value.length() > 0) {\n-                            annotations.add(new AnnotationToken(startOffset, endOffset, value));\n+                    if(kv.length == 2){\n+                        throw new ElasticsearchParseException(\"key=value pairs are not supported in annotations\");\n+                    }\n+                    if(kv.length == 1) {\n+                        //Check \"=\" sign wasn't in the pair string\n+                        if(kv[0].length() == pair.length()) {\n+                            //untyped value\n+                            value = URLDecoder.decode(kv[0], StandardCharsets.UTF_8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad4b5adc1cd1ce53ffe532d67a664192439962dc"}, "originalPosition": 228}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5Mjc2OA==", "bodyText": "I wonder if alwaysSerialize should a shortcut to this new thing - it is easier for me to read the intent of alwaysSerialize than this lambda.", "url": "https://github.com/elastic/elasticsearch/pull/63269#discussion_r499792768", "createdAt": "2020-10-05T18:32:14Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java", "diffHunk": "@@ -142,7 +142,7 @@ private static CompletionFieldMapper toType(FieldMapper in) {\n             m -> toType(m).maxInputLength, Defaults.DEFAULT_MAX_INPUT_LENGTH)\n             .addDeprecatedName(\"max_input_len\")\n             .setValidator(Builder::validateInputLength)\n-            .alwaysSerialize();\n+            .setSerializerCheck((id, ic, v) -> true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad4b5adc1cd1ce53ffe532d67a664192439962dc"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MzE2MQ==", "bodyText": "Are you thinking of removing the old getValue in a follow up?", "url": "https://github.com/elastic/elasticsearch/pull/63269#discussion_r499793161", "createdAt": "2020-10-05T18:33:04Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java", "diffHunk": "@@ -178,6 +180,11 @@ public T getValue() {\n             return isSet ? value : defaultValue.get();\n         }\n \n+        @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad4b5adc1cd1ce53ffe532d67a664192439962dc"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5NDA3Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/63269#discussion_r499794076", "createdAt": "2020-10-05T18:34:50Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java", "diffHunk": "@@ -121,101 +119,230 @@\n         public static final int POSITION_INCREMENT_GAP = 100;\n     }\n \n-    public static class Builder extends FieldMapper.Builder<Builder> {\n+    private static Builder builder(FieldMapper in) {\n+        return ((TextFieldMapper) in).builder;\n+    }\n \n-        private int positionIncrementGap = POSITION_INCREMENT_GAP_USE_ANALYZER;\n-        private int minPrefixChars = -1;\n-        private int maxPrefixChars = -1;\n-        private boolean fielddata = false;\n-        private boolean indexPhrases = false;\n-        private boolean eagerGlobalOrdinals = false;\n-        private double fielddataMinFreq = Defaults.FIELDDATA_MIN_FREQUENCY;\n-        private double fielddataMaxFreq = Defaults.FIELDDATA_MAX_FREQUENCY;\n-        private int fielddataMinSegSize = Defaults.FIELDDATA_MIN_SEGMENT_SIZE;\n-        protected SimilarityProvider similarity;\n+    private static final class PrefixConfig implements ToXContent {\n+        final int minChars;\n+        final int maxChars;\n \n-        public Builder(String name) {\n-            super(name, Defaults.FIELD_TYPE);\n-            builder = this;\n+        private PrefixConfig(int minChars, int maxChars) {\n+            this.minChars = minChars;\n+            this.maxChars = maxChars;\n+            if (minChars > maxChars) {\n+                throw new IllegalArgumentException(\"min_chars [\" + minChars + \"] must be less than max_chars [\" + maxChars + \"]\");\n+            }\n+            if (minChars < 1) {\n+                throw new IllegalArgumentException(\"min_chars [\" + minChars + \"] must be greater than zero\");\n+            }\n+            if (maxChars >= 20) {\n+                throw new IllegalArgumentException(\"max_chars [\" + maxChars + \"] must be less than 20\");\n+            }\n         }\n \n-        public Builder positionIncrementGap(int positionIncrementGap) {\n-            if (positionIncrementGap < 0) {\n-                throw new MapperParsingException(\"[positions_increment_gap] must be positive, got \" + positionIncrementGap);\n-            }\n-            this.positionIncrementGap = positionIncrementGap;\n-            return this;\n+        @Override\n+        public boolean equals(Object o) {\n+            if (this == o) return true;\n+            if (o == null || getClass() != o.getClass()) return false;\n+            PrefixConfig that = (PrefixConfig) o;\n+            return minChars == that.minChars &&\n+                maxChars == that.maxChars;\n         }\n \n-        public Builder fielddata(boolean fielddata) {\n-            this.fielddata = fielddata;\n-            return builder;\n+        @Override\n+        public int hashCode() {\n+            return Objects.hash(minChars, maxChars);\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return \"{ min_chars=\" + minChars + \", max_chars=\" + maxChars + \" }\";\n         }\n \n-        public Builder indexPhrases(boolean indexPhrases) {\n-            this.indexPhrases = indexPhrases;\n+        @Override\n+        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n+            builder.startObject();\n+            builder.field(\"min_chars\", minChars);\n+            builder.field(\"max_chars\", maxChars);\n+            builder.endObject();\n             return builder;\n         }\n+    }\n \n-        public void similarity(SimilarityProvider similarity) {\n-            this.similarity = similarity;\n+    private static PrefixConfig parsePrefixConfig(String propName, ParserContext parserContext, Object propNode) {\n+        if (propNode == null) {\n+            return null;\n+        }\n+        Map<?, ?> indexPrefix = (Map<?, ?>) propNode;\n+        int minChars = XContentMapValues.nodeIntegerValue(indexPrefix.remove(\"min_chars\"),\n+            Defaults.INDEX_PREFIX_MIN_CHARS);\n+        int maxChars = XContentMapValues.nodeIntegerValue(indexPrefix.remove(\"max_chars\"),\n+            Defaults.INDEX_PREFIX_MAX_CHARS);\n+        DocumentMapperParser.checkNoRemainingFields(propName, indexPrefix, parserContext.indexVersionCreated());\n+        return new PrefixConfig(minChars, maxChars);\n+    }\n+\n+    private static final class FielddataFrequencyFilter implements ToXContent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad4b5adc1cd1ce53ffe532d67a664192439962dc"}, "originalPosition": 127}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96651c5de6d146bf7019a7d8bb51acc4d91ce744", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/96651c5de6d146bf7019a7d8bb51acc4d91ce744", "committedDate": "2020-10-06T08:56:21Z", "message": "tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94f0689f5aedb0f33250714c4e3c5c5d92f5ac32", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/94f0689f5aedb0f33250714c4e3c5c5d92f5ac32", "committedDate": "2020-10-06T08:56:24Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/textfield-params"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47409f77a214d70d245b82391dbcf1fc2776c902", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/47409f77a214d70d245b82391dbcf1fc2776c902", "committedDate": "2020-10-06T10:11:37Z", "message": "moar tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33dde51329a4ca0e5ce6cb93023255a27c7ce92d", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/33dde51329a4ca0e5ce6cb93023255a27c7ce92d", "committedDate": "2020-10-06T14:50:36Z", "message": "more tests - bwc/mixed still failing due to serialization changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c443d8b8aa8381b458a1dfb8d7c59772b45612c4", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/c443d8b8aa8381b458a1dfb8d7c59772b45612c4", "committedDate": "2020-10-06T10:34:25Z", "message": "Merge branch 'master' into mapper/textfield-params"}, "afterCommit": {"oid": "33dde51329a4ca0e5ce6cb93023255a27c7ce92d", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/33dde51329a4ca0e5ce6cb93023255a27c7ce92d", "committedDate": "2020-10-06T14:50:36Z", "message": "more tests - bwc/mixed still failing due to serialization changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7276c03ecc79a2e37b26a6a9ab928e940f03f896", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/7276c03ecc79a2e37b26a6a9ab928e940f03f896", "committedDate": "2020-10-06T16:18:00Z", "message": "well this sucks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcf7fcbac18764997c14658f5f98757043a96a72", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/dcf7fcbac18764997c14658f5f98757043a96a72", "committedDate": "2020-10-06T17:15:43Z", "message": "external fieldtype"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6c49d8b6010effeef7ff513f22df1e2abe2e917", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/a6c49d8b6010effeef7ff513f22df1e2abe2e917", "committedDate": "2020-10-06T21:04:47Z", "message": "test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12875d9137c9bc6e304af633419d0232e45c5bcb", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/12875d9137c9bc6e304af633419d0232e45c5bcb", "committedDate": "2020-10-07T08:11:27Z", "message": "tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e885ceaf1beb5450ad0312c3dadd7acdfc814917", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/e885ceaf1beb5450ad0312c3dadd7acdfc814917", "committedDate": "2020-10-07T08:11:43Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/textfield-params"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7734125c905a2fdd0bcda780d8b928274b8ac7d8", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/7734125c905a2fdd0bcda780d8b928274b8ac7d8", "committedDate": "2020-10-07T08:28:08Z", "message": "moar test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7aa6e71e84580635d8529082c6d34103ff5cb18c", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/7aa6e71e84580635d8529082c6d34103ff5cb18c", "committedDate": "2020-10-06T21:17:45Z", "message": "Merge branch 'master' into mapper/textfield-params"}, "afterCommit": {"oid": "7734125c905a2fdd0bcda780d8b928274b8ac7d8", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/7734125c905a2fdd0bcda780d8b928274b8ac7d8", "committedDate": "2020-10-07T08:28:08Z", "message": "moar test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4420, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}