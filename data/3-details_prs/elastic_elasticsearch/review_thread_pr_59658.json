{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NjkzOTE2", "number": 59658, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMDozMjoxMFrOEO2PYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMDozNDo0MFrOEO2SYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDA0MTkyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMDozMjoxMFrOGyOyaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzoyNDoyMlrOGzS2nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ==", "bodyText": "nit: use the constant from the mapper? content type I think it is called", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455324265", "createdAt": "2020-07-15T20:32:10Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "diffHunk": "@@ -77,8 +78,17 @@ public String typeName() {\n         return scriptFactory.newFactory(script.getParams(), context.lookup());\n     }\n \n+    private void checkAllowExpensiveQueries(QueryShardContext context) {\n+        if (context.allowExpensiveQueries() == false) {\n+            throw new IllegalArgumentException(\n+                \"queries cannot be executed against [script] fields while [\" + ALLOW_EXPENSIVE_QUERIES.getKey() + \"] is set to [false].\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b320de3671c00b583bc118c7e74bb0a16ed37b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNTA2Ng==", "bodyText": "should we rather throw ElasticsearchException also, and why doesn't the context expose a check method instead that accepts for instance a message? :)", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455325066", "createdAt": "2020-07-15T20:33:46Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "diffHunk": "@@ -77,8 +78,17 @@ public String typeName() {\n         return scriptFactory.newFactory(script.getParams(), context.lookup());\n     }\n \n+    private void checkAllowExpensiveQueries(QueryShardContext context) {\n+        if (context.allowExpensiveQueries() == false) {\n+            throw new IllegalArgumentException(\n+                \"queries cannot be executed against [script] fields while [\" + ALLOW_EXPENSIVE_QUERIES.getKey() + \"] is set to [false].\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}, "originalCommit": {"oid": "04b320de3671c00b583bc118c7e74bb0a16ed37b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM0OTg2NA==", "bodyText": "should we rather throw ElasticsearchException also, and why doesn't the context expose a check method instead that accepts for instance a message? :)\n\nThat would probably be a good choice.\nI have no idea why we were throwing ElasticsearchException when we were. It feels like this is what IAE is for.", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455349864", "createdAt": "2020-07-15T21:11:24Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "diffHunk": "@@ -77,8 +78,17 @@ public String typeName() {\n         return scriptFactory.newFactory(script.getParams(), context.lookup());\n     }\n \n+    private void checkAllowExpensiveQueries(QueryShardContext context) {\n+        if (context.allowExpensiveQueries() == false) {\n+            throw new IllegalArgumentException(\n+                \"queries cannot be executed against [script] fields while [\" + ALLOW_EXPENSIVE_QUERIES.getKey() + \"] is set to [false].\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}, "originalCommit": {"oid": "04b320de3671c00b583bc118c7e74bb0a16ed37b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3NjY5Ng==", "bodyText": "I have no idea why we were throwing ElasticsearchException when we were. It feels like this is what IAE is for.\n\nI figured it out - we translate all exceptions thrown when building a query into a QueryShardException which is always a 400.", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455776696", "createdAt": "2020-07-16T13:15:52Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "diffHunk": "@@ -77,8 +78,17 @@ public String typeName() {\n         return scriptFactory.newFactory(script.getParams(), context.lookup());\n     }\n \n+    private void checkAllowExpensiveQueries(QueryShardContext context) {\n+        if (context.allowExpensiveQueries() == false) {\n+            throw new IllegalArgumentException(\n+                \"queries cannot be executed against [script] fields while [\" + ALLOW_EXPENSIVE_QUERIES.getKey() + \"] is set to [false].\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}, "originalCommit": {"oid": "04b320de3671c00b583bc118c7e74bb0a16ed37b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc4MDgyMw==", "bodyText": "why doesn't the context expose a check method instead that accepts for instance a message? :)\n\nIt really is a good idea. I took a look at it and, ironically, testing it is kind of a pain. I'll hold off on it.", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455780823", "createdAt": "2020-07-16T13:22:01Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "diffHunk": "@@ -77,8 +78,17 @@ public String typeName() {\n         return scriptFactory.newFactory(script.getParams(), context.lookup());\n     }\n \n+    private void checkAllowExpensiveQueries(QueryShardContext context) {\n+        if (context.allowExpensiveQueries() == false) {\n+            throw new IllegalArgumentException(\n+                \"queries cannot be executed against [script] fields while [\" + ALLOW_EXPENSIVE_QUERIES.getKey() + \"] is set to [false].\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}, "originalCommit": {"oid": "04b320de3671c00b583bc118c7e74bb0a16ed37b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQyMTg3OQ==", "bodyText": "shall we open issues for possible follow-up tasks that we don't want to spend time on right now?", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r456421879", "createdAt": "2020-07-17T12:51:38Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "diffHunk": "@@ -77,8 +78,17 @@ public String typeName() {\n         return scriptFactory.newFactory(script.getParams(), context.lookup());\n     }\n \n+    private void checkAllowExpensiveQueries(QueryShardContext context) {\n+        if (context.allowExpensiveQueries() == false) {\n+            throw new IllegalArgumentException(\n+                \"queries cannot be executed against [script] fields while [\" + ALLOW_EXPENSIVE_QUERIES.getKey() + \"] is set to [false].\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}, "originalCommit": {"oid": "04b320de3671c00b583bc118c7e74bb0a16ed37b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQzOTQ1NQ==", "bodyText": "Let me give it another go this morning!", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r456439455", "createdAt": "2020-07-17T13:24:22Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "diffHunk": "@@ -77,8 +78,17 @@ public String typeName() {\n         return scriptFactory.newFactory(script.getParams(), context.lookup());\n     }\n \n+    private void checkAllowExpensiveQueries(QueryShardContext context) {\n+        if (context.allowExpensiveQueries() == false) {\n+            throw new IllegalArgumentException(\n+                \"queries cannot be executed against [script] fields while [\" + ALLOW_EXPENSIVE_QUERIES.getKey() + \"] is set to [false].\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNDI2NQ=="}, "originalCommit": {"oid": "04b320de3671c00b583bc118c7e74bb0a16ed37b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDA0OTYyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMDozNDo0MFrOGyO3XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMToxMDowM1rOGyQRfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNTUzMg==", "bodyText": "maybe one day we will a base class for runtime mapper field types that does this in one place.", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455325532", "createdAt": "2020-07-15T20:34:40Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "diffHunk": "@@ -77,8 +78,17 @@ public String typeName() {\n         return scriptFactory.newFactory(script.getParams(), context.lookup());\n     }\n \n+    private void checkAllowExpensiveQueries(QueryShardContext context) {\n+        if (context.allowExpensiveQueries() == false) {\n+            throw new IllegalArgumentException(\n+                \"queries cannot be executed against [script] fields while [\" + ALLOW_EXPENSIVE_QUERIES.getKey() + \"] is set to [false].\"\n+            );\n+        }\n+    }\n+\n     @Override\n     public Query existsQuery(QueryShardContext context) {\n+        checkAllowExpensiveQueries(context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b320de3671c00b583bc118c7e74bb0a16ed37b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM0ODYwNQ==", "bodyText": "probably!", "url": "https://github.com/elastic/elasticsearch/pull/59658#discussion_r455348605", "createdAt": "2020-07-15T21:10:03Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeKeywordMappedFieldType.java", "diffHunk": "@@ -77,8 +78,17 @@ public String typeName() {\n         return scriptFactory.newFactory(script.getParams(), context.lookup());\n     }\n \n+    private void checkAllowExpensiveQueries(QueryShardContext context) {\n+        if (context.allowExpensiveQueries() == false) {\n+            throw new IllegalArgumentException(\n+                \"queries cannot be executed against [script] fields while [\" + ALLOW_EXPENSIVE_QUERIES.getKey() + \"] is set to [false].\"\n+            );\n+        }\n+    }\n+\n     @Override\n     public Query existsQuery(QueryShardContext context) {\n+        checkAllowExpensiveQueries(context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNTUzMg=="}, "originalCommit": {"oid": "04b320de3671c00b583bc118c7e74bb0a16ed37b"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2334, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}