{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzNDg4ODIx", "number": 62201, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwODozMzowM1rOEiApag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwODozMzowM1rOEiApag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDk3NjQyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwODozMzowM1rOHPo_Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwOTowNzo1MVrOHPqVhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE2MjI0Mw==", "bodyText": "nit: use Map.of()", "url": "https://github.com/elastic/elasticsearch/pull/62201#discussion_r486162243", "createdAt": "2020-09-10T08:33:03Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -304,25 +280,17 @@ public void onIndexModule(IndexModule indexModule) {\n         IndexNameExpressionResolver indexNameExpressionResolver,\n         Supplier<DiscoveryNodes> nodesInCluster\n     ) {\n-        if (SEARCHABLE_SNAPSHOTS_FEATURE_ENABLED) {\n-            return List.of(\n-                new RestSearchableSnapshotsStatsAction(),\n-                new RestClearSearchableSnapshotsCacheAction(),\n-                new RestMountSearchableSnapshotAction(),\n-                new RestRepositoryStatsAction()\n-            );\n-        } else {\n-            return List.of();\n-        }\n+        return List.of(\n+            new RestSearchableSnapshotsStatsAction(),\n+            new RestClearSearchableSnapshotsCacheAction(),\n+            new RestMountSearchableSnapshotAction(),\n+            new RestRepositoryStatsAction()\n+        );\n     }\n \n     @Override\n     public Map<String, ExistingShardsAllocator> getExistingShardsAllocators() {\n-        if (SEARCHABLE_SNAPSHOTS_FEATURE_ENABLED) {\n-            return Collections.singletonMap(SearchableSnapshotAllocator.ALLOCATOR_NAME, new SearchableSnapshotAllocator());\n-        } else {\n-            return Collections.emptyMap();\n-        }\n+        return Collections.singletonMap(SearchableSnapshotAllocator.ALLOCATOR_NAME, new SearchableSnapshotAllocator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6f21bfcd56638ca6daad0882007945e984a932b"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE4MzE5Ng==", "bodyText": "Have changed it, but don't think it's a great use of my time using these features if I have to change everything back on  backport.", "url": "https://github.com/elastic/elasticsearch/pull/62201#discussion_r486183196", "createdAt": "2020-09-10T09:06:10Z", "author": {"login": "ywelsch"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -304,25 +280,17 @@ public void onIndexModule(IndexModule indexModule) {\n         IndexNameExpressionResolver indexNameExpressionResolver,\n         Supplier<DiscoveryNodes> nodesInCluster\n     ) {\n-        if (SEARCHABLE_SNAPSHOTS_FEATURE_ENABLED) {\n-            return List.of(\n-                new RestSearchableSnapshotsStatsAction(),\n-                new RestClearSearchableSnapshotsCacheAction(),\n-                new RestMountSearchableSnapshotAction(),\n-                new RestRepositoryStatsAction()\n-            );\n-        } else {\n-            return List.of();\n-        }\n+        return List.of(\n+            new RestSearchableSnapshotsStatsAction(),\n+            new RestClearSearchableSnapshotsCacheAction(),\n+            new RestMountSearchableSnapshotAction(),\n+            new RestRepositoryStatsAction()\n+        );\n     }\n \n     @Override\n     public Map<String, ExistingShardsAllocator> getExistingShardsAllocators() {\n-        if (SEARCHABLE_SNAPSHOTS_FEATURE_ENABLED) {\n-            return Collections.singletonMap(SearchableSnapshotAllocator.ALLOCATOR_NAME, new SearchableSnapshotAllocator());\n-        } else {\n-            return Collections.emptyMap();\n-        }\n+        return Collections.singletonMap(SearchableSnapshotAllocator.ALLOCATOR_NAME, new SearchableSnapshotAllocator());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE2MjI0Mw=="}, "originalCommit": {"oid": "a6f21bfcd56638ca6daad0882007945e984a932b"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE4NDMyNA==", "bodyText": "That was more for the sake of coherency - either use one or the other but avoid mixing them", "url": "https://github.com/elastic/elasticsearch/pull/62201#discussion_r486184324", "createdAt": "2020-09-10T09:07:51Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -304,25 +280,17 @@ public void onIndexModule(IndexModule indexModule) {\n         IndexNameExpressionResolver indexNameExpressionResolver,\n         Supplier<DiscoveryNodes> nodesInCluster\n     ) {\n-        if (SEARCHABLE_SNAPSHOTS_FEATURE_ENABLED) {\n-            return List.of(\n-                new RestSearchableSnapshotsStatsAction(),\n-                new RestClearSearchableSnapshotsCacheAction(),\n-                new RestMountSearchableSnapshotAction(),\n-                new RestRepositoryStatsAction()\n-            );\n-        } else {\n-            return List.of();\n-        }\n+        return List.of(\n+            new RestSearchableSnapshotsStatsAction(),\n+            new RestClearSearchableSnapshotsCacheAction(),\n+            new RestMountSearchableSnapshotAction(),\n+            new RestRepositoryStatsAction()\n+        );\n     }\n \n     @Override\n     public Map<String, ExistingShardsAllocator> getExistingShardsAllocators() {\n-        if (SEARCHABLE_SNAPSHOTS_FEATURE_ENABLED) {\n-            return Collections.singletonMap(SearchableSnapshotAllocator.ALLOCATOR_NAME, new SearchableSnapshotAllocator());\n-        } else {\n-            return Collections.emptyMap();\n-        }\n+        return Collections.singletonMap(SearchableSnapshotAllocator.ALLOCATOR_NAME, new SearchableSnapshotAllocator());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE2MjI0Mw=="}, "originalCommit": {"oid": "a6f21bfcd56638ca6daad0882007945e984a932b"}, "originalPosition": 194}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1608, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}