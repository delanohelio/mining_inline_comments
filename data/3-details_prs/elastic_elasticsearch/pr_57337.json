{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTU3NDM1", "number": 57337, "title": "Delete expired data by job", "bodyText": "Deleting expired data can take a long time leading to timeouts if there are many jobs. Often the problem is due to a few large jobs which prevent the regular maintenance of the remaining jobs. This change adds a job_id parameter to the delete expired data endpoint to help clean up those problematic jobs.\nThis change only affects model snapshots and results. Forecasts cannot be removed by job_id yet if desired that could be implemented.\nTODO HLRC", "createdAt": "2020-05-29T08:16:54Z", "url": "https://github.com/elastic/elasticsearch/pull/57337", "merged": true, "mergeCommit": {"oid": "bbeda643a62c7e29caf59967538b837ae6d6495b"}, "closed": true, "closedAt": "2020-06-05T12:32:35Z", "author": {"login": "davidkyle"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl-Iv6gFqTQyMDc0NTMzNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoNofrgH2gAyNDI0OTU3NDM1OjQ2YzFjODQ1MzQzMzhlYjAxNmE4NzI0NDAyMmY2ZDliMDkxZjZmYTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNzQ1MzM0", "url": "https://github.com/elastic/elasticsearch/pull/57337#pullrequestreview-420745334", "createdAt": "2020-05-29T08:17:47Z", "commit": {"oid": "09b975ab372ac41919b93764f4b264af5d2356e7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODoxNzo0N1rOGcTN5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODoyNDozNFrOGcTb5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMyODE2Nw==", "bodyText": "requests_per_second and timeout can now be query parameters", "url": "https://github.com/elastic/elasticsearch/pull/57337#discussion_r432328167", "createdAt": "2020-05-29T08:17:47Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/rest/RestDeleteExpiredDataAction.java", "diffHunk": "@@ -41,9 +44,34 @@ public String getName() {\n \n     @Override\n     protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient client) throws IOException {\n-        DeleteExpiredDataAction.Request request = restRequest.hasContent() ?\n-            DeleteExpiredDataAction.Request.PARSER.apply(restRequest.contentParser(), null) :\n-            new DeleteExpiredDataAction.Request();\n+        DeleteExpiredDataAction.Request request;\n+        if (restRequest.hasContent()) {\n+            request = DeleteExpiredDataAction.Request.PARSER.apply(restRequest.contentParser(), null);\n+        } else {\n+            request = new DeleteExpiredDataAction.Request();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09b975ab372ac41919b93764f4b264af5d2356e7"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMTc1MQ==", "bodyText": "This is the most controversial change I think. Previously each data remover would get all jobs using a BatchedJobsIterator which gets the jobs in batches of 10,000 using a scroll search so if there are more than 10,000 jobs a scroll search will return them all.\nThe config provider performs a normal search and cannot return more that 10,000 jobs. The 10,000 jobs is a known limit as GET jobs would never return more than that number. Using the config provider hugely simplifies the code but it is a change in behaviour not matter how unlikely it is that there are > 10,000 jobs", "url": "https://github.com/elastic/elasticsearch/pull/57337#discussion_r432331751", "createdAt": "2020-05-29T08:24:34Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportDeleteExpiredDataAction.java", "diffHunk": "@@ -77,20 +84,31 @@ protected void doExecute(Task task, DeleteExpiredDataAction.Request request,\n             request.getTimeout() == null ? DEFAULT_MAX_DURATION : Duration.ofMillis(request.getTimeout().millis())\n         );\n \n-        Supplier<Boolean> isTimedOutSupplier = () -> Instant.now(clock).isAfter(timeoutTime);\n-        threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(\n-            () -> deleteExpiredData(request, listener, isTimedOutSupplier)\n-        );\n+        jobConfigProvider.expandJobs(request.getJobId(), true, true, ActionListener.wrap(\n+            jobBuilders -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09b975ab372ac41919b93764f4b264af5d2356e7"}, "originalPosition": 56}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28838637e2e8fd30dd19af77dde45e6f1b44621c", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/28838637e2e8fd30dd19af77dde45e6f1b44621c", "committedDate": "2020-05-29T09:41:25Z", "message": "Fix tests with security"}, "afterCommit": {"oid": "bacdb1bc51cab9829cbfb3052fd6bd49647691b9", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/bacdb1bc51cab9829cbfb3052fd6bd49647691b9", "committedDate": "2020-05-29T10:19:49Z", "message": "Fix tests with security"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODcxMjcy", "url": "https://github.com/elastic/elasticsearch/pull/57337#pullrequestreview-420871272", "createdAt": "2020-05-29T11:32:39Z", "commit": {"oid": "bacdb1bc51cab9829cbfb3052fd6bd49647691b9"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTozMjo0MFrOGcZFlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo0Mjo0NVrOGcZWlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNDM0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (in.getVersion().onOrAfter(Version.CURRENT)) { // TODO BWC for V_7_9_0\n          \n          \n            \n                        if (in.getVersion().onOrAfter(Version.V_8_0_0)) { // TODO BWC for V_7_9_0", "url": "https://github.com/elastic/elasticsearch/pull/57337#discussion_r432424340", "createdAt": "2020-05-29T11:32:40Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/DeleteExpiredDataAction.java", "diffHunk": "@@ -67,6 +71,9 @@ public Request(StreamInput in) throws IOException {\n                 this.requestsPerSecond = null;\n                 this.timeout = null;\n             }\n+            if (in.getVersion().onOrAfter(Version.CURRENT)) { // TODO BWC for V_7_9_0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bacdb1bc51cab9829cbfb3052fd6bd49647691b9"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNDQ3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (out.getVersion().onOrAfter(Version.CURRENT)) {  // TODO BWC for V_7_9_0\n          \n          \n            \n                        if (out.getVersion().onOrAfter(Version.V_8_0_0)) {  // TODO BWC for V_7_9_0", "url": "https://github.com/elastic/elasticsearch/pull/57337#discussion_r432424473", "createdAt": "2020-05-29T11:32:57Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/DeleteExpiredDataAction.java", "diffHunk": "@@ -118,6 +135,9 @@ public void writeTo(StreamOutput out) throws IOException {\n                 out.writeOptionalFloat(requestsPerSecond);\n                 out.writeOptionalTimeValue(timeout);\n             }\n+            if (out.getVersion().onOrAfter(Version.CURRENT)) {  // TODO BWC for V_7_9_0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bacdb1bc51cab9829cbfb3052fd6bd49647691b9"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNDY4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (version.before(Version.CURRENT)) {  // TODO make V_7_9_0\n          \n          \n            \n                    if (version.before(Version.V_8_0_0)) {  // TODO make V_7_9_0", "url": "https://github.com/elastic/elasticsearch/pull/57337#discussion_r432424689", "createdAt": "2020-05-29T11:33:27Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/action/DeleteExpiredDataActionRequestTests.java", "diffHunk": "@@ -31,6 +38,12 @@ protected Request mutateInstanceForVersion(Request instance, Version version) {\n         if (version.before(Version.V_7_8_0)) {\n             return new Request();\n         }\n+        if (version.before(Version.CURRENT)) {  // TODO make V_7_9_0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bacdb1bc51cab9829cbfb3052fd6bd49647691b9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNjQzNA==", "bodyText": "One thing to think about is that the 10,001st job would NEVER have it's data cleaned up. I suppose that is OK, but this should be at least documented. I agree that having more than 10k jobs is rare.\nFWIW, the code using the iterator could be just as simple as you only have to update the iterator to restrict its search. Then instead of passing in a list of jobs, you pass in the iterator.", "url": "https://github.com/elastic/elasticsearch/pull/57337#discussion_r432426434", "createdAt": "2020-05-29T11:37:27Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportDeleteExpiredDataAction.java", "diffHunk": "@@ -77,20 +84,31 @@ protected void doExecute(Task task, DeleteExpiredDataAction.Request request,\n             request.getTimeout() == null ? DEFAULT_MAX_DURATION : Duration.ofMillis(request.getTimeout().millis())\n         );\n \n-        Supplier<Boolean> isTimedOutSupplier = () -> Instant.now(clock).isAfter(timeoutTime);\n-        threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(\n-            () -> deleteExpiredData(request, listener, isTimedOutSupplier)\n-        );\n+        jobConfigProvider.expandJobs(request.getJobId(), true, true, ActionListener.wrap(\n+            jobBuilders -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMTc1MQ=="}, "originalCommit": {"oid": "09b975ab372ac41919b93764f4b264af5d2356e7"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNzM1NA==", "bodyText": "We need to make sure that we take the empty route in replacedRoutes and put it here before it is removed.", "url": "https://github.com/elastic/elasticsearch/pull/57337#discussion_r432427354", "createdAt": "2020-05-29T11:39:39Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/rest/RestDeleteExpiredDataAction.java", "diffHunk": "@@ -22,7 +24,8 @@\n \n     @Override\n     public List<Route> routes() {\n-        return Collections.emptyList();\n+        return Collections.singletonList(\n+            new Route(DELETE, MachineLearning.BASE_PATH + \"_delete_expired_data/{\" + Fields.JOB_ID.getPreferredName() + \"}\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bacdb1bc51cab9829cbfb3052fd6bd49647691b9"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNzc5OA==", "bodyText": "This should pull in the field name from the Job config object. Not the data frame analytics fields.", "url": "https://github.com/elastic/elasticsearch/pull/57337#discussion_r432427798", "createdAt": "2020-05-29T11:40:41Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/rest/RestDeleteExpiredDataAction.java", "diffHunk": "@@ -41,9 +44,34 @@ public String getName() {\n \n     @Override\n     protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient client) throws IOException {\n-        DeleteExpiredDataAction.Request request = restRequest.hasContent() ?\n-            DeleteExpiredDataAction.Request.PARSER.apply(restRequest.contentParser(), null) :\n-            new DeleteExpiredDataAction.Request();\n+        DeleteExpiredDataAction.Request request;\n+        if (restRequest.hasContent()) {\n+            request = DeleteExpiredDataAction.Request.PARSER.apply(restRequest.contentParser(), null);\n+        } else {\n+            request = new DeleteExpiredDataAction.Request();\n+\n+            String perSecondParam = restRequest.param(DeleteExpiredDataAction.Request.REQUESTS_PER_SECOND.getPreferredName());\n+            if (perSecondParam != null) {\n+                try {\n+                    request.setRequestsPerSecond(Float.parseFloat(perSecondParam));\n+                } catch (NumberFormatException e) {\n+                    throw new IllegalArgumentException(\"Failed to parse float parameter [\" +\n+                        DeleteExpiredDataAction.Request.REQUESTS_PER_SECOND.getPreferredName() +\n+                        \"] with value [\" + perSecondParam + \"]\", e);\n+                }\n+            }\n+\n+            String timeoutParam = restRequest.param(DeleteExpiredDataAction.Request.TIMEOUT.getPreferredName());\n+            if (timeoutParam != null) {\n+                request.setTimeout(restRequest.paramAsTime(timeoutParam, null));\n+            }\n+        }\n+\n+        String jobId = restRequest.param(Fields.JOB_ID.getPreferredName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bacdb1bc51cab9829cbfb3052fd6bd49647691b9"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyODY5Mw==", "bodyText": "What happens if somebody calls _delete_expired_data with a job that does not exist?", "url": "https://github.com/elastic/elasticsearch/pull/57337#discussion_r432428693", "createdAt": "2020-05-29T11:42:45Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/ml/delete_expired_data.yml", "diffHunk": "@@ -34,3 +56,96 @@ setup:\n         body:  >\n            { \"timeout\": \"10h\", \"requests_per_second\": 100000.0 }\n   - match: { deleted: true}\n+\n+---\n+\"Test delete expired data with job id\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bacdb1bc51cab9829cbfb3052fd6bd49647691b9"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de290b89e135bc7581eb49f4e3337f1563ff0528", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/de290b89e135bc7581eb49f4e3337f1563ff0528", "committedDate": "2020-06-04T10:47:11Z", "message": "WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4e86036a6121749ea7b2519a02707aa95e00c5b", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/f4e86036a6121749ea7b2519a02707aa95e00c5b", "committedDate": "2020-06-04T10:47:11Z", "message": "Add jobs to job data remover"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7913f95903c62d568c79aed3dc2b10d905c76ebe", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/7913f95903c62d568c79aed3dc2b10d905c76ebe", "committedDate": "2020-06-04T10:47:11Z", "message": "Update tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0adc85643db0ff1eb830657b2d78dae76df53897", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/0adc85643db0ff1eb830657b2d78dae76df53897", "committedDate": "2020-06-04T10:47:11Z", "message": "Rest test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f632d8afdc00cf06f7f8021d524dfc7ceee2b585", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/f632d8afdc00cf06f7f8021d524dfc7ceee2b585", "committedDate": "2020-06-04T10:47:11Z", "message": "simplify test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bb691756004a01473e36dea8d79eab9b75744a6", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/6bb691756004a01473e36dea8d79eab9b75744a6", "committedDate": "2020-06-04T10:47:11Z", "message": "remove unused code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c33d09a377f8a3a88727caa1ba88ffb6820f3f6", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/9c33d09a377f8a3a88727caa1ba88ffb6820f3f6", "committedDate": "2020-06-04T10:47:11Z", "message": "Use volatile iterator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bf97032ec6e1c7330dac7c7c3fdc4d783f52e7a", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/2bf97032ec6e1c7330dac7c7c3fdc4d783f52e7a", "committedDate": "2020-06-04T10:47:11Z", "message": "comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1efe4f562f85607e706d102f18b8c40f3997ab1f", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/1efe4f562f85607e706d102f18b8c40f3997ab1f", "committedDate": "2020-06-04T10:47:11Z", "message": "Fix tests with security"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a7a1e6c887fcb78aa0809bfb1c9dfe538b3853b", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/9a7a1e6c887fcb78aa0809bfb1c9dfe538b3853b", "committedDate": "2020-06-04T11:16:56Z", "message": "Review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da7ae6db26d3529dd0de36b3fb54318bc19a1028", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/da7ae6db26d3529dd0de36b3fb54318bc19a1028", "committedDate": "2020-06-04T12:08:59Z", "message": "Use doc IDs in unused state remover"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecda5c11a2e505aa2a2d7285bcd14ef045c8bd38", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/ecda5c11a2e505aa2a2d7285bcd14ef045c8bd38", "committedDate": "2020-06-04T13:14:49Z", "message": "Add wildcard query to BatchedJobsIterator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bacdb1bc51cab9829cbfb3052fd6bd49647691b9", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/bacdb1bc51cab9829cbfb3052fd6bd49647691b9", "committedDate": "2020-05-29T10:19:49Z", "message": "Fix tests with security"}, "afterCommit": {"oid": "ecda5c11a2e505aa2a2d7285bcd14ef045c8bd38", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/ecda5c11a2e505aa2a2d7285bcd14ef045c8bd38", "committedDate": "2020-06-04T13:14:49Z", "message": "Add wildcard query to BatchedJobsIterator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45fa17c85f72a2c5136b251766aae30a6dd89c96", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/45fa17c85f72a2c5136b251766aae30a6dd89c96", "committedDate": "2020-06-04T18:27:57Z", "message": "Fix wrong arguments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NzQ0MDMx", "url": "https://github.com/elastic/elasticsearch/pull/57337#pullrequestreview-424744031", "createdAt": "2020-06-04T18:59:56Z", "commit": {"oid": "45fa17c85f72a2c5136b251766aae30a6dd89c96"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46c1c84534338eb016a87244022f6d9b091f6fa9", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/46c1c84534338eb016a87244022f6d9b091f6fa9", "committedDate": "2020-06-05T07:36:03Z", "message": "Remove invalid test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4150, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}