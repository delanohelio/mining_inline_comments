{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NjY2NzE2", "number": 63092, "title": "[ML] adding for_export flag for ml plugin GET resource APIs", "bodyText": "This adds the new for_export flag to the following APIs:\n\nGET _ml/anomaly_detection/<job_id>\nGET _ml/datafeeds/<datafeed_id>\nGET _ml/data_frame/analytics/<analytics_id>\n\nThe flag is designed for cloning or exporting configuration objects to later be put into the same cluster or a separate cluster.\nThe following fields are not returned in the objects:\n\nany field that is not user settable (e.g. version, create_time)\nany field that is a calculated default value (e.g. datafeed chunking_config)\nany field that would effectively require changing to be of use (e.g. datafeed job_id)\nany field that is automatically set via another Elastic stack process (e.g. anomaly job custom_settings.created_by)\n\ncloses #63055\nThis PR is completed by the following PR #63899", "createdAt": "2020-09-30T17:29:20Z", "url": "https://github.com/elastic/elasticsearch/pull/63092", "merged": true, "mergeCommit": {"oid": "7bd6e78dae67d550aef2bd1fa39314e86ad56f34"}, "closed": true, "closedAt": "2020-10-02T12:29:20Z", "author": {"login": "benwtrent"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOAOkIgH2gAyNDk1NjY2NzE2OmJhZjA0YjcyMTc2MDE4ZjgxMmEyZWMzYTJlMzdmMTcwNTMyYTZjNTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOkHcIgFqTUwMTA1MDY0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "baf04b72176018f812a2ec3a2e37f170532a6c58", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/baf04b72176018f812a2ec3a2e37f170532a6c58", "committedDate": "2020-09-30T17:28:05Z", "message": "[ML] adding for_export flag for APIs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd78a818c3b30ef8e6ea1aebbb5af524ee67f5a3", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/fd78a818c3b30ef8e6ea1aebbb5af524ee67f5a3", "committedDate": "2020-09-30T18:11:35Z", "message": "fixing test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDE1ODI0", "url": "https://github.com/elastic/elasticsearch/pull/63092#pullrequestreview-500015824", "createdAt": "2020-10-01T05:23:05Z", "commit": {"oid": "fd78a818c3b30ef8e6ea1aebbb5af524ee67f5a3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNToyMzowNVrOHa65kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNTozNzozMFrOHa7Iug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5MDAzNA==", "bodyText": "BTW, is there any reason for ALLOW_NO_MATCH to be ParseField rather than String?", "url": "https://github.com/elastic/elasticsearch/pull/63092#discussion_r497990034", "createdAt": "2020-10-01T05:23:05Z", "author": {"login": "przemekwitek"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/ml/GetDataFrameAnalyticsRequest.java", "diffHunk": "@@ -33,10 +33,12 @@\n public class GetDataFrameAnalyticsRequest implements Validatable {\n \n     public static final ParseField ALLOW_NO_MATCH = new ParseField(\"allow_no_match\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd78a818c3b30ef8e6ea1aebbb5af524ee67f5a3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5MjMyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else { // Don't include random defaults or unnecessary defauls in export\n          \n          \n            \n                    } else { // Don't include random defaults or unnecessary defaults in export", "url": "https://github.com/elastic/elasticsearch/pull/63092#discussion_r497992322", "createdAt": "2020-10-01T05:31:46Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java", "diffHunk": "@@ -451,17 +453,47 @@ public void writeTo(StreamOutput out) throws IOException {\n     @Override\n     public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n         builder.startObject();\n-        builder.field(ID.getPreferredName(), id);\n-        builder.field(Job.ID.getPreferredName(), jobId);\n-        if (params.paramAsBoolean(ToXContentParams.FOR_INTERNAL_STORAGE, false)) {\n-            builder.field(CONFIG_TYPE.getPreferredName(), TYPE);\n+        if (params.paramAsBoolean(FOR_EXPORT, false) == false) {\n+            builder.field(ID.getPreferredName(), id);\n+            // We don't include the job_id in export as we assume the PUT will be referring to a new job as well\n+            builder.field(Job.ID.getPreferredName(), jobId);\n+            if (params.paramAsBoolean(ToXContentParams.FOR_INTERNAL_STORAGE, false)) {\n+                builder.field(CONFIG_TYPE.getPreferredName(), TYPE);\n+            }\n+            if (headers.isEmpty() == false && params.paramAsBoolean(ToXContentParams.FOR_INTERNAL_STORAGE, false)) {\n+                builder.field(HEADERS.getPreferredName(), headers);\n+            }\n+            builder.field(QUERY_DELAY.getPreferredName(), queryDelay.getStringRep());\n+            builder.field(QUERY.getPreferredName(), queryProvider.getQuery());\n+            if (chunkingConfig != null) {\n+                builder.field(CHUNKING_CONFIG.getPreferredName(), chunkingConfig);\n+            }\n+            builder.startObject(INDICES_OPTIONS.getPreferredName());\n+            indicesOptions.toXContent(builder, params);\n+            builder.endObject();\n+        } else { // Don't include random defaults or unnecessary defauls in export", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd78a818c3b30ef8e6ea1aebbb5af524ee67f5a3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5MzkxNA==", "bodyText": "So this else block is not for making the retrieved config \"puttable\" but it does something more (clears defaults).\nI'm wondering what happens when we ever change the code for generating the default. Then the config is indexed with default D1, then in the subsequent version we change the default to be D2 and then we retrieve the config for export and the default is not cleared (as it was the default in the past but no longer is). Is that a good behavior?", "url": "https://github.com/elastic/elasticsearch/pull/63092#discussion_r497993914", "createdAt": "2020-10-01T05:37:30Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java", "diffHunk": "@@ -451,17 +453,47 @@ public void writeTo(StreamOutput out) throws IOException {\n     @Override\n     public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n         builder.startObject();\n-        builder.field(ID.getPreferredName(), id);\n-        builder.field(Job.ID.getPreferredName(), jobId);\n-        if (params.paramAsBoolean(ToXContentParams.FOR_INTERNAL_STORAGE, false)) {\n-            builder.field(CONFIG_TYPE.getPreferredName(), TYPE);\n+        if (params.paramAsBoolean(FOR_EXPORT, false) == false) {\n+            builder.field(ID.getPreferredName(), id);\n+            // We don't include the job_id in export as we assume the PUT will be referring to a new job as well\n+            builder.field(Job.ID.getPreferredName(), jobId);\n+            if (params.paramAsBoolean(ToXContentParams.FOR_INTERNAL_STORAGE, false)) {\n+                builder.field(CONFIG_TYPE.getPreferredName(), TYPE);\n+            }\n+            if (headers.isEmpty() == false && params.paramAsBoolean(ToXContentParams.FOR_INTERNAL_STORAGE, false)) {\n+                builder.field(HEADERS.getPreferredName(), headers);\n+            }\n+            builder.field(QUERY_DELAY.getPreferredName(), queryDelay.getStringRep());\n+            builder.field(QUERY.getPreferredName(), queryProvider.getQuery());\n+            if (chunkingConfig != null) {\n+                builder.field(CHUNKING_CONFIG.getPreferredName(), chunkingConfig);\n+            }\n+            builder.startObject(INDICES_OPTIONS.getPreferredName());\n+            indicesOptions.toXContent(builder, params);\n+            builder.endObject();\n+        } else { // Don't include random defaults or unnecessary defauls in export", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd78a818c3b30ef8e6ea1aebbb5af524ee67f5a3"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDU4NDky", "url": "https://github.com/elastic/elasticsearch/pull/63092#pullrequestreview-500058492", "createdAt": "2020-10-01T07:03:27Z", "commit": {"oid": "fd78a818c3b30ef8e6ea1aebbb5af524ee67f5a3"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNzowMzoyN1rOHa9BOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNzozMTowMFrOHa934Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAyNDc2Mg==", "bodyText": "It seems your editor auto-formatted the asciidoc files you touched. I've had it happen to me too when opening the asciidoc files in intelliJ, so I know edit them with other editors. I think it's worth reverting those unchanged lines to protect git history.", "url": "https://github.com/elastic/elasticsearch/pull/63092#discussion_r498024762", "createdAt": "2020-10-01T07:03:27Z", "author": {"login": "dimitris-athanasiou"}, "path": "docs/reference/ml/anomaly-detection/apis/get-datafeed.asciidoc", "diffHunk": "@@ -19,7 +19,7 @@ Retrieves configuration information for {dfeeds}.\n \n `GET _ml/datafeeds/` +\n \n-`GET _ml/datafeeds/_all` ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd78a818c3b30ef8e6ea1aebbb5af524ee67f5a3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzNDY0MA==", "bodyText": "We should have a single method that calculates the default query delay between this one and Builder.setDefaultQueryDelay", "url": "https://github.com/elastic/elasticsearch/pull/63092#discussion_r498034640", "createdAt": "2020-10-01T07:23:20Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java", "diffHunk": "@@ -473,26 +505,36 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n             builder.endObject();\n         }\n         builder.field(SCROLL_SIZE.getPreferredName(), scrollSize);\n-        if (chunkingConfig != null) {\n-            builder.field(CHUNKING_CONFIG.getPreferredName(), chunkingConfig);\n-        }\n-        if (headers.isEmpty() == false && params.paramAsBoolean(ToXContentParams.FOR_INTERNAL_STORAGE, false)) {\n-            builder.field(HEADERS.getPreferredName(), headers);\n-        }\n         if (delayedDataCheckConfig != null) {\n             builder.field(DELAYED_DATA_CHECK_CONFIG.getPreferredName(), delayedDataCheckConfig);\n         }\n         if (maxEmptySearches != null) {\n             builder.field(MAX_EMPTY_SEARCHES.getPreferredName(), maxEmptySearches);\n         }\n-        builder.startObject(INDICES_OPTIONS.getPreferredName());\n-        indicesOptions.toXContent(builder, params);\n-        builder.endObject();\n-\n         builder.endObject();\n         return builder;\n     }\n \n+    private TimeValue defaultRandomQueryDelay() {\n+        Random random = new Random(jobId.hashCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd78a818c3b30ef8e6ea1aebbb5af524ee67f5a3"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzNjg3Nw==", "bodyText": "Is there a benefit to not always return the query? The query is integral to the behaviour of the datafeed. Even in the improbable scenario where we change the default query in a future release, it'd be a weird surprise to get a datafeed for_export from a previous version cluster and put it in a newer version to find out different docs are picked because the default query changed.", "url": "https://github.com/elastic/elasticsearch/pull/63092#discussion_r498036877", "createdAt": "2020-10-01T07:27:31Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java", "diffHunk": "@@ -451,17 +453,47 @@ public void writeTo(StreamOutput out) throws IOException {\n     @Override\n     public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n         builder.startObject();\n-        builder.field(ID.getPreferredName(), id);\n-        builder.field(Job.ID.getPreferredName(), jobId);\n-        if (params.paramAsBoolean(ToXContentParams.FOR_INTERNAL_STORAGE, false)) {\n-            builder.field(CONFIG_TYPE.getPreferredName(), TYPE);\n+        if (params.paramAsBoolean(FOR_EXPORT, false) == false) {\n+            builder.field(ID.getPreferredName(), id);\n+            // We don't include the job_id in export as we assume the PUT will be referring to a new job as well\n+            builder.field(Job.ID.getPreferredName(), jobId);\n+            if (params.paramAsBoolean(ToXContentParams.FOR_INTERNAL_STORAGE, false)) {\n+                builder.field(CONFIG_TYPE.getPreferredName(), TYPE);\n+            }\n+            if (headers.isEmpty() == false && params.paramAsBoolean(ToXContentParams.FOR_INTERNAL_STORAGE, false)) {\n+                builder.field(HEADERS.getPreferredName(), headers);\n+            }\n+            builder.field(QUERY_DELAY.getPreferredName(), queryDelay.getStringRep());\n+            builder.field(QUERY.getPreferredName(), queryProvider.getQuery());\n+            if (chunkingConfig != null) {\n+                builder.field(CHUNKING_CONFIG.getPreferredName(), chunkingConfig);\n+            }\n+            builder.startObject(INDICES_OPTIONS.getPreferredName());\n+            indicesOptions.toXContent(builder, params);\n+            builder.endObject();\n+        } else { // Don't include random defaults or unnecessary defauls in export\n+            if (queryDelay.equals(defaultRandomQueryDelay()) == false) {\n+                builder.field(QUERY_DELAY.getPreferredName(), queryDelay.getStringRep());\n+            }\n+            // This is always \"match_all\"\n+            if (queryProvider.equals(QueryProvider.defaultQuery()) == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd78a818c3b30ef8e6ea1aebbb5af524ee67f5a3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzODc1Mw==", "bodyText": "Same here, let's avoid duplication on the default calculation. We can reuse this in the Builder.setDefaultChunkingConfig.", "url": "https://github.com/elastic/elasticsearch/pull/63092#discussion_r498038753", "createdAt": "2020-10-01T07:31:00Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java", "diffHunk": "@@ -473,26 +505,36 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n             builder.endObject();\n         }\n         builder.field(SCROLL_SIZE.getPreferredName(), scrollSize);\n-        if (chunkingConfig != null) {\n-            builder.field(CHUNKING_CONFIG.getPreferredName(), chunkingConfig);\n-        }\n-        if (headers.isEmpty() == false && params.paramAsBoolean(ToXContentParams.FOR_INTERNAL_STORAGE, false)) {\n-            builder.field(HEADERS.getPreferredName(), headers);\n-        }\n         if (delayedDataCheckConfig != null) {\n             builder.field(DELAYED_DATA_CHECK_CONFIG.getPreferredName(), delayedDataCheckConfig);\n         }\n         if (maxEmptySearches != null) {\n             builder.field(MAX_EMPTY_SEARCHES.getPreferredName(), maxEmptySearches);\n         }\n-        builder.startObject(INDICES_OPTIONS.getPreferredName());\n-        indicesOptions.toXContent(builder, params);\n-        builder.endObject();\n-\n         builder.endObject();\n         return builder;\n     }\n \n+    private TimeValue defaultRandomQueryDelay() {\n+        Random random = new Random(jobId.hashCode());\n+        long delayMillis = random.longs(Builder.MIN_DEFAULT_QUERY_DELAY.millis(), Builder.MAX_DEFAULT_QUERY_DELAY.millis())\n+            .findFirst().getAsLong();\n+        return TimeValue.timeValueMillis(delayMillis);\n+    }\n+\n+    private ChunkingConfig defaultChunkingConfig() {\n+        if (aggProvider == null || aggProvider.getParsedAggs() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd78a818c3b30ef8e6ea1aebbb5af524ee67f5a3"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa4ed0bcf916fb3598b6e24aab33bb14f2f488a9", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/fa4ed0bcf916fb3598b6e24aab33bb14f2f488a9", "committedDate": "2020-10-01T12:32:36Z", "message": "addressing pr comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90d7c0ac5ae9536cc5aa33f3025683886d72d5b5", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/90d7c0ac5ae9536cc5aa33f3025683886d72d5b5", "committedDate": "2020-10-01T12:50:48Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/ml-add-for-export-flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03edfd4fec42419d1c495cba55e3bce7d29e9cc9", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/03edfd4fec42419d1c495cba55e3bce7d29e9cc9", "committedDate": "2020-10-01T12:59:49Z", "message": "fixing style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDI2NDU5", "url": "https://github.com/elastic/elasticsearch/pull/63092#pullrequestreview-500426459", "createdAt": "2020-10-01T14:46:54Z", "commit": {"oid": "03edfd4fec42419d1c495cba55e3bce7d29e9cc9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a639213f77b08f2eda92b6c3fed8b101f509940", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/2a639213f77b08f2eda92b6c3fed8b101f509940", "committedDate": "2020-10-02T11:14:34Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/ml-add-for-export-flag"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMDUwNjQz", "url": "https://github.com/elastic/elasticsearch/pull/63092#pullrequestreview-501050643", "createdAt": "2020-10-02T11:16:54Z", "commit": {"oid": "2a639213f77b08f2eda92b6c3fed8b101f509940"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4579, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}