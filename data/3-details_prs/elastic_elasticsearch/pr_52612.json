{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDU3NDg4", "number": 52612, "title": "Simplify constant handling in Painless", "bodyText": "This change makes constant handling simpler by doing the following:\n\nRemoves the ir tree node RegexNode entirely in favor or using more generic nodes such as ConstantNode and MemberFieldLoadNode generated by the user tree node ERegex. This requires a clinit method added to the ClassNode, but allows for additional removals. This clinit method can also be used for potential optimization passes.\nRemoves the Constant class as with the changes to regex nodes it's no longer necessary.\nRemoves the Globals class from the ir tree write phase. With the previous removals, Globals is no longer necessary.", "createdAt": "2020-02-21T01:19:25Z", "url": "https://github.com/elastic/elasticsearch/pull/52612", "merged": true, "mergeCommit": {"oid": "37e339101ecbf8af6834e9618386373729d2a74c"}, "closed": true, "closedAt": "2020-02-25T15:13:15Z", "author": {"login": "jdconrad"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGS52BAH2gAyMzc4MDU3NDg4Ojg3NTgzZjNhNmY4MDA4OTk0NDk4ZjYxOTI3ZmQ4MGI5YWMwM2FmOGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHoQaggFqTM2MzgyNTAzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "87583f3a6f8008994498f61927fd80b9ac03af8f", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/87583f3a6f8008994498f61927fd80b9ac03af8f", "committedDate": "2020-02-20T22:31:06Z", "message": "partially update regex nodes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e4a2cc436f700cdeae67d5687847fd525ec5c0e", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/2e4a2cc436f700cdeae67d5687847fd525ec5c0e", "committedDate": "2020-02-20T22:39:17Z", "message": "remove need for regex node"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37c275946688e023516714ed0f0b860bd169ae5b", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/37c275946688e023516714ed0f0b860bd169ae5b", "committedDate": "2020-02-20T23:31:54Z", "message": "remove globals"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNTk0ODg1", "url": "https://github.com/elastic/elasticsearch/pull/52612#pullrequestreview-363594885", "createdAt": "2020-02-24T18:12:38Z", "commit": {"oid": "37c275946688e023516714ed0f0b860bd169ae5b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxODoxMjozOFrOFtqo2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxODoxMjozOFrOFtqo2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQyODgyNg==", "bodyText": "Why is this necessary?", "url": "https://github.com/elastic/elasticsearch/pull/52612#discussion_r383428826", "createdAt": "2020-02-24T18:12:38Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SExpression.java", "diffHunk": "@@ -72,6 +72,7 @@ StatementExpressionNode write(ClassNode classNode) {\n \n         statementExpressionNode.setLocation(location);\n         statementExpressionNode.setMethodEscape(methodEscape);\n+        statementExpressionNode.setNoop(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37c275946688e023516714ed0f0b860bd169ae5b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjA4Nzkz", "url": "https://github.com/elastic/elasticsearch/pull/52612#pullrequestreview-363608793", "createdAt": "2020-02-24T18:35:26Z", "commit": {"oid": "37c275946688e023516714ed0f0b860bd169ae5b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxODozNToyNlrOFtrU3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxODozNToyNlrOFtrU3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ0MDA5NQ==", "bodyText": "There's now MemberFieldLoadNode and MemberFieldStoreNode where Store has the following new code:\n        if (isStatic == false) {\n            methodWriter.loadThis();\n        }\n\n        getChildNode().write(classWriter, methodWriter, scopeTable);\nWhy the new code?", "url": "https://github.com/elastic/elasticsearch/pull/52612#discussion_r383440095", "createdAt": "2020-02-24T18:35:26Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/MemberFieldLoadNode.java", "diffHunk": "@@ -51,12 +50,8 @@ public boolean isStatic() {\n \n     /* ---- end node data ---- */\n \n-    public MemberFieldNode() {\n-        // do nothing\n-    }\n-\n     @Override\n-    public void write(ClassWriter classWriter, MethodWriter methodWriter, Globals globals, ScopeTable scopeTable) {\n+    public void write(ClassWriter classWriter, MethodWriter methodWriter, ScopeTable scopeTable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37c275946688e023516714ed0f0b860bd169ae5b"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjEzMzIx", "url": "https://github.com/elastic/elasticsearch/pull/52612#pullrequestreview-363613321", "createdAt": "2020-02-24T18:42:44Z", "commit": {"oid": "37c275946688e023516714ed0f0b860bd169ae5b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxODo0Mjo0NFrOFtrjeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxODo0Mjo0NFrOFtrjeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ0MzgzMw==", "bodyText": "Where is this being written to clinit?", "url": "https://github.com/elastic/elasticsearch/pull/52612#discussion_r383443833", "createdAt": "2020-02-24T18:42:44Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/ERegex.java", "diffHunk": "@@ -74,30 +81,90 @@ void analyze(ScriptRoot scriptRoot, Scope scope) {\n                     new IllegalArgumentException(\"Error compiling regex: \" + e.getDescription()));\n         }\n \n-        String name = scriptRoot.getNextSyntheticName(\"regex\");\n-        scriptRoot.getClassNode().addField(\n-                new SField(location, Modifier.FINAL | Modifier.STATIC | Modifier.PRIVATE, name, Pattern.class));\n-        constant = new Constant(location, MethodWriter.getType(Pattern.class), name, this::initializeConstant);\n+        name = scriptRoot.getNextSyntheticName(\"regex\");\n         actual = Pattern.class;\n     }\n \n     @Override\n-    RegexNode write(ClassNode classNode) {\n-        RegexNode regexNode = new RegexNode();\n-        regexNode.setLocation(location);\n+    MemberFieldLoadNode write(ClassNode classNode) {\n+        FieldNode fieldNode = new FieldNode();\n+        fieldNode.setLocation(location);\n+        fieldNode.setModifiers(Modifier.FINAL | Modifier.STATIC | Modifier.PRIVATE);\n+        fieldNode.setFieldType(Pattern.class);\n+        fieldNode.setName(name);\n \n-        regexNode.setExpressionType(actual);\n-        regexNode.setFlags(flags);\n-        regexNode.setPattern(pattern);\n-        regexNode.setConstant(constant);\n+        classNode.addFieldNode(fieldNode);\n \n-        return regexNode;\n-    }\n+        try {\n+            StatementExpressionNode statementExpressionNode = new StatementExpressionNode();\n+            statementExpressionNode.setLocation(location);\n+            statementExpressionNode.setMethodEscape(true);\n+            statementExpressionNode.setNoop(true);\n+\n+            BlockNode blockNode = classNode.getClinitNode().getBlockNode();\n+            blockNode.addStatementNode(statementExpressionNode);\n+\n+            MemberFieldStoreNode memberFieldStoreNode = new MemberFieldStoreNode();\n+            memberFieldStoreNode.setLocation(location);\n+            memberFieldStoreNode.setExpressionType(Pattern.class);\n+            memberFieldStoreNode.setName(name);\n+            memberFieldStoreNode.setStatic(true);\n+\n+            statementExpressionNode.setExpressionNode(memberFieldStoreNode);\n+\n+            CallNode callNode = new CallNode();\n+            callNode.setLocation(location);\n+            callNode.setExpressionType(Pattern.class);\n+\n+            memberFieldStoreNode.setChildNode(callNode);\n+\n+            StaticNode staticNode = new StaticNode();\n+            staticNode.setLocation(location);\n+            staticNode.setExpressionType(Pattern.class);\n+\n+            callNode.setLeftNode(staticNode);\n+\n+            CallSubNode callSubNode = new CallSubNode();\n+            callSubNode.setLocation(location);\n+            callSubNode.setExpressionType(Pattern.class);\n+            callSubNode.setBox(Pattern.class);\n+            callSubNode.setMethod(new PainlessMethod(\n+                    Pattern.class.getMethod(\"compile\", String.class, int.class),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37c275946688e023516714ed0f0b860bd169ae5b"}, "originalPosition": 102}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be77e74c38c8a13e8918bb537154ce7c2f6d965d", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/be77e74c38c8a13e8918bb537154ce7c2f6d965d", "committedDate": "2020-02-24T21:18:05Z", "message": "Merge branch 'master' into trees9"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "313b09ad7e94b76627ceb500fc51b1d603b4454b", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/313b09ad7e94b76627ceb500fc51b1d603b4454b", "committedDate": "2020-02-24T21:58:34Z", "message": "remove noop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNTg2NzAw", "url": "https://github.com/elastic/elasticsearch/pull/52612#pullrequestreview-363586700", "createdAt": "2020-02-24T17:59:02Z", "commit": {"oid": "37c275946688e023516714ed0f0b860bd169ae5b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzo1OTowMlrOFtqPEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjo0NzozNVrOFtyrFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQyMjIyNA==", "bodyText": "minimal javadoc please", "url": "https://github.com/elastic/elasticsearch/pull/52612#discussion_r383422224", "createdAt": "2020-02-24T17:59:02Z", "author": {"login": "rjernst"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/MemberFieldStoreNode.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.painless.ir;\n+\n+import org.elasticsearch.painless.ClassWriter;\n+import org.elasticsearch.painless.MethodWriter;\n+import org.elasticsearch.painless.symbol.ScopeTable;\n+\n+import static org.elasticsearch.painless.WriterConstants.CLASS_TYPE;\n+\n+public class MemberFieldStoreNode extends UnaryNode {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37c275946688e023516714ed0f0b860bd169ae5b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU2MDQ3MA==", "bodyText": "Could we add this when creating the clinit block, and have an inner block that we expose as the one that statements can be added to? This way we don't manipulate the IR tree when calling write.", "url": "https://github.com/elastic/elasticsearch/pull/52612#discussion_r383560470", "createdAt": "2020-02-24T22:47:35Z", "author": {"login": "rjernst"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/ClassNode.java", "diffHunk": "@@ -152,34 +169,25 @@ public ScriptRoot getScriptRoot() {\n         constructor.returnValue();\n         constructor.endMethod();\n \n+        if (clinitNode.getBlockNode().getStatementsNodes().isEmpty() == false) {\n+            ReturnNode returnNode = new ReturnNode();\n+            returnNode.setLocation(new Location(\"internal$clinit$return\", 0));\n+            clinitNode.getBlockNode().addStatementNode(returnNode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313b09ad7e94b76627ceb500fc51b1d603b4454b"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dde7fcece03b49bd0ba8f68f23c82b07c328511", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/5dde7fcece03b49bd0ba8f68f23c82b07c328511", "committedDate": "2020-02-24T23:32:17Z", "message": "Removed the doPop boolean in favor of using the expression's type."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40a176c90c15a07bcc99c6b3240fad8be006a97d", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/40a176c90c15a07bcc99c6b3240fad8be006a97d", "committedDate": "2020-02-25T00:09:36Z", "message": "fix not a statement with void return type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd306a75dc64cbfd28bb3c53624264c244d1743d", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/cd306a75dc64cbfd28bb3c53624264c244d1743d", "committedDate": "2020-02-25T00:46:09Z", "message": "remove modication of ir tree in write related to clinit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzODExMzU0", "url": "https://github.com/elastic/elasticsearch/pull/52612#pullrequestreview-363811354", "createdAt": "2020-02-25T01:12:11Z", "commit": {"oid": "cd306a75dc64cbfd28bb3c53624264c244d1743d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzODI1MDM3", "url": "https://github.com/elastic/elasticsearch/pull/52612#pullrequestreview-363825037", "createdAt": "2020-02-25T01:57:41Z", "commit": {"oid": "cd306a75dc64cbfd28bb3c53624264c244d1743d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2253, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}