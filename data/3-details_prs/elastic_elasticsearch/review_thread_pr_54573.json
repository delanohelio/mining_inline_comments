{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2OTMyMjQ0", "number": 54573, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxMTozOVrODtgORw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxMjozM1rODtgPTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQwNDU1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/BaseSearchableSnapshotIndexInput.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxMTozOVrOF-9sEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwOTo1ODoyMlrOF_j-3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NjczOA==", "bodyText": "Thanks, I was able to reproduce and came with a similar fix.\nFor better readability I'd suggest to isolate single part case (and be paranoid about the length to read) from the multiple parts case, something like:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    endInPart - startInPart\n          \n          \n            \n                    if (fileInfo.numberOfParts() == 1L) {\n          \n          \n            \n                        return blobContainer.readBlob(fileInfo.partName(0L), position, Math.min(length, fileInfo.partBytes(0) - position));\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    final long startPart = getPartNumberForPosition(position);\n          \n          \n            \n                    final long endPart = getPartNumberForPosition(position + length);\n          \n          \n            \n            \n          \n          \n            \n                    return new SlicedInputStream(endPart - startPart + 1L) {\n          \n          \n            \n                        @Override\n          \n          \n            \n                        protected InputStream openSlice(long slice) throws IOException {\n          \n          \n            \n                            final long currentPart = startPart + slice;\n          \n          \n            \n                            final long startInPart = (currentPart == startPart) ? getRelativePositionInPart(position) : 0L;\n          \n          \n            \n                            final long endInPart\n          \n          \n            \n                                = (currentPart == endPart) ? getRelativePositionInPart(position + length) : getLengthOfPart(currentPart);\n          \n          \n            \n                            return blobContainer.readBlob(fileInfo.partName(currentPart), startInPart, endInPart - startInPart\n          \n          \n            \n                            );\n          \n          \n            \n                        }\n          \n          \n            \n                    };", "url": "https://github.com/elastic/elasticsearch/pull/54573#discussion_r401566738", "createdAt": "2020-04-01T12:11:39Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/BaseSearchableSnapshotIndexInput.java", "diffHunk": "@@ -54,10 +54,13 @@ protected InputStream openInputStream(final long position, final long length) th\n                 @Override\n                 protected InputStream openSlice(long slice) throws IOException {\n                     final long currentPart = startPart + slice;\n+                    final long startInPart = (currentPart == startPart) ? getRelativePositionInPart(position) : 0L;\n+                    final long endInPart\n+                        = (currentPart == endPart) ? getRelativePositionInPart(position + length) : getLengthOfPart(currentPart);\n                     return blobContainer.readBlob(\n                         fileInfo.partName(currentPart),\n-                        (currentPart == startPart) ? getRelativePositionInPart(position) : 0L,\n-                        (currentPart == endPart) ? getRelativePositionInPart(length) : getLengthOfPart(currentPart)\n+                        startInPart,\n+                        endInPart - startInPart", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cfd80e7319396104c4fba610d15c2be0d8d444e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE5NDE0Mg==", "bodyText": "Sure, sounds good, see 558e68a.", "url": "https://github.com/elastic/elasticsearch/pull/54573#discussion_r402194142", "createdAt": "2020-04-02T09:58:22Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/BaseSearchableSnapshotIndexInput.java", "diffHunk": "@@ -54,10 +54,13 @@ protected InputStream openInputStream(final long position, final long length) th\n                 @Override\n                 protected InputStream openSlice(long slice) throws IOException {\n                     final long currentPart = startPart + slice;\n+                    final long startInPart = (currentPart == startPart) ? getRelativePositionInPart(position) : 0L;\n+                    final long endInPart\n+                        = (currentPart == endPart) ? getRelativePositionInPart(position + length) : getLengthOfPart(currentPart);\n                     return blobContainer.readBlob(\n                         fileInfo.partName(currentPart),\n-                        (currentPart == startPart) ? getRelativePositionInPart(position) : 0L,\n-                        (currentPart == endPart) ? getRelativePositionInPart(length) : getLengthOfPart(currentPart)\n+                        startInPart,\n+                        endInPart - startInPart", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NjczOA=="}, "originalCommit": {"oid": "2cfd80e7319396104c4fba610d15c2be0d8d444e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQwNzE3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/index/store/cache/TestUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxMjozM1rOF-9ttg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxMjozM1rOF-9ttg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NzE1OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/54573#discussion_r401567158", "createdAt": "2020-04-01T12:12:33Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/index/store/cache/TestUtils.java", "diffHunk": "@@ -70,70 +70,100 @@ public static void assertCounter(IndexInputStats.Counter counter, long total, lo\n      * Any attempt to read a different blob will throw a {@link FileNotFoundException}\n      */\n     static BlobContainer singleBlobContainer(final String blobName, final byte[] blobContent) {\n-        return new BlobContainer() {\n-\n+        return new MostlyUnimplementedFakeBlobContainer() {\n             @Override\n             public InputStream readBlob(String name, long position, long length) throws IOException {\n                 if (blobName.equals(name) == false) {\n                     throw new FileNotFoundException(\"Blob not found: \" + name);\n                 }\n-                return Streams.limitStream(new ByteArrayInputStream(blobContent, Math.toIntExact(position), blobContent.length), length);\n+                assert position + length <= blobContent.length", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cfd80e7319396104c4fba610d15c2be0d8d444e"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3935, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}