{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NDg5MzMw", "number": 51269, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwODo1NToyNVrODZwOqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzozNjo0MlrODbONEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzMxMTc4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/http/AbstractHttpServerTransport.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwODo1NToyNVrOFgUddA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMDoxNDozMFrOFhLRXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzMzk3Mg==", "bodyText": "This is failing forbidden APIs checks, see the logs:\nForbidden method invocation: java.net.InetAddress#getHostAddress() [use NetworkAddress format/formatAddress to print IP or IP+ports]\n  in org.elasticsearch.transport.TcpTransport (TcpTransport.java:381)\nForbidden method invocation: java.net.InetAddress#getHostAddress() [use NetworkAddress format/formatAddress to print IP or IP+ports]\n  in org.elasticsearch.http.AbstractHttpServerTransport (AbstractHttpServerTransport.java:178)\nScanned 5715 class file(s) for forbidden API invocations (in 5.20s), 2 error(s).", "url": "https://github.com/elastic/elasticsearch/pull/51269#discussion_r369433972", "createdAt": "2020-01-22T08:55:25Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/http/AbstractHttpServerTransport.java", "diffHunk": "@@ -174,7 +174,10 @@ private TransportAddress bindAddress(final InetAddress hostAddress) {\n             return true;\n         });\n         if (!success) {\n-            throw new BindHttpException(\"Failed to bind to [\" + port.getPortRangeString() + \"]\", lastException.get());\n+            throw new BindHttpException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07a0b5bef8f470c3a97085d4dba88c4f19626b07"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4NjQ0MA==", "bodyText": "Hi @original-brownbear, thanks for reviewing this. I ran the tests but forgot to run the check task. Will fix this ASAP.", "url": "https://github.com/elastic/elasticsearch/pull/51269#discussion_r369486440", "createdAt": "2020-01-22T10:42:09Z", "author": {"login": "mariaral"}, "path": "server/src/main/java/org/elasticsearch/http/AbstractHttpServerTransport.java", "diffHunk": "@@ -174,7 +174,10 @@ private TransportAddress bindAddress(final InetAddress hostAddress) {\n             return true;\n         });\n         if (!success) {\n-            throw new BindHttpException(\"Failed to bind to [\" + port.getPortRangeString() + \"]\", lastException.get());\n+            throw new BindHttpException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzMzk3Mg=="}, "originalCommit": {"oid": "07a0b5bef8f470c3a97085d4dba88c4f19626b07"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4NzUyOA==", "bodyText": "@mariaral FYI, you can just run these simple static code checks via:\n./gradlew precommit \n\nno need to run a full check for those", "url": "https://github.com/elastic/elasticsearch/pull/51269#discussion_r369487528", "createdAt": "2020-01-22T10:44:37Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/http/AbstractHttpServerTransport.java", "diffHunk": "@@ -174,7 +174,10 @@ private TransportAddress bindAddress(final InetAddress hostAddress) {\n             return true;\n         });\n         if (!success) {\n-            throw new BindHttpException(\"Failed to bind to [\" + port.getPortRangeString() + \"]\", lastException.get());\n+            throw new BindHttpException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzMzk3Mg=="}, "originalCommit": {"oid": "07a0b5bef8f470c3a97085d4dba88c4f19626b07"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg1MjI0Mw==", "bodyText": "Thanks @original-brownbear for the tip. I didn't know of the precommit task.\nI'm thinking of extending NetworkAddress.format() to be able to handle PortsRange objects and use that instead of coping the same message in five places. I propose using the following format:\n    IPv4 no port: 127.0.0.1\n    IPv4 single port: 127.0.0.1:9300\n    IPv4 multiple ports: 127.0.0.1:[9300-9400]\n    IPv6 multiple ports: [::1]:[9300-9400]\n\nWhat do you think?", "url": "https://github.com/elastic/elasticsearch/pull/51269#discussion_r369852243", "createdAt": "2020-01-22T22:59:39Z", "author": {"login": "mariaral"}, "path": "server/src/main/java/org/elasticsearch/http/AbstractHttpServerTransport.java", "diffHunk": "@@ -174,7 +174,10 @@ private TransportAddress bindAddress(final InetAddress hostAddress) {\n             return true;\n         });\n         if (!success) {\n-            throw new BindHttpException(\"Failed to bind to [\" + port.getPortRangeString() + \"]\", lastException.get());\n+            throw new BindHttpException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzMzk3Mg=="}, "originalCommit": {"oid": "07a0b5bef8f470c3a97085d4dba88c4f19626b07"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxNjY4OA==", "bodyText": "I only count two spots where we print the PortsRange but fine by me to keep it consistent via a utility method :)", "url": "https://github.com/elastic/elasticsearch/pull/51269#discussion_r370016688", "createdAt": "2020-01-23T09:43:47Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/http/AbstractHttpServerTransport.java", "diffHunk": "@@ -174,7 +174,10 @@ private TransportAddress bindAddress(final InetAddress hostAddress) {\n             return true;\n         });\n         if (!success) {\n-            throw new BindHttpException(\"Failed to bind to [\" + port.getPortRangeString() + \"]\", lastException.get());\n+            throw new BindHttpException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzMzk3Mg=="}, "originalCommit": {"oid": "07a0b5bef8f470c3a97085d4dba88c4f19626b07"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMzMTk5OQ==", "bodyText": "I pushed a new commit. Please take a look.", "url": "https://github.com/elastic/elasticsearch/pull/51269#discussion_r370331999", "createdAt": "2020-01-23T20:14:30Z", "author": {"login": "mariaral"}, "path": "server/src/main/java/org/elasticsearch/http/AbstractHttpServerTransport.java", "diffHunk": "@@ -174,7 +174,10 @@ private TransportAddress bindAddress(final InetAddress hostAddress) {\n             return true;\n         });\n         if (!success) {\n-            throw new BindHttpException(\"Failed to bind to [\" + port.getPortRangeString() + \"]\", lastException.get());\n+            throw new BindHttpException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzMzk3Mg=="}, "originalCommit": {"oid": "07a0b5bef8f470c3a97085d4dba88c4f19626b07"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODcwODY1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/network/NetworkAddress.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzozNjo0MlrOFilLDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMzozNDo1MFrOFi4UdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwNDk0Mw==", "bodyText": "Please would you add a test case to NetworkAddressTests for this new behaviour?", "url": "https://github.com/elastic/elasticsearch/pull/51269#discussion_r371804943", "createdAt": "2020-01-28T13:36:42Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/common/network/NetworkAddress.java", "diffHunk": "@@ -88,21 +90,64 @@ public static String format(InetSocketAddress address) {\n         return format(address.getAddress(), address.getPort());\n     }\n \n-    // note, we don't validate port, because we only allow InetSocketAddress\n-    static String format(InetAddress address, int port) {\n+    /**\n+     * Formats a network address and port for display purposes.\n+     * <p>\n+     * This formats the address with {@link #format(InetAddress)}\n+     * and appends the port number. IPv6 addresses will be bracketed.\n+     * Any host information, if present is ignored.\n+     * <p>\n+     * Example output:\n+     * <ul>\n+     *   <li>IPv4: {@code 127.0.0.1:9300}</li>\n+     *   <li>IPv6: {@code [::1]:9300}</li>\n+     * </ul>\n+     * @param address IPv4 or IPv6 address\n+     * @param port port\n+     * @return formatted string\n+     */\n+    public static String format(InetAddress address, int port) {\n+        return format(address, new PortsRange(String.valueOf(port)));\n+    }\n+\n+    /**\n+     * Formats a network address and port range for display purposes.\n+     * <p>\n+     * This formats the address with {@link #format(InetAddress)}\n+     * and appends the port range in brackets. In case there is only one\n+     * port, the result is the same with {@link #format(InetAddress, int)}.\n+     * <p>\n+     * Example output:\n+     * <ul>\n+     *   <li>IPv4 no port: {@code 127.0.0.1}</li>\n+     *   <li>IPv4 single port: {@code 127.0.0.1:9300}</li>\n+     *   <li>IPv4 multiple ports: {@code 127.0.0.1:[9300-9400]}</li>\n+     *   <li>IPv6 multiple ports: {@code [::1]:[9300-9400]}</li>\n+     * </ul>\n+     * @param address IPv4 or IPv6 address\n+     * @param portsRange range of ports\n+     * @return formatted string\n+     */\n+    public static String format(InetAddress address, PortsRange portsRange) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52705b587c220f6643932ccedcc1f1ab7b3eee3b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjExODY0NQ==", "bodyText": "Ok, I pushed another commit with the relative tests.", "url": "https://github.com/elastic/elasticsearch/pull/51269#discussion_r372118645", "createdAt": "2020-01-28T23:34:50Z", "author": {"login": "mariaral"}, "path": "server/src/main/java/org/elasticsearch/common/network/NetworkAddress.java", "diffHunk": "@@ -88,21 +90,64 @@ public static String format(InetSocketAddress address) {\n         return format(address.getAddress(), address.getPort());\n     }\n \n-    // note, we don't validate port, because we only allow InetSocketAddress\n-    static String format(InetAddress address, int port) {\n+    /**\n+     * Formats a network address and port for display purposes.\n+     * <p>\n+     * This formats the address with {@link #format(InetAddress)}\n+     * and appends the port number. IPv6 addresses will be bracketed.\n+     * Any host information, if present is ignored.\n+     * <p>\n+     * Example output:\n+     * <ul>\n+     *   <li>IPv4: {@code 127.0.0.1:9300}</li>\n+     *   <li>IPv6: {@code [::1]:9300}</li>\n+     * </ul>\n+     * @param address IPv4 or IPv6 address\n+     * @param port port\n+     * @return formatted string\n+     */\n+    public static String format(InetAddress address, int port) {\n+        return format(address, new PortsRange(String.valueOf(port)));\n+    }\n+\n+    /**\n+     * Formats a network address and port range for display purposes.\n+     * <p>\n+     * This formats the address with {@link #format(InetAddress)}\n+     * and appends the port range in brackets. In case there is only one\n+     * port, the result is the same with {@link #format(InetAddress, int)}.\n+     * <p>\n+     * Example output:\n+     * <ul>\n+     *   <li>IPv4 no port: {@code 127.0.0.1}</li>\n+     *   <li>IPv4 single port: {@code 127.0.0.1:9300}</li>\n+     *   <li>IPv4 multiple ports: {@code 127.0.0.1:[9300-9400]}</li>\n+     *   <li>IPv6 multiple ports: {@code [::1]:[9300-9400]}</li>\n+     * </ul>\n+     * @param address IPv4 or IPv6 address\n+     * @param portsRange range of ports\n+     * @return formatted string\n+     */\n+    public static String format(InetAddress address, PortsRange portsRange) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwNDk0Mw=="}, "originalCommit": {"oid": "52705b587c220f6643932ccedcc1f1ab7b3eee3b"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4411, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}