{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNDg0MjEy", "number": 56026, "title": "Fix spurious failures in AsyncSearchIntegTestCase", "bodyText": "Async search integration tests are subject to random failures when:\n\nThe test index has more than one replica.\nThe request cache is used.\nSome shards are empty.\nThe maintenance service starts a garbage collection when node is closing.\n\nThey are also slow because the test index is created/populated on each\ntest method.\nThis change refactors these integration tests in order to:\n\nCreate the index once for the entire test suite.\nFix the usage of the request cache and replicas.\nEnsures that all shards have at least one document.\nIncrease the delay of the maintenance service garbage collection.\n\nCloses #55895\nCloses #55988", "createdAt": "2020-04-30T13:20:25Z", "url": "https://github.com/elastic/elasticsearch/pull/56026", "merged": true, "mergeCommit": {"oid": "cb70ce7468bd6e24b05d427148d84d5da10dbbea"}, "closed": true, "closedAt": "2020-05-11T12:55:05Z", "author": {"login": "jimczi"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccs7JFgH2gAyNDExNDg0MjEyOmExZTM2MGNjMTc1ZTY3YzMwYWNjMWNjZmFjMGMzNzY3NWIxZmMxYTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfB4rkgH2gAyNDExNDg0MjEyOmQ2MWI4ZGQ4NDExYTllZWQ2NzMxNmRjODJhNWM2YjQ2ZGVjODE1ZWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a1e360cc175e67c30acc1ccfac0c37675b1fc1a8", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/a1e360cc175e67c30acc1ccfac0c37675b1fc1a8", "committedDate": "2020-04-30T13:16:23Z", "message": "Fix spurious failures in AsyncSearchIntegTestCase\n\nAsync search integration tests are subject to random failures when:\n  * The test index has more than one replica.\n  * The request cache is used.\n  * Some shards are empty.\n  * The maintenance service starts a garbage collection when node is closing.\n\nThey are also slow because the test index is created/populated on each\ntest method.\n\nThis change refactors these integration tests in order to:\n  * Create the index once for the entire test suite.\n  * Fix the usage of the request cache and replicas.\n  * Ensures that all shards have at least one document.\n  * Increase the delay of the maintenance service garbage collection.\n\nCloses #55895\nCloses #55988"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDU0OTA0", "url": "https://github.com/elastic/elasticsearch/pull/56026#pullrequestreview-406454904", "createdAt": "2020-05-06T09:43:54Z", "commit": {"oid": "a1e360cc175e67c30acc1ccfac0c37675b1fc1a8"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTo0Mzo1NFrOGRLcfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTo1NjoyN1rOGRL2oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2NjQ5Mg==", "bodyText": "this could be final", "url": "https://github.com/elastic/elasticsearch/pull/56026#discussion_r420666492", "createdAt": "2020-05-06T09:43:54Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/test/java/org/elasticsearch/xpack/search/BlockingQueryBuilder.java", "diffHunk": "@@ -115,4 +119,51 @@ protected int doHashCode() {\n     public String getWriteableName() {\n         return NAME;\n     }\n+\n+    static class QueryLatch implements Closeable {\n+        private volatile CountDownLatch countDownLatch;\n+        private Set<Integer> failedShards = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1e360cc175e67c30acc1ccfac0c37675b1fc1a8"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY3MDMxNQ==", "bodyText": "I would try to document what this class does and how to use it. I will try with my words but correct me if I am wrong: BlockingQueryBuilder blocks on each shard, until the next set of results is requested through reacquireBlock. Also failures are sent back based on the provided number of failures.\nI would also consider renaming tryBlock and reacquireBlock to reflect what they are used for.", "url": "https://github.com/elastic/elasticsearch/pull/56026#discussion_r420670315", "createdAt": "2020-05-06T09:51:02Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/test/java/org/elasticsearch/xpack/search/BlockingQueryBuilder.java", "diffHunk": "@@ -115,4 +119,51 @@ protected int doHashCode() {\n     public String getWriteableName() {\n         return NAME;\n     }\n+\n+    static class QueryLatch implements Closeable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1e360cc175e67c30acc1ccfac0c37675b1fc1a8"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY3MDc5NA==", "bodyText": "can you add a small comment to explain that we have the scenario where the same shard id appears multiple times due to replicas and we want to count that as one failure?", "url": "https://github.com/elastic/elasticsearch/pull/56026#discussion_r420670794", "createdAt": "2020-05-06T09:51:51Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/test/java/org/elasticsearch/xpack/search/BlockingQueryBuilder.java", "diffHunk": "@@ -115,4 +119,51 @@ protected int doHashCode() {\n     public String getWriteableName() {\n         return NAME;\n     }\n+\n+    static class QueryLatch implements Closeable {\n+        private volatile CountDownLatch countDownLatch;\n+        private Set<Integer> failedShards = new HashSet<>();\n+        private int numShardFailures;\n+\n+        QueryLatch(int numShardFailures) {\n+            this.countDownLatch = new CountDownLatch(1);\n+            this.numShardFailures = numShardFailures;\n+        }\n+\n+        private void tryBlock(int shardId) throws IOException, InterruptedException {\n+            CountDownLatch last = countDownLatch;\n+            if (last != null) {\n+                last.await();\n+            }\n+            synchronized (this) {\n+                if (failedShards.contains(shardId)) {\n+                    throw new IOException(\"boom\");\n+                } else if (numShardFailures > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1e360cc175e67c30acc1ccfac0c37675b1fc1a8"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY3MTc3MQ==", "bodyText": "also could this block be replaced with the following?\nif (failedShards.add(shardId)) {\n    numShardFailures--;\n}\nthrow new IOException(\"boom\");\n\nand the set could be some concurrent impl so that we can remove the synchronized block?", "url": "https://github.com/elastic/elasticsearch/pull/56026#discussion_r420671771", "createdAt": "2020-05-06T09:53:41Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/test/java/org/elasticsearch/xpack/search/BlockingQueryBuilder.java", "diffHunk": "@@ -115,4 +119,51 @@ protected int doHashCode() {\n     public String getWriteableName() {\n         return NAME;\n     }\n+\n+    static class QueryLatch implements Closeable {\n+        private volatile CountDownLatch countDownLatch;\n+        private Set<Integer> failedShards = new HashSet<>();\n+        private int numShardFailures;\n+\n+        QueryLatch(int numShardFailures) {\n+            this.countDownLatch = new CountDownLatch(1);\n+            this.numShardFailures = numShardFailures;\n+        }\n+\n+        private void tryBlock(int shardId) throws IOException, InterruptedException {\n+            CountDownLatch last = countDownLatch;\n+            if (last != null) {\n+                last.await();\n+            }\n+            synchronized (this) {\n+                if (failedShards.contains(shardId)) {\n+                    throw new IOException(\"boom\");\n+                } else if (numShardFailures > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY3MDc5NA=="}, "originalCommit": {"oid": "a1e360cc175e67c30acc1ccfac0c37675b1fc1a8"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY3MzE4NQ==", "bodyText": "could you add a quick comment explaining what this iterator allows to do?", "url": "https://github.com/elastic/elasticsearch/pull/56026#discussion_r420673185", "createdAt": "2020-05-06T09:56:27Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/test/java/org/elasticsearch/xpack/search/AsyncSearchIntegTestCase.java", "diffHunk": "@@ -148,40 +169,25 @@ protected void ensureTaskCompletion(String id) throws Exception {\n     }\n \n     protected SearchResponseIterator assertBlockingIterator(String indexName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1e360cc175e67c30acc1ccfac0c37675b1fc1a8"}, "originalPosition": 106}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bb55e4f7756dd06b863ce0713c03275872fbd06", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/6bb55e4f7756dd06b863ce0713c03275872fbd06", "committedDate": "2020-05-06T10:22:31Z", "message": "Merge branch 'master' into async_search_action_it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0304ec6b3b521e2ebe47c40a9c064797203bc021", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/0304ec6b3b521e2ebe47c40a9c064797203bc021", "committedDate": "2020-05-06T10:44:09Z", "message": "address review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d61b8dd8411a9eed67316dc82a5c6b46dec815ed", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/d61b8dd8411a9eed67316dc82a5c6b46dec815ed", "committedDate": "2020-05-07T18:49:33Z", "message": "Merge branch 'master' into async_search_action_it"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 161, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}