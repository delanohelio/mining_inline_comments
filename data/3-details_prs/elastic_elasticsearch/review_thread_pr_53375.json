{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDE0MTAz", "number": 53375, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOTo0MjowMFrODnAFFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOTo0MzowNlrODnAGjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjIyMzU5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/search/action/AsyncSearchResponse.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOTo0MjowMFrOF0vfug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDowMToyM1rOF04MTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0ODQ0Mg==", "bodyText": "do we ever clone it providing true as isRunning argument?", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390848442", "createdAt": "2020-03-11T09:42:00Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/search/action/AsyncSearchResponse.java", "diffHunk": "@@ -99,7 +99,7 @@ public void writeTo(StreamOutput out) throws IOException {\n         out.writeLong(expirationTimeMillis);\n     }\n \n-    public AsyncSearchResponse clone(String id) {\n+    public AsyncSearchResponse clone(String id, boolean isRunning) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2f8278100849d992753bfead768948612655bb1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkxMDEwMw==", "bodyText": "no we don't, I'll remove the isRunning and always set it to false on cloning if it's what you meant ?", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390910103", "createdAt": "2020-03-11T11:35:15Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/search/action/AsyncSearchResponse.java", "diffHunk": "@@ -99,7 +99,7 @@ public void writeTo(StreamOutput out) throws IOException {\n         out.writeLong(expirationTimeMillis);\n     }\n \n-    public AsyncSearchResponse clone(String id) {\n+    public AsyncSearchResponse clone(String id, boolean isRunning) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0ODQ0Mg=="}, "originalCommit": {"oid": "a2f8278100849d992753bfead768948612655bb1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5MDkyNA==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390990924", "createdAt": "2020-03-11T14:01:23Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/search/action/AsyncSearchResponse.java", "diffHunk": "@@ -99,7 +99,7 @@ public void writeTo(StreamOutput out) throws IOException {\n         out.writeLong(expirationTimeMillis);\n     }\n \n-    public AsyncSearchResponse clone(String id) {\n+    public AsyncSearchResponse clone(String id, boolean isRunning) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0ODQ0Mg=="}, "originalCommit": {"oid": "a2f8278100849d992753bfead768948612655bb1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjIyNzM0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/TransportSubmitAsyncSearchAction.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOTo0MzowNlrOF0viFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDowMjowMFrOF04OIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0OTA0NA==", "bodyText": "can you elaborate on this TODO? does it revolve around resiliency?", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390849044", "createdAt": "2020-03-11T09:43:06Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/TransportSubmitAsyncSearchAction.java", "diffHunk": "@@ -83,7 +83,10 @@ public void onResponse(AsyncSearchResponse searchResponse) {\n                                 onFatalFailure(searchTask, cause, false, submitListener);\n                             } else {\n                                 final String docId = searchTask.getSearchId().getDocId();\n-                                store.storeInitialResponse(docId, searchTask.getOriginHeaders(), searchResponse,\n+                                // creates the fallback response if the node crashes/restarts in the middle of the request\n+                                // TODO: store intermediate results ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2f8278100849d992753bfead768948612655bb1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkwOTU0MQ==", "bodyText": "It does, yes that's one of the follow up question we have in the meta issue.", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390909541", "createdAt": "2020-03-11T11:33:59Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/TransportSubmitAsyncSearchAction.java", "diffHunk": "@@ -83,7 +83,10 @@ public void onResponse(AsyncSearchResponse searchResponse) {\n                                 onFatalFailure(searchTask, cause, false, submitListener);\n                             } else {\n                                 final String docId = searchTask.getSearchId().getDocId();\n-                                store.storeInitialResponse(docId, searchTask.getOriginHeaders(), searchResponse,\n+                                // creates the fallback response if the node crashes/restarts in the middle of the request\n+                                // TODO: store intermediate results ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0OTA0NA=="}, "originalCommit": {"oid": "a2f8278100849d992753bfead768948612655bb1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5MTM5Mg==", "bodyText": "I thought so, I wonder if we need the TODO in the code then, cause we are tracking this anyways elsewhere.", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390991392", "createdAt": "2020-03-11T14:02:00Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/TransportSubmitAsyncSearchAction.java", "diffHunk": "@@ -83,7 +83,10 @@ public void onResponse(AsyncSearchResponse searchResponse) {\n                                 onFatalFailure(searchTask, cause, false, submitListener);\n                             } else {\n                                 final String docId = searchTask.getSearchId().getDocId();\n-                                store.storeInitialResponse(docId, searchTask.getOriginHeaders(), searchResponse,\n+                                // creates the fallback response if the node crashes/restarts in the middle of the request\n+                                // TODO: store intermediate results ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0OTA0NA=="}, "originalCommit": {"oid": "a2f8278100849d992753bfead768948612655bb1"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3281, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}