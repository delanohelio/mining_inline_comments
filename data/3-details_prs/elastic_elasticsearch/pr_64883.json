{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NjQ0NjA5", "number": 64883, "title": "ILM: Add support for the searchable_snapshot action in the hot phase", "bodyText": "This adds support for the searchable_snapshot ILM action in the hot phase.\nWe define a series of actions that cannot be executed after the index has been\nmounted as a searchable snapshot. Namely: freeze, forcemerge, shrink,\nand searchable_snapshot (also available in the cold phase).\nIf by virtue of snapshot/restoring a managed index or updating an ILM policy while it\nis executing for an index, these actions could get to be executed on an index that was\nmounted as searchable snapshot in the hot phase. If this happens the actions will\nskip entirely. ILM will not move into the ERROR step.\nResolves #64656", "createdAt": "2020-11-10T17:21:07Z", "url": "https://github.com/elastic/elasticsearch/pull/64883", "merged": true, "mergeCommit": {"oid": "7d453556043d73ed62025de7dee6e96872e9fae9"}, "closed": true, "closedAt": "2020-11-12T10:44:05Z", "author": {"login": "andreidan"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbGiyUgH2gAyNTE4NjQ0NjA5OjdiNjgxNjZkMDA0ZjM3MzkwZjQxNWU0NjY5ZTcyOTcxMzNmOTk2YWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbvQi4AH2gAyNTE4NjQ0NjA5OjU2YWY1MDdlNDI3YTlkZDNhOWJiMGJjNzJkODU5MzBjMTc0ZmNkMjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7b68166d004f37390f415e4669e7297133f996ac", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/7b68166d004f37390f415e4669e7297133f996ac", "committedDate": "2020-11-10T10:10:37Z", "message": "Enable the searchable_snapshot action in the hot phase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e92f001e7df3ddb1732059d436faaf054d21f67", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/0e92f001e7df3ddb1732059d436faaf054d21f67", "committedDate": "2020-11-10T17:03:04Z", "message": "Add IT for restoring index mounted as searchable snapshot"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NDM0NjIw", "url": "https://github.com/elastic/elasticsearch/pull/64883#pullrequestreview-527434620", "createdAt": "2020-11-10T17:22:57Z", "commit": {"oid": "0e92f001e7df3ddb1732059d436faaf054d21f67"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzoyMjo1OFrOHwnRtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzoyMjo1OFrOHwnRtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczNzIwNg==", "bodyText": "@dakrone do you think we should aim to prevent this case when updating the policy?", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520737206", "createdAt": "2020-11-10T17:22:58Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/javaRestTest/java/org/elasticsearch/xpack/ilm/actions/SearchableSnapshotActionIT.java", "diffHunk": "@@ -188,4 +196,149 @@ public void testDeleteActionDeletesSearchableSnapshot() throws Exception {\n         }, 30, TimeUnit.SECONDS));\n     }\n \n+    public void testCreateInvalidPolicy() throws Exception {\n+        String snapshotRepo = randomAlphaOfLengthBetween(4, 10);\n+        createSnapshotRepo(client(), snapshotRepo, randomBoolean());\n+        IllegalArgumentException exception = expectThrows(IllegalArgumentException.class, () -> createPolicy(client(), policy,\n+            new Phase(\"hot\", TimeValue.ZERO, Map.of(SearchableSnapshotAction.NAME, new SearchableSnapshotAction(snapshotRepo))),\n+            new Phase(\"warm\", TimeValue.ZERO, Map.of(ForceMergeAction.NAME, new ForceMergeAction(1, null))),\n+            new Phase(\"cold\", TimeValue.ZERO, Map.of(FreezeAction.NAME, new FreezeAction())),\n+            null\n+            )\n+        );\n+\n+        assertThat(exception.getMessage(), is(\"phases [warm,cold] define one or more of [shrink,forcemerge,freeze] actions which are not \" +\n+            \"allowed after the managed index was mounted as searchable snapshot\"));\n+    }\n+\n+    public void testUpdatePolicyToAddPhasesYieldsInvalidActionsToBeSkipped() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e92f001e7df3ddb1732059d436faaf054d21f67"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NDM4MTQy", "url": "https://github.com/elastic/elasticsearch/pull/64883#pullrequestreview-527438142", "createdAt": "2020-11-10T17:26:51Z", "commit": {"oid": "0e92f001e7df3ddb1732059d436faaf054d21f67"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzoyNjo1MlrOHwncvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzoyNjo1MlrOHwncvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0MDAzMA==", "bodyText": "@dakrone there are several setting we configure for a searchable snapshot. I wonder if we should be more strict here and check the index name is configured for this setting? I chose not to as that's an invariant that should be guaranteed by the searchable-snapshots module. Is there a better setting to use here?\nWhat do you think?", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520740030", "createdAt": "2020-11-10T17:26:52Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/ForceMergeAction.java", "diffHunk": "@@ -131,6 +133,8 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         StepKey forceMergeKey = new StepKey(phase, NAME, ForceMergeStep.NAME);\n         StepKey countKey = new StepKey(phase, NAME, SegmentCountStep.NAME);\n \n+        BranchingStep conditionalSkipShrinkStep = new BranchingStep(preForceMergeBranchingKey, checkNotWriteIndex, nextStepKey,\n+            (index, clusterState) -> clusterState.getMetadata().index(index).getSettings().get(\"index.store.snapshot.index_name\") != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e92f001e7df3ddb1732059d436faaf054d21f67"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b278e052e5364d90f679310656a0f92f6d65d70d", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/b278e052e5364d90f679310656a0f92f6d65d70d", "committedDate": "2020-11-10T17:48:33Z", "message": "Add logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97ec99fe2733c8fbd36433c2e161a72f2716e883", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/97ec99fe2733c8fbd36433c2e161a72f2716e883", "committedDate": "2020-11-10T17:54:07Z", "message": "Fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3Njc0MTAw", "url": "https://github.com/elastic/elasticsearch/pull/64883#pullrequestreview-527674100", "createdAt": "2020-11-10T22:55:26Z", "commit": {"oid": "97ec99fe2733c8fbd36433c2e161a72f2716e883"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjo1NToyNlrOHwy1gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzoxMTowN1rOHwzONA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyNjU5Mw==", "bodyText": "Can you add the policy id to the log message, so something like\n[forcemerge] action is configured for index [myindex] in policy [manage-things] which is mounted ...", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520926593", "createdAt": "2020-11-10T22:55:26Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/ForceMergeAction.java", "diffHunk": "@@ -131,6 +137,15 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         StepKey forceMergeKey = new StepKey(phase, NAME, ForceMergeStep.NAME);\n         StepKey countKey = new StepKey(phase, NAME, SegmentCountStep.NAME);\n \n+        BranchingStep conditionalSkipShrinkStep = new BranchingStep(preForceMergeBranchingKey, checkNotWriteIndex, nextStepKey,\n+            (index, clusterState) -> {\n+                if (clusterState.getMetadata().index(index).getSettings().get(\"index.store.snapshot.index_name\") != null) {\n+                    logger.warn(\"[{}] action is configured for index [{}] which is mounted as searchable snapshot. Skipping this action\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ec99fe2733c8fbd36433c2e161a72f2716e883"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyNjk0NA==", "bodyText": "same comment here about the policy id", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520926944", "createdAt": "2020-11-10T22:56:16Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/FreezeAction.java", "diffHunk": "@@ -59,13 +64,23 @@ public boolean isSafeAction() {\n \n     @Override\n     public List<Step> toSteps(Client client, String phase, StepKey nextStepKey) {\n+        StepKey preFreezeMergeBranchingKey = new StepKey(phase, NAME, CONDITIONAL_SKIP_FREEZE_STEP);\n         StepKey checkNotWriteIndex = new StepKey(phase, NAME, CheckNotDataStreamWriteIndexStep.NAME);\n         StepKey freezeStepKey = new StepKey(phase, NAME, FreezeStep.NAME);\n \n+        BranchingStep conditionalSkipFreezeStep = new BranchingStep(preFreezeMergeBranchingKey, checkNotWriteIndex, nextStepKey,\n+            (index, clusterState) -> {\n+                if (clusterState.getMetadata().index(index).getSettings().get(\"index.store.snapshot.index_name\") != null) {\n+                    logger.warn(\"[{}] action is configured for index [{}] which is mounted as searchable snapshot. Skipping this action\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ec99fe2733c8fbd36433c2e161a72f2716e883"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyNzcxNA==", "bodyText": "since we're here, can we check for the presence of the index.frozen (FrozenEngine.INDEX_FROZEN) setting and skip the freeze step if the index is already frozen?", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520927714", "createdAt": "2020-11-10T22:58:08Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/FreezeAction.java", "diffHunk": "@@ -59,13 +64,23 @@ public boolean isSafeAction() {\n \n     @Override\n     public List<Step> toSteps(Client client, String phase, StepKey nextStepKey) {\n+        StepKey preFreezeMergeBranchingKey = new StepKey(phase, NAME, CONDITIONAL_SKIP_FREEZE_STEP);\n         StepKey checkNotWriteIndex = new StepKey(phase, NAME, CheckNotDataStreamWriteIndexStep.NAME);\n         StepKey freezeStepKey = new StepKey(phase, NAME, FreezeStep.NAME);\n \n+        BranchingStep conditionalSkipFreezeStep = new BranchingStep(preFreezeMergeBranchingKey, checkNotWriteIndex, nextStepKey,\n+            (index, clusterState) -> {\n+                if (clusterState.getMetadata().index(index).getSettings().get(\"index.store.snapshot.index_name\") != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ec99fe2733c8fbd36433c2e161a72f2716e883"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyODQ2Mg==", "bodyText": "since we re-use this setting name a few times, can we extract it somewhere into a variable in case we need to change it in the future? perhaps somewhere in LifecycleSettings?", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520928462", "createdAt": "2020-11-10T22:59:52Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/ForceMergeAction.java", "diffHunk": "@@ -131,6 +137,15 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         StepKey forceMergeKey = new StepKey(phase, NAME, ForceMergeStep.NAME);\n         StepKey countKey = new StepKey(phase, NAME, SegmentCountStep.NAME);\n \n+        BranchingStep conditionalSkipShrinkStep = new BranchingStep(preForceMergeBranchingKey, checkNotWriteIndex, nextStepKey,\n+            (index, clusterState) -> {\n+                if (clusterState.getMetadata().index(index).getSettings().get(\"index.store.snapshot.index_name\") != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ec99fe2733c8fbd36433c2e161a72f2716e883"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyOTkxOQ==", "bodyText": "Collections already toString with commands, so this can be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalArgumentException(\"phases [\" + phasesDefiningIllegalActions + \"] define one or more of [\" +\n          \n          \n            \n                                String.join(\",\", ACTIONS_CANNOT_FOLLOW_SEARCHABLE_SNAPSHOT) + \"] actions which are not allowed after the \" +\n          \n          \n            \n                                \"managed index was mounted as searchable snapshot\");\n          \n          \n            \n                            throw new IllegalArgumentException(\"phases [\" + phasesDefiningIllegalActions + \"] define one or more of \" +\n          \n          \n            \n                                ACTIONS_CANNOT_FOLLOW_SEARCHABLE_SNAPSHOT + \" actions which are not allowed after a \" +\n          \n          \n            \n                                \"managed index is mounted as a searchable snapshot\");", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520929919", "createdAt": "2020-11-10T23:03:29Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/TimeseriesLifecycleType.java", "diffHunk": "@@ -255,6 +259,29 @@ public void validate(Collection<Phase> phases) {\n                 MigrateAction.NAME + \" action and an \" + AllocateAction.NAME + \" action with allocation rules. specify only a single \" +\n                 \"data migration in each phase\");\n         }\n+\n+        validateActionsFollowingSearchableSnapshot(phases);\n+    }\n+\n+    static void validateActionsFollowingSearchableSnapshot(Collection<Phase> phases) {\n+        boolean hotPhaseContainsSearchableSnapshot = phases.stream()\n+            .filter(phase -> HOT_PHASE.equals(phase.getName()))\n+            .anyMatch(phase -> phase.getActions().containsKey(SearchableSnapshotAction.NAME));\n+        if (hotPhaseContainsSearchableSnapshot) {\n+            String phasesDefiningIllegalActions = phases.stream()\n+                // we're looking for prohibited actions in phases other than hot\n+                .filter(phase -> HOT_PHASE.equals(phase.getName()) == false)\n+                // filter the phases that define illegal actions\n+                .filter(phase ->\n+                    Collections.disjoint(ACTIONS_CANNOT_FOLLOW_SEARCHABLE_SNAPSHOT, phase.getActions().keySet()) == false)\n+                .map(Phase::getName)\n+                .collect(Collectors.joining(\",\"));\n+            if (Strings.hasText(phasesDefiningIllegalActions)) {\n+                throw new IllegalArgumentException(\"phases [\" + phasesDefiningIllegalActions + \"] define one or more of [\" +\n+                    String.join(\",\", ACTIONS_CANNOT_FOLLOW_SEARCHABLE_SNAPSHOT) + \"] actions which are not allowed after the \" +\n+                    \"managed index was mounted as searchable snapshot\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ec99fe2733c8fbd36433c2e161a72f2716e883"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzMTQyNg==", "bodyText": "I don't think we need to actually create the repository here, since the test doesn't take a snapshot?", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520931426", "createdAt": "2020-11-10T23:07:14Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/javaRestTest/java/org/elasticsearch/xpack/ilm/actions/SearchableSnapshotActionIT.java", "diffHunk": "@@ -188,4 +196,149 @@ public void testDeleteActionDeletesSearchableSnapshot() throws Exception {\n         }, 30, TimeUnit.SECONDS));\n     }\n \n+    public void testCreateInvalidPolicy() throws Exception {\n+        String snapshotRepo = randomAlphaOfLengthBetween(4, 10);\n+        createSnapshotRepo(client(), snapshotRepo, randomBoolean());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ec99fe2733c8fbd36433c2e161a72f2716e883"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzMjQwMw==", "bodyText": "We need to add SearchableSnapshotAction.NAME to this list, because we should always ensure that a rollover action is used in the hot phase if searchable snapshots are specified", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520932403", "createdAt": "2020-11-10T23:09:46Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/TimeseriesLifecycleType.java", "diffHunk": "@@ -58,6 +59,9 @@\n \n     static final Set<String> HOT_ACTIONS_THAT_REQUIRE_ROLLOVER = Sets.newHashSet(ReadOnlyAction.NAME, ShrinkAction.NAME,\n         ForceMergeAction.NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ec99fe2733c8fbd36433c2e161a72f2716e883"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzMjkxNg==", "bodyText": "No I don't think so, I think we should allow a user to remove searchable snapshots from the policy as well as adding other actions (post searchable snapshot for instance) that should run just fine.", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520932916", "createdAt": "2020-11-10T23:11:07Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/javaRestTest/java/org/elasticsearch/xpack/ilm/actions/SearchableSnapshotActionIT.java", "diffHunk": "@@ -188,4 +196,149 @@ public void testDeleteActionDeletesSearchableSnapshot() throws Exception {\n         }, 30, TimeUnit.SECONDS));\n     }\n \n+    public void testCreateInvalidPolicy() throws Exception {\n+        String snapshotRepo = randomAlphaOfLengthBetween(4, 10);\n+        createSnapshotRepo(client(), snapshotRepo, randomBoolean());\n+        IllegalArgumentException exception = expectThrows(IllegalArgumentException.class, () -> createPolicy(client(), policy,\n+            new Phase(\"hot\", TimeValue.ZERO, Map.of(SearchableSnapshotAction.NAME, new SearchableSnapshotAction(snapshotRepo))),\n+            new Phase(\"warm\", TimeValue.ZERO, Map.of(ForceMergeAction.NAME, new ForceMergeAction(1, null))),\n+            new Phase(\"cold\", TimeValue.ZERO, Map.of(FreezeAction.NAME, new FreezeAction())),\n+            null\n+            )\n+        );\n+\n+        assertThat(exception.getMessage(), is(\"phases [warm,cold] define one or more of [shrink,forcemerge,freeze] actions which are not \" +\n+            \"allowed after the managed index was mounted as searchable snapshot\"));\n+    }\n+\n+    public void testUpdatePolicyToAddPhasesYieldsInvalidActionsToBeSkipped() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczNzIwNg=="}, "originalCommit": {"oid": "0e92f001e7df3ddb1732059d436faaf054d21f67"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bd01c59388950bdbc524377a699526bf79ea540", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/2bd01c59388950bdbc524377a699526bf79ea540", "committedDate": "2020-11-11T11:58:57Z", "message": "Update error message\n\nCo-authored-by: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b663f72112cecef22d90b6eb3f54d7e1891af00a", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/b663f72112cecef22d90b6eb3f54d7e1891af00a", "committedDate": "2020-11-11T16:27:52Z", "message": "Make ensure `searchable_snapshot` action cannot follow itself and cleanups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82c9e661749e5c4989efc8b70d6bda4bebc125a6", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/82c9e661749e5c4989efc8b70d6bda4bebc125a6", "committedDate": "2020-11-11T16:30:51Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7936ee018f0080d76cc1e72649831cecd952746", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/b7936ee018f0080d76cc1e72649831cecd952746", "committedDate": "2020-11-11T16:33:30Z", "message": "Merge branch 'master' into searchable-snapshot-hot-phase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3feb501be85e64b5aa3a97910dd8cc74bb0ee8dd", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/3feb501be85e64b5aa3a97910dd8cc74bb0ee8dd", "committedDate": "2020-11-11T16:42:58Z", "message": "Fix ForceMergeActionTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e2366de6cf47301b536b72dee3c39fd79bdc087", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/5e2366de6cf47301b536b72dee3c39fd79bdc087", "committedDate": "2020-11-11T16:45:54Z", "message": "Fix ForceMergeActionTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "471d329a6a9a9c10eeb11ef8ca295391041e014e", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/471d329a6a9a9c10eeb11ef8ca295391041e014e", "committedDate": "2020-11-11T17:14:49Z", "message": "Fix random lifecycle generation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c3b35e6ccc39f3168b346689374e9617edd6d3b", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/0c3b35e6ccc39f3168b346689374e9617edd6d3b", "committedDate": "2020-11-11T17:58:15Z", "message": "Fix phases validation when generating test policies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b914cfe3abeeb9ad39ed87f36093b675055f6eac", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/b914cfe3abeeb9ad39ed87f36093b675055f6eac", "committedDate": "2020-11-11T18:02:38Z", "message": "Merge branch 'master' into searchable-snapshot-hot-phase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1128f0766b3d140960c4642962476d4ad527084d", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/1128f0766b3d140960c4642962476d4ad527084d", "committedDate": "2020-11-11T18:25:18Z", "message": "Update doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NDI5MDUz", "url": "https://github.com/elastic/elasticsearch/pull/64883#pullrequestreview-528429053", "createdAt": "2020-11-11T18:25:56Z", "commit": {"oid": "b914cfe3abeeb9ad39ed87f36093b675055f6eac"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxODoyNTo1NlrOHxZNKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxODoyODoxMVrOHxZR4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU1NTI0MA==", "bodyText": "Super minor, but can you add a comment about what this is for (since it's not actually an ILM setting, just one we check)", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r521555240", "createdAt": "2020-11-11T18:25:56Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/LifecycleSettings.java", "diffHunk": "@@ -27,6 +27,8 @@\n     public static final String SLM_RETENTION_DURATION = \"slm.retention_duration\";\n     public static final String SLM_MINIMUM_INTERVAL = \"slm.minimum_interval\";\n \n+    public static final String SNAPSHOT_INDEX_NAME = \"index.store.snapshot.index_name\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b914cfe3abeeb9ad39ed87f36093b675055f6eac"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU1NTkzNQ==", "bodyText": "Can you add a blurb similar to what we have for forcemerge related to requiring the \"rollover\" action:\n\"To use the XYZ action in the hot phase, the rollover action must be present. If no rollover action is configured, ILM will reject the policy.\"", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r521555935", "createdAt": "2020-11-11T18:27:11Z", "author": {"login": "dakrone"}, "path": "docs/reference/ilm/actions/ilm-searchable-snapshot.asciidoc", "diffHunk": "@@ -4,13 +4,17 @@\n \n beta::[]\n \n-Phases allowed: cold.\n+Phases allowed: hot, cold.\n \n Takes a snapshot of the managed index in the configured repository\n and mounts it as a searchable snapshot.\n If the managed index is part of a <<data-streams, data stream>>,\n the mounted index replaces the original index in the data stream.\n \n+IMPORTANT: If the `searchable_snapshot` action is used in the `hot` phase the\n+subsequent phases cannot define any of the `shrink`, `forcemerge`, `freeze` or\n+`searchable_snapshot` (also available in the cold phase) actions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1128f0766b3d140960c4642962476d4ad527084d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU1NjQ0OA==", "bodyText": "Super minor, but this can be static (it looks like it used to be but was dropped when it was moved)", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r521556448", "createdAt": "2020-11-11T18:28:11Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/ShrinkAction.java", "diffHunk": "@@ -29,14 +29,14 @@\n  * A {@link LifecycleAction} which shrinks the index.\n  */\n public class ShrinkAction implements LifecycleAction {\n+    private final Logger logger = LogManager.getLogger(ShrinkAction.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1128f0766b3d140960c4642962476d4ad527084d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1326c352bac916a90b32adfaa41d2111fee7a95", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/a1326c352bac916a90b32adfaa41d2111fee7a95", "committedDate": "2020-11-12T09:29:57Z", "message": "Duplicate sets as we remove actions to generate valid policies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54180d60d635fd2d4b98da9ca38ad9161e67c55c", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/54180d60d635fd2d4b98da9ca38ad9161e67c55c", "committedDate": "2020-11-12T09:32:12Z", "message": "Static loggers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5e43548f491c1ccd83f77846ac6ab9c655096e8", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/a5e43548f491c1ccd83f77846ac6ab9c655096e8", "committedDate": "2020-11-12T09:33:57Z", "message": "Docs: Mention rollover is needed in order to use action in the hot phase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56af507e427a9dd3a9bb0bc72d85930c174fcd23", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/56af507e427a9dd3a9bb0bc72d85930c174fcd23", "committedDate": "2020-11-12T09:36:48Z", "message": "Document setting name"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1170, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}