{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMzc1ODgx", "number": 62058, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzo1MjozM1rOEg8bNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjoyNTowMVrOEhOBDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTc5ODk1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzo1MjozM1rOHOAJXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDoxNDowM1rOHOA7bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NDUxMQ==", "bodyText": "Should this just be a BooleanSupplier? If includeDefaults is false would you ever include it?", "url": "https://github.com/elastic/elasticsearch/pull/62058#discussion_r484444511", "createdAt": "2020-09-07T13:52:33Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java", "diffHunk": "@@ -145,6 +146,7 @@ protected final void doXContentBody(XContentBuilder builder, boolean includeDefa\n         private boolean acceptsNull = false;\n         private Consumer<T> validator = null;\n         private Serializer<T> serializer = XContentBuilder::field;\n+        private Predicate<Boolean> serializerPredicate = id -> true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455dce213b5338679964affaaf3182be97363138"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NTAwNA==", "bodyText": "It feels weird to make it a Predicate because it isn't really a predicate on the boolean, it is a predicate on the state of the field mapper.", "url": "https://github.com/elastic/elasticsearch/pull/62058#discussion_r484445004", "createdAt": "2020-09-07T13:53:22Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java", "diffHunk": "@@ -145,6 +146,7 @@ protected final void doXContentBody(XContentBuilder builder, boolean includeDefa\n         private boolean acceptsNull = false;\n         private Consumer<T> validator = null;\n         private Serializer<T> serializer = XContentBuilder::field;\n+        private Predicate<Boolean> serializerPredicate = id -> true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NDUxMQ=="}, "originalCommit": {"oid": "455dce213b5338679964affaaf3182be97363138"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NzMyNg==", "bodyText": "You're quite right, have updated.", "url": "https://github.com/elastic/elasticsearch/pull/62058#discussion_r484457326", "createdAt": "2020-09-07T14:14:03Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java", "diffHunk": "@@ -145,6 +146,7 @@ protected final void doXContentBody(XContentBuilder builder, boolean includeDefa\n         private boolean acceptsNull = false;\n         private Consumer<T> validator = null;\n         private Serializer<T> serializer = XContentBuilder::field;\n+        private Predicate<Boolean> serializerPredicate = id -> true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NDUxMQ=="}, "originalCommit": {"oid": "455dce213b5338679964affaaf3182be97363138"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjY4MTExOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjoyNTowMVrOHOaahg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjo0MTozN1rOHOa_Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg3NDg4Ng==", "bodyText": "Maybe change the name of this method? shouldSerializeDefault or something?", "url": "https://github.com/elastic/elasticsearch/pull/62058#discussion_r484874886", "createdAt": "2020-09-08T12:25:01Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java", "diffHunk": "@@ -229,6 +231,16 @@ public boolean isConfigured() {\n             return this;\n         }\n \n+        /**\n+         * Set a serialization predicate for this parameter.\n+         *\n+         * The predicate is passed the value of `include_defaults`\n+         */\n+        public Parameter<T> setSerializerPredicate(BooleanSupplier serializerPredicate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12fe03ddf8dc4e3e92b586d9bd8221d8f2d2a77c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg4NDI4Mw==", "bodyText": "++, I've changed it to setShouldSerialize and made the javadoc a bit clearer.", "url": "https://github.com/elastic/elasticsearch/pull/62058#discussion_r484884283", "createdAt": "2020-09-08T12:41:37Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java", "diffHunk": "@@ -229,6 +231,16 @@ public boolean isConfigured() {\n             return this;\n         }\n \n+        /**\n+         * Set a serialization predicate for this parameter.\n+         *\n+         * The predicate is passed the value of `include_defaults`\n+         */\n+        public Parameter<T> setSerializerPredicate(BooleanSupplier serializerPredicate) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg3NDg4Ng=="}, "originalCommit": {"oid": "12fe03ddf8dc4e3e92b586d9bd8221d8f2d2a77c"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1645, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}