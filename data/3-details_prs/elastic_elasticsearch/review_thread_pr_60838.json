{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTQ3Mzg3", "number": 60838, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoyNTo0OVrOEV7GRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzozNzowN1rOEV7V7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDIzODEzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoyNTo0OVrOG89O4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODoxMzoxOVrOG8-3YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3MDk3Nw==", "bodyText": "should it be equals instead, such as queryResult.topDocs().topDocs.getClass().equals(TopFieldDocs.class)) ?", "url": "https://github.com/elastic/elasticsearch/pull/60838#discussion_r466570977", "createdAt": "2020-08-06T17:25:49Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java", "diffHunk": "@@ -93,7 +93,8 @@ protected void onShardResult(SearchPhaseResult result, SearchShardIterator shard\n         if (queryResult.isNull() == false\n                 // disable sort optims for scroll requests because they keep track of the last bottom doc locally (per shard)\n                 && getRequest().scroll() == null\n-                && queryResult.topDocs().topDocs instanceof TopFieldDocs) {\n+                && queryResult.topDocs() != null\n+                && queryResult.topDocs().topDocs.getClass() == TopFieldDocs.class) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0555c3d9a4dec901b57fc5a22b86077ef4598294"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NzcyOQ==", "bodyText": "that's equivalent.  We use == in other places rather than equals so I'd prefer to remain consistent ?", "url": "https://github.com/elastic/elasticsearch/pull/60838#discussion_r466597729", "createdAt": "2020-08-06T18:13:19Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java", "diffHunk": "@@ -93,7 +93,8 @@ protected void onShardResult(SearchPhaseResult result, SearchShardIterator shard\n         if (queryResult.isNull() == false\n                 // disable sort optims for scroll requests because they keep track of the last bottom doc locally (per shard)\n                 && getRequest().scroll() == null\n-                && queryResult.topDocs().topDocs instanceof TopFieldDocs) {\n+                && queryResult.topDocs() != null\n+                && queryResult.topDocs().topDocs.getClass() == TopFieldDocs.class) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3MDk3Nw=="}, "originalCommit": {"oid": "0555c3d9a4dec901b57fc5a22b86077ef4598294"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDI3ODIxOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncActionTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzozNzowN1rOG89oMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODowNjoxOFrOG8-ojw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3NzQ1OQ==", "bodyText": "Are we repeating these 2 lines here?", "url": "https://github.com/elastic/elasticsearch/pull/60838#discussion_r466577459", "createdAt": "2020-08-06T17:37:07Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/test/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncActionTests.java", "diffHunk": "@@ -163,6 +188,8 @@ public void run() {\n         }\n         assertThat(phase.sortedTopDocs.scoreDocs.length, equalTo(1));\n         assertThat(phase.sortedTopDocs.scoreDocs[0], instanceOf(FieldDoc.class));\n+        assertThat(phase.sortedTopDocs.scoreDocs.length, equalTo(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0555c3d9a4dec901b57fc5a22b86077ef4598294"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5MzkzNQ==", "bodyText": "yes this is leftover, thanks", "url": "https://github.com/elastic/elasticsearch/pull/60838#discussion_r466593935", "createdAt": "2020-08-06T18:06:18Z", "author": {"login": "jimczi"}, "path": "server/src/test/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncActionTests.java", "diffHunk": "@@ -163,6 +188,8 @@ public void run() {\n         }\n         assertThat(phase.sortedTopDocs.scoreDocs.length, equalTo(1));\n         assertThat(phase.sortedTopDocs.scoreDocs[0], instanceOf(FieldDoc.class));\n+        assertThat(phase.sortedTopDocs.scoreDocs.length, equalTo(1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3NzQ1OQ=="}, "originalCommit": {"oid": "0555c3d9a4dec901b57fc5a22b86077ef4598294"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2590, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}