{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNTE5NTE4", "number": 56032, "title": "Enable can match for search with reader contexts", "bodyText": "Enabling the can-match phase for search requests with reader contexts", "createdAt": "2020-04-30T13:50:07Z", "url": "https://github.com/elastic/elasticsearch/pull/56032", "merged": true, "mergeCommit": {"oid": "3be26ede688fe8450ee119e0aff3fe3a05185756"}, "closed": true, "closedAt": "2020-05-04T13:07:41Z", "author": {"login": "dnhatn"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcctOgWAH2gAyNDExNTE5NTE4OjViOTYwODUxNTUyY2VhNzA2NzcwYWFiYjdmYWJiZDIzMDJkMTdhYzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcd5TvNAFqTQwNDcyNzM4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5b960851552cea706770aabb7fabbd2302d17ac2", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/5b960851552cea706770aabb7fabbd2302d17ac2", "committedDate": "2020-04-30T13:37:32Z", "message": "Enable can match in search with reader contexts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNTY1MTAy", "url": "https://github.com/elastic/elasticsearch/pull/56032#pullrequestreview-403565102", "createdAt": "2020-04-30T14:17:43Z", "commit": {"oid": "5b960851552cea706770aabb7fabbd2302d17ac2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoxNzo0NFrOGOra2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoxODozMFrOGOrc7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA0NDYzNA==", "bodyText": "Why not using markAsUsed ?", "url": "https://github.com/elastic/elasticsearch/pull/56032#discussion_r418044634", "createdAt": "2020-04-30T14:17:44Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "diffHunk": "@@ -1138,17 +1138,38 @@ public AliasFilter buildAliasFilter(ClusterState state, String index, Set<String\n      */\n     public CanMatchResponse canMatch(ShardSearchRequest request) throws IOException {\n         assert request.searchType() == SearchType.QUERY_THEN_FETCH : \"unexpected search type: \" + request.searchType();\n-        // TODO: support can_match with reader contexts after https://github.com/elastic/elasticsearch/pull/54966\n-        assert request.readerId() == null : \"request with reader_id bypass can_match phase\";\n         IndexService indexService = indicesService.indexServiceSafe(request.shardId().getIndex());\n-        IndexShard indexShard = indexService.getShard(request.shardId().getId());\n-        // we don't want to use the reader wrapper since it could run costly operations\n-        // and we can afford false positives.\n-        final boolean hasRefreshPending = indexShard.hasRefreshPending();\n-        try (Engine.Searcher searcher = indexShard.acquireSearcher(\"can_match\")) {\n+        final boolean hasRefreshPending;\n+        final Engine.Searcher canMatchSearcher;\n+        if (request.readerId() != null) {\n+            final ReaderContext readerContext = findReaderContext(request.readerId());\n+            checkKeepAliveLimit(request.keepAlive().millis());\n+            readerContext.keepAlive(request.keepAlive().millis());\n+            readerContext.incRef();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b960851552cea706770aabb7fabbd2302d17ac2"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA0NTE2Ng==", "bodyText": "Unrelated but I think we can remove this comment now", "url": "https://github.com/elastic/elasticsearch/pull/56032#discussion_r418045166", "createdAt": "2020-04-30T14:18:30Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "diffHunk": "@@ -1138,17 +1138,38 @@ public AliasFilter buildAliasFilter(ClusterState state, String index, Set<String\n      */\n     public CanMatchResponse canMatch(ShardSearchRequest request) throws IOException {\n         assert request.searchType() == SearchType.QUERY_THEN_FETCH : \"unexpected search type: \" + request.searchType();\n-        // TODO: support can_match with reader contexts after https://github.com/elastic/elasticsearch/pull/54966\n-        assert request.readerId() == null : \"request with reader_id bypass can_match phase\";\n         IndexService indexService = indicesService.indexServiceSafe(request.shardId().getIndex());\n-        IndexShard indexShard = indexService.getShard(request.shardId().getId());\n-        // we don't want to use the reader wrapper since it could run costly operations\n-        // and we can afford false positives.\n-        final boolean hasRefreshPending = indexShard.hasRefreshPending();\n-        try (Engine.Searcher searcher = indexShard.acquireSearcher(\"can_match\")) {\n+        final boolean hasRefreshPending;\n+        final Engine.Searcher canMatchSearcher;\n+        if (request.readerId() != null) {\n+            final ReaderContext readerContext = findReaderContext(request.readerId());\n+            checkKeepAliveLimit(request.keepAlive().millis());\n+            readerContext.keepAlive(request.keepAlive().millis());\n+            readerContext.incRef();\n+            boolean success = false;\n+            try {\n+                final Engine.Searcher searcher = readerContext.acquireSearcher(\"can_match\");\n+                canMatchSearcher = new Engine.Searcher(searcher.source(), searcher.getDirectoryReader(),\n+                    searcher.getSimilarity(), searcher.getQueryCache(), searcher.getQueryCachingPolicy(),\n+                    Releasables.wrap(searcher, readerContext::decRef));\n+                success = true;\n+            } finally {\n+                if (success == false) {\n+                    readerContext.decRef();\n+                }\n+            }\n+            hasRefreshPending = false;\n+        } else {\n+            IndexShard indexShard = indexService.getShard(request.shardId().getId());\n+            hasRefreshPending = indexShard.hasRefreshPending();\n+            // we don't want to use the reader wrapper since it could run costly operations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b960851552cea706770aabb7fabbd2302d17ac2"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abb124c3f697dd509db0e9c28377fce8bfb3bca0", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/abb124c3f697dd509db0e9c28377fce8bfb3bca0", "committedDate": "2020-04-30T14:59:35Z", "message": "remove outdated comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "becb85294c3373a23155db372772aa256a414045", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/becb85294c3373a23155db372772aa256a414045", "committedDate": "2020-05-01T02:49:10Z", "message": "markAsUsed acquire refCount"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5827bc8e00ba5efc028dd8f67ab13616ba506f32", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/5827bc8e00ba5efc028dd8f67ab13616ba506f32", "committedDate": "2020-05-01T03:23:14Z", "message": "Merge branch 'feature/reader-context' into can-match-keep-alive"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NzI3Mzgw", "url": "https://github.com/elastic/elasticsearch/pull/56032#pullrequestreview-404727380", "createdAt": "2020-05-04T06:16:02Z", "commit": {"oid": "5827bc8e00ba5efc028dd8f67ab13616ba506f32"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 165, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}