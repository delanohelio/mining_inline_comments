{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNTEwNjg4", "number": 50956, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwODo1MToxM1rODXxT9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwODo1NToxMFrODXxYaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjUxNzY1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/gateway/PersistedClusterStateService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwODo1MToxM1rOFdP3Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwODo1MToxM1rOFdP3Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIxMjkzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                numIndicesUnchanged ++;\n          \n          \n            \n                                numIndicesUnchanged++;", "url": "https://github.com/elastic/elasticsearch/pull/50956#discussion_r366212939", "createdAt": "2020-01-14T08:51:13Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/gateway/PersistedClusterStateService.java", "diffHunk": "@@ -608,18 +660,22 @@ private void updateMetaData(MetaData previouslyWrittenMetaData, MetaData metaDat\n                 assert previousValue == null : indexMetaData.getIndexUUID() + \" already mapped to \" + previousValue;\n             }\n \n+            int numIndicesUpdated = 0;\n+            int numIndicesUnchanged = 0;\n             for (ObjectCursor<IndexMetaData> cursor : metaData.indices().values()) {\n                 final IndexMetaData indexMetaData = cursor.value;\n                 final Long previousVersion = indexMetaDataVersionByUUID.get(indexMetaData.getIndexUUID());\n                 if (previousVersion == null || indexMetaData.getVersion() != previousVersion) {\n                     logger.trace(\"updating metadata for [{}], changing version from [{}] to [{}]\",\n                         indexMetaData.getIndex(), previousVersion, indexMetaData.getVersion());\n+                    numIndicesUpdated++;\n                     try (ReleasableDocument indexMetaDataDocument = makeIndexMetaDataDocument(indexMetaData)) {\n                         for (MetaDataIndexWriter metaDataIndexWriter : metaDataIndexWriters) {\n                             metaDataIndexWriter.updateIndexMetaDataDocument(indexMetaDataDocument.getDocument(), indexMetaData.getIndex());\n                         }\n                     }\n                 } else {\n+                    numIndicesUnchanged ++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88989124e724b1b809d22e054288ca70855bed56"}, "originalPosition": 172}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjUyOTA1OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/gateway/PersistedClusterStateServiceTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwODo1NToxMFrOFdP-Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwODo1NToxMFrOFdP-Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIxNDc0Mg==", "bodyText": "Seems wrong, this isn't an allocation test? I think we only need this for a single call to newNode -- let's do that inline instead (or move newNode somewhere more appropriate).", "url": "https://github.com/elastic/elasticsearch/pull/50956#discussion_r366214742", "createdAt": "2020-01-14T08:55:10Z", "author": {"login": "DaveCTurner"}, "path": "server/src/test/java/org/elasticsearch/gateway/PersistedClusterStateServiceTests.java", "diffHunk": "@@ -55,21 +64,25 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicLong;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n import static org.hamcrest.Matchers.allOf;\n import static org.hamcrest.Matchers.containsString;\n import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.lessThan;\n import static org.hamcrest.Matchers.nullValue;\n \n-public class PersistedClusterStateServiceTests extends ESTestCase {\n+public class PersistedClusterStateServiceTests extends ESAllocationTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88989124e724b1b809d22e054288ca70855bed56"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4694, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}