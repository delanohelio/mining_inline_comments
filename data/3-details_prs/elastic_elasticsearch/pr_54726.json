{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MjQxOTU5", "number": 54726, "title": "Make data streams in APIs resolvable.", "bodyText": "This change makes data stream resolvable in APIs.\nThe INCLUDE_DATA_STREAMS indices option controls whether data streams can be resolved in an api. In this pr, the INCLUDE_DATA_STREAMS indices option is enabled in the following APIs: search, msearch, refresh, index (op_type create only) and bulk (index requests with op type create only). In a subsequent later change, we will determine which other APIs need to be able to resolve data streams and enable the INCLUDE_DATA_STREAMS indices option for these APIs.\nWhether an api resolve all backing indices of a data stream or the latest index of a data stream (write index) depends on the IndexNameExpressionResolver.Context.isResolveToWriteIndex().\nIf isResolveToWriteIndex() returns true then data streams resolve to the latest index (for example: index api) and otherwise a data stream resolves to all backing indices of a data stream (for example: search api).\nRelates to #53100", "createdAt": "2020-04-03T15:32:34Z", "url": "https://github.com/elastic/elasticsearch/pull/54726", "merged": true, "mergeCommit": {"oid": "fada09a13266de9ed7c0fc9faedb4f3283b5f646"}, "closed": true, "closedAt": "2020-04-16T17:46:13Z", "author": {"login": "martijnvg"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUCpvPAH2gAyMzk4MjQxOTU5OjIzYzA4ZTQ1ODIwMDEyMTRjZTAwM2M3NDVmZDA3OTRkMmViYjNjYWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYPtkkgH2gAyMzk4MjQxOTU5OjM5MGYwNzBmY2I3NjUzZjNhZDU4ZDMwY2EwNjY0OWFkNzViODUyNzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "23c08e4582001214ce003c745fd0794d2ebb3caa", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/23c08e4582001214ce003c745fd0794d2ebb3caa", "committedDate": "2020-04-03T15:29:58Z", "message": "Make data streams in APIs resolvable.\n\nThis change makes data stream resolvable in all APIs.\nFor APIs that have `FORBID_ALIASES_TO_MULTIPLE_INDICES` set\nin the index options, this means that a data stream is resolved\nto the latest backing index. For all other APIs this means\nthat a data stream is resolved to all backing indices.\n\nAdditionally also a `IGNORE_DATA_STREAMS` indices option is added,\nso that for specific APIs data stream resolvability can be disabled.\n\nRelates to #53100"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc7e5c1ac5486feea23be1a16663eed025891822", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/dc7e5c1ac5486feea23be1a16663eed025891822", "committedDate": "2020-04-03T16:18:11Z", "message": "iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f7046974bb125ca213fa09b64b1ca34a9617ffd", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/2f7046974bb125ca213fa09b64b1ca34a9617ffd", "committedDate": "2020-04-06T07:12:02Z", "message": "Merge remote-tracking branch 'es/master' into make_data_streams_resolvable_in_apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8be36bcb523e020cf76b91b85fee89f6e01639d4", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/8be36bcb523e020cf76b91b85fee89f6e01639d4", "committedDate": "2020-04-06T07:12:36Z", "message": "fixed checkstyle errors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "559af0fe0cf8de06487eccaf55d19b61880423ea", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/559af0fe0cf8de06487eccaf55d19b61880423ea", "committedDate": "2020-04-06T08:35:47Z", "message": "fixed tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaf88c2c1e79b221055dbca04c5ec1505274abd4", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/aaf88c2c1e79b221055dbca04c5ec1505274abd4", "committedDate": "2020-04-06T08:55:06Z", "message": "fixed forbidden api violation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdef59c6ac764b3548c7b586e1ec67bb20cbdabe", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/fdef59c6ac764b3548c7b586e1ec67bb20cbdabe", "committedDate": "2020-04-06T09:31:19Z", "message": "iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b4279733f1056fb1cab7950e093967f574b0cce", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/7b4279733f1056fb1cab7950e093967f574b0cce", "committedDate": "2020-04-06T09:49:16Z", "message": "fixed checkstyle violation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67a339f0f12e9d547fe3f8c065859417a4b9289e", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/67a339f0f12e9d547fe3f8c065859417a4b9289e", "committedDate": "2020-04-06T12:45:03Z", "message": "iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a418dbf70c80d9e8d0c19ee678f0ba446e112526", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/a418dbf70c80d9e8d0c19ee678f0ba446e112526", "committedDate": "2020-04-07T09:24:24Z", "message": "added more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84b0f5ced189353eb3593b9fb4521784d0c4c043", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/84b0f5ced189353eb3593b9fb4521784d0c4c043", "committedDate": "2020-04-07T09:27:07Z", "message": "Merge remote-tracking branch 'es/master' into make_data_streams_resolvable_in_apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4cc145d368a1dc37bdf060bd74f8fb6b8f222c8", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/f4cc145d368a1dc37bdf060bd74f8fb6b8f222c8", "committedDate": "2020-04-07T09:33:07Z", "message": "fixed test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3f96dda347b0ec912d065af33952d5a38fd663c", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/f3f96dda347b0ec912d065af33952d5a38fd663c", "committedDate": "2020-04-07T09:41:19Z", "message": "reuse test method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53e540059fd978ba793ebae515f17220dfe3fe6a", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/53e540059fd978ba793ebae515f17220dfe3fe6a", "committedDate": "2020-04-07T09:51:58Z", "message": "altered test and fixed checkstyle violation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4875ef6c9216b3294f37d1bbdcb3462b03f1519e", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/4875ef6c9216b3294f37d1bbdcb3462b03f1519e", "committedDate": "2020-04-07T15:15:06Z", "message": "Change node command so that it can parse, DataStreamMetadata.\n\nIt is used in the Metadata class and otherwise\nnode commands can't load the cluster state."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65cb2045baa99c4d6dc08dc3a2bd0c6f9cfc5860", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/65cb2045baa99c4d6dc08dc3a2bd0c6f9cfc5860", "committedDate": "2020-04-07T15:39:55Z", "message": "added test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18382c4bfa0844c5b2df43471d98864c02d11a71", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/18382c4bfa0844c5b2df43471d98864c02d11a71", "committedDate": "2020-04-07T15:40:09Z", "message": "Merge remote-tracking branch 'es/master' into make_data_streams_resolvable_in_apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b289c574f13383011a4b297b7ea4603d53f0c3b", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/4b289c574f13383011a4b297b7ea4603d53f0c3b", "committedDate": "2020-04-08T09:18:07Z", "message": "supply core custom metadata to namedXContentRegistry of es node commands."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2482a885088b22d4ef7329ad494fbcf41774916", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/c2482a885088b22d4ef7329ad494fbcf41774916", "committedDate": "2020-04-08T09:18:33Z", "message": "Merge remote-tracking branch 'es/master' into make_data_streams_resolvable_in_apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/5b76cc20a82f679281fc035dcc41c588ec10b46a", "committedDate": "2020-04-08T10:16:05Z", "message": "iter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDAwNTU3", "url": "https://github.com/elastic/elasticsearch/pull/54726#pullrequestreview-390000557", "createdAt": "2020-04-08T13:57:54Z", "commit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzo1Nzo1NFrOGCwjcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDowODowNVrOGCxAJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0NTg0MQ==", "bodyText": "I'd like to see the write index derived from the data stream's generation so that this API can't be used to set the write index to something other than the current generation backing index. That's for a follow-up PR, though.", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r405545841", "createdAt": "2020-04-08T13:57:54Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java", "diffHunk": "@@ -257,4 +257,42 @@ private boolean isNonEmpty(List<IndexMetadata> idxMetas) {\n             return (Objects.isNull(idxMetas) || idxMetas.isEmpty()) == false;\n         }\n     }\n+\n+    class DataStream implements IndexAbstraction {\n+\n+        private final org.elasticsearch.cluster.metadata.DataStream dataStream;\n+        private final List<IndexMetadata> dataStreamIndices;\n+        private final IndexMetadata writeIndex;\n+\n+        public DataStream(org.elasticsearch.cluster.metadata.DataStream dataStream,\n+                          List<IndexMetadata> dataStreamIndices, IndexMetadata writeIndex) {\n+            this.dataStream = dataStream;\n+            this.dataStreamIndices = dataStreamIndices;\n+            this.writeIndex = writeIndex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU1MTUyNg==", "bodyText": "Should the error message be updated to suggest specifying either concrete indices or aliases since either are legally resolvable if only IGNORE_DATA_STREAMS is specified?", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r405551526", "createdAt": "2020-04-08T14:05:40Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java", "diffHunk": "@@ -260,6 +272,11 @@ private static IllegalArgumentException aliasesNotSupportedException(String expr\n                 \"alias, specify the corresponding concrete indices instead.\");\n     }\n \n+    private static IllegalArgumentException dataStreamsNotSupportedException(String expression) {\n+        return new IllegalArgumentException(\"The provided expression [\" + expression + \"] matches a \" +\n+            \"data stream, specify the corresponding concrete indices instead.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU1MzE4OA==", "bodyText": "It looks like there's a lot of places in this class where aliasOrIndex could be changed to indexAbstraction. Maybe something for a follow-up PR.", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r405553188", "createdAt": "2020-04-08T14:08:05Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java", "diffHunk": "@@ -766,9 +785,20 @@ private static void validateAliasOrIndex(String expression) {\n \n         private static boolean aliasOrIndexExists(IndicesOptions options, Metadata metadata, String expression) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDY4MDIz", "url": "https://github.com/elastic/elasticsearch/pull/54726#pullrequestreview-390068023", "createdAt": "2020-04-08T15:10:04Z", "commit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNToxMDowNFrOGCzyTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTo1Mzo0NVrOGC1wkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5ODc5Nw==", "bodyText": "Maybe add\nassert dataStreamIndices.contains(writeIndex)", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r405598797", "createdAt": "2020-04-08T15:10:04Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java", "diffHunk": "@@ -257,4 +257,42 @@ private boolean isNonEmpty(List<IndexMetadata> idxMetas) {\n             return (Objects.isNull(idxMetas) || idxMetas.isEmpty()) == false;\n         }\n     }\n+\n+    class DataStream implements IndexAbstraction {\n+\n+        private final org.elasticsearch.cluster.metadata.DataStream dataStream;\n+        private final List<IndexMetadata> dataStreamIndices;\n+        private final IndexMetadata writeIndex;\n+\n+        public DataStream(org.elasticsearch.cluster.metadata.DataStream dataStream,\n+                          List<IndexMetadata> dataStreamIndices, IndexMetadata writeIndex) {\n+            this.dataStream = dataStream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwMjM3NA==", "bodyText": "Let us wrap in immutableList.", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r405602374", "createdAt": "2020-04-08T15:14:54Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java", "diffHunk": "@@ -257,4 +257,42 @@ private boolean isNonEmpty(List<IndexMetadata> idxMetas) {\n             return (Objects.isNull(idxMetas) || idxMetas.isEmpty()) == false;\n         }\n     }\n+\n+    class DataStream implements IndexAbstraction {\n+\n+        private final org.elasticsearch.cluster.metadata.DataStream dataStream;\n+        private final List<IndexMetadata> dataStreamIndices;\n+        private final IndexMetadata writeIndex;\n+\n+        public DataStream(org.elasticsearch.cluster.metadata.DataStream dataStream,\n+                          List<IndexMetadata> dataStreamIndices, IndexMetadata writeIndex) {\n+            this.dataStream = dataStream;\n+            this.dataStreamIndices = dataStreamIndices;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwNDU1Nw==", "bodyText": "nit: it seems a bit odd that we here do alias, then data-stream and in the next block we do data-stream, then alias. Just for readability it would be nice to align the two.", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r405604557", "createdAt": "2020-04-08T15:17:54Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java", "diffHunk": "@@ -200,9 +201,20 @@\n                 } else {\n                     continue;\n                 }\n+            } else if (indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.getOptions().ignoreDataStreams()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwNzcwMg==", "bodyText": "Line 234 below needs to pick the name from the index abstraction rather than say \"Alias\". (throw new IllegalArgumentException(\"Alias...)", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r405607702", "createdAt": "2020-04-08T15:22:04Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java", "diffHunk": "@@ -200,9 +201,20 @@\n                 } else {\n                     continue;\n                 }\n+            } else if (indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.getOptions().ignoreDataStreams()) {\n+                if (failNoIndices) {\n+                    throw dataStreamsNotSupportedException(expression);\n+                } else {\n+                    continue;\n+                }\n             }\n \n-            if (indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.isResolveToWriteIndex()) {\n+            if (indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.isResolveToWriteIndex()) {\n+                IndexMetadata writeIndex = indexAbstraction.getWriteIndex();\n+                if (addIndex(writeIndex, context)) {\n+                    concreteIndices.add(writeIndex.getIndex());\n+                }\n+            } else if (indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.isResolveToWriteIndex()) {\n                 IndexMetadata writeIndex = indexAbstraction.getWriteIndex();\n                 if (writeIndex == null) {\n                     throw new IllegalArgumentException(\"no write index is defined for alias [\" + indexAbstraction.getName() + \"].\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxNTM5MA==", "bodyText": "Let us also assert existing != null to ensure tests fail.", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r405615390", "createdAt": "2020-04-08T15:32:12Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java", "diffHunk": "@@ -1369,6 +1369,25 @@ public Metadata build() {\n                 }\n             }\n \n+            DataStreamMetadata dataStreamMetadata = (DataStreamMetadata) this.customs.get(DataStreamMetadata.TYPE);\n+            if (dataStreamMetadata != null) {\n+                for (Map.Entry<String, DataStream> entry : dataStreamMetadata.dataStreams().entrySet()) {\n+                    DataStream dataStream = entry.getValue();\n+                    List<IndexMetadata> backingIndices = dataStream.getIndices().stream()\n+                        .map(index -> indices.get(index.getName()))\n+                        .collect(Collectors.toList());\n+                    assert backingIndices.isEmpty() == false;\n+\n+                    IndexMetadata writeIndex = backingIndices.get(backingIndices.size() - 1);\n+                    IndexAbstraction existing = aliasAndIndexLookup.put(dataStream.getName(),\n+                        new IndexAbstraction.DataStream(dataStream, backingIndices, writeIndex));\n+                    if (existing != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxNjk5Mw==", "bodyText": "I think we should also add assert backingIndices.contains(null) == -1 to ensure that the indices.get lookup above found entries in all cases.", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r405616993", "createdAt": "2020-04-08T15:34:21Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java", "diffHunk": "@@ -1369,6 +1369,25 @@ public Metadata build() {\n                 }\n             }\n \n+            DataStreamMetadata dataStreamMetadata = (DataStreamMetadata) this.customs.get(DataStreamMetadata.TYPE);\n+            if (dataStreamMetadata != null) {\n+                for (Map.Entry<String, DataStream> entry : dataStreamMetadata.dataStreams().entrySet()) {\n+                    DataStream dataStream = entry.getValue();\n+                    List<IndexMetadata> backingIndices = dataStream.getIndices().stream()\n+                        .map(index -> indices.get(index.getName()))\n+                        .collect(Collectors.toList());\n+                    assert backingIndices.isEmpty() == false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYyMTgxMg==", "bodyText": "Should this condition not match the one above? i.e., use <=?\nI would prefer using 0..n-1 instead like we do in most places, but not important.", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r405621812", "createdAt": "2020-04-08T15:40:56Z", "author": {"login": "henningandersen"}, "path": "server/src/test/java/org/elasticsearch/cluster/metadata/MetadataTests.java", "diffHunk": "@@ -978,6 +995,37 @@ public void testBuilderForDataStreamWithRandomlyNumberedBackingIndices() {\n         assertThat(metadata.dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n     }\n \n+    public void testBuildIndicesLookupForDataStreams() {\n+        Metadata.Builder b = Metadata.builder();\n+        int numDataStreams = randomIntBetween(2, 8);\n+        for (int i = 1; i <= numDataStreams; i++) {\n+            String name = \"data-stream-\" + i;\n+            int numBackingIndices = randomIntBetween(1, 4);\n+            List<Index> indices = new ArrayList<>(numBackingIndices);\n+            for (int j = 1; j <= numBackingIndices; j++) {\n+                IndexMetadata idx = createBackingIndex(name, j).build();\n+                indices.add(idx.getIndex());\n+                b.put(idx, true);\n+            }\n+            b.put(new DataStream(name, \"ts\", indices));\n+        }\n+\n+        Metadata metadata = b.build();\n+        assertThat(metadata.dataStreams().size(), equalTo(numDataStreams));\n+        for (int i = 1; i < numDataStreams; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYzMTEyMA==", "bodyText": "I think we should not allow deleting the indices of a data stream through a data stream name?", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r405631120", "createdAt": "2020-04-08T15:53:45Z", "author": {"login": "henningandersen"}, "path": "test/framework/src/main/java/org/elasticsearch/test/TestCluster.java", "diffHunk": "@@ -137,7 +137,7 @@ public void wipeIndices(String... indices) {\n             try {\n                 // include wiping hidden indices!\n                 assertAcked(client().admin().indices().prepareDelete(indices)\n-                    .setIndicesOptions(IndicesOptions.fromOptions(false, true, true, true, true, false, false, true, false)));\n+                    .setIndicesOptions(IndicesOptions.fromOptions(false, true, true, true, true, false, false, true, false, true)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b76cc20a82f679281fc035dcc41c588ec10b46a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f13143b2e8c4da8fc13c76d048ea12a2ee0973ba", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/f13143b2e8c4da8fc13c76d048ea12a2ee0973ba", "committedDate": "2020-04-09T08:07:42Z", "message": "applied first feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0554e1b2d00edf7beec0bbe6dae9029737c91333", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/0554e1b2d00edf7beec0bbe6dae9029737c91333", "committedDate": "2020-04-09T08:08:42Z", "message": "renamed variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70cb2276d237e07d7c0d78e3d6c81f5afea87e69", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/70cb2276d237e07d7c0d78e3d6c81f5afea87e69", "committedDate": "2020-04-09T08:14:44Z", "message": "Merge remote-tracking branch 'es/master' into make_data_streams_resolvable_in_apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7bf1cf7811005a0a09c9a8d9b771605a8e60385", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/a7bf1cf7811005a0a09c9a8d9b771605a8e60385", "committedDate": "2020-04-09T08:52:01Z", "message": "removed unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74b9c8b3cfcfe3e774cfc2b4cb0ceb5d0868cfb3", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/74b9c8b3cfcfe3e774cfc2b4cb0ceb5d0868cfb3", "committedDate": "2020-04-09T09:00:49Z", "message": "adjust delete data stream logic to play nice with added assertions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d1dc1d227c514279cd4d61b387d99629c2a3ef4", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/4d1dc1d227c514279cd4d61b387d99629c2a3ef4", "committedDate": "2020-04-09T09:51:52Z", "message": "Only attempt to build indicesLookup if there are indices, otherwise data streams can't point to a concrete index.\nAlso fixed a few tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a97a606fe2b500e55710164b9cb6c48badbb636b", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/a97a606fe2b500e55710164b9cb6c48badbb636b", "committedDate": "2020-04-09T11:06:14Z", "message": "fixed test due to error message change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc10fe2badb82a61f23ff897530d7e3a362339b9", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/fc10fe2badb82a61f23ff897530d7e3a362339b9", "committedDate": "2020-04-09T11:36:35Z", "message": "if yaml test runs in a mixed cluster then `Alias` may be returned due\nto a change in the error message, this pr now returns `alias` with\noriginates from the index abstraction type's display name."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2c45561afda9649b0a4673d9da060a6c128c650", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/a2c45561afda9649b0a4673d9da060a6c128c650", "committedDate": "2020-04-09T12:11:28Z", "message": "clean data streams in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12db3c26064172a8d9fe3ecf5f04a8d3fbbb1488", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/12db3c26064172a8d9fe3ecf5f04a8d3fbbb1488", "committedDate": "2020-04-10T11:25:57Z", "message": "Replaced IGNORE_DATA_STREAMS indices option with INCLUDE_DATA_STREAMS indices option.\n\nData streams are not resolved unless the INCLUDE_DATA_STREAMS indices option is specified.\nOnly search, msearch, index (with op type create) and refresh requests are configured with\nthe INCLUDE_DATA_STREAMS indices option. All other requests / apis don't resolve data streams."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af24175266a1d30fd796344b2ed1a8c6ce50968b", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/af24175266a1d30fd796344b2ed1a8c6ce50968b", "committedDate": "2020-04-10T13:34:28Z", "message": "fixed tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b59cb21527f3919522521966570a1e0c1833a54", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/1b59cb21527f3919522521966570a1e0c1833a54", "committedDate": "2020-04-10T13:34:43Z", "message": "Merge remote-tracking branch 'es/master' into make_data_streams_resolvable_in_apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f91c80f89f2fa1b9463002b16b80f94c6e025f0", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/1f91c80f89f2fa1b9463002b16b80f94c6e025f0", "committedDate": "2020-04-10T14:37:49Z", "message": "don't serialize include_datastreams if other node doesn't support it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNDkwMjY3", "url": "https://github.com/elastic/elasticsearch/pull/54726#pullrequestreview-392490267", "createdAt": "2020-04-13T22:47:53Z", "commit": {"oid": "1f91c80f89f2fa1b9463002b16b80f94c6e025f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a604aff5cd4c2fb8040a46c78125a22b3eeca9c", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/9a604aff5cd4c2fb8040a46c78125a22b3eeca9c", "committedDate": "2020-04-14T13:40:45Z", "message": "Merge remote-tracking branch 'es/master' into make_data_streams_resolvable_in_apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c04439f4936f490b8d0bf34753c02206404bf0fc", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/c04439f4936f490b8d0bf34753c02206404bf0fc", "committedDate": "2020-04-14T14:59:55Z", "message": "add yaml tests that check that using a data stream in a number of apis is forbidden."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNjAwNTQ5", "url": "https://github.com/elastic/elasticsearch/pull/54726#pullrequestreview-393600549", "createdAt": "2020-04-15T09:20:47Z", "commit": {"oid": "c04439f4936f490b8d0bf34753c02206404bf0fc"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwOToyMDo0N1rOGFxIUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDo1OToxNVrOGF0gnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcwMTAwOQ==", "bodyText": "I think this would be better handled in the IndexNameExpressionResolver.Context and thus by adding new methods to IndexNameExpressionResolver (similar to concreteWriteIndex). It looks like only search, refresh (and index) really need to resolve data streams? Indexing data can be resolved in concreteWriteIndex. For search some of the search specific methods are already there (resolveSearchRouting).\nThe benefits of this is that we avoid the additional IndicesOptions instances, it becomes more clear when data streams are resolved to indices and it more clearly separates the responsibility of IndicesOptions (which is sort of the user specified options) vs. the specific action's needs.", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r408701009", "createdAt": "2020-04-15T09:20:47Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/action/support/IndicesOptions.java", "diffHunk": "@@ -103,7 +102,8 @@ public static XContentBuilder toXContent(EnumSet<WildcardStates> states, XConten\n         ALLOW_NO_INDICES,\n         FORBID_ALIASES_TO_MULTIPLE_INDICES,\n         FORBID_CLOSED_INDICES,\n-        IGNORE_THROTTLED;\n+        IGNORE_THROTTLED,\n+        INCLUDE_DATA_STREAMS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04439f4936f490b8d0bf34753c02206404bf0fc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcwMTQ0NA==", "bodyText": "If we stick to this approach, this should also be renamed?", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r408701444", "createdAt": "2020-04-15T09:21:33Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/action/support/IndicesOptions.java", "diffHunk": "@@ -133,12 +133,19 @@ public static XContentBuilder toXContent(EnumSet<WildcardStates> states, XConten\n         new IndicesOptions(EnumSet.of(Option.ALLOW_NO_INDICES, Option.FORBID_CLOSED_INDICES),\n             EnumSet.of(WildcardStates.OPEN, WildcardStates.HIDDEN));\n     public static final IndicesOptions STRICT_EXPAND_OPEN_FORBID_CLOSED_IGNORE_THROTTLED =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04439f4936f490b8d0bf34753c02206404bf0fc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcwODI0NA==", "bodyText": "I think reusing this flag for data streams is not ideal. I wonder if we should instead flat out fail, if an expression matches a data-stream and we are not in one of the cases where data-streams are resolved.\nI think I prefer this over skipping data-streams. Index, alias and data-stream are in the same namespace. I think it will be confusing to have some index admin operations that match indices and aliases, but ignores data-streams. Suppose you have:\nxalias -> yindex\nxindex\nxdatastream\nand you do POST /x*/_close, I think it would close yindex, xindex, but silently ignore xdatastream. Obviously, users should design their namings to avoid such scenarios, but I think a better default would be to fail, if an operation unexpectedly resolves to a data-stream.", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r408708244", "createdAt": "2020-04-15T09:32:51Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java", "diffHunk": "@@ -212,15 +220,21 @@\n                 if (addIndex(writeIndex, context)) {\n                     concreteIndices.add(writeIndex.getIndex());\n                 }\n+            } else if (indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.isResolveToWriteIndex()) {\n+                IndexMetadata writeIndex = indexAbstraction.getWriteIndex();\n+                if (addIndex(writeIndex, context)) {\n+                    concreteIndices.add(writeIndex.getIndex());\n+                }\n             } else {\n                 if (indexAbstraction.getIndices().size() > 1 && !options.allowAliasesToMultipleIndices()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04439f4936f490b8d0bf34753c02206404bf0fc"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc1NjM4MQ==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testDataSteams() {\n          \n          \n            \n                public void testDataStreams() {", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r408756381", "createdAt": "2020-04-15T10:59:15Z", "author": {"login": "henningandersen"}, "path": "server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java", "diffHunk": "@@ -1759,4 +1760,158 @@ public void testIgnoreThrottled() {\n             assertEquals(\"test-index\", indices[2].getName());\n         }\n     }\n+\n+    public void testDataSteams() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04439f4936f490b8d0bf34753c02206404bf0fc"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a256f325c39f1984fed37b50be9ac0a7cafbac1", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/8a256f325c39f1984fed37b50be9ac0a7cafbac1", "committedDate": "2020-04-16T07:34:28Z", "message": "Merge remote-tracking branch 'es/master' into make_data_streams_resolvable_in_apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d63d618dc5c4c1cd5cd3210a8bb855747a39e2d", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/3d63d618dc5c4c1cd5cd3210a8bb855747a39e2d", "committedDate": "2020-04-16T13:13:35Z", "message": "If include data stream indices option is not set and a wildcard expression expands to a data stream then fail.\nThis means the api doesn't support data streams, but the wildcard expression is resolving to a data stream.\nPrior to this commit data streams would be quietly ignored.\n\nWe think that failing is more clear, so that it is clear that a specific api call isn't executed over a data stream."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "254490084fd5dd38db0335a8aa5feeee45834f6d", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/254490084fd5dd38db0335a8aa5feeee45834f6d", "committedDate": "2020-04-16T13:13:58Z", "message": "renamed test method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0Nzg5NjIw", "url": "https://github.com/elastic/elasticsearch/pull/54726#pullrequestreview-394789620", "createdAt": "2020-04-16T16:12:50Z", "commit": {"oid": "254490084fd5dd38db0335a8aa5feeee45834f6d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjoxMjo1MFrOGGs21Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjoxMjo1MFrOGGs21Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3OTU3Mw==", "bodyText": "I think we should put in a check into CreateDataStreamAction to not allow creating data streams before all nodes are on the target release (7.8)? To ensure that there are no surprises in a mixed cluster.", "url": "https://github.com/elastic/elasticsearch/pull/54726#discussion_r409679573", "createdAt": "2020-04-16T16:12:50Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/action/support/IndicesOptions.java", "diffHunk": "@@ -227,8 +237,21 @@ public boolean ignoreThrottled() {\n         return EnumSet.copyOf(expandWildcards);\n     }\n \n+    /**\n+     * @return Whether to include data streams when resolving index expressions to concrete indices.\n+     */\n+    public boolean includeDataStreams() {\n+        return options.contains(Option.INCLUDE_DATA_STREAMS);\n+    }\n+\n     public void writeIndicesOptions(StreamOutput out) throws IOException {\n-        out.writeEnumSet(options);\n+        if (out.getVersion().before(Version.V_8_0_0) && options.contains(Option.INCLUDE_DATA_STREAMS)) {\n+            EnumSet<Option> copy = EnumSet.copyOf(options);\n+            copy.remove(Option.INCLUDE_DATA_STREAMS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254490084fd5dd38db0335a8aa5feeee45834f6d"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "390f070fcb7653f3ad58d30ca06649ad75b85277", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/390f070fcb7653f3ad58d30ca06649ad75b85277", "committedDate": "2020-04-16T16:58:37Z", "message": "renamed constant"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3789, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}