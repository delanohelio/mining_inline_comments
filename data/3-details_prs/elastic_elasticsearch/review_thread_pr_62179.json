{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyOTQxMDc4", "number": 62179, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoyMjoyNVrOEhwPLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoyMzoxOFrOEhwQ1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODI4NzgzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoyMjoyNVrOHPPl6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoyNTo1NlrOHPPxCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0NjE1Mg==", "bodyText": "can you replace the call with freeReaderContext(context.id())?", "url": "https://github.com/elastic/elasticsearch/pull/62179#discussion_r485746152", "createdAt": "2020-09-09T16:22:25Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "diffHunk": "@@ -471,7 +471,14 @@ public void executeQueryPhase(InternalScrollSearchRequest request,\n                                   SearchShardTask task,\n                                   ActionListener<ScrollQuerySearchResult> listener) {\n         final LegacyReaderContext readerContext = (LegacyReaderContext) findReaderContext(request.contextId(), request);\n-        final Releasable markAsUsed = readerContext.markAsUsed(getScrollKeepAlive(request.scroll()));\n+        final Releasable markAsUsed;\n+        try {\n+            markAsUsed = readerContext.markAsUsed(getScrollKeepAlive(request.scroll()));\n+        } catch (Exception e) {\n+            // We need to release the reader context of the scroll when we hit any exception (here the keep_alive can be too large)\n+            processFailure(readerContext, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce109e513e33c8a7a014ac23824d1a060b1adcee"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0OTAwMA==", "bodyText": "++. I pushed 3517cb5", "url": "https://github.com/elastic/elasticsearch/pull/62179#discussion_r485749000", "createdAt": "2020-09-09T16:25:56Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "diffHunk": "@@ -471,7 +471,14 @@ public void executeQueryPhase(InternalScrollSearchRequest request,\n                                   SearchShardTask task,\n                                   ActionListener<ScrollQuerySearchResult> listener) {\n         final LegacyReaderContext readerContext = (LegacyReaderContext) findReaderContext(request.contextId(), request);\n-        final Releasable markAsUsed = readerContext.markAsUsed(getScrollKeepAlive(request.scroll()));\n+        final Releasable markAsUsed;\n+        try {\n+            markAsUsed = readerContext.markAsUsed(getScrollKeepAlive(request.scroll()));\n+        } catch (Exception e) {\n+            // We need to release the reader context of the scroll when we hit any exception (here the keep_alive can be too large)\n+            processFailure(readerContext, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0NjE1Mg=="}, "originalCommit": {"oid": "ce109e513e33c8a7a014ac23824d1a060b1adcee"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODI5MjA0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoyMzoxOFrOHPPooA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoyMzoxOFrOHPPooA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0Njg0OA==", "bodyText": "same here", "url": "https://github.com/elastic/elasticsearch/pull/62179#discussion_r485746848", "createdAt": "2020-09-09T16:23:18Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "diffHunk": "@@ -536,7 +543,14 @@ private Executor getExecutor(IndexShard indexShard) {\n     public void executeFetchPhase(InternalScrollSearchRequest request, SearchShardTask task,\n                                   ActionListener<ScrollQueryFetchSearchResult> listener) {\n         final LegacyReaderContext readerContext = (LegacyReaderContext) findReaderContext(request.contextId(), request);\n-        final Releasable markAsUsed = readerContext.markAsUsed(getScrollKeepAlive(request.scroll()));\n+        final Releasable markAsUsed;\n+        try {\n+            markAsUsed = readerContext.markAsUsed(getScrollKeepAlive(request.scroll()));\n+        } catch (Exception e) {\n+            // We need to release the reader context of the scroll when we hit any exception (here the keep_alive can be too large)\n+            processFailure(readerContext, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce109e513e33c8a7a014ac23824d1a060b1adcee"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1597, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}