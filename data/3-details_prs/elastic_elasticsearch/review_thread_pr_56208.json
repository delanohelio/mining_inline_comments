{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNTU0MzI1", "number": 56208, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjo1NToyOFrOD5zWsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToyNDoxN1rOD7Sbbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTM2ODE3OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/search/profile/ProfileResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjo1NToyOFrOGRRlyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzowMjowMFrOGRR21w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc2NzE3OA==", "bodyText": "This is the change the breaks BWC. I'm not 100% sure it is ok. I'm hunting.\nThe effects will be that versions of the high level rest client that don't have this won't be able to read breakdowns that include non-numbers. They'll blow up at:\nensureExpectedToken(XContentParser.Token.VALUE_NUMBER, parser.nextToken(), parser::getTokenLocation);", "url": "https://github.com/elastic/elasticsearch/pull/56208#discussion_r420767178", "createdAt": "2020-05-06T12:55:28Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/profile/ProfileResult.java", "diffHunk": "@@ -49,26 +51,25 @@\n  * \"children\" queries if applicable\n  */\n public final class ProfileResult implements Writeable, ToXContentObject {\n-\n     static final ParseField TYPE = new ParseField(\"type\");\n     static final ParseField DESCRIPTION = new ParseField(\"description\");\n+    static final ParseField BREAKDOWN = new ParseField(\"breakdown\");\n     static final ParseField NODE_TIME = new ParseField(\"time\");\n     static final ParseField NODE_TIME_RAW = new ParseField(\"time_in_nanos\");\n     static final ParseField CHILDREN = new ParseField(\"children\");\n-    static final ParseField BREAKDOWN = new ParseField(\"breakdown\");\n \n     private final String type;\n     private final String description;\n-    private final Map<String, Long> timings;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1de6d13b9cddd1ca4f04d4ab8aebdeb8b943e29"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3MTU0Mw==", "bodyText": "Now that I think about this I'm going to move the \"extra\" stuff into an \"extra\" field and leave the breakdown all longs. I think that preserves backwards compatibility and is less confusing.", "url": "https://github.com/elastic/elasticsearch/pull/56208#discussion_r420771543", "createdAt": "2020-05-06T13:02:00Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/profile/ProfileResult.java", "diffHunk": "@@ -49,26 +51,25 @@\n  * \"children\" queries if applicable\n  */\n public final class ProfileResult implements Writeable, ToXContentObject {\n-\n     static final ParseField TYPE = new ParseField(\"type\");\n     static final ParseField DESCRIPTION = new ParseField(\"description\");\n+    static final ParseField BREAKDOWN = new ParseField(\"breakdown\");\n     static final ParseField NODE_TIME = new ParseField(\"time\");\n     static final ParseField NODE_TIME_RAW = new ParseField(\"time_in_nanos\");\n     static final ParseField CHILDREN = new ParseField(\"children\");\n-    static final ParseField BREAKDOWN = new ParseField(\"breakdown\");\n \n     private final String type;\n     private final String description;\n-    private final Map<String, Long> timings;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc2NzE3OA=="}, "originalCommit": {"oid": "a1de6d13b9cddd1ca4f04d4ab8aebdeb8b943e29"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNDk0NTExOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/DeferableBucketAggregator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToyNDoxN1rOGThRHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTo0NToxNVrOGTqxXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyMTE4Mg==", "bodyText": "Is there not a way to fetch the names out of collectors later when we need them?", "url": "https://github.com/elastic/elasticsearch/pull/56208#discussion_r423121182", "createdAt": "2020-05-11T15:24:17Z", "author": {"login": "polyfractal"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/DeferableBucketAggregator.java", "diffHunk": "@@ -30,10 +30,12 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n+import java.util.function.BiConsumer;\n \n public abstract class DeferableBucketAggregator extends BucketsAggregator {\n \n     private DeferringBucketCollector recordingWrapper;\n+    private List<String> deferredAggregationNames;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "266f2de4ab719c7592cdbd7be98fb4333f7cfe62"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE2MDQ4MQ==", "bodyText": "Not without some weird casting! I'll have another look just in case.", "url": "https://github.com/elastic/elasticsearch/pull/56208#discussion_r423160481", "createdAt": "2020-05-11T16:22:07Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/DeferableBucketAggregator.java", "diffHunk": "@@ -30,10 +30,12 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n+import java.util.function.BiConsumer;\n \n public abstract class DeferableBucketAggregator extends BucketsAggregator {\n \n     private DeferringBucketCollector recordingWrapper;\n+    private List<String> deferredAggregationNames;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyMTE4Mg=="}, "originalCommit": {"oid": "266f2de4ab719c7592cdbd7be98fb4333f7cfe62"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3Njg5Mw==", "bodyText": "Ah ok, no worries then :)", "url": "https://github.com/elastic/elasticsearch/pull/56208#discussion_r423276893", "createdAt": "2020-05-11T19:45:15Z", "author": {"login": "polyfractal"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/DeferableBucketAggregator.java", "diffHunk": "@@ -30,10 +30,12 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n+import java.util.function.BiConsumer;\n \n public abstract class DeferableBucketAggregator extends BucketsAggregator {\n \n     private DeferringBucketCollector recordingWrapper;\n+    private List<String> deferredAggregationNames;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyMTE4Mg=="}, "originalCommit": {"oid": "266f2de4ab719c7592cdbd7be98fb4333f7cfe62"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2385, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}