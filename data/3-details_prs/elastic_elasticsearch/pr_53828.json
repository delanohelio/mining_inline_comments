{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMjA1Mjc3", "number": 53828, "title": "Add async_search get and delete APIs to HLRC", "bodyText": "This commit adds the \"_async_searhc\" get and delete APIs to the\nAsyncSearchClient in the High Level Rest Client.\nRelates to #49091", "createdAt": "2020-03-19T19:53:20Z", "url": "https://github.com/elastic/elasticsearch/pull/53828", "merged": true, "mergeCommit": {"oid": "3ceb60becfce3425e114537d886a327f16800890"}, "closed": true, "closedAt": "2020-03-23T14:01:36Z", "author": {"login": "cbuescher"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPR1RPgH2gAyMzkxMjA1Mjc3OmU5OGE2MTk2YThjNjEzNThkYjU3ZjZjZWY2NmJlMzgzMjExNTIyYWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQd5rXgH2gAyMzkxMjA1Mjc3OjE4NDRjZDk0MWExMWY0Y2JhMDcxYTgwZjUxYTIwYTNkYjY1MjJkNmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e98a6196a8c61358db57f6cef66be383211522ab", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/e98a6196a8c61358db57f6cef66be383211522ab", "committedDate": "2020-03-19T20:21:31Z", "message": "Add async_search get and delete APIs to HLRC\n\nThis commit adds the \"_async_searhc\" get and delete APIs to the\nAsyncSearchClient in the High Level Rest Client.\n\nRelates to #49091"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2be7a0a91cc67ed92d0dac73fc61ac427d20c61f", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/2be7a0a91cc67ed92d0dac73fc61ac427d20c61f", "committedDate": "2020-03-19T19:48:58Z", "message": "Add async_search get and delete APIs to HLRC\n\nThis commit adds the \"_async_searhc\" get and delete APIs to the\nAsyncSearchClient in the High Level Rest Client.\n\nRelates to #49091"}, "afterCommit": {"oid": "e98a6196a8c61358db57f6cef66be383211522ab", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/e98a6196a8c61358db57f6cef66be383211522ab", "committedDate": "2020-03-19T20:21:31Z", "message": "Add async_search get and delete APIs to HLRC\n\nThis commit adds the \"_async_searhc\" get and delete APIs to the\nAsyncSearchClient in the High Level Rest Client.\n\nRelates to #49091"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MDYzMTE2", "url": "https://github.com/elastic/elasticsearch/pull/53828#pullrequestreview-378063116", "createdAt": "2020-03-19T20:19:10Z", "commit": {"oid": "2be7a0a91cc67ed92d0dac73fc61ac427d20c61f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMDoxOToxMFrOF4-81A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMDoyMzoyOVrOF4_Ffw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI5NTk1Ng==", "bodyText": "No need to extend TimedRequest?", "url": "https://github.com/elastic/elasticsearch/pull/53828#discussion_r395295956", "createdAt": "2020-03-19T20:19:10Z", "author": {"login": "jimczi"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/asyncsearch/DeleteAsyncSearchRequest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+\n+package org.elasticsearch.client.asyncsearch;\n+\n+import org.elasticsearch.client.TimedRequest;\n+\n+import java.util.Objects;\n+\n+public class DeleteAsyncSearchRequest extends TimedRequest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2be7a0a91cc67ed92d0dac73fc61ac427d20c61f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI5NjA3MA==", "bodyText": "Same here", "url": "https://github.com/elastic/elasticsearch/pull/53828#discussion_r395296070", "createdAt": "2020-03-19T20:19:22Z", "author": {"login": "jimczi"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/asyncsearch/GetAsyncSearchRequest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+\n+package org.elasticsearch.client.asyncsearch;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.common.unit.TimeValue;\n+\n+import java.util.Objects;\n+\n+public class GetAsyncSearchRequest extends TimedRequest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2be7a0a91cc67ed92d0dac73fc61ac427d20c61f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI5NjYxOA==", "bodyText": "you need a default value here ?", "url": "https://github.com/elastic/elasticsearch/pull/53828#discussion_r395296618", "createdAt": "2020-03-19T20:20:30Z", "author": {"login": "jimczi"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/asyncsearch/GetAsyncSearchRequest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+\n+package org.elasticsearch.client.asyncsearch;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.common.unit.TimeValue;\n+\n+import java.util.Objects;\n+\n+public class GetAsyncSearchRequest extends TimedRequest {\n+\n+    private TimeValue waitForCompletion;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2be7a0a91cc67ed92d0dac73fc61ac427d20c61f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI5ODE3NQ==", "bodyText": "The default should be TimeValue.MINUS_ONE, it means that the keep alive is not extended by this request (keep the last value set).", "url": "https://github.com/elastic/elasticsearch/pull/53828#discussion_r395298175", "createdAt": "2020-03-19T20:23:29Z", "author": {"login": "jimczi"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/asyncsearch/GetAsyncSearchRequest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+\n+package org.elasticsearch.client.asyncsearch;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.common.unit.TimeValue;\n+\n+import java.util.Objects;\n+\n+public class GetAsyncSearchRequest extends TimedRequest {\n+\n+    private TimeValue waitForCompletion;\n+    private TimeValue keepAlive;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98a6196a8c61358db57f6cef66be383211522ab"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "017fb83f78ddac9171731244d26e115cc122f2d9", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/017fb83f78ddac9171731244d26e115cc122f2d9", "committedDate": "2020-03-20T11:34:38Z", "message": "Merge branch 'master' into aync-search-get-hlrc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28b307a2232d0281903b595cf7e6cf64e7a52eb7", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/28b307a2232d0281903b595cf7e6cf64e7a52eb7", "committedDate": "2020-03-20T12:12:04Z", "message": "iter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10261bf3c4c04b07ec7b4760cda7971280826434", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/10261bf3c4c04b07ec7b4760cda7971280826434", "committedDate": "2020-03-20T12:02:03Z", "message": "iter"}, "afterCommit": {"oid": "28b307a2232d0281903b595cf7e6cf64e7a52eb7", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/28b307a2232d0281903b595cf7e6cf64e7a52eb7", "committedDate": "2020-03-20T12:12:04Z", "message": "iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92662877133a49afbd536749c15c7d9d4a9128cc", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/92662877133a49afbd536749c15c7d9d4a9128cc", "committedDate": "2020-03-20T15:41:37Z", "message": "try IT workaround"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2eca5241a12220ab950886b4009cc9eb65c2fd7e", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/2eca5241a12220ab950886b4009cc9eb65c2fd7e", "committedDate": "2020-03-20T15:31:14Z", "message": "try IT workaround"}, "afterCommit": {"oid": "92662877133a49afbd536749c15c7d9d4a9128cc", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/92662877133a49afbd536749c15c7d9d4a9128cc", "committedDate": "2020-03-20T15:41:37Z", "message": "try IT workaround"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69de26ab0e75316fd09e39a7527b23e3e3688cae", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/69de26ab0e75316fd09e39a7527b23e3e3688cae", "committedDate": "2020-03-20T16:13:19Z", "message": "Workaround for yellow clusterstate in integ tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5Mzk1MTM0", "url": "https://github.com/elastic/elasticsearch/pull/53828#pullrequestreview-379395134", "createdAt": "2020-03-23T12:47:49Z", "commit": {"oid": "69de26ab0e75316fd09e39a7527b23e3e3688cae"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjo0Nzo0OVrOF6D1eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjo0OTo1NlrOF6D6Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyNDU3MA==", "bodyText": "watch out: we removed this from the response in #53960", "url": "https://github.com/elastic/elasticsearch/pull/53828#discussion_r396424570", "createdAt": "2020-03-23T12:47:49Z", "author": {"login": "jimczi"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/asyncsearch/AsyncSearchIT.java", "diffHunk": "@@ -21,37 +21,52 @@\n \n import org.elasticsearch.client.ESRestHighLevelClientTestCase;\n import org.elasticsearch.client.RequestOptions;\n+import org.elasticsearch.client.core.AcknowledgedResponse;\n import org.elasticsearch.common.settings.Settings;\n-import org.elasticsearch.common.unit.TimeValue;\n import org.elasticsearch.index.query.QueryBuilders;\n import org.elasticsearch.search.builder.SearchSourceBuilder;\n \n import java.io.IOException;\n-import java.util.concurrent.TimeUnit;\n \n public class AsyncSearchIT extends ESRestHighLevelClientTestCase {\n \n-    public void testSubmitAsyncSearchRequest() throws IOException {\n+    public void testAsyncSearch() throws IOException {\n         String index = \"test-index\";\n         createIndex(index, Settings.EMPTY);\n \n         SearchSourceBuilder sourceBuilder = new SearchSourceBuilder().query(QueryBuilders.matchAllQuery());\n-        SubmitAsyncSearchRequest request = new SubmitAsyncSearchRequest(sourceBuilder, index);\n-        // 15 sec should be enough to make sure we always complete right away\n-        request.setWaitForCompletion(new TimeValue(15, TimeUnit.SECONDS));\n-        AsyncSearchResponse response = highLevelClient().asyncSearch().submitAsyncSearch(request, RequestOptions.DEFAULT);\n-        assertTrue(response.getVersion() >= 0);\n-        assertFalse(response.isPartial());\n-        assertTrue(response.getStartTime() > 0);\n-        assertTrue(response.getExpirationTime() > 0);\n-        assertNotNull(response.getSearchResponse());\n-        if (response.isRunning() == false) {\n-            assertNull(response.getId());\n-            assertFalse(response.isPartial());\n+        SubmitAsyncSearchRequest submitRequest = new SubmitAsyncSearchRequest(sourceBuilder, index);\n+        submitRequest.setCleanOnCompletion(false);\n+        AsyncSearchResponse submitResponse = highLevelClient().asyncSearch().submitAsyncSearch(submitRequest, RequestOptions.DEFAULT);\n+        assertNotNull(submitResponse.getId());\n+        assertTrue(submitResponse.getVersion() >= 0);\n+        assertFalse(submitResponse.isPartial());\n+        assertTrue(submitResponse.getStartTime() > 0);\n+        assertTrue(submitResponse.getExpirationTime() > 0);\n+        assertNotNull(submitResponse.getSearchResponse());\n+        if (submitResponse.isRunning() == false) {\n+            assertFalse(submitResponse.isPartial());\n         } else {\n-            assertTrue(response.isPartial());\n-            assertNotNull(response.getId());\n+            assertTrue(submitResponse.isPartial());\n+        }\n+\n+        GetAsyncSearchRequest getRequest = new GetAsyncSearchRequest(submitResponse.getId());\n+        AsyncSearchResponse getResponse = highLevelClient().asyncSearch().getAsyncSearch(getRequest, RequestOptions.DEFAULT);\n+        while (getResponse.isRunning()) {\n+            getResponse = highLevelClient().asyncSearch().getAsyncSearch(getRequest, RequestOptions.DEFAULT);\n         }\n-    }\n \n+        assertTrue(getResponse.getVersion() >= 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69de26ab0e75316fd09e39a7527b23e3e3688cae"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyNTI1Nw==", "bodyText": "I wonder if we can rename into get and getAsync since we're already inside the AsyncSearchClient ?", "url": "https://github.com/elastic/elasticsearch/pull/53828#discussion_r396425257", "createdAt": "2020-03-23T12:49:02Z", "author": {"login": "jimczi"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/AsyncSearchClient.java", "diffHunk": "@@ -63,4 +66,55 @@ public Cancellable submitAsyncSearchAsync(SubmitAsyncSearchRequest request, Requ\n                 AsyncSearchResponse::fromXContent, listener, emptySet());\n     }\n \n+    /**\n+     * Get an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     *\n+     */\n+    public AsyncSearchResponse getAsyncSearch(GetAsyncSearchRequest request, RequestOptions options) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69de26ab0e75316fd09e39a7527b23e3e3688cae"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyNTM3NA==", "bodyText": "Same here, delete should be enough ?", "url": "https://github.com/elastic/elasticsearch/pull/53828#discussion_r396425374", "createdAt": "2020-03-23T12:49:16Z", "author": {"login": "jimczi"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/AsyncSearchClient.java", "diffHunk": "@@ -63,4 +66,55 @@ public Cancellable submitAsyncSearchAsync(SubmitAsyncSearchRequest request, Requ\n                 AsyncSearchResponse::fromXContent, listener, emptySet());\n     }\n \n+    /**\n+     * Get an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     *\n+     */\n+    public AsyncSearchResponse getAsyncSearch(GetAsyncSearchRequest request, RequestOptions options) throws IOException {\n+        return restHighLevelClient.performRequestAndParseEntity(request, AsyncSearchRequestConverters::getAsyncSearch, options,\n+                AsyncSearchResponse::fromXContent, emptySet());\n+    }\n+\n+    /**\n+     * Asynchronously get an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     * @param request the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @param listener the listener to be notified upon request completion\n+     * @return cancellable that may be used to cancel the request\n+     */\n+    public Cancellable getAsyncSearchAsync(GetAsyncSearchRequest request, RequestOptions options,\n+            ActionListener<AsyncSearchResponse> listener) {\n+        return restHighLevelClient.performRequestAsyncAndParseEntity(request, AsyncSearchRequestConverters::getAsyncSearch, options,\n+                AsyncSearchResponse::fromXContent, listener, emptySet());\n+    }\n+\n+    /**\n+     * Delete an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     * @param request the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @return the response\n+     * @throws IOException in case there is a problem sending the request or parsing back the response\n+     */\n+    public AcknowledgedResponse deleteAsyncSearch(DeleteAsyncSearchRequest request, RequestOptions options) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69de26ab0e75316fd09e39a7527b23e3e3688cae"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyNTQ3MQ==", "bodyText": "deleteAsync ?", "url": "https://github.com/elastic/elasticsearch/pull/53828#discussion_r396425471", "createdAt": "2020-03-23T12:49:24Z", "author": {"login": "jimczi"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/AsyncSearchClient.java", "diffHunk": "@@ -63,4 +66,55 @@ public Cancellable submitAsyncSearchAsync(SubmitAsyncSearchRequest request, Requ\n                 AsyncSearchResponse::fromXContent, listener, emptySet());\n     }\n \n+    /**\n+     * Get an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     *\n+     */\n+    public AsyncSearchResponse getAsyncSearch(GetAsyncSearchRequest request, RequestOptions options) throws IOException {\n+        return restHighLevelClient.performRequestAndParseEntity(request, AsyncSearchRequestConverters::getAsyncSearch, options,\n+                AsyncSearchResponse::fromXContent, emptySet());\n+    }\n+\n+    /**\n+     * Asynchronously get an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     * @param request the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @param listener the listener to be notified upon request completion\n+     * @return cancellable that may be used to cancel the request\n+     */\n+    public Cancellable getAsyncSearchAsync(GetAsyncSearchRequest request, RequestOptions options,\n+            ActionListener<AsyncSearchResponse> listener) {\n+        return restHighLevelClient.performRequestAsyncAndParseEntity(request, AsyncSearchRequestConverters::getAsyncSearch, options,\n+                AsyncSearchResponse::fromXContent, listener, emptySet());\n+    }\n+\n+    /**\n+     * Delete an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     * @param request the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @return the response\n+     * @throws IOException in case there is a problem sending the request or parsing back the response\n+     */\n+    public AcknowledgedResponse deleteAsyncSearch(DeleteAsyncSearchRequest request, RequestOptions options) throws IOException {\n+        return restHighLevelClient.performRequestAndParseEntity(request, AsyncSearchRequestConverters::deleteAsyncSearch, options,\n+                AcknowledgedResponse::fromXContent, emptySet());\n+    }\n+\n+    /**\n+     * Asynchronously delete an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     * @param request the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @param listener the listener to be notified upon request completion\n+     * @return cancellable that may be used to cancel the request\n+     */\n+    public Cancellable deleteAsyncSearchAsync(DeleteAsyncSearchRequest request, RequestOptions options,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69de26ab0e75316fd09e39a7527b23e3e3688cae"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyNTc1MA==", "bodyText": "We could also rename submitAsyncSearch into submit and submitAsync ?", "url": "https://github.com/elastic/elasticsearch/pull/53828#discussion_r396425750", "createdAt": "2020-03-23T12:49:56Z", "author": {"login": "jimczi"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/AsyncSearchClient.java", "diffHunk": "@@ -63,4 +66,55 @@ public Cancellable submitAsyncSearchAsync(SubmitAsyncSearchRequest request, Requ\n                 AsyncSearchResponse::fromXContent, listener, emptySet());\n     }\n \n+    /**\n+     * Get an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     *\n+     */\n+    public AsyncSearchResponse getAsyncSearch(GetAsyncSearchRequest request, RequestOptions options) throws IOException {\n+        return restHighLevelClient.performRequestAndParseEntity(request, AsyncSearchRequestConverters::getAsyncSearch, options,\n+                AsyncSearchResponse::fromXContent, emptySet());\n+    }\n+\n+    /**\n+     * Asynchronously get an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     * @param request the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @param listener the listener to be notified upon request completion\n+     * @return cancellable that may be used to cancel the request\n+     */\n+    public Cancellable getAsyncSearchAsync(GetAsyncSearchRequest request, RequestOptions options,\n+            ActionListener<AsyncSearchResponse> listener) {\n+        return restHighLevelClient.performRequestAsyncAndParseEntity(request, AsyncSearchRequestConverters::getAsyncSearch, options,\n+                AsyncSearchResponse::fromXContent, listener, emptySet());\n+    }\n+\n+    /**\n+     * Delete an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     * @param request the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @return the response\n+     * @throws IOException in case there is a problem sending the request or parsing back the response\n+     */\n+    public AcknowledgedResponse deleteAsyncSearch(DeleteAsyncSearchRequest request, RequestOptions options) throws IOException {\n+        return restHighLevelClient.performRequestAndParseEntity(request, AsyncSearchRequestConverters::deleteAsyncSearch, options,\n+                AcknowledgedResponse::fromXContent, emptySet());\n+    }\n+\n+    /**\n+     * Asynchronously delete an async search request.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html\"> the docs</a> for more.\n+     * @param request the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @param listener the listener to be notified upon request completion\n+     * @return cancellable that may be used to cancel the request\n+     */\n+    public Cancellable deleteAsyncSearchAsync(DeleteAsyncSearchRequest request, RequestOptions options,\n+                                               ActionListener<AcknowledgedResponse> listener) {\n+        return restHighLevelClient.performRequestAsyncAndParseEntity(request, AsyncSearchRequestConverters::deleteAsyncSearch, options,\n+                AcknowledgedResponse::fromXContent, listener, emptySet());\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69de26ab0e75316fd09e39a7527b23e3e3688cae"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c98d6be2ddebdcff729c2ab1093e0c856c67e82", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/5c98d6be2ddebdcff729c2ab1093e0c856c67e82", "committedDate": "2020-03-23T12:55:46Z", "message": "Merge branch 'master' into aync-search-get-hlrc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1844cd941a11f4cba071a80f51a20a3db6522d6e", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/1844cd941a11f4cba071a80f51a20a3db6522d6e", "committedDate": "2020-03-23T12:59:07Z", "message": "Rename methods in AsyncSearchClient"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1879, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}