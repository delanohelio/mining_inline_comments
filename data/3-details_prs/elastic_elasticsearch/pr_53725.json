{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNDI5MDgx", "number": 53725, "title": "[ML] only retry persistence failures when the failure is intermittent and stop retrying when analytics job is stopping", "bodyText": "This fixes two issues:\n\nResults persister would retry actions even if they are not intermittent. An example of an persistent failure is a doc mapping problem.\nData frame analytics would continue to retry to persist results even after the job is stopped.\n\ncloses #53687", "createdAt": "2020-03-18T13:15:42Z", "url": "https://github.com/elastic/elasticsearch/pull/53725", "merged": true, "mergeCommit": {"oid": "783df3f9610a1f29149a10c1024758db566c74e3"}, "closed": true, "closedAt": "2020-03-19T15:15:56Z", "author": {"login": "benwtrent"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO3F-yAH2gAyMzkwNDI5MDgxOjkzYTE4YmVjYTMxNDM2ZGZjYTQwYjc5NDQ4YzIzZmM5ZjgxYTgxYTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPMWi9AFqTM3Nzc0NDIwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "93a18beca31436dfca40b79448c23fc9f81a81a9", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/93a18beca31436dfca40b79448c23fc9f81a81a9", "committedDate": "2020-03-18T13:12:20Z", "message": "[ML] only retry persistence failures when the failure is intermittent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d15da5b2c0031d75b747cfce7d526e899cb6301a", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/d15da5b2c0031d75b747cfce7d526e899cb6301a", "committedDate": "2020-03-18T13:50:06Z", "message": "Merge branch 'master' into feature/ml-data-frame-analytics-retry-on-failure-fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODc1ODY2", "url": "https://github.com/elastic/elasticsearch/pull/53725#pullrequestreview-376875866", "createdAt": "2020-03-18T13:45:26Z", "commit": {"oid": "93a18beca31436dfca40b79448c23fc9f81a81a9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzo0NToyNlrOF4FmBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzo1NToxOVrOF4GCAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1NjIzMA==", "bodyText": "Could this be final and passed in the constructor?", "url": "https://github.com/elastic/elasticsearch/pull/53725#discussion_r394356230", "createdAt": "2020-03-18T13:45:26Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/DataFrameRowsJoiner.java", "diffHunk": "@@ -37,12 +38,12 @@\n     private final String analyticsId;\n     private final DataFrameDataExtractor dataExtractor;\n     private final ResultsPersisterService resultsPersisterService;\n+    private Supplier<Boolean> shouldRetryPersistence = () -> true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93a18beca31436dfca40b79448c23fc9f81a81a9"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM2MTQ0OA==", "bodyText": "Could you make this message consistent with others? \"...failure that cannot be...\"", "url": "https://github.com/elastic/elasticsearch/pull/53725#discussion_r394361448", "createdAt": "2020-03-18T13:52:40Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/persistence/ResultsPersisterService.java", "diffHunk": "@@ -148,12 +180,28 @@ public SearchResponse searchWithRetry(SearchRequest searchRequest,\n             } catch (ElasticsearchException e) {\n                 LOGGER.warn(\"[\" + jobId + \"] Exception while executing search action\", e);\n                 failureMessage = e.getDetailedMessage();\n+                if (isIrrecoverable(e)) {\n+                    LOGGER.warn(new ParameterizedMessage(\"[{}] experienced irrecoverable failure\", jobId), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d15da5b2c0031d75b747cfce7d526e899cb6301a"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM2Mjg5Mw==", "bodyText": "Should this be \"private\"?", "url": "https://github.com/elastic/elasticsearch/pull/53725#discussion_r394362893", "createdAt": "2020-03-18T13:54:37Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/persistence/ResultsPersisterService.java", "diffHunk": "@@ -148,12 +180,28 @@ public SearchResponse searchWithRetry(SearchRequest searchRequest,\n             } catch (ElasticsearchException e) {\n                 LOGGER.warn(\"[\" + jobId + \"] Exception while executing search action\", e);\n                 failureMessage = e.getDetailedMessage();\n+                if (isIrrecoverable(e)) {\n+                    LOGGER.warn(new ParameterizedMessage(\"[{}] experienced irrecoverable failure\", jobId), e);\n+                    throw new ElasticsearchException(\"{} experienced failure that cannot be automatically retried\", e, jobId);\n+                }\n             }\n \n             retryContext.nextIteration(\"search\", failureMessage);\n         }\n     }\n \n+    /**\n+     * @param ex The exception to check\n+     * @return true when the failure will persist no matter how many times we retry.\n+     */\n+    static boolean isIrrecoverable(Exception ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d15da5b2c0031d75b747cfce7d526e899cb6301a"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM2MzM5NA==", "bodyText": "I think times(1) is default and you can drop it.", "url": "https://github.com/elastic/elasticsearch/pull/53725#discussion_r394363394", "createdAt": "2020-03-18T13:55:19Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/utils/persistence/ResultsPersisterServiceTests.java", "diffHunk": "@@ -206,6 +210,21 @@ public void testSearchWithRetries_Failure_ShouldNotRetryAfterRandomNumberOfRetri\n         verify(client, times(maxRetries + 1)).execute(eq(SearchAction.INSTANCE), eq(SEARCH_REQUEST), any());\n     }\n \n+    public void testSearchWithRetries_FailureOnIrrecoverableError() {\n+        resultsPersisterService.setMaxFailureRetries(5);\n+\n+        doAnswer(withFailure(new ElasticsearchStatusException(\"bad search request\", RestStatus.BAD_REQUEST)))\n+            .when(client).execute(eq(SearchAction.INSTANCE), eq(SEARCH_REQUEST), any());\n+\n+        ElasticsearchException e =\n+            expectThrows(\n+                ElasticsearchException.class,\n+                () -> resultsPersisterService.searchWithRetry(SEARCH_REQUEST, JOB_ID, () -> true, (s) -> {}));\n+        assertThat(e.getMessage(), containsString(\"experienced failure that cannot be automatically retried\"));\n+\n+        verify(client, times(1)).execute(eq(SearchAction.INSTANCE), eq(SEARCH_REQUEST), any());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d15da5b2c0031d75b747cfce7d526e899cb6301a"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19c48f78f51a144a3882b56960abea283969269b", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/19c48f78f51a144a3882b56960abea283969269b", "committedDate": "2020-03-18T15:28:18Z", "message": "addressing pr comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06934f2e999cdeff1f199def03dda563de231ee6", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/06934f2e999cdeff1f199def03dda563de231ee6", "committedDate": "2020-03-18T15:29:19Z", "message": "Merge branch 'feature/ml-data-frame-analytics-retry-on-failure-fixes' of github.com:benwtrent/elasticsearch into feature/ml-data-frame-analytics-retry-on-failure-fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NTY4MTE2", "url": "https://github.com/elastic/elasticsearch/pull/53725#pullrequestreview-377568116", "createdAt": "2020-03-19T09:54:29Z", "commit": {"oid": "06934f2e999cdeff1f199def03dda563de231ee6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo1NDozMFrOF4nNRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo1NDozMFrOF4nNRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkwNjk0OA==", "bodyText": "nit: since the name is in capitals it should be immutable, i.e. Set.of() or Collections.unmodifiableSet().", "url": "https://github.com/elastic/elasticsearch/pull/53725#discussion_r394906948", "createdAt": "2020-03-19T09:54:30Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/persistence/ResultsPersisterService.java", "diffHunk": "@@ -42,6 +44,22 @@\n import java.util.stream.Collectors;\n \n public class ResultsPersisterService {\n+    /**\n+     * List of rest statuses that we consider irrecoverable\n+     */\n+    public static final Set<RestStatus> IRRECOVERABLE_REST_STATUSES = new HashSet<>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06934f2e999cdeff1f199def03dda563de231ee6"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ae4ba1ef6aab60f6c43dae72757f77592d0be61", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/7ae4ba1ef6aab60f6c43dae72757f77592d0be61", "committedDate": "2020-03-19T11:55:40Z", "message": "simplifying joiner and results handler code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d15d2058bc56af19e60422ba6012130455dbb41", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/7d15d2058bc56af19e60422ba6012130455dbb41", "committedDate": "2020-03-19T13:07:35Z", "message": "addressing pr comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NzQ0MjAw", "url": "https://github.com/elastic/elasticsearch/pull/53725#pullrequestreview-377744200", "createdAt": "2020-03-19T13:58:26Z", "commit": {"oid": "7d15d2058bc56af19e60422ba6012130455dbb41"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2007, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}