{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1Mjk4MTg2", "number": 59128, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjoxNjo0MVrOEMDOPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo1MzoyMFrOEMLscQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDcxMTY2OnYy", "diffSide": "RIGHT", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/indices.data_stream/10_basic.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjoxNjo0MVrOGt72uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzoyOTo1MlrOGt-lwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxOTc2OQ==", "bodyText": "I think that at least one of these REST tests should be updated with the full list of fields that are returned from the get data stream API.", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r450819769", "createdAt": "2020-07-07T12:16:41Z", "author": {"login": "danhermann"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/indices.data_stream/10_basic.yml", "diffHunk": "@@ -49,16 +49,16 @@ setup:\n   - do:\n       indices.get_data_stream:\n         name: \"*\"\n-  - match: { 0.name: simple-data-stream1 }\n-  - match: { 0.timestamp_field.name: '@timestamp' }\n-  - match: { 0.generation: 1 }\n-  - length: { 0.indices: 1 }\n-  - match: { 0.indices.0.index_name: '.ds-simple-data-stream1-000001' }\n-  - match: { 1.name: simple-data-stream2 }\n-  - match: { 1.timestamp_field.name: '@timestamp2' }\n-  - match: { 0.generation: 1 }\n-  - length: { 1.indices: 1 }\n-  - match: { 1.indices.0.index_name: '.ds-simple-data-stream2-000001' }\n+  - match: { data_streams.0.name: simple-data-stream1 }\n+  - match: { data_streams.0.timestamp_field.name: '@timestamp' }\n+  - match: { data_streams.0.generation: 1 }\n+  - length: { data_streams.0.indices: 1 }\n+  - match: { data_streams.0.indices.0.index_name: '.ds-simple-data-stream1-000001' }\n+  - match: { data_streams.1.name: simple-data-stream2 }\n+  - match: { data_streams.1.timestamp_field.name: '@timestamp2' }\n+  - match: { data_streams.0.generation: 1 }\n+  - length: { data_streams.1.indices: 1 }\n+  - match: { data_streams.1.indices.0.index_name: '.ds-simple-data-stream2-000001' }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dabe6e1a1eec53dce61a7549c42944c78bb6fd9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg2NDU3Nw==", "bodyText": "Thanks Dan, pushed a match for status and template (the lifecycle policy is tested in TimeseriesDataStreamIT as it's an xpack setting)", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r450864577", "createdAt": "2020-07-07T13:29:52Z", "author": {"login": "andreidan"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/indices.data_stream/10_basic.yml", "diffHunk": "@@ -49,16 +49,16 @@ setup:\n   - do:\n       indices.get_data_stream:\n         name: \"*\"\n-  - match: { 0.name: simple-data-stream1 }\n-  - match: { 0.timestamp_field.name: '@timestamp' }\n-  - match: { 0.generation: 1 }\n-  - length: { 0.indices: 1 }\n-  - match: { 0.indices.0.index_name: '.ds-simple-data-stream1-000001' }\n-  - match: { 1.name: simple-data-stream2 }\n-  - match: { 1.timestamp_field.name: '@timestamp2' }\n-  - match: { 0.generation: 1 }\n-  - length: { 1.indices: 1 }\n-  - match: { 1.indices.0.index_name: '.ds-simple-data-stream2-000001' }\n+  - match: { data_streams.0.name: simple-data-stream1 }\n+  - match: { data_streams.0.timestamp_field.name: '@timestamp' }\n+  - match: { data_streams.0.generation: 1 }\n+  - length: { data_streams.0.indices: 1 }\n+  - match: { data_streams.0.indices.0.index_name: '.ds-simple-data-stream1-000001' }\n+  - match: { data_streams.1.name: simple-data-stream2 }\n+  - match: { data_streams.1.timestamp_field.name: '@timestamp2' }\n+  - match: { data_streams.0.generation: 1 }\n+  - length: { data_streams.1.indices: 1 }\n+  - match: { data_streams.1.indices.0.index_name: '.ds-simple-data-stream2-000001' }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxOTc2OQ=="}, "originalCommit": {"oid": "7dabe6e1a1eec53dce61a7549c42944c78bb6fd9"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjA5OTY5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamAction.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo1MzoyMFrOGuJdKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwODo1Mjo1N1rOGuegpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MjYwMg==", "bodyText": "why was this top level data_streams field introduced? I don't think that this is needed?", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r451042602", "createdAt": "2020-07-07T17:53:20Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamAction.java", "diffHunk": "@@ -119,11 +214,13 @@ public void writeTo(StreamOutput out) throws IOException {\n \n         @Override\n         public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n-            builder.startArray();\n-            for (DataStream dataStream : dataStreams) {\n+            builder.startObject();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e66c0eb567658bcf89ea96b109b02b2621a3272"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0ODI3Mg==", "bodyText": "It did make it easier to verify in REST tests that the number of returned data streams was as expected with a - length: { data_streams: 0 } directive. I don't think the length directive otherwise provides a way to refer to the root level of a response.", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r451048272", "createdAt": "2020-07-07T18:02:51Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamAction.java", "diffHunk": "@@ -119,11 +214,13 @@ public void writeTo(StreamOutput out) throws IOException {\n \n         @Override\n         public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n-            builder.startArray();\n-            for (DataStream dataStream : dataStreams) {\n+            builder.startObject();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MjYwMg=="}, "originalCommit": {"oid": "4e66c0eb567658bcf89ea96b109b02b2621a3272"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4Mjc2OA==", "bodyText": "I think the - length:  directive should be improved to handle this? Now the response format is changed, because a test directive can't handle something.\nI also don't see length directive being used on the data_streams object, so maybe just keep using:\n- match: { $body: [] }\n\n?", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r451082768", "createdAt": "2020-07-07T19:08:05Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamAction.java", "diffHunk": "@@ -119,11 +214,13 @@ public void writeTo(StreamOutput out) throws IOException {\n \n         @Override\n         public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n-            builder.startArray();\n-            for (DataStream dataStream : dataStreams) {\n+            builder.startObject();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MjYwMg=="}, "originalCommit": {"oid": "4e66c0eb567658bcf89ea96b109b02b2621a3272"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4NjUxOQ==", "bodyText": "Those are fair points. \ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r451086519", "createdAt": "2020-07-07T19:15:18Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamAction.java", "diffHunk": "@@ -119,11 +214,13 @@ public void writeTo(StreamOutput out) throws IOException {\n \n         @Override\n         public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n-            builder.startArray();\n-            for (DataStream dataStream : dataStreams) {\n+            builder.startObject();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MjYwMg=="}, "originalCommit": {"oid": "4e66c0eb567658bcf89ea96b109b02b2621a3272"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NzU1Nw==", "bodyText": "Went of the top array field to be consistent with component and composable templates eg. \n  \n    \n      elasticsearch/server/src/main/java/org/elasticsearch/action/admin/indices/template/get/GetComponentTemplateAction.java\n    \n    \n         Line 146\n      in\n      3515909\n    \n    \n    \n    \n\n        \n          \n           builder.startArray(COMPONENT_TEMPLATES.getPreferredName());", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r451387557", "createdAt": "2020-07-08T08:52:57Z", "author": {"login": "andreidan"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamAction.java", "diffHunk": "@@ -119,11 +214,13 @@ public void writeTo(StreamOutput out) throws IOException {\n \n         @Override\n         public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n-            builder.startArray();\n-            for (DataStream dataStream : dataStreams) {\n+            builder.startObject();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MjYwMg=="}, "originalCommit": {"oid": "4e66c0eb567658bcf89ea96b109b02b2621a3272"}, "originalPosition": 150}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1977, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}