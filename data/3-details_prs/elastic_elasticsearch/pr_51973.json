{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjc2MzQ1", "number": 51973, "title": "Add bounds support for geogrid agg on shapes", "bodyText": "This commit adds support for geo-grid aggregations with bounds parameter\non geo_shape doc values\nThis also modifies the existing geo_point handling of bounds to be consistent with shapes.", "createdAt": "2020-02-06T02:23:26Z", "url": "https://github.com/elastic/elasticsearch/pull/51973", "merged": true, "mergeCommit": {"oid": "b136fa70791891a232840fb034413f57a2bc1d9c"}, "closed": true, "closedAt": "2020-03-02T16:39:25Z", "author": {"login": "talevy"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBhMYkAH2gAyMzcxNjc2MzQ1OmQ1MzdiMzMyOGZmMGJhMzIxYjJiZTQ2OGQ1ZjY4MjBiM2Y2NTdkMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJp7iEAFqTM2NzAzNTQxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d537b3328ff0ba321b2be468d5f6820b3f657d21", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/d537b3328ff0ba321b2be468d5f6820b3f657d21", "committedDate": "2020-02-06T02:20:24Z", "message": "Add bounds support for geogrid agg on shapes\n\nThis PR cleans up some aspects of GeoShapeCellValues\nto support the specialization of bounded geo_shape\ngeo-grid aggregations."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d7d8d61c58ac41cc12fc856127c2eec67abd939", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/6d7d8d61c58ac41cc12fc856127c2eec67abd939", "committedDate": "2020-02-06T21:13:33Z", "message": "fix behavior of tree relate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4d99f4ab536af50f6513f501469ea40e0746049", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/d4d99f4ab536af50f6513f501469ea40e0746049", "committedDate": "2020-02-11T20:00:25Z", "message": "Merge branch 'geoshape-doc-values' into gdv-shape-grid-bounds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0de38e69791edec51027ad664526c614c3b6049", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/b0de38e69791edec51027ad664526c614c3b6049", "committedDate": "2020-02-11T20:05:07Z", "message": "small cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38c508d0addc289ed6346f57399c837263dcc8a9", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/38c508d0addc289ed6346f57399c837263dcc8a9", "committedDate": "2020-02-11T20:20:50Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ae9e6778b7c9ddd84b2e9a12bf2c0076d7420d0", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/4ae9e6778b7c9ddd84b2e9a12bf2c0076d7420d0", "committedDate": "2020-02-12T00:43:15Z", "message": "in silico"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef26c358c49c6210f803f47f759546ae27664475", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/ef26c358c49c6210f803f47f759546ae27664475", "committedDate": "2020-02-13T17:49:48Z", "message": "Merge remote-tracking branch 'elastic/geoshape-doc-values' into gdv-shape-grid-bounds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcc52f757596ac3d3ef44845e6c48cc21139304a", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/fcc52f757596ac3d3ef44845e6c48cc21139304a", "committedDate": "2020-02-13T20:36:08Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "805eb5afee93f268617616983b7bc02aa87a74bb", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/805eb5afee93f268617616983b7bc02aa87a74bb", "committedDate": "2020-02-13T20:41:02Z", "message": "remove unused test code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1741d0e66de0005718751d6e47bdd695694da198", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/1741d0e66de0005718751d6e47bdd695694da198", "committedDate": "2020-02-13T22:24:28Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d60301c76a82b0d5d44b1b13de33cd2428b9f1c", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/0d60301c76a82b0d5d44b1b13de33cd2428b9f1c", "committedDate": "2020-02-20T00:29:14Z", "message": "Merge remote-tracking branch 'elastic/geoshape-doc-values' into gdv-shape-grid-bounds"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxODYwOTgy", "url": "https://github.com/elastic/elasticsearch/pull/51973#pullrequestreview-361860982", "createdAt": "2020-02-20T12:27:15Z", "commit": {"oid": "0d60301c76a82b0d5d44b1b13de33cd2428b9f1c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjoyNzoxNVrOFsReOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMzoxMzo0NFrOFsSyAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk2NzkzMA==", "bodyText": "I seems the javadocs are inaccurate in the way the explain how to iterate the values?", "url": "https://github.com/elastic/elasticsearch/pull/51973#discussion_r381967930", "createdAt": "2020-02-20T12:27:15Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/MultiGeoValues.java", "diffHunk": "@@ -58,7 +59,7 @@\n  * The set of values associated with a document might contain duplicates and\n  * comes in a non-specified order.\n  */\n-public abstract class MultiGeoValues {\n+public abstract class MultiGeoValues <G extends MultiGeoValues.GeoValue> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d60301c76a82b0d5d44b1b13de33cd2428b9f1c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3OTY1MA==", "bodyText": "Are we doing this because of the bounded case? It is unfortunate that we need to build the rectangle in all cases?", "url": "https://github.com/elastic/elasticsearch/pull/51973#discussion_r381979650", "createdAt": "2020-02-20T12:53:13Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoGridTiler.java", "diffHunk": "@@ -71,18 +71,22 @@ public int setValues(GeoShapeCellValues values, MultiGeoValues.GeoValue geoValue\n             long count = (numLonCells + 1) * (numLatCells + 1);\n             if (count == 1) {\n                 String hash = Geohash.stringEncode(bounds.minX(), bounds.minY(), precision);\n-                values.resizeCell(1);\n-                values.add(0, Geohash.longEncode(hash));\n-                return 1;\n+                Rectangle rectangle = Geohash.toBoundingBox(hash);\n+                GeoRelation relation = geoValue.relate(rectangle);\n+                if (relation != GeoRelation.QUERY_DISJOINT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d60301c76a82b0d5d44b1b13de33cd2428b9f1c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NTk3Ng==", "bodyText": "I guess I am missing something but I do not understand the benefits of having this two instances?", "url": "https://github.com/elastic/elasticsearch/pull/51973#discussion_r381985976", "createdAt": "2020-02-20T13:06:37Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoGridTiler.java", "diffHunk": "@@ -147,8 +150,9 @@ private int setValuesForFullyContainedTile(String hash, GeoShapeCellValues value\n         }\n     }\n \n-    class GeoTileGridTiler implements GeoGridTiler {\n-        public static final GeoTileGridTiler INSTANCE = new GeoTileGridTiler();\n+    class GeoTileGridTiler<G extends MultiGeoValues.GeoValue> implements GeoGridTiler<G> {\n+        public static final GeoTileGridTiler INSTANCE = new GeoTileGridTiler<>();\n+        public static final GeoTileGridTiler BOUNDED_INSTANCE = new GeoTileGridTiler<BoundedGeoShapeCellValues.BoundedGeoValue>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d60301c76a82b0d5d44b1b13de33cd2428b9f1c"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NjcwNw==", "bodyText": "Don't we need to filter out  the tiles that do not intersect with the provided bounds (if provided)", "url": "https://github.com/elastic/elasticsearch/pull/51973#discussion_r381986707", "createdAt": "2020-02-20T13:08:09Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoGridTiler.java", "diffHunk": "@@ -259,8 +268,8 @@ protected int setValuesByRasterization(int xTile, int yTile, int zTile, GeoShape\n             return valuesIndex;\n         }\n \n-        private int setValuesForFullyContainedTile(int xTile, int yTile, int zTile,\n-                                                   GeoShapeCellValues values, int valuesIndex, int targetPrecision) {\n+        private int setValuesForFullyContainedTile(int xTile, int yTile, int zTile, CellValues values, int valuesIndex,\n+                                                   int targetPrecision) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d60301c76a82b0d5d44b1b13de33cd2428b9f1c"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NzA3NQ==", "bodyText": "It is unfortunate that we need to build the rectangle evening the unbounded case", "url": "https://github.com/elastic/elasticsearch/pull/51973#discussion_r381987075", "createdAt": "2020-02-20T13:08:52Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoGridTiler.java", "diffHunk": "@@ -189,17 +193,21 @@ public int setValues(GeoShapeCellValues values, MultiGeoValues.GeoValue geoValue\n                 return 0;\n             }\n \n-\n             final double tiles = 1 << precision;\n             int minXTile = GeoTileUtils.getXTile(bounds.minX(), (long) tiles);\n             int minYTile = GeoTileUtils.getYTile(bounds.maxY(), (long) tiles);\n             int maxXTile = GeoTileUtils.getXTile(bounds.maxX(), (long) tiles);\n             int maxYTile = GeoTileUtils.getYTile(bounds.minY(), (long) tiles);\n             int count = (maxXTile - minXTile + 1) * (maxYTile - minYTile + 1);\n             if (count == 1) {\n-                values.resizeCell(1);\n-                values.add(0, GeoTileUtils.longEncodeTiles(precision, minXTile, minYTile));\n-                return 1;\n+                Rectangle rectangle = GeoTileUtils.toBoundingBox(minXTile, minYTile, precision);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d60301c76a82b0d5d44b1b13de33cd2428b9f1c"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4ODAyOQ==", "bodyText": "I think the javadocs do not reflect the way the object is iterated?", "url": "https://github.com/elastic/elasticsearch/pull/51973#discussion_r381988029", "createdAt": "2020-02-20T13:11:02Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/MultiGeoValues.java", "diffHunk": "@@ -58,7 +59,7 @@\n  * The set of values associated with a document might contain duplicates and\n  * comes in a non-specified order.\n  */\n-public abstract class MultiGeoValues {\n+public abstract class MultiGeoValues <G extends MultiGeoValues.GeoValue> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d60301c76a82b0d5d44b1b13de33cd2428b9f1c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4ODU3MA==", "bodyText": "It is unfortunate that we need to build the rectangle even in the Unbounded case.", "url": "https://github.com/elastic/elasticsearch/pull/51973#discussion_r381988570", "createdAt": "2020-02-20T13:12:05Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoGridTiler.java", "diffHunk": "@@ -189,17 +193,21 @@ public int setValues(GeoShapeCellValues values, MultiGeoValues.GeoValue geoValue\n                 return 0;\n             }\n \n-\n             final double tiles = 1 << precision;\n             int minXTile = GeoTileUtils.getXTile(bounds.minX(), (long) tiles);\n             int minYTile = GeoTileUtils.getYTile(bounds.maxY(), (long) tiles);\n             int maxXTile = GeoTileUtils.getXTile(bounds.maxX(), (long) tiles);\n             int maxYTile = GeoTileUtils.getYTile(bounds.minY(), (long) tiles);\n             int count = (maxXTile - minXTile + 1) * (maxYTile - minYTile + 1);\n             if (count == 1) {\n-                values.resizeCell(1);\n-                values.add(0, GeoTileUtils.longEncodeTiles(precision, minXTile, minYTile));\n-                return 1;\n+                Rectangle rectangle = GeoTileUtils.toBoundingBox(minXTile, minYTile, precision);\n+                GeoRelation relation = geoValue.relate(rectangle);\n+                if (relation != GeoRelation.QUERY_DISJOINT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d60301c76a82b0d5d44b1b13de33cd2428b9f1c"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4ODk2Mw==", "bodyText": "I think we need to filter out here tiles that do not intersect with the provided bounds (if provided)", "url": "https://github.com/elastic/elasticsearch/pull/51973#discussion_r381988963", "createdAt": "2020-02-20T13:12:52Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoGridTiler.java", "diffHunk": "@@ -259,8 +268,8 @@ protected int setValuesByRasterization(int xTile, int yTile, int zTile, GeoShape\n             return valuesIndex;\n         }\n \n-        private int setValuesForFullyContainedTile(int xTile, int yTile, int zTile,\n-                                                   GeoShapeCellValues values, int valuesIndex, int targetPrecision) {\n+        private int setValuesForFullyContainedTile(int xTile, int yTile, int zTile, CellValues values, int valuesIndex,\n+                                                   int targetPrecision) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d60301c76a82b0d5d44b1b13de33cd2428b9f1c"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4OTM3OA==", "bodyText": "I guess I am missing something but I cannot tell the benefits of having two instances, they seem to be used the same way?", "url": "https://github.com/elastic/elasticsearch/pull/51973#discussion_r381989378", "createdAt": "2020-02-20T13:13:44Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoGridTiler.java", "diffHunk": "@@ -147,8 +150,9 @@ private int setValuesForFullyContainedTile(String hash, GeoShapeCellValues value\n         }\n     }\n \n-    class GeoTileGridTiler implements GeoGridTiler {\n-        public static final GeoTileGridTiler INSTANCE = new GeoTileGridTiler();\n+    class GeoTileGridTiler<G extends MultiGeoValues.GeoValue> implements GeoGridTiler<G> {\n+        public static final GeoTileGridTiler INSTANCE = new GeoTileGridTiler<>();\n+        public static final GeoTileGridTiler BOUNDED_INSTANCE = new GeoTileGridTiler<BoundedGeoShapeCellValues.BoundedGeoValue>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d60301c76a82b0d5d44b1b13de33cd2428b9f1c"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80d1a254a76537cfcceccf8ad8cd9b9bc4faf136", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/80d1a254a76537cfcceccf8ad8cd9b9bc4faf136", "committedDate": "2020-02-20T16:52:34Z", "message": "Merge remote-tracking branch 'elastic/geoshape-doc-values' into gdv-shape-grid-bounds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25d694e799483c9186069de2ddb3cb2eaf3f5786", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/25d694e799483c9186069de2ddb3cb2eaf3f5786", "committedDate": "2020-02-24T18:42:05Z", "message": "Merge remote-tracking branch 'elastic/geoshape-doc-values' into gdv-shape-grid-bounds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a62474e27f0c449619a8375c10f98ef4edaa64d3", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/a62474e27f0c449619a8375c10f98ef4edaa64d3", "committedDate": "2020-02-26T00:50:06Z", "message": "Refactor to make Bounded Tilers\n\nThis refactor reverts some of the BoundedCellValues\nconstructs. Instead, BoundedGeoTileGridTiler and\nBoundedGeoHashGridTiler are introduced.\n\nAs part of this change, the definition/semantics of\ngeo_grid aggs with bounds on geo_point are modified\nto match the same behavior as geo_shapes, where it is\nthe tile of the point that must intersect the bounds\nin order for the point to be accounted for"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cedc60d256c2f9d83a27a882a0898d83e90655b2", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/cedc60d256c2f9d83a27a882a0898d83e90655b2", "committedDate": "2020-02-26T02:17:51Z", "message": "fix geohash and other edge case tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODUwMTA0", "url": "https://github.com/elastic/elasticsearch/pull/51973#pullrequestreview-364850104", "createdAt": "2020-02-26T12:15:33Z", "commit": {"oid": "cedc60d256c2f9d83a27a882a0898d83e90655b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjoxNTozNFrOFupRjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjoxNTozNFrOFupRjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ1NTA1Mw==", "bodyText": "I think in the case of a point, we can just check that the point is in bounds? We save having to compute the rectangle point can be out of the bounds but cell can still intersects", "url": "https://github.com/elastic/elasticsearch/pull/51973#discussion_r384455053", "createdAt": "2020-02-26T12:15:34Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/BoundedGeoTileGridTiler.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.search.aggregations.bucket.geogrid;\n+\n+import org.elasticsearch.common.geo.GeoBoundingBox;\n+import org.elasticsearch.common.geo.GeoRelation;\n+import org.elasticsearch.geometry.Rectangle;\n+import org.elasticsearch.index.fielddata.MultiGeoValues;\n+\n+public class BoundedGeoTileGridTiler extends GeoTileGridTiler {\n+    private final double boundsTop;\n+    private final double boundsBottom;\n+    private final double boundsWestLeft;\n+    private final double boundsWestRight;\n+    private final double boundsEastLeft;\n+    private final double boundsEastRight;\n+    private final boolean crossesDateline;\n+\n+    public BoundedGeoTileGridTiler(GeoBoundingBox geoBoundingBox) {\n+        // split geoBoundingBox into west and east boxes\n+        boundsTop = geoBoundingBox.top();\n+        boundsBottom = geoBoundingBox.bottom();\n+        if (geoBoundingBox.right() < geoBoundingBox.left()) {\n+            boundsWestLeft = -180;\n+            boundsWestRight = geoBoundingBox.right();\n+            boundsEastLeft = geoBoundingBox.left();\n+            boundsEastRight = 180;\n+            crossesDateline = true;\n+        } else { // only set east bounds\n+            boundsEastLeft = geoBoundingBox.left();\n+            boundsEastRight = geoBoundingBox.right();\n+            boundsWestLeft = 0;\n+            boundsWestRight = 0;\n+            crossesDateline = false;\n+        }\n+    }\n+\n+    public int advancePointValue(long[] values, double x, double y, int precision, int valuesIdx) {\n+        long hash = encode(x, y, precision);\n+        if (cellIntersectsGeoBoundingBox(GeoTileUtils.toBoundingBox(hash))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cedc60d256c2f9d83a27a882a0898d83e90655b2"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODUwMzY2", "url": "https://github.com/elastic/elasticsearch/pull/51973#pullrequestreview-364850366", "createdAt": "2020-02-26T12:15:59Z", "commit": {"oid": "cedc60d256c2f9d83a27a882a0898d83e90655b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjoxNTo1OVrOFupSUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjoxNTo1OVrOFupSUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ1NTI0OQ==", "bodyText": "+1", "url": "https://github.com/elastic/elasticsearch/pull/51973#discussion_r384455249", "createdAt": "2020-02-26T12:15:59Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/BoundedGeoTileGridTiler.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.search.aggregations.bucket.geogrid;\n+\n+import org.elasticsearch.common.geo.GeoBoundingBox;\n+import org.elasticsearch.common.geo.GeoRelation;\n+import org.elasticsearch.geometry.Rectangle;\n+import org.elasticsearch.index.fielddata.MultiGeoValues;\n+\n+public class BoundedGeoTileGridTiler extends GeoTileGridTiler {\n+    private final double boundsTop;\n+    private final double boundsBottom;\n+    private final double boundsWestLeft;\n+    private final double boundsWestRight;\n+    private final double boundsEastLeft;\n+    private final double boundsEastRight;\n+    private final boolean crossesDateline;\n+\n+    public BoundedGeoTileGridTiler(GeoBoundingBox geoBoundingBox) {\n+        // split geoBoundingBox into west and east boxes\n+        boundsTop = geoBoundingBox.top();\n+        boundsBottom = geoBoundingBox.bottom();\n+        if (geoBoundingBox.right() < geoBoundingBox.left()) {\n+            boundsWestLeft = -180;\n+            boundsWestRight = geoBoundingBox.right();\n+            boundsEastLeft = geoBoundingBox.left();\n+            boundsEastRight = 180;\n+            crossesDateline = true;\n+        } else { // only set east bounds\n+            boundsEastLeft = geoBoundingBox.left();\n+            boundsEastRight = geoBoundingBox.right();\n+            boundsWestLeft = 0;\n+            boundsWestRight = 0;\n+            crossesDateline = false;\n+        }\n+    }\n+\n+    public int advancePointValue(long[] values, double x, double y, int precision, int valuesIdx) {\n+        long hash = encode(x, y, precision);\n+        if (cellIntersectsGeoBoundingBox(GeoTileUtils.toBoundingBox(hash))) {\n+            values[valuesIdx] = hash;\n+            return valuesIdx + 1;\n+        }\n+        return valuesIdx;\n+    }\n+\n+    boolean cellIntersectsGeoBoundingBox(Rectangle rectangle) {\n+        return (boundsTop >= rectangle.getMinY() && boundsBottom <= rectangle.getMaxY()\n+            && (boundsEastLeft <= rectangle.getMaxX() && boundsEastRight >= rectangle.getMinX()\n+            || (crossesDateline && boundsWestLeft <= rectangle.getMaxX() && boundsWestRight >= rectangle.getMinX())));\n+    }\n+\n+    @Override\n+    public GeoRelation relateTile(MultiGeoValues.GeoValue geoValue, int xTile, int yTile, int precision) {\n+        Rectangle rectangle = GeoTileUtils.toBoundingBox(xTile, yTile, precision);\n+        if (cellIntersectsGeoBoundingBox(rectangle)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cedc60d256c2f9d83a27a882a0898d83e90655b2"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDM1NDEx", "url": "https://github.com/elastic/elasticsearch/pull/51973#pullrequestreview-367035411", "createdAt": "2020-03-02T09:02:32Z", "commit": {"oid": "cedc60d256c2f9d83a27a882a0898d83e90655b2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2848, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}