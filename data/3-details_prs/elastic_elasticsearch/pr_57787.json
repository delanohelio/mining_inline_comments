{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwMjI4NDE3", "number": 57787, "title": "EQL: Introduce tie breaker support", "bodyText": "Allow a field inside the data to be used as a tie breaker for events\nthat have the same timestamp.\nThe default points to event.sequence (based on ECS) which for the\nmoment, needs to exist in the schema.\nIf used, the tie-breaker always requires a non-null value since it is\nused inside search_after which requires a non-null value.\nWhile at it, improved integration testing by:\n\nusing aliases in mapping inside of concrete fields\nremoving the data processing (not needed anymore thanks to aliases)\n\nFix #56824", "createdAt": "2020-06-07T17:21:04Z", "url": "https://github.com/elastic/elasticsearch/pull/57787", "merged": true, "mergeCommit": {"oid": "e5719ecb474b32730d93afdbb6834a32b0b2df8b"}, "closed": true, "closedAt": "2020-06-09T19:37:15Z", "author": {"login": "costin"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABco_KtPAH2gAyNDMwMjI4NDE3OmM4YjgxOTYyZmZlYzI5MzQ2ZWZlYTgyMTI5M2YxZGFlNjg2OTg4NDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpr-8ngFqTQyNzU2MDQ3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c8b81962ffec29346efea821293f1dae68698847", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/c8b81962ffec29346efea821293f1dae68698847", "committedDate": "2020-06-07T17:18:46Z", "message": "EQL: Introduce tie breaker support\n\nAllow a field inside the data to be used as a tie breaker for events\nthat have the same timestamp.\nThe default points to event.sequence (based on ECS) which for the\nmoment, needs to exist in the schema.\nIf used, the tie-breaker always requires a non-null value since it is\nused inside `search_after` which requires a non-null value.\n\nFix #56824"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODM3OTY4", "url": "https://github.com/elastic/elasticsearch/pull/57787#pullrequestreview-425837968", "createdAt": "2020-06-07T17:21:46Z", "commit": {"oid": "c8b81962ffec29346efea821293f1dae68698847"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxNzoyMTo0NlrOGgKwQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxNzoyNTo1NVrOGgKxkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4MzgxMQ==", "bodyText": "Changed this one since Eclipse cannot run it (it's an invalid method name according to the Java conventions).", "url": "https://github.com/elastic/elasticsearch/pull/57787#discussion_r436383811", "createdAt": "2020-06-07T17:21:46Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/qa/common/src/main/java/org/elasticsearch/test/eql/CommonEqlActionTestCase.java", "diffHunk": "@@ -162,8 +152,9 @@ public void cleanup() throws Exception {\n                 name = spec.note();\n             }\n             if (Strings.isNullOrEmpty(name)) {\n-                name = spec.query();\n+                name = \"\" + (counter.get() + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8b81962ffec29346efea821293f1dae68698847"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4MzgzMA==", "bodyText": "Using aliases just like in ECS.", "url": "https://github.com/elastic/elasticsearch/pull/57787#discussion_r436383830", "createdAt": "2020-06-07T17:22:04Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/qa/common/src/main/resources/mapping-default.json", "diffHunk": "@@ -3,10 +3,18 @@\n         \"command_line\" : {\n             \"type\" : \"keyword\"\n         },\n+        \"event_type\" : {\n+            \"type\" : \"keyword\"\n+        },\n         \"event\" : {\n             \"properties\" : {\n                 \"category\" : {\n-                    \"type\" : \"keyword\"\n+                    \"type\" : \"alias\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8b81962ffec29346efea821293f1dae68698847"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4Mzg2NQ==", "bodyText": "These were already in the test_queries file.", "url": "https://github.com/elastic/elasticsearch/pull/57787#discussion_r436383865", "createdAt": "2020-06-07T17:22:28Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/qa/common/src/main/resources/test_queries_supported.toml", "diffHunk": "@@ -187,28 +187,6 @@ query = \"file where 66.0 / serial_event_id == 1\"\n expected_event_ids = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 46]\n query = \"process where serial_event_id + ((1 + 3) * 2 / (3 - 1)) * 2 == 54 or 70 + serial_event_id < 100\"\n \n-[[queries]]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8b81962ffec29346efea821293f1dae68698847"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NDAzNg==", "bodyText": "@astefan @rw-access case sensitivity biting back. We need to figure out where we stand on this by the end of the month.", "url": "https://github.com/elastic/elasticsearch/pull/57787#discussion_r436384036", "createdAt": "2020-06-07T17:24:43Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/qa/common/src/main/resources/test_queries_unsupported.toml", "diffHunk": "@@ -12,6 +12,15 @@\n # query = 'process where serial_event_id = 1'\n # expected_event_ids  = [1]\n \n+\n+# fails because of string check - msbuild does not match MSBuild", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8b81962ffec29346efea821293f1dae68698847"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NDA4Ng==", "bodyText": "Currently the tie breaker is mandatory - which makes sense for ECS and our tests but not the rest, I plan to make it optional.", "url": "https://github.com/elastic/elasticsearch/pull/57787#discussion_r436384086", "createdAt": "2020-06-07T17:25:15Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/qa/rest/src/test/resources/rest-api-spec/test/eql/10_basic.yml", "diffHunk": "@@ -9,6 +9,7 @@ setup:\n               _id:    1\n           - event:\n               - category: process\n+              - sequence: 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8b81962ffec29346efea821293f1dae68698847"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NDE0Ng==", "bodyText": "This needs to be cleaned-up since we don't use it - future work if anybody wants to pick it.", "url": "https://github.com/elastic/elasticsearch/pull/57787#discussion_r436384146", "createdAt": "2020-06-07T17:25:55Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/action/EqlSearchRequest.java", "diffHunk": "@@ -272,6 +293,7 @@ public boolean equals(Object o) {\n                 Objects.equals(indicesOptions, that.indicesOptions) &&\n                 Objects.equals(filter, that.filter) &&\n                 Objects.equals(timestampField, that.timestampField) &&\n+                Objects.equals(tieBreakerField, that.tieBreakerField) &&\n                 Objects.equals(eventCategoryField, that.eventCategoryField) &&\n                 Objects.equals(implicitJoinKeyField, that.implicitJoinKeyField) &&\n                 Objects.equals(searchAfterBuilder, that.searchAfterBuilder) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8b81962ffec29346efea821293f1dae68698847"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11bd66e12df0271ed6179f71acb4414f412a8bec", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/11bd66e12df0271ed6179f71acb4414f412a8bec", "committedDate": "2020-06-08T07:40:23Z", "message": "Make tie breaker field optional\nDeclare EQL the high level rest client aware of tie breaker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5d7cbd7630ddf509f3a6ff0739bd824eeffc855", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/f5d7cbd7630ddf509f3a6ff0739bd824eeffc855", "committedDate": "2020-06-08T09:16:41Z", "message": "Introduce EmptyAttribute to avoid having to deal with nulls\n\nIt still requires filtering to avoid it leaking through-out the plan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9fb43d7d6cbf30f883be3de9f11b12e92e9cf81", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/b9fb43d7d6cbf30f883be3de9f11b12e92e9cf81", "committedDate": "2020-06-08T09:38:24Z", "message": "Remove EmptyAttribute from projection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2ODMyNzA2", "url": "https://github.com/elastic/elasticsearch/pull/57787#pullrequestreview-426832706", "createdAt": "2020-06-09T06:46:59Z", "commit": {"oid": "b9fb43d7d6cbf30f883be3de9f11b12e92e9cf81"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjo0Njo1OVrOGg675g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMDo0ODo0N1rOGhDt9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE3MzIyMg==", "bodyText": "Unnecessary empty line?", "url": "https://github.com/elastic/elasticsearch/pull/57787#discussion_r437173222", "createdAt": "2020-06-09T06:46:59Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/SequenceStateMachine.java", "diffHunk": "@@ -27,17 +27,24 @@\n     /** this ignores the key */\n     private final long[] timestampMarkers;\n \n+    private final Comparable<Object>[] tieBreakerMarkers;\n+    private final boolean hasTieBreaker;\n+\n     private final int completionStage;\n \n     /** list of completed sequences - separate to avoid polluting the other stages */\n     private final List<Sequence> completed;\n \n-    public SequenceStateMachine(int stages) {\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    public SequenceStateMachine(int stages, boolean hasTieBreaker) {\n         this.completionStage = stages - 1;\n         this.stageToKeys = new StageToKeys(completionStage);\n         this.keyToSequences = new KeyToSequences(completionStage);\n         this.timestampMarkers = new long[completionStage];\n+        this.tieBreakerMarkers = new Comparable[completionStage];\n         this.completed = new LinkedList<>();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9fb43d7d6cbf30f883be3de9f11b12e92e9cf81"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxMjM0NA==", "bodyText": "Ordinal doesn't feel right in this context tbh. How about TimeOrdering?", "url": "https://github.com/elastic/elasticsearch/pull/57787#discussion_r437312344", "createdAt": "2020-06-09T10:39:27Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/TimeOrdinal.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.eql.execution.sequence;\n+\n+import org.elasticsearch.xpack.ql.capabilities.Resolvable;\n+import org.elasticsearch.xpack.ql.expression.Attribute;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static java.util.Arrays.asList;\n+import static java.util.Collections.singletonList;\n+\n+/**\n+ * Time ordinal for a given event.\n+ * It is an internal construct that wraps the mandatory timestamp attribute and the optional application tie-breaker.\n+ */\n+public class TimeOrdinal implements Resolvable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9fb43d7d6cbf30f883be3de9f11b12e92e9cf81"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxNzEwOQ==", "bodyText": "I know this is old code, but shouldn't this be called timestamp?", "url": "https://github.com/elastic/elasticsearch/pull/57787#discussion_r437317109", "createdAt": "2020-06-09T10:48:47Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/plan/physical/SequenceExec.java", "diffHunk": "@@ -16,52 +16,59 @@\n import org.elasticsearch.xpack.ql.expression.NamedExpression;\n import org.elasticsearch.xpack.ql.tree.NodeInfo;\n import org.elasticsearch.xpack.ql.tree.Source;\n-import org.elasticsearch.xpack.ql.util.CollectionUtils;\n \n import java.util.ArrayList;\n import java.util.List;\n import java.util.Objects;\n \n import static java.util.Collections.singletonList;\n+import static org.elasticsearch.xpack.ql.util.CollectionUtils.combine;\n \n public class SequenceExec extends PhysicalPlan {\n \n     private final List<List<Attribute>> keys;\n     private final Attribute timestamp;\n+    private final Attribute tieBreaker;\n \n     public SequenceExec(Source source,\n                         List<List<Attribute>> keys,\n                         List<PhysicalPlan> matches,\n                         List<Attribute> untilKeys,\n                         PhysicalPlan until,\n-                        Attribute timestampField) {\n-        this(source, CollectionUtils.combine(matches, until), CollectionUtils.combine(keys, singletonList(untilKeys)), timestampField);\n+                        Attribute timestampField,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9fb43d7d6cbf30f883be3de9f11b12e92e9cf81"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9058ae4aec903af858265c18d975c4b099c1b2e4", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/9058ae4aec903af858265c18d975c4b099c1b2e4", "committedDate": "2020-06-09T17:03:33Z", "message": "Polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76fff87bea723b8b55745ad6eb11dabc4702a1b6", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/76fff87bea723b8b55745ad6eb11dabc4702a1b6", "committedDate": "2020-06-09T18:45:14Z", "message": "Merge branch 'master' into eql/tie-breaker"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NTYwNDc5", "url": "https://github.com/elastic/elasticsearch/pull/57787#pullrequestreview-427560479", "createdAt": "2020-06-09T21:31:39Z", "commit": {"oid": "76fff87bea723b8b55745ad6eb11dabc4702a1b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMTozMTozOVrOGhdMXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMTozMTozOVrOGhdMXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzczNDQ5Mg==", "bodyText": "tiebreaker is one word, tiebreaker_field maybe?", "url": "https://github.com/elastic/elasticsearch/pull/57787#discussion_r437734492", "createdAt": "2020-06-09T21:31:39Z", "author": {"login": "aleksmaus"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/eql/EqlSearchRequest.java", "diffHunk": "@@ -43,9 +43,11 @@\n     private int fetchSize = 50;\n     private SearchAfterBuilder searchAfterBuilder;\n     private String query;\n+    private String tieBreakerField;\n \n     static final String KEY_FILTER = \"filter\";\n     static final String KEY_TIMESTAMP_FIELD = \"timestamp_field\";\n+    static final String KEY_TIE_BREAKER_FIELD = \"tie_breaker_field\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76fff87bea723b8b55745ad6eb11dabc4702a1b6"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3800, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}