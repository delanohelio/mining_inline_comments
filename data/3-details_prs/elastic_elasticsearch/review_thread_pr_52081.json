{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNTk3NjE4", "number": 52081, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTowNToxNVrODeJp9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTowNToxNVrODeJp9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTQyMDcxOnYy", "diffSide": "RIGHT", "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/Docker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTowNToxNVrOFnKRVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzozMjo1MlrOFnNPAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNzA2Mw==", "bodyText": "Figured I'd add the token \"this could be simpler\" comment \ud83d\ude09\nArrays.stream(result.stdout.split(\"\\n\"))\n                .map(String::trim)\n                .noneMatch(String::isEmpty);", "url": "https://github.com/elastic/elasticsearch/pull/52081#discussion_r376607063", "createdAt": "2020-02-07T21:05:15Z", "author": {"login": "mark-vieira"}, "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/Docker.java", "diffHunk": "@@ -76,7 +77,11 @@\n      * @param distribution details about the docker image to potentially load.\n      */\n     public static void ensureImageIsLoaded(Distribution distribution) {\n-        final long count = sh.run(\"docker image ls --format '{{.Repository}}' \" + distribution.flavor.name).stdout.split(\"\\n\").length;\n+        Shell.Result result = sh.run(\"docker image ls --format '{{.Repository}}' \" + distribution.flavor.name);\n+\n+        final long count = Arrays.stream(result.stdout.split(\"\\n\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b2cb2404430ef4e2a2f78d830b3750711bb455b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NTYxNw==", "bodyText": "I'll break up the complicated filter, but I think I'll keep the count approach.", "url": "https://github.com/elastic/elasticsearch/pull/52081#discussion_r376655617", "createdAt": "2020-02-07T23:32:52Z", "author": {"login": "williamrandolph"}, "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/Docker.java", "diffHunk": "@@ -76,7 +77,11 @@\n      * @param distribution details about the docker image to potentially load.\n      */\n     public static void ensureImageIsLoaded(Distribution distribution) {\n-        final long count = sh.run(\"docker image ls --format '{{.Repository}}' \" + distribution.flavor.name).stdout.split(\"\\n\").length;\n+        Shell.Result result = sh.run(\"docker image ls --format '{{.Repository}}' \" + distribution.flavor.name);\n+\n+        final long count = Arrays.stream(result.stdout.split(\"\\n\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNzA2Mw=="}, "originalCommit": {"oid": "9b2cb2404430ef4e2a2f78d830b3750711bb455b"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4842, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}