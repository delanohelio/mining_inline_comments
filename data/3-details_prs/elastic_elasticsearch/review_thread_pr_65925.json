{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzNDU5Nzc0", "number": 65925, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNzo0OTozN1rOFBpCmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNzo0OTozN1rOFBpCmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjY1MzA1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/frozen-indices/src/internalClusterTest/java/org/elasticsearch/index/engine/FrozenIndexIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNzo0OTozN1rOIAZ0YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOTo1NjoyMlrOIAeoKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI5MzkyMA==", "bodyText": "@pgomulka I've asked for you to take a look at this backport because this test is having trouble with locales and older JDK versions and I think you have expertise in this area. As far as I can tell, the behaviour difference is in JDK8, hence this line, but it'd be good if you could give it a quick look and see if there are any other gotchas here. I'm ok with skipping the check that we parse the non-English string in JDK8, it's not really the point of this PR it's just a good way to test it.\nThe rest of the PR is already reviewed, it's just this one test that needs attention.", "url": "https://github.com/elastic/elasticsearch/pull/65925#discussion_r537293920", "createdAt": "2020-12-07T07:49:37Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/frozen-indices/src/internalClusterTest/java/org/elasticsearch/index/engine/FrozenIndexIT.java", "diffHunk": "@@ -97,4 +103,73 @@ public void testTimestampRangeRecalculatedOnStalePrimaryAllocation() throws IOEx\n         assertThat(timestampFieldRange.getMax(), equalTo(Instant.parse(\"2010-01-06T02:03:04.567Z\").getMillis()));\n     }\n \n+    public void testTimestampFieldTypeExposedByAllIndicesServices() throws Exception {\n+        internalCluster().startNodes(between(2, 4));\n+\n+        final String locale;\n+        final String date;\n+\n+        final boolean isJdk8 = JavaVersion.current().getVersion().get(0) == 8; // JDK8 doesn't reliably know French", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b25ecb72a378ec62e3900e70cb0a821ba83e717"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM3MjcxMg==", "bodyText": "things to bear in mind is what locales are supported with -Dlocale.providers=COMPAT in newer jdks. French is a safe choice. For instance here https://www.oracle.com/java/technologies/javase/java9locales.html see The locales supported by the COMPAT provider are as follows.\nI think it should be ok to use jdk8 same way as jkd9+. If it fails we could look into a reproduction line.\nBut also agree comparing jdk behaviour is not the point of this test .", "url": "https://github.com/elastic/elasticsearch/pull/65925#discussion_r537372712", "createdAt": "2020-12-07T09:56:22Z", "author": {"login": "pgomulka"}, "path": "x-pack/plugin/frozen-indices/src/internalClusterTest/java/org/elasticsearch/index/engine/FrozenIndexIT.java", "diffHunk": "@@ -97,4 +103,73 @@ public void testTimestampRangeRecalculatedOnStalePrimaryAllocation() throws IOEx\n         assertThat(timestampFieldRange.getMax(), equalTo(Instant.parse(\"2010-01-06T02:03:04.567Z\").getMillis()));\n     }\n \n+    public void testTimestampFieldTypeExposedByAllIndicesServices() throws Exception {\n+        internalCluster().startNodes(between(2, 4));\n+\n+        final String locale;\n+        final String date;\n+\n+        final boolean isJdk8 = JavaVersion.current().getVersion().get(0) == 8; // JDK8 doesn't reliably know French", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI5MzkyMA=="}, "originalCommit": {"oid": "8b25ecb72a378ec62e3900e70cb0a821ba83e717"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1770, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}