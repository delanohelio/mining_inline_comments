{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5Nzc1MTEz", "number": 65633, "title": "Add Rollup ILM Action", "bodyText": "this commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index.\nRelates #42720.\nCloses #48003.", "createdAt": "2020-11-30T19:53:11Z", "url": "https://github.com/elastic/elasticsearch/pull/65633", "merged": true, "mergeCommit": {"oid": "5811deb580ed1d72e1b412d3d29418deeaac9317"}, "closed": true, "closedAt": "2021-01-29T01:48:10Z", "author": {"login": "talevy"}, "timelineItems": {"totalCount": 55, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhrLvugBqjQwNTM3NjcwNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd00eBQgFqTU3OTAwOTA0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cee8de1e89c7ad7bc4b9d250b759504c48a79a1c", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/cee8de1e89c7ad7bc4b9d250b759504c48a79a1c", "committedDate": "2020-11-30T19:52:03Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}, "afterCommit": {"oid": "206102f2e5b32fda86f27da6cf695fd71e1ea691", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/206102f2e5b32fda86f27da6cf695fd71e1ea691", "committedDate": "2020-11-30T20:15:20Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "206102f2e5b32fda86f27da6cf695fd71e1ea691", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/206102f2e5b32fda86f27da6cf695fd71e1ea691", "committedDate": "2020-11-30T20:15:20Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}, "afterCommit": {"oid": "bcb732b6a705c35d23172de7da36645593fe5a1b", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/bcb732b6a705c35d23172de7da36645593fe5a1b", "committedDate": "2020-11-30T20:41:59Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bcb732b6a705c35d23172de7da36645593fe5a1b", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/bcb732b6a705c35d23172de7da36645593fe5a1b", "committedDate": "2020-11-30T20:41:59Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}, "afterCommit": {"oid": "1826396b969d6f1b9e5822a9ba0a2b6d1f76f2d8", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/1826396b969d6f1b9e5822a9ba0a2b6d1f76f2d8", "committedDate": "2020-11-30T21:45:00Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1826396b969d6f1b9e5822a9ba0a2b6d1f76f2d8", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/1826396b969d6f1b9e5822a9ba0a2b6d1f76f2d8", "committedDate": "2020-11-30T21:45:00Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}, "afterCommit": {"oid": "05169e92d52d194831d6fd722241e2805f3eb16a", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/05169e92d52d194831d6fd722241e2805f3eb16a", "committedDate": "2020-11-30T21:57:20Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05169e92d52d194831d6fd722241e2805f3eb16a", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/05169e92d52d194831d6fd722241e2805f3eb16a", "committedDate": "2020-11-30T21:57:20Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}, "afterCommit": {"oid": "33d61ad06d9f6e7cc86c443c6880f87edcf9004a", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/33d61ad06d9f6e7cc86c443c6880f87edcf9004a", "committedDate": "2020-11-30T23:15:38Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33d61ad06d9f6e7cc86c443c6880f87edcf9004a", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/33d61ad06d9f6e7cc86c443c6880f87edcf9004a", "committedDate": "2020-11-30T23:15:38Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}, "afterCommit": {"oid": "7a73bd4dc8f74e8a4779f4b2821b1bf71f5a8845", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/7a73bd4dc8f74e8a4779f4b2821b1bf71f5a8845", "committedDate": "2020-12-07T23:33:10Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a73bd4dc8f74e8a4779f4b2821b1bf71f5a8845", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/7a73bd4dc8f74e8a4779f4b2821b1bf71f5a8845", "committedDate": "2020-12-07T23:33:10Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}, "afterCommit": {"oid": "c09d9a79a6cc85cd76c88a5c6f530578caf6e811", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/c09d9a79a6cc85cd76c88a5c6f530578caf6e811", "committedDate": "2020-12-07T23:33:33Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "176af3698b9373ade97d4cc75344efcee97d6a4b", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/176af3698b9373ade97d4cc75344efcee97d6a4b", "committedDate": "2020-12-08T05:48:27Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c09d9a79a6cc85cd76c88a5c6f530578caf6e811", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/c09d9a79a6cc85cd76c88a5c6f530578caf6e811", "committedDate": "2020-12-07T23:33:33Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}, "afterCommit": {"oid": "176af3698b9373ade97d4cc75344efcee97d6a4b", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/176af3698b9373ade97d4cc75344efcee97d6a4b", "committedDate": "2020-12-08T05:48:27Z", "message": "Add Rollup ILM Action\n\nthis commit introduces a new Rollup ILM Action that allows indices\nto be rolled up according to a specific rollup config. The\naction also allows for the new rolled up index to be associated with\na different policy than the original/source index. Optionally,\nthe original index can be deleted.\n\nRelates #42720.\n\nCloses #48003."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca3e6951babba1f9dd815a8a46b4b2012d15d832", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/ca3e6951babba1f9dd815a8a46b4b2012d15d832", "committedDate": "2020-12-08T15:38:03Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3631adc00350833f8c5e73df82d59561e44d8356", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/3631adc00350833f8c5e73df82d59561e44d8356", "committedDate": "2020-12-08T15:59:56Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MzAyOTE1", "url": "https://github.com/elastic/elasticsearch/pull/65633#pullrequestreview-548302915", "createdAt": "2020-12-09T15:28:57Z", "commit": {"oid": "3631adc00350833f8c5e73df82d59561e44d8356"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNToyODo1N1rOICaklQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNToyODo1N1rOICaklQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQwMzQxMw==", "bodyText": "I realize this is a matter of taste, but this function name really sounds like it's intended to take an action (delete), not return a flag value.  Normally I don't care, but in this case I really think getDeleteOriginalIndex() (or maybe shouldDeleteOriginalIndex) would be a better name.", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r539403413", "createdAt": "2020-12-09T15:28:57Z", "author": {"login": "not-napoleon"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/RollupILMAction.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.xpack.core.ilm.Step.StepKey;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupActionConfig;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * A {@link LifecycleAction} which calls {@link org.elasticsearch.xpack.core.rollup.v2.RollupAction} on an index\n+ */\n+public class RollupILMAction implements LifecycleAction {\n+    public static final String NAME = \"rollup\";\n+\n+    private static final ParseField CONFIG_FIELD = new ParseField(\"config\");\n+    private static final ParseField DELETE_FIELD = new ParseField(\"delete_original\");\n+    private static final ParseField POLICY_FIELD = new ParseField(\"rollup_policy\");\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static final ConstructingObjectParser<RollupILMAction, Void> PARSER = new ConstructingObjectParser<>(NAME,\n+        a -> new RollupILMAction((RollupActionConfig) a[0], (boolean) a[1], (String) a[2]));\n+\n+    private final RollupActionConfig config;\n+    private final boolean deleteOriginalIndex;\n+    private final String rollupPolicy;\n+\n+    static {\n+        PARSER.declareField(ConstructingObjectParser.constructorArg(),\n+            (p, c) -> RollupActionConfig.fromXContent(p), CONFIG_FIELD, ObjectParser.ValueType.OBJECT);\n+        PARSER.declareBoolean(ConstructingObjectParser.optionalConstructorArg(), DELETE_FIELD);\n+        PARSER.declareString(ConstructingObjectParser.optionalConstructorArg(), POLICY_FIELD);\n+    }\n+\n+    public static RollupILMAction parse(XContentParser parser) {\n+        return PARSER.apply(parser, null);\n+    }\n+\n+    public RollupILMAction(RollupActionConfig config, boolean deleteOriginalIndex, @Nullable String rollupPolicy) {\n+        this.config = config;\n+        this.deleteOriginalIndex = deleteOriginalIndex;\n+        this.rollupPolicy = rollupPolicy;\n+    }\n+\n+    public RollupILMAction(StreamInput in) throws IOException {\n+        this(new RollupActionConfig(in), in.readBoolean(), in.readOptionalString());\n+    }\n+\n+    @Override\n+    public String getWriteableName() {\n+        return NAME;\n+    }\n+\n+    RollupActionConfig config() {\n+        return config;\n+    }\n+\n+    boolean deleteOriginalIndex() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3631adc00350833f8c5e73df82d59561e44d8356"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "184c7cad6497cf68d00f0e49caf39a0757c0d2b4", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/184c7cad6497cf68d00f0e49caf39a0757c0d2b4", "committedDate": "2020-12-09T18:13:33Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "434f49cfdebf188fa2ccc21464baecf252965a43", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/434f49cfdebf188fa2ccc21464baecf252965a43", "committedDate": "2020-12-09T18:19:38Z", "message": "respond to review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNDUwODUy", "url": "https://github.com/elastic/elasticsearch/pull/65633#pullrequestreview-551450852", "createdAt": "2020-12-14T14:59:27Z", "commit": {"oid": "434f49cfdebf188fa2ccc21464baecf252965a43"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDo1OToyN1rOIFUiVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNTo1NzowOFrOIFXaFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ1MDI2Mw==", "bodyText": "Should rollup index name prefix and postfix be configurable?\nShould we allow users to configure behavior (fail, overrwrite, no-op) in case the rollup index already exists?", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r542450263", "createdAt": "2020-12-14T14:59:27Z", "author": {"login": "csoulios"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/RollupStep.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsRequest;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.ClusterStateObserver;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupAction;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupActionConfig;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Rolls up index using a {@link RollupActionConfig}\n+ */\n+public class RollupStep extends AsyncActionStep {\n+    public static final String NAME = \"rollup\";\n+    public static final String ROLLUP_INDEX_NAME_POSTFIX = \"-rollup\";\n+\n+    private final RollupActionConfig config;\n+    private final String rollupPolicy;\n+\n+    public RollupStep(StepKey key, StepKey nextStepKey, Client client, RollupActionConfig config, String rollupPolicy) {\n+        super(key, nextStepKey, client);\n+        this.config = config;\n+        this.rollupPolicy = rollupPolicy;\n+    }\n+\n+    @Override\n+    public boolean isRetryable() {\n+        return false;\n+    }\n+\n+    @Override\n+    public void performAction(IndexMetadata indexMetadata, ClusterState currentState, ClusterStateObserver observer, Listener listener) {\n+        String originalIndex = indexMetadata.getIndex().getName();\n+        String rollupIndex = originalIndex + ROLLUP_INDEX_NAME_POSTFIX;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434f49cfdebf188fa2ccc21464baecf252965a43"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3MzI2Mg==", "bodyText": "nit: I guess this is the optional policy field for the rollup index. I understand this will be explained in the docs but maybe we should find a more representative name. Something like rollup_index_policy", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r542473262", "createdAt": "2020-12-14T15:27:36Z", "author": {"login": "csoulios"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/RollupILMAction.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.xpack.core.ilm.Step.StepKey;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupActionConfig;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * A {@link LifecycleAction} which calls {@link org.elasticsearch.xpack.core.rollup.v2.RollupAction} on an index\n+ */\n+public class RollupILMAction implements LifecycleAction {\n+    public static final String NAME = \"rollup\";\n+\n+    private static final ParseField CONFIG_FIELD = new ParseField(\"config\");\n+    private static final ParseField DELETE_FIELD = new ParseField(\"delete_original\");\n+    private static final ParseField POLICY_FIELD = new ParseField(\"rollup_policy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434f49cfdebf188fa2ccc21464baecf252965a43"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3NzE4Mw==", "bodyText": "I thought we would allow RollupILMAction in \"hot\" phase similar to SearchableSnapshotAction. Is this a next step?", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r542477183", "createdAt": "2020-12-14T15:32:28Z", "author": {"login": "csoulios"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/TimeseriesLifecycleType.java", "diffHunk": "@@ -44,25 +45,36 @@\n         ReadOnlyAction.NAME, ShrinkAction.NAME, ForceMergeAction.NAME, SearchableSnapshotAction.NAME);\n     static final List<String> ORDERED_VALID_WARM_ACTIONS = Arrays.asList(SetPriorityAction.NAME, UnfollowAction.NAME, ReadOnlyAction.NAME,\n         AllocateAction.NAME, MigrateAction.NAME, ShrinkAction.NAME, ForceMergeAction.NAME);\n-    static final List<String> ORDERED_VALID_COLD_ACTIONS = Arrays.asList(SetPriorityAction.NAME, UnfollowAction.NAME, AllocateAction.NAME,\n-        MigrateAction.NAME, FreezeAction.NAME, SearchableSnapshotAction.NAME);\n+    static final List<String> ORDERED_VALID_COLD_ACTIONS;\n     static final List<String> ORDERED_VALID_DELETE_ACTIONS = Arrays.asList(WaitForSnapshotAction.NAME, DeleteAction.NAME);\n     static final Set<String> VALID_HOT_ACTIONS = Sets.newHashSet(ORDERED_VALID_HOT_ACTIONS);\n     static final Set<String> VALID_WARM_ACTIONS = Sets.newHashSet(ORDERED_VALID_WARM_ACTIONS);\n-    static final Set<String> VALID_COLD_ACTIONS = Sets.newHashSet(ORDERED_VALID_COLD_ACTIONS);\n+    static final Set<String> VALID_COLD_ACTIONS;\n     static final Set<String> VALID_DELETE_ACTIONS = Sets.newHashSet(ORDERED_VALID_DELETE_ACTIONS);\n-    private static final Map<String, Set<String>> ALLOWED_ACTIONS = Map.of(\n-        HOT_PHASE, VALID_HOT_ACTIONS,\n-        WARM_PHASE, VALID_WARM_ACTIONS,\n-        COLD_PHASE, VALID_COLD_ACTIONS,\n-        DELETE_PHASE, VALID_DELETE_ACTIONS);\n+    private static final Map<String, Set<String>> ALLOWED_ACTIONS;\n \n     static final Set<String> HOT_ACTIONS_THAT_REQUIRE_ROLLOVER = Sets.newHashSet(ReadOnlyAction.NAME, ShrinkAction.NAME,\n         ForceMergeAction.NAME, SearchableSnapshotAction.NAME);\n     // a set of actions that cannot be defined (executed) after the managed index has been mounted as searchable snapshot\n     static final Set<String> ACTIONS_CANNOT_FOLLOW_SEARCHABLE_SNAPSHOT = Sets.newHashSet(ShrinkAction.NAME, ForceMergeAction.NAME,\n         FreezeAction.NAME, SearchableSnapshotAction.NAME);\n \n+    static {\n+        if (RollupV2.isEnabled()) {\n+            ORDERED_VALID_COLD_ACTIONS = Arrays.asList(SetPriorityAction.NAME, UnfollowAction.NAME, AllocateAction.NAME,\n+                MigrateAction.NAME, FreezeAction.NAME, SearchableSnapshotAction.NAME, RollupILMAction.NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434f49cfdebf188fa2ccc21464baecf252965a43"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ5NzMwMw==", "bodyText": "Is it enough to only check for index being read-only?\nDoes it make sense to check that rollover has completed? (Maybe checking the index.lifecycle.indexing_complete index setting?", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r542497303", "createdAt": "2020-12-14T15:57:08Z", "author": {"login": "csoulios"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/RollupILMAction.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.xpack.core.ilm.Step.StepKey;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupActionConfig;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * A {@link LifecycleAction} which calls {@link org.elasticsearch.xpack.core.rollup.v2.RollupAction} on an index\n+ */\n+public class RollupILMAction implements LifecycleAction {\n+    public static final String NAME = \"rollup\";\n+\n+    private static final ParseField CONFIG_FIELD = new ParseField(\"config\");\n+    private static final ParseField DELETE_FIELD = new ParseField(\"delete_original\");\n+    private static final ParseField POLICY_FIELD = new ParseField(\"rollup_policy\");\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static final ConstructingObjectParser<RollupILMAction, Void> PARSER = new ConstructingObjectParser<>(NAME,\n+        a -> new RollupILMAction((RollupActionConfig) a[0], (boolean) a[1], (String) a[2]));\n+\n+    private final RollupActionConfig config;\n+    private final boolean deleteOriginalIndex;\n+    private final String rollupPolicy;\n+\n+    static {\n+        PARSER.declareField(ConstructingObjectParser.constructorArg(),\n+            (p, c) -> RollupActionConfig.fromXContent(p), CONFIG_FIELD, ObjectParser.ValueType.OBJECT);\n+        PARSER.declareBoolean(ConstructingObjectParser.optionalConstructorArg(), DELETE_FIELD);\n+        PARSER.declareString(ConstructingObjectParser.optionalConstructorArg(), POLICY_FIELD);\n+    }\n+\n+    public static RollupILMAction parse(XContentParser parser) {\n+        return PARSER.apply(parser, null);\n+    }\n+\n+    public RollupILMAction(RollupActionConfig config, boolean deleteOriginalIndex, @Nullable String rollupPolicy) {\n+        this.config = config;\n+        this.deleteOriginalIndex = deleteOriginalIndex;\n+        this.rollupPolicy = rollupPolicy;\n+    }\n+\n+    public RollupILMAction(StreamInput in) throws IOException {\n+        this(new RollupActionConfig(in), in.readBoolean(), in.readOptionalString());\n+    }\n+\n+    @Override\n+    public String getWriteableName() {\n+        return NAME;\n+    }\n+\n+    RollupActionConfig config() {\n+        return config;\n+    }\n+\n+    boolean shouldDeleteOriginalIndex() {\n+        return deleteOriginalIndex;\n+    }\n+\n+    String rollupPolicy() {\n+        return rollupPolicy;\n+    }\n+\n+    @Override\n+    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n+        builder.startObject();\n+        builder.field(CONFIG_FIELD.getPreferredName(), config);\n+        builder.field(DELETE_FIELD.getPreferredName(), deleteOriginalIndex);\n+        if (rollupPolicy != null) {\n+            builder.field(POLICY_FIELD.getPreferredName(), rollupPolicy);\n+        }\n+        builder.endObject();\n+        return builder;\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        config.writeTo(out);\n+        out.writeBoolean(deleteOriginalIndex);\n+        out.writeOptionalString(rollupPolicy);\n+    }\n+\n+    @Override\n+    public boolean isSafeAction() {\n+        return false;\n+    }\n+\n+    @Override\n+    public List<Step> toSteps(Client client, String phase, StepKey nextStepKey) {\n+        StepKey checkNotWriteIndex = new StepKey(phase, NAME, CheckNotDataStreamWriteIndexStep.NAME);\n+        StepKey readOnlyKey = new StepKey(phase, NAME, ReadOnlyAction.NAME);\n+        StepKey rollupKey = new StepKey(phase, NAME, NAME);\n+        StepKey waitForNoFollowerStepKey = new StepKey(phase, NAME, WaitForNoFollowersStep.NAME);\n+        StepKey deleteStepKey = new StepKey(phase, NAME, DeleteStep.NAME);\n+\n+        Settings readOnlySettings = Settings.builder().put(IndexMetadata.SETTING_BLOCKS_WRITE, true).build();\n+\n+        CheckNotDataStreamWriteIndexStep checkNotWriteIndexStep = new CheckNotDataStreamWriteIndexStep(checkNotWriteIndex,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434f49cfdebf188fa2ccc21464baecf252965a43"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe1f124b2b4c0937b50868ca1d048f0c245cd832", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/fe1f124b2b4c0937b50868ca1d048f0c245cd832", "committedDate": "2020-12-14T18:39:57Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "638cbe7762635caef46320750168dba7e5108f15", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/638cbe7762635caef46320750168dba7e5108f15", "committedDate": "2020-12-14T18:48:22Z", "message": "fix for latest master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91371d905bccdf4ce4aaa73907eb5ab15f39a1f4", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/91371d905bccdf4ce4aaa73907eb5ab15f39a1f4", "committedDate": "2020-12-21T21:53:15Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e46d4ec99c6d411670a2772060517ee5dc5b8f2c", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/e46d4ec99c6d411670a2772060517ee5dc5b8f2c", "committedDate": "2020-12-21T22:09:12Z", "message": "remove delete option and add to hot before snapshotting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MTE2Mzgw", "url": "https://github.com/elastic/elasticsearch/pull/65633#pullrequestreview-557116380", "createdAt": "2020-12-22T14:26:28Z", "commit": {"oid": "e46d4ec99c6d411670a2772060517ee5dc5b8f2c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNDoyNjoyOFrOIJ89dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNDoyNjoyOFrOIJ89dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMwNjg3MA==", "bodyText": "should RollupILMAction be added in a if (RolupV2.isEnabled() {.....} block?", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r547306870", "createdAt": "2020-12-22T14:26:28Z", "author": {"login": "csoulios"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/TimeseriesLifecycleType.java", "diffHunk": "@@ -41,27 +42,38 @@\n     static final String DELETE_PHASE = \"delete\";\n     static final List<String> VALID_PHASES = Arrays.asList(HOT_PHASE, WARM_PHASE, COLD_PHASE, DELETE_PHASE);\n     static final List<String> ORDERED_VALID_HOT_ACTIONS = Arrays.asList(SetPriorityAction.NAME, UnfollowAction.NAME, RolloverAction.NAME,\n-        ReadOnlyAction.NAME, ShrinkAction.NAME, ForceMergeAction.NAME, SearchableSnapshotAction.NAME);\n+        ReadOnlyAction.NAME, ShrinkAction.NAME, ForceMergeAction.NAME, RollupILMAction.NAME, SearchableSnapshotAction.NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46d4ec99c6d411670a2772060517ee5dc5b8f2c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e38fd65495c67ee4e88619bb20467de327c3745", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/3e38fd65495c67ee4e88619bb20467de327c3745", "committedDate": "2021-01-04T18:12:32Z", "message": "enable rollup_v2 flag for ilm tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "277549b9e119fbb07876826a1e41673d56433d38", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/277549b9e119fbb07876826a1e41673d56433d38", "committedDate": "2021-01-04T19:01:08Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f7f6f3239da37d42903707bf2d6014557dcc19d", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/6f7f6f3239da37d42903707bf2d6014557dcc19d", "committedDate": "2021-01-04T19:40:26Z", "message": "put Rollup behind feature flag in ilm hot phase actions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff38007898682c672b122f03fd00be85467fa435", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/ff38007898682c672b122f03fd00be85467fa435", "committedDate": "2021-01-04T20:08:18Z", "message": "fix rollup ilm action test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5b1bb94e1ee359a092e5d88410e8f7a1d33074e", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/a5b1bb94e1ee359a092e5d88410e8f7a1d33074e", "committedDate": "2021-01-05T00:08:56Z", "message": "really fix it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTM1Mzkw", "url": "https://github.com/elastic/elasticsearch/pull/65633#pullrequestreview-562935390", "createdAt": "2021-01-06T18:15:43Z", "commit": {"oid": "a5b1bb94e1ee359a092e5d88410e8f7a1d33074e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxODoxNTo0M1rOIPRFLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxODo0MDoyN1rOIPSCIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg3OTQwNg==", "bodyText": "We use prefixes for most of the other ILM actions (searchable snapshot and shrinking), I think it'd be nice to stick with that convention for rollup indices also", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r552879406", "createdAt": "2021-01-06T18:15:43Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/RollupStep.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsRequest;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.ClusterStateObserver;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupAction;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupActionConfig;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Rolls up index using a {@link RollupActionConfig}\n+ */\n+public class RollupStep extends AsyncActionStep {\n+    public static final String NAME = \"rollup\";\n+    public static final String ROLLUP_INDEX_NAME_POSTFIX = \"-rollup\";\n+\n+    private final RollupActionConfig config;\n+    private final String rollupPolicy;\n+\n+    public RollupStep(StepKey key, StepKey nextStepKey, Client client, RollupActionConfig config, String rollupPolicy) {\n+        super(key, nextStepKey, client);\n+        this.config = config;\n+        this.rollupPolicy = rollupPolicy;\n+    }\n+\n+    @Override\n+    public boolean isRetryable() {\n+        return false;\n+    }\n+\n+    @Override\n+    public void performAction(IndexMetadata indexMetadata, ClusterState currentState, ClusterStateObserver observer, Listener listener) {\n+        String originalIndex = indexMetadata.getIndex().getName();\n+        String rollupIndex = originalIndex + ROLLUP_INDEX_NAME_POSTFIX;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b1bb94e1ee359a092e5d88410e8f7a1d33074e"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg4MDIyMA==", "bodyText": "What happens if response.isAcknowledge() is false here?", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r552880220", "createdAt": "2021-01-06T18:16:29Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/RollupStep.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsRequest;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.ClusterStateObserver;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupAction;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupActionConfig;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Rolls up index using a {@link RollupActionConfig}\n+ */\n+public class RollupStep extends AsyncActionStep {\n+    public static final String NAME = \"rollup\";\n+    public static final String ROLLUP_INDEX_NAME_POSTFIX = \"-rollup\";\n+\n+    private final RollupActionConfig config;\n+    private final String rollupPolicy;\n+\n+    public RollupStep(StepKey key, StepKey nextStepKey, Client client, RollupActionConfig config, String rollupPolicy) {\n+        super(key, nextStepKey, client);\n+        this.config = config;\n+        this.rollupPolicy = rollupPolicy;\n+    }\n+\n+    @Override\n+    public boolean isRetryable() {\n+        return false;\n+    }\n+\n+    @Override\n+    public void performAction(IndexMetadata indexMetadata, ClusterState currentState, ClusterStateObserver observer, Listener listener) {\n+        String originalIndex = indexMetadata.getIndex().getName();\n+        String rollupIndex = originalIndex + ROLLUP_INDEX_NAME_POSTFIX;\n+        RollupAction.Request request = new RollupAction.Request(originalIndex, rollupIndex, config);\n+        if (rollupPolicy == null) {\n+            getClient().execute(RollupAction.INSTANCE, request,\n+                ActionListener.wrap(response -> listener.onResponse(true), listener::onFailure));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b1bb94e1ee359a092e5d88410e8f7a1d33074e"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg5MTEzMQ==", "bodyText": "I think these can be split into two steps, that way the update settings request can be retryable, rather than a failure of that step causing the entire rollup to fail", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r552891131", "createdAt": "2021-01-06T18:32:37Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/RollupStep.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsRequest;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.ClusterStateObserver;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupAction;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupActionConfig;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Rolls up index using a {@link RollupActionConfig}\n+ */\n+public class RollupStep extends AsyncActionStep {\n+    public static final String NAME = \"rollup\";\n+    public static final String ROLLUP_INDEX_NAME_POSTFIX = \"-rollup\";\n+\n+    private final RollupActionConfig config;\n+    private final String rollupPolicy;\n+\n+    public RollupStep(StepKey key, StepKey nextStepKey, Client client, RollupActionConfig config, String rollupPolicy) {\n+        super(key, nextStepKey, client);\n+        this.config = config;\n+        this.rollupPolicy = rollupPolicy;\n+    }\n+\n+    @Override\n+    public boolean isRetryable() {\n+        return false;\n+    }\n+\n+    @Override\n+    public void performAction(IndexMetadata indexMetadata, ClusterState currentState, ClusterStateObserver observer, Listener listener) {\n+        String originalIndex = indexMetadata.getIndex().getName();\n+        String rollupIndex = originalIndex + ROLLUP_INDEX_NAME_POSTFIX;\n+        RollupAction.Request request = new RollupAction.Request(originalIndex, rollupIndex, config);\n+        if (rollupPolicy == null) {\n+            getClient().execute(RollupAction.INSTANCE, request,\n+                ActionListener.wrap(response -> listener.onResponse(true), listener::onFailure));\n+        } else {\n+            Settings setPolicySettings = Settings.builder().put(LifecycleSettings.LIFECYCLE_NAME, rollupPolicy).build();\n+            UpdateSettingsRequest updateSettingsRequest = new UpdateSettingsRequest(rollupIndex)\n+                .masterNodeTimeout(getMasterTimeout(currentState)).settings(setPolicySettings);\n+            getClient().execute(RollupAction.INSTANCE, request,\n+                ActionListener.wrap(rollupResponse -> {\n+                    getClient().admin().indices().updateSettings(updateSettingsRequest,\n+                        ActionListener.wrap(settingsResponse -> listener.onResponse(true), listener::onFailure));\n+                }, listener::onFailure));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b1bb94e1ee359a092e5d88410e8f7a1d33074e"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg5MTk2MQ==", "bodyText": "I think it would be really nice to have this be retryable for the first release, maybe we can brainstorm why it isn't retryable and how to make it so? Otherwise I think we may end up having to do surgery on the indices if they get into an error and can't proceed past the rollup stage", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r552891961", "createdAt": "2021-01-06T18:34:15Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/RollupStep.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsRequest;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.ClusterStateObserver;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupAction;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupActionConfig;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Rolls up index using a {@link RollupActionConfig}\n+ */\n+public class RollupStep extends AsyncActionStep {\n+    public static final String NAME = \"rollup\";\n+    public static final String ROLLUP_INDEX_NAME_POSTFIX = \"-rollup\";\n+\n+    private final RollupActionConfig config;\n+    private final String rollupPolicy;\n+\n+    public RollupStep(StepKey key, StepKey nextStepKey, Client client, RollupActionConfig config, String rollupPolicy) {\n+        super(key, nextStepKey, client);\n+        this.config = config;\n+        this.rollupPolicy = rollupPolicy;\n+    }\n+\n+    @Override\n+    public boolean isRetryable() {\n+        return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b1bb94e1ee359a092e5d88410e8f7a1d33074e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg5NTAxMQ==", "bodyText": "This should use the ReadOnlyStep (which uses the new API for marking things as read only) rather than updating the settings manually", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r552895011", "createdAt": "2021-01-06T18:40:27Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/RollupILMAction.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.xpack.core.ilm.Step.StepKey;\n+import org.elasticsearch.xpack.core.rollup.v2.RollupActionConfig;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * A {@link LifecycleAction} which calls {@link org.elasticsearch.xpack.core.rollup.v2.RollupAction} on an index\n+ */\n+public class RollupILMAction implements LifecycleAction {\n+    public static final String NAME = \"rollup\";\n+\n+    private static final ParseField CONFIG_FIELD = new ParseField(\"config\");\n+    private static final ParseField POLICY_FIELD = new ParseField(\"rollup_policy\");\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static final ConstructingObjectParser<RollupILMAction, Void> PARSER = new ConstructingObjectParser<>(NAME,\n+        a -> new RollupILMAction((RollupActionConfig) a[0], (String) a[1]));\n+\n+    private final RollupActionConfig config;\n+    private final String rollupPolicy;\n+\n+    static {\n+        PARSER.declareField(ConstructingObjectParser.constructorArg(),\n+            (p, c) -> RollupActionConfig.fromXContent(p), CONFIG_FIELD, ObjectParser.ValueType.OBJECT);\n+        PARSER.declareString(ConstructingObjectParser.optionalConstructorArg(), POLICY_FIELD);\n+    }\n+\n+    public static RollupILMAction parse(XContentParser parser) {\n+        return PARSER.apply(parser, null);\n+    }\n+\n+    public RollupILMAction(RollupActionConfig config, @Nullable String rollupPolicy) {\n+        this.config = config;\n+        this.rollupPolicy = rollupPolicy;\n+    }\n+\n+    public RollupILMAction(StreamInput in) throws IOException {\n+        this(new RollupActionConfig(in), in.readOptionalString());\n+    }\n+\n+    @Override\n+    public String getWriteableName() {\n+        return NAME;\n+    }\n+\n+    RollupActionConfig config() {\n+        return config;\n+    }\n+\n+    String rollupPolicy() {\n+        return rollupPolicy;\n+    }\n+\n+    @Override\n+    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n+        builder.startObject();\n+        builder.field(CONFIG_FIELD.getPreferredName(), config);\n+        if (rollupPolicy != null) {\n+            builder.field(POLICY_FIELD.getPreferredName(), rollupPolicy);\n+        }\n+        builder.endObject();\n+        return builder;\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        config.writeTo(out);\n+        out.writeOptionalString(rollupPolicy);\n+    }\n+\n+    @Override\n+    public boolean isSafeAction() {\n+        return false;\n+    }\n+\n+    @Override\n+    public List<Step> toSteps(Client client, String phase, StepKey nextStepKey) {\n+        StepKey checkNotWriteIndex = new StepKey(phase, NAME, CheckNotDataStreamWriteIndexStep.NAME);\n+        StepKey readOnlyKey = new StepKey(phase, NAME, ReadOnlyAction.NAME);\n+        StepKey rollupKey = new StepKey(phase, NAME, NAME);\n+        Settings readOnlySettings = Settings.builder().put(IndexMetadata.SETTING_BLOCKS_WRITE, true).build();\n+        CheckNotDataStreamWriteIndexStep checkNotWriteIndexStep = new CheckNotDataStreamWriteIndexStep(checkNotWriteIndex,\n+            readOnlyKey);\n+        UpdateSettingsStep readOnlyStep = new UpdateSettingsStep(readOnlyKey, rollupKey, client, readOnlySettings);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b1bb94e1ee359a092e5d88410e8f7a1d33074e"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c430366c72f5da07a8b5b1a24a10aa536271a9a0", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/c430366c72f5da07a8b5b1a24a10aa536271a9a0", "committedDate": "2021-01-12T19:35:03Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d954f55e98e3861a22b2ad6eb17901f970e56c9b", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/d954f55e98e3861a22b2ad6eb17901f970e56c9b", "committedDate": "2021-01-12T23:29:04Z", "message": "update rollup ilm to more steps and retryable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4679677d68b09903d04eaedfe831d09f2c768151", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/4679677d68b09903d04eaedfe831d09f2c768151", "committedDate": "2021-01-15T00:20:23Z", "message": "fix test bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4091a96cfb93d871955202d623544389df343d57", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/4091a96cfb93d871955202d623544389df343d57", "committedDate": "2021-01-15T00:20:43Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffcc4a27b19ffc924fd50ac4f2a86441be060098", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/ffcc4a27b19ffc924fd50ac4f2a86441be060098", "committedDate": "2021-01-19T17:19:37Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9523a8dcce52071069df7273b63eedb9f9cac38", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/d9523a8dcce52071069df7273b63eedb9f9cac38", "committedDate": "2021-01-19T19:02:41Z", "message": "simplify and fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d53427eb63b3a3af9491a4a322f94f2d6e27ffea", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/d53427eb63b3a3af9491a4a322f94f2d6e27ffea", "committedDate": "2021-01-19T19:45:45Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05de2e1892d07a7cbd3319252dbbd9e1ae64a3b1", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/05de2e1892d07a7cbd3319252dbbd9e1ae64a3b1", "committedDate": "2021-01-20T18:15:06Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f8ebcc6bb8cbed7c32e3708f8a0f0fe0d8cea40", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/0f8ebcc6bb8cbed7c32e3708f8a0f0fe0d8cea40", "committedDate": "2021-01-20T18:38:28Z", "message": "re-introduce policy updating by way of a new step"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1905843ab5e5017a1725d9778ad4ba1493742942", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/1905843ab5e5017a1725d9778ad4ba1493742942", "committedDate": "2021-01-21T22:30:02Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b622f39144026b310e2515cf8ceb1b7ccfda1420", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/b622f39144026b310e2515cf8ceb1b7ccfda1420", "committedDate": "2021-01-21T22:36:27Z", "message": "fix merge exceptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "968e7aa646641635c9d4e5d1e159f993ad8acdec", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/968e7aa646641635c9d4e5d1e159f993ad8acdec", "committedDate": "2021-01-25T16:01:34Z", "message": "fix test setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d03113bdf55d7bb1747c4d5560657834f88f996", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/1d03113bdf55d7bb1747c4d5560657834f88f996", "committedDate": "2021-01-25T16:01:45Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc1ODc3MDA0", "url": "https://github.com/elastic/elasticsearch/pull/65633#pullrequestreview-575877004", "createdAt": "2021-01-25T22:56:07Z", "commit": {"oid": "1d03113bdf55d7bb1747c4d5560657834f88f996"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQyMjo1NjowN1rOIZ959Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQyMjo1OTowNFrOIZ9_bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA5OTU3Mw==", "bodyText": "Can we add a comment here about why this is okay to hardcode to true? ie, is it truly okay to ignore if the request is not acknowledged?", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r564099573", "createdAt": "2021-01-25T22:56:07Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/RollupStep.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.ClusterStateObserver;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.xpack.core.rollup.RollupActionConfig;\n+import org.elasticsearch.xpack.core.rollup.action.RollupAction;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Rolls up index using a {@link RollupActionConfig}\n+ */\n+public class RollupStep extends AsyncActionStep {\n+    public static final String NAME = \"rollup\";\n+    public static final String ROLLUP_INDEX_NAME_PREFIX = \"rollup-\";\n+\n+    private final RollupActionConfig config;\n+\n+    public RollupStep(StepKey key, StepKey nextStepKey, Client client, RollupActionConfig config) {\n+        super(key, nextStepKey, client);\n+        this.config = config;\n+    }\n+\n+    public static String getRollupIndexName(String index) {\n+        return ROLLUP_INDEX_NAME_PREFIX + index;\n+    }\n+\n+    @Override\n+    public boolean isRetryable() {\n+        return true;\n+    }\n+\n+    @Override\n+    public void performAction(IndexMetadata indexMetadata, ClusterState currentState, ClusterStateObserver observer, Listener listener) {\n+        String originalIndex = indexMetadata.getIndex().getName();\n+        RollupAction.Request request = new RollupAction.Request(originalIndex, getRollupIndexName(originalIndex), config);\n+        getClient().execute(RollupAction.INSTANCE, request,\n+            ActionListener.wrap(response -> listener.onResponse(true), listener::onFailure));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d03113bdf55d7bb1747c4d5560657834f88f996"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDEwMDk3NQ==", "bodyText": "This should check the acknowledged flag, throwing an exception if it was not acknowledged (so that the settings update will be retried)", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r564100975", "createdAt": "2021-01-25T22:59:04Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/UpdateRollupIndexPolicyStep.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsRequest;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.ClusterStateObserver;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.settings.Settings;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Updates the lifecycle policy for the rollup index for the original/currently managed index\n+ */\n+public class UpdateRollupIndexPolicyStep extends AsyncActionStep {\n+    public static final String NAME = \"update-rollup-policy\";\n+\n+    private final String rollupPolicy;\n+\n+    public UpdateRollupIndexPolicyStep(StepKey key, StepKey nextStepKey, Client client, String rollupPolicy) {\n+        super(key, nextStepKey, client);\n+        this.rollupPolicy = rollupPolicy;\n+    }\n+\n+    @Override\n+    public boolean isRetryable() {\n+        return true;\n+    }\n+\n+    public String getRollupPolicy() {\n+        return rollupPolicy;\n+    }\n+\n+    @Override\n+    public void performAction(IndexMetadata indexMetadata, ClusterState currentState, ClusterStateObserver observer, Listener listener) {\n+        String rollupIndex = RollupStep.getRollupIndexName(indexMetadata.getIndex().getName());\n+        Settings settings = Settings.builder().put(LifecycleSettings.LIFECYCLE_NAME, rollupPolicy).build();\n+        UpdateSettingsRequest updateSettingsRequest = new UpdateSettingsRequest(rollupIndex)\n+            .masterNodeTimeout(getMasterTimeout(currentState))\n+            .settings(settings);\n+        getClient().admin().indices().updateSettings(updateSettingsRequest,\n+                ActionListener.wrap(response -> listener.onResponse(true), listener::onFailure));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d03113bdf55d7bb1747c4d5560657834f88f996"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96a1622568a2729d0dc6d5d4d38235d366b99d84", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/96a1622568a2729d0dc6d5d4d38235d366b99d84", "committedDate": "2021-01-26T21:36:54Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9e31d52239ddd5a93de4d0d76b6d711da3673d8", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/c9e31d52239ddd5a93de4d0d76b6d711da3673d8", "committedDate": "2021-01-26T22:09:41Z", "message": "docs and cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d1fc31f0c3207e48e62a648fe2153f6dcff2234", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/1d1fc31f0c3207e48e62a648fe2153f6dcff2234", "committedDate": "2021-01-26T22:11:00Z", "message": "add docs to ILM Actions page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49b58022be6b6b197dbafe25f58ed3fc23474aca", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/49b58022be6b6b197dbafe25f58ed3fc23474aca", "committedDate": "2021-01-26T22:19:32Z", "message": "place ILM Rollup Docs behind unreleased branch conditional"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc2ODEwNTQ0", "url": "https://github.com/elastic/elasticsearch/pull/65633#pullrequestreview-576810544", "createdAt": "2021-01-26T22:20:21Z", "commit": {"oid": "49b58022be6b6b197dbafe25f58ed3fc23474aca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQyMjoyMDoyMVrOIatJMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQyMjoyMDoyMVrOIatJMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDg3MzUyMA==", "bodyText": "Hey @jrodewig, mind letting me know if I did this right? thanks!", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r564873520", "createdAt": "2021-01-26T22:20:21Z", "author": {"login": "talevy"}, "path": "docs/reference/ilm/ilm-actions.asciidoc", "diffHunk": "@@ -63,4 +67,7 @@ include::actions/ilm-set-priority.asciidoc[]\n include::actions/ilm-shrink.asciidoc[]\n include::actions/ilm-unfollow.asciidoc[]\n include::actions/ilm-wait-for-snapshot.asciidoc[]\n+\n+ifdef::permanently-unreleased-branch[]\n include::actions/ilm-rollup.asciidoc[]\n+endif::[]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49b58022be6b6b197dbafe25f58ed3fc23474aca"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3MzM5NjYz", "url": "https://github.com/elastic/elasticsearch/pull/65633#pullrequestreview-577339663", "createdAt": "2021-01-27T13:35:42Z", "commit": {"oid": "49b58022be6b6b197dbafe25f58ed3fc23474aca"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxMzozNTo0MlrOIbH5Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxMzozNTo1MFrOIbH5Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTMxMTc0Ng==", "bodyText": "I don't think we need the caps here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For more information about Rollup, check out the <<rollup-api, Rollup Action Documentation>>\n          \n          \n            \n            For more information about rollup, see the <<rollup-api, rollup action documentation>>", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r565311746", "createdAt": "2021-01-27T13:35:42Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-rollup.asciidoc", "diffHunk": "@@ -0,0 +1,56 @@\n+[role=\"xpack\"]\n+[[ilm-rollup]]\n+=== Rollup\n+\n+Phases allowed: hot, cold.\n+\n+Aggregates an index's time series data and stores the results in a new read-only\n+index. For example, you can roll up hourly data into daily or weekly summaries.\n+\n+For more information about Rollup, check out the <<rollup-api, Rollup Action Documentation>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49b58022be6b6b197dbafe25f58ed3fc23474aca"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTMxMTgzNA==", "bodyText": "Ditto on caps.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The Rollup configuration, a more detailed description of the\n          \n          \n            \n            Rollup configuration specification can be found <<rollup-api-request-body,here>>.\n          \n          \n            \n            The rollup configuration, a more detailed description of the\n          \n          \n            \n            rollup configuration specification can be found <<rollup-api-request-body,here>>.", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r565311834", "createdAt": "2021-01-27T13:35:50Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-rollup.asciidoc", "diffHunk": "@@ -0,0 +1,56 @@\n+[role=\"xpack\"]\n+[[ilm-rollup]]\n+=== Rollup\n+\n+Phases allowed: hot, cold.\n+\n+Aggregates an index's time series data and stores the results in a new read-only\n+index. For example, you can roll up hourly data into daily or weekly summaries.\n+\n+For more information about Rollup, check out the <<rollup-api, Rollup Action Documentation>>\n+\n+The name of the rolled up index will be the original index name of the managed index prefixed\n+with `rollup-`.\n+\n+[[ilm-rollup-options]]\n+==== Rollup options\n+`config`::\n+(Required, integer)\n+The Rollup configuration, a more detailed description of the\n+Rollup configuration specification can be found <<rollup-api-request-body,here>>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49b58022be6b6b197dbafe25f58ed3fc23474aca"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3Mzc2OTIw", "url": "https://github.com/elastic/elasticsearch/pull/65633#pullrequestreview-577376920", "createdAt": "2021-01-27T14:13:47Z", "commit": {"oid": "49b58022be6b6b197dbafe25f58ed3fc23474aca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxNDoxMzo0N1rOIbJmxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxNDoxMzo0N1rOIbJmxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTMzOTg0Ng==", "bodyText": "Removes a duplicate space.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The name of an  <<index-lifecycle-management, {ilm}>> ({ilm-init}) policy to associate\n          \n          \n            \n            The name of an <<index-lifecycle-management, {ilm}>> ({ilm-init}) policy to associate", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r565339846", "createdAt": "2021-01-27T14:13:47Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-rollup.asciidoc", "diffHunk": "@@ -0,0 +1,56 @@\n+[role=\"xpack\"]\n+[[ilm-rollup]]\n+=== Rollup\n+\n+Phases allowed: hot, cold.\n+\n+Aggregates an index's time series data and stores the results in a new read-only\n+index. For example, you can roll up hourly data into daily or weekly summaries.\n+\n+For more information about Rollup, check out the <<rollup-api, Rollup Action Documentation>>\n+\n+The name of the rolled up index will be the original index name of the managed index prefixed\n+with `rollup-`.\n+\n+[[ilm-rollup-options]]\n+==== Rollup options\n+`config`::\n+(Required, integer)\n+The Rollup configuration, a more detailed description of the\n+Rollup configuration specification can be found <<rollup-api-request-body,here>>.\n+\n+`rollup_policy`::\n+(Optional, string)\n+The name of an  <<index-lifecycle-management, {ilm}>> ({ilm-init}) policy to associate", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49b58022be6b6b197dbafe25f58ed3fc23474aca"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e340f07b9f38779daffd2868b7a96d8f8987b002", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/e340f07b9f38779daffd2868b7a96d8f8987b002", "committedDate": "2021-01-27T20:34:20Z", "message": "Update docs/reference/ilm/actions/ilm-rollup.asciidoc\n\nCo-authored-by: James Rodewig <40268737+jrodewig@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7efb1a30ea9dc776b4678ade68dbe44ab08a4970", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/7efb1a30ea9dc776b4678ade68dbe44ab08a4970", "committedDate": "2021-01-27T20:34:30Z", "message": "Update docs/reference/ilm/actions/ilm-rollup.asciidoc\n\nCo-authored-by: James Rodewig <40268737+jrodewig@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10487aab499e4bfa5d19b9a5eb48dd7141d22b3d", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/10487aab499e4bfa5d19b9a5eb48dd7141d22b3d", "committedDate": "2021-01-27T20:34:38Z", "message": "Update docs/reference/ilm/actions/ilm-rollup.asciidoc\n\nCo-authored-by: James Rodewig <40268737+jrodewig@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "382915d803b5cf755fef06bd7f6e3a2b4c594c7a", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/382915d803b5cf755fef06bd7f6e3a2b4c594c7a", "committedDate": "2021-01-27T20:36:39Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4Nzg0MDgz", "url": "https://github.com/elastic/elasticsearch/pull/65633#pullrequestreview-578784083", "createdAt": "2021-01-28T22:10:50Z", "commit": {"oid": "382915d803b5cf755fef06bd7f6e3a2b4c594c7a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQyMjoxMDo1MFrOIcM3FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQyMjoxMDo1MFrOIcM3FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjQ0MTc0OQ==", "bodyText": "I missed this before, but if we're going to rollup right after a shrink and force merge, what's the point of shrinking and force merging? Should we just rollup first and then do the shrink/forcemerge?\n(I think this is okay to leave as is for now, but we might want to investigate making them mutually exclusive in the future so we don't waste resources doing a shrink and force merge right before we rollup and create a new index anyway. At the very least I think maybe force merge should move to after the Rollup?)", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r566441749", "createdAt": "2021-01-28T22:10:50Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/TimeseriesLifecycleType.java", "diffHunk": "@@ -40,28 +41,43 @@\n     static final String COLD_PHASE = \"cold\";\n     static final String DELETE_PHASE = \"delete\";\n     static final List<String> VALID_PHASES = Arrays.asList(HOT_PHASE, WARM_PHASE, COLD_PHASE, DELETE_PHASE);\n-    static final List<String> ORDERED_VALID_HOT_ACTIONS = Arrays.asList(SetPriorityAction.NAME, UnfollowAction.NAME, RolloverAction.NAME,\n-        ReadOnlyAction.NAME, ShrinkAction.NAME, ForceMergeAction.NAME, SearchableSnapshotAction.NAME);\n+    static final List<String> ORDERED_VALID_HOT_ACTIONS;\n     static final List<String> ORDERED_VALID_WARM_ACTIONS = Arrays.asList(SetPriorityAction.NAME, UnfollowAction.NAME, ReadOnlyAction.NAME,\n         AllocateAction.NAME, MigrateAction.NAME, ShrinkAction.NAME, ForceMergeAction.NAME);\n-    static final List<String> ORDERED_VALID_COLD_ACTIONS = Arrays.asList(SetPriorityAction.NAME, UnfollowAction.NAME, AllocateAction.NAME,\n-        MigrateAction.NAME, FreezeAction.NAME, SearchableSnapshotAction.NAME);\n+    static final List<String> ORDERED_VALID_COLD_ACTIONS;\n     static final List<String> ORDERED_VALID_DELETE_ACTIONS = Arrays.asList(WaitForSnapshotAction.NAME, DeleteAction.NAME);\n-    static final Set<String> VALID_HOT_ACTIONS = Sets.newHashSet(ORDERED_VALID_HOT_ACTIONS);\n+    static final Set<String> VALID_HOT_ACTIONS;\n     static final Set<String> VALID_WARM_ACTIONS = Sets.newHashSet(ORDERED_VALID_WARM_ACTIONS);\n-    static final Set<String> VALID_COLD_ACTIONS = Sets.newHashSet(ORDERED_VALID_COLD_ACTIONS);\n+    static final Set<String> VALID_COLD_ACTIONS;\n     static final Set<String> VALID_DELETE_ACTIONS = Sets.newHashSet(ORDERED_VALID_DELETE_ACTIONS);\n-    private static final Map<String, Set<String>> ALLOWED_ACTIONS = Map.of(\n-        HOT_PHASE, VALID_HOT_ACTIONS,\n-        WARM_PHASE, VALID_WARM_ACTIONS,\n-        COLD_PHASE, VALID_COLD_ACTIONS,\n-        DELETE_PHASE, VALID_DELETE_ACTIONS);\n+    private static final Map<String, Set<String>> ALLOWED_ACTIONS;\n \n     static final Set<String> HOT_ACTIONS_THAT_REQUIRE_ROLLOVER = Sets.newHashSet(ReadOnlyAction.NAME, ShrinkAction.NAME,\n-        ForceMergeAction.NAME, SearchableSnapshotAction.NAME);\n+        ForceMergeAction.NAME, RollupILMAction.NAME, SearchableSnapshotAction.NAME);\n     // a set of actions that cannot be defined (executed) after the managed index has been mounted as searchable snapshot\n     static final Set<String> ACTIONS_CANNOT_FOLLOW_SEARCHABLE_SNAPSHOT = Sets.newHashSet(ShrinkAction.NAME, ForceMergeAction.NAME,\n-        FreezeAction.NAME, SearchableSnapshotAction.NAME);\n+        FreezeAction.NAME, SearchableSnapshotAction.NAME, RollupILMAction.NAME);\n+\n+    static {\n+        if (RollupV2.isEnabled()) {\n+            ORDERED_VALID_HOT_ACTIONS = Arrays.asList(SetPriorityAction.NAME, UnfollowAction.NAME, RolloverAction.NAME,\n+                ReadOnlyAction.NAME, ShrinkAction.NAME, ForceMergeAction.NAME, RollupILMAction.NAME, SearchableSnapshotAction.NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "382915d803b5cf755fef06bd7f6e3a2b4c594c7a"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e01d06362c53063f816af74d4837e97a723fe399", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/e01d06362c53063f816af74d4837e97a723fe399", "committedDate": "2021-01-28T23:19:16Z", "message": "Merge remote-tracking branch 'elastic/master' into rollup-ilm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec30764aa31ee8910b7d850492246198e201e70c", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/ec30764aa31ee8910b7d850492246198e201e70c", "committedDate": "2021-01-29T00:58:27Z", "message": "prioritize rollup before shrink/forcemerge in hot phase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5MDA5MDQz", "url": "https://github.com/elastic/elasticsearch/pull/65633#pullrequestreview-579009043", "createdAt": "2021-01-29T07:49:06Z", "commit": {"oid": "ec30764aa31ee8910b7d850492246198e201e70c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNzo0OTowNlrOIcYnOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNzo0OTowNlrOIcYnOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYzNDI5OQ==", "bodyText": "@talevy How does this work in the context of data streams? Does it work in the context of data streams? What are the index names there?", "url": "https://github.com/elastic/elasticsearch/pull/65633#discussion_r566634299", "createdAt": "2021-01-29T07:49:06Z", "author": {"login": "ruflin"}, "path": "docs/reference/ilm/actions/ilm-rollup.asciidoc", "diffHunk": "@@ -0,0 +1,56 @@\n+[role=\"xpack\"]\n+[[ilm-rollup]]\n+=== Rollup\n+\n+Phases allowed: hot, cold.\n+\n+Aggregates an index's time series data and stores the results in a new read-only\n+index. For example, you can roll up hourly data into daily or weekly summaries.\n+\n+For more information about rollup, see the <<rollup-api, rollup action documentation>>\n+\n+The name of the rolled up index will be the original index name of the managed index prefixed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec30764aa31ee8910b7d850492246198e201e70c"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4180, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}