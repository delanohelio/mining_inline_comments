{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MTUzNzg1", "number": 59212, "title": "MappedFieldType no longer requires equals/hashCode/clone", "bodyText": "With the removal of mapping types and the immutability of FieldTypeLookup in #58162, we no longer\nhave any cause to compare MappedFieldType instances.  This means that we can remove all equals\nand hashCode implementations, and in addition we no longer need the clone implementations which\nwere required for equals/hashcode testing.  This greatly simplifies implementing new MappedFieldTypes,\nwhich will be particularly useful for the runtime fields project.", "createdAt": "2020-07-08T10:42:23Z", "url": "https://github.com/elastic/elasticsearch/pull/59212", "merged": true, "mergeCommit": {"oid": "62f51eb9aec6c3d423d7fa9645ebe9ef2904d4c1"}, "closed": true, "closedAt": "2020-07-09T20:01:30Z", "author": {"login": "romseygeek"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcy36migH2gAyNDQ2MTUzNzg1OjA1MjlkYzNkNGZmYTEwZTgzNjIyMTY0ZTc2NDI4MjhjNmJmMzVlODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczSStmgH2gAyNDQ2MTUzNzg1OjQ5ZmRjMTMxY2QzYmQ3MTVmOWZjNTYwNjJiZjdjMWZiZjFhYmYwZjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/0529dc3d4ffa10e83622164e7642828c6bf35e87", "committedDate": "2020-07-08T10:31:05Z", "message": "MappedFieldType no longer requires equals/hashCode/clone"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NjkzNDc3", "url": "https://github.com/elastic/elasticsearch/pull/59212#pullrequestreview-444693477", "createdAt": "2020-07-08T12:04:53Z", "commit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMjowNDo1M1rOGukwRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMjoxMTowOFrOGuk-yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ4OTg2MA==", "bodyText": "This TODO doesn't make sense now that we don't extend lucene's FieldType", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451489860", "createdAt": "2020-07-08T12:04:53Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java", "diffHunk": "@@ -104,32 +90,9 @@ public MappedFieldType(String name, boolean isIndexed, boolean hasDocValues, Tex\n         throw new IllegalArgumentException(\"Fielddata is not supported on field [\" + name() + \"] of type [\" + typeName() + \"]\");\n     }\n \n-    @Override\n-    public boolean equals(Object o) {\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-        MappedFieldType fieldType = (MappedFieldType) o;\n-\n-        return boost == fieldType.boost &&\n-            docValues == fieldType.docValues &&\n-            Objects.equals(name, fieldType.name) &&\n-            Objects.equals(indexAnalyzer, fieldType.indexAnalyzer) &&\n-            Objects.equals(eagerGlobalOrdinals, fieldType.eagerGlobalOrdinals) &&\n-            Objects.equals(meta, fieldType.meta);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(name, boost, docValues, indexAnalyzer,\n-            eagerGlobalOrdinals, meta);\n-    }\n-\n-    // TODO: we need to override freeze() and add safety checks that all settings are actually set", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ5MTUzMQ==", "bodyText": "FieldTypeTestCase extensions that test only equals and hashCode can just be removed entirely.  BinaryFieldType doesn't have any search methods on it, and docvalues are tested in BinaryFieldMapperTests", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451491531", "createdAt": "2020-07-08T12:08:15Z", "author": {"login": "romseygeek"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/BinaryFieldTypeTests.java", "diffHunk": "@@ -1,29 +0,0 @@\n-/*\n- * Licensed to Elasticsearch under one or more contributor\n- * license agreements. See the NOTICE file distributed with\n- * this work for additional information regarding copyright\n- * ownership. Elasticsearch licenses this file to you under\n- * the Apache License, Version 2.0 (the \"License\"); you may\n- * not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.elasticsearch.index.mapper;\n-\n-import java.util.Map;\n-\n-public class BinaryFieldTypeTests extends FieldTypeTestCase<MappedFieldType> {\n-\n-    @Override\n-    protected MappedFieldType createDefaultFieldType(String name, Map<String, String> meta) {\n-        return new BinaryFieldMapper.BinaryFieldType(name, true, meta);\n-    }\n-}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ5MzU3OQ==", "bodyText": "We check that these modifications block merging in TextFieldMapperTests, so we can safely remove them here - this is just checking the equals implementation, which is now gone.", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451493579", "createdAt": "2020-07-08T12:11:08Z", "author": {"login": "romseygeek"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/TextFieldTypeTests.java", "diffHunk": "@@ -38,47 +38,16 @@\n import org.elasticsearch.common.lucene.BytesRefs;\n import org.elasticsearch.common.unit.Fuzziness;\n import org.elasticsearch.index.mapper.TextFieldMapper.TextFieldType;\n-import org.junit.Before;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Map;\n \n import static org.apache.lucene.search.MultiTermQuery.CONSTANT_SCORE_REWRITE;\n import static org.hamcrest.Matchers.equalTo;\n \n-public class TextFieldTypeTests extends FieldTypeTestCase<TextFieldType> {\n-\n-    @Before", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MDM5MzMy", "url": "https://github.com/elastic/elasticsearch/pull/59212#pullrequestreview-445039332", "createdAt": "2020-07-08T18:47:57Z", "commit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0Nzo1OFrOGu09yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0Nzo1OFrOGu09yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1NTQ2Nw==", "bodyText": "I don't think this should have changed, now we're creating RankFeatureFieldType (singular not plural)?", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451755467", "createdAt": "2020-07-08T18:47:58Z", "author": {"login": "jtibshirani"}, "path": "modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/RankFeaturesFieldTypeTests.java", "diffHunk": "@@ -20,17 +20,11 @@\n package org.elasticsearch.index.mapper;\n \n import java.util.Collections;\n-import java.util.Map;\n \n-public class RankFeaturesFieldTypeTests extends FieldTypeTestCase<MappedFieldType> {\n-\n-    @Override\n-    protected MappedFieldType createDefaultFieldType(String name, Map<String, String> meta) {\n-        return new RankFeaturesFieldMapper.RankFeaturesFieldType(name, meta);\n-    }\n+public class RankFeaturesFieldTypeTests extends FieldTypeTestCase {\n \n     public void testIsAggregatable() {\n-        MappedFieldType fieldType = createDefaultFieldType(\"field\", Collections.emptyMap());\n+        MappedFieldType fieldType = new RankFeatureFieldMapper.RankFeatureFieldType(\"field\", Collections.emptyMap(), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MDgxMDk5", "url": "https://github.com/elastic/elasticsearch/pull/59212#pullrequestreview-445081099", "createdAt": "2020-07-08T19:51:07Z", "commit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOTo1MTowN1rOGu29xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDowMDo0NlrOGu3REQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc4ODIyOQ==", "bodyText": "I'm so happy to see clone go!", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451788229", "createdAt": "2020-07-08T19:51:07Z", "author": {"login": "nik9000"}, "path": "modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/RankFeatureFieldMapper.java", "diffHunk": "@@ -103,15 +103,6 @@ public RankFeatureFieldType(String name, Map<String, String> meta, boolean posit\n             setIndexAnalyzer(Lucene.KEYWORD_ANALYZER);\n         }\n \n-        protected RankFeatureFieldType(RankFeatureFieldType ref) {\n-            super(ref);\n-            this.positiveScoreImpact = ref.positiveScoreImpact;\n-        }\n-\n-        public RankFeatureFieldType clone() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MDA0Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451790043", "createdAt": "2020-07-08T19:54:44Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java", "diffHunk": "@@ -104,32 +90,9 @@ public MappedFieldType(String name, boolean isIndexed, boolean hasDocValues, Tex\n         throw new IllegalArgumentException(\"Fielddata is not supported on field [\" + name() + \"] of type [\" + typeName() + \"]\");\n     }\n \n-    @Override\n-    public boolean equals(Object o) {\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-        MappedFieldType fieldType = (MappedFieldType) o;\n-\n-        return boost == fieldType.boost &&\n-            docValues == fieldType.docValues &&\n-            Objects.equals(name, fieldType.name) &&\n-            Objects.equals(indexAnalyzer, fieldType.indexAnalyzer) &&\n-            Objects.equals(eagerGlobalOrdinals, fieldType.eagerGlobalOrdinals) &&\n-            Objects.equals(meta, fieldType.meta);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(name, boost, docValues, indexAnalyzer,\n-            eagerGlobalOrdinals, meta);\n-    }\n-\n-    // TODO: we need to override freeze() and add safety checks that all settings are actually set", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ4OTg2MA=="}, "originalCommit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MTMwNw==", "bodyText": "Yikes! This was never really equality!", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451791307", "createdAt": "2020-07-08T19:57:12Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java", "diffHunk": "@@ -486,21 +483,6 @@ public String toString() {\n         public Query existsQuery(QueryShardContext context) {\n             throw new UnsupportedOperationException();\n         }\n-\n-        @Override\n-        public boolean equals(Object o) {\n-            if (this == o) return true;\n-            if (o == null || getClass() != o.getClass()) return false;\n-            if (!super.equals(o)) return false;\n-            PrefixFieldType that = (PrefixFieldType) o;\n-            return minChars == that.minChars &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MjcyMg==", "bodyText": "\ud83d\udc4d. That is a better place for them.", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451792722", "createdAt": "2020-07-08T19:59:58Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/TextFieldTypeTests.java", "diffHunk": "@@ -38,47 +38,16 @@\n import org.elasticsearch.common.lucene.BytesRefs;\n import org.elasticsearch.common.unit.Fuzziness;\n import org.elasticsearch.index.mapper.TextFieldMapper.TextFieldType;\n-import org.junit.Before;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Map;\n \n import static org.apache.lucene.search.MultiTermQuery.CONSTANT_SCORE_REWRITE;\n import static org.hamcrest.Matchers.equalTo;\n \n-public class TextFieldTypeTests extends FieldTypeTestCase<TextFieldType> {\n-\n-    @Before", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ5MzU3OQ=="}, "originalCommit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MzE2OQ==", "bodyText": "It might be worth dropping this in a followup. It is just about empty now.", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451793169", "createdAt": "2020-07-08T20:00:46Z", "author": {"login": "nik9000"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldTypeTestCase.java", "diffHunk": "@@ -20,50 +20,16 @@\n \n import org.elasticsearch.index.query.QueryShardContext;\n import org.elasticsearch.test.ESTestCase;\n-import org.elasticsearch.test.EqualsHashCodeTestUtils;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n \n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n /** Base test case for subclasses of MappedFieldType */\n-public abstract class FieldTypeTestCase<T extends MappedFieldType> extends ESTestCase {\n+public abstract class FieldTypeTestCase extends ESTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NDMyODM1", "url": "https://github.com/elastic/elasticsearch/pull/59212#pullrequestreview-445432835", "createdAt": "2020-07-09T09:13:37Z", "commit": {"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99c1860d1519eb3214379c00fad2d869b48af867", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/99c1860d1519eb3214379c00fad2d869b48af867", "committedDate": "2020-07-09T10:26:30Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/fieldtype-equals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d06916a84a3b872978ca30f1653adeed5b46c1f8", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/d06916a84a3b872978ca30f1653adeed5b46c1f8", "committedDate": "2020-07-09T10:31:08Z", "message": "oops"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NzQ5OTkx", "url": "https://github.com/elastic/elasticsearch/pull/59212#pullrequestreview-445749991", "createdAt": "2020-07-09T15:51:54Z", "commit": {"oid": "d06916a84a3b872978ca30f1653adeed5b46c1f8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49fdc131cd3bd715f9fc56062bf7c1fbf1abf0f1", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/49fdc131cd3bd715f9fc56062bf7c1fbf1abf0f1", "committedDate": "2020-07-09T17:14:57Z", "message": "Merge branch 'master' into mapper/fieldtype-equals"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2215, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}