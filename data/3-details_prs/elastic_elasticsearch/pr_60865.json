{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MDYzMDQz", "number": 60865, "title": "Optimize a few Spots on IO Loop", "bodyText": "Saving some cycles here and there on the IO loop:\n\nDon't instantiate new Runnable to execute on SAME in a few spots\nDon't instantiate complicated wrapped stream for empty messages\nStop instantiating almost never used ClusterStateObserver in two spots\nSome minor cleanup and preventing pointless Predicate<> instantiation in transport master node action", "createdAt": "2020-08-08T18:54:01Z", "url": "https://github.com/elastic/elasticsearch/pull/60865", "merged": true, "mergeCommit": {"oid": "717db9c4ea77285efbe597f3e25e63a80c344b26"}, "closed": true, "closedAt": "2020-08-20T16:38:43Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc89XiBgH2gAyNDY1MDYzMDQzOmJhMjE5NWZjZTM0N2RmNjYwYWM3ZmI2Y2MzYzMyNzAxOThjNzFiMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAymO9gFqTQ3MTc3NDQwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ba2195fce347df660ac7fb6cc3c3270198c71b01", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/ba2195fce347df660ac7fb6cc3c3270198c71b01", "committedDate": "2020-08-08T18:31:27Z", "message": "Optimize 2 Spots on IO Loop\n\n* Don't instantiate new `Runnable` to execute on `SAME`\n* Don't instantiate complicated wrapped stream for empty messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9abd13e6de3419dddd1c688ce3bb9eef4bfd96cf", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/9abd13e6de3419dddd1c688ce3bb9eef4bfd96cf", "committedDate": "2020-08-09T06:13:04Z", "message": "fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bb42e91022b9ca09393769eefd924f0faaacf1b", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/3bb42e91022b9ca09393769eefd924f0faaacf1b", "committedDate": "2020-08-09T13:16:54Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f0e402fa50c3833e634dc6e4b234c6f83f8b89c", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/4f0e402fa50c3833e634dc6e4b234c6f83f8b89c", "committedDate": "2020-08-09T16:57:48Z", "message": "can't do this"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee52b68ee90fbe1681cb24045a3af953e4a9871b", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/ee52b68ee90fbe1681cb24045a3af953e4a9871b", "committedDate": "2020-08-09T23:11:47Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f27736c8f4785a97b5a61f2c99f62f8d25d7d25", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/5f27736c8f4785a97b5a61f2c99f62f8d25d7d25", "committedDate": "2020-08-09T23:38:57Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f418bcdddb643df3f1442fea3587f3ee16ccf8b3", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/f418bcdddb643df3f1442fea3587f3ee16ccf8b3", "committedDate": "2020-08-10T05:06:38Z", "message": "fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTc3NDY0", "url": "https://github.com/elastic/elasticsearch/pull/60865#pullrequestreview-463977464", "createdAt": "2020-08-10T06:19:15Z", "commit": {"oid": "f418bcdddb643df3f1442fea3587f3ee16ccf8b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNjoxOToxNVrOG-CecQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNjoxOToxNVrOG-CecQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwNTQ1Nw==", "bodyText": "This may introduce a BWC problem in the case that a response is only empty in some versions, because EMPTY_STREAM_INPUT#getVersion() returns Version.CURRENT which may not match header.getVersion().", "url": "https://github.com/elastic/elasticsearch/pull/60865#discussion_r467705457", "createdAt": "2020-08-10T06:19:15Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/transport/InboundHandler.java", "diffHunk": "@@ -111,17 +114,26 @@ private void messageReceived(TcpChannel channel, InboundMessage message) throws\n                 }\n                 // ignore if its null, the service logs it\n                 if (handler != null) {\n-                    if (header.isError()) {\n-                        handlerResponseError(streamInput, handler);\n+                    final StreamInput streamInput;\n+                    if (message.getContentLength() > 0) {\n+                        streamInput = namedWriteableStream(message.openOrGetStreamInput());\n+                        assertRemoteVersion(streamInput, header.getVersion());\n+                        if (header.isError()) {\n+                            handlerResponseError(streamInput, handler);\n+                        } else {\n+                            handleResponse(remoteAddress, streamInput, handler);\n+                        }\n+                        // Check the entire message has been read\n+                        final int nextByte = streamInput.read();\n+                        // calling read() is useful to make sure the message is fully read, even if there is an EOS marker\n+                        if (nextByte != -1) {\n+                            throw new IllegalStateException(\"Message not fully read (response) for requestId [\"\n+                                + requestId + \"], handler [\" + handler + \"], error [\" + header.isError()\n+                                + \"]; resetting\");\n+                        }\n                     } else {\n-                        handleResponse(remoteAddress, streamInput, handler);\n-                    }\n-                    // Check the entire message has been read\n-                    final int nextByte = streamInput.read();\n-                    // calling read() is useful to make sure the message is fully read, even if there is an EOS marker\n-                    if (nextByte != -1) {\n-                        throw new IllegalStateException(\"Message not fully read (response) for requestId [\" + requestId + \"], handler [\"\n-                            + handler + \"], error [\" + header.isError() + \"]; resetting\");\n+                        assert header.isError() == false;\n+                        handleResponse(remoteAddress, EMPTY_STREAM_INPUT, handler);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f418bcdddb643df3f1442fea3587f3ee16ccf8b3"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be76b310a00eef2bb5da69f4db642ba3e8b630c9", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/be76b310a00eef2bb5da69f4db642ba3e8b630c9", "committedDate": "2020-08-10T09:45:14Z", "message": "revert stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1de973aebba994df23dea36067f9ad6100e090c6", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/1de973aebba994df23dea36067f9ad6100e090c6", "committedDate": "2020-08-10T09:45:18Z", "message": "Merge remote-tracking branch 'elastic/master' into random-optimizations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4c2391925b94af674d3de444d6a38bab6f4e9d4", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/a4c2391925b94af674d3de444d6a38bab6f4e9d4", "committedDate": "2020-08-10T09:49:28Z", "message": "revert stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4a3ac29b5ce9e48b9718587f855ab65680a42ae", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/b4a3ac29b5ce9e48b9718587f855ab65680a42ae", "committedDate": "2020-08-10T10:12:10Z", "message": "bwc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MTE4NjY4", "url": "https://github.com/elastic/elasticsearch/pull/60865#pullrequestreview-464118668", "createdAt": "2020-08-10T10:34:25Z", "commit": {"oid": "b4a3ac29b5ce9e48b9718587f855ab65680a42ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDozNDoyNVrOG-JTmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDozNDoyNVrOG-JTmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgxNzM2OQ==", "bodyText": "I think I'd have just done this rather than introducing thread-locals here, and mixed-version clusters be (slightly) damned.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (message.getContentLength() > 0) {\n          \n          \n            \n                                if (message.getContentLength() > 0 || header.getVersion().equals(Version.CURRENT) == false) {\n          \n      \n    \n    \n  \n\nWhat you've got looks ok as long as we don't refactor the deserialisation onto a different thread at some point in the future, but that's going to be a tricky bug to track down if ever we do so... \ud83d\ude01", "url": "https://github.com/elastic/elasticsearch/pull/60865#discussion_r467817369", "createdAt": "2020-08-10T10:34:25Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/transport/InboundHandler.java", "diffHunk": "@@ -111,18 +120,29 @@ private void messageReceived(TcpChannel channel, InboundMessage message) throws\n                 }\n                 // ignore if its null, the service logs it\n                 if (handler != null) {\n-                    if (header.isError()) {\n-                        handlerResponseError(streamInput, handler);\n+                    final StreamInput streamInput;\n+                    if (message.getContentLength() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4a3ac29b5ce9e48b9718587f855ab65680a42ae"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03708fa89833f4923d705baf4389f8c59f34f1ae", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/03708fa89833f4923d705baf4389f8c59f34f1ae", "committedDate": "2020-08-10T10:46:36Z", "message": "CR: - thread-local"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f1df436fa589329887deb76264e37c7a5ba0ed2", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/9f1df436fa589329887deb76264e37c7a5ba0ed2", "committedDate": "2020-08-10T10:49:10Z", "message": "OR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNDQ0MjAw", "url": "https://github.com/elastic/elasticsearch/pull/60865#pullrequestreview-471444200", "createdAt": "2020-08-20T10:01:20Z", "commit": {"oid": "9f1df436fa589329887deb76264e37c7a5ba0ed2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDowMToyMFrOHD40eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDowMzo1OVrOHD48zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgzODcxMw==", "bodyText": "This change means that the timeout starts counting from the first retry, rather than from the start of execution of the action. I think we should adjust the timeout to account for this since this retry might be happening a long time later.", "url": "https://github.com/elastic/elasticsearch/pull/60865#discussion_r473838713", "createdAt": "2020-08-20T10:01:20Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java", "diffHunk": "@@ -201,7 +193,15 @@ public void handleException(final TransportException exp) {\n             }\n         }\n \n-        private void retry(final Throwable failure, final Predicate<ClusterState> statePredicate) {\n+        private void retryOnMasterChange(ClusterState state, Throwable failure) {\n+            retry(state, failure, MasterNodeChangePredicate.build(state));\n+        }\n+\n+        private void retry(ClusterState state, final Throwable failure, final Predicate<ClusterState> statePredicate) {\n+            if (observer == null) {\n+                this.observer =\n+                    new ClusterStateObserver(state, clusterService, request.masterNodeTimeout(), logger, threadPool.getThreadContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1df436fa589329887deb76264e37c7a5ba0ed2"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg0MDg0Nw==", "bodyText": "\ud83d\udc4d we can always bring this back later if we need it again", "url": "https://github.com/elastic/elasticsearch/pull/60865#discussion_r473840847", "createdAt": "2020-08-20T10:03:59Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java", "diffHunk": "@@ -224,12 +224,4 @@ public void onTimeout(TimeValue timeout) {\n                 }, statePredicate);\n         }\n     }\n-\n-    /**\n-     * Allows to conditionally return a different master node action name in the case an action gets renamed.\n-     * This mainly for backwards compatibility should be used rarely\n-     */\n-    protected String getMasterActionName(DiscoveryNode node) {\n-        return actionName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1df436fa589329887deb76264e37c7a5ba0ed2"}, "originalPosition": 110}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c5c8c2daa4df89e30224bb1026cba48fc3b7603", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/2c5c8c2daa4df89e30224bb1026cba48fc3b7603", "committedDate": "2020-08-20T12:26:55Z", "message": "Merge remote-tracking branch 'elastic/master' into random-optimizations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29806e8cc5b4129c3d1705eb73cccf4c142066a5", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/29806e8cc5b4129c3d1705eb73cccf4c142066a5", "committedDate": "2020-08-20T13:01:45Z", "message": "CR: cleaner timeout handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzc0NDAy", "url": "https://github.com/elastic/elasticsearch/pull/60865#pullrequestreview-471774402", "createdAt": "2020-08-20T16:14:15Z", "commit": {"oid": "29806e8cc5b4129c3d1705eb73cccf4c142066a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3318, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}