{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NjQ3Mzk0", "number": 61124, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTo0MDoyNlrOEeXB0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTo0MzoyM1rOEeXM1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjcwMDM1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTo0MDoyNlrOHJ9-5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNToyMToxN1rOHQjSeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxNDc1Nw==", "bodyText": "The code doesn't compile, that should be return new ComposableIndexTemplate(this). Also as mentioned above we should use one of the existing constructors.", "url": "https://github.com/elastic/elasticsearch/pull/61124#discussion_r480214757", "createdAt": "2020-08-31T15:40:26Z", "author": {"login": "swallez"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java", "diffHunk": "@@ -294,4 +299,55 @@ public int hashCode() {\n             return DataStreamTemplate.class.hashCode();\n         }\n     }\n+    \n+    public static class Builder{\n+    \t\n+    \tprivate List<String> indexPatterns;\n+        private Template template;\n+        private List<String> componentTemplates;\n+        private Long priority;\n+        private Long version;\n+        private Map<String, Object> metadata;\n+        private DataStreamTemplate dataStreamTemplate;\n+        \n+        \n+        public Builder indexPatterns(List<String> indexPatterns) { \n+        \tthis.indexPatterns = indexPatterns;\n+        \treturn this;\n+        }\n+        \n+        public Builder template(Template template) { \n+        \tthis.template = template;\n+        \treturn this;\n+        }\n+        \n+        public Builder componentTemplates(List<String> componentTemplates) { \n+        \tthis.componentTemplates = componentTemplates;\n+        \treturn this;\n+        }\n+        \n+        public Builder priority(Long priority) { \n+        \tthis.priority = priority;\n+        \treturn this;\n+        }\n+        \n+        public Builder version(Long version) { \n+        \tthis.version = version;\n+        \treturn this;\n+        }\n+        \n+        public Builder metadata(Map<String, Object> metadata) { \n+        \tthis.metadata = metadata;\n+        \treturn this;\n+        }\n+        \n+        public Builder dataStreamTemplate(DataStreamTemplate dataStreamTemplate) { \n+        \tthis.dataStreamTemplate = dataStreamTemplate;\n+        \treturn this;\n+        }\n+        \n+        public ComposableIndexTemplate build() { \n+        \treturn ComposableIndexTemplate(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14c9b78a1a2dc6b9aaf983c719f20a054cf8b519"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzExNzQzNA==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/61124#discussion_r487117434", "createdAt": "2020-09-11T15:21:17Z", "author": {"login": "antrix190"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java", "diffHunk": "@@ -294,4 +299,55 @@ public int hashCode() {\n             return DataStreamTemplate.class.hashCode();\n         }\n     }\n+    \n+    public static class Builder{\n+    \t\n+    \tprivate List<String> indexPatterns;\n+        private Template template;\n+        private List<String> componentTemplates;\n+        private Long priority;\n+        private Long version;\n+        private Map<String, Object> metadata;\n+        private DataStreamTemplate dataStreamTemplate;\n+        \n+        \n+        public Builder indexPatterns(List<String> indexPatterns) { \n+        \tthis.indexPatterns = indexPatterns;\n+        \treturn this;\n+        }\n+        \n+        public Builder template(Template template) { \n+        \tthis.template = template;\n+        \treturn this;\n+        }\n+        \n+        public Builder componentTemplates(List<String> componentTemplates) { \n+        \tthis.componentTemplates = componentTemplates;\n+        \treturn this;\n+        }\n+        \n+        public Builder priority(Long priority) { \n+        \tthis.priority = priority;\n+        \treturn this;\n+        }\n+        \n+        public Builder version(Long version) { \n+        \tthis.version = version;\n+        \treturn this;\n+        }\n+        \n+        public Builder metadata(Map<String, Object> metadata) { \n+        \tthis.metadata = metadata;\n+        \treturn this;\n+        }\n+        \n+        public Builder dataStreamTemplate(DataStreamTemplate dataStreamTemplate) { \n+        \tthis.dataStreamTemplate = dataStreamTemplate;\n+        \treturn this;\n+        }\n+        \n+        public ComposableIndexTemplate build() { \n+        \treturn ComposableIndexTemplate(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxNDc1Nw=="}, "originalCommit": {"oid": "14c9b78a1a2dc6b9aaf983c719f20a054cf8b519"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjcyODUzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTo0MzoyM1rOHJ-NAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNToyMTo0NVrOHQjTgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxODM3MQ==", "bodyText": "If you look at other uses of the builder pattern, their build method calls one of the regular constructors of the class. This avoids having to add an additional constructor just for the builder.", "url": "https://github.com/elastic/elasticsearch/pull/61124#discussion_r480218371", "createdAt": "2020-08-31T15:43:23Z", "author": {"login": "swallez"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java", "diffHunk": "@@ -104,6 +104,11 @@ public ComposableIndexTemplate(List<String> indexPatterns, @Nullable Template te\n         this(indexPatterns, template, componentTemplates, priority, version, metadata, null);\n     }\n \n+    public ComposableIndexTemplate(Builder builder) { ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14c9b78a1a2dc6b9aaf983c719f20a054cf8b519"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzExNzY5OA==", "bodyText": "Agreed. Reused existing constructor.", "url": "https://github.com/elastic/elasticsearch/pull/61124#discussion_r487117698", "createdAt": "2020-09-11T15:21:45Z", "author": {"login": "antrix190"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java", "diffHunk": "@@ -104,6 +104,11 @@ public ComposableIndexTemplate(List<String> indexPatterns, @Nullable Template te\n         this(indexPatterns, template, componentTemplates, priority, version, metadata, null);\n     }\n \n+    public ComposableIndexTemplate(Builder builder) { ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxODM3MQ=="}, "originalCommit": {"oid": "14c9b78a1a2dc6b9aaf983c719f20a054cf8b519"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2498, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}