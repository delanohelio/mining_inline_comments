{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1Mzc5OTI4", "number": 54393, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo0ODoyMFrODsiC4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODo1NDozMFrODskwGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDIxNzI5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/transport/InboundPipeline.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo0ODoyMFrOF9bp4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo0ODoyMFrOF9bp4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2MDU0NQ==", "bodyText": "Revert this", "url": "https://github.com/elastic/elasticsearch/pull/54393#discussion_r399960545", "createdAt": "2020-03-30T06:48:20Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/InboundPipeline.java", "diffHunk": "@@ -151,6 +161,8 @@ private void forwardFragments(TcpChannel channel, ArrayList<Object> fragments) t\n         }\n     }\n \n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bbd60786757a9f2de69f93de92d005bc896605b"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDI1MjI1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/transport/InboundPipeline.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzowMDo1OFrOF9b-lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzowMDo1OFrOF9b-lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2NTg0NQ==", "bodyText": "I think we should pass this in via the constructor so that we can continue to use ThreadPool.relativeTimeInMillis()?", "url": "https://github.com/elastic/elasticsearch/pull/54393#discussion_r399965845", "createdAt": "2020-03-30T07:00:58Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/InboundPipeline.java", "diffHunk": "@@ -25,33 +25,39 @@\n import org.elasticsearch.common.collect.Tuple;\n import org.elasticsearch.common.lease.Releasable;\n import org.elasticsearch.common.lease.Releasables;\n+import org.elasticsearch.common.unit.TimeValue;\n import org.elasticsearch.common.util.PageCacheRecycler;\n \n import java.io.IOException;\n import java.util.ArrayDeque;\n import java.util.ArrayList;\n import java.util.function.BiConsumer;\n+import java.util.function.LongSupplier;\n \n public class InboundPipeline implements Releasable {\n \n     private static final ThreadLocal<ArrayList<Object>> fragmentList = ThreadLocal.withInitial(ArrayList::new);\n     private static final InboundMessage PING_MESSAGE = new InboundMessage(null, true);\n \n+    private final LongSupplier relativeTimeInMillis = () -> TimeValue.nsecToMSec(System.nanoTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bbd60786757a9f2de69f93de92d005bc896605b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDY2MDc1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/transport/TcpTransport.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODo1NDozMFrOF9fzAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNTo1NTo1NFrOF9wqAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAyODQxNg==", "bodyText": "Can we remove this method now?", "url": "https://github.com/elastic/elasticsearch/pull/54393#discussion_r400028416", "createdAt": "2020-03-30T08:54:30Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/transport/TcpTransport.java", "diffHunk": "@@ -676,9 +682,6 @@ public void inboundMessage(TcpChannel channel, InboundMessage message) {\n     }\n \n     public void inboundDecodeException(TcpChannel channel, Tuple<Header, Exception> tuple) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bbd60786757a9f2de69f93de92d005bc896605b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMwNDY0MQ==", "bodyText": "There will be a follow up related to exception handling. Specifically CircuitBreaking will move inside the pipeline. But circuit breaking generates an exception that has to be handled by generating a message to send back.", "url": "https://github.com/elastic/elasticsearch/pull/54393#discussion_r400304641", "createdAt": "2020-03-30T15:55:54Z", "author": {"login": "tbrooks8"}, "path": "server/src/main/java/org/elasticsearch/transport/TcpTransport.java", "diffHunk": "@@ -676,9 +682,6 @@ public void inboundMessage(TcpChannel channel, InboundMessage message) {\n     }\n \n     public void inboundDecodeException(TcpChannel channel, Tuple<Header, Exception> tuple) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAyODQxNg=="}, "originalCommit": {"oid": "3bbd60786757a9f2de69f93de92d005bc896605b"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4053, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}