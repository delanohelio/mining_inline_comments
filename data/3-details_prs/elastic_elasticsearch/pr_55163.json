{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMjMxODE0", "number": 55163, "title": "[ML] Fixing inference stats race condition", "bodyText": "updateAndGet could actually call the internal method more than once on contention.\nIf I read the JavaDocs, it says:\n* @param updateFunction a side-effect-free function\nSo, it could be getting multiple updates on contention, thus having a race condition where stats are double counted.\nTo fix, I am going to use a ReadWriteLock. The LongAdder objects allows fast thread safe writes in high contention environments. These can be protected by the ReadWriteLock::readLock.\nWhen stats are persisted, I need to call reset on all these adders. This is NOT thread safe if additions are taking place concurrently. So, I am going to protect with ReadWriteLock::writeLock.\nThis should prevent race conditions while allowing high (ish) throughput in the highly contention paths in inference.\nI did some simple throughput tests and this change is not significantly slower and is simpler to grok (IMO).\ncloses  #54786", "createdAt": "2020-04-14T14:48:51Z", "url": "https://github.com/elastic/elasticsearch/pull/55163", "merged": true, "mergeCommit": {"oid": "5fd2918c96bdafe397d8cf35d7cba8a9bcfb1b6f"}, "closed": true, "closedAt": "2020-04-20T19:26:47Z", "author": {"login": "benwtrent"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXkFnBgH2gAyNDAzMjMxODE0OmY3YjMwZmNlMjAzMjQ3MTU5ZGQwZWYwZGI5NzMyOGI4MWMwNjQ1NDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZjdOJgH2gAyNDAzMjMxODE0OjBiNDg3MzYyYjZmOWViYjZmZWQ5ZTJiYjEwOGMwYWQ1ZTJjZjRmMjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f7b30fce203247159dd0ef0db97328b81c064543", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/f7b30fce203247159dd0ef0db97328b81c064543", "committedDate": "2020-04-14T14:09:03Z", "message": "[ML] Fixing inference stats race condition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDE1MTc3", "url": "https://github.com/elastic/elasticsearch/pull/55163#pullrequestreview-393015177", "createdAt": "2020-04-14T14:59:51Z", "commit": {"oid": "f7b30fce203247159dd0ef0db97328b81c064543"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDo1OTo1MVrOGFS8bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTowMjo1NFrOGFTF-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwNjQ0NQ==", "bodyText": "Why is this lock() statement inside the try block?", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r408206445", "createdAt": "2020-04-14T14:59:51Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/InferenceStats.java", "diffHunk": "@@ -226,24 +234,67 @@ public Accumulator merge(InferenceStats otherStats) {\n         }\n \n         public Accumulator incMissingFields() {\n-            this.missingFieldsAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.missingFieldsAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incInference() {\n-            this.inferenceAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.inferenceAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incFailure() {\n-            this.failureCountAccumulator.increment();\n-            return this;\n+            try {\n+                readWriteLock.readLock().lock();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b30fce203247159dd0ef0db97328b81c064543"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwODg4OQ==", "bodyText": "There is only one place where this method is called so I think it could be inlined there.", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r408208889", "createdAt": "2020-04-14T15:02:54Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/InferenceStats.java", "diffHunk": "@@ -226,24 +234,67 @@ public Accumulator merge(InferenceStats otherStats) {\n         }\n \n         public Accumulator incMissingFields() {\n-            this.missingFieldsAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.missingFieldsAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incInference() {\n-            this.inferenceAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.inferenceAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incFailure() {\n-            this.failureCountAccumulator.increment();\n-            return this;\n+            try {\n+                readWriteLock.readLock().lock();\n+                this.failureCountAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n-        public InferenceStats currentStats() {\n+        private InferenceStats currentStats() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b30fce203247159dd0ef0db97328b81c064543"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ace801179da58ba3d0dc185cf926c11fc2682b50", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/ace801179da58ba3d0dc185cf926c11fc2682b50", "committedDate": "2020-04-14T19:05:18Z", "message": "attempting to address race conditions and adding some logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bf4dfe39e99f093a82876cfffbd2570578a2b7e", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/9bf4dfe39e99f093a82876cfffbd2570578a2b7e", "committedDate": "2020-04-14T20:22:10Z", "message": "waiting for yellow on write alias"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3932f9dfd2dbcef7a7b6bc210e6fc735ab360dc", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/e3932f9dfd2dbcef7a7b6bc210e6fc735ab360dc", "committedDate": "2020-04-15T12:27:41Z", "message": "verifying the indices exist (hopefully)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdca9cb60901fece22f3ed8bf09a1508de30b997", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/bdca9cb60901fece22f3ed8bf09a1508de30b997", "committedDate": "2020-04-15T12:49:19Z", "message": "remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16461ef827f6bec3940f62cd735ce33bbe0746d7", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/16461ef827f6bec3940f62cd735ce33bbe0746d7", "committedDate": "2020-04-15T15:50:00Z", "message": "ignoring bad index creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89e967b673d82fd98d6d72b836f4fb9652d4cb25", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/89e967b673d82fd98d6d72b836f4fb9652d4cb25", "committedDate": "2020-04-15T15:57:27Z", "message": "Merge branch 'master' into feature/ml-inference-stats-race"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f922584dd99bb9d5a02fb1d3730b49bd5f050fa4", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/f922584dd99bb9d5a02fb1d3730b49bd5f050fa4", "committedDate": "2020-04-15T19:40:50Z", "message": "separating out model names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa3957c4cbe754a87d3f24717f472919e4b4d460", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/aa3957c4cbe754a87d3f24717f472919e4b4d460", "committedDate": "2020-04-16T11:41:33Z", "message": "cleaning up statts indexer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e4f8fd1cc7e65d5ce61559550588ddef853335e", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/4e4f8fd1cc7e65d5ce61559550588ddef853335e", "committedDate": "2020-04-16T16:09:18Z", "message": "flush stats when model is no longer referenced"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69550e97c5667b571b9d2e5ca94ea1ebc131a4c0", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/69550e97c5667b571b9d2e5ca94ea1ebc131a4c0", "committedDate": "2020-04-17T11:23:08Z", "message": "removing debug logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8176efc9284e3affd3f7dc584b0ae828c1115788", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/8176efc9284e3affd3f7dc584b0ae828c1115788", "committedDate": "2020-04-17T11:23:22Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/ml-inference-stats-race"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "008e73821a7204684c841870c970d9ba1486b7db", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/008e73821a7204684c841870c970d9ba1486b7db", "committedDate": "2020-04-17T11:28:26Z", "message": "removing unused import + variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1Mzk2MDQ0", "url": "https://github.com/elastic/elasticsearch/pull/55163#pullrequestreview-395396044", "createdAt": "2020-04-17T12:06:35Z", "commit": {"oid": "008e73821a7204684c841870c970d9ba1486b7db"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjowNjozNVrOGHLVIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjo1OTowMVrOGHM65A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3ODg0OA==", "bodyText": "nit: make public InferenceStats currentStats(Instant timeStamp) private as it is only called here and not protected by the lock otherwise", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410178848", "createdAt": "2020-04-17T12:06:35Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/InferenceStats.java", "diffHunk": "@@ -226,22 +234,52 @@ public Accumulator merge(InferenceStats otherStats) {\n         }\n \n         public Accumulator incMissingFields() {\n-            this.missingFieldsAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.missingFieldsAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incInference() {\n-            this.inferenceAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.inferenceAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n         public Accumulator incFailure() {\n-            this.failureCountAccumulator.increment();\n-            return this;\n+            readWriteLock.readLock().lock();\n+            try {\n+                this.failureCountAccumulator.increment();\n+                return this;\n+            } finally {\n+                readWriteLock.readLock().unlock();\n+            }\n         }\n \n-        public InferenceStats currentStats() {\n-            return currentStats(Instant.now());\n+        /**\n+         * Thread safe.\n+         *\n+         * Returns the current stats and resets the values of all the counters.\n+         * @return The current stats\n+         */\n+        public InferenceStats currentStatsAndReset() {\n+            readWriteLock.writeLock().lock();\n+            try {\n+                InferenceStats stats = currentStats(Instant.now());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "008e73821a7204684c841870c970d9ba1486b7db"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4MTU1Ng==", "bodyText": "nit: rename method createBothModels()  -> setLogging() or setup() as no longer creating models here", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410181556", "createdAt": "2020-04-17T12:12:42Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -44,16 +46,19 @@\n \n     private static final String BASIC_AUTH_VALUE_SUPER_USER =\n         basicAuthHeaderValue(\"x_pack_rest_user\", SecuritySettingsSourceField.TEST_PASSWORD_SECURE_STRING);\n+    private List<String> createdModels = new ArrayList<>();\n \n     @Before\n     public void createBothModels() throws Exception {\n-        Request request = new Request(\"PUT\", \"_ml/inference/test_classification\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "008e73821a7204684c841870c970d9ba1486b7db"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4MTcyOA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410181728", "createdAt": "2020-04-17T12:13:04Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsProcessManager.java", "diffHunk": "@@ -267,10 +266,6 @@ private void writeHeaderRecord(DataFrameDataExtractor dataExtractor, AnalyticsPr\n         process.writeRecord(headerRecord);\n     }\n \n-    private void indexDataCounts(DataCounts dataCounts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "008e73821a7204684c841870c970d9ba1486b7db"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NTM4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (stats.hasStats() == false) {\n          \n          \n            \n                        if (flush) {\n          \n          \n            \n                            threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);\n          \n          \n            \n                        }\n          \n          \n            \n                        return;\n          \n          \n            \n                    }\n          \n          \n            \n                    statsQueue.compute(InferenceStats.docId(stats.getModelId(), stats.getNodeId()),\n          \n          \n            \n                        (k, previousStats) -> previousStats == null ?\n          \n          \n            \n                            stats :\n          \n          \n            \n                            InferenceStats.accumulator(stats).merge(previousStats).currentStats(stats.getTimeStamp()));\n          \n          \n            \n                    if (flush) {\n          \n          \n            \n                        threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);\n          \n          \n            \n                    }\n          \n          \n            \n                    if (stats.hasStats()) {        \n          \n          \n            \n                        statsQueue.compute(InferenceStats.docId(stats.getModelId(), stats.getNodeId()),\n          \n          \n            \n                            (k, previousStats) -> previousStats == null ?\n          \n          \n            \n                                stats :\n          \n          \n            \n                                InferenceStats.accumulator(stats).merge(previousStats).currentStats(stats.getTimeStamp()));\n          \n          \n            \n                    }        \n          \n          \n            \n                    if (flush) {\n          \n          \n            \n                        threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);\n          \n          \n            \n                    }", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410185380", "createdAt": "2020-04-17T12:20:47Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/TrainedModelStatsService.java", "diffHunk": "@@ -97,11 +103,26 @@ public void beforeStop() {\n         clusterService.addListener((event) -> this.clusterState = event.state());\n     }\n \n-    public void queueStats(InferenceStats stats) {\n+    /**\n+     * Queues the stats for storing.\n+     * @param stats The stats to store or increment\n+     * @param flush When `true`, this indicates that stats should be written as soon as possible.\n+     *              If `false`, stats are not persisted until the next periodic persistence action.\n+     */\n+    public void queueStats(InferenceStats stats, boolean flush) {\n+        if (stats.hasStats() == false) {\n+            if (flush) {\n+                threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);\n+            }\n+            return;\n+        }\n         statsQueue.compute(InferenceStats.docId(stats.getModelId(), stats.getNodeId()),\n             (k, previousStats) -> previousStats == null ?\n                 stats :\n                 InferenceStats.accumulator(stats).merge(previousStats).currentStats(stats.getTimeStamp()));\n+        if (flush) {\n+            threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "008e73821a7204684c841870c970d9ba1486b7db"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwNDkwMA==", "bodyText": "2 threads could be calling updateStats at the same time, one invoked here and the other from the the scheduler. Is that safe? Both threads will be iterating and removing entries from the map, maybe use an iterator on the entrySet", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410204900", "createdAt": "2020-04-17T12:59:01Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/TrainedModelStatsService.java", "diffHunk": "@@ -97,11 +103,26 @@ public void beforeStop() {\n         clusterService.addListener((event) -> this.clusterState = event.state());\n     }\n \n-    public void queueStats(InferenceStats stats) {\n+    /**\n+     * Queues the stats for storing.\n+     * @param stats The stats to store or increment\n+     * @param flush When `true`, this indicates that stats should be written as soon as possible.\n+     *              If `false`, stats are not persisted until the next periodic persistence action.\n+     */\n+    public void queueStats(InferenceStats stats, boolean flush) {\n+        if (stats.hasStats() == false) {\n+            if (flush) {\n+                threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(this::updateStats);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "008e73821a7204684c841870c970d9ba1486b7db"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aa965f328302b5d5b03a332e5852ec7d085e8de", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/2aa965f328302b5d5b03a332e5852ec7d085e8de", "committedDate": "2020-04-17T14:40:37Z", "message": "addressing PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NTAxNTA0", "url": "https://github.com/elastic/elasticsearch/pull/55163#pullrequestreview-395501504", "createdAt": "2020-04-17T14:25:53Z", "commit": {"oid": "008e73821a7204684c841870c970d9ba1486b7db"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDoyNTo1M1rOGHQNXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDo0ODowNFrOGHRF4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1ODc4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }),anyBoolean());\n          \n          \n            \n                    }), anyBoolean());", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410258780", "createdAt": "2020-04-17T14:25:53Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/inference/loadingservice/LocalModelTests.java", "diffHunk": "@@ -273,7 +274,7 @@ public void testInferPersistsStatsAfterNumberOfCalls() throws Exception {\n             public boolean matches(Object o) {\n                 return ((InferenceStats)o).getInferenceCount() == 99L;\n             }\n-        }));\n+        }),anyBoolean());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "008e73821a7204684c841870c970d9ba1486b7db"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MDM5Mw==", "bodyText": "s/pathalogical/pathological/", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410270393", "createdAt": "2020-04-17T14:43:35Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -64,19 +68,33 @@ protected Settings restClientSettings() {\n     @After\n     public void cleanUpData() throws Exception {\n         new MlRestTestStateCleaner(logger, adminClient()).clearMlMetadata();\n+        client().performRequest(new Request(\"DELETE\", InferenceIndexConstants.INDEX_PATTERN));\n+        client().performRequest(new Request(\"DELETE\", MlStatsIndex.indexPattern()));\n+        Request loggingSettings = new Request(\"PUT\", \"_cluster/settings\");\n+        loggingSettings.setJsonEntity(\"\" +\n+            \"{\" +\n+            \"\\\"transient\\\" : {\\n\" +\n+            \"        \\\"logger.org.elasticsearch.xpack.ml.inference\\\" : null\\n\" +\n+            \"    }\" +\n+            \"}\");\n+        client().performRequest(loggingSettings);\n         ESRestTestCase.waitForPendingTasks(adminClient());\n-        client().performRequest(new Request(\"DELETE\", \"_ml/inference/test_classification\"));\n-        client().performRequest(new Request(\"DELETE\", \"_ml/inference/test_regression\"));\n     }\n \n     public void testPathologicalPipelineCreationAndDeletion() throws Exception {\n+        String classificationModelId = \"test_pathalogical_classification\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa965f328302b5d5b03a332e5852ec7d085e8de"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MzI1MQ==", "bodyText": "I think you could replace it with IndicesOptions.LENIENT_EXPAND_OPEN_HIDDEN", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r410273251", "createdAt": "2020-04-17T14:48:04Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/TrainedModelStatsService.java", "diffHunk": "@@ -153,12 +175,47 @@ void updateStats() {\n         if (bulkRequest.requests().isEmpty()) {\n             return;\n         }\n+        if (stopped) {\n+            return;\n+        }\n         resultsPersisterService.bulkIndexWithRetry(bulkRequest,\n             stats.stream().map(InferenceStats::getModelId).collect(Collectors.joining(\",\")),\n             () -> stopped == false,\n             (msg) -> {});\n     }\n \n+    private static boolean verifyIndicesPrimaryShardsAreActive(ClusterState clusterState, IndexNameExpressionResolver expressionResolver) {\n+        String[] indices = expressionResolver.concreteIndexNames(clusterState,\n+            new IndicesOptions(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa965f328302b5d5b03a332e5852ec7d085e8de"}, "originalPosition": 137}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33d4ca7e82d0957c6bfb06f149cbb035810019e8", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/33d4ca7e82d0957c6bfb06f149cbb035810019e8", "committedDate": "2020-04-17T15:13:11Z", "message": "addressing pr comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NTQzMDAz", "url": "https://github.com/elastic/elasticsearch/pull/55163#pullrequestreview-395543003", "createdAt": "2020-04-17T15:14:46Z", "commit": {"oid": "33d4ca7e82d0957c6bfb06f149cbb035810019e8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "419be4c841164edd065f93e7f844a14241d8f0c8", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/419be4c841164edd065f93e7f844a14241d8f0c8", "committedDate": "2020-04-17T15:18:38Z", "message": "fixing unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NjE2MzUy", "url": "https://github.com/elastic/elasticsearch/pull/55163#pullrequestreview-395616352", "createdAt": "2020-04-17T16:51:06Z", "commit": {"oid": "419be4c841164edd065f93e7f844a14241d8f0c8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MjM1Mzc5", "url": "https://github.com/elastic/elasticsearch/pull/55163#pullrequestreview-396235379", "createdAt": "2020-04-20T08:18:09Z", "commit": {"oid": "419be4c841164edd065f93e7f844a14241d8f0c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODoxODowOVrOGIIq1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODoxODowOVrOGIIq1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4MzgyOQ==", "bodyText": "Shouldn't this \"catch\" clause call \"Assert.fail()\"?\nIf it doesn't I think the whole block won't be retried when the ResponseException happens...", "url": "https://github.com/elastic/elasticsearch/pull/55163#discussion_r411183829", "createdAt": "2020-04-20T08:18:09Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -94,13 +112,29 @@ public void testPathologicalPipelineCreationAndDeletion() throws Exception {\n                     QueryBuilders.existsQuery(\"ml.inference.classification.predicted_value\"))));\n \n         assertThat(EntityUtils.toString(searchResponse.getEntity()), containsString(\"\\\"value\\\":10\"));\n+        assertBusy(() -> {\n+            try {\n+                Response statsResponse = client().performRequest(new Request(\"GET\",\n+                    \"_ml/inference/\" + classificationModelId + \"/_stats\"));\n+                assertThat(EntityUtils.toString(statsResponse.getEntity()), containsString(\"\\\"inference_count\\\":10\"));\n+                statsResponse = client().performRequest(new Request(\"GET\", \"_ml/inference/\" + regressionModelId + \"/_stats\"));\n+                assertThat(EntityUtils.toString(statsResponse.getEntity()), containsString(\"\\\"inference_count\\\":10\"));\n+            } catch (ResponseException ex) {\n+                //this could just mean shard failures.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "419be4c841164edd065f93e7f844a14241d8f0c8"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2480e75150e7795dd1334db376ef16f08d4045dc", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/2480e75150e7795dd1334db376ef16f08d4045dc", "committedDate": "2020-04-20T11:43:34Z", "message": "Merge branch 'master' into feature/ml-inference-stats-race"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5ef177d78ce6820ea92976e51ac5f56ef844085", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/a5ef177d78ce6820ea92976e51ac5f56ef844085", "committedDate": "2020-04-20T11:45:18Z", "message": "addressing PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "969ad44c4542a1cdac425867733716ee7ff0b364", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/969ad44c4542a1cdac425867733716ee7ff0b364", "committedDate": "2020-04-20T16:44:58Z", "message": "Merge branch 'master' into feature/ml-inference-stats-race"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28ba96ccfeac19335fd99eddfe4e25f64e92c44f", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/28ba96ccfeac19335fd99eddfe4e25f64e92c44f", "committedDate": "2020-04-20T18:06:06Z", "message": "fixing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b487362b6f9ebb6fed9e2bb108c0ad5e2cf4f26", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/0b487362b6f9ebb6fed9e2bb108c0ad5e2cf4f26", "committedDate": "2020-04-20T18:32:47Z", "message": "Merge branch 'master' into feature/ml-inference-stats-race"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3550, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}