{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMTA4NjQ4", "number": 62683, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODoxNDoyOFrOEli7jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODoxNDoyOFrOEli7jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODA1MDcwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/ValueCountAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODoxNDoyOFrOHVE2LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNDowMjoxNFrOHVRhrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2MTU0OA==", "bodyText": "Note that this construct seems to be used by all NumericMetricsAggregator, I winder if we can move it to the parent class?", "url": "https://github.com/elastic/elasticsearch/pull/62683#discussion_r491861548", "createdAt": "2020-09-21T08:14:28Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/ValueCountAggregator.java", "diffHunk": "@@ -125,6 +126,11 @@ public InternalAggregation buildAggregation(long bucket) {\n         return new InternalValueCount(name, counts.get(bucket), metadata());\n     }\n \n+    @Override\n+    public ScoreMode scoreMode() {\n+        return valuesSource != null && valuesSource.needsScores() ? ScoreMode.COMPLETE : ScoreMode.COMPLETE_NO_SCORES;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0adfa7ab5b80eff10cca20c7e9842cc8bad2e564"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA2OTI5Mg==", "bodyText": "Probably!", "url": "https://github.com/elastic/elasticsearch/pull/62683#discussion_r492069292", "createdAt": "2020-09-21T14:02:14Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/ValueCountAggregator.java", "diffHunk": "@@ -125,6 +126,11 @@ public InternalAggregation buildAggregation(long bucket) {\n         return new InternalValueCount(name, counts.get(bucket), metadata());\n     }\n \n+    @Override\n+    public ScoreMode scoreMode() {\n+        return valuesSource != null && valuesSource.needsScores() ? ScoreMode.COMPLETE : ScoreMode.COMPLETE_NO_SCORES;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2MTU0OA=="}, "originalCommit": {"oid": "0adfa7ab5b80eff10cca20c7e9842cc8bad2e564"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3508, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}