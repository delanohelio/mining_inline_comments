{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NDE4OTU4", "number": 60100, "title": "Add search 'fields' option to support high-level field retrieval.", "bodyText": "This feature adds a new fields parameter to the search request, which\nconsults both the document _source and the mappings to fetch fields in a\nconsistent way.\nThe PR merges the field-retrieval feature branch. All commits on the branch\nhave been individually code reviewed as part of earlier PRs.\nAfter the PR is merged, I plan to work with other teams to integrate with the\nfeature. The meta issue contains a small number of 'open questions' that I will\ngather feedback on (which might lead to some small follow-up changes).\nSome potential improvements planned for follow-ups:\n\nMove FieldMapper#lookupValues to MappedFieldType. (?)\nHandle meta fields like _size.\nMake use of more efficient source parsing.\nSupport the API in inner_hits.\n\nOriginal issue: #49028\nMeta issue tracking design + implementation: #55363", "createdAt": "2020-07-23T00:25:03Z", "url": "https://github.com/elastic/elasticsearch/pull/60100", "merged": true, "mergeCommit": {"oid": "8a89d95372a910255479d0b05cd1f3f46e333c77"}, "closed": true, "closedAt": "2020-07-27T20:25:55Z", "author": {"login": "jtibshirani"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4E2BWAFqTQ1NDkyMzgyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5G4vHAFqTQ1NjA2Njg4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0OTIzODI4", "url": "https://github.com/elastic/elasticsearch/pull/60100#pullrequestreview-454923828", "createdAt": "2020-07-24T14:17:20Z", "commit": {"oid": "568d248ec1c00705b5427fcf334044f24c30fdb5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDoxNzoyMFrOG2xHRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDoxNzoyMFrOG2xHRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA4MDk2Ng==", "bodyText": "I think this means that we take fields as a parameter on the url for search. But I don't think we added that. Which is fine by me.", "url": "https://github.com/elastic/elasticsearch/pull/60100#discussion_r460080966", "createdAt": "2020-07-24T14:17:20Z", "author": {"login": "nik9000"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/api/search.json", "diffHunk": "@@ -56,6 +56,10 @@\n         \"type\":\"string\",\n         \"description\":\"The field to use as default where no field prefix is given in the query string\"\n       },\n+      \"fields\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "568d248ec1c00705b5427fcf334044f24c30fdb5"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1OTYyNjQ0", "url": "https://github.com/elastic/elasticsearch/pull/60100#pullrequestreview-455962644", "createdAt": "2020-07-27T16:52:55Z", "commit": {"oid": "568d248ec1c00705b5427fcf334044f24c30fdb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNjo1Mjo1NVrOG3rEcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNjo1Mjo1NVrOG3rEcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAzMDUxNA==", "bodyText": "I wonder if the returned list should be sorted similarly to what we do for doc_values or if we should preserve the original order in the document's source ? I am saying this since we may want to return results from doc_values in the future but that would be inconsistent with the current way of retrieving fields.", "url": "https://github.com/elastic/elasticsearch/pull/60100#discussion_r461030514", "createdAt": "2020-07-27T16:52:55Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java", "diffHunk": "@@ -269,6 +278,50 @@ public void parse(ParseContext context) throws IOException {\n      */\n     protected abstract void parseCreateField(ParseContext context) throws IOException;\n \n+    /**\n+     * Given access to a document's _source, return this field's values.\n+     *\n+     * In addition to pulling out the values, mappers can parse them into a standard form. This\n+     * method delegates parsing to {@link #parseSourceValue} for parsing. Most mappers will choose\n+     * to override {@link #parseSourceValue} -- for example numeric field mappers make sure to\n+     * parse the  source value into a number of the right type.\n+     *\n+     * Some mappers may need more flexibility and can override this entire method instead.\n+     *\n+     * @param lookup a lookup structure over the document's source.\n+     * @param format an optional format string used when formatting values, for example a date format.\n+     * @return a list a standardized field values.\n+     */\n+    public List<?> lookupValues(SourceLookup lookup, @Nullable String format) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "568d248ec1c00705b5427fcf334044f24c30fdb5"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "745fa627200704eff970b8081a3364b0746cbab5", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/745fa627200704eff970b8081a3364b0746cbab5", "committedDate": "2020-07-27T18:51:45Z", "message": "Add a simple 'fetch fields' phase. (#55639)\n\nCurrently the phase just looks up each field name in the _source and returns its\nvalues in the 'fields' section of the response. There are several aspects that\nneed improvement -- this PR just lays out the initial class structure and tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7145c0b0baa95bb8d4cea068ecb86eab09ad3305", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/7145c0b0baa95bb8d4cea068ecb86eab09ad3305", "committedDate": "2020-07-27T18:51:45Z", "message": "Make the fetch fields phase easier to test. (#55756)\n\nThis commit pulls out a FieldValueRetriever object, which retrieves specific\nfields given a document's source. The new object makes it easier to unit test\nthe logic, and will help keep FetchFieldsPhase from growing too complex as we\nadd more functionality."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30b5cf156f93b4313c0ebed77bad8a7b060647bd", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/30b5cf156f93b4313c0ebed77bad8a7b060647bd", "committedDate": "2020-07-27T18:51:45Z", "message": "Resolve field aliases and multi-fields. (#55889)\n\nThis commit adds the capability to `FieldTypeLookup` to retrieve a field's\npaths in the _source. When retrieving a field's values, we consult these\nsource paths to make sure we load the relevant values. This allows us to handle\nrequests for field aliases and multi-fields.\n\nWe also retrieve values that were copied into the field through copy_to. To me\nthis is what users would expect out of the API, and it's consistent with what\ncomes back from `docvalues_fields` and `stored_fields`. However it does add\nsome complexity, and was not something flagged as important from any of the\nclients I spoke to about this API. I'm looking for feedback on this point."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e2ee63c5d7afb1173c93746bc073375cfcc66a8", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/9e2ee63c5d7afb1173c93746bc073375cfcc66a8", "committedDate": "2020-07-27T18:51:45Z", "message": "Allow field mappers to retrieve fields from source. (#56928)\n\nThis PR adds new method `FieldMapper#lookupValues(SourceLookup)` that extracts\nand parses the source values. This lets us return values like numbers and dates\nin a consistent format, and also handle special data types like\n`constant_keyword`. The `lookupValues` method calls into `parseSourceValue`,\nwhich mappers can override to specify how values should be parsed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51b6a4e71dc356714d85572812936ffd605e9359", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/51b6a4e71dc356714d85572812936ffd605e9359", "committedDate": "2020-07-27T18:51:46Z", "message": "Add support for a 'format' option in fields retrieval. (#57855)\n\nThe new `format` option allows for passing a custom date format:\n\n```\nPOST logs-*/_search\n{\n  \"fields\": [\n    \"file.*\",\n    {\n      \"field\": \"event.timestamp\",\n      \"format\": \"epoch_millis\"\n    },\n    ...\n  ]\n}\n```\n\nOther API notes:\n* We use the same syntax as `docvalue_fields` for consistency. Under the hood,\nboth `fields` and `docvalue_fields` use the same `FieldAndFormat` object to\nshare serialization logic.\n* Only `date` and `date_range` fields support formatting currently."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72c69da70bd5dd04a66d3005ace09025d64f3e00", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/72c69da70bd5dd04a66d3005ace09025d64f3e00", "committedDate": "2020-07-27T18:51:46Z", "message": "Respect the ignore_above option. (#57307)\n\nFor keyword-style fields, if the source value is larger than `ignore_above`\nthen we don't retrieve the field. In particular, the field is treated as if the\nvalue didn't exist."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "828f5148b19592cd23836f6382a67f66f09213d9", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/828f5148b19592cd23836f6382a67f66f09213d9", "committedDate": "2020-07-27T18:51:46Z", "message": "For the fields fetch phase, avoid reloading stored fields. (#58196)\n\nThis PR updates FetchFieldsPhase to override hitExecute instead of hitsExecute\n(plural). This way, we can make sure that the stored fields (including _source)\nare only loaded once per hit as part of FetchPhase."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b31edee0c1d990c91f559993b79971e2921a279", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/5b31edee0c1d990c91f559993b79971e2921a279", "committedDate": "2020-07-27T18:51:46Z", "message": "Skip over metadata fields in the field retrieval API. (#58710)\n\nThis avoids unnecessary lookups, since metadata fields don't have _source\nvalues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "608d185f9c010ea63bd76c76bb210bfac4174a13", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/608d185f9c010ea63bd76c76bb210bfac4174a13", "committedDate": "2020-07-27T18:51:46Z", "message": "Return null_value when the source contains a 'null' for the field. (#58623)\n\nThis PR adds a version of `XContentMapValues.extractValue` that accepts a\ndefault value to return in place of 'null'. It then uses this method when\nlooking up source values to return the configured `null_value` instead of\n'null' when retrieving fields."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fe80b44e6d885e5f2a9e81cf4190f8a99a03af2", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/2fe80b44e6d885e5f2a9e81cf4190f8a99a03af2", "committedDate": "2020-07-27T18:51:46Z", "message": "Add docs for the fields retrieval API. (#58787)\n\nThis PR adds docs for the `fields` parameter. We now present `fields` as the\npreferred way to load specific fields in a search, with `docvalue_fields` and\n`stored_fields` as other options to look into. Source filtering is no longer\nfeatured prominently, and its section is moved to the end."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56ff9bcf565db335d7485e1101f631539fc6ecef", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/56ff9bcf565db335d7485e1101f631539fc6ecef", "committedDate": "2020-07-27T18:51:46Z", "message": "Apply keyword normalizers in the field retrieval API. (#59260)\n\nAs we discussed in the meta-issue, when returning `keyword` in the fields\r\nretrieval API, we'll apply their `normalizer`. This decision is not a clear-cut\r\none, and we'll validate it with internal users before merging the feature\r\nbranch."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b2247c950ca8d1bff0fe058eaff729fb1d3f345", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/8b2247c950ca8d1bff0fe058eaff729fb1d3f345", "committedDate": "2020-07-27T18:52:23Z", "message": "Support spatial fields in field retrieval API. (#59821)\n\nAlthough we accept a variety of formats during indexing, spatial data is\nreturned in a single consistent format. This is GeoJSON by default, but\nwell-known text is also supported by passing the option 'format: wkt'.\n\nNote that points (in addition to shapes) are returned in GeoJSON by default. The\nreasoning is that this gives better consistency, and is the most convenient\nformat for most REST API users."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "594d631b65e4911a22341ab7ebc22cb57cdff118", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/594d631b65e4911a22341ab7ebc22cb57cdff118", "committedDate": "2020-07-27T18:53:31Z", "message": "Remove the 'fields' URL param from the REST spec.\n\nWe don't actually support 'fields' as a URL parameter."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "840cd116d0b319bde02b19267e8835d8003b18f8", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/840cd116d0b319bde02b19267e8835d8003b18f8", "committedDate": "2020-07-27T19:08:41Z", "message": "Document that arrays are returned in an undefined order."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "568d248ec1c00705b5427fcf334044f24c30fdb5", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/568d248ec1c00705b5427fcf334044f24c30fdb5", "committedDate": "2020-07-22T23:23:02Z", "message": "Support spatial fields in field retrieval API. (#59821)\n\nAlthough we accept a variety of formats during indexing, spatial data is\nreturned in a single consistent format. This is GeoJSON by default, but\nwell-known text is also supported by passing the option 'format: wkt'.\n\nNote that points (in addition to shapes) are returned in GeoJSON by default. The\nreasoning is that this gives better consistency, and is the most convenient\nformat for most REST API users."}, "afterCommit": {"oid": "840cd116d0b319bde02b19267e8835d8003b18f8", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/840cd116d0b319bde02b19267e8835d8003b18f8", "committedDate": "2020-07-27T19:08:41Z", "message": "Document that arrays are returned in an undefined order."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MDY2ODg2", "url": "https://github.com/elastic/elasticsearch/pull/60100#pullrequestreview-456066886", "createdAt": "2020-07-27T19:21:10Z", "commit": {"oid": "568d248ec1c00705b5427fcf334044f24c30fdb5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4089, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}