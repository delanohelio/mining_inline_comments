{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MzYyMTUy", "number": 58511, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1Njo0OVrOEIeF2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODo1NzoyNVrOEIrFVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzE3MDgwOnYy", "diffSide": "RIGHT", "path": "server/src/internalClusterTest/java/org/elasticsearch/discovery/SnapshotDisruptionIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1Njo0OVrOGodClA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1Njo0OVrOGodClA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA3MjAyMA==", "bodyText": "These tests should have access to the utilities from abstract snapshot tests.", "url": "https://github.com/elastic/elasticsearch/pull/58511#discussion_r445072020", "createdAt": "2020-06-24T17:56:49Z", "author": {"login": "original-brownbear"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/discovery/SnapshotDisruptionIT.java", "diffHunk": "@@ -65,7 +66,7 @@\n  * Tests snapshot operations during disruptions.\n  */\n @ESIntegTestCase.ClusterScope(scope = ESIntegTestCase.Scope.TEST, numDataNodes = 0)\n-public class SnapshotDisruptionIT extends ESIntegTestCase {\n+public class SnapshotDisruptionIT extends AbstractSnapshotIntegTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzE3Mjc1OnYy", "diffSide": "RIGHT", "path": "server/src/internalClusterTest/java/org/elasticsearch/discovery/SnapshotDisruptionIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1NzoyNlrOGodD6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1NzoyNlrOGodD6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA3MjM2Mg==", "bodyText": "Had to add this to force a cleanup run so the repo consistency check doesn't start complaining about leaked files from the broken snapshot run in this test.", "url": "https://github.com/elastic/elasticsearch/pull/58511#discussion_r445072362", "createdAt": "2020-06-24T17:57:26Z", "author": {"login": "original-brownbear"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/discovery/SnapshotDisruptionIT.java", "diffHunk": "@@ -228,6 +229,48 @@ public void testDisruptionAfterShardFinalization() throws Exception {\n                 client(masterNode).admin().cluster().prepareCreateSnapshot(repoName, \"snapshot-2\").setWaitForCompletion(true).get();\n         final SnapshotInfo successfulSnapshotInfo = successfulSnapshot.getSnapshotInfo();\n         assertThat(successfulSnapshotInfo.state(), is(SnapshotState.SUCCESS));\n+\n+        logger.info(\"--> making sure snapshot delete works out cleanly\");\n+        assertAcked(client().admin().cluster().prepareDeleteSnapshot(repoName, \"snapshot-2\").get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzE3NTEzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1ODowN1rOGodFhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1ODowN1rOGodFhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA3Mjc3Mg==", "bodyText": "Gotta copy the keyset because failSnapshotCompletionListeners modifies the map", "url": "https://github.com/elastic/elasticsearch/pull/58511#discussion_r445072772", "createdAt": "2020-06-24T17:58:07Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -453,6 +453,15 @@ public void applyClusterState(ClusterChangedEvent event) {\n                 if (newMaster) {\n                     finalizeSnapshotDeletionFromPreviousMaster(event.state());\n                 }\n+            } else if (snapshotCompletionListeners.isEmpty() == false) {\n+                // We have snapshot listeners but are not the master any more. Fail all waiting listeners except for those that already\n+                // have their snapshots finalizing (those that are already finalizing will fail on their own from to update the cluster\n+                // state).\n+                for (Snapshot snapshot : Set.copyOf(snapshotCompletionListeners.keySet())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTI5OTQyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODo1NzoyNVrOGoxrVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjowOTozMFrOGpBuiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxMDEzMw==", "bodyText": "Just to be sure, do we already assert somewhere else that there are not listeners leaking after any cluster state update?", "url": "https://github.com/elastic/elasticsearch/pull/58511#discussion_r445410133", "createdAt": "2020-06-25T08:57:25Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1330,6 +1339,20 @@ protected void doClose() {\n         clusterService.removeApplier(this);\n     }\n \n+    /**\n+     * Assert that no in-memory state for any running snapshot operation exists in this instance.\n+     */\n+    public boolean assertAllListenersResolved() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5MTk2NA==", "bodyText": "Replying to myself: we do, in SnapshotsService.assertConsistentWithClusterState()", "url": "https://github.com/elastic/elasticsearch/pull/58511#discussion_r445491964", "createdAt": "2020-06-25T11:33:24Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1330,6 +1339,20 @@ protected void doClose() {\n         clusterService.removeApplier(this);\n     }\n \n+    /**\n+     * Assert that no in-memory state for any running snapshot operation exists in this instance.\n+     */\n+    public boolean assertAllListenersResolved() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxMDEzMw=="}, "originalCommit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY3MzA5OQ==", "bodyText": "Yea sadly that assertion (and the way it works in general) can only make sure that we are not failing to resolve a listener during an action (i.e. updating the state because of some other state change or shard update message). It unfortunately couldn't detect that the final state of things is what we want.", "url": "https://github.com/elastic/elasticsearch/pull/58511#discussion_r445673099", "createdAt": "2020-06-25T16:09:30Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1330,6 +1339,20 @@ protected void doClose() {\n         clusterService.removeApplier(this);\n     }\n \n+    /**\n+     * Assert that no in-memory state for any running snapshot operation exists in this instance.\n+     */\n+    public boolean assertAllListenersResolved() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxMDEzMw=="}, "originalCommit": {"oid": "5a9813941d3ad07499f825c961038e1550144217"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1416, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}