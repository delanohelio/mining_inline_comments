{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NTk3NzU4", "number": 54762, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODozMjo1OVrODutuOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODozMjo1OVrODutuOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzEwMjAwOnYy", "diffSide": "RIGHT", "path": "docs/reference/autoscaling/apis/get-autoscaling-policy.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODozMjo1OVrOGAzx9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDoyMTowOFrOGA0dBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMTU1Nw==", "bodyText": "I wonder if we need an array to prepare for listing all deciders? I guess we can state we will never add wildcard support and hence it is two different endpoints, i.e., this is OK?", "url": "https://github.com/elastic/elasticsearch/pull/54762#discussion_r403501557", "createdAt": "2020-04-04T18:32:59Z", "author": {"login": "henningandersen"}, "path": "docs/reference/autoscaling/apis/get-autoscaling-policy.asciidoc", "diffHunk": "@@ -0,0 +1,67 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+[[autoscaling-get-autoscaling-policy]]\n+=== Get autoscaling policy API\n+++++\n+<titleabbrev>Get autoscaling policy</titleabbrev>\n+++++\n+\n+Get autoscaling policy.\n+\n+[[autoscaling-get-autoscaling-policy-request]]\n+==== {api-request-title}\n+\n+[source,console]\n+--------------------------------------------------\n+PUT /_autoscaling/policy/my_autoscaling_policy\n+{\n+  \"policy\": {\n+    \"deciders\": {\n+      \"always\": {\n+      }\n+    }\n+  }\n+}\n+--------------------------------------------------\n+// TESTSETUP\n+\n+[source,console]\n+--------------------------------------------------\n+GET /_autoscaling/policy/<name>\n+--------------------------------------------------\n+// TEST[s/<name>/my_autoscaling_policy/]\n+\n+[[autoscaling-get-autoscaling-policy-prereqs]]\n+==== {api-prereq-title}\n+\n+* If the {es} {security-features} are enabled, you must have\n+`manage_autoscaling` cluster privileges. For more information, see\n+<<security-privileges>>.\n+\n+[[autoscaling-get-autoscaling-policy-desc]]\n+==== {api-description-title}\n+\n+This API gets an autoscaling policy with the provided name.\n+\n+[[autoscaling-get-autoscaling-policy-examples]]\n+==== {api-examples-title}\n+\n+This example gets an autoscaling policy named `my_autosaling_policy`.\n+\n+[source,console]\n+--------------------------------------------------\n+GET /_autoscaling/policy/my_autoscaling_policy\n+--------------------------------------------------\n+// TEST\n+\n+The API returns the following result:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7ad7f1c61923465f48d739e4a35a44be8f8d37"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxMjU4Mw==", "bodyText": "Yeah, I do not think that we should support wildcards, or getting multiple policies at once (comma-separated). In general, I think that it greatly complicates our APIs (e.g., what do we do if one policy exists, and another doesn't? we have faced these challenges with existing APIs and I think it's just complicated our APIs and their implementations with little benefit to our users).", "url": "https://github.com/elastic/elasticsearch/pull/54762#discussion_r403512583", "createdAt": "2020-04-04T20:21:08Z", "author": {"login": "jasontedor"}, "path": "docs/reference/autoscaling/apis/get-autoscaling-policy.asciidoc", "diffHunk": "@@ -0,0 +1,67 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+[[autoscaling-get-autoscaling-policy]]\n+=== Get autoscaling policy API\n+++++\n+<titleabbrev>Get autoscaling policy</titleabbrev>\n+++++\n+\n+Get autoscaling policy.\n+\n+[[autoscaling-get-autoscaling-policy-request]]\n+==== {api-request-title}\n+\n+[source,console]\n+--------------------------------------------------\n+PUT /_autoscaling/policy/my_autoscaling_policy\n+{\n+  \"policy\": {\n+    \"deciders\": {\n+      \"always\": {\n+      }\n+    }\n+  }\n+}\n+--------------------------------------------------\n+// TESTSETUP\n+\n+[source,console]\n+--------------------------------------------------\n+GET /_autoscaling/policy/<name>\n+--------------------------------------------------\n+// TEST[s/<name>/my_autoscaling_policy/]\n+\n+[[autoscaling-get-autoscaling-policy-prereqs]]\n+==== {api-prereq-title}\n+\n+* If the {es} {security-features} are enabled, you must have\n+`manage_autoscaling` cluster privileges. For more information, see\n+<<security-privileges>>.\n+\n+[[autoscaling-get-autoscaling-policy-desc]]\n+==== {api-description-title}\n+\n+This API gets an autoscaling policy with the provided name.\n+\n+[[autoscaling-get-autoscaling-policy-examples]]\n+==== {api-examples-title}\n+\n+This example gets an autoscaling policy named `my_autosaling_policy`.\n+\n+[source,console]\n+--------------------------------------------------\n+GET /_autoscaling/policy/my_autoscaling_policy\n+--------------------------------------------------\n+// TEST\n+\n+The API returns the following result:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMTU1Nw=="}, "originalCommit": {"oid": "2d7ad7f1c61923465f48d739e4a35a44be8f8d37"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1343, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}