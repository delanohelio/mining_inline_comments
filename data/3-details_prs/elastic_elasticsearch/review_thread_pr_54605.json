{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MTY2Nzgw", "number": 54605, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNTo0NzozM1rODtzb0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNTo1Mzo1N1rODtzg2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzU1MjE3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/RegressionTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNTo0NzozM1rOF_cF9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNTo0NzozM1rOF_cF9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2NDg4Ng==", "bodyText": "nit: I think the code is more readable when all the map entries are left-aligned:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        equalTo(Map.of(\"dependent_variable\", \"foo\",\n          \n          \n            \n                        equalTo(Map.of(\n          \n          \n            \n                            \"dependent_variable\", \"foo\",", "url": "https://github.com/elastic/elasticsearch/pull/54605#discussion_r402064886", "createdAt": "2020-04-02T05:47:33Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/RegressionTests.java", "diffHunk": "@@ -131,7 +131,18 @@ public void testGetTrainingPercent() {\n     public void testGetParams() {\n         assertThat(\n             new Regression(\"foo\").getParams(null),\n-            equalTo(Map.of(\"dependent_variable\", \"foo\", \"prediction_field_name\", \"foo_prediction\")));\n+            equalTo(Map.of(\"dependent_variable\", \"foo\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05f0c450dc7f4f27a82822359fffcf2384db7fe2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzU2NTA2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ExplainDataFrameAnalyticsIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNTo1Mzo1N1rOF_cNXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNTo1Mzo1N1rOF_cNXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2Njc4MA==", "bodyText": "Nit: You shouldn't need to use .getBytes() as ByteSizeValue is comparable so it should support the lessThan matcher in line 122.", "url": "https://github.com/elastic/elasticsearch/pull/54605#discussion_r402066780", "createdAt": "2020-04-02T05:53:57Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ExplainDataFrameAnalyticsIT.java", "diffHunk": "@@ -81,4 +84,41 @@ public void testSourceQueryIsApplied() throws IOException {\n \n         assertThat(explainResponse.getMemoryEstimation().getExpectedMemoryWithoutDisk().getKb(), lessThanOrEqualTo(1024L));\n     }\n+\n+    public void testTrainingPercentageIsApplied() throws IOException {\n+        String sourceIndex = \"test-training-percentage-applied\";\n+        RegressionIT.indexData(sourceIndex, 100, 0);\n+\n+        DataFrameAnalyticsConfig config = new DataFrameAnalyticsConfig.Builder()\n+            .setId(\"dfa-training-100-\" + sourceIndex)\n+            .setSource(new DataFrameAnalyticsSource(new String[] { sourceIndex },\n+                QueryProvider.fromParsedQuery(QueryBuilders.matchAllQuery()),\n+                null))\n+            .setAnalysis(new Regression(RegressionIT.DEPENDENT_VARIABLE_FIELD,\n+                BoostedTreeParams.builder().build(),\n+                null,\n+                100.0,\n+                null))\n+            .buildForExplain();\n+\n+        ExplainDataFrameAnalyticsAction.Response explainResponse = explainDataFrame(config);\n+\n+        long allDataUsedForTraining = explainResponse.getMemoryEstimation().getExpectedMemoryWithoutDisk().getBytes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05f0c450dc7f4f27a82822359fffcf2384db7fe2"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3941, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}