{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNzY1MjUw", "number": 62827, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzowMzowOVrOEmlauQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNTozOTo0N1rOEmqamg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODk0MzkzOnYy", "diffSide": "LEFT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedNodeSelector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzowMzowOVrOHWsq-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoxODoyOVrOHYxPGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU2MjYxOQ==", "bodyText": "The other option is to do this foreach loop but simply continue if allow_no_indices is true.\n@dimitris-athanasiou @droberts195 what do you think? I am not sure if we want to do this with allow_no_indices being true as then we might have an issue later on when we attempt to extract fields.\nThis way enforces at least one concrete index to exist (for now)", "url": "https://github.com/elastic/elasticsearch/pull/62827#discussion_r493562619", "createdAt": "2020-09-23T13:03:09Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedNodeSelector.java", "diffHunk": "@@ -120,37 +121,34 @@ private AssignmentFailure checkAssignment() {\n \n     @Nullable\n     private AssignmentFailure verifyIndicesActive() {\n-        for (String index : datafeedIndices) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdec064042b8819f63189d7ec9fcedac3c3a23cf"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczNDU1Mg==", "bodyText": "I think it makes sense to require at least one concrete index for now.", "url": "https://github.com/elastic/elasticsearch/pull/62827#discussion_r495734552", "createdAt": "2020-09-28T07:18:29Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedNodeSelector.java", "diffHunk": "@@ -120,37 +121,34 @@ private AssignmentFailure checkAssignment() {\n \n     @Nullable\n     private AssignmentFailure verifyIndicesActive() {\n-        for (String index : datafeedIndices) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU2MjYxOQ=="}, "originalCommit": {"oid": "fdec064042b8819f63189d7ec9fcedac3c3a23cf"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTc2MjgyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNTozOTo0N1rOHW0vvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNTozOTo0N1rOHW0vvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY5NDkwOA==", "bodyText": "t?\nWhats wrong with u or f or q\nI think a unit test would be easier to understand and provide better coverage.", "url": "https://github.com/elastic/elasticsearch/pull/62827#discussion_r493694908", "createdAt": "2020-09-23T15:39:47Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsIT.java", "diffHunk": "@@ -146,6 +146,43 @@ public void testLookbackOnlyDataStream() throws Exception {\n         waitUntilJobIsClosed(job.getId());\n     }\n \n+    public void testLookbackOneEmptyPattern() throws Exception {\n+        client().admin().indices().prepareCreate(\"data-1\")\n+            .setMapping(\"time\", \"type=date\")\n+            .get();\n+        long numDocs = randomIntBetween(32, 2048);\n+        long now = System.currentTimeMillis();\n+        long oneWeekAgo = now - 604800000;\n+        long twoWeeksAgo = oneWeekAgo - 604800000;\n+        indexDocs(logger, \"data-1\", numDocs, twoWeeksAgo, oneWeekAgo);\n+\n+        Job.Builder job = createScheduledJob(\"lookback-empty-pattern-job\");\n+        registerJob(job);\n+        putJob(job);\n+        openJob(job.getId());\n+        assertBusy(() -> assertEquals(getJobStats(job.getId()).get(0).getState(), JobState.OPENED));\n+\n+        List<String> t = new ArrayList<>(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdec064042b8819f63189d7ec9fcedac3c3a23cf"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3439, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}