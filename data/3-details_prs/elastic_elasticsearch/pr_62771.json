{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwOTc1MjU0", "number": 62771, "title": "Implement Shard Snapshot Clone Logic", "bodyText": "First part of the snapshot clone logic that implements the snapshot clone functionality on\nthe repository level (all other changes required for snapshot cloning will be in the snapshot state machine and can reuse existing repository functionality).\nRelates #61839", "createdAt": "2020-09-22T14:19:23Z", "url": "https://github.com/elastic/elasticsearch/pull/62771", "merged": true, "mergeCommit": {"oid": "136940285a4595f74e5df4bc916a46f5e2bfc7ff"}, "closed": true, "closedAt": "2020-09-28T10:14:09Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLYsUgAH2gAyNDkwOTc1MjU0OjJiOTJlNGFlM2JlOTA5M2VjYzhmMjZjZjYzNzNiZjgyYzljMmQ3MjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNQZbDAFqTQ5NzM1MDY0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2b92e4ae3be9093ecc8f26cf6373bf82c9c2d726", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/2b92e4ae3be9093ecc8f26cf6373bf82c9c2d726", "committedDate": "2020-09-22T14:16:32Z", "message": "Implement Shard Snapshot Clone Logic\n\nFirst part of the snapshot clone logic that implements the snapshot clone functionality on\nthe repository level."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTE2ODg5", "url": "https://github.com/elastic/elasticsearch/pull/62771#pullrequestreview-493516889", "createdAt": "2020-09-22T14:24:04Z", "commit": {"oid": "2b92e4ae3be9093ecc8f26cf6373bf82c9c2d726"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNDoyNDowNFrOHV8s9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNDoyNDowNFrOHV8s9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc3NjY5NA==", "bodyText": "This class is obviously not necessary here (aside from introducing the type for the API), it'll play a more central role in the state machine.", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r492776694", "createdAt": "2020-09-22T14:24:04Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryShardId.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.repositories;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a shard snapshot in a repository.\n+ */\n+public final class RepositoryShardId implements Writeable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b92e4ae3be9093ecc8f26cf6373bf82c9c2d726"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62425bd4ccd701b958c7cb69e19dbdd9aef7f83d", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/62425bd4ccd701b958c7cb69e19dbdd9aef7f83d", "committedDate": "2020-09-22T14:40:38Z", "message": "Merge remote-tracking branch 'elastic/master' into clone-shard-logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3392d84a1832b4a7b17e77abb2b5db6a9dd3af25", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/3392d84a1832b4a7b17e77abb2b5db6a9dd3af25", "committedDate": "2020-09-22T15:35:58Z", "message": "Merge remote-tracking branch 'elastic/master' into clone-shard-logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/3cc039d40df7c1358d113b79f8e10f97b6b0682d", "committedDate": "2020-09-23T09:21:51Z", "message": "Merge remote-tracking branch 'elastic/master' into clone-shard-logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjYyODk0", "url": "https://github.com/elastic/elasticsearch/pull/62771#pullrequestreview-497262894", "createdAt": "2020-09-28T07:47:06Z", "commit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzo0NzowN1rOHYyG5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODowNTowNFrOHYysCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0ODgzNw==", "bodyText": "Nit: maybe targetSnapshotName -> cloneSnapshotName ?", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495748837", "createdAt": "2020-09-28T07:47:07Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java", "diffHunk": "@@ -386,6 +386,19 @@ public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<File\n         this.incrementalSize = incrementalSize;\n     }\n \n+    /**\n+     * Creates a new instance has a different name and zero incremental file counts but is identical to this instance in terms of the files\n+     * it references.\n+     *\n+     * @param targetSnapshotName target snapshot name\n+     * @param startTime          time the clone operation on the repository was started\n+     * @param time               time it took to create the clone\n+     */\n+    public BlobStoreIndexShardSnapshot asClone(String targetSnapshotName, long startTime, long time) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0OTMwNg==", "bodyText": "Can fit on a single line I think", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495749306", "createdAt": "2020-09-28T07:48:06Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java", "diffHunk": "@@ -386,6 +386,19 @@ public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<File\n         this.incrementalSize = incrementalSize;\n     }\n \n+    /**\n+     * Creates a new instance has a different name and zero incremental file counts but is identical to this instance in terms of the files\n+     * it references.\n+     *\n+     * @param targetSnapshotName target snapshot name\n+     * @param startTime          time the clone operation on the repository was started\n+     * @param time               time it took to create the clone\n+     */\n+    public BlobStoreIndexShardSnapshot asClone(String targetSnapshotName, long startTime, long time) {\n+        return new BlobStoreIndexShardSnapshot(\n+                targetSnapshotName, indexVersion, indexFiles, startTime, time, 0, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc1MDg3NQ==", "bodyText": "Maybe add the source name in the message?", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495750875", "createdAt": "2020-09-28T07:51:08Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java", "diffHunk": "@@ -95,6 +95,30 @@ private BlobStoreIndexShardSnapshots(Map<String, FileInfo> files, List<SnapshotF\n         this.physicalFiles = unmodifiableMap(mapBuilder);\n     }\n \n+    /**\n+     * Create a new instance that has a new snapshot by name {@code target} added which shares all files with the snapshot of name\n+     * {@code source}.\n+     *\n+     * @param source source snapshot name\n+     * @param target target snapshot name\n+     * @return new instance with added cloned snapshot\n+     */\n+    public BlobStoreIndexShardSnapshots withClone(String source, String target) {\n+        SnapshotFiles sourceFiles = null;\n+        for (SnapshotFiles shardSnapshot : shardSnapshots) {\n+            if (shardSnapshot.snapshot().equals(source)) {\n+                sourceFiles = shardSnapshot;\n+                break;\n+            }\n+        }\n+        if (sourceFiles == null) {\n+            throw new IllegalArgumentException(\"unknown source\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc1ODM0NQ==", "bodyText": "I think we should check and fail that the repository is not read-only?", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495758345", "createdAt": "2020-09-28T08:05:04Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -397,6 +398,64 @@ public TimeValue timeout() {\n         }, onFailure));\n     }\n \n+    @Override\n+    public void cloneShardSnapshot(SnapshotId source, SnapshotId target, RepositoryShardId shardId,\n+                                   @Nullable String shardGeneration, ActionListener<String> listener) {\n+        final IndexId index = shardId.index();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57a92215ea8014bfc218bed6272fd49638dd3d02", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/57a92215ea8014bfc218bed6272fd49638dd3d02", "committedDate": "2020-09-28T08:58:00Z", "message": "Merge remote-tracking branch 'elastic/master' into clone-shard-logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37c18f87026e6ae038f170470f32f9955cc79d54", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/37c18f87026e6ae038f170470f32f9955cc79d54", "committedDate": "2020-09-28T09:03:38Z", "message": "CR: comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MzUwNjQx", "url": "https://github.com/elastic/elasticsearch/pull/62771#pullrequestreview-497350641", "createdAt": "2020-09-28T09:44:30Z", "commit": {"oid": "37c18f87026e6ae038f170470f32f9955cc79d54"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4724, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}