{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NjY4NDEz", "number": 59366, "title": "Reduce merge map memory overhead in the Variable Width Histogram Aggregation", "bodyText": "When a document which is distant from existing buckets gets collected, the variable_width_histogram will create a new bucket and then insert it into the ordered list of buckets.\nCurrently, a new merge map array is created to move this bucket. This is very expensive as there might be thousands of buckets.\nThis PR creates mergeBuckets(UnaryOperator<Long> mergeMap) methods in BucketsAggregator and MergingBucketsDefferingCollector, and updates the variable_width_histogram  to use them. This eliminates the need to create an entire merge map array for each new bucket and reduces the memory overhead of the algorithm.", "createdAt": "2020-07-10T22:26:18Z", "url": "https://github.com/elastic/elasticsearch/pull/59366", "merged": true, "mergeCommit": {"oid": "8b7c55600fe3469966e321c59937b384e11564e9"}, "closed": true, "closedAt": "2020-07-24T14:08:32Z", "author": {"login": "jamesdorfman"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczrAZJAH2gAyNDQ3NjY4NDEzOjRjNzA2ODMzNjQ1Zjc2OWU4YTQzMjcwOGMzN2QyNGE5NjcxN2I1YTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4DpXGAH2gAyNDQ3NjY4NDEzOmM2NzVmNjg1YWFkM2FmNDQwMjBlMzg4NjAzN2U1ZjZiM2ZiMTM0ZDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3", "author": {"user": {"login": "jamesdorfman", "name": "James Dorfman"}}, "url": "https://github.com/elastic/elasticsearch/commit/4c706833645f769e8a432708c37d24a96717b5a3", "committedDate": "2020-07-10T22:02:34Z", "message": "Convert merge map to a UnaryOperator in VWH"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTAzNzUx", "url": "https://github.com/elastic/elasticsearch/pull/59366#pullrequestreview-446903751", "createdAt": "2020-07-12T19:28:24Z", "commit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxOToyODoyNVrOGwWiPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxOTozNjoxM1rOGwWlQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1NDA0Nw==", "bodyText": "I think you could write this:\nmergeBuckets(newNumbBuckets, buck -> mergeMap[Math.toIntExact(bucket)]);", "url": "https://github.com/elastic/elasticsearch/pull/59366#discussion_r453354047", "createdAt": "2020-07-12T19:28:25Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java", "diffHunk": "@@ -107,15 +108,33 @@ public final void collectExistingBucket(LeafBucketCollector subCollector, int do\n      * Refer to that method for documentation about the merge map.\n      */\n     public final void mergeBuckets(long[] mergeMap, long newNumBuckets) {\n+        UnaryOperator<Long> mergeMapOperator = new UnaryOperator<Long>() {\n+            @Override\n+            public Long apply(Long bucket) {\n+                return mergeMap[Math.toIntExact(bucket)];\n+            }\n+        };\n+\n+        mergeBuckets(mergeMapOperator, newNumBuckets);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1NDI4OA==", "bodyText": "Two things, only one is important though:\n\nCould you replace UnaryOperator<Long> with LongUnaryOperator? That'll prevent auto-boxing of the parameter.\nCould you switch the order of the arguments? I think the call sites are a little prettier when the \"function\" argument is last, if possible.", "url": "https://github.com/elastic/elasticsearch/pull/59366#discussion_r453354288", "createdAt": "2020-07-12T19:30:50Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java", "diffHunk": "@@ -107,15 +108,33 @@ public final void collectExistingBucket(LeafBucketCollector subCollector, int do\n      * Refer to that method for documentation about the merge map.\n      */\n     public final void mergeBuckets(long[] mergeMap, long newNumBuckets) {\n+        UnaryOperator<Long> mergeMapOperator = new UnaryOperator<Long>() {\n+            @Override\n+            public Long apply(Long bucket) {\n+                return mergeMap[Math.toIntExact(bucket)];\n+            }\n+        };\n+\n+        mergeBuckets(mergeMapOperator, newNumBuckets);\n+    }\n+\n+    /**\n+     * This only tidies up doc counts. Call {@link MergingBucketsDeferringCollector#mergeBuckets(UnaryOperator)} to\n+     * merge the actual ordinals and doc ID deltas.\n+     */\n+    public final void mergeBuckets(UnaryOperator<Long> mergeMap, long newNumBuckets){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1NDMxOQ==", "bodyText": "Could you swap to long i?", "url": "https://github.com/elastic/elasticsearch/pull/59366#discussion_r453354319", "createdAt": "2020-07-12T19:31:02Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java", "diffHunk": "@@ -107,15 +108,33 @@ public final void collectExistingBucket(LeafBucketCollector subCollector, int do\n      * Refer to that method for documentation about the merge map.\n      */\n     public final void mergeBuckets(long[] mergeMap, long newNumBuckets) {\n+        UnaryOperator<Long> mergeMapOperator = new UnaryOperator<Long>() {\n+            @Override\n+            public Long apply(Long bucket) {\n+                return mergeMap[Math.toIntExact(bucket)];\n+            }\n+        };\n+\n+        mergeBuckets(mergeMapOperator, newNumBuckets);\n+    }\n+\n+    /**\n+     * This only tidies up doc counts. Call {@link MergingBucketsDeferringCollector#mergeBuckets(UnaryOperator)} to\n+     * merge the actual ordinals and doc ID deltas.\n+     */\n+    public final void mergeBuckets(UnaryOperator<Long> mergeMap, long newNumBuckets){\n         try (IntArray oldDocCounts = docCounts) {\n             docCounts = bigArrays.newIntArray(newNumBuckets, true);\n             docCounts.fill(0, newNumBuckets, 0);\n             for (int i = 0; i < oldDocCounts.size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1NDQyNw==", "bodyText": "I think it is worth saying what the unary operator does here, that -1 means throw away and otherwise it is the destination index.", "url": "https://github.com/elastic/elasticsearch/pull/59366#discussion_r453354427", "createdAt": "2020-07-12T19:32:25Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java", "diffHunk": "@@ -107,15 +108,33 @@ public final void collectExistingBucket(LeafBucketCollector subCollector, int do\n      * Refer to that method for documentation about the merge map.\n      */\n     public final void mergeBuckets(long[] mergeMap, long newNumBuckets) {\n+        UnaryOperator<Long> mergeMapOperator = new UnaryOperator<Long>() {\n+            @Override\n+            public Long apply(Long bucket) {\n+                return mergeMap[Math.toIntExact(bucket)];\n+            }\n+        };\n+\n+        mergeBuckets(mergeMapOperator, newNumBuckets);\n+    }\n+\n+    /**\n+     * This only tidies up doc counts. Call {@link MergingBucketsDeferringCollector#mergeBuckets(UnaryOperator)} to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1NDgxOA==", "bodyText": "I'd have tried to write this:\nmergeBuckets(numClusters, bucket -> {\n  if (i < index) {\n    // The clusters in range {0 ... idx - 1} don't move\n    return 1;\n  }\n  if (i == numClusters - 1) {\n    // The new cluster moves to index\n    return i;\n  }\n  // The clusters in range {index ... numClusters - 1} shift forward\n  return i = 1;\n});\n\nI like the \"inline function declaration\" form of this because it makes it super obvious that it doesn't escape.\nI also like early return instead of else if, but that is totally up to you. Its a matter of style and we don't have a standard.", "url": "https://github.com/elastic/elasticsearch/pull/59366#discussion_r453354818", "createdAt": "2020-07-12T19:36:13Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/VariableWidthHistogramAggregator.java", "diffHunk": "@@ -354,21 +355,22 @@ private void moveLastCluster(int index){\n                 clusterSizes.set(index, holdSize);\n \n                 // Move the underlying buckets\n-                long[] mergeMap = new long[numClusters];\n-                for (int i = 0; i < index; i++) {\n-                    // The clusters in range {0 ... idx - 1} don't move\n-                    mergeMap[i] = i;\n-                }\n-                for (int i = index; i < numClusters - 1; i++) {\n-                    // The clusters in range {index ... numClusters - 1} shift up\n-                    mergeMap[i] = i + 1;\n-                }\n-                // Finally, the new cluster moves to index\n-                mergeMap[numClusters - 1] = index;\n+                UnaryOperator<Long> mergeMap = new UnaryOperator<Long>() {\n+                    @Override\n+                    public Long apply(Long i) {\n+                       if(i < index) {\n+                           // The clusters in range {0 ... idx - 1} don't move\n+                           return i;\n+                       } else if(i == numClusters - 1) {\n+                           // The new cluster moves to index\n+                           return (long)index;\n+                       } else {\n+                           // The clusters in range {index ... numClusters - 1} shift forward\n+                           return i + 1;\n+                       }\n+                    }\n+                };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDk2ODY1", "url": "https://github.com/elastic/elasticsearch/pull/59366#pullrequestreview-447496865", "createdAt": "2020-07-13T18:27:58Z", "commit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoyNzo1OVrOGw0mVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoyNzo1OVrOGw0mVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0NjYxNA==", "bodyText": "Could you deprecate this method? I think all callers would be better off with the other method.", "url": "https://github.com/elastic/elasticsearch/pull/59366#discussion_r453846614", "createdAt": "2020-07-13T18:27:59Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java", "diffHunk": "@@ -107,15 +108,33 @@ public final void collectExistingBucket(LeafBucketCollector subCollector, int do\n      * Refer to that method for documentation about the merge map.\n      */\n     public final void mergeBuckets(long[] mergeMap, long newNumBuckets) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e90bd4f08e0dd836cd3238b7776a99c62b5c03e", "author": {"user": {"login": "jamesdorfman", "name": "James Dorfman"}}, "url": "https://github.com/elastic/elasticsearch/commit/5e90bd4f08e0dd836cd3238b7776a99c62b5c03e", "committedDate": "2020-07-15T06:30:17Z", "message": "Change UnaryOperator to LongUnaryOperator (and other similar style fixes) in the mergeBuckets methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77ebb6381c72374d3bfed2bc2ab44b18bfb5f122", "author": {"user": {"login": "jamesdorfman", "name": "James Dorfman"}}, "url": "https://github.com/elastic/elasticsearch/commit/77ebb6381c72374d3bfed2bc2ab44b18bfb5f122", "committedDate": "2020-07-15T06:31:33Z", "message": "Add tests for BucketsAggregator::mergeBuckets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b32bafb76fccbfdb523ce61c2da085c95996e0d", "author": {"user": {"login": "jamesdorfman", "name": "James Dorfman"}}, "url": "https://github.com/elastic/elasticsearch/commit/3b32bafb76fccbfdb523ce61c2da085c95996e0d", "committedDate": "2020-07-16T16:49:06Z", "message": " Add tests for MergingBucketsDeferringCollector::mergeBuckets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e8597f4b67fe0de7d701b220257633217917ff6", "author": {"user": {"login": "jamesdorfman", "name": "James Dorfman"}}, "url": "https://github.com/elastic/elasticsearch/commit/4e8597f4b67fe0de7d701b220257633217917ff6", "committedDate": "2020-07-16T17:06:39Z", "message": "Fix formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71b1797e2bd827bad5bf30c91c8d994a57a3c62b", "author": {"user": {"login": "jamesdorfman", "name": "James Dorfman"}}, "url": "https://github.com/elastic/elasticsearch/commit/71b1797e2bd827bad5bf30c91c8d994a57a3c62b", "committedDate": "2020-07-16T19:17:37Z", "message": "Remove unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMjkyNjkz", "url": "https://github.com/elastic/elasticsearch/pull/59366#pullrequestreview-450292693", "createdAt": "2020-07-17T00:02:14Z", "commit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMjoxNFrOGzA0Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMzowOVrOGzA1RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0Mzk0Mw==", "bodyText": "Marking it as deprecated is plenty for this or!", "url": "https://github.com/elastic/elasticsearch/pull/59366#discussion_r456143943", "createdAt": "2020-07-17T00:02:14Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java", "diffHunk": "@@ -107,15 +108,33 @@ public final void collectExistingBucket(LeafBucketCollector subCollector, int do\n      * Refer to that method for documentation about the merge map.\n      */\n     public final void mergeBuckets(long[] mergeMap, long newNumBuckets) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0NjYxNA=="}, "originalCommit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0NDE5Nw==", "bodyText": "Ah! Well, what you have is just fine too.", "url": "https://github.com/elastic/elasticsearch/pull/59366#discussion_r456144197", "createdAt": "2020-07-17T00:03:09Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/VariableWidthHistogramAggregator.java", "diffHunk": "@@ -354,21 +355,22 @@ private void moveLastCluster(int index){\n                 clusterSizes.set(index, holdSize);\n \n                 // Move the underlying buckets\n-                long[] mergeMap = new long[numClusters];\n-                for (int i = 0; i < index; i++) {\n-                    // The clusters in range {0 ... idx - 1} don't move\n-                    mergeMap[i] = i;\n-                }\n-                for (int i = index; i < numClusters - 1; i++) {\n-                    // The clusters in range {index ... numClusters - 1} shift up\n-                    mergeMap[i] = i + 1;\n-                }\n-                // Finally, the new cluster moves to index\n-                mergeMap[numClusters - 1] = index;\n+                UnaryOperator<Long> mergeMap = new UnaryOperator<Long>() {\n+                    @Override\n+                    public Long apply(Long i) {\n+                       if(i < index) {\n+                           // The clusters in range {0 ... idx - 1} don't move\n+                           return i;\n+                       } else if(i == numClusters - 1) {\n+                           // The new cluster moves to index\n+                           return (long)index;\n+                       } else {\n+                           // The clusters in range {index ... numClusters - 1} shift forward\n+                           return i + 1;\n+                       }\n+                    }\n+                };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1NDgxOA=="}, "originalCommit": {"oid": "4c706833645f769e8a432708c37d24a96717b5a3"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNzk4MTE5", "url": "https://github.com/elastic/elasticsearch/pull/59366#pullrequestreview-450798119", "createdAt": "2020-07-17T16:31:14Z", "commit": {"oid": "71b1797e2bd827bad5bf30c91c8d994a57a3c62b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNjozMToxNVrOGzZhGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNjozMToxNVrOGzZhGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU0ODYzMg==", "bodyText": "I think it'd be a little cleaner to do this by wrapping the collector that you pass to indexSearcher.search and just us MatchAllDocsQuery instead.", "url": "https://github.com/elastic/elasticsearch/pull/59366#discussion_r456548632", "createdAt": "2020-07-17T16:31:15Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/MergingBucketsDeferringCollectorTests.java", "diffHunk": "@@ -0,0 +1,269 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.search.aggregations.bucket;\n+\n+import org.elasticsearch.search.aggregations.LeafBucketCollector;\n+import org.apache.lucene.document.Document;\n+import org.apache.lucene.document.NumericDocValuesField;\n+import org.apache.lucene.index.DirectoryReader;\n+import org.apache.lucene.index.IndexReader;\n+import org.apache.lucene.index.IndexWriter;\n+import org.apache.lucene.index.IndexWriterConfig;\n+import org.apache.lucene.index.LeafReaderContext;\n+import org.apache.lucene.search.BulkScorer;\n+import org.apache.lucene.search.ConstantScoreScorer;\n+import org.apache.lucene.search.ConstantScoreWeight;\n+import org.apache.lucene.search.DocIdSetIterator;\n+import org.apache.lucene.search.IndexSearcher;\n+import org.apache.lucene.search.LeafCollector;\n+import org.apache.lucene.search.Query;\n+import org.apache.lucene.search.QueryVisitor;\n+import org.apache.lucene.search.ScoreMode;\n+import org.apache.lucene.search.Scorer;\n+import org.apache.lucene.search.Weight;\n+import org.apache.lucene.store.Directory;\n+import org.apache.lucene.util.Bits;\n+import org.elasticsearch.search.aggregations.AggregatorTestCase;\n+import org.elasticsearch.search.aggregations.BucketCollector;\n+import org.elasticsearch.search.aggregations.LeafBucketCollector;\n+import org.elasticsearch.search.aggregations.bucket.MergingBucketsDeferringCollector;\n+import org.elasticsearch.search.internal.SearchContext;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import static org.apache.lucene.util.LuceneTestCase.newDirectory;\n+import static org.mockito.Mockito.when;\n+\n+public class MergingBucketsDeferringCollectorTests extends AggregatorTestCase {\n+\n+    /**\n+     * Usually all documents get collected into ordinal 0 unless they are part of a sub aggregation\n+     * @return a query that collects the i'th document into bucket ordinal i\n+     */\n+    private Query getQueryToCollectIntoDifferentOrdinals() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71b1797e2bd827bad5bf30c91c8d994a57a3c62b"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8df97487b7b236914f3158c4279cc0d55282424d", "author": {"user": {"login": "jamesdorfman", "name": "James Dorfman"}}, "url": "https://github.com/elastic/elasticsearch/commit/8df97487b7b236914f3158c4279cc0d55282424d", "committedDate": "2020-07-17T18:38:38Z", "message": "Wrap the MergingBucketsDeferringCollector and remove the need to implement a custom query, in MergingBucketsDeferringCollectorTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db73958d4a2ab0bf5bf9c3526bebbbe3ed9f0719", "author": {"user": {"login": "jamesdorfman", "name": "James Dorfman"}}, "url": "https://github.com/elastic/elasticsearch/commit/db73958d4a2ab0bf5bf9c3526bebbbe3ed9f0719", "committedDate": "2020-07-17T19:47:07Z", "message": "Merge with master and resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e286f0a83c83e6204ab5bb7f0bb3d4b9b8a4faa1", "author": {"user": {"login": "jamesdorfman", "name": "James Dorfman"}}, "url": "https://github.com/elastic/elasticsearch/commit/e286f0a83c83e6204ab5bb7f0bb3d4b9b8a4faa1", "committedDate": "2020-07-17T20:15:20Z", "message": "Resolve merge conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "822dfd624c1bf4105a731a846b4d1056fddffe89", "author": {"user": {"login": "jamesdorfman", "name": "James Dorfman"}}, "url": "https://github.com/elastic/elasticsearch/commit/822dfd624c1bf4105a731a846b4d1056fddffe89", "committedDate": "2020-07-22T17:14:29Z", "message": "Add patch from @nik9000 to make the MergingBucketsDeferringCollectorTests much cleaner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDkzNTE4", "url": "https://github.com/elastic/elasticsearch/pull/59366#pullrequestreview-454093518", "createdAt": "2020-07-23T12:47:31Z", "commit": {"oid": "822dfd624c1bf4105a731a846b4d1056fddffe89"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c675f685aad3af44020e3886037e5f6b3fb134d9", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/c675f685aad3af44020e3886037e5f6b3fb134d9", "committedDate": "2020-07-24T13:00:44Z", "message": "Merge branch 'master' into vwh_efficient_merge_map"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2160, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}