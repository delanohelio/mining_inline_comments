{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NzkxNjQ2", "number": 60029, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOToyOTo1N1rOEQ952Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODozMToxOFrOERKzcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjI2OTA1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOToyOTo1N1rOG1ae1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo1OToyNlrOG1t8rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2MTU5MA==", "bodyText": "To be more accurate, the field is of type script and its runtime_type is keyword, long etc. Can we expand and say it is a script field with runtime_type etc. ?", "url": "https://github.com/elastic/elasticsearch/pull/60029#discussion_r458661590", "createdAt": "2020-07-22T09:29:57Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java", "diffHunk": "@@ -49,6 +60,90 @@ public final boolean isAggregatable() {\n         return true;\n     }\n \n+    public abstract Query termsQuery(List<?> values, QueryShardContext context);\n+\n+    public abstract Query rangeQuery(\n+        Object lowerTerm,\n+        Object upperTerm,\n+        boolean includeLower,\n+        boolean includeUpper,\n+        ShapeRelation relation,\n+        ZoneId timeZone,\n+        DateMathParser parser,\n+        QueryShardContext context\n+    );\n+\n+    public Query fuzzyQuery(\n+        Object value,\n+        Fuzziness fuzziness,\n+        int prefixLength,\n+        int maxExpansions,\n+        boolean transpositions,\n+        QueryShardContext context\n+    ) {\n+        throw new IllegalArgumentException(\n+            \"Can only use fuzzy queries on keyword and text fields - not on [\" + name() + \"] which is of type [\" + runtimeType() + \"]\"\n+        );\n+    }\n+\n+    public Query prefixQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(\n+            \"Can only use prefix queries on keyword, text and wildcard fields - not on [\"\n+                + name()\n+                + \"] which is of type [\"\n+                + runtimeType()\n+                + \"]\"\n+        );\n+    }\n+\n+    public Query wildcardQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(\n+            \"Can only use wildcard queries on keyword, text and wildcard fields - not on [\"\n+                + name()\n+                + \"] which is of type [\"\n+                + runtimeType()\n+                + \"]\"\n+        );\n+    }\n+\n+    public Query regexpQuery(\n+        String value,\n+        int flags,\n+        int maxDeterminizedStates,\n+        MultiTermQuery.RewriteMethod method,\n+        QueryShardContext context\n+    ) {\n+        throw new IllegalArgumentException(\n+            \"Can only use regexp queries on keyword and text fields - not on [\" + name() + \"] which is of type [\" + runtimeType() + \"]\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41263556ac491322608faf2578cf1b7834935b34"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MDUyNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/60029#discussion_r458980524", "createdAt": "2020-07-22T17:59:26Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java", "diffHunk": "@@ -49,6 +60,90 @@ public final boolean isAggregatable() {\n         return true;\n     }\n \n+    public abstract Query termsQuery(List<?> values, QueryShardContext context);\n+\n+    public abstract Query rangeQuery(\n+        Object lowerTerm,\n+        Object upperTerm,\n+        boolean includeLower,\n+        boolean includeUpper,\n+        ShapeRelation relation,\n+        ZoneId timeZone,\n+        DateMathParser parser,\n+        QueryShardContext context\n+    );\n+\n+    public Query fuzzyQuery(\n+        Object value,\n+        Fuzziness fuzziness,\n+        int prefixLength,\n+        int maxExpansions,\n+        boolean transpositions,\n+        QueryShardContext context\n+    ) {\n+        throw new IllegalArgumentException(\n+            \"Can only use fuzzy queries on keyword and text fields - not on [\" + name() + \"] which is of type [\" + runtimeType() + \"]\"\n+        );\n+    }\n+\n+    public Query prefixQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(\n+            \"Can only use prefix queries on keyword, text and wildcard fields - not on [\"\n+                + name()\n+                + \"] which is of type [\"\n+                + runtimeType()\n+                + \"]\"\n+        );\n+    }\n+\n+    public Query wildcardQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(\n+            \"Can only use wildcard queries on keyword, text and wildcard fields - not on [\"\n+                + name()\n+                + \"] which is of type [\"\n+                + runtimeType()\n+                + \"]\"\n+        );\n+    }\n+\n+    public Query regexpQuery(\n+        String value,\n+        int flags,\n+        int maxDeterminizedStates,\n+        MultiTermQuery.RewriteMethod method,\n+        QueryShardContext context\n+    ) {\n+        throw new IllegalArgumentException(\n+            \"Can only use regexp queries on keyword and text fields - not on [\" + name() + \"] which is of type [\" + runtimeType() + \"]\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2MTU5MA=="}, "originalCommit": {"oid": "41263556ac491322608faf2578cf1b7834935b34"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDM4MjU4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODozMToxOFrOG1vEpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODozMToxOFrOG1vEpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk5ODk0OQ==", "bodyText": "don't hardcode script :) we are going to rename it and if you use the existing constant renaming will be easier", "url": "https://github.com/elastic/elasticsearch/pull/60029#discussion_r458998949", "createdAt": "2020-07-22T18:31:18Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java", "diffHunk": "@@ -49,6 +60,71 @@ public final boolean isAggregatable() {\n         return true;\n     }\n \n+    public abstract Query termsQuery(List<?> values, QueryShardContext context);\n+\n+    public abstract Query rangeQuery(\n+        Object lowerTerm,\n+        Object upperTerm,\n+        boolean includeLower,\n+        boolean includeUpper,\n+        ShapeRelation relation,\n+        ZoneId timeZone,\n+        DateMathParser parser,\n+        QueryShardContext context\n+    );\n+\n+    public Query fuzzyQuery(\n+        Object value,\n+        Fuzziness fuzziness,\n+        int prefixLength,\n+        int maxExpansions,\n+        boolean transpositions,\n+        QueryShardContext context\n+    ) {\n+        throw new IllegalArgumentException(unsupported(\"fuzzy\", \"keyword and text\"));\n+    }\n+\n+    public Query prefixQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(unsupported(\"prefix\", \"keyword, text and wildcard\"));\n+    }\n+\n+    public Query wildcardQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(unsupported(\"wildcard\", \"keyword, text and wildcard\"));\n+    }\n+\n+    public Query regexpQuery(\n+        String value,\n+        int flags,\n+        int maxDeterminizedStates,\n+        MultiTermQuery.RewriteMethod method,\n+        QueryShardContext context\n+    ) {\n+        throw new IllegalArgumentException(unsupported(\"regexp\", \"keyword and text\"));\n+    }\n+\n+    public abstract Query existsQuery(QueryShardContext context);\n+\n+    public Query phraseQuery(TokenStream stream, int slop, boolean enablePositionIncrements) throws IOException {\n+        throw new IllegalArgumentException(unsupported(\"phrase\", \"text\"));\n+    }\n+\n+    public Query multiPhraseQuery(TokenStream stream, int slop, boolean enablePositionIncrements) throws IOException {\n+        throw new IllegalArgumentException(unsupported(\"phrase\", \"text\"));\n+    }\n+\n+    public Query phrasePrefixQuery(TokenStream stream, int slop, int maxExpansions) throws IOException {\n+        throw new IllegalArgumentException(unsupported(\"phrase prefix\", \"text\"));\n+    }\n+\n+    public SpanQuery spanPrefixQuery(String value, SpanMultiTermQueryWrapper.SpanRewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(unsupported(\"span prefix\", \"text\"));\n+    }\n+\n+    private String unsupported(String query, String supported) {\n+        String thisField = \"[\" + name() + \"] which is of type [script] with runtime_type [\" + runtimeType() + \"]\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "628163c7575d9d42b07477e5c9eef3ca3b2790c0"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2088, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}