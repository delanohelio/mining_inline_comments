{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNDUyNjY5", "number": 63540, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMTowNjoxOVrOEz9n2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMToxNTozM1rOEz9wmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTIyNDU2OnYy", "diffSide": "RIGHT", "path": "docs/reference/ingest/processors/set.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMTowNjoxOVrOHrgezw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMTowNjoxOVrOHrgezw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4Mjk5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | `value` | no       | -        | The value to be set for the field. Supports <<accessing-template-fields,template snippets>>.\n          \n          \n            \n            | `value` | yes*     | -        | The value to be set for the field. Supports <<accessing-template-fields,template snippets>>. May specify only one of `value` or `copy_from`.", "url": "https://github.com/elastic/elasticsearch/pull/63540#discussion_r515382991", "createdAt": "2020-10-30T21:06:19Z", "author": {"login": "danhermann"}, "path": "docs/reference/ingest/processors/set.asciidoc", "diffHunk": "@@ -13,7 +13,8 @@ its value will be replaced with the provided one.\n |======\n | Name       | Required  | Default  | Description\n | `field` | yes       | -        | The field to insert, upsert, or update. Supports <<accessing-template-fields,template snippets>>.\n-| `value` | yes       | -        | The value to be set for the field. Supports <<accessing-template-fields,template snippets>>.\n+| `value` | no       | -        | The value to be set for the field. Supports <<accessing-template-fields,template snippets>>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c5921b2c712974b2aa024c0973a0d03c4aee472"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTIzNDkwOnYy", "diffSide": "RIGHT", "path": "docs/reference/ingest/processors/set.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMToxMDo0N1rOHrglKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMToxMDo0N1rOHrglKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4NDYxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            As `template snippets` only produces string value, we can copy an array from one field to another by using `copy_from`:\n          \n          \n            \n            The contents of a field including complex values such as arrays and objects can be copied to another field using `copy_from`:", "url": "https://github.com/elastic/elasticsearch/pull/63540#discussion_r515384616", "createdAt": "2020-10-30T21:10:47Z", "author": {"login": "danhermann"}, "path": "docs/reference/ingest/processors/set.asciidoc", "diffHunk": "@@ -87,3 +88,54 @@ Result:\n }\n --------------------------------------------------\n // TESTRESPONSE[s/2019-03-11T21:54:37.909224Z/$body.docs.0.doc._ingest.timestamp/]\n+As `template snippets` only produces string value, we can copy an array from one field to another by using `copy_from`:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c5921b2c712974b2aa024c0973a0d03c4aee472"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTI0MzE4OnYy", "diffSide": "RIGHT", "path": "modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/SetProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMToxNDowMFrOHrgp2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMToxNDowMFrOHrgp2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4NTgxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                throw newConfigurationException(TYPE, processorTag, \"copy_from\", \"cannot set `copy_from` while also setting `value`\");\n          \n          \n            \n                                throw newConfigurationException(TYPE, processorTag, \"copy_from\", \"cannot set both `copy_from` and `value` in the same processor\");", "url": "https://github.com/elastic/elasticsearch/pull/63540#discussion_r515385819", "createdAt": "2020-10-30T21:14:00Z", "author": {"login": "danhermann"}, "path": "modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/SetProcessor.java", "diffHunk": "@@ -96,16 +109,29 @@ public Factory(ScriptService scriptService) {\n         public SetProcessor create(Map<String, Processor.Factory> registry, String processorTag,\n                                    String description, Map<String, Object> config) throws Exception {\n             String field = ConfigurationUtils.readStringProperty(TYPE, processorTag, config, \"field\");\n-            Object value = ConfigurationUtils.readObject(TYPE, processorTag, config, \"value\");\n+            String copyFrom = ConfigurationUtils.readOptionalStringProperty(TYPE, processorTag, config, \"copy_from\");\n+            ValueSource valueSource = null;\n+            if (copyFrom == null) {\n+                Object value = ConfigurationUtils.readObject(TYPE, processorTag, config, \"value\");\n+                valueSource = ValueSource.wrap(value, scriptService);\n+            } else {\n+                Object value = config.remove(\"value\");\n+                if (value != null) {\n+                    throw newConfigurationException(TYPE, processorTag, \"copy_from\", \"cannot set `copy_from` while also setting `value`\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c5921b2c712974b2aa024c0973a0d03c4aee472"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTI0Njk3OnYy", "diffSide": "RIGHT", "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SetProcessorFactoryTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMToxNTozM1rOHrgsBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxMzowMjo0OFrOHrnVdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4NjM3NA==", "bodyText": "Can you make a second test method for this test case to make it clear that setting both value and copy_from is an error that should be caught by the factory at creation time?", "url": "https://github.com/elastic/elasticsearch/pull/63540#discussion_r515386374", "createdAt": "2020-10-30T21:15:33Z", "author": {"login": "danhermann"}, "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SetProcessorFactoryTests.java", "diffHunk": "@@ -112,4 +112,21 @@ public void testInvalidMustacheTemplate() throws Exception {\n         assertThat(exception.getMetadata(\"es.processor_tag\").get(0), equalTo(processorTag));\n     }\n \n+    public void testCreateWithCopyFrom() throws Exception {\n+        Map<String, Object> config = new HashMap<>();\n+        config.put(\"field\", \"field1\");\n+        config.put(\"copy_from\", \"field2\");\n+        String processorTag = randomAlphaOfLength(10);\n+        SetProcessor setProcessor = factory.create(null, processorTag, null, config);\n+        assertThat(setProcessor.getTag(), equalTo(processorTag));\n+        assertThat(setProcessor.getField().newInstance(Collections.emptyMap()).execute(), equalTo(\"field1\"));\n+        assertThat(setProcessor.getCopyFrom(), equalTo(\"field2\"));\n+\n+        config.put(\"field\", \"field1\");\n+        config.put(\"value\", \"value1\");\n+        config.put(\"copy_from\", \"field2\");\n+        ElasticsearchException exception = expectThrows(ElasticsearchException.class,\n+            () -> factory.create(null, processorTag, null, config));\n+        assertThat(exception.getMessage(), equalTo(\"[copy_from] cannot set `copy_from` while also setting `value`\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c5921b2c712974b2aa024c0973a0d03c4aee472"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5NTI4NA==", "bodyText": "OK, I will do that.", "url": "https://github.com/elastic/elasticsearch/pull/63540#discussion_r515495284", "createdAt": "2020-10-31T13:02:48Z", "author": {"login": "gaobinlong"}, "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SetProcessorFactoryTests.java", "diffHunk": "@@ -112,4 +112,21 @@ public void testInvalidMustacheTemplate() throws Exception {\n         assertThat(exception.getMetadata(\"es.processor_tag\").get(0), equalTo(processorTag));\n     }\n \n+    public void testCreateWithCopyFrom() throws Exception {\n+        Map<String, Object> config = new HashMap<>();\n+        config.put(\"field\", \"field1\");\n+        config.put(\"copy_from\", \"field2\");\n+        String processorTag = randomAlphaOfLength(10);\n+        SetProcessor setProcessor = factory.create(null, processorTag, null, config);\n+        assertThat(setProcessor.getTag(), equalTo(processorTag));\n+        assertThat(setProcessor.getField().newInstance(Collections.emptyMap()).execute(), equalTo(\"field1\"));\n+        assertThat(setProcessor.getCopyFrom(), equalTo(\"field2\"));\n+\n+        config.put(\"field\", \"field1\");\n+        config.put(\"value\", \"value1\");\n+        config.put(\"copy_from\", \"field2\");\n+        ElasticsearchException exception = expectThrows(ElasticsearchException.class,\n+            () -> factory.create(null, processorTag, null, config));\n+        assertThat(exception.getMessage(), equalTo(\"[copy_from] cannot set `copy_from` while also setting `value`\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4NjM3NA=="}, "originalCommit": {"oid": "6c5921b2c712974b2aa024c0973a0d03c4aee472"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2928, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}