{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0ODE2Mzc2", "number": 54349, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODowMzoyNlrODuQNtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoxMTo0M1rODuQh7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODI2NzQxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/async-search/qa/rest/src/test/resources/rest-api-spec/test/async-search/10_deprecation.yml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODowMzoyNlrOGAJe9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMjozODo0OFrOGBVuEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwODU2Nw==", "bodyText": "nit: is it necessary to have both these two submit? if so maybe they should be part of a different test section (one only for submit, the other one to test get and delete)", "url": "https://github.com/elastic/elasticsearch/pull/54349#discussion_r402808567", "createdAt": "2020-04-03T08:03:26Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/qa/rest/src/test/resources/rest-api-spec/test/async-search/10_deprecation.yml", "diffHunk": "@@ -0,0 +1,99 @@\n+---\n+\"Async search\":\n+  - skip:\n+      features: \"warnings\"\n+\n+  - do:\n+      indices.create:\n+        index: test-1\n+        body:\n+          settings:\n+            number_of_shards: \"2\"\n+\n+  - do:\n+      indices.create:\n+        index: test-2\n+        body:\n+          settings:\n+            number_of_shards: \"1\"\n+\n+  - do:\n+      indices.create:\n+        index: test-3\n+        body:\n+          settings:\n+            number_of_shards: \"3\"\n+\n+  - do:\n+      index:\n+        index:  test-2\n+        body:   { max: 2 }\n+\n+  - do:\n+      index:\n+        index:  test-1\n+        body:   { max: 1 }\n+\n+  - do:\n+      index:\n+        index:  test-3\n+        body:   { max: 3 }\n+\n+  - do:\n+      indices.refresh: {}\n+\n+  - do:\n+      warnings:\n+        - '[deprecated] query'\n+      async_search.submit:\n+        index: test-*\n+        wait_for_completion_timeout: 10s\n+        body:\n+          query:\n+            deprecated: {}\n+\n+  - is_false: id\n+  - match:  { is_partial:                   false }\n+  - length: { response.hits.hits:               3 }\n+\n+  - do:\n+      warnings:\n+        - '[deprecated] query'\n+      async_search.submit:\n+        index: test-*\n+        wait_for_completion_timeout: 10s\n+        keep_on_completion: true\n+        body:\n+          query:\n+            deprecated: {}\n+\n+  - set:    { id:                              id }\n+  - match:  { is_partial:                   false }\n+  - length: { response.hits.hits:               3 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd538b5faf722c706f306756c29eb930e4a8d331"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAxOTY2OQ==", "bodyText": "We test the case where the response is stored (keep_on_completion set to true) so I think it's necessary. We also need to record the search id that is returned by the submit so they should be part of the same section ?", "url": "https://github.com/elastic/elasticsearch/pull/54349#discussion_r404019669", "createdAt": "2020-04-06T11:29:59Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/qa/rest/src/test/resources/rest-api-spec/test/async-search/10_deprecation.yml", "diffHunk": "@@ -0,0 +1,99 @@\n+---\n+\"Async search\":\n+  - skip:\n+      features: \"warnings\"\n+\n+  - do:\n+      indices.create:\n+        index: test-1\n+        body:\n+          settings:\n+            number_of_shards: \"2\"\n+\n+  - do:\n+      indices.create:\n+        index: test-2\n+        body:\n+          settings:\n+            number_of_shards: \"1\"\n+\n+  - do:\n+      indices.create:\n+        index: test-3\n+        body:\n+          settings:\n+            number_of_shards: \"3\"\n+\n+  - do:\n+      index:\n+        index:  test-2\n+        body:   { max: 2 }\n+\n+  - do:\n+      index:\n+        index:  test-1\n+        body:   { max: 1 }\n+\n+  - do:\n+      index:\n+        index:  test-3\n+        body:   { max: 3 }\n+\n+  - do:\n+      indices.refresh: {}\n+\n+  - do:\n+      warnings:\n+        - '[deprecated] query'\n+      async_search.submit:\n+        index: test-*\n+        wait_for_completion_timeout: 10s\n+        body:\n+          query:\n+            deprecated: {}\n+\n+  - is_false: id\n+  - match:  { is_partial:                   false }\n+  - length: { response.hits.hits:               3 }\n+\n+  - do:\n+      warnings:\n+        - '[deprecated] query'\n+      async_search.submit:\n+        index: test-*\n+        wait_for_completion_timeout: 10s\n+        keep_on_completion: true\n+        body:\n+          query:\n+            deprecated: {}\n+\n+  - set:    { id:                              id }\n+  - match:  { is_partial:                   false }\n+  - length: { response.hits.hits:               3 }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwODU2Nw=="}, "originalCommit": {"oid": "dd538b5faf722c706f306756c29eb930e4a8d331"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NjkyMQ==", "bodyText": "I mean that the previous submit is tested on its own, while the second one and the following get and delete depend on each other, did I get that right?", "url": "https://github.com/elastic/elasticsearch/pull/54349#discussion_r404056921", "createdAt": "2020-04-06T12:37:43Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/qa/rest/src/test/resources/rest-api-spec/test/async-search/10_deprecation.yml", "diffHunk": "@@ -0,0 +1,99 @@\n+---\n+\"Async search\":\n+  - skip:\n+      features: \"warnings\"\n+\n+  - do:\n+      indices.create:\n+        index: test-1\n+        body:\n+          settings:\n+            number_of_shards: \"2\"\n+\n+  - do:\n+      indices.create:\n+        index: test-2\n+        body:\n+          settings:\n+            number_of_shards: \"1\"\n+\n+  - do:\n+      indices.create:\n+        index: test-3\n+        body:\n+          settings:\n+            number_of_shards: \"3\"\n+\n+  - do:\n+      index:\n+        index:  test-2\n+        body:   { max: 2 }\n+\n+  - do:\n+      index:\n+        index:  test-1\n+        body:   { max: 1 }\n+\n+  - do:\n+      index:\n+        index:  test-3\n+        body:   { max: 3 }\n+\n+  - do:\n+      indices.refresh: {}\n+\n+  - do:\n+      warnings:\n+        - '[deprecated] query'\n+      async_search.submit:\n+        index: test-*\n+        wait_for_completion_timeout: 10s\n+        body:\n+          query:\n+            deprecated: {}\n+\n+  - is_false: id\n+  - match:  { is_partial:                   false }\n+  - length: { response.hits.hits:               3 }\n+\n+  - do:\n+      warnings:\n+        - '[deprecated] query'\n+      async_search.submit:\n+        index: test-*\n+        wait_for_completion_timeout: 10s\n+        keep_on_completion: true\n+        body:\n+          query:\n+            deprecated: {}\n+\n+  - set:    { id:                              id }\n+  - match:  { is_partial:                   false }\n+  - length: { response.hits.hits:               3 }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwODU2Nw=="}, "originalCommit": {"oid": "dd538b5faf722c706f306756c29eb930e4a8d331"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NzYxOQ==", "bodyText": "Ok got it, I can split the two.", "url": "https://github.com/elastic/elasticsearch/pull/54349#discussion_r404057619", "createdAt": "2020-04-06T12:38:48Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/qa/rest/src/test/resources/rest-api-spec/test/async-search/10_deprecation.yml", "diffHunk": "@@ -0,0 +1,99 @@\n+---\n+\"Async search\":\n+  - skip:\n+      features: \"warnings\"\n+\n+  - do:\n+      indices.create:\n+        index: test-1\n+        body:\n+          settings:\n+            number_of_shards: \"2\"\n+\n+  - do:\n+      indices.create:\n+        index: test-2\n+        body:\n+          settings:\n+            number_of_shards: \"1\"\n+\n+  - do:\n+      indices.create:\n+        index: test-3\n+        body:\n+          settings:\n+            number_of_shards: \"3\"\n+\n+  - do:\n+      index:\n+        index:  test-2\n+        body:   { max: 2 }\n+\n+  - do:\n+      index:\n+        index:  test-1\n+        body:   { max: 1 }\n+\n+  - do:\n+      index:\n+        index:  test-3\n+        body:   { max: 3 }\n+\n+  - do:\n+      indices.refresh: {}\n+\n+  - do:\n+      warnings:\n+        - '[deprecated] query'\n+      async_search.submit:\n+        index: test-*\n+        wait_for_completion_timeout: 10s\n+        body:\n+          query:\n+            deprecated: {}\n+\n+  - is_false: id\n+  - match:  { is_partial:                   false }\n+  - length: { response.hits.hits:               3 }\n+\n+  - do:\n+      warnings:\n+        - '[deprecated] query'\n+      async_search.submit:\n+        index: test-*\n+        wait_for_completion_timeout: 10s\n+        keep_on_completion: true\n+        body:\n+          query:\n+            deprecated: {}\n+\n+  - set:    { id:                              id }\n+  - match:  { is_partial:                   false }\n+  - length: { response.hits.hits:               3 }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwODU2Nw=="}, "originalCommit": {"oid": "dd538b5faf722c706f306756c29eb930e4a8d331"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODMxMDgzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoxMDoxOVrOGAJ2nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMTo0NzoxMFrOGBT8ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNDYyMQ==", "bodyText": "instead of having these two atomic references, would it make sense to have the headers become part of MutableSearchResponse? I always worry about the complexity added by two independent multi-threaded data structures.", "url": "https://github.com/elastic/elasticsearch/pull/54349#discussion_r402814621", "createdAt": "2020-04-03T08:10:19Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -61,7 +63,8 @@\n     private volatile long expirationTimeMillis;\n     private final AtomicBoolean isCancelling = new AtomicBoolean(false);\n \n-    private AtomicReference<MutableSearchResponse> searchResponse;\n+    private final AtomicReference<MutableSearchResponse> searchResponse = new AtomicReference<>();\n+    private final AtomicReference<Map<String, List<String>>> responseHeaders = new AtomicReference<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd538b5faf722c706f306756c29eb930e4a8d331"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAyODU1NA==", "bodyText": "++, I pushed f6e8ab0", "url": "https://github.com/elastic/elasticsearch/pull/54349#discussion_r404028554", "createdAt": "2020-04-06T11:47:10Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -61,7 +63,8 @@\n     private volatile long expirationTimeMillis;\n     private final AtomicBoolean isCancelling = new AtomicBoolean(false);\n \n-    private AtomicReference<MutableSearchResponse> searchResponse;\n+    private final AtomicReference<MutableSearchResponse> searchResponse = new AtomicReference<>();\n+    private final AtomicReference<Map<String, List<String>>> responseHeaders = new AtomicReference<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNDYyMQ=="}, "originalCommit": {"oid": "dd538b5faf722c706f306756c29eb930e4a8d331"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODMxOTE3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoxMTo0M1rOGAJ7Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMTo0NzoxOFrOGBT8wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNTgwNg==", "bodyText": "I am not a fan of boolean flags, this method looks simple enough that we could split in two: getResponse and getResponseWithHeaders or something along those lines?", "url": "https://github.com/elastic/elasticsearch/pull/54349#discussion_r402815806", "createdAt": "2020-04-03T08:11:43Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -284,15 +286,24 @@ private void executeCompletionListeners() {\n             }\n             hasCompleted = true;\n         }\n-        AsyncSearchResponse finalResponse = getResponse();\n+        // we don't need to restore the response headers, they should be included in the current\n+        // context since we are called by the search action listener.\n+        AsyncSearchResponse finalResponse = getResponse(false);\n         for (Consumer<AsyncSearchResponse> listener : completionListeners.values()) {\n             listener.accept(finalResponse);\n         }\n         completionListeners.clear();\n     }\n \n-    private AsyncSearchResponse getResponse() {\n+    /**\n+     * Returns the current {@link AsyncSearchResponse} and restores the response headers\n+     * in the local thread context depending on the value of <code>restoreResponseHeaders</code>.\n+     */\n+    private AsyncSearchResponse getResponse(boolean restoreResponseHeaders) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd538b5faf722c706f306756c29eb930e4a8d331"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAyODYwOQ==", "bodyText": "++, I pushed f6e8ab0", "url": "https://github.com/elastic/elasticsearch/pull/54349#discussion_r404028609", "createdAt": "2020-04-06T11:47:18Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -284,15 +286,24 @@ private void executeCompletionListeners() {\n             }\n             hasCompleted = true;\n         }\n-        AsyncSearchResponse finalResponse = getResponse();\n+        // we don't need to restore the response headers, they should be included in the current\n+        // context since we are called by the search action listener.\n+        AsyncSearchResponse finalResponse = getResponse(false);\n         for (Consumer<AsyncSearchResponse> listener : completionListeners.values()) {\n             listener.accept(finalResponse);\n         }\n         completionListeners.clear();\n     }\n \n-    private AsyncSearchResponse getResponse() {\n+    /**\n+     * Returns the current {@link AsyncSearchResponse} and restores the response headers\n+     * in the local thread context depending on the value of <code>restoreResponseHeaders</code>.\n+     */\n+    private AsyncSearchResponse getResponse(boolean restoreResponseHeaders) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNTgwNg=="}, "originalCommit": {"oid": "dd538b5faf722c706f306756c29eb930e4a8d331"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4033, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}