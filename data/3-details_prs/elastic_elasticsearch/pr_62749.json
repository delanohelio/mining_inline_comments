{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNzgwMDY4", "number": 62749, "title": "[ML] Ensure data frame analytics jobs don't run on a node that's too new", "bodyText": "This PR modifies data frame analytics job assignment code so that the nodes running 7.9 or earlier are not allowed to be assigned data frame analytics whose persistent task params were created in 7.10 or later.\nRelates #61325", "createdAt": "2020-09-22T08:36:22Z", "url": "https://github.com/elastic/elasticsearch/pull/62749", "merged": true, "mergeCommit": {"oid": "474adf204be6e3336c59b41fee3bea17a2d163c9"}, "closed": true, "closedAt": "2020-10-02T12:30:32Z", "author": {"login": "przemekwitek"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLYLQSgFqTQ5MzQ2OTczNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOkxmYAFqTUwMTA3NTUxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNDY5NzM3", "url": "https://github.com/elastic/elasticsearch/pull/62749#pullrequestreview-493469737", "createdAt": "2020-09-22T13:39:39Z", "commit": {"oid": "8f7ac5cfdd5b39502d890a0930723f3142c42d23"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzozOTozOVrOHV6jJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzo0MDoxN1rOHV6lEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0MTQxMw==", "bodyText": "We should support rolling upgrades for data frame analytics jobs.\nThe experience here would be really bad. The user kicks off a rolling upgrade and the job basically stays in unassigned state forever.\nWe should check the job version and if it is less than 7.10, then we need to set the state back before reindex, and start from the reindex state again.", "url": "https://github.com/elastic/elasticsearch/pull/62749#discussion_r492741413", "createdAt": "2020-09-22T13:39:39Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportStartDataFrameAnalyticsAction.java", "diffHunk": "@@ -731,12 +741,25 @@ private void executeTask(DataFrameAnalyticsTaskState analyticsTaskState, Allocat\n             }\n         }\n \n-        public static String nodeFilter(DiscoveryNode node, String id) {\n+        public static String nodeFilter(DiscoveryNode node, TaskParams params) {\n+            String id = params.getId();\n \n-            if (node.getVersion().before(StartDataFrameAnalyticsAction.TaskParams.VERSION_INTRODUCED)) {\n+            if (node.getVersion().before(TaskParams.VERSION_INTRODUCED)) {\n                 return \"Not opening job [\" + id + \"] on node [\" + JobNodeSelector.nodeNameAndVersion(node)\n                     + \"], because the data frame analytics requires a node of version [\"\n-                    + StartDataFrameAnalyticsAction.TaskParams.VERSION_INTRODUCED + \"] or higher\";\n+                    + TaskParams.VERSION_INTRODUCED + \"] or higher\";\n+            }\n+            if (node.getVersion().onOrAfter(TaskParams.VERSION_DESTINATION_INDEX_MAPPINGS_CHANGED)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7ac5cfdd5b39502d890a0930723f3142c42d23"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0MTkwNw==", "bodyText": "I think this is ok. During a rolling upgrade, all nodes will eventually get to the latest version. And since we don't support upgrade rollbacks, this seems like a good check", "url": "https://github.com/elastic/elasticsearch/pull/62749#discussion_r492741907", "createdAt": "2020-09-22T13:40:17Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportStartDataFrameAnalyticsAction.java", "diffHunk": "@@ -731,12 +741,25 @@ private void executeTask(DataFrameAnalyticsTaskState analyticsTaskState, Allocat\n             }\n         }\n \n-        public static String nodeFilter(DiscoveryNode node, String id) {\n+        public static String nodeFilter(DiscoveryNode node, TaskParams params) {\n+            String id = params.getId();\n \n-            if (node.getVersion().before(StartDataFrameAnalyticsAction.TaskParams.VERSION_INTRODUCED)) {\n+            if (node.getVersion().before(TaskParams.VERSION_INTRODUCED)) {\n                 return \"Not opening job [\" + id + \"] on node [\" + JobNodeSelector.nodeNameAndVersion(node)\n                     + \"], because the data frame analytics requires a node of version [\"\n-                    + StartDataFrameAnalyticsAction.TaskParams.VERSION_INTRODUCED + \"] or higher\";\n+                    + TaskParams.VERSION_INTRODUCED + \"] or higher\";\n+            }\n+            if (node.getVersion().onOrAfter(TaskParams.VERSION_DESTINATION_INDEX_MAPPINGS_CHANGED)\n+                && params.getVersion().before(TaskParams.VERSION_DESTINATION_INDEX_MAPPINGS_CHANGED)) {\n+                return \"Not opening job [\" + id + \"] on node [\" + JobNodeSelector.nodeNameAndVersion(node)\n+                    + \"], because the data frame analytics created for version [\" + params.getVersion() + \"] requires a node of version \"\n+                    + \"before [\" + TaskParams.VERSION_DESTINATION_INDEX_MAPPINGS_CHANGED + \"]\";\n+            }\n+            if (node.getVersion().before(TaskParams.VERSION_DESTINATION_INDEX_MAPPINGS_CHANGED)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7ac5cfdd5b39502d890a0930723f3142c42d23"}, "originalPosition": 139}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNDY5MTQ2", "url": "https://github.com/elastic/elasticsearch/pull/62749#pullrequestreview-493469146", "createdAt": "2020-09-22T13:39:00Z", "commit": {"oid": "8f7ac5cfdd5b39502d890a0930723f3142c42d23"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzozOTowMVrOHV6hSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzozOTowMVrOHV6hSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0MDkzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                //  - _node_name0 is too old (version 7.9.0)\n          \n          \n            \n                //  - _node_name0 is too old (version 7.2.0)", "url": "https://github.com/elastic/elasticsearch/pull/62749#discussion_r492740939", "createdAt": "2020-09-22T13:39:01Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/action/TransportStartDataFrameAnalyticsActionTests.java", "diffHunk": "@@ -83,4 +112,136 @@ public void testVerifyIndicesPrimaryShardsAreActive() {\n             new IndexNameExpressionResolver(), indexName);\n         assertThat(result, contains(indexName));\n     }\n+\n+    // Cannot assign the node because upgrade mode is enabled\n+    public void testGetAssignment_UpgradeModeIsEnabled() {\n+        TaskExecutor executor = createTaskExecutor();\n+        TaskParams params = new TaskParams(JOB_ID, Version.CURRENT, Collections.emptyList(), false);\n+        ClusterState clusterState =\n+            ClusterState.builder(new ClusterName(\"_name\"))\n+                .metadata(Metadata.builder().putCustom(MlMetadata.TYPE, new MlMetadata.Builder().isUpgradeMode(true).build()))\n+                .build();\n+\n+        Assignment assignment = executor.getAssignment(params, clusterState);\n+        assertThat(assignment.getExecutorNode(), is(nullValue()));\n+        assertThat(assignment.getExplanation(), is(equalTo(\"persistent task cannot be assigned while upgrade mode is enabled.\")));\n+    }\n+\n+    // Cannot assign the node because there are no existing nodes in the cluster state\n+    public void testGetAssignment_NoNodes() {\n+        TaskExecutor executor = createTaskExecutor();\n+        TaskParams params = new TaskParams(JOB_ID, Version.CURRENT, Collections.emptyList(), false);\n+        ClusterState clusterState =\n+            ClusterState.builder(new ClusterName(\"_name\"))\n+                .metadata(Metadata.builder().putCustom(MlMetadata.TYPE, new MlMetadata.Builder().build()))\n+                .build();\n+\n+        Assignment assignment = executor.getAssignment(params, clusterState);\n+        assertThat(assignment.getExecutorNode(), is(nullValue()));\n+        assertThat(assignment.getExplanation(), is(emptyString()));\n+    }\n+\n+    // Cannot assign the node because none of the existing nodes is an ML node\n+    public void testGetAssignment_NoMlNodes() {\n+        TaskExecutor executor = createTaskExecutor();\n+        TaskParams params = new TaskParams(JOB_ID, Version.CURRENT, Collections.emptyList(), false);\n+        ClusterState clusterState =\n+            ClusterState.builder(new ClusterName(\"_name\"))\n+                .metadata(Metadata.builder().putCustom(MlMetadata.TYPE, new MlMetadata.Builder().build()))\n+                .nodes(DiscoveryNodes.builder()\n+                    .add(createNode(0, false, Version.CURRENT))\n+                    .add(createNode(1, false, Version.CURRENT))\n+                    .add(createNode(2, false, Version.CURRENT)))\n+                .build();\n+\n+        Assignment assignment = executor.getAssignment(params, clusterState);\n+        assertThat(assignment.getExecutorNode(), is(nullValue()));\n+        assertThat(\n+            assignment.getExplanation(),\n+            allOf(\n+                containsString(\"Not opening job [data_frame_id] on node [_node_name0], because this node isn't a ml node.\"),\n+                containsString(\"Not opening job [data_frame_id] on node [_node_name1], because this node isn't a ml node.\"),\n+                containsString(\"Not opening job [data_frame_id] on node [_node_name2], because this node isn't a ml node.\")));\n+    }\n+\n+    // Cannot assign the node because none of the existing nodes is appropriate:\n+    //  - _node_name0 is too old (version 7.9.0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7ac5cfdd5b39502d890a0930723f3142c42d23"}, "originalPosition": 117}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f7ac5cfdd5b39502d890a0930723f3142c42d23", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/8f7ac5cfdd5b39502d890a0930723f3142c42d23", "committedDate": "2020-09-22T08:33:39Z", "message": "[ML] Ensure data frame analytics jobs don't run on a node that's too new"}, "afterCommit": {"oid": "098ad15c3000c536db7b37c77b0aa3eb5e396115", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/098ad15c3000c536db7b37c77b0aa3eb5e396115", "committedDate": "2020-09-23T08:12:33Z", "message": "Fix typo in comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "098ad15c3000c536db7b37c77b0aa3eb5e396115", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/098ad15c3000c536db7b37c77b0aa3eb5e396115", "committedDate": "2020-09-23T08:12:33Z", "message": "Fix typo in comment"}, "afterCommit": {"oid": "e210935c6bdebc13a6911f4daac9a98ccd0126e5", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/e210935c6bdebc13a6911f4daac9a98ccd0126e5", "committedDate": "2020-09-30T09:21:16Z", "message": "Fix typo in comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "309f02e552cb59926dcd7cc30786cbbf59e58409", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/309f02e552cb59926dcd7cc30786cbbf59e58409", "committedDate": "2020-10-02T08:09:50Z", "message": "[ML] Ensure data frame analytics jobs don't run on a node that's too new"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4241305760281d293100937fd754e6c04a081313", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/4241305760281d293100937fd754e6c04a081313", "committedDate": "2020-10-02T08:09:50Z", "message": "Fix typo in comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35c30e90b5b03069d480391760b50da33b13b122", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/35c30e90b5b03069d480391760b50da33b13b122", "committedDate": "2020-10-02T08:42:10Z", "message": "Allow assigning old job to the new node"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e210935c6bdebc13a6911f4daac9a98ccd0126e5", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/e210935c6bdebc13a6911f4daac9a98ccd0126e5", "committedDate": "2020-09-30T09:21:16Z", "message": "Fix typo in comment"}, "afterCommit": {"oid": "35c30e90b5b03069d480391760b50da33b13b122", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/35c30e90b5b03069d480391760b50da33b13b122", "committedDate": "2020-10-02T08:42:10Z", "message": "Allow assigning old job to the new node"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMDc1NTEz", "url": "https://github.com/elastic/elasticsearch/pull/62749#pullrequestreview-501075513", "createdAt": "2020-10-02T12:02:56Z", "commit": {"oid": "35c30e90b5b03069d480391760b50da33b13b122"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4703, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}