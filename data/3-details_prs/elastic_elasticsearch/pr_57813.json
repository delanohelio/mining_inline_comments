{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMTA0OTYy", "number": 57813, "title": "Fix Broken Numeric Shard Generations in RepositoryData", "bodyText": "Fix broken numeric shard generations when reading them from the wire\nor physically from the physical repository.\nThis seems to me to be the cheapest way to clean up broken shard generations\nin a BwC and safe-to-backport manner for now. We can potentially\nfurther optimize this by also not doing the checks on the generations\nbased on the versions we see in the RepositoryData but I don't think\nit matters much since we will read RepositoryData from cache in almost\nall cases.\nCloses #57798", "createdAt": "2020-06-08T12:40:41Z", "url": "https://github.com/elastic/elasticsearch/pull/57813", "merged": true, "mergeCommit": {"oid": "db09e803ddbdea3dd7f3a03b2e5a7093a1a35805"}, "closed": true, "closedAt": "2020-06-08T15:14:46Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpPsFHAH2gAyNDMxMTA0OTYyOjYxYjYwODY3NTE3YjU0Y2M4OTJlYmMxYjIzMGNjZWQ5NjVhYjJlMmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpQ8gkgFqTQyNjI3MzQzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "61b60867517b54cc892ebc1b230cced965ab2e2b", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/61b60867517b54cc892ebc1b230cced965ab2e2b", "committedDate": "2020-06-08T12:33:42Z", "message": "Fix Broken Numeric Shard Generations in RepositoryData\n\nFix broken numeric shard generations when reading them from the wire\nor physically from the physical repository.\nThis should be the cheapest way to clean up broken shard generations\nin a BwC and safe-to-backport manner for now. We can potentially\nfurther optimize this by also not doing the checks on the generations\nbased on the versions we see in the `RepositoryData` but I don't think\nit matters much since we will read `RepositoryData` from cache in almost\nall cases.\n\nCloses #57798"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MjQ0NTU5", "url": "https://github.com/elastic/elasticsearch/pull/57813#pullrequestreview-426244559", "createdAt": "2020-06-08T13:35:26Z", "commit": {"oid": "61b60867517b54cc892ebc1b230cced965ab2e2b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzozNToyNlrOGgeYwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo0Mzo1NVrOGgex7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwNTQ3NA==", "bodyText": "I think we should avoid putting null values into the map (in particular as ShardGenerations.Builder.put does not seem to define @Nullable String generation, and the semantics of putting null into map can be problematic, as the Map interface says the behavior is underspecified whether a NPE is thrown). I would prefer a boolean method here with conditional logic", "url": "https://github.com/elastic/elasticsearch/pull/57813#discussion_r436705474", "createdAt": "2020-06-08T13:35:26Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "diffHunk": "@@ -615,7 +619,9 @@ public static RepositoryData snapshotsFromXContent(final XContentParser parser,\n                         assert indexId != null;\n                         indexSnapshots.put(indexId, Collections.unmodifiableList(snapshotIds));\n                         for (int i = 0; i < gens.size(); i++) {\n-                            shardGenerations.put(indexId, i, gens.get(i));\n+                            final String parsedGen = gens.get(i);\n+                            shardGenerations.put(\n+                                    indexId, i, fixBrokenShardGens ? ShardGenerations.fixShardGeneration(parsedGen) : parsedGen);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61b60867517b54cc892ebc1b230cced965ab2e2b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcxMTkxNw==", "bodyText": "why true here?", "url": "https://github.com/elastic/elasticsearch/pull/57813#discussion_r436711917", "createdAt": "2020-06-08T13:43:55Z", "author": {"login": "ywelsch"}, "path": "test/framework/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreTestUtil.java", "diffHunk": "@@ -129,7 +129,7 @@ public static void assertConsistency(BlobStoreRepository repository, Executor ex\n                 try (InputStream blob = blobContainer.readBlob(\"index-\" + latestGen);\n                      XContentParser parser = XContentType.JSON.xContent().createParser(NamedXContentRegistry.EMPTY,\n                          LoggingDeprecationHandler.INSTANCE, blob)) {\n-                    repositoryData = RepositoryData.snapshotsFromXContent(parser, latestGen);\n+                    repositoryData = RepositoryData.snapshotsFromXContent(parser, latestGen, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61b60867517b54cc892ebc1b230cced965ab2e2b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "655c7f3d9f3753a68f2c98718d51ea812fd0f0fd", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/655c7f3d9f3753a68f2c98718d51ea812fd0f0fd", "committedDate": "2020-06-08T13:52:10Z", "message": "CR: comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae840808741e96465c49ceac4e4471f56801e651", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/ae840808741e96465c49ceac4e4471f56801e651", "committedDate": "2020-06-08T13:53:26Z", "message": "Merge remote-tracking branch 'elastic/master' into broken-repo-data-auto-repair"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MjczNDMz", "url": "https://github.com/elastic/elasticsearch/pull/57813#pullrequestreview-426273433", "createdAt": "2020-06-08T14:01:33Z", "commit": {"oid": "ae840808741e96465c49ceac4e4471f56801e651"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3823, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}