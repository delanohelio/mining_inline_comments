{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNzI4NTg0", "number": 55936, "title": "Add HLRC support for simulate index template api", "bodyText": "Relates to #53101", "createdAt": "2020-04-29T13:53:40Z", "url": "https://github.com/elastic/elasticsearch/pull/55936", "merged": true, "mergeCommit": {"oid": "475790c34e0bab95d352132d6be63c4f5b219fb1"}, "closed": true, "closedAt": "2020-04-30T13:24:47Z", "author": {"login": "andreidan"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccWgjnAH2gAyNDEwNzI4NTg0OjI2MzE4MDcwOGUzOTFkNzgwODk5ZTlhZjI4ZDhlZTcxODJlNTg0N2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccrFMQgH2gAyNDEwNzI4NTg0OjAxMWU1ZmFiMDdkNGYwMmZlYWY0ZGRiNTUyZWZkM2Q3MWJhNGE1NGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "263180708e391d780899e9af28d8ee7182e5847d", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/263180708e391d780899e9af28d8ee7182e5847d", "committedDate": "2020-04-29T11:09:26Z", "message": "Add HLRC support for simulate index template api."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c13c548426bd57191ee513a746b6810447dd0cf0", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/c13c548426bd57191ee513a746b6810447dd0cf0", "committedDate": "2020-04-29T14:12:31Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da81b9c23c602174279b6e1267d9ef733c0a5d62", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/da81b9c23c602174279b6e1267d9ef733c0a5d62", "committedDate": "2020-04-29T14:37:14Z", "message": "Fix testApiNamingConventions test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4324df9983658e55c8de70c27ee1a9ca5de624ac", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/4324df9983658e55c8de70c27ee1a9ca5de624ac", "committedDate": "2020-04-29T14:44:05Z", "message": "Update description rest spec"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyODQ5ODYz", "url": "https://github.com/elastic/elasticsearch/pull/55936#pullrequestreview-402849863", "createdAt": "2020-04-29T16:44:41Z", "commit": {"oid": "4324df9983658e55c8de70c27ee1a9ca5de624ac"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjo0NDo0MVrOGOHsFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjo0NzowMVrOGOHyEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1OTIyMg==", "bodyText": "We validate the indexName in the constructor but maybe we should also validate it here?", "url": "https://github.com/elastic/elasticsearch/pull/55936#discussion_r417459222", "createdAt": "2020-04-29T16:44:41Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/SimulateIndexTemplateRequest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A request to simulate matching a provided index name and an optional new index template against the existing index templates.\n+ */\n+public class SimulateIndexTemplateRequest extends TimedRequest implements ToXContentObject {\n+\n+    private static final ParseField INDEX_NAME = new ParseField(\"index_name\");\n+    private static final ParseField INDEX_TEMPLATE = new ParseField(\"index_template\");\n+\n+    private String indexName;\n+\n+    @Nullable\n+    private PutIndexTemplateV2Request indexTemplateV2Request;\n+\n+    public SimulateIndexTemplateRequest(String indexName) {\n+        if (Strings.isNullOrEmpty(indexName)) {\n+            throw new IllegalArgumentException(\"index name cannot be null or empty\");\n+        }\n+        this.indexName = indexName;\n+    }\n+\n+    /**\n+     * Return the index name for which we simulate the index template matching.\n+     */\n+    public String indexName() {\n+        return indexName;\n+    }\n+\n+    /**\n+     * Set the index name to simulate template matching against the index templates in the system.\n+     */\n+    public SimulateIndexTemplateRequest indexName(String indexName) {\n+        this.indexName = indexName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4324df9983658e55c8de70c27ee1a9ca5de624ac"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2MDc1NQ==", "bodyText": "It seems strange to have a toXContent that produces a body that isn't actually what gets sent (since we don't include the index name in the request body for simulation), do we actually need this method? Can we remove it entirely?", "url": "https://github.com/elastic/elasticsearch/pull/55936#discussion_r417460755", "createdAt": "2020-04-29T16:47:01Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/SimulateIndexTemplateRequest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A request to simulate matching a provided index name and an optional new index template against the existing index templates.\n+ */\n+public class SimulateIndexTemplateRequest extends TimedRequest implements ToXContentObject {\n+\n+    private static final ParseField INDEX_NAME = new ParseField(\"index_name\");\n+    private static final ParseField INDEX_TEMPLATE = new ParseField(\"index_template\");\n+\n+    private String indexName;\n+\n+    @Nullable\n+    private PutIndexTemplateV2Request indexTemplateV2Request;\n+\n+    public SimulateIndexTemplateRequest(String indexName) {\n+        if (Strings.isNullOrEmpty(indexName)) {\n+            throw new IllegalArgumentException(\"index name cannot be null or empty\");\n+        }\n+        this.indexName = indexName;\n+    }\n+\n+    /**\n+     * Return the index name for which we simulate the index template matching.\n+     */\n+    public String indexName() {\n+        return indexName;\n+    }\n+\n+    /**\n+     * Set the index name to simulate template matching against the index templates in the system.\n+     */\n+    public SimulateIndexTemplateRequest indexName(String indexName) {\n+        this.indexName = indexName;\n+        return this;\n+    }\n+\n+    /**\n+     * An optional new template request will be part of the index template simulation.\n+     */\n+    @Nullable\n+    public PutIndexTemplateV2Request indexTemplateV2Request() {\n+        return indexTemplateV2Request;\n+    }\n+\n+    /**\n+     * Optionally, define a new template request which will included in the index simulation as if it was an index template stored in the\n+     * system. The new template will be validated just as a regular, standalone, live, new index template request.\n+     */\n+    public SimulateIndexTemplateRequest indexTemplateV2Request(@Nullable PutIndexTemplateV2Request indexTemplateV2Request) {\n+        this.indexTemplateV2Request = indexTemplateV2Request;\n+        return this;\n+    }\n+\n+    @Override\n+    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4324df9983658e55c8de70c27ee1a9ca5de624ac"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1013b89dbc8b4fc655aafd6f50d62320a5fc89e6", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/1013b89dbc8b4fc655aafd6f50d62320a5fc89e6", "committedDate": "2020-04-30T09:35:14Z", "message": "Validate indexName in setter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50b1956f805468a4d625ecfa0a9bd955f09ee45b", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/50b1956f805468a4d625ecfa0a9bd955f09ee45b", "committedDate": "2020-04-30T09:52:10Z", "message": "Drop toXContent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e391eb60016a53426fd63d27ae804bee3d615ce8", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/e391eb60016a53426fd63d27ae804bee3d615ce8", "committedDate": "2020-04-30T10:25:06Z", "message": "Remove unused fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "011e5fab07d4f02feaf4ddb552efd3d71ba4a54d", "author": {"user": {"login": "andreidan", "name": "Andrei Dan"}}, "url": "https://github.com/elastic/elasticsearch/commit/011e5fab07d4f02feaf4ddb552efd3d71ba4a54d", "committedDate": "2020-04-30T11:07:33Z", "message": "Unused import"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 293, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}