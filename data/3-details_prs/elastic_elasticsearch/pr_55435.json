{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NzQwNjU0", "number": 55435, "title": "Fix expiration time in async search response", "bodyText": "This change ensures that we return the latest expiration time when retrieving the response from the index.\nThis commit also fixes a bug that stops the garbage collection of saved responses if the async search index is deleted.", "createdAt": "2020-04-19T21:50:11Z", "url": "https://github.com/elastic/elasticsearch/pull/55435", "merged": true, "mergeCommit": {"oid": "77a1afc5016dc603e1fcd8740b530a42d0a49a93"}, "closed": true, "closedAt": "2020-04-21T11:34:06Z", "author": {"login": "jimczi"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZRqZYgH2gAyNDA1NzQwNjU0OjdhZGIwYjA1ZjgxYzRiMGEwYTQwMWJhYzVmMTI5Y2ViMTQzMjgxYzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZlzrDgH2gAyNDA1NzQwNjU0OmM5ZmY2NGZkZjYzNzZjODRmZWQ1Yjk1MWZlMzM3OGFjNTg0Yjc4Y2U=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7adb0b05f81c4b0a0a401bac5f129ceb143281c9", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/7adb0b05f81c4b0a0a401bac5f129ceb143281c9", "committedDate": "2020-04-19T21:48:53Z", "message": "Fix expiration time in async search response\n\nThis change ensures that we return the latest expiration time\nwhen retrieving the response from the index."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df22f66314d0b1aff801dca6a4d3157aea41cd4f", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/df22f66314d0b1aff801dca6a4d3157aea41cd4f", "committedDate": "2020-04-19T21:58:13Z", "message": "unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTk5OTcw", "url": "https://github.com/elastic/elasticsearch/pull/55435#pullrequestreview-396199970", "createdAt": "2020-04-20T07:24:18Z", "commit": {"oid": "df22f66314d0b1aff801dca6a4d3157aea41cd4f"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzoyNDoxOFrOGIGvIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzo0Njo0OVrOGIHhAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1MjE2MA==", "bodyText": "not related to your change, but I think this one should be changed like I did in other places to use ExceptionHelper.unwrapCause , I forgot about this one. When can version conflict be thrown again?", "url": "https://github.com/elastic/elasticsearch/pull/55435#discussion_r411152160", "createdAt": "2020-04-20T07:24:18Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/TransportSubmitAsyncSearchAction.java", "diffHunk": "@@ -187,7 +188,8 @@ private void onFinalResponse(CancellableTask submitTask,\n             store.storeFinalResponse(searchTask.getSearchId().getDocId(), threadContext.getResponseHeaders(),response,\n                 ActionListener.wrap(resp -> unregisterTaskAndMoveOn(searchTask, nextAction),\n                                     exc -> {\n-                                        if (exc.getCause() instanceof DocumentMissingException == false) {\n+                                        if (exc.getCause() instanceof DocumentMissingException == false &&\n+                                                exc.getCause() instanceof VersionConflictEngineException == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df22f66314d0b1aff801dca6a4d3157aea41cd4f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1Mjc3Nw==", "bodyText": "ops", "url": "https://github.com/elastic/elasticsearch/pull/55435#discussion_r411152777", "createdAt": "2020-04-20T07:25:26Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/test/java/org/elasticsearch/xpack/search/GetAsyncSearchRequestTests.java", "diffHunk": "@@ -34,8 +34,4 @@ static String randomSearchId() {\n         return AsyncSearchId.encode(UUIDs.randomBase64UUID(),\n             new TaskId(randomAlphaOfLengthBetween(10, 20), randomLongBetween(0, Long.MAX_VALUE)));\n     }\n-\n-    public void testValidateWaitForCompletion() {\n-\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df22f66314d0b1aff801dca6a4d3157aea41cd4f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1NzY3MA==", "bodyText": "do we plan on using this new setting only in our tests? Or can it be useful for users too?", "url": "https://github.com/elastic/elasticsearch/pull/55435#discussion_r411157670", "createdAt": "2020-04-20T07:34:10Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchMaintenanceService.java", "diffHunk": "@@ -26,13 +28,17 @@\n import java.util.concurrent.atomic.AtomicBoolean;\n \n import static org.elasticsearch.xpack.search.AsyncSearchIndexService.EXPIRATION_TIME_FIELD;\n+import static org.elasticsearch.xpack.search.AsyncSearchIndexService.INDEX;\n \n /**\n  * A service that runs a periodic cleanup over the async-search index.\n  */\n class AsyncSearchMaintenanceService implements Releasable, ClusterStateListener {\n     private static final Logger logger = LogManager.getLogger(AsyncSearchMaintenanceService.class);\n \n+    public static final Setting<TimeValue> ASYNC_SEARCH_CLEANUP_INTERVAL_SETTING =\n+        Setting.timeSetting(\"async_search.index_cleanup_interval\", TimeValue.timeValueHours(1), Setting.Property.NodeScope);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df22f66314d0b1aff801dca6a4d3157aea41cd4f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1OTE5OA==", "bodyText": "I think that isCleanupRunning no longer needs to be atomic boolean given that it's only accessed from synchronized methods", "url": "https://github.com/elastic/elasticsearch/pull/55435#discussion_r411159198", "createdAt": "2020-04-20T07:36:52Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchMaintenanceService.java", "diffHunk": "@@ -62,31 +68,29 @@ public void clusterChanged(ClusterChangedEvent event) {\n         tryStartCleanup(state);\n     }\n \n-    void tryStartCleanup(ClusterState state) {\n+    synchronized void tryStartCleanup(ClusterState state) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df22f66314d0b1aff801dca6a4d3157aea41cd4f"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1OTk0Mw==", "bodyText": "I am curious about these changesL: the newly added tests uncovered some bug?", "url": "https://github.com/elastic/elasticsearch/pull/55435#discussion_r411159943", "createdAt": "2020-04-20T07:38:13Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchMaintenanceService.java", "diffHunk": "@@ -107,11 +111,17 @@ synchronized void scheduleNextCleanup() {\n         }\n     }\n \n+    synchronized void stop() {\n+        if (isCleanupRunning.compareAndSet(true, false)) {\n+            if (cancellable != null && cancellable.isCancelled() == false) {\n+                cancellable.cancel();\n+            }\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df22f66314d0b1aff801dca6a4d3157aea41cd4f"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2MDYyOQ==", "bodyText": "this seems at first glance unrelated, did it come up from the tests you added as part of this PR?", "url": "https://github.com/elastic/elasticsearch/pull/55435#discussion_r411160629", "createdAt": "2020-04-20T07:39:17Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchIndexService.java", "diffHunk": "@@ -265,14 +265,17 @@ void getResponse(AsyncSearchId searchId,\n                     return;\n                 }\n \n-                if (restoreResponseHeaders) {\n+                if (restoreResponseHeaders && get.getSource().containsKey(RESPONSE_HEADERS_FIELD)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df22f66314d0b1aff801dca6a4d3157aea41cd4f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2MjQ2MQ==", "bodyText": "this one was causing NPE? lovely to get NPE as part of a null check :) maybe getNodeId should be changed to return null instead of NPE when nodeId is null? it seems like a trappy behaviour.", "url": "https://github.com/elastic/elasticsearch/pull/55435#discussion_r411162461", "createdAt": "2020-04-20T07:42:36Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -338,7 +341,7 @@ protected void onQueryFailure(int shardIndex, SearchShardTarget shardTarget, Exc\n             // best effort to cancel expired tasks\n             checkCancellation();\n             searchResponse.get().addShardFailure(shardIndex,\n-                new ShardSearchFailure(exc, shardTarget.getNodeId() != null ? shardTarget : null));\n+                new ShardSearchFailure(exc, shardTarget.getNodeIdText() != null ? shardTarget : null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df22f66314d0b1aff801dca6a4d3157aea41cd4f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2NDY4Ng==", "bodyText": "I wonder if we could add a constructor that takes this, it seems possible given that we call decode in one place only and it could accept the expiration time too, and pass it to the constructor.", "url": "https://github.com/elastic/elasticsearch/pull/55435#discussion_r411164686", "createdAt": "2020-04-20T07:46:26Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/search/action/AsyncSearchResponse.java", "diffHunk": "@@ -157,6 +157,10 @@ public long getExpirationTime() {\n         return expirationTimeMillis;\n     }\n \n+    public void setExpirationTime(long expirationTimeMillis) {\n+        this.expirationTimeMillis = expirationTimeMillis;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df22f66314d0b1aff801dca6a4d3157aea41cd4f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2NDkyOQ==", "bodyText": "I am curious, what triggered this change?", "url": "https://github.com/elastic/elasticsearch/pull/55435#discussion_r411164929", "createdAt": "2020-04-20T07:46:49Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/search/action/GetAsyncSearchAction.java", "diffHunk": "@@ -63,12 +60,7 @@ public void writeTo(StreamOutput out) throws IOException {\n \n         @Override\n         public ActionRequestValidationException validate() {\n-            ActionRequestValidationException validationException = null;\n-            if (keepAlive.getMillis() != -1 && keepAlive.getMillis() < MIN_KEEP_ALIVE) {\n-                validationException =\n-                    addValidationError(\"keep_alive must be greater than 1 minute, got:\" + keepAlive.toString(), validationException);\n-            }\n-            return validationException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df22f66314d0b1aff801dca6a4d3157aea41cd4f"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47f35443ad45f0fb2ac4959761c99ff195be22ac", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/47f35443ad45f0fb2ac4959761c99ff195be22ac", "committedDate": "2020-04-20T12:57:09Z", "message": "address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf01fc0a6640c82ddcc04af379313e4b950cef38", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/bf01fc0a6640c82ddcc04af379313e4b950cef38", "committedDate": "2020-04-20T12:59:03Z", "message": "unwrap cause\u00e9"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDUwODAx", "url": "https://github.com/elastic/elasticsearch/pull/55435#pullrequestreview-396450801", "createdAt": "2020-04-20T13:27:04Z", "commit": {"oid": "bf01fc0a6640c82ddcc04af379313e4b950cef38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDY0ODEy", "url": "https://github.com/elastic/elasticsearch/pull/55435#pullrequestreview-396464812", "createdAt": "2020-04-20T13:43:15Z", "commit": {"oid": "bf01fc0a6640c82ddcc04af379313e4b950cef38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzo0MzoxNVrOGIVHHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzo0MzoxNVrOGIVHHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM4NzY3Ng==", "bodyText": "perhaps you can now remove this TODO? 146b2a8#diff-97b9cc86781ba2021cd3ae58d6851834R38", "url": "https://github.com/elastic/elasticsearch/pull/55435#discussion_r411387676", "createdAt": "2020-04-20T13:43:15Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/async-search/src/test/java/org/elasticsearch/xpack/search/AsyncSearchActionIT.java", "diffHunk": "@@ -277,4 +279,117 @@ public void testCancellation() throws Exception {\n         deleteAsyncSearch(response.getId());\n         ensureTaskRemoval(response.getId());\n     }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf01fc0a6640c82ddcc04af379313e4b950cef38"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "812cf0b40afcdf5b1332138009bc561136a82f6a", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/812cf0b40afcdf5b1332138009bc561136a82f6a", "committedDate": "2020-04-20T14:08:24Z", "message": "Merge branch 'master' into async_search_expiration_time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09afaca88da489560060ad5a90671652e269006f", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/09afaca88da489560060ad5a90671652e269006f", "committedDate": "2020-04-20T21:16:19Z", "message": "add javadocs for the new setting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9ff64fdf6376c84fed5b951fe3378ac584b78ce", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/c9ff64fdf6376c84fed5b951fe3378ac584b78ce", "committedDate": "2020-04-20T21:17:07Z", "message": "Merge branch 'master' into async_search_expiration_time"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 692, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}