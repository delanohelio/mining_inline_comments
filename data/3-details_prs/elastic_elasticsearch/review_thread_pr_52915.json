{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMDA4MTI0", "number": 52915, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTo1OTo1M1rODkcG3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjowMjoyOVrODkcJ6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTM1ODM4OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/AExpression.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTo1OTo1M1rOFww3BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzo1MToyMVrOFwzlZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3NjQ4NQ==", "bodyText": "can you add a comment explaining this member is transitional and a little about when and how it is set?", "url": "https://github.com/elastic/elasticsearch/pull/52915#discussion_r386676485", "createdAt": "2020-03-02T21:59:53Z", "author": {"login": "rjernst"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/AExpression.java", "diffHunk": "@@ -83,10 +84,7 @@\n      */\n     boolean internal = false;\n \n-    /**\n-     * Set to true by {@link ENull} to represent a null value.\n-     */\n-    boolean isNull = false;\n+    PainlessCast cast = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07180d922b792873c2c782e5173db2fea614a463"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyMTEyNQ==", "bodyText": "Added.", "url": "https://github.com/elastic/elasticsearch/pull/52915#discussion_r386721125", "createdAt": "2020-03-02T23:51:21Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/AExpression.java", "diffHunk": "@@ -83,10 +84,7 @@\n      */\n     boolean internal = false;\n \n-    /**\n-     * Set to true by {@link ENull} to represent a null value.\n-     */\n-    boolean isNull = false;\n+    PainlessCast cast = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3NjQ4NQ=="}, "originalCommit": {"oid": "07180d922b792873c2c782e5173db2fea614a463"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTM2NjE2OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/test/java/org/elasticsearch/painless/GeneralCastTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjowMjoyOVrOFww8AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjowOTo1N1rOFwxJlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3Nzc2MA==", "bodyText": "Shouldn't these be uncommented?", "url": "https://github.com/elastic/elasticsearch/pull/52915#discussion_r386677760", "createdAt": "2020-03-02T22:02:29Z", "author": {"login": "rjernst"}, "path": "modules/lang-painless/src/test/java/org/elasticsearch/painless/GeneralCastTests.java", "diffHunk": "@@ -166,9 +166,9 @@ public void testMethodCallDef() {\n      * Currently these do not adopt the argument value, we issue a separate cast!\n      */\n     public void testArgumentsDef() {\n-        assertEquals(5, exec(\"def x = 5L; return (+(int)x);\"));\n+        //assertEquals(5, exec(\"def x = 5L; return (+(int)x);\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07180d922b792873c2c782e5173db2fea614a463"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4MTIzOA==", "bodyText": "Oops! Uncommented.", "url": "https://github.com/elastic/elasticsearch/pull/52915#discussion_r386681238", "createdAt": "2020-03-02T22:09:57Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/test/java/org/elasticsearch/painless/GeneralCastTests.java", "diffHunk": "@@ -166,9 +166,9 @@ public void testMethodCallDef() {\n      * Currently these do not adopt the argument value, we issue a separate cast!\n      */\n     public void testArgumentsDef() {\n-        assertEquals(5, exec(\"def x = 5L; return (+(int)x);\"));\n+        //assertEquals(5, exec(\"def x = 5L; return (+(int)x);\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3Nzc2MA=="}, "originalCommit": {"oid": "07180d922b792873c2c782e5173db2fea614a463"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3704, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}