{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NDQyMzM1", "number": 66023, "title": "Do not restore autoscaling policy from snapshots", "bodyText": "This PR excludes autoscaling policies from being restored from a snapshot.", "createdAt": "2020-12-08T13:13:38Z", "url": "https://github.com/elastic/elasticsearch/pull/66023", "merged": true, "mergeCommit": {"oid": "78ad68fd51529512b69f2852c2b1d7c93f38e899"}, "closed": true, "closedAt": "2020-12-11T09:29:06Z", "author": {"login": "ywangd"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkJ4DogH2gAyNTM0NDQyMzM1OjJiNWFjMjZlZmI2MjkyMjU5NzJlYzMyYzhlOTNhMWNmMDIzMWQ2MmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlCMTggFqTU0OTgzNzU5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2b5ac26efb629225972ec32c8e93a1cf0231d62f", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/2b5ac26efb629225972ec32c8e93a1cf0231d62f", "committedDate": "2020-12-08T13:08:53Z", "message": "Initial working version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00b1c40dbbda75219b04d3fb11cc3c154ee25baf", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/00b1c40dbbda75219b04d3fb11cc3c154ee25baf", "committedDate": "2020-12-08T13:26:04Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eeeca94ccdf8c691cf39c412483635fb83e855c5", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/eeeca94ccdf8c691cf39c412483635fb83e855c5", "committedDate": "2020-12-08T13:31:32Z", "message": "more spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MjUzMTIw", "url": "https://github.com/elastic/elasticsearch/pull/66023#pullrequestreview-547253120", "createdAt": "2020-12-08T13:53:25Z", "commit": {"oid": "eeeca94ccdf8c691cf39c412483635fb83e855c5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzo1MzoyNlrOIBdC7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzo1NTo0MlrOIBdOEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5NTM3Mw==", "bodyText": "I wonder if we should just skip the operatorPrivilegesEnabled check. It is fine to not restore autoscaling policies for now and we can revisit once we have the proper framework around operator privileges and restore in general.", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r538395373", "createdAt": "2020-12-08T13:53:26Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/snapshots/RestoreService.java", "diffHunk": "@@ -454,7 +459,8 @@ public ClusterState execute(ClusterState currentState) {\n                             if (metadata.customs() != null) {\n                                 for (ObjectObjectCursor<String, Metadata.Custom> cursor : metadata.customs()) {\n                                     if (RepositoriesMetadata.TYPE.equals(cursor.key) == false\n-                                            && DataStreamMetadata.TYPE.equals(cursor.key) == false) {\n+                                            && DataStreamMetadata.TYPE.equals(cursor.key) == false\n+                                            && (operatorPrivilegesEnabled == false || \"autoscaling\".equals(cursor.key) == false)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeeca94ccdf8c691cf39c412483635fb83e855c5"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5ODIyNg==", "bodyText": "Rather than switch on the \"autoscaling\" key I would prefer to add a marker interface \"NotRestorableCustomMetadata\", implemented by AutoscalingMetadata and use instanceof to omit it instead.", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r538398226", "createdAt": "2020-12-08T13:55:42Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/snapshots/RestoreService.java", "diffHunk": "@@ -454,7 +459,8 @@ public ClusterState execute(ClusterState currentState) {\n                             if (metadata.customs() != null) {\n                                 for (ObjectObjectCursor<String, Metadata.Custom> cursor : metadata.customs()) {\n                                     if (RepositoriesMetadata.TYPE.equals(cursor.key) == false\n-                                            && DataStreamMetadata.TYPE.equals(cursor.key) == false) {\n+                                            && DataStreamMetadata.TYPE.equals(cursor.key) == false\n+                                            && (operatorPrivilegesEnabled == false || \"autoscaling\".equals(cursor.key) == false)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeeca94ccdf8c691cf39c412483635fb83e855c5"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "475dbc1ea639050bd6e68f5d78165b05473bf3fa", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/475dbc1ea639050bd6e68f5d78165b05473bf3fa", "committedDate": "2020-12-08T21:34:59Z", "message": "address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a6dbd8966090313495f52e3f125e4277c93a9c3", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/7a6dbd8966090313495f52e3f125e4277c93a9c3", "committedDate": "2020-12-09T10:39:00Z", "message": "Merge remote-tracking branch 'origin/master' into do-not-restore-autoscaling-policy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1aedcfb91136bd772a7ac88f0e8d2105043d5621", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/1aedcfb91136bd772a7ac88f0e8d2105043d5621", "committedDate": "2020-12-09T10:51:23Z", "message": "address feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MjUzMDQ2", "url": "https://github.com/elastic/elasticsearch/pull/66023#pullrequestreview-549253046", "createdAt": "2020-12-10T14:31:34Z", "commit": {"oid": "1aedcfb91136bd772a7ac88f0e8d2105043d5621"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDozMTozNVrOIDMFAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDozNzo0MFrOIDMXxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNDUyOQ==", "bodyText": "nit: why not just:\nRestStatus status = createSnapshotResponse.status();", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r540214529", "createdAt": "2020-12-10T14:31:35Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/autoscaling/src/internalClusterTest/java/org/elasticsearch/xpack/autoscaling/AutoscalingSnapshotsIT.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling;\n+\n+import org.elasticsearch.ResourceNotFoundException;\n+import org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotResponse;\n+import org.elasticsearch.action.admin.cluster.snapshots.restore.RestoreSnapshotResponse;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.rest.RestStatus;\n+import org.elasticsearch.xpack.autoscaling.action.DeleteAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.action.GetAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.action.PutAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.policy.AutoscalingPolicy;\n+import org.junit.Before;\n+\n+import java.nio.file.Path;\n+\n+import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;\n+import static org.elasticsearch.xpack.autoscaling.AutoscalingTestCase.randomAutoscalingPolicy;\n+import static org.hamcrest.Matchers.containsString;\n+\n+public class AutoscalingSnapshotsIT extends AutoscalingIntegTestCase {\n+\n+    public static final String REPO = \"repo\";\n+    public static final String SNAPSHOT = \"snap\";\n+\n+    @Before\n+    public void setup() throws Exception {\n+        Path location = randomRepoPath();\n+        logger.info(\"--> creating repository [{}] [{}]\", REPO, \"fs\");\n+        assertAcked(clusterAdmin().preparePutRepository(REPO).setType(\"fs\").setSettings(Settings.builder().put(\"location\", location)));\n+    }\n+\n+    public void testAutoscalingPolicyWillNotBeRestored() {\n+        final Client client = client();\n+\n+        final AutoscalingPolicy policy = randomAutoscalingPolicy();\n+        final PutAutoscalingPolicyAction.Request request = new PutAutoscalingPolicyAction.Request(\n+            policy.name(),\n+            policy.roles(),\n+            policy.deciders()\n+        );\n+        assertAcked(client.execute(PutAutoscalingPolicyAction.INSTANCE, request).actionGet());\n+\n+        CreateSnapshotResponse createSnapshotResponse = client.admin()\n+            .cluster()\n+            .prepareCreateSnapshot(REPO, SNAPSHOT)\n+            .setWaitForCompletion(true)\n+            .setIncludeGlobalState(true)\n+            .get();\n+\n+        RestStatus status = createSnapshotResponse.getSnapshotInfo().status();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aedcfb91136bd772a7ac88f0e8d2105043d5621"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNjU2MA==", "bodyText": "I think we should extend the test to also have the case where a policy does exist when restoring to check that it survives the restore. To protect us from \"restore-global-state\" clearing everything during restore. Could be just randomly doing that or the delete case.", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r540216560", "createdAt": "2020-12-10T14:34:11Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/autoscaling/src/internalClusterTest/java/org/elasticsearch/xpack/autoscaling/AutoscalingSnapshotsIT.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling;\n+\n+import org.elasticsearch.ResourceNotFoundException;\n+import org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotResponse;\n+import org.elasticsearch.action.admin.cluster.snapshots.restore.RestoreSnapshotResponse;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.rest.RestStatus;\n+import org.elasticsearch.xpack.autoscaling.action.DeleteAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.action.GetAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.action.PutAutoscalingPolicyAction;\n+import org.elasticsearch.xpack.autoscaling.policy.AutoscalingPolicy;\n+import org.junit.Before;\n+\n+import java.nio.file.Path;\n+\n+import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;\n+import static org.elasticsearch.xpack.autoscaling.AutoscalingTestCase.randomAutoscalingPolicy;\n+import static org.hamcrest.Matchers.containsString;\n+\n+public class AutoscalingSnapshotsIT extends AutoscalingIntegTestCase {\n+\n+    public static final String REPO = \"repo\";\n+    public static final String SNAPSHOT = \"snap\";\n+\n+    @Before\n+    public void setup() throws Exception {\n+        Path location = randomRepoPath();\n+        logger.info(\"--> creating repository [{}] [{}]\", REPO, \"fs\");\n+        assertAcked(clusterAdmin().preparePutRepository(REPO).setType(\"fs\").setSettings(Settings.builder().put(\"location\", location)));\n+    }\n+\n+    public void testAutoscalingPolicyWillNotBeRestored() {\n+        final Client client = client();\n+\n+        final AutoscalingPolicy policy = randomAutoscalingPolicy();\n+        final PutAutoscalingPolicyAction.Request request = new PutAutoscalingPolicyAction.Request(\n+            policy.name(),\n+            policy.roles(),\n+            policy.deciders()\n+        );\n+        assertAcked(client.execute(PutAutoscalingPolicyAction.INSTANCE, request).actionGet());\n+\n+        CreateSnapshotResponse createSnapshotResponse = client.admin()\n+            .cluster()\n+            .prepareCreateSnapshot(REPO, SNAPSHOT)\n+            .setWaitForCompletion(true)\n+            .setIncludeGlobalState(true)\n+            .get();\n+\n+        RestStatus status = createSnapshotResponse.getSnapshotInfo().status();\n+        assertEquals(RestStatus.OK, status);\n+\n+        final DeleteAutoscalingPolicyAction.Request deleteRequest = new DeleteAutoscalingPolicyAction.Request(policy.name());\n+        assertAcked(client().execute(DeleteAutoscalingPolicyAction.INSTANCE, deleteRequest).actionGet());\n+\n+        RestoreSnapshotResponse restoreSnapshotResponse = client.admin()\n+            .cluster()\n+            .prepareRestoreSnapshot(REPO, SNAPSHOT)\n+            .setWaitForCompletion(true)\n+            .setRestoreGlobalState(true)\n+            .get();\n+        assertEquals(RestStatus.OK, restoreSnapshotResponse.status());\n+\n+        final GetAutoscalingPolicyAction.Request getRequest = new GetAutoscalingPolicyAction.Request(policy.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aedcfb91136bd772a7ac88f0e8d2105043d5621"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxODY4OQ==", "bodyText": "I think we should just remove this and the associated build file changes etc. from this PR? Once  the real framework for avoiding to restore autoscaling policies on operator privilege enabled setups goes in, this might look different anyway.", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r540218689", "createdAt": "2020-12-10T14:36:52Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java", "diffHunk": "@@ -100,4 +99,86 @@ public void testOperatorPrivilegesXpackUsage() throws IOException {\n         assertTrue((boolean) operatorPrivileges.get(\"available\"));\n         assertTrue((boolean) operatorPrivileges.get(\"enabled\"));\n     }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aedcfb91136bd772a7ac88f0e8d2105043d5621"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxOTMzNQ==", "bodyText": "This also looks unrelated to at least the PR description, perhaps move to separate PR?", "url": "https://github.com/elastic/elasticsearch/pull/66023#discussion_r540219335", "createdAt": "2020-12-10T14:37:40Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java", "diffHunk": "@@ -46,17 +51,13 @@ public void testNonOperatorSuperuserWillFailToCallOperatorOnlyApiWhenOperatorPri\n \n     public void testOperatorUserWillSucceedToCallOperatorOnlyApi() throws IOException {\n         final Request postVotingConfigExclusionsRequest = new Request(\"POST\", \"_cluster/voting_config_exclusions?node_names=foo\");\n-        final String authHeader = \"Basic \"\n-            + Base64.getEncoder().encodeToString(\"test_operator:x-pack-test-password\".getBytes(StandardCharsets.UTF_8));\n-        postVotingConfigExclusionsRequest.setOptions(RequestOptions.DEFAULT.toBuilder().addHeader(\"Authorization\", authHeader));\n+        postVotingConfigExclusionsRequest.setOptions(RequestOptions.DEFAULT.toBuilder().addHeader(\"Authorization\", OPERATOR_AUTH_HEADER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aedcfb91136bd772a7ac88f0e8d2105043d5621"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef1c63674c6f9e7d75a0dd6d1e1ad744260a0d55", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/ef1c63674c6f9e7d75a0dd6d1e1ad744260a0d55", "committedDate": "2020-12-10T23:22:50Z", "message": "Merge remote-tracking branch 'origin/master' into do-not-restore-autoscaling-policy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85e61ae681f28dc3f5f4df89e3487dba41684e8f", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/85e61ae681f28dc3f5f4df89e3487dba41684e8f", "committedDate": "2020-12-11T00:08:13Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7b4c23c75b16b8ee28f0185edbd91fe42c89d75", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/b7b4c23c75b16b8ee28f0185edbd91fe42c89d75", "committedDate": "2020-12-11T00:15:01Z", "message": "revert more irrelevant changes from earlier commits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5ODM3NTk3", "url": "https://github.com/elastic/elasticsearch/pull/66023#pullrequestreview-549837597", "createdAt": "2020-12-11T06:45:41Z", "commit": {"oid": "b7b4c23c75b16b8ee28f0185edbd91fe42c89d75"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4752, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}