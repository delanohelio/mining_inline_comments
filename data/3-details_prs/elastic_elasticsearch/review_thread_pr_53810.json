{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMDcyODg4", "number": 53810, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDo0MTo1N1rODp5Q2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDo0NToyNFrODp5WGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjU2NDA5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/GeoShapeIndexer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDo0MTo1N1rOF5Whkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDo1MzoyNlrOF5XARA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4MjE5NQ==", "bodyText": "Maybe be better to stick with X, Y or Lat, Lon for clarity.", "url": "https://github.com/elastic/elasticsearch/pull/53810#discussion_r395682195", "createdAt": "2020-03-20T14:41:57Z", "author": {"login": "imotov"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/GeoShapeIndexer.java", "diffHunk": "@@ -261,7 +262,15 @@ public Void visit(Polygon polygon) {\n \n         @Override\n         public Void visit(Rectangle r) {\n-            addFields(LatLonShape.createIndexableFields(name, GeoShapeUtils.toLucenePolygon(r)));\n+            if (r.getMinLon() > r.getMaxLon()) {\n+                Rectangle left = new Rectangle(r.getMaxX(), GeoUtils.MAX_LON, r.getMaxY(), r.getMinY());\n+                addFields(LatLonShape.createIndexableFields(name, GeoShapeUtils.toLucenePolygon(left)));\n+                Rectangle right = new Rectangle(GeoUtils.MIN_LON, r.getMaxLon(), r.getMaxY(), r.getMinY());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30721c240014afa9c7751c06d500a250177740b4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY5MDA1Mg==", "bodyText": "True! I will go for Lat / Lon", "url": "https://github.com/elastic/elasticsearch/pull/53810#discussion_r395690052", "createdAt": "2020-03-20T14:53:26Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/GeoShapeIndexer.java", "diffHunk": "@@ -261,7 +262,15 @@ public Void visit(Polygon polygon) {\n \n         @Override\n         public Void visit(Rectangle r) {\n-            addFields(LatLonShape.createIndexableFields(name, GeoShapeUtils.toLucenePolygon(r)));\n+            if (r.getMinLon() > r.getMaxLon()) {\n+                Rectangle left = new Rectangle(r.getMaxX(), GeoUtils.MAX_LON, r.getMaxY(), r.getMinY());\n+                addFields(LatLonShape.createIndexableFields(name, GeoShapeUtils.toLucenePolygon(left)));\n+                Rectangle right = new Rectangle(GeoUtils.MIN_LON, r.getMaxLon(), r.getMaxY(), r.getMinY());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4MjE5NQ=="}, "originalCommit": {"oid": "30721c240014afa9c7751c06d500a250177740b4"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjU3NzUzOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/geo/GeoShapeQueryTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDo0NToyNFrOF5WqZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDo0NToyNFrOF5WqZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4NDQ1Mg==", "bodyText": "Could you add a unit test to GeometryIndexerTests for that use case as well?", "url": "https://github.com/elastic/elasticsearch/pull/53810#discussion_r395684452", "createdAt": "2020-03-20T14:45:24Z", "author": {"login": "imotov"}, "path": "server/src/test/java/org/elasticsearch/search/geo/GeoShapeQueryTests.java", "diffHunk": "@@ -791,4 +791,24 @@ public void testDistanceQuery() throws Exception {\n             .get();\n         assertEquals(0, response.getHits().getTotalHits().value);\n     }\n+\n+    public void testIndexRectangleSpanningDateLine() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30721c240014afa9c7751c06d500a250177740b4"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4254, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}