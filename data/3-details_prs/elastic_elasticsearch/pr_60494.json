{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NzIzOTQ5", "number": 60494, "title": "Avoid reloading _source for every inner hit.", "bodyText": "Previously if an inner_hits block required _ source, we would reload and parse\nthe root document's source for every hit. This PR adds a shared SourceLookup to\nthe inner hits context that allows inner hits to reuse parsed source if it's\nalready available. This matches our approach for sharing the root document ID.\nRelates to #32818.", "createdAt": "2020-07-31T02:17:54Z", "url": "https://github.com/elastic/elasticsearch/pull/60494", "merged": true, "mergeCommit": {"oid": "7b644102866d334fe939982b1f5e310c7c8bd267"}, "closed": true, "closedAt": "2020-08-03T22:31:10Z", "author": {"login": "jtibshirani"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6W55BAH2gAyNDU5NzIzOTQ5OmIwMGRiOTdlODkwZmUxNTBhNTRhYTEzOGJmYjIzMDUxMzc4M2Y3NDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7YkgygFqTQ2MDMzOTIwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b00db97e890fe150a54aa138bfb230513783f743", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/b00db97e890fe150a54aa138bfb230513783f743", "committedDate": "2020-07-31T16:34:50Z", "message": "Avoid reloading _source for every inner hit.\n\nPreviously if an inner_hits block required _ source, we would reload and parse\nthe root document's source for every hit. This PR adds a shared SourceLookup to\nthe inner hits context that allows inner hits to reuse parsed source if it's\nalready available. This matches our approach for sharing the root document ID."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c", "committedDate": "2020-07-31T16:54:36Z", "message": "Add javadoc to InnerHitsContext."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6837abd6198f1327d335a059b80a66de3346a0e7", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/6837abd6198f1327d335a059b80a66de3346a0e7", "committedDate": "2020-07-31T00:03:44Z", "message": "Avoid reloading _source for every inner hit.\n\nPreviously if an inner_hits block required _ source, we would reload and parse\nthe root document's source for every hit. This PR adds a shared SourceLookup to\nthe inner hits context that allows inner hits to reuse parsed source if it's\nalready available. This matches our approach for sharing the root document ID."}, "afterCommit": {"oid": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c", "committedDate": "2020-07-31T16:54:36Z", "message": "Add javadoc to InnerHitsContext."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MzIyNDQ0", "url": "https://github.com/elastic/elasticsearch/pull/60494#pullrequestreview-459322444", "createdAt": "2020-07-31T16:58:03Z", "commit": {"oid": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNjo1ODowNFrOG6Pcbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNjo1ODowNFrOG6Pcbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyMzYzMQ==", "bodyText": "This felt a bit hacky. We take a similar strategy in FetchSourceContext#getFilter.", "url": "https://github.com/elastic/elasticsearch/pull/60494#discussion_r463723631", "createdAt": "2020-07-31T16:58:04Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsContext.java", "diffHunk": "@@ -102,22 +105,43 @@ public void setChildInnerHits(Map<String, InnerHitSubContext> childInnerHits) {\n             this.childInnerHits = new InnerHitsContext(childInnerHits);\n         }\n \n-        protected Weight createInnerHitQueryWeight() throws IOException {\n-            final boolean needsScores = size() != 0 && (sort() == null || sort().sort.needsScores());\n-            return context.searcher().createWeight(context.searcher().rewrite(query()),\n+        protected Weight getInnerHitQueryWeight() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzM5MjA1", "url": "https://github.com/elastic/elasticsearch/pull/60494#pullrequestreview-460339205", "createdAt": "2020-08-03T21:02:59Z", "commit": {"oid": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMTowMjo1OVrOG7IpCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMTowMjo1OVrOG7IpCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY2MDc0Ng==", "bodyText": "I think it's still hacky but slightly better.\nThere should be a way to share a state in FetchSubPhase#hitExecute though.\nIf we plan to use hitExecute more, maybe we should provide a way to  share a state between hits ?\nA factory could help for instance:\nFunction<SearchContext, FetchSubPhase> fetchSubPhase;", "url": "https://github.com/elastic/elasticsearch/pull/60494#discussion_r464660746", "createdAt": "2020-08-03T21:02:59Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsContext.java", "diffHunk": "@@ -102,22 +105,43 @@ public void setChildInnerHits(Map<String, InnerHitSubContext> childInnerHits) {\n             this.childInnerHits = new InnerHitsContext(childInnerHits);\n         }\n \n-        protected Weight createInnerHitQueryWeight() throws IOException {\n-            final boolean needsScores = size() != 0 && (sort() == null || sort().sort.needsScores());\n-            return context.searcher().createWeight(context.searcher().rewrite(query()),\n+        protected Weight getInnerHitQueryWeight() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyMzYzMQ=="}, "originalCommit": {"oid": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3533, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}