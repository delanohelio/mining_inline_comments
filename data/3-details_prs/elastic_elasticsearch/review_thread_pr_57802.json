{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMDM5ODAy", "number": 57802, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowODo0NlrOEDyBnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOToxMToyMVrOEDyFig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDAwNzk2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowODo0NlrOGg__8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowODo0NlrOGg__8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NjE3Ng==", "bodyText": "Can we capture the number of replica that it randomly set and checks once the index is mounted that it corresponds?", "url": "https://github.com/elastic/elasticsearch/pull/57802#discussion_r437256176", "createdAt": "2020-06-09T09:08:46Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -153,6 +154,9 @@ public void testCreateAndRestoreSearchableSnapshot() throws Exception {\n                 new ByteSizeValue(randomLongBetween(10, 100_000))\n             );\n         }\n+        if (randomBoolean()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40d57d0bc1e6fe16728ee09bca84c0d52b9c8209"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDAxMDk0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowOToyOVrOGhABvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowOToyOVrOGhABvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NjYzOQ==", "bodyText": "The chunk_size can introduces many more writes and files, so maybe we can jut remove for this test?", "url": "https://github.com/elastic/elasticsearch/pull/57802#discussion_r437256639", "createdAt": "2020-06-09T09:09:29Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -425,6 +430,156 @@ public void testMaxRestoreBytesPerSecIsUsed() throws Exception {\n         }\n     }\n \n+    public void testMountedSnapshotHasNoReplicasByDefault() throws Exception {\n+        final String fsRepoName = randomAlphaOfLength(10);\n+        final String indexName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n+        final String restoredIndexName = randomBoolean() ? indexName : randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n+        final String snapshotName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n+\n+        final Path repo = randomRepoPath();\n+        assertAcked(\n+            client().admin()\n+                .cluster()\n+                .preparePutRepository(fsRepoName)\n+                .setType(\"fs\")\n+                .setSettings(Settings.builder().put(\"location\", repo).put(\"chunk_size\", randomIntBetween(100, 1000), ByteSizeUnit.BYTES))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40d57d0bc1e6fe16728ee09bca84c0d52b9c8209"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDAxODAyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOToxMToyMVrOGhAGMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOToxMToyMVrOGhAGMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1Nzc3OA==", "bodyText": "I think we can use minimumNumberOfReplicas / maximumNumberOfReplicas here?", "url": "https://github.com/elastic/elasticsearch/pull/57802#discussion_r437257778", "createdAt": "2020-06-09T09:11:21Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -425,6 +430,156 @@ public void testMaxRestoreBytesPerSecIsUsed() throws Exception {\n         }\n     }\n \n+    public void testMountedSnapshotHasNoReplicasByDefault() throws Exception {\n+        final String fsRepoName = randomAlphaOfLength(10);\n+        final String indexName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n+        final String restoredIndexName = randomBoolean() ? indexName : randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n+        final String snapshotName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n+\n+        final Path repo = randomRepoPath();\n+        assertAcked(\n+            client().admin()\n+                .cluster()\n+                .preparePutRepository(fsRepoName)\n+                .setType(\"fs\")\n+                .setSettings(Settings.builder().put(\"location\", repo).put(\"chunk_size\", randomIntBetween(100, 1000), ByteSizeUnit.BYTES))\n+        );\n+\n+        final int dataNodesCount = internalCluster().numDataNodes();\n+        final Settings.Builder originalIndexSettings = Settings.builder();\n+        originalIndexSettings.put(INDEX_SOFT_DELETES_SETTING.getKey(), true);\n+        if (randomBoolean()) {\n+            originalIndexSettings.put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, between(0, dataNodesCount - 1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40d57d0bc1e6fe16728ee09bca84c0d52b9c8209"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3621, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}