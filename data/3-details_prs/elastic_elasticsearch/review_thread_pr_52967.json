{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNTM0NTYy", "number": 52967, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxODo1NjozMlrODkCZ_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxODo1NjozMlrODkCZ_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTE0NzUwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/cli/ErrorsTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxODo1NjozMlrOFwKgCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDo1MzoyOFrOFwbRqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0ODAxMA==", "bodyText": "I think this is incorrect - if we know the index is empty, we should return no columns since we can determine them and know there are none.", "url": "https://github.com/elastic/elasticsearch/pull/52967#discussion_r386048010", "createdAt": "2020-02-29T18:56:32Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/cli/ErrorsTestCase.java", "diffHunk": "@@ -37,15 +37,30 @@ public void testSelectFromMissingIndex() throws IOException {\n     }\n \n     @Override\n-    public void testSelectFromIndexWithoutTypes() throws Exception {\n+    public void testSelectColumnFromMissingIndex() throws Exception {\n+        assertFoundOneProblem(command(\"SELECT abc FROM test\"));\n+        assertEquals(\"line 1:17: Unknown index [test]\" + END, readLine());\n+    }\n+\n+    @Override\n+    public void testSelectFromEmptyIndex() throws Exception {\n         // Create an index without any types\n         Request request = new Request(\"PUT\", \"/test\");\n         request.setJsonEntity(\"{}\");\n         client().performRequest(request);\n \n         assertFoundOneProblem(command(\"SELECT * FROM test\"));\n-        //assertEquals(\"line 1:15: [test] doesn't have any types so it is incompatible with sql\" + END, readLine());\n-        assertEquals(\"line 1:15: Unknown index [test]\" + END, readLine());\n+        assertEquals(\"line 1:8: Cannot determine columns for [*]\" + END, readLine());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ca64926f81e6a55f90c8207a973b2c1737b3824"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMyMjg1OQ==", "bodyText": "Created #53001", "url": "https://github.com/elastic/elasticsearch/pull/52967#discussion_r386322859", "createdAt": "2020-03-02T10:53:28Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/cli/ErrorsTestCase.java", "diffHunk": "@@ -37,15 +37,30 @@ public void testSelectFromMissingIndex() throws IOException {\n     }\n \n     @Override\n-    public void testSelectFromIndexWithoutTypes() throws Exception {\n+    public void testSelectColumnFromMissingIndex() throws Exception {\n+        assertFoundOneProblem(command(\"SELECT abc FROM test\"));\n+        assertEquals(\"line 1:17: Unknown index [test]\" + END, readLine());\n+    }\n+\n+    @Override\n+    public void testSelectFromEmptyIndex() throws Exception {\n         // Create an index without any types\n         Request request = new Request(\"PUT\", \"/test\");\n         request.setJsonEntity(\"{}\");\n         client().performRequest(request);\n \n         assertFoundOneProblem(command(\"SELECT * FROM test\"));\n-        //assertEquals(\"line 1:15: [test] doesn't have any types so it is incompatible with sql\" + END, readLine());\n-        assertEquals(\"line 1:15: Unknown index [test]\" + END, readLine());\n+        assertEquals(\"line 1:8: Cannot determine columns for [*]\" + END, readLine());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0ODAxMA=="}, "originalCommit": {"oid": "4ca64926f81e6a55f90c8207a973b2c1737b3824"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3473, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}