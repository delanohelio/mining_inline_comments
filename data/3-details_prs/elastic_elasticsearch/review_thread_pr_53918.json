{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxODYzMTI2", "number": 53918, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxNDoxMjowM1rODqFddg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwNDoxMjowN1rODqIIWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDU2MjQ2OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/ml-shared.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxNDoxMjowNFrOF5pqzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxNDoxMjowNFrOF5pqzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5NTg1NA==", "bodyText": "The stopping state is not introduced by this PR - it has existed for a couple of years.  But I thought I'd add it while I was modifying the list.\n(This PR exposes the starting state externally for the first time, so it's understandable it wasn't previously documented.)", "url": "https://github.com/elastic/elasticsearch/pull/53918#discussion_r395995854", "createdAt": "2020-03-21T14:12:04Z", "author": {"login": "droberts195"}, "path": "docs/reference/ml/ml-shared.asciidoc", "diffHunk": "@@ -1388,7 +1388,10 @@ tag::state-datafeed[]\n The status of the {dfeed}, which can be one of the following values:\n +\n --\n+* `starting`: The {dfeed} has been requested to start but has not yet started.\n * `started`: The {dfeed} is actively receiving data.\n+* `stopping`: The {dfeed} has been requested to stop gracefully and is\n+completing its final action.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c386dc2030d5923ee14394840f51951282e3fc5f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDk5OTkyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwNDoxMjowN1rOF5tH5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDozOToyNFrOF6qRjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MjQ1Mg==", "bodyText": "Do we want to return \"opened\": true even though the job is not in the opened state yet?", "url": "https://github.com/elastic/elasticsearch/pull/53918#discussion_r396052452", "createdAt": "2020-03-22T04:12:07Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "diffHunk": "@@ -554,6 +554,7 @@ public boolean test(PersistentTasksCustomMetaData.PersistentTask<?> persistentTa\n \n                 // This means we are awaiting a new node to be spun up, ok to return back to the user to await node creation\n                 if (assignment != null && assignment.equals(JobNodeSelector.AWAITING_LAZY_ASSIGNMENT)) {\n+                    opened = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a08fda32aa7b60d881b46b54ec9fad3a550cd639"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA2ODY5Nw==", "bodyText": "This is what I changed my mind on - look at the difference between the two commits on this PR to see.\nIf we return \"opened\" : false\" for lazy jobs then the UI as it stands won't start the datafeed - see https://github.com/elastic/kibana/blob/33af1c154beeef8a80bb2f2b3279ab62632ab664/x-pack/plugins/ml/server/models/job_service/datafeeds.ts#L84-L97 and https://github.com/elastic/kibana/blob/33af1c154beeef8a80bb2f2b3279ab62632ab664/x-pack/plugins/ml/server/models/job_service/datafeeds.ts#L57-L59\nYou could say that the UI should be changed to accept \"opened\" : false as an acceptable response to start the datafeed if the job is a lazy job, but that's not great becasue:\n\nCurrently that part of the UI source code does not have access to the job configs\nThere are two ways of specifying laziness (the global lazy nodes setting and the per-job laziness setting), and even if the UI were changed to check the per-job setting it couldn't make a sensible decision on the global lazy nodes setting\n\nSo, the response from the open job endpoint has to be sufficient for the UI to answer the question \"is it appropriate to start the datafeed?\"\nI think there are two options:\n\nLeave the response with a single opened field that basically answers that question and change the docs to say that\nRevert the second commit on this PR and instead add a second field, \"awaiting_lazy_assignment\": true, to all three responses (i.e. open anomaly detection job, start datafeed, start data frame analytics job) and change the UI to || the two booleans for the result of its openJob() function\n\nInterestingly start data frame analytics currently does return true for lazily assigned jobs - see \n  \n    \n      elasticsearch/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportStartDataFrameAnalyticsAction.java\n    \n    \n         Line 404\n      in\n      d2740c2\n    \n    \n    \n    \n\n        \n          \n           listener.onResponse(new AcknowledgedResponse(true)); \n        \n    \n  \n\n - so there was an inconsistency there before.\nWhich do you prefer?", "url": "https://github.com/elastic/elasticsearch/pull/53918#discussion_r396068697", "createdAt": "2020-03-22T08:48:21Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "diffHunk": "@@ -554,6 +554,7 @@ public boolean test(PersistentTasksCustomMetaData.PersistentTask<?> persistentTa\n \n                 // This means we are awaiting a new node to be spun up, ok to return back to the user to await node creation\n                 if (assignment != null && assignment.equals(JobNodeSelector.AWAITING_LAZY_ASSIGNMENT)) {\n+                    opened = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MjQ1Mg=="}, "originalCommit": {"oid": "a08fda32aa7b60d881b46b54ec9fad3a550cd639"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA4NDk1Nw==", "bodyText": "May I suggest a 3rd option?\nWe can stick to interpreting \"opened\" and \"started\" as \"it is now opened|started\".\nThe UI could simply check the status code for 200 to interpret \"the request to open|start was successful\" as it doesn't care about whether it is already \"opened|started\" by the time it receives the response.", "url": "https://github.com/elastic/elasticsearch/pull/53918#discussion_r396084957", "createdAt": "2020-03-22T11:55:01Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "diffHunk": "@@ -554,6 +554,7 @@ public boolean test(PersistentTasksCustomMetaData.PersistentTask<?> persistentTa\n \n                 // This means we are awaiting a new node to be spun up, ok to return back to the user to await node creation\n                 if (assignment != null && assignment.equals(JobNodeSelector.AWAITING_LAZY_ASSIGNMENT)) {\n+                    opened = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MjQ1Mg=="}, "originalCommit": {"oid": "a08fda32aa7b60d881b46b54ec9fad3a550cd639"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjExMDg5Mg==", "bodyText": "Yes, sure, that is another option.  I think that would be a trivial change in the UI code because already >= 400 status codes go through a different control path so it would basically be removing a single if.\nI noticed that docs currently don't mention the possibility that opened could be false; it's currently documented that opened is always true, like an acknowledged response but with the field name changed.  So doing it this way would mean updating the docs (which is not a problem if we go this way).\nThe final thing to consider is that starting a data frame analytics job does currently return an acknowledged response with a value hardcoded to true.  So if it's important for the response to say whether the job was lazily opened then maybe in a followup PR we should change data frame analytics to return started with a true or false value depending on whether it was lazily assigned for consistency?\nNone of these options are particularly difficult to implement so I will wait until Monday morning once others have had a chance to comment before making any more code changes to avoid unnecessary churn.", "url": "https://github.com/elastic/elasticsearch/pull/53918#discussion_r396110892", "createdAt": "2020-03-22T16:10:54Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "diffHunk": "@@ -554,6 +554,7 @@ public boolean test(PersistentTasksCustomMetaData.PersistentTask<?> persistentTa\n \n                 // This means we are awaiting a new node to be spun up, ok to return back to the user to await node creation\n                 if (assignment != null && assignment.equals(JobNodeSelector.AWAITING_LAZY_ASSIGNMENT)) {\n+                    opened = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MjQ1Mg=="}, "originalCommit": {"oid": "a08fda32aa7b60d881b46b54ec9fad3a550cd639"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjExMTMwMw==", "bodyText": "Cool. Note that I don't feel strongly about whether opened is true when the job started lazily. I just wonder if it could be misleading. If we conclude that we're not concerned with this, then the simplest thing is to do what the PR is doing already.", "url": "https://github.com/elastic/elasticsearch/pull/53918#discussion_r396111303", "createdAt": "2020-03-22T16:14:32Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "diffHunk": "@@ -554,6 +554,7 @@ public boolean test(PersistentTasksCustomMetaData.PersistentTask<?> persistentTa\n \n                 // This means we are awaiting a new node to be spun up, ok to return back to the user to await node creation\n                 if (assignment != null && assignment.equals(JobNodeSelector.AWAITING_LAZY_ASSIGNMENT)) {\n+                    opened = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MjQ1Mg=="}, "originalCommit": {"oid": "a08fda32aa7b60d881b46b54ec9fad3a550cd639"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMyOTA5Mg==", "bodyText": "Parity with analytics and anomaly is useful, as is treatment for the UI.\nSo opened: true plus a docs change seems acceptable.\nIs there a possibility to add a second response status:opening?\nWe document that opened: true|false means that the instruction to open the job has been accepted (I suspect we would use acknoweldged:true if we were designing today) . And we can use the status to explain if this is happening immediately or slowly. Just a thought.", "url": "https://github.com/elastic/elasticsearch/pull/53918#discussion_r396329092", "createdAt": "2020-03-23T09:55:03Z", "author": {"login": "sophiec20"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "diffHunk": "@@ -554,6 +554,7 @@ public boolean test(PersistentTasksCustomMetaData.PersistentTask<?> persistentTa\n \n                 // This means we are awaiting a new node to be spun up, ok to return back to the user to await node creation\n                 if (assignment != null && assignment.equals(JobNodeSelector.AWAITING_LAZY_ASSIGNMENT)) {\n+                    opened = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MjQ1Mg=="}, "originalCommit": {"oid": "a08fda32aa7b60d881b46b54ec9fad3a550cd639"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNzM3Mw==", "bodyText": "I suspect we would use acknoweldged:true if we were designing today\n\nYes, I think the least BWC-breaking way we can move towards that is to always have opened: true and that is what is documented (the documentation currently says the value is always true).\n\nIs there a possibility to add a second response status:opening?\n\nThis is quite similar to the awaiting_lazy_assignment: true of my second option (although in my second option I was proposing to switch back to opened:false as well, which I think we are now agreeing is not the way to go).\nI prefer awaiting_lazy_assignment: true over status:opening because if I was an end user and saw:\n{\n  \"opened\": true,\n  \"status\": \"opening\"\n}\n\nthen I would probably have to read the docs to work out how to interpret that.  Also:\n{\n  \"opened\": true,\n  \"status\": \"opened\"\n}\n\nis what most users would see, and that looks like it contains redundancy.\nWhereas:\n{\n  \"opened\": true,\n  \"awaiting_lazy_assignment\": true\n}\n\nand:\n{\n  \"opened\": true,\n  \"awaiting_lazy_assignment\": false\n}\n\nseem easier to interpret without reading the docs.\nSo unless anyone strongly objects I will eventually implement that.  But I'd rather get this PR merged ASAP since it fixes a nasty bug and then add awaiting_lazy_assignment across both job types and datafeeds in a different PR.  It will touch quite a few files (since it means HLRC and docs changes for 3 endpoints) and will obscure the main fix in this PR.", "url": "https://github.com/elastic/elasticsearch/pull/53918#discussion_r396607373", "createdAt": "2020-03-23T17:00:14Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "diffHunk": "@@ -554,6 +554,7 @@ public boolean test(PersistentTasksCustomMetaData.PersistentTask<?> persistentTa\n \n                 // This means we are awaiting a new node to be spun up, ok to return back to the user to await node creation\n                 if (assignment != null && assignment.equals(JobNodeSelector.AWAITING_LAZY_ASSIGNMENT)) {\n+                    opened = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MjQ1Mg=="}, "originalCommit": {"oid": "a08fda32aa7b60d881b46b54ec9fad3a550cd639"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3Nzc2NQ==", "bodyText": "Agreed, let's merge PR to fix the bug.\nAnd let's treat the second field as a separate discussion for a future release.", "url": "https://github.com/elastic/elasticsearch/pull/53918#discussion_r396677765", "createdAt": "2020-03-23T18:44:29Z", "author": {"login": "sophiec20"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "diffHunk": "@@ -554,6 +554,7 @@ public boolean test(PersistentTasksCustomMetaData.PersistentTask<?> persistentTa\n \n                 // This means we are awaiting a new node to be spun up, ok to return back to the user to await node creation\n                 if (assignment != null && assignment.equals(JobNodeSelector.AWAITING_LAZY_ASSIGNMENT)) {\n+                    opened = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MjQ1Mg=="}, "originalCommit": {"oid": "a08fda32aa7b60d881b46b54ec9fad3a550cd639"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA1NDM0OQ==", "bodyText": "I opened #54067 to discuss what to do in 7.8.", "url": "https://github.com/elastic/elasticsearch/pull/53918#discussion_r397054349", "createdAt": "2020-03-24T10:39:24Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "diffHunk": "@@ -554,6 +554,7 @@ public boolean test(PersistentTasksCustomMetaData.PersistentTask<?> persistentTa\n \n                 // This means we are awaiting a new node to be spun up, ok to return back to the user to await node creation\n                 if (assignment != null && assignment.equals(JobNodeSelector.AWAITING_LAZY_ASSIGNMENT)) {\n+                    opened = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MjQ1Mg=="}, "originalCommit": {"oid": "a08fda32aa7b60d881b46b54ec9fad3a550cd639"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4191, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}