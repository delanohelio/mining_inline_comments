{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NDM5MjM4", "number": 53512, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo0ODoxM1rODnmhVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjo1NDozNVrODn0lPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODUyMTgzOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/index/mapper/TypeFieldTypeTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo0ODoxM1rOF1s0aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo0ODoxM1rOF1s0aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg1MzE2MA==", "bodyText": "I left this test and added this special case in ConstantFieldType#termQuery because we might still need to support it on 7.x? Happy to remove if its safe but I'm not too familiar with this area.", "url": "https://github.com/elastic/elasticsearch/pull/53512#discussion_r391853160", "createdAt": "2020-03-12T19:48:13Z", "author": {"login": "cbuescher"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/TypeFieldTypeTests.java", "diffHunk": "@@ -53,26 +53,25 @@ public void testTermsQuery() throws Exception {\n         MapperService mapperService = Mockito.mock(MapperService.class);\n         Mockito.when(mapperService.documentMapper()).thenReturn(null);\n         Mockito.when(context.getMapperService()).thenReturn(mapperService);\n+        DocumentMapper mapper = Mockito.mock(DocumentMapper.class);\n+        Mockito.when(mapper.type()).thenReturn(\"_doc\");\n+        Mockito.when(mapperService.documentMapper()).thenReturn(mapper);\n \n         TypeFieldMapper.TypeFieldType ft = new TypeFieldMapper.TypeFieldType();\n         ft.setName(TypeFieldMapper.NAME);\n-        Query query = ft.termQuery(\"my_type\", context);\n+\n+        Query query = ft.termQuery(\"_doc\", context);\n+        assertEquals(new MatchAllDocsQuery(), query);\n+\n+        query = ft.termQuery(\"other_type\", context);\n         assertEquals(new MatchNoDocsQuery(), query);\n \n-        DocumentMapper mapper = Mockito.mock(DocumentMapper.class);\n-        Mockito.when(mapper.type()).thenReturn(\"my_type\");\n-        Mockito.when(mapperService.documentMapper()).thenReturn(mapper);\n-        query = ft.termQuery(\"my_type\", context);\n+        Mockito.when(mapper.type()).thenReturn(\"other_type\");\n+        query = ft.termQuery(\"other_type\", context);\n         assertEquals(new MatchAllDocsQuery(), query);\n \n         Mockito.when(mapperService.hasNested()).thenReturn(true);\n-        query = ft.termQuery(\"my_type\", context);\n+        query = ft.termQuery(\"other_type\", context);\n         assertEquals(Queries.newNonNestedFilter(context.indexVersionCreated()), query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe1a10ac4361832eb793d3d222593452506c117"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODUyMzI5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/ConstantFieldType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo0ODo0NVrOF1s1VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo0ODo0NVrOF1s1VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg1MzM5Nw==", "bodyText": "See comment in tests below, I wasn't sure if on 7.x we still need this so left it here for discussion.", "url": "https://github.com/elastic/elasticsearch/pull/53512#discussion_r391853397", "createdAt": "2020-03-12T19:48:45Z", "author": {"login": "cbuescher"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/ConstantFieldType.java", "diffHunk": "@@ -79,6 +79,10 @@ private static String valueToString(Object value) {\n     public final Query termQuery(Object value, QueryShardContext context) {\n         String pattern = valueToString(value);\n         if (matches(pattern, context)) {\n+            if (context != null && context.getMapperService().hasNested()) {\n+                // type filters are expected not to match nested docs\n+                return Queries.newNonNestedFilter(context.indexVersionCreated());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe1a10ac4361832eb793d3d222593452506c117"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDgyNTU3OnYy", "diffSide": "LEFT", "path": "server/src/test/java/org/elasticsearch/index/query/WildcardQueryBuilderTests.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjo1NDozNVrOF2CjHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNTowMzoyMVrOF60kmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIwOTE4Mg==", "bodyText": "I removed this test for wildcard queries on \"_type\" fields. These don't return anything useful at the moment already, however before the change in this PR we still got an empty response while now we get an error because \"_type\" is not indexed. I don't know if we can tolerate this, otherwise I need to add a very simple wildcard implementation to TypeFieldType again.", "url": "https://github.com/elastic/elasticsearch/pull/53512#discussion_r392209182", "createdAt": "2020-03-13T12:54:35Z", "author": {"login": "cbuescher"}, "path": "server/src/test/java/org/elasticsearch/index/query/WildcardQueryBuilderTests.java", "diffHunk": "@@ -133,19 +136,13 @@ public void testParseFailsWithMultipleFields() throws IOException {\n         assertEquals(\"[wildcard] query doesn't support multiple fields, found [user1] and [user2]\", e.getMessage());\n     }\n \n-    public void testTypeField() throws IOException {\n-        WildcardQueryBuilder builder = QueryBuilders.wildcardQuery(\"_type\", \"doc*\");\n-        builder.doToQuery(createShardContext());\n-        assertWarnings(QueryShardContext.TYPES_DEPRECATION_MESSAGE);\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8e6628b2aacc701cd01419e7615ca1eb640c1a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyODczMQ==", "bodyText": "I'm not following, _type should still be indexed in 7x?  It's only in 8x that it will be gone as a field.", "url": "https://github.com/elastic/elasticsearch/pull/53512#discussion_r392228731", "createdAt": "2020-03-13T13:32:17Z", "author": {"login": "romseygeek"}, "path": "server/src/test/java/org/elasticsearch/index/query/WildcardQueryBuilderTests.java", "diffHunk": "@@ -133,19 +136,13 @@ public void testParseFailsWithMultipleFields() throws IOException {\n         assertEquals(\"[wildcard] query doesn't support multiple fields, found [user1] and [user2]\", e.getMessage());\n     }\n \n-    public void testTypeField() throws IOException {\n-        WildcardQueryBuilder builder = QueryBuilders.wildcardQuery(\"_type\", \"doc*\");\n-        builder.doToQuery(createShardContext());\n-        assertWarnings(QueryShardContext.TYPES_DEPRECATION_MESSAGE);\n-    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIwOTE4Mg=="}, "originalCommit": {"oid": "0b8e6628b2aacc701cd01419e7615ca1eb640c1a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE5NDkxNA==", "bodyText": "_type should still be indexed in 7x\n\nThats true, the test above only checks for the deprecation message though. Currently if you do a wildcard query on a \"_type\" field, it returns no hits (even for exact values like \"value\": \"_doc\"). Thats why I think nobody should really do that kind of query on a \"_type\" field. With the changes in this PR we would error in those cases though. If you want I can try to work around that.", "url": "https://github.com/elastic/elasticsearch/pull/53512#discussion_r397194914", "createdAt": "2020-03-24T14:28:06Z", "author": {"login": "cbuescher"}, "path": "server/src/test/java/org/elasticsearch/index/query/WildcardQueryBuilderTests.java", "diffHunk": "@@ -133,19 +136,13 @@ public void testParseFailsWithMultipleFields() throws IOException {\n         assertEquals(\"[wildcard] query doesn't support multiple fields, found [user1] and [user2]\", e.getMessage());\n     }\n \n-    public void testTypeField() throws IOException {\n-        WildcardQueryBuilder builder = QueryBuilders.wildcardQuery(\"_type\", \"doc*\");\n-        builder.doToQuery(createShardContext());\n-        assertWarnings(QueryShardContext.TYPES_DEPRECATION_MESSAGE);\n-    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIwOTE4Mg=="}, "originalCommit": {"oid": "0b8e6628b2aacc701cd01419e7615ca1eb640c1a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIxMDU2OQ==", "bodyText": "Erroring is better than silent weirdness, let's leave it as is.", "url": "https://github.com/elastic/elasticsearch/pull/53512#discussion_r397210569", "createdAt": "2020-03-24T14:47:55Z", "author": {"login": "romseygeek"}, "path": "server/src/test/java/org/elasticsearch/index/query/WildcardQueryBuilderTests.java", "diffHunk": "@@ -133,19 +136,13 @@ public void testParseFailsWithMultipleFields() throws IOException {\n         assertEquals(\"[wildcard] query doesn't support multiple fields, found [user1] and [user2]\", e.getMessage());\n     }\n \n-    public void testTypeField() throws IOException {\n-        WildcardQueryBuilder builder = QueryBuilders.wildcardQuery(\"_type\", \"doc*\");\n-        builder.doToQuery(createShardContext());\n-        assertWarnings(QueryShardContext.TYPES_DEPRECATION_MESSAGE);\n-    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIwOTE4Mg=="}, "originalCommit": {"oid": "0b8e6628b2aacc701cd01419e7615ca1eb640c1a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIxNTQzOQ==", "bodyText": "Sorry, I meant to write \"except for exact values like \"_doc\" above. So that works on 7.x, but I hardly believe anybody relies on that? If you change your mind after this clarification let me know.", "url": "https://github.com/elastic/elasticsearch/pull/53512#discussion_r397215439", "createdAt": "2020-03-24T14:53:50Z", "author": {"login": "cbuescher"}, "path": "server/src/test/java/org/elasticsearch/index/query/WildcardQueryBuilderTests.java", "diffHunk": "@@ -133,19 +136,13 @@ public void testParseFailsWithMultipleFields() throws IOException {\n         assertEquals(\"[wildcard] query doesn't support multiple fields, found [user1] and [user2]\", e.getMessage());\n     }\n \n-    public void testTypeField() throws IOException {\n-        WildcardQueryBuilder builder = QueryBuilders.wildcardQuery(\"_type\", \"doc*\");\n-        builder.doToQuery(createShardContext());\n-        assertWarnings(QueryShardContext.TYPES_DEPRECATION_MESSAGE);\n-    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIwOTE4Mg=="}, "originalCommit": {"oid": "0b8e6628b2aacc701cd01419e7615ca1eb640c1a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIyMzA2Ng==", "bodyText": "\u2026 starting to think better safe than sorry, I think its a small addition that will keep the existing (weird) behaviour\nI\u2019ll look into that for a bit, leave it if it gets too ugly", "url": "https://github.com/elastic/elasticsearch/pull/53512#discussion_r397223066", "createdAt": "2020-03-24T15:03:21Z", "author": {"login": "cbuescher"}, "path": "server/src/test/java/org/elasticsearch/index/query/WildcardQueryBuilderTests.java", "diffHunk": "@@ -133,19 +136,13 @@ public void testParseFailsWithMultipleFields() throws IOException {\n         assertEquals(\"[wildcard] query doesn't support multiple fields, found [user1] and [user2]\", e.getMessage());\n     }\n \n-    public void testTypeField() throws IOException {\n-        WildcardQueryBuilder builder = QueryBuilders.wildcardQuery(\"_type\", \"doc*\");\n-        builder.doToQuery(createShardContext());\n-        assertWarnings(QueryShardContext.TYPES_DEPRECATION_MESSAGE);\n-    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIwOTE4Mg=="}, "originalCommit": {"oid": "0b8e6628b2aacc701cd01419e7615ca1eb640c1a"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3220, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}