{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MzUyOTcx", "number": 60092, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDoyMTo1MlrOETRxNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo1NToxNVrOETSw1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjQ5NTI0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDoyMTo1MlrOG462xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTowMzozMVrOG5GF2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzNzczMw==", "bodyText": "interesting scenario that I never though about: scoring based on runtime fields. You already added this to the runtime fields meta issue right?", "url": "https://github.com/elastic/elasticsearch/pull/60092#discussion_r462337733", "createdAt": "2020-07-29T14:21:52Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionBuilder.java", "diffHunk": "@@ -210,6 +210,7 @@ private AbstractDistanceScoreFunction parseVariable(String fieldName, XContentPa\n \n         // dates and time and geo need special handling\n         parser.nextToken();\n+        // TODO these ain't gonna work with runtime fields", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "578818c45e2e20eb9f8bbdece336fd722c46b608"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMTgxOA==", "bodyText": "Yeah, I added it.", "url": "https://github.com/elastic/elasticsearch/pull/60092#discussion_r462521818", "createdAt": "2020-07-29T19:03:31Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionBuilder.java", "diffHunk": "@@ -210,6 +210,7 @@ private AbstractDistanceScoreFunction parseVariable(String fieldName, XContentPa\n \n         // dates and time and geo need special handling\n         parser.nextToken();\n+        // TODO these ain't gonna work with runtime fields", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzNzczMw=="}, "originalCommit": {"oid": "578818c45e2e20eb9f8bbdece336fd722c46b608"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjUwNzU1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/query/DistanceFeatureQueryBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDoyNDozMFrOG46-nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTowNDo1MVrOG5GI9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzOTc0MA==", "bodyText": "interesting too, at least both of these are around parsing values, which you are making public so that we can reuse for runtime fields?", "url": "https://github.com/elastic/elasticsearch/pull/60092#discussion_r462339740", "createdAt": "2020-07-29T14:24:30Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/query/DistanceFeatureQueryBuilder.java", "diffHunk": "@@ -120,6 +120,7 @@ protected Query doToQuery(QueryShardContext context) throws IOException {\n             return Queries.newMatchNoDocsQuery(\"Can't run [\" + NAME + \"] query on unmapped fields!\");\n         }\n         Object originObj = origin.origin();\n+        // TODO these ain't gonna work with runtime fields", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "578818c45e2e20eb9f8bbdece336fd722c46b608"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMjYxNA==", "bodyText": "Yeah, we can handle this somehow.", "url": "https://github.com/elastic/elasticsearch/pull/60092#discussion_r462522614", "createdAt": "2020-07-29T19:04:51Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/query/DistanceFeatureQueryBuilder.java", "diffHunk": "@@ -120,6 +120,7 @@ protected Query doToQuery(QueryShardContext context) throws IOException {\n             return Queries.newMatchNoDocsQuery(\"Can't run [\" + NAME + \"] query on unmapped fields!\");\n         }\n         Object originObj = origin.origin();\n+        // TODO these ain't gonna work with runtime fields", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzOTc0MA=="}, "originalCommit": {"oid": "578818c45e2e20eb9f8bbdece336fd722c46b608"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjY1ODEzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/ScriptLongMappedFieldType.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo1NToxNVrOG48cXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTozMjo0NlrOG5HGEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2Mzc0MQ==", "bodyText": "I get confused here on what has changed. why can't we return the long field script. given that we are in the long mapped field type?", "url": "https://github.com/elastic/elasticsearch/pull/60092#discussion_r462363741", "createdAt": "2020-07-29T14:55:15Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/ScriptLongMappedFieldType.java", "diffHunk": "@@ -51,8 +52,9 @@ public Object valueForDisplay(Object value) {\n         return new ScriptLongFieldData.Builder(name(), script, scriptFactory);\n     }\n \n-    private LongScriptFieldScript.LeafFactory leafFactory(QueryShardContext context) {\n-        return scriptFactory.newFactory(script.getParams(), context.lookup());\n+    private AbstractLongScriptFieldScript.LeafFactory leafFactory(QueryShardContext context) {\n+        LongScriptFieldScript.LeafFactory delegate = scriptFactory.newFactory(script.getParams(), context.lookup());\n+        return ctx -> delegate.newInstance(ctx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "578818c45e2e20eb9f8bbdece336fd722c46b608"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMjgxMw==", "bodyText": "I don't remember! I'll check.", "url": "https://github.com/elastic/elasticsearch/pull/60092#discussion_r462522813", "createdAt": "2020-07-29T19:05:10Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/ScriptLongMappedFieldType.java", "diffHunk": "@@ -51,8 +52,9 @@ public Object valueForDisplay(Object value) {\n         return new ScriptLongFieldData.Builder(name(), script, scriptFactory);\n     }\n \n-    private LongScriptFieldScript.LeafFactory leafFactory(QueryShardContext context) {\n-        return scriptFactory.newFactory(script.getParams(), context.lookup());\n+    private AbstractLongScriptFieldScript.LeafFactory leafFactory(QueryShardContext context) {\n+        LongScriptFieldScript.LeafFactory delegate = scriptFactory.newFactory(script.getParams(), context.lookup());\n+        return ctx -> delegate.newInstance(ctx);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2Mzc0MQ=="}, "originalCommit": {"oid": "578818c45e2e20eb9f8bbdece336fd722c46b608"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzODI1OQ==", "bodyText": "It had to do with being able to share the queries. I've dropped it in favor of something a little more obvious.", "url": "https://github.com/elastic/elasticsearch/pull/60092#discussion_r462538259", "createdAt": "2020-07-29T19:32:46Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/ScriptLongMappedFieldType.java", "diffHunk": "@@ -51,8 +52,9 @@ public Object valueForDisplay(Object value) {\n         return new ScriptLongFieldData.Builder(name(), script, scriptFactory);\n     }\n \n-    private LongScriptFieldScript.LeafFactory leafFactory(QueryShardContext context) {\n-        return scriptFactory.newFactory(script.getParams(), context.lookup());\n+    private AbstractLongScriptFieldScript.LeafFactory leafFactory(QueryShardContext context) {\n+        LongScriptFieldScript.LeafFactory delegate = scriptFactory.newFactory(script.getParams(), context.lookup());\n+        return ctx -> delegate.newInstance(ctx);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2Mzc0MQ=="}, "originalCommit": {"oid": "578818c45e2e20eb9f8bbdece336fd722c46b608"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2126, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}