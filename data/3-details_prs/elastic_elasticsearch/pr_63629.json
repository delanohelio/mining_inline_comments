{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNTI0MjQx", "number": 63629, "title": "Gradle - compatible REST test plugin - adopt bwc artifact", "bodyText": "Use newly exposed bwc:minor / checkout artifact as opposed to coding directly against\nthe output of a bwc:minor checkout task. The copy test/api tasks have been updated\nto lazily compute the subset of the files from the configuration. This is to facilitate\ncompatible testing which needs to filter singular bwc:minor checkout in core/x-pack/project\nset of files. By default (unless explicitly requested) the copy test/api tasks will continue\nto use the full fileTree of the configuration.\nrelated: #63173", "createdAt": "2020-10-13T16:15:18Z", "url": "https://github.com/elastic/elasticsearch/pull/63629", "merged": true, "mergeCommit": {"oid": "14414788e6592930ef3f9ba577e6b412cf361821"}, "closed": true, "closedAt": "2020-10-20T18:06:39Z", "author": {"login": "jakelandis"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSKVxNAH2gAyNTAyNTI0MjQxOjBkZWY3YTcxZjA0NTc3OTk3OTIzYjRkN2I2OTVhZWIyODQzZmFiMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUb2nqgH2gAyNTAyNTI0MjQxOmM2ODJjMWNiY2M3NTM1NWE4NWYwM2EwNmRiMzg2MmZlYjcyMTMzZTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0def7a71f04577997923b4d7b695aeb2843fab17", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/0def7a71f04577997923b4d7b695aeb2843fab17", "committedDate": "2020-10-13T15:30:42Z", "message": "initial support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a5adbbf958505e5791f9d80a29ce20e25bb7ed4", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/1a5adbbf958505e5791f9d80a29ce20e25bb7ed4", "committedDate": "2020-10-13T16:14:33Z", "message": "minor change to support jar file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74963c8de3692b936d6052405de84e025d64a86e", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/74963c8de3692b936d6052405de84e025d64a86e", "committedDate": "2020-10-13T16:16:28Z", "message": "remove test code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0df3e61688cb5842d23ac1a65df8ddacba220ee4", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/0df3e61688cb5842d23ac1a65df8ddacba220ee4", "committedDate": "2020-10-13T16:32:21Z", "message": "fix precommit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3ODk2MjE5", "url": "https://github.com/elastic/elasticsearch/pull/63629#pullrequestreview-507896219", "createdAt": "2020-10-13T23:25:39Z", "commit": {"oid": "0df3e61688cb5842d23ac1a65df8ddacba220ee4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzoyNTo0MFrOHg86Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzoyOToxOVrOHg8-gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNDM3NA==", "bodyText": "I forget what the plan is for expanding this beyond just hard-coding this to only test against minor. I think we need some infra for being able to download rest test artifacts but we could also do test against \"staged\" right now.  I think a better intermediare step would be to use BwcVersions.forPreviousUnreleased here to iterate over any existing unreleased BWC branches.", "url": "https://github.com/elastic/elasticsearch/pull/63629#discussion_r504314374", "createdAt": "2020-10-13T23:25:40Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/YamlRestCompatTestPlugin.java", "diffHunk": "@@ -73,84 +74,54 @@ public void apply(Project project) {\n         ElasticsearchCluster testCluster = createTestCluster(project, yamlCompatTestSourceSet);\n         testCluster.setTestDistribution(TestDistribution.DEFAULT);\n \n-        // TODO: once https://github.com/elastic/elasticsearch/pull/62473 lands refactor this to reference the checkoutDir as an artifact\n-        int priorMajorVersion = VersionProperties.getElasticsearchVersion().getMajor() - 1;\n-        final Path checkoutDir = project.findProject(\":distribution:bwc:minor\")\n-            .getBuildDir()\n-            .toPath()\n-            .resolve(\"bwc\")\n-            .resolve(\"checkout-\" + priorMajorVersion + \".x\");\n-\n         // copy compatible rest specs\n-        Configuration compatSpec = project.getConfigurations().create(\"compatSpec\");\n-        Configuration xpackCompatSpec = project.getConfigurations().create(\"xpackCompatSpec\");\n-        Configuration additionalCompatSpec = project.getConfigurations().create(\"additionalCompatSpec\");\n+        Configuration bwcMinorConfig = project.getConfigurations().create(\"bwcMinor\");\n+        Dependency bwcMinor = project.getDependencies().project(Map.of(\"path\", \":distribution:bwc:minor\", \"configuration\", \"checkout\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0df3e61688cb5842d23ac1a65df8ddacba220ee4"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNDc0Mg==", "bodyText": "Why are we doing this in the task configuration? I think this should be up where we create the configuration and dependency.", "url": "https://github.com/elastic/elasticsearch/pull/63629#discussion_r504314742", "createdAt": "2020-10-13T23:26:50Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/YamlRestCompatTestPlugin.java", "diffHunk": "@@ -73,84 +74,54 @@ public void apply(Project project) {\n         ElasticsearchCluster testCluster = createTestCluster(project, yamlCompatTestSourceSet);\n         testCluster.setTestDistribution(TestDistribution.DEFAULT);\n \n-        // TODO: once https://github.com/elastic/elasticsearch/pull/62473 lands refactor this to reference the checkoutDir as an artifact\n-        int priorMajorVersion = VersionProperties.getElasticsearchVersion().getMajor() - 1;\n-        final Path checkoutDir = project.findProject(\":distribution:bwc:minor\")\n-            .getBuildDir()\n-            .toPath()\n-            .resolve(\"bwc\")\n-            .resolve(\"checkout-\" + priorMajorVersion + \".x\");\n-\n         // copy compatible rest specs\n-        Configuration compatSpec = project.getConfigurations().create(\"compatSpec\");\n-        Configuration xpackCompatSpec = project.getConfigurations().create(\"xpackCompatSpec\");\n-        Configuration additionalCompatSpec = project.getConfigurations().create(\"additionalCompatSpec\");\n+        Configuration bwcMinorConfig = project.getConfigurations().create(\"bwcMinor\");\n+        Dependency bwcMinor = project.getDependencies().project(Map.of(\"path\", \":distribution:bwc:minor\", \"configuration\", \"checkout\"));\n+\n         Provider<CopyRestApiTask> copyCompatYamlSpecTask = project.getTasks()\n             .register(\"copyRestApiCompatSpecsTask\", CopyRestApiTask.class, task -> {\n+                project.getDependencies().add(bwcMinorConfig.getName(), bwcMinor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0df3e61688cb5842d23ac1a65df8ddacba220ee4"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNTIxMw==", "bodyText": "shouldn't we really be referencing config here instead of bwcMinorConfig even though they are almost certain to be the same?", "url": "https://github.com/elastic/elasticsearch/pull/63629#discussion_r504315213", "createdAt": "2020-10-13T23:28:20Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/YamlRestCompatTestPlugin.java", "diffHunk": "@@ -73,84 +74,54 @@ public void apply(Project project) {\n         ElasticsearchCluster testCluster = createTestCluster(project, yamlCompatTestSourceSet);\n         testCluster.setTestDistribution(TestDistribution.DEFAULT);\n \n-        // TODO: once https://github.com/elastic/elasticsearch/pull/62473 lands refactor this to reference the checkoutDir as an artifact\n-        int priorMajorVersion = VersionProperties.getElasticsearchVersion().getMajor() - 1;\n-        final Path checkoutDir = project.findProject(\":distribution:bwc:minor\")\n-            .getBuildDir()\n-            .toPath()\n-            .resolve(\"bwc\")\n-            .resolve(\"checkout-\" + priorMajorVersion + \".x\");\n-\n         // copy compatible rest specs\n-        Configuration compatSpec = project.getConfigurations().create(\"compatSpec\");\n-        Configuration xpackCompatSpec = project.getConfigurations().create(\"xpackCompatSpec\");\n-        Configuration additionalCompatSpec = project.getConfigurations().create(\"additionalCompatSpec\");\n+        Configuration bwcMinorConfig = project.getConfigurations().create(\"bwcMinor\");\n+        Dependency bwcMinor = project.getDependencies().project(Map.of(\"path\", \":distribution:bwc:minor\", \"configuration\", \"checkout\"));\n+\n         Provider<CopyRestApiTask> copyCompatYamlSpecTask = project.getTasks()\n             .register(\"copyRestApiCompatSpecsTask\", CopyRestApiTask.class, task -> {\n+                project.getDependencies().add(bwcMinorConfig.getName(), bwcMinor);\n+                task.dependsOn(bwcMinorConfig);\n+                task.coreConfig = bwcMinorConfig;\n+                task.xpackConfig = bwcMinorConfig;\n+                task.additionalConfig = bwcMinorConfig;\n                 task.includeCore.set(extension.restApi.getIncludeCore());\n                 task.includeXpack.set(extension.restApi.getIncludeXpack());\n                 task.sourceSetName = SOURCE_SET_NAME;\n                 task.skipHasRestTestCheck = true;\n-                task.coreConfig = compatSpec;\n-                project.getDependencies()\n-                    .add(\n-                        task.coreConfig.getName(),\n-                        project.files(checkoutDir.resolve(\"rest-api-spec/src/main/resources\").resolve(RELATIVE_API_PATH))\n-                    );\n-                task.xpackConfig = xpackCompatSpec;\n-                project.getDependencies()\n-                    .add(\n-                        task.xpackConfig.getName(),\n-                        project.files(checkoutDir.resolve(\"x-pack/plugin/src/test/resources\").resolve(RELATIVE_API_PATH))\n-                    );\n-                task.additionalConfig = additionalCompatSpec;\n-                // per project can define custom specifications\n-                project.getDependencies()\n-                    .add(\n-                        task.additionalConfig.getName(),\n-                        project.files(\n-                            getCompatProjectPath(project, checkoutDir).resolve(\"src/yamlRestTest/resources\").resolve(RELATIVE_API_PATH)\n-                        )\n-                    );\n-                task.dependsOn(task.coreConfig);\n-                task.dependsOn(task.xpackConfig);\n-                task.dependsOn(task.additionalConfig);\n-                task.dependsOn(\":distribution:bwc:minor:checkoutBwcBranch\");\n+                task.coreConfigToFileTree = config -> project.fileTree(\n+                    bwcMinorConfig.getSingleFile().toPath().resolve(\"rest-api-spec/src/main/resources\").resolve(RELATIVE_API_PATH)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0df3e61688cb5842d23ac1a65df8ddacba220ee4"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNTUyMQ==", "bodyText": "Should we make the spec folders constants as well?", "url": "https://github.com/elastic/elasticsearch/pull/63629#discussion_r504315521", "createdAt": "2020-10-13T23:29:19Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/YamlRestCompatTestPlugin.java", "diffHunk": "@@ -73,84 +74,54 @@ public void apply(Project project) {\n         ElasticsearchCluster testCluster = createTestCluster(project, yamlCompatTestSourceSet);\n         testCluster.setTestDistribution(TestDistribution.DEFAULT);\n \n-        // TODO: once https://github.com/elastic/elasticsearch/pull/62473 lands refactor this to reference the checkoutDir as an artifact\n-        int priorMajorVersion = VersionProperties.getElasticsearchVersion().getMajor() - 1;\n-        final Path checkoutDir = project.findProject(\":distribution:bwc:minor\")\n-            .getBuildDir()\n-            .toPath()\n-            .resolve(\"bwc\")\n-            .resolve(\"checkout-\" + priorMajorVersion + \".x\");\n-\n         // copy compatible rest specs\n-        Configuration compatSpec = project.getConfigurations().create(\"compatSpec\");\n-        Configuration xpackCompatSpec = project.getConfigurations().create(\"xpackCompatSpec\");\n-        Configuration additionalCompatSpec = project.getConfigurations().create(\"additionalCompatSpec\");\n+        Configuration bwcMinorConfig = project.getConfigurations().create(\"bwcMinor\");\n+        Dependency bwcMinor = project.getDependencies().project(Map.of(\"path\", \":distribution:bwc:minor\", \"configuration\", \"checkout\"));\n+\n         Provider<CopyRestApiTask> copyCompatYamlSpecTask = project.getTasks()\n             .register(\"copyRestApiCompatSpecsTask\", CopyRestApiTask.class, task -> {\n+                project.getDependencies().add(bwcMinorConfig.getName(), bwcMinor);\n+                task.dependsOn(bwcMinorConfig);\n+                task.coreConfig = bwcMinorConfig;\n+                task.xpackConfig = bwcMinorConfig;\n+                task.additionalConfig = bwcMinorConfig;\n                 task.includeCore.set(extension.restApi.getIncludeCore());\n                 task.includeXpack.set(extension.restApi.getIncludeXpack());\n                 task.sourceSetName = SOURCE_SET_NAME;\n                 task.skipHasRestTestCheck = true;\n-                task.coreConfig = compatSpec;\n-                project.getDependencies()\n-                    .add(\n-                        task.coreConfig.getName(),\n-                        project.files(checkoutDir.resolve(\"rest-api-spec/src/main/resources\").resolve(RELATIVE_API_PATH))\n-                    );\n-                task.xpackConfig = xpackCompatSpec;\n-                project.getDependencies()\n-                    .add(\n-                        task.xpackConfig.getName(),\n-                        project.files(checkoutDir.resolve(\"x-pack/plugin/src/test/resources\").resolve(RELATIVE_API_PATH))\n-                    );\n-                task.additionalConfig = additionalCompatSpec;\n-                // per project can define custom specifications\n-                project.getDependencies()\n-                    .add(\n-                        task.additionalConfig.getName(),\n-                        project.files(\n-                            getCompatProjectPath(project, checkoutDir).resolve(\"src/yamlRestTest/resources\").resolve(RELATIVE_API_PATH)\n-                        )\n-                    );\n-                task.dependsOn(task.coreConfig);\n-                task.dependsOn(task.xpackConfig);\n-                task.dependsOn(task.additionalConfig);\n-                task.dependsOn(\":distribution:bwc:minor:checkoutBwcBranch\");\n+                task.coreConfigToFileTree = config -> project.fileTree(\n+                    bwcMinorConfig.getSingleFile().toPath().resolve(\"rest-api-spec/src/main/resources\").resolve(RELATIVE_API_PATH)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0df3e61688cb5842d23ac1a65df8ddacba220ee4"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MTU3NzE3", "url": "https://github.com/elastic/elasticsearch/pull/63629#pullrequestreview-508157717", "createdAt": "2020-10-14T09:24:34Z", "commit": {"oid": "0df3e61688cb5842d23ac1a65df8ddacba220ee4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToyNDozNFrOHhKNCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToyNzoxMFrOHhKToA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzMjIzMw==", "bodyText": "Not strictly related but since we're here: can we change this task to use the ProjectLayout Service here instead of referencing the project object. This helps us moving (slowly) towards supporting the gradle configuration cache (https://docs.gradle.org/current/userguide/configuration_cache.html) You can inject the service e.g. via constructor and annotating that constructor with @Inject", "url": "https://github.com/elastic/elasticsearch/pull/63629#discussion_r504532233", "createdAt": "2020-10-14T09:24:34Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/CopyRestApiTask.java", "diffHunk": "@@ -117,21 +122,21 @@ public FileTree getInputDir() {\n         FileTree xpackFileTree = null;\n         if (includeXpack.get().isEmpty() == false) {\n             xpackPatternSet.setIncludes(includeXpack.get().stream().map(prefix -> prefix + \"*/**\").collect(Collectors.toList()));\n-            xpackFileTree = xpackConfig.getAsFileTree().matching(xpackPatternSet);\n+            xpackFileTree = xpackConfigToFileTree.apply(xpackConfig).matching(xpackPatternSet);\n         }\n         boolean projectHasYamlRestTests = skipHasRestTestCheck || projectHasYamlRestTests();\n         if (includeCore.get().isEmpty() == false || projectHasYamlRestTests) {\n             if (BuildParams.isInternal()) {\n                 corePatternSet.setIncludes(includeCore.get().stream().map(prefix -> prefix + \"*/**\").collect(Collectors.toList()));\n-                coreFileTree = coreConfig.getAsFileTree().matching(corePatternSet); // directory on disk\n+                coreFileTree = coreConfigToFileTree.apply(coreConfig).matching(corePatternSet); // directory on disk\n             } else {\n                 coreFileTree = coreConfig.getAsFileTree(); // jar file\n             }\n         }\n \n         ConfigurableFileCollection fileCollection = additionalConfig == null\n             ? getProject().files(coreFileTree, xpackFileTree)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0df3e61688cb5842d23ac1a65df8ddacba220ee4"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzMzkyMA==", "bodyText": "+1", "url": "https://github.com/elastic/elasticsearch/pull/63629#discussion_r504533920", "createdAt": "2020-10-14T09:27:10Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/YamlRestCompatTestPlugin.java", "diffHunk": "@@ -73,84 +74,54 @@ public void apply(Project project) {\n         ElasticsearchCluster testCluster = createTestCluster(project, yamlCompatTestSourceSet);\n         testCluster.setTestDistribution(TestDistribution.DEFAULT);\n \n-        // TODO: once https://github.com/elastic/elasticsearch/pull/62473 lands refactor this to reference the checkoutDir as an artifact\n-        int priorMajorVersion = VersionProperties.getElasticsearchVersion().getMajor() - 1;\n-        final Path checkoutDir = project.findProject(\":distribution:bwc:minor\")\n-            .getBuildDir()\n-            .toPath()\n-            .resolve(\"bwc\")\n-            .resolve(\"checkout-\" + priorMajorVersion + \".x\");\n-\n         // copy compatible rest specs\n-        Configuration compatSpec = project.getConfigurations().create(\"compatSpec\");\n-        Configuration xpackCompatSpec = project.getConfigurations().create(\"xpackCompatSpec\");\n-        Configuration additionalCompatSpec = project.getConfigurations().create(\"additionalCompatSpec\");\n+        Configuration bwcMinorConfig = project.getConfigurations().create(\"bwcMinor\");\n+        Dependency bwcMinor = project.getDependencies().project(Map.of(\"path\", \":distribution:bwc:minor\", \"configuration\", \"checkout\"));\n+\n         Provider<CopyRestApiTask> copyCompatYamlSpecTask = project.getTasks()\n             .register(\"copyRestApiCompatSpecsTask\", CopyRestApiTask.class, task -> {\n+                project.getDependencies().add(bwcMinorConfig.getName(), bwcMinor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNDc0Mg=="}, "originalCommit": {"oid": "0df3e61688cb5842d23ac1a65df8ddacba220ee4"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2a508ece1b306b1d25c228c093e852b74660eaa", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/b2a508ece1b306b1d25c228c093e852b74660eaa", "committedDate": "2020-10-14T18:29:24Z", "message": "dependency location, and constant for paths"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23946713acba68e06f2b16e9f1dc4291e5d8b821", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/23946713acba68e06f2b16e9f1dc4291e5d8b821", "committedDate": "2020-10-14T19:21:30Z", "message": "use projectLayout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd15c83e96761f22544a98e43aab6e8bdd14d54f", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/dd15c83e96761f22544a98e43aab6e8bdd14d54f", "committedDate": "2020-10-15T13:39:42Z", "message": "spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODYyMDgx", "url": "https://github.com/elastic/elasticsearch/pull/63629#pullrequestreview-509862081", "createdAt": "2020-10-15T22:51:49Z", "commit": {"oid": "dd15c83e96761f22544a98e43aab6e8bdd14d54f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c682c1cbcc75355a85f03a06db3862feb72133e2", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/c682c1cbcc75355a85f03a06db3862feb72133e2", "committedDate": "2020-10-20T17:02:49Z", "message": "Merge branch 'master' into adopt_bwc_artifact"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4129, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}