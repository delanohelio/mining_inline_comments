{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODIwNzE1", "number": 53314, "title": "Remove the listener thread pool", "bodyText": "This commit completes the work to remove the listener thread pool, having removed all uses of it in the server codebase, and deprecated it in 7.x. With this commit, we also remove the infrastructgure to deprecate a fixed thread pool, which was added as part of this work, since it is easy to bring back if needed.\nCloses #53049", "createdAt": "2020-03-09T21:11:44Z", "url": "https://github.com/elastic/elasticsearch/pull/53314", "merged": true, "mergeCommit": {"oid": "db974cfd0c15535492ebddff0df50cdf37a3cd9b"}, "closed": true, "closedAt": "2020-03-09T22:45:50Z", "author": {"login": "jasontedor"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMEhqrAH2gAyMzg1ODIwNzE1OjZhNDhkY2ExOWY4ZTQ1MDBmMjNlMTVkOGJkMDE3MTE3ZmFjYzg3MTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMFNEBAFqTM3MTU1NjY1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6a48dca19f8e4500f23e15d8bd017117facc8711", "author": {"user": {"login": "jasontedor", "name": "Jason Tedor"}}, "url": "https://github.com/elastic/elasticsearch/commit/6a48dca19f8e4500f23e15d8bd017117facc8711", "committedDate": "2020-03-09T21:09:34Z", "message": "Remove the listener thread pool\n\nThis commit completes the work to remove the listener thread pool,\nhaving removed all uses of it in the server codebase, and deprecated it\nin 7.x. With this commit, we also remove the infrastructgure to\ndeprecate a fixed thread pool, which was added as part of this work,\nsince it is easy to bring back if needed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTU2NjU4", "url": "https://github.com/elastic/elasticsearch/pull/53314#pullrequestreview-371556658", "createdAt": "2020-03-09T21:56:40Z", "commit": {"oid": "6a48dca19f8e4500f23e15d8bd017117facc8711"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1Njo0MVrOFz6wKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1Njo0MVrOFz6wKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4NDI5Ng==", "bodyText": "NIT: is the indent change intended here?", "url": "https://github.com/elastic/elasticsearch/pull/53314#discussion_r389984296", "createdAt": "2020-03-09T21:56:41Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/threadpool/FixedExecutorBuilder.java", "diffHunk": "@@ -87,45 +66,16 @@\n      */\n     public FixedExecutorBuilder(final Settings settings, final String name, final int size, final int queueSize, final String prefix,\n                                 final boolean trackEWMA) {\n-        this(settings, name, size, queueSize, prefix, trackEWMA, false);\n-    }\n-\n-    /**\n-     * Construct a fixed executor builder.\n-     *\n-     * @param settings   the node-level settings\n-     * @param name       the name of the executor\n-     * @param size       the fixed number of threads\n-     * @param queueSize  the size of the backing queue, -1 for unbounded\n-     * @param prefix     the prefix for the settings keys\n-     * @param trackEWMA  whether to track the exponentially weighted moving average of the task execution time\n-     * @param deprecated whether or not the thread pool is deprecated\n-     */\n-    public FixedExecutorBuilder(\n-        final Settings settings,\n-        final String name,\n-        final int size,\n-        final int queueSize,\n-        final String prefix,\n-        final boolean trackEWMA,\n-        final boolean deprecated\n-    ) {\n         super(name);\n         final String sizeKey = settingsKey(prefix, \"size\");\n-        final Setting.Property[] properties;\n-        if (deprecated) {\n-            properties = new Setting.Property[]{Setting.Property.NodeScope, Setting.Property.Deprecated};\n-        } else {\n-            properties = new Setting.Property[]{Setting.Property.NodeScope};\n-        }\n         this.sizeSetting =\n-            new Setting<>(\n-                sizeKey,\n-                s -> Integer.toString(size),\n-                s -> Setting.parseInt(s, 1, applyHardSizeLimit(settings, name), sizeKey),\n-                properties);\n+                new Setting<>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a48dca19f8e4500f23e15d8bd017117facc8711"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1671, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}