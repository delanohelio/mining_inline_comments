{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3OTc0Njc0", "number": 65538, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDoyMDoyOVrOE9kd6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDoyMDoyOVrOE9kd6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTk2MDczOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/CacheFile.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDoyMDoyOVrOH6U48w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDoyMDoyOVrOH6U48w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkyMTcxNQ==", "bodyText": "I expect this to also be useful later when indexing information about the cache file (snapshot, index id etc)", "url": "https://github.com/elastic/elasticsearch/pull/65538#discussion_r530921715", "createdAt": "2020-11-26T10:20:29Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/CacheFile.java", "diffHunk": "@@ -123,14 +123,26 @@ protected void closeInternal() {\n     @Nullable\n     private volatile FileChannelReference channelRef;\n \n-    public CacheFile(String description, long length, Path file, Runnable onNeedFSync) {\n-        this.tracker = new SparseFileTracker(file.toString(), length);\n-        this.description = Objects.requireNonNull(description);\n+    public CacheFile(CacheKey cacheKey, long length, Path file, Runnable onNeedFSync) {\n+        this(cacheKey, new SparseFileTracker(file.toString(), length), file, onNeedFSync);\n+    }\n+\n+    public CacheFile(CacheKey cacheKey, long length, Path file, SortedSet<Tuple<Long, Long>> ranges, Runnable onNeedFSync) {\n+        this(cacheKey, new SparseFileTracker(file.toString(), length, ranges), file, onNeedFSync);\n+    }\n+\n+    private CacheFile(CacheKey cacheKey, SparseFileTracker tracker, Path file, Runnable onNeedFSync) {\n+        this.cacheKey = Objects.requireNonNull(cacheKey);\n+        this.tracker = Objects.requireNonNull(tracker);\n         this.file = Objects.requireNonNull(file);\n         this.needsFsyncRunnable = Objects.requireNonNull(onNeedFSync);\n         assert invariant();\n     }\n \n+    public CacheKey getCacheKey() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dff075ec6cbdb5e05190208e6be6d4aaa946553"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1951, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}