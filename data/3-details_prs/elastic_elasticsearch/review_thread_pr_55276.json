{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MTMzMTUw", "number": 55276, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo1ODoxNFrODyYkAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwODo1MDowOVrOD0IKUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTU3ODI3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/discovery/SnapshotDisruptionIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo1ODoxNFrOGGZJGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo1ODoxNFrOGGZJGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NjU3MA==", "bodyText": "The concrete situation that this test was covering is technically gone with this change, but I think it's reasonable to keep testing the very similar situation of master fail-over during the repository side of the finalization here now.", "url": "https://github.com/elastic/elasticsearch/pull/55276#discussion_r409356570", "createdAt": "2020-04-16T07:58:14Z", "author": {"login": "original-brownbear"}, "path": "server/src/test/java/org/elasticsearch/discovery/SnapshotDisruptionIT.java", "diffHunk": "@@ -189,8 +189,7 @@ public void clusterChanged(ClusterChangedEvent event) {\n                         final RepositoriesMetadata repoMeta =\n                             event.state().metadata().custom(RepositoriesMetadata.TYPE);\n                         final RepositoryMetadata metadata = repoMeta.repository(\"test-repo\");\n-                        if (metadata.generation() == metadata.pendingGeneration()\n-                            && metadata.generation() > snapshotEntry.repositoryStateId()) {\n+                        if (metadata.pendingGeneration() > snapshotEntry.repositoryStateId()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c1cbb84d8b0fad70599a09630855cd9e8e20f61"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTg2MjU3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwODo1MDowOVrOGI6VkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo1NjoxOFrOGI_jNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk5NzU4NA==", "bodyText": "It's not a filter, rather a transformation function. Perhaps adapt naming?", "url": "https://github.com/elastic/elasticsearch/pull/55276#discussion_r411997584", "createdAt": "2020-04-21T08:50:09Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1301,10 +1304,11 @@ public boolean isReadOnly() {\n      * @param repositoryData RepositoryData to write\n      * @param expectedGen    expected repository generation at the start of the operation\n      * @param writeShardGens whether to write {@link ShardGenerations} to the new {@link RepositoryData} blob\n+     * @param stateFilter    filter for the last cluster state update executed by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c1cbb84d8b0fad70599a09630855cd9e8e20f61"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA4Mjk5OQ==", "bodyText": "Renamed :)", "url": "https://github.com/elastic/elasticsearch/pull/55276#discussion_r412082999", "createdAt": "2020-04-21T10:56:18Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1301,10 +1304,11 @@ public boolean isReadOnly() {\n      * @param repositoryData RepositoryData to write\n      * @param expectedGen    expected repository generation at the start of the operation\n      * @param writeShardGens whether to write {@link ShardGenerations} to the new {@link RepositoryData} blob\n+     * @param stateFilter    filter for the last cluster state update executed by this method", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk5NzU4NA=="}, "originalCommit": {"oid": "6c1cbb84d8b0fad70599a09630855cd9e8e20f61"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1079, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}