{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1OTc5ODkx", "number": 66174, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo1NTowM1rOFE8kUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo1NTowM1rOFE8kUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzMwOTYyOnYy", "diffSide": "RIGHT", "path": "x-pack/qa/rolling-upgrade/src/test/java/org/elasticsearch/upgrades/MlJobSnapshotUpgradeIT.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo1NTowM1rOIFNELg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzo1NDo0OVrOIFRhjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyNzg1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(snapshot.getMinVersion(), equalTo(Version.V_7_11_0));\n          \n          \n            \n                    assertTrue(snapshot.getMinVersion.after(UPGRADE_FROM_VERSION));\n          \n      \n    \n    \n  \n\nI'm not sure how this works, is 7.11 the min version for the rest of 7.x?", "url": "https://github.com/elastic/elasticsearch/pull/66174#discussion_r542327854", "createdAt": "2020-12-14T11:55:03Z", "author": {"login": "davidkyle"}, "path": "x-pack/qa/rolling-upgrade/src/test/java/org/elasticsearch/upgrades/MlJobSnapshotUpgradeIT.java", "diffHunk": "@@ -137,8 +136,8 @@ private void testSnapshotUpgrade() throws Exception {\n         assertThat(snapshots, hasSize(1));\n         snapshot = snapshots.get(0);\n         assertThat(snapshot.getLatestRecordTimeStamp(), equalTo(snapshots.get(0).getLatestRecordTimeStamp()));\n-        // min version in upgraded 7.series is 7.9.0\n-        assertThat(snapshot.getMinVersion(), equalTo(Version.V_7_9_0));\n+        // min version in upgraded 7.series is 7.11.0\n+        assertThat(snapshot.getMinVersion(), equalTo(Version.V_7_11_0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd92684be8e4aca341eb764f299d5612ef100d6a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0ODI4OA==", "bodyText": "Until the next change to the C++ code that introduces new sections of state that the older versions won't understand.", "url": "https://github.com/elastic/elasticsearch/pull/66174#discussion_r542348288", "createdAt": "2020-12-14T12:33:15Z", "author": {"login": "droberts195"}, "path": "x-pack/qa/rolling-upgrade/src/test/java/org/elasticsearch/upgrades/MlJobSnapshotUpgradeIT.java", "diffHunk": "@@ -137,8 +136,8 @@ private void testSnapshotUpgrade() throws Exception {\n         assertThat(snapshots, hasSize(1));\n         snapshot = snapshots.get(0);\n         assertThat(snapshot.getLatestRecordTimeStamp(), equalTo(snapshots.get(0).getLatestRecordTimeStamp()));\n-        // min version in upgraded 7.series is 7.9.0\n-        assertThat(snapshot.getMinVersion(), equalTo(Version.V_7_9_0));\n+        // min version in upgraded 7.series is 7.11.0\n+        assertThat(snapshot.getMinVersion(), equalTo(Version.V_7_11_0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyNzg1NA=="}, "originalCommit": {"oid": "cd92684be8e4aca341eb764f299d5612ef100d6a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM4NzUzMQ==", "bodyText": "assertTrue(snapshot.getMinVersion.after(UPGRADE_FROM_VERSION));\n\n\n@davidkyle this won't work. Once we do a bwc test from 7.11->7.12 this assertion would fail :/", "url": "https://github.com/elastic/elasticsearch/pull/66174#discussion_r542387531", "createdAt": "2020-12-14T13:35:58Z", "author": {"login": "benwtrent"}, "path": "x-pack/qa/rolling-upgrade/src/test/java/org/elasticsearch/upgrades/MlJobSnapshotUpgradeIT.java", "diffHunk": "@@ -137,8 +136,8 @@ private void testSnapshotUpgrade() throws Exception {\n         assertThat(snapshots, hasSize(1));\n         snapshot = snapshots.get(0);\n         assertThat(snapshot.getLatestRecordTimeStamp(), equalTo(snapshots.get(0).getLatestRecordTimeStamp()));\n-        // min version in upgraded 7.series is 7.9.0\n-        assertThat(snapshot.getMinVersion(), equalTo(Version.V_7_9_0));\n+        // min version in upgraded 7.series is 7.11.0\n+        assertThat(snapshot.getMinVersion(), equalTo(Version.V_7_11_0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyNzg1NA=="}, "originalCommit": {"oid": "cd92684be8e4aca341eb764f299d5612ef100d6a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM5NDcyOA==", "bodyText": "@davidkyle @droberts195 what do you think of making it assertTrue(snapshot.getMinVersion.onOrAfter(Version.V_7_11_0)); ?\nThis way we at least protect ourselves for the next time that c++ changes.", "url": "https://github.com/elastic/elasticsearch/pull/66174#discussion_r542394728", "createdAt": "2020-12-14T13:46:08Z", "author": {"login": "benwtrent"}, "path": "x-pack/qa/rolling-upgrade/src/test/java/org/elasticsearch/upgrades/MlJobSnapshotUpgradeIT.java", "diffHunk": "@@ -137,8 +136,8 @@ private void testSnapshotUpgrade() throws Exception {\n         assertThat(snapshots, hasSize(1));\n         snapshot = snapshots.get(0);\n         assertThat(snapshot.getLatestRecordTimeStamp(), equalTo(snapshots.get(0).getLatestRecordTimeStamp()));\n-        // min version in upgraded 7.series is 7.9.0\n-        assertThat(snapshot.getMinVersion(), equalTo(Version.V_7_9_0));\n+        // min version in upgraded 7.series is 7.11.0\n+        assertThat(snapshot.getMinVersion(), equalTo(Version.V_7_11_0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyNzg1NA=="}, "originalCommit": {"oid": "cd92684be8e4aca341eb764f299d5612ef100d6a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwMDkwOA==", "bodyText": "I think the changes are infrequent enough to keep this more precise assertion.\nCan you extract a new constant with a more meaningful name instead of using V_7_11_0 please. Something like\nfinal Version CPP_COMPATIBILTIY_VERSION = Version.V_7_11_0", "url": "https://github.com/elastic/elasticsearch/pull/66174#discussion_r542400908", "createdAt": "2020-12-14T13:54:49Z", "author": {"login": "davidkyle"}, "path": "x-pack/qa/rolling-upgrade/src/test/java/org/elasticsearch/upgrades/MlJobSnapshotUpgradeIT.java", "diffHunk": "@@ -137,8 +136,8 @@ private void testSnapshotUpgrade() throws Exception {\n         assertThat(snapshots, hasSize(1));\n         snapshot = snapshots.get(0);\n         assertThat(snapshot.getLatestRecordTimeStamp(), equalTo(snapshots.get(0).getLatestRecordTimeStamp()));\n-        // min version in upgraded 7.series is 7.9.0\n-        assertThat(snapshot.getMinVersion(), equalTo(Version.V_7_9_0));\n+        // min version in upgraded 7.series is 7.11.0\n+        assertThat(snapshot.getMinVersion(), equalTo(Version.V_7_11_0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyNzg1NA=="}, "originalCommit": {"oid": "cd92684be8e4aca341eb764f299d5612ef100d6a"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4744, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}