{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNTA2MzQw", "number": 60555, "reviewThreads": {"totalCount": 54, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzo1MTowMlrOEVncBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowNzozMFrOEZFfow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTAxNzAyOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/auto-follow.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzo1MTowMlrOG8eanQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzo1MTowMlrOG8eanQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2NjA3Nw==", "bodyText": "I think you could pare this down even more, and shift the emphasis more to the goal than the feature. Something like:\nTo replicate time series indices, you configure an auto-follow pattern so each new index in the series is replicated automatically. Whenever the name of a new index on the remote cluster matches the auto-follow pattern, a corresponding follower index is added to the local cluster.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466066077", "createdAt": "2020-08-05T23:51:02Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/auto-follow.asciidoc", "diffHunk": "@@ -1,32 +1,96 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-auto-follow]]\n-=== Automatically following indices\n+=== Manage auto-follow patterns\n \n In time series use cases where you want to follow new indices that are", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTA1NDM5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxMTowOVrOG8ewuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxMTowOVrOG8ewuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3MTczNg==", "bodyText": "My preference would be to use Set up, rather than Configure. That's more consistent with how @dedemorton has reorged the Beats docs, and leaves us room to use \"Configure\" in the context of overall ES configuration/settings.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466071736", "createdAt": "2020-08-06T00:11:09Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -1,47 +1,50 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-getting-started]]\n-=== Getting started with {ccr}\n+=== Configure {ccr}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTA1OTkzOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxNDozOFrOG8e0Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxNDozOFrOG8e0Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3MjYxOA==", "bodyText": "I'd streamline this a bit more and emphasize the goal over the feature. Something like:\nYou can manually create follower indices to replicate specific indices on a remote cluster, or configure auto-follow patterns to automatically create follower indices for new time series.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466072618", "createdAt": "2020-08-06T00:14:38Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -1,47 +1,50 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-getting-started]]\n-=== Getting started with {ccr}\n+=== Configure {ccr}\n+You configure {ccr} by manually creating specific follower indices or by automatically creating follower indices from auto-follow patterns. When you initiate replication, the follower index is created on the local cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTA2NDIxOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxNjo1M1rOG8e2xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxNjo1M1rOG8e2xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3MzI4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Complete the following tasks to configure {ccr}:\n          \n          \n            \n            To set up {ccr}:", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466073284", "createdAt": "2020-08-06T00:16:53Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -1,47 +1,50 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-getting-started]]\n-=== Getting started with {ccr}\n+=== Configure {ccr}\n+You configure {ccr} by manually creating specific follower indices or by automatically creating follower indices from auto-follow patterns. When you initiate replication, the follower index is created on the local cluster.\n+After the follower index is created, the <<ccr-remote-recovery, remote recovery>>\n+process copies all of the Lucene segment files from the remote cluster to the\n+local cluster.\n \n-This getting-started guide for {ccr} shows you how to:\n+Complete the following tasks to configure {ccr}:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTA2NTIzOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxNzoyNlrOG8e3ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxNzoyNlrOG8e3ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3MzQ0NQ==", "bodyText": "This sort of implies that there's something special about a leader index. This is really more, identify the index (or series of indices) you want to replicate on the remote cluster.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466073445", "createdAt": "2020-08-06T00:17:26Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -1,47 +1,50 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-getting-started]]\n-=== Getting started with {ccr}\n+=== Configure {ccr}\n+You configure {ccr} by manually creating specific follower indices or by automatically creating follower indices from auto-follow patterns. When you initiate replication, the follower index is created on the local cluster.\n+After the follower index is created, the <<ccr-remote-recovery, remote recovery>>\n+process copies all of the Lucene segment files from the remote cluster to the\n+local cluster.\n \n-This getting-started guide for {ccr} shows you how to:\n+Complete the following tasks to configure {ccr}:\n \n-* <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote\n-  cluster>>\n-* <<ccr-getting-started-leader-index,Create a leader index>> in a remote cluster\n-* <<ccr-getting-started-follower-index,Create a follower index>> that replicates\n-  a leader index\n-* <<ccr-getting-started-auto-follow,Automatically create follower indices>>\n+. <<ccr-getting-started-security,Configure security roles>>\n+. <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote cluster>>\n+. <<ccr-getting-started-leader-index,Create a leader index in a remote cluster>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTA2NjI0OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxODowNFrOG8e4DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxODowNFrOG8e4DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3MzYxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            . <<ccr-enable-soft-deletes,Enable soft deletes on leader indices>>\n          \n          \n            \n            . <<ccr-enable-soft-deletes,Enable soft deletes on the leader index>>", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466073612", "createdAt": "2020-08-06T00:18:04Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -1,47 +1,50 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-getting-started]]\n-=== Getting started with {ccr}\n+=== Configure {ccr}\n+You configure {ccr} by manually creating specific follower indices or by automatically creating follower indices from auto-follow patterns. When you initiate replication, the follower index is created on the local cluster.\n+After the follower index is created, the <<ccr-remote-recovery, remote recovery>>\n+process copies all of the Lucene segment files from the remote cluster to the\n+local cluster.\n \n-This getting-started guide for {ccr} shows you how to:\n+Complete the following tasks to configure {ccr}:\n \n-* <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote\n-  cluster>>\n-* <<ccr-getting-started-leader-index,Create a leader index>> in a remote cluster\n-* <<ccr-getting-started-follower-index,Create a follower index>> that replicates\n-  a leader index\n-* <<ccr-getting-started-auto-follow,Automatically create follower indices>>\n+. <<ccr-getting-started-security,Configure security roles>>\n+. <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote cluster>>\n+. <<ccr-getting-started-leader-index,Create a leader index in a remote cluster>>\n+. <<ccr-enable-soft-deletes,Enable soft deletes on leader indices>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTA2NzEwOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxODozOFrOG8e4qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxODozOFrOG8e4qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3Mzc2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            . <<ccr-getting-started-follower-index,Create a follower index that replicates a leader index>>\n          \n          \n            \n            . <<ccr-getting-started-follower-index,Create a follower index to replicate the leader index>>", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466073768", "createdAt": "2020-08-06T00:18:38Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -1,47 +1,50 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-getting-started]]\n-=== Getting started with {ccr}\n+=== Configure {ccr}\n+You configure {ccr} by manually creating specific follower indices or by automatically creating follower indices from auto-follow patterns. When you initiate replication, the follower index is created on the local cluster.\n+After the follower index is created, the <<ccr-remote-recovery, remote recovery>>\n+process copies all of the Lucene segment files from the remote cluster to the\n+local cluster.\n \n-This getting-started guide for {ccr} shows you how to:\n+Complete the following tasks to configure {ccr}:\n \n-* <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote\n-  cluster>>\n-* <<ccr-getting-started-leader-index,Create a leader index>> in a remote cluster\n-* <<ccr-getting-started-follower-index,Create a follower index>> that replicates\n-  a leader index\n-* <<ccr-getting-started-auto-follow,Automatically create follower indices>>\n+. <<ccr-getting-started-security,Configure security roles>>\n+. <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote cluster>>\n+. <<ccr-getting-started-leader-index,Create a leader index in a remote cluster>>\n+. <<ccr-enable-soft-deletes,Enable soft deletes on leader indices>>\n+. <<ccr-getting-started-follower-index,Create a follower index that replicates a leader index>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTA4NjcxOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoyODo1NFrOG8fEOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjozMTo0NlrOG87MmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3NjcyOA==", "bodyText": "This doesn't quite fit as a step in this sequence, it's more an alternative to the previous step. Maybe preface them with something like, \"To manually create a follower index...\" and \"To automatically follow time series indices, create an auto-follow pattern.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466076728", "createdAt": "2020-08-06T00:28:54Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -1,47 +1,50 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-getting-started]]\n-=== Getting started with {ccr}\n+=== Configure {ccr}\n+You configure {ccr} by manually creating specific follower indices or by automatically creating follower indices from auto-follow patterns. When you initiate replication, the follower index is created on the local cluster.\n+After the follower index is created, the <<ccr-remote-recovery, remote recovery>>\n+process copies all of the Lucene segment files from the remote cluster to the\n+local cluster.\n \n-This getting-started guide for {ccr} shows you how to:\n+Complete the following tasks to configure {ccr}:\n \n-* <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote\n-  cluster>>\n-* <<ccr-getting-started-leader-index,Create a leader index>> in a remote cluster\n-* <<ccr-getting-started-follower-index,Create a follower index>> that replicates\n-  a leader index\n-* <<ccr-getting-started-auto-follow,Automatically create follower indices>>\n+. <<ccr-getting-started-security,Configure security roles>>\n+. <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote cluster>>\n+. <<ccr-getting-started-leader-index,Create a leader index in a remote cluster>>\n+. <<ccr-enable-soft-deletes,Enable soft deletes on leader indices>>\n+. <<ccr-getting-started-follower-index,Create a follower index that replicates a leader index>>\n+. <<ccr-getting-started-auto-follow,Automatically create follower indices>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUzNzYyNA==", "bodyText": "I think that providing the option makes sense:\n. Manually create a follower index or create an auto-follow pattern:\n\nTo replicate the leader index, <<ccr-getting-started-follower-index,manually create a follower index>>\nTo automatically follow time series indices, <<ccr-getting-started-auto-follow,create an auto-follow pattern>>", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466537624", "createdAt": "2020-08-06T16:31:46Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -1,47 +1,50 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-getting-started]]\n-=== Getting started with {ccr}\n+=== Configure {ccr}\n+You configure {ccr} by manually creating specific follower indices or by automatically creating follower indices from auto-follow patterns. When you initiate replication, the follower index is created on the local cluster.\n+After the follower index is created, the <<ccr-remote-recovery, remote recovery>>\n+process copies all of the Lucene segment files from the remote cluster to the\n+local cluster.\n \n-This getting-started guide for {ccr} shows you how to:\n+Complete the following tasks to configure {ccr}:\n \n-* <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote\n-  cluster>>\n-* <<ccr-getting-started-leader-index,Create a leader index>> in a remote cluster\n-* <<ccr-getting-started-follower-index,Create a follower index>> that replicates\n-  a leader index\n-* <<ccr-getting-started-auto-follow,Automatically create follower indices>>\n+. <<ccr-getting-started-security,Configure security roles>>\n+. <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote cluster>>\n+. <<ccr-getting-started-leader-index,Create a leader index in a remote cluster>>\n+. <<ccr-enable-soft-deletes,Enable soft deletes on leader indices>>\n+. <<ccr-getting-started-follower-index,Create a follower index that replicates a leader index>>\n+. <<ccr-getting-started-auto-follow,Automatically create follower indices>>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3NjcyOA=="}, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTEyODQ5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo1MTo1MVrOG8fb9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo1MTo1MVrOG8fb9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4MjgwNw==", "bodyText": "We don't do this for other X-Pack features--I think I'd remove this section. It seems like saying you need to install ES is unnecessary to use an ES feature, and I think we want to be consistent about how/where we're making license references.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466082807", "createdAt": "2020-08-06T00:51:51Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -1,47 +1,50 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-getting-started]]\n-=== Getting started with {ccr}\n+=== Configure {ccr}\n+You configure {ccr} by manually creating specific follower indices or by automatically creating follower indices from auto-follow patterns. When you initiate replication, the follower index is created on the local cluster.\n+After the follower index is created, the <<ccr-remote-recovery, remote recovery>>\n+process copies all of the Lucene segment files from the remote cluster to the\n+local cluster.\n \n-This getting-started guide for {ccr} shows you how to:\n+Complete the following tasks to configure {ccr}:\n \n-* <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote\n-  cluster>>\n-* <<ccr-getting-started-leader-index,Create a leader index>> in a remote cluster\n-* <<ccr-getting-started-follower-index,Create a follower index>> that replicates\n-  a leader index\n-* <<ccr-getting-started-auto-follow,Automatically create follower indices>>\n+. <<ccr-getting-started-security,Configure security roles>>\n+. <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote cluster>>\n+. <<ccr-getting-started-leader-index,Create a leader index in a remote cluster>>\n+. <<ccr-enable-soft-deletes,Enable soft deletes on leader indices>>\n+. <<ccr-getting-started-follower-index,Create a follower index that replicates a leader index>>\n+. <<ccr-getting-started-auto-follow,Automatically create follower indices>>\n \n \n [[ccr-getting-started-before-you-begin]]\n ==== Before you begin", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTEzMzI0OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo1NDo0N1rOG8fexw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo1NDo0N1rOG8fexw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4MzUyNw==", "bodyText": "This feels more like what we've treated as \"prerequisites\" in the API ref. I'd replace this with something more like that, and avoid any implication that using the elastic super user in production is something you'd want to do.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466083527", "createdAt": "2020-08-06T00:54:47Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -1,47 +1,50 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-getting-started]]\n-=== Getting started with {ccr}\n+=== Configure {ccr}\n+You configure {ccr} by manually creating specific follower indices or by automatically creating follower indices from auto-follow patterns. When you initiate replication, the follower index is created on the local cluster.\n+After the follower index is created, the <<ccr-remote-recovery, remote recovery>>\n+process copies all of the Lucene segment files from the remote cluster to the\n+local cluster.\n \n-This getting-started guide for {ccr} shows you how to:\n+Complete the following tasks to configure {ccr}:\n \n-* <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote\n-  cluster>>\n-* <<ccr-getting-started-leader-index,Create a leader index>> in a remote cluster\n-* <<ccr-getting-started-follower-index,Create a follower index>> that replicates\n-  a leader index\n-* <<ccr-getting-started-auto-follow,Automatically create follower indices>>\n+. <<ccr-getting-started-security,Configure security roles>>\n+. <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote cluster>>\n+. <<ccr-getting-started-leader-index,Create a leader index in a remote cluster>>\n+. <<ccr-enable-soft-deletes,Enable soft deletes on leader indices>>\n+. <<ccr-getting-started-follower-index,Create a follower index that replicates a leader index>>\n+. <<ccr-getting-started-auto-follow,Automatically create follower indices>>\n \n \n [[ccr-getting-started-before-you-begin]]\n ==== Before you begin\n . {stack-gs}/get-started-elastic-stack.html#install-elasticsearch[Install {es}]\n   on your local and remote clusters.\n \n-. Obtain a license that includes the {ccr} features. See\n-  https://www.elastic.co/subscriptions[subscriptions] and\n-  {kibana-ref}/managing-licenses.html[License management].\n+. Obtain a   https://www.elastic.co/subscriptions[license] that includes the\n+{ccr} features. You can enable {ccr} features in {kib} through\n+{kibana-ref}/managing-licenses.html[License management].\n \n-. If the Elastic {security-features} are enabled in your local and remote\n-  clusters, you need a user that has appropriate authority to perform the steps\n-  in this tutorial.\n-+\n---\n [[ccr-getting-started-security]]\n+==== Configure security roles", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTEzNjgxOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo1Njo0N1rOG8fg5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo1Njo0N1rOG8fg5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NDA2OQ==", "bodyText": "I generally avoid this sort of meta info & reference things as examples if need be.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466084069", "createdAt": "2020-08-06T00:56:47Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -76,19 +79,36 @@ ccr_user:\n --------------------------------------------------\n \n If you are managing\n-<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> via the\n-cluster update settings API, you will also need a user with the `all` cluster\n-privilege.\n---\n-\n+<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> using\n+the cluster update settings API, you will also need a user with the `all`\n+cluster privilege.\n \n [[ccr-getting-started-remote-cluster]]\n-==== Connecting to a remote cluster\n+==== Connect to a remote cluster\n+\n+The {ccr} features require that you connect your local cluster to a\n+<<modules-remote-clusters,remote cluster>>. In this tutorial, you connect your\n+local cluster to a remote cluster with the cluster alias `leader`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTE0MjQzOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo1OTo0OVrOG8fkEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo1OTo0OVrOG8fkEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NDg4Mw==", "bodyText": "Again, less emphasis on the features, more emphasis on what you need to do.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466084883", "createdAt": "2020-08-06T00:59:49Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -76,19 +79,36 @@ ccr_user:\n --------------------------------------------------\n \n If you are managing\n-<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> via the\n-cluster update settings API, you will also need a user with the `all` cluster\n-privilege.\n---\n-\n+<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> using\n+the cluster update settings API, you will also need a user with the `all`\n+cluster privilege.\n \n [[ccr-getting-started-remote-cluster]]\n-==== Connecting to a remote cluster\n+==== Connect to a remote cluster\n+\n+The {ccr} features require that you connect your local cluster to a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTE3NjA4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToxOToxOFrOG8f31Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToxOToxOFrOG8f31Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4OTk0MQ==", "bodyText": "We try to minimize \"click by click\" instructions for using Kibana. I think we can safely assume that folks know they need to open a browser to access Kibana--the important thing is that you're doing this config on the local cluster.\nWhere I landed with the ILM docs was focusing on getting folks to the right place in Kibana, showing them what that looks like, and telling them what they need to specify.\nThe UI has changed in 7.9, so I think you could just say something like,\n\"To configure a remote cluster through Kibana, go to Management and click Remote Clusters. On the Add remote cluster page, specify...\"", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466089941", "createdAt": "2020-08-06T01:19:18Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -76,19 +79,36 @@ ccr_user:\n --------------------------------------------------\n \n If you are managing\n-<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> via the\n-cluster update settings API, you will also need a user with the `all` cluster\n-privilege.\n---\n-\n+<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> using\n+the cluster update settings API, you will also need a user with the `all`\n+cluster privilege.\n \n [[ccr-getting-started-remote-cluster]]\n-==== Connecting to a remote cluster\n+==== Connect to a remote cluster\n+\n+The {ccr} features require that you connect your local cluster to a\n+<<modules-remote-clusters,remote cluster>>. In this tutorial, you connect your\n+local cluster to a remote cluster with the cluster alias `leader`.\n+\n+Add a {kibana-ref}/working-remote-clusters.html[remote cluster] in {kib}:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTE3ODQzOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyMDoxNFrOG8f5Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyMDoxNFrOG8f5Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA5MDI1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            .Use the API\n          \n          \n            \n            .API example", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466090254", "createdAt": "2020-08-06T01:20:14Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -76,19 +79,36 @@ ccr_user:\n --------------------------------------------------\n \n If you are managing\n-<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> via the\n-cluster update settings API, you will also need a user with the `all` cluster\n-privilege.\n---\n-\n+<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> using\n+the cluster update settings API, you will also need a user with the `all`\n+cluster privilege.\n \n [[ccr-getting-started-remote-cluster]]\n-==== Connecting to a remote cluster\n+==== Connect to a remote cluster\n+\n+The {ccr} features require that you connect your local cluster to a\n+<<modules-remote-clusters,remote cluster>>. In this tutorial, you connect your\n+local cluster to a remote cluster with the cluster alias `leader`.\n+\n+Add a {kibana-ref}/working-remote-clusters.html[remote cluster] in {kib}:\n \n-The {ccr} features require that you\n-{ref}/modules-remote-clusters.html[connect your local cluster to a remote\n-cluster]. In this tutorial, we will connect our local cluster to a remote\n-cluster with the cluster alias `leader`.\n+. Open a browser to access {kib} on your _local_ cluster.\n+. From the {kib} menu, select *Management -> Stack Management*.\n+. Under *Data*, select *Remote Clusters* to access the Remote Clusters\n+page.\n+. Choose *Add a remote cluster*.\n+. Enter `leader` as the name for the remote cluster.\n+. Enter an IP address or host name, followed by the transport port of the\n+remote cluster.\n+. Click *Save*.\n+\n+[role=\"screenshot\"]\n+image::images/remote-clusters.png[\"The Remote Clusters page in {kib}\"]\n+\n+[%collapsible]\n+.Use the API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTE4NDg0OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyMzo0MlrOG8f8xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyMzo0MlrOG8f8xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA5MTIwNQ==", "bodyText": "Same as above--I think you can avoid the click-by-click & the UI has changed in 7.9.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466091205", "createdAt": "2020-08-06T01:23:42Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -201,20 +219,70 @@ PUT /server-metrics\n }\n --------------------------------------------------\n // TEST[continued]\n+====\n \n+[[ccr-enable-soft-deletes]]\n+==== Enable soft deletes on leader indices\n+<<ccr-leader-requirements,Soft deletes>> must be enabled for indices that you want to\n+use as leader indices. Soft deletes are enabled by default on new indices\n+created on or after {es} 7.0.0, so no further action is required if your\n+cluster is running {es} 7.0.0 or later.\n \n-[[ccr-getting-started-follower-index]]\n-==== Creating a follower index\n+include::{es-ref-dir}/ccr/index.asciidoc[tag=ccr-existing-indices-tag]\n \n-Follower indices are created with the {ref}/ccr-put-follow.html[create follower\n-API]. When you create a follower index, you must reference the\n+To enable soft deletes on indices created on versions of\n+{es} between 6.5.0 and 7.0.0, set <<ccr-index-soft-deletes,`index.soft_deletes.enabled`>> to `true`.\n+\n+[[ccr-getting-started-follower-index]]\n+==== Create a follower index\n+When you create a {kibana-ref}/managing-cross-cluster-replication.html#_create_specific_follower_indices[follower index], you\n+must reference the\n <<ccr-getting-started-remote-cluster,remote cluster>> and the\n <<ccr-getting-started-leader-index,leader index>> that you created in the remote\n-cluster.\n+cluster:\n+\n+. Open a browser to access {kib} on your _local_ cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 187}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTE4NTg2OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyNDoxM1rOG8f9Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyNDoxM1rOG8f9Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA5MTM2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            .Use the API\n          \n          \n            \n            .API example", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466091362", "createdAt": "2020-08-06T01:24:13Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -201,20 +219,70 @@ PUT /server-metrics\n }\n --------------------------------------------------\n // TEST[continued]\n+====\n \n+[[ccr-enable-soft-deletes]]\n+==== Enable soft deletes on leader indices\n+<<ccr-leader-requirements,Soft deletes>> must be enabled for indices that you want to\n+use as leader indices. Soft deletes are enabled by default on new indices\n+created on or after {es} 7.0.0, so no further action is required if your\n+cluster is running {es} 7.0.0 or later.\n \n-[[ccr-getting-started-follower-index]]\n-==== Creating a follower index\n+include::{es-ref-dir}/ccr/index.asciidoc[tag=ccr-existing-indices-tag]\n \n-Follower indices are created with the {ref}/ccr-put-follow.html[create follower\n-API]. When you create a follower index, you must reference the\n+To enable soft deletes on indices created on versions of\n+{es} between 6.5.0 and 7.0.0, set <<ccr-index-soft-deletes,`index.soft_deletes.enabled`>> to `true`.\n+\n+[[ccr-getting-started-follower-index]]\n+==== Create a follower index\n+When you create a {kibana-ref}/managing-cross-cluster-replication.html#_create_specific_follower_indices[follower index], you\n+must reference the\n <<ccr-getting-started-remote-cluster,remote cluster>> and the\n <<ccr-getting-started-leader-index,leader index>> that you created in the remote\n-cluster.\n+cluster:\n+\n+. Open a browser to access {kib} on your _local_ cluster.\n+. From the {kib} menu, click *Management -> Stack Management*.\n+. Under *Data*, select *Cross Cluster Replication*.\n+. Choose the *Follower indices* tab.\n+. Click *Create a follower index*.\n+  . Choose the remote cluster containing the index you want to replicate, which\n+  is `leader` if you are following the tutorial.\n+  . Enter the name of the leader index, which is `server-metrics` if you are\n+  following the tutorial.\n+  . Enter a name for your follower index, such as `server-metrics-follower`.\n+  . Click *Create* to create the follower index.\n+\n+The follower index is initialized using the\n+<<ccr-remote-recovery, remote recovery>>\n+process, and the index status changes to *Paused*. When the\n+remote recovery process is complete, the index following begins and the status\n+changes to *Active*.\n+\n+The remote recovery process transfers the existing Lucene segment files from\n+the leader to the follower.\n+When you index documents into your leader index, these\n+documents are replicated in the follower index.\n+\n+[role=\"screenshot\"]\n+image::images/ccr-follower-index.png[\"The Cross-Cluster Replication page in {kib}\"]\n+\n+[%collapsible]\n+.Use the API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 214}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTE4ODk5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyNTo1MVrOG8f_Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyNTo1MVrOG8f_Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA5MTgwMg==", "bodyText": "See previous comments re auto-follow patterns.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466091802", "createdAt": "2020-08-06T01:25:51Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -235,53 +303,66 @@ PUT /server-metrics-copy/_ccr/follow?wait_for_active_shards=1\n \n //////////////////////////\n \n-The follower index is initialized using the <<remote-recovery, remote recovery>>\n-process. The remote recovery process transfers the existing Lucene segment files\n-from the leader to the follower. When the remote recovery process is complete,\n-the index following begins.\n-\n-Now when you index documents into your leader index, you will see these\n-documents replicated in the follower index. You can\n-inspect the status of replication using the\n-{ref}/ccr-get-follow-stats.html[get follower stats API].\n-\n-Alternatively, you can {kibana-ref}/managing-cross-cluster-replication.html#_create_specific_follower_indices[manage follower indices] using {kib}:\n-\n-. From the {kib} menu, click *Management -> Stack Management*.\n-. Under *Data*, select *Cross Cluster Replication*.\n-. Choose the *Follower indices* tab.\n-\n-[role=\"screenshot\"]\n-image::images/ccr-follower-index.png[\"The Cross-Cluster Replication page in {kib}\"]\n+Use the\n+<<ccr-get-follow-stats,get follower stats API>> to inspect the status of\n+replication\n \n //////////////////////////\n \n [source,console]\n --------------------------------------------------\n-POST /server-metrics-copy/_ccr/pause_follow\n+POST /server-metrics-follower/_ccr/pause_follow\n \n-POST /server-metrics-copy/_close\n+POST /server-metrics-follower/_close\n \n-POST /server-metrics-copy/_ccr/unfollow\n+POST /server-metrics-follower/_ccr/unfollow\n --------------------------------------------------\n // TEST[continued]\n \n //////////////////////////\n-\n+====\n \n [[ccr-getting-started-auto-follow]]\n ==== Automatically create follower indices\n+The <<ccr-auto-follow,auto-follow>> feature in {ccr} is useful for time series", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 280}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTE4OTUwOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyNjowN1rOG8f_XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyNjowN1rOG8f_XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA5MTg2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            .Use the API\n          \n          \n            \n            .API example", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466091869", "createdAt": "2020-08-06T01:26:07Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -235,53 +303,66 @@ PUT /server-metrics-copy/_ccr/follow?wait_for_active_shards=1\n \n //////////////////////////\n \n-The follower index is initialized using the <<remote-recovery, remote recovery>>\n-process. The remote recovery process transfers the existing Lucene segment files\n-from the leader to the follower. When the remote recovery process is complete,\n-the index following begins.\n-\n-Now when you index documents into your leader index, you will see these\n-documents replicated in the follower index. You can\n-inspect the status of replication using the\n-{ref}/ccr-get-follow-stats.html[get follower stats API].\n-\n-Alternatively, you can {kibana-ref}/managing-cross-cluster-replication.html#_create_specific_follower_indices[manage follower indices] using {kib}:\n-\n-. From the {kib} menu, click *Management -> Stack Management*.\n-. Under *Data*, select *Cross Cluster Replication*.\n-. Choose the *Follower indices* tab.\n-\n-[role=\"screenshot\"]\n-image::images/ccr-follower-index.png[\"The Cross-Cluster Replication page in {kib}\"]\n+Use the\n+<<ccr-get-follow-stats,get follower stats API>> to inspect the status of\n+replication\n \n //////////////////////////\n \n [source,console]\n --------------------------------------------------\n-POST /server-metrics-copy/_ccr/pause_follow\n+POST /server-metrics-follower/_ccr/pause_follow\n \n-POST /server-metrics-copy/_close\n+POST /server-metrics-follower/_close\n \n-POST /server-metrics-copy/_ccr/unfollow\n+POST /server-metrics-follower/_ccr/unfollow\n --------------------------------------------------\n // TEST[continued]\n \n //////////////////////////\n-\n+====\n \n [[ccr-getting-started-auto-follow]]\n ==== Automatically create follower indices\n+The <<ccr-auto-follow,auto-follow>> feature in {ccr} is useful for time series\n+use cases where you want to follow new indices that are periodically created in\n+the remote cluster, such as daily {beats} indices.\n \n-The <<ccr-auto-follow,auto-follow>> feature in {ccr} helps for time series use\n-cases where you want to follow new indices that are periodically created in the\n-remote cluster (such as daily Beats indices). Auto-following is configured using\n-the {ref}/ccr-put-auto-follow-pattern.html[create auto-follow pattern API]. With\n-an auto-follow pattern, you reference the\n-<<ccr-getting-started-remote-cluster,remote cluster>> that you connected your\n-local cluster to. You must also specify a collection of  patterns that match the\n+With an auto-follow pattern, you reference the\n+<<ccr-getting-started-remote-cluster,remote cluster>> connected to your\n+local cluster. You must also specify a collection of patterns that match the\n indices you want to automatically follow.\n \n-For example:\n+// tag::ccr-create-auto-follow-pattern-tag[]\n+Create follower indices from an {kibana-ref}/managing-cross-cluster-replication.html#_create_follower_indices_from_an_auto_follow_pattern[auto-follow pattern]:\n+\n+. Open a browser to access {kib} on your _remote_ cluster.\n+. From the {kib} menu, click *Management -> Stack Management*.\n+. Under *Data*, select *Cross Cluster Replication*.\n+. Choose the *Auto-follow patterns* tab.\n+. Click *Create an auto-follow pattern*.\n+  . Enter a name for the auto-follow pattern. For this tutorial, enter `beats`\n+  as the name.\n+  . Choose the remote cluster containing the index you want to replicate, which\n+  is `leader` if you are following the tutorial.\n+  . Enter one or more index patterns that identify the indices you want to\n+  replicate from the remote cluster. For this tutorial, type\n+  `metricbeat-*,packetbeat-*` as the index pattern and then press *Enter* or\n+  *Return* on your keyboard.\n+  +\n+  As new indices matching these patterns are\n+  created, they are replicated to follower indices on the local cluster.\n+  . Enter *copy-* in the Prefix field, and then click *Create*.\n+\n+[role=\"screenshot\"]\n+image::images/auto-follow-patterns.png[\"The Auto-follow patterns page in {kib}\"]\n+// end::ccr-create-auto-follow-pattern-tag[]\n+\n+[%collapsible]\n+.Use the API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 323}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTIyNDIyOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/index.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMTo0NDo1M1rOG8gTyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMTo0NDo1M1rOG8gTyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA5NzA5OA==", "bodyText": "I think this needs to be a stronger \"hook\" -- what's the benefit?\nSomething like:\nYou can replicate indices across clusters to:\n\nContinue handling search requests in the event of a data center outage.\nPrevent search volume from impacting indexing throughput.\nReduce search latency by processing search requests in geo-proximity to the user", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466097098", "createdAt": "2020-08-06T01:44:53Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -3,27 +3,168 @@\n [[xpack-ccr]]\n == {ccr-cap}\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+Use {ccr} (CCR) to enable replication of indices in remote clusters to a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTI0NDI5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/index.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMTo1NjowNFrOG8gfOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMTo1NjowNFrOG8gfOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwMDAyNQ==", "bodyText": "I'd be inclined to flip this around a bit--the active-passive model is kind of the key thing to understand, not that its configured on a per-index basis.\nCCR uses an active passive model. You index to a leader index, and the data is replicated to one or more read-only follower indices. Before you can add a follower index to a cluster, you must configure the remote cluster that contains the leader index.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466100025", "createdAt": "2020-08-06T01:56:04Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -3,27 +3,168 @@\n [[xpack-ccr]]\n == {ccr-cap}\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+Use {ccr} (CCR) to enable replication of indices in remote clusters to a\n+local cluster.\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} is done on an index-by-index basis, so replication is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTI0OTM4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/index.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMTo1OToxNVrOG8giTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMTo1OToxNVrOG8giTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwMDgxMg==", "bodyText": "I think this can be streamlined if you work in the notion of a remote cluster above. The key point is that data is pulled from the remote cluster by the follower's cluster. You might even be able to downplay the \"local cluster\" references, which are somewhat ambiguous.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466100812", "createdAt": "2020-08-06T01:59:15Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -3,27 +3,168 @@\n [[xpack-ccr]]\n == {ccr-cap}\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+Use {ccr} (CCR) to enable replication of indices in remote clusters to a\n+local cluster.\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} is done on an index-by-index basis, so replication is\n+configured at the index level. For each configured replica, there is a\n+replication source index called the _leader index_ and a replication target\n+index called the _follower index_.\n \n-This guide provides an overview of {ccr}:\n+{ccr-cap} is designed around an active-passive index model. While the leader\n+index can be directly written into, the follower index cannot directly receive\n+writes. The follower index drives replication, which simplifies state\n+management on the leader index and ensures that {ccr} does not interfere with\n+indexing on the leader index.\n+\n+Replication is pull-based, where the cluster that is pulling data is called", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTI2MjQyOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/index.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjowNTo1N1rOG8gpmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMjoyMDoxNFrOG9GHnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwMjY4Mg==", "bodyText": "This feels like a point-in-time statement that's a little misleading now--would be good to verify. Can you set up CCR for an existing index that does have soft deletes enabled?", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466102682", "createdAt": "2020-08-06T02:05:57Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -3,27 +3,168 @@\n [[xpack-ccr]]\n == {ccr-cap}\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+Use {ccr} (CCR) to enable replication of indices in remote clusters to a\n+local cluster.\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} is done on an index-by-index basis, so replication is\n+configured at the index level. For each configured replica, there is a\n+replication source index called the _leader index_ and a replication target\n+index called the _follower index_.\n \n-This guide provides an overview of {ccr}:\n+{ccr-cap} is designed around an active-passive index model. While the leader\n+index can be directly written into, the follower index cannot directly receive\n+writes. The follower index drives replication, which simplifies state\n+management on the leader index and ensures that {ccr} does not interfere with\n+indexing on the leader index.\n+\n+Replication is pull-based, where the cluster that is pulling data is called\n+the _local cluster_, and the cluster being replicated is the _remote cluster_.\n+The {es} version of the local cluster must be **the same as or newer** than\n+the remote cluster. If newer, the versions must also be compatible as outlined\n+in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+{ccr-cap} enables several use cases within the Elastic Stack:\n+\n+* *Disaster recovery* in case a primary cluster fails, with a secondary\n+cluster serving as a hot backup\n+* *Data locality* to serve reads locally and reduce costly latency\n+* *Centralized reporting* for preventing search load from interfering with indexing by offloading search to a secondary cluster\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,configure {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.\n+These requests can be served from any copy of the leader shard (primary or\n+replica).\n+\n+When a follower shard sends a read request, the leader shard responds with\n+any new operations, limited by the read parameters that you establish when\n+configuring the follower index. If no new operations are available, the\n+leader shard waits up to the configured timeout for new operations. If the\n+timeout elapses, the leader shard responds to the follower shard that there\n+are no new operations. The follower shard updates shard statistics and\n+immediately sends another read request to the leader shard. This\n+communication model ensures that network connections between the remote\n+cluster and the local cluster are continually in use, avoiding forceful\n+termination from an external sources such as a firewall.\n+\n+If a read request fails, the cause of the failure is inspected. If the\n+cause of the failure is deemed to be recoverable (such as a network\n+failure), the follower shard enters into a retry loop. Otherwise, the\n+follower shard pauses\n+<<ccr-pause-replication,until you resume it>>.\n+\n+When a follower shard receives operations from the leader shard, it places\n+those operations in a write buffer. The follower shard uses the write buffer\n+to submit bulk write requests within the shard. If the write buffer exceeds\n+its configured limits, no additional read requests are sent. This configuration\n+provides a back-pressure against read requests, allowing the follower shard\n+to resume sending read requests when the write buffer is no longer full.\n+\n+To manage how operations are replicated from the leader index, you can\n+configure settings when\n+<<ccr-getting-started-follower-index,creating the follower index in {kib}>>.\n+\n+The follower index automatically retrieves some updates applied to the leader\n+index, while other updates are retrieved as needed:\n+\n+[cols=\"3\"]\n+|===\n+h| Update type h| Automatic  h| As needed\n+| Alias        | {yes-icon} | {no-icon}\n+| Mapping      | {no-icon}  | {yes-icon}\n+| Settings     | {no-icon}  | {yes-icon}\n+|===\n+\n+For example, changing the number of replicas on the leader index is not\n+replicated by the follower index, so that setting might not be retrieved.\n+\n+NOTE: You cannot manually modify the mapping or alias of a follower index.\n+\n+If you apply a non-dynamic settings change to the leader index that is\n+needed by the follower index, the follower index closes itself, applies the\n+settings update, and then re-opens itself. The follower index is unavailable\n+for reads and cannot replicate writes during this cycle.\n+\n+[discrete]\n+[[ccr-remote-recovery]]\n+=== Remote recovery process\n+When you create a follower index, you cannot use it until it is fully\n+initialized. The _remote recovery_ process builds a new copy of a shard on a\n+follower node by copying data from the primary shard in the leader cluster.\n+\n+{es} uses this remote recovery process to bootstrap a follower index using the\n+data from the leader index. This process provides the follower with a copy of\n+the current state of the leader index, even if a complete history of changes\n+is not available on the leader due to Lucene segment merging.\n+\n+Remote recovery is a network intensive process that transfers all of the Lucene\n+segment files from the leader cluster to the follower cluster. The follower\n+requests that a recovery session be initiated on the primary shard in the\n+leader cluster. The follower then requests file chunks concurrently from the\n+leader. By default, the process concurrently requests five 1MB file\n+chunks. This default behavior is designed to support leader and follower\n+clusters with high network latency between them.\n+\n+TIP: You can modify dynamic <<ccr-recovery-settings,remote recovery settings>>\n+to rate-limit the transmitted data and manage the resources consumed by remote\n+recoveries.\n+\n+Use the <<cat-recovery,recovery API>> on the follower cluster to obtain\n+information about an in-progress remote recovery. Because {es} implements\n+remote recoveries using the <<snapshot-restore,snapshot and restore>>\n+infrastructure, running remote recoveries are labelled as type\n+`snapshot` in the recovery API.\n+\n+[discrete]\n+[[ccr-leader-requirements]]\n+=== Requirements for leader indices\n+{ccr-cap} works by replaying the history of individual write\n+operations that were performed on the shards of the leader index. The history\n+of these operations needs to be retained on the leader shards\n+so that they can be pulled by the follower shard tasks. The underlying\n+mechanism used to retain these operations is _soft deletes_.\n+\n+A soft delete occurs whenever an existing document is deleted or updated. By\n+retaining these soft deletes up to configurable limits, the history of\n+operations can be retained on the leader shards and made available to the\n+follower shard tasks as it replays the history of operations.\n+\n+Soft deletes must be enabled for indices that you want to use as leader\n+indices. Soft deletes are enabled by default on new indices created on\n+or after {es} 7.0.0.\n+\n+// tag::ccr-existing-indices-tag[]\n+IMPORTANT: {ccr-cap} cannot be used on existing indices. If you have", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxNjU3NQ==", "bodyText": "Verified with @dnhatn that this statement should read:\n\nIMPORTANT: Cross-cluster replication cannot be used on existing indices created using Elasticsearch\n7.0.0 or earlier, where soft deletes are disabled. You must reindex your data into a new index with soft deletes enabled.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466716575", "createdAt": "2020-08-06T22:20:14Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -3,27 +3,168 @@\n [[xpack-ccr]]\n == {ccr-cap}\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+Use {ccr} (CCR) to enable replication of indices in remote clusters to a\n+local cluster.\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} is done on an index-by-index basis, so replication is\n+configured at the index level. For each configured replica, there is a\n+replication source index called the _leader index_ and a replication target\n+index called the _follower index_.\n \n-This guide provides an overview of {ccr}:\n+{ccr-cap} is designed around an active-passive index model. While the leader\n+index can be directly written into, the follower index cannot directly receive\n+writes. The follower index drives replication, which simplifies state\n+management on the leader index and ensures that {ccr} does not interfere with\n+indexing on the leader index.\n+\n+Replication is pull-based, where the cluster that is pulling data is called\n+the _local cluster_, and the cluster being replicated is the _remote cluster_.\n+The {es} version of the local cluster must be **the same as or newer** than\n+the remote cluster. If newer, the versions must also be compatible as outlined\n+in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+{ccr-cap} enables several use cases within the Elastic Stack:\n+\n+* *Disaster recovery* in case a primary cluster fails, with a secondary\n+cluster serving as a hot backup\n+* *Data locality* to serve reads locally and reduce costly latency\n+* *Centralized reporting* for preventing search load from interfering with indexing by offloading search to a secondary cluster\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,configure {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.\n+These requests can be served from any copy of the leader shard (primary or\n+replica).\n+\n+When a follower shard sends a read request, the leader shard responds with\n+any new operations, limited by the read parameters that you establish when\n+configuring the follower index. If no new operations are available, the\n+leader shard waits up to the configured timeout for new operations. If the\n+timeout elapses, the leader shard responds to the follower shard that there\n+are no new operations. The follower shard updates shard statistics and\n+immediately sends another read request to the leader shard. This\n+communication model ensures that network connections between the remote\n+cluster and the local cluster are continually in use, avoiding forceful\n+termination from an external sources such as a firewall.\n+\n+If a read request fails, the cause of the failure is inspected. If the\n+cause of the failure is deemed to be recoverable (such as a network\n+failure), the follower shard enters into a retry loop. Otherwise, the\n+follower shard pauses\n+<<ccr-pause-replication,until you resume it>>.\n+\n+When a follower shard receives operations from the leader shard, it places\n+those operations in a write buffer. The follower shard uses the write buffer\n+to submit bulk write requests within the shard. If the write buffer exceeds\n+its configured limits, no additional read requests are sent. This configuration\n+provides a back-pressure against read requests, allowing the follower shard\n+to resume sending read requests when the write buffer is no longer full.\n+\n+To manage how operations are replicated from the leader index, you can\n+configure settings when\n+<<ccr-getting-started-follower-index,creating the follower index in {kib}>>.\n+\n+The follower index automatically retrieves some updates applied to the leader\n+index, while other updates are retrieved as needed:\n+\n+[cols=\"3\"]\n+|===\n+h| Update type h| Automatic  h| As needed\n+| Alias        | {yes-icon} | {no-icon}\n+| Mapping      | {no-icon}  | {yes-icon}\n+| Settings     | {no-icon}  | {yes-icon}\n+|===\n+\n+For example, changing the number of replicas on the leader index is not\n+replicated by the follower index, so that setting might not be retrieved.\n+\n+NOTE: You cannot manually modify the mapping or alias of a follower index.\n+\n+If you apply a non-dynamic settings change to the leader index that is\n+needed by the follower index, the follower index closes itself, applies the\n+settings update, and then re-opens itself. The follower index is unavailable\n+for reads and cannot replicate writes during this cycle.\n+\n+[discrete]\n+[[ccr-remote-recovery]]\n+=== Remote recovery process\n+When you create a follower index, you cannot use it until it is fully\n+initialized. The _remote recovery_ process builds a new copy of a shard on a\n+follower node by copying data from the primary shard in the leader cluster.\n+\n+{es} uses this remote recovery process to bootstrap a follower index using the\n+data from the leader index. This process provides the follower with a copy of\n+the current state of the leader index, even if a complete history of changes\n+is not available on the leader due to Lucene segment merging.\n+\n+Remote recovery is a network intensive process that transfers all of the Lucene\n+segment files from the leader cluster to the follower cluster. The follower\n+requests that a recovery session be initiated on the primary shard in the\n+leader cluster. The follower then requests file chunks concurrently from the\n+leader. By default, the process concurrently requests five 1MB file\n+chunks. This default behavior is designed to support leader and follower\n+clusters with high network latency between them.\n+\n+TIP: You can modify dynamic <<ccr-recovery-settings,remote recovery settings>>\n+to rate-limit the transmitted data and manage the resources consumed by remote\n+recoveries.\n+\n+Use the <<cat-recovery,recovery API>> on the follower cluster to obtain\n+information about an in-progress remote recovery. Because {es} implements\n+remote recoveries using the <<snapshot-restore,snapshot and restore>>\n+infrastructure, running remote recoveries are labelled as type\n+`snapshot` in the recovery API.\n+\n+[discrete]\n+[[ccr-leader-requirements]]\n+=== Requirements for leader indices\n+{ccr-cap} works by replaying the history of individual write\n+operations that were performed on the shards of the leader index. The history\n+of these operations needs to be retained on the leader shards\n+so that they can be pulled by the follower shard tasks. The underlying\n+mechanism used to retain these operations is _soft deletes_.\n+\n+A soft delete occurs whenever an existing document is deleted or updated. By\n+retaining these soft deletes up to configurable limits, the history of\n+operations can be retained on the leader shards and made available to the\n+follower shard tasks as it replays the history of operations.\n+\n+Soft deletes must be enabled for indices that you want to use as leader\n+indices. Soft deletes are enabled by default on new indices created on\n+or after {es} 7.0.0.\n+\n+// tag::ccr-existing-indices-tag[]\n+IMPORTANT: {ccr-cap} cannot be used on existing indices. If you have", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwMjY4Mg=="}, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 155}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTI2MzI1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/managing.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjowNjozMlrOG8gqEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjowNjozMlrOG8gqEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwMjgwMQ==", "bodyText": "See previous comments about the UI.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466102801", "createdAt": "2020-08-06T02:06:32Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/managing.asciidoc", "diffHunk": "@@ -0,0 +1,171 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+\n+//////////////////////////\n+\n+[source,console]\n+--------------------------------------------------\n+PUT /follower_index/_ccr/follow?wait_for_active_shards=1\n+{\n+  \"remote_cluster\" : \"remote_cluster\",\n+  \"leader_index\" : \"leader_index\"\n+}\n+--------------------------------------------------\n+// TESTSETUP\n+// TEST[setup:remote_cluster_and_leader_index]\n+\n+[source,console]\n+--------------------------------------------------\n+POST /follower_index/_ccr/pause_follow\n+--------------------------------------------------\n+// TEARDOWN\n+\n+//////////////////////////\n+\n+[[ccr-managing]]\n+=== Manage {ccr}\n+Use the following information to manage {ccr} tasks, such as inspecting\n+replication progress, pausing and resuming replication, recreating a follower\n+index, and terminating replication.\n+\n+[[ccr-inspect-progress]]\n+==== Inspect replication statistics\n+You can inspect the progress of replication for a follower index and view\n+detailed shard statistics.\n+\n+. Open a browser to access {kib} on your _local_ cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTI2MzgxOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/managing.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjowNjo1N1rOG8gqag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjowNjo1N1rOG8gqag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwMjg5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            .Use the API\n          \n          \n            \n            .API example", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466102890", "createdAt": "2020-08-06T02:06:57Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/managing.asciidoc", "diffHunk": "@@ -0,0 +1,171 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+\n+//////////////////////////\n+\n+[source,console]\n+--------------------------------------------------\n+PUT /follower_index/_ccr/follow?wait_for_active_shards=1\n+{\n+  \"remote_cluster\" : \"remote_cluster\",\n+  \"leader_index\" : \"leader_index\"\n+}\n+--------------------------------------------------\n+// TESTSETUP\n+// TEST[setup:remote_cluster_and_leader_index]\n+\n+[source,console]\n+--------------------------------------------------\n+POST /follower_index/_ccr/pause_follow\n+--------------------------------------------------\n+// TEARDOWN\n+\n+//////////////////////////\n+\n+[[ccr-managing]]\n+=== Manage {ccr}\n+Use the following information to manage {ccr} tasks, such as inspecting\n+replication progress, pausing and resuming replication, recreating a follower\n+index, and terminating replication.\n+\n+[[ccr-inspect-progress]]\n+==== Inspect replication statistics\n+You can inspect the progress of replication for a follower index and view\n+detailed shard statistics.\n+\n+. Open a browser to access {kib} on your _local_ cluster.\n+. From the {kib} menu, click *Management -> Stack Management*.\n+. Under *Data*, select *Cross Cluster Replication*.\n+  . Choose the *Follower indices* tab.\n+  . Select the name of the follower index you want to view replication details\n+  for.\n+\n+The slide-out panel shows settings and replication statistics for the follower\n+index, including read and write that are managed by the follower shard.\n+\n+To view more detailed statistics, click *View in Index Management*, and\n+then select the name of the follower index on the *Index Management* page. Choose the *Stats* tab to view detailed statistics at the shard level.\n+\n+[%collapsible]\n+.Use the API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTI2NTc5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/managing.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjowNzo1M1rOG8grjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjowNzo1M1rOG8grjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwMzE4MQ==", "bodyText": "This should be clarified...it's not the follower indices that are replicated. :-)", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466103181", "createdAt": "2020-08-06T02:07:53Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/managing.asciidoc", "diffHunk": "@@ -0,0 +1,171 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+\n+//////////////////////////\n+\n+[source,console]\n+--------------------------------------------------\n+PUT /follower_index/_ccr/follow?wait_for_active_shards=1\n+{\n+  \"remote_cluster\" : \"remote_cluster\",\n+  \"leader_index\" : \"leader_index\"\n+}\n+--------------------------------------------------\n+// TESTSETUP\n+// TEST[setup:remote_cluster_and_leader_index]\n+\n+[source,console]\n+--------------------------------------------------\n+POST /follower_index/_ccr/pause_follow\n+--------------------------------------------------\n+// TEARDOWN\n+\n+//////////////////////////\n+\n+[[ccr-managing]]\n+=== Manage {ccr}\n+Use the following information to manage {ccr} tasks, such as inspecting\n+replication progress, pausing and resuming replication, recreating a follower\n+index, and terminating replication.\n+\n+[[ccr-inspect-progress]]\n+==== Inspect replication statistics\n+You can inspect the progress of replication for a follower index and view\n+detailed shard statistics.\n+\n+. Open a browser to access {kib} on your _local_ cluster.\n+. From the {kib} menu, click *Management -> Stack Management*.\n+. Under *Data*, select *Cross Cluster Replication*.\n+  . Choose the *Follower indices* tab.\n+  . Select the name of the follower index you want to view replication details\n+  for.\n+\n+The slide-out panel shows settings and replication statistics for the follower\n+index, including read and write that are managed by the follower shard.\n+\n+To view more detailed statistics, click *View in Index Management*, and\n+then select the name of the follower index on the *Index Management* page. Choose the *Stats* tab to view detailed statistics at the shard level.\n+\n+[%collapsible]\n+.Use the API\n+====\n+Use the <<ccr-get-follow-stats,get follower stats API>> to inspect replication\n+progress at the shard level. This API provides insight into the read and writes\n+managed by the follower shard. The API also reports read exceptions that can be\n+retried and fatal exceptions that require user intervention.\n+====\n+\n+[[ccr-pause-replication]]\n+==== Pause and resume replication\n+Pause and resume replication of follower indices. When resuming, you can choose", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTI2NjYyOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/managing.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjowODoyOFrOG8gsEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjowODoyOFrOG8gsEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwMzMxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            .Use the API\n          \n          \n            \n            .API example", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466103312", "createdAt": "2020-08-06T02:08:28Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/managing.asciidoc", "diffHunk": "@@ -0,0 +1,171 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+\n+//////////////////////////\n+\n+[source,console]\n+--------------------------------------------------\n+PUT /follower_index/_ccr/follow?wait_for_active_shards=1\n+{\n+  \"remote_cluster\" : \"remote_cluster\",\n+  \"leader_index\" : \"leader_index\"\n+}\n+--------------------------------------------------\n+// TESTSETUP\n+// TEST[setup:remote_cluster_and_leader_index]\n+\n+[source,console]\n+--------------------------------------------------\n+POST /follower_index/_ccr/pause_follow\n+--------------------------------------------------\n+// TEARDOWN\n+\n+//////////////////////////\n+\n+[[ccr-managing]]\n+=== Manage {ccr}\n+Use the following information to manage {ccr} tasks, such as inspecting\n+replication progress, pausing and resuming replication, recreating a follower\n+index, and terminating replication.\n+\n+[[ccr-inspect-progress]]\n+==== Inspect replication statistics\n+You can inspect the progress of replication for a follower index and view\n+detailed shard statistics.\n+\n+. Open a browser to access {kib} on your _local_ cluster.\n+. From the {kib} menu, click *Management -> Stack Management*.\n+. Under *Data*, select *Cross Cluster Replication*.\n+  . Choose the *Follower indices* tab.\n+  . Select the name of the follower index you want to view replication details\n+  for.\n+\n+The slide-out panel shows settings and replication statistics for the follower\n+index, including read and write that are managed by the follower shard.\n+\n+To view more detailed statistics, click *View in Index Management*, and\n+then select the name of the follower index on the *Index Management* page. Choose the *Stats* tab to view detailed statistics at the shard level.\n+\n+[%collapsible]\n+.Use the API\n+====\n+Use the <<ccr-get-follow-stats,get follower stats API>> to inspect replication\n+progress at the shard level. This API provides insight into the read and writes\n+managed by the follower shard. The API also reports read exceptions that can be\n+retried and fatal exceptions that require user intervention.\n+====\n+\n+[[ccr-pause-replication]]\n+==== Pause and resume replication\n+Pause and resume replication of follower indices. When resuming, you can choose\n+to modify advanced settings.\n+\n+. Open a browser to access {kib} on your _local_ cluster.\n+. From the {kib} menu, click *Management -> Stack Management*.\n+. Under *Data*, select *Cross Cluster Replication*.\n+  . Choose the *Follower indices* tab.\n+  . Select the follower index you want to pause and\n+  choose *Manage -> Pause Replication*.\n+\n+The follower index status changes to *Paused*.\n+\n+To resume replication, select the follower index and choose\n+*Resume replication*.\n+\n+[%collapsible]\n+.Use the API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTI3MDc1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/upgrading.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjoxMDozNlrOG8guaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjoxMDozNlrOG8guaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwMzkxNQ==", "bodyText": "It's probably worth mentioning up front that you can have bi-directional replication between clusters.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r466103915", "createdAt": "2020-08-06T02:10:36Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/upgrading.asciidoc", "diffHunk": "@@ -1,49 +1,67 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-upgrading]]\n-=== Upgrading clusters\n+=== Upgrading clusters using {ccr}\n+++++\n+<titleabbrev>Upgrading clusters</titleabbrev>\n+++++\n \n Clusters that are actively using {ccr} require a careful approach to upgrades.\n-Otherwise index following may fail during a rolling upgrade, because of the\n-following reasons:\n+The following conditions could cause index following to fail during rolling\n+upgrades:\n \n-* If a new index setting or mapping type is replicated from an upgraded cluster\n-  to a non-upgraded cluster then the non-upgraded cluster will reject that and\n-  will fail index following.\n-* Lucene is not forwards compatible and when index following is falling back to\n-  file based recovery then a node in a non-upgraded cluster will reject index\n-  files from a newer Lucene version compared to what it is using.\n-\n-Rolling upgrading clusters with {ccr} is different in case of uni-directional\n-index following and bi-directional index following.\n+* Clusters that have not yet been upgraded will reject new index settings or\n+mapping types that are replicated from an upgraded cluster.\n+* Nodes in a cluster that has not been upgraded will reject index files from a\n+node in an upgraded cluster when index following tries to fall back to\n+file-based recovery. This limitation is due to Lucene not being forward\n+compatible.\n \n+The approach to running a rolling upgrade on clusters where {ccr} is\n+enabled differs based on uni-directional and bi-directional index following.\n \n+[[ccr-uni-directional-upgrade]]\n ==== Uni-directional index following\n \n-In a uni-directional setup between two clusters, one cluster contains only\n-leader indices, and the other cluster contains only follower indices following\n-indices in the first cluster.\n+In a uni-directional configuration, one cluster contains only", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1004066782de3f6e5365a5a89b908bcf127d6085"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODIyNTg5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/auto-follow.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1MTowNFrOHAbPBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1MTowNFrOHAbPBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwODI2MQ==", "bodyText": "Maybe mention \"This is especially useful with ILM (link), which may continually create new indices on the leader cluster.\"", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470208261", "createdAt": "2020-08-13T19:51:04Z", "author": {"login": "zuketo"}, "path": "docs/reference/ccr/auto-follow.asciidoc", "diffHunk": "@@ -1,32 +1,80 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-auto-follow]]\n-=== Automatically following indices\n-\n-In time series use cases where you want to follow new indices that are\n-periodically created (such as daily Beats indices), manually configuring follower\n-indices for each new leader index can be an operational burden. The auto-follow\n-functionality in {ccr} is aimed at easing this burden. With the auto-follow\n-functionality, you can specify that new indices in a remote cluster that have a \n-name that matches a pattern are automatically followed.\n-\n-==== Managing auto-follow patterns\n-\n-You can add a new auto-follow pattern configuration with the\n-{ref}/ccr-put-auto-follow-pattern.html[create auto-follow pattern API].  When you create\n-a new auto-follow pattern configuration, you are configuring a collection of\n-patterns against a single remote cluster. Any time a new index with a name that \n-matches one of the patterns in the collection is created in the remote cluster,\n-a follower index is configured in the local cluster. The follower index uses the \n-new index as its leader index.\n-\n-You can inspect all configured auto-follow pattern collections with the\n-{ref}/ccr-get-auto-follow-pattern.html[get auto-follow pattern API]. Auto-follow patterns\n-can be paused using the {ref}/ccr-pause-auto-follow-pattern.html[pause auto-follow pattern API]\n- and can be resumed using the {ref}/ccr-resume-auto-follow-pattern.html[resume auto-follow pattern API].\n-  To delete a configured auto-follow pattern collection, use the\n-{ref}/ccr-delete-auto-follow-pattern.html[delete auto-follow pattern API].\n-\n-Since auto-follow functionality is handled automatically in the background on\n-your behalf, error reporting is done through logs on the elected master node\n-and through the {ref}/ccr-get-stats.html[{ccr} stats API].\n+=== Manage auto-follow patterns\n+To replicate time series indices, you configure an auto-follow pattern so that\n+each new index in the series is replicated automatically. Whenever the name of\n+a new index on the remote cluster matches the auto-follow pattern, a\n+corresponding follower index is added to the local cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODI1MzUxOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/index.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1ODozOVrOHAbfNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTo1NDo0M1rOHA57Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxMjQwNA==", "bodyText": "I'm wondering if it would be good to mention the settings at https://www.elastic.co/guide/en/elasticsearch/reference/master/index-modules-history-retention.html#_history_retention_settings here. This has come up a few times, e.g. \"how long can my leader cluster be offline?\" or \"how long can my network connection be down?\" By default, the answer is 12 hours, after that we will need to resync data (since we can no longer rely on soft deletes). This value can be configured, e.g. a cruise ship replicating an index back to land that is out at sea for up to 24 hours at a time would probably want to adjust the index.soft_deletes.retention_lease.period setting.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470212404", "createdAt": "2020-08-13T19:58:39Z", "author": {"login": "zuketo"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,172 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can enable several <<ccr-use-cases,use cases>> within the\n+Elastic Stack.\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+You can replicate indices across clusters to:\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-This guide provides an overview of {ccr}:\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-* <<ccr-overview>>\n-* <<ccr-requirements>>\n-* <<ccr-auto-follow>>\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.\n+These requests can be served from any copy of the leader shard (primary or\n+replica).\n+\n+When a follower shard sends a read request, the leader shard responds with\n+any new operations, limited by the read parameters that you establish when\n+configuring the follower index. If no new operations are available, the\n+leader shard waits up to the configured timeout for new operations. If the\n+timeout elapses, the leader shard responds to the follower shard that there\n+are no new operations. The follower shard updates shard statistics and\n+immediately sends another read request to the leader shard. This\n+communication model ensures that network connections between the remote\n+cluster and the local cluster are continually in use, avoiding forceful\n+termination from an external sources such as a firewall.\n+\n+If a read request fails, the cause of the failure is inspected. If the\n+cause of the failure is deemed to be recoverable (such as a network\n+failure), the follower shard enters into a retry loop. Otherwise, the\n+follower shard pauses\n+<<ccr-pause-replication,until you resume it>>.\n+\n+When a follower shard receives operations from the leader shard, it places\n+those operations in a write buffer. The follower shard uses the write buffer\n+to submit bulk write requests within the shard. If the write buffer exceeds\n+its configured limits, no additional read requests are sent. This configuration\n+provides a back-pressure against read requests, allowing the follower shard\n+to resume sending read requests when the write buffer is no longer full.\n+\n+To manage how operations are replicated from the leader index, you can\n+configure settings when\n+<<ccr-getting-started-follower-index,creating the follower index>>.\n+\n+The follower index automatically retrieves some updates applied to the leader\n+index, while other updates are retrieved as needed:\n+\n+[cols=\"3\"]\n+|===\n+h| Update type h| Automatic  h| As needed\n+| Alias        | {yes-icon} | {no-icon}\n+| Mapping      | {no-icon}  | {yes-icon}\n+| Settings     | {no-icon}  | {yes-icon}\n+|===\n+\n+For example, changing the number of replicas on the leader index is not\n+replicated by the follower index, so that setting might not be retrieved.\n+\n+NOTE: You cannot manually modify the mapping or alias of a follower index.\n+\n+If you apply a non-dynamic settings change to the leader index that is\n+needed by the follower index, the follower index closes itself, applies the\n+settings update, and then re-opens itself. The follower index is unavailable\n+for reads and cannot replicate writes during this cycle.\n+\n+[discrete]\n+[[ccr-remote-recovery]]\n+=== Remote recovery process\n+When you create a follower index, you cannot use it until it is fully\n+initialized. The _remote recovery_ process builds a new copy of a shard on a\n+follower node by copying data from the primary shard in the leader cluster.\n+\n+{es} uses this remote recovery process to bootstrap a follower index using the\n+data from the leader index. This process provides the follower with a copy of\n+the current state of the leader index, even if a complete history of changes\n+is not available on the leader due to Lucene segment merging.\n+\n+Remote recovery is a network intensive process that transfers all of the Lucene\n+segment files from the leader cluster to the follower cluster. The follower\n+requests that a recovery session be initiated on the primary shard in the\n+leader cluster. The follower then requests file chunks concurrently from the\n+leader. By default, the process concurrently requests five 1MB file\n+chunks. This default behavior is designed to support leader and follower\n+clusters with high network latency between them.\n+\n+TIP: You can modify dynamic <<ccr-recovery-settings,remote recovery settings>>\n+to rate-limit the transmitted data and manage the resources consumed by remote\n+recoveries.\n+\n+Use the <<cat-recovery,recovery API>> on the cluster containing the follower\n+index to obtain information about an in-progress remote recovery. Because {es}\n+implements remote recoveries using the\n+<<snapshot-restore,snapshot and restore>> infrastructure, running remote\n+recoveries are labelled as type `snapshot` in the recovery API.\n+\n+[discrete]\n+[[ccr-leader-requirements]]\n+=== Requirements for leader indices", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcxMTEzOQ==", "bodyText": "Agreed -- it's good to provide a link for how users can configure this setting. I moved the history retention settings to the Index modules settings page, and then included them in the History retention page to single source the content.\nI think that this addition (with a link on the index.soft_deletes.retention_lease.period setting) provides more context:\n\nThe index.soft_deletes.retention_lease.period setting defines the maximum time to retain a shard history retention lease before it is considered expired. This setting determines how long the cluster containing your leader index can be offline, which is 12 hours by default. If a shard copy recovers after its retention lease expires, then {es} will fall back to copying the entire index, because it can no longer replay the missing history.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470711139", "createdAt": "2020-08-14T15:54:43Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,172 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can enable several <<ccr-use-cases,use cases>> within the\n+Elastic Stack.\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+You can replicate indices across clusters to:\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-This guide provides an overview of {ccr}:\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-* <<ccr-overview>>\n-* <<ccr-requirements>>\n-* <<ccr-auto-follow>>\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.\n+These requests can be served from any copy of the leader shard (primary or\n+replica).\n+\n+When a follower shard sends a read request, the leader shard responds with\n+any new operations, limited by the read parameters that you establish when\n+configuring the follower index. If no new operations are available, the\n+leader shard waits up to the configured timeout for new operations. If the\n+timeout elapses, the leader shard responds to the follower shard that there\n+are no new operations. The follower shard updates shard statistics and\n+immediately sends another read request to the leader shard. This\n+communication model ensures that network connections between the remote\n+cluster and the local cluster are continually in use, avoiding forceful\n+termination from an external sources such as a firewall.\n+\n+If a read request fails, the cause of the failure is inspected. If the\n+cause of the failure is deemed to be recoverable (such as a network\n+failure), the follower shard enters into a retry loop. Otherwise, the\n+follower shard pauses\n+<<ccr-pause-replication,until you resume it>>.\n+\n+When a follower shard receives operations from the leader shard, it places\n+those operations in a write buffer. The follower shard uses the write buffer\n+to submit bulk write requests within the shard. If the write buffer exceeds\n+its configured limits, no additional read requests are sent. This configuration\n+provides a back-pressure against read requests, allowing the follower shard\n+to resume sending read requests when the write buffer is no longer full.\n+\n+To manage how operations are replicated from the leader index, you can\n+configure settings when\n+<<ccr-getting-started-follower-index,creating the follower index>>.\n+\n+The follower index automatically retrieves some updates applied to the leader\n+index, while other updates are retrieved as needed:\n+\n+[cols=\"3\"]\n+|===\n+h| Update type h| Automatic  h| As needed\n+| Alias        | {yes-icon} | {no-icon}\n+| Mapping      | {no-icon}  | {yes-icon}\n+| Settings     | {no-icon}  | {yes-icon}\n+|===\n+\n+For example, changing the number of replicas on the leader index is not\n+replicated by the follower index, so that setting might not be retrieved.\n+\n+NOTE: You cannot manually modify the mapping or alias of a follower index.\n+\n+If you apply a non-dynamic settings change to the leader index that is\n+needed by the follower index, the follower index closes itself, applies the\n+settings update, and then re-opens itself. The follower index is unavailable\n+for reads and cannot replicate writes during this cycle.\n+\n+[discrete]\n+[[ccr-remote-recovery]]\n+=== Remote recovery process\n+When you create a follower index, you cannot use it until it is fully\n+initialized. The _remote recovery_ process builds a new copy of a shard on a\n+follower node by copying data from the primary shard in the leader cluster.\n+\n+{es} uses this remote recovery process to bootstrap a follower index using the\n+data from the leader index. This process provides the follower with a copy of\n+the current state of the leader index, even if a complete history of changes\n+is not available on the leader due to Lucene segment merging.\n+\n+Remote recovery is a network intensive process that transfers all of the Lucene\n+segment files from the leader cluster to the follower cluster. The follower\n+requests that a recovery session be initiated on the primary shard in the\n+leader cluster. The follower then requests file chunks concurrently from the\n+leader. By default, the process concurrently requests five 1MB file\n+chunks. This default behavior is designed to support leader and follower\n+clusters with high network latency between them.\n+\n+TIP: You can modify dynamic <<ccr-recovery-settings,remote recovery settings>>\n+to rate-limit the transmitted data and manage the resources consumed by remote\n+recoveries.\n+\n+Use the <<cat-recovery,recovery API>> on the cluster containing the follower\n+index to obtain information about an in-progress remote recovery. Because {es}\n+implements remote recoveries using the\n+<<snapshot-restore,snapshot and restore>> infrastructure, running remote\n+recoveries are labelled as type `snapshot` in the recovery API.\n+\n+[discrete]\n+[[ccr-leader-requirements]]\n+=== Requirements for leader indices", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxMjQwNA=="}, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODI2Njc5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/use-cases.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDowMTo1NlrOHAbmmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDowMTo1NlrOHAbmmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxNDI5OA==", "bodyText": "How about expanding on this: \"to maintain multiple copies of the dataset close to the application servers (and users), to reduce costly latency.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470214298", "createdAt": "2020-08-13T20:01:56Z", "author": {"login": "zuketo"}, "path": "docs/reference/ccr/use-cases.asciidoc", "diffHunk": "@@ -0,0 +1,121 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+[[ccr-use-cases]]\n+=== {ccr-cap} use cases\n+++++\n+<titleabbrev>Use cases</titleabbrev>\n+++++\n+\n+Use {ccr} to enable several use cases within the Elastic Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to serve reads locally and reduce costly latency", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODI3NjAyOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/use-cases.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDowNDoyNFrOHAbsAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDowNDoyNFrOHAbsAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxNTY4MA==", "bodyText": "\"for minimizing network traffic and latency in querying multiple geo-distributed ES clusters or for preventing search load from interfering with indexing by offloading search to a secondary cluster\"", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470215680", "createdAt": "2020-08-13T20:04:24Z", "author": {"login": "zuketo"}, "path": "docs/reference/ccr/use-cases.asciidoc", "diffHunk": "@@ -0,0 +1,121 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+[[ccr-use-cases]]\n+=== {ccr-cap} use cases\n+++++\n+<titleabbrev>Use cases</titleabbrev>\n+++++\n+\n+Use {ccr} to enable several use cases within the Elastic Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to serve reads locally and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for preventing search load from interfering with indexing by offloading search to a secondary cluster", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODY2NDQxOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/index.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjowNjo0NVrOHAfVQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjowNjo0NVrOHAfVQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NTM5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            indices for new time series.\n          \n          \n            \n            indices for new time series indices.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470275394", "createdAt": "2020-08-13T22:06:45Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,172 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can enable several <<ccr-use-cases,use cases>> within the\n+Elastic Stack.\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+You can replicate indices across clusters to:\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-This guide provides an overview of {ccr}:\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-* <<ccr-overview>>\n-* <<ccr-requirements>>\n-* <<ccr-auto-follow>>\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODY3MDc5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/index.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjowOToyN1rOHAfZOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjowOToyN1rOHAfZOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NjQwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            termination from an external sources such as a firewall.\n          \n          \n            \n            termination by an external source such as a firewall.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470276409", "createdAt": "2020-08-13T22:09:27Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,172 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can enable several <<ccr-use-cases,use cases>> within the\n+Elastic Stack.\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+You can replicate indices across clusters to:\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-This guide provides an overview of {ccr}:\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-* <<ccr-overview>>\n-* <<ccr-requirements>>\n-* <<ccr-auto-follow>>\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.\n+These requests can be served from any copy of the leader shard (primary or\n+replica).\n+\n+When a follower shard sends a read request, the leader shard responds with\n+any new operations, limited by the read parameters that you establish when\n+configuring the follower index. If no new operations are available, the\n+leader shard waits up to the configured timeout for new operations. If the\n+timeout elapses, the leader shard responds to the follower shard that there\n+are no new operations. The follower shard updates shard statistics and\n+immediately sends another read request to the leader shard. This\n+communication model ensures that network connections between the remote\n+cluster and the local cluster are continually in use, avoiding forceful\n+termination from an external sources such as a firewall.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODY3NjA5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/index.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoxMToyMVrOHAfcaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoxMToyMVrOHAfcaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NzIyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: You cannot manually modify the mapping or alias of a follower index.\n          \n          \n            \n            NOTE: You cannot manually modify a follower index's mappings or aliases.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470277225", "createdAt": "2020-08-13T22:11:21Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,172 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can enable several <<ccr-use-cases,use cases>> within the\n+Elastic Stack.\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+You can replicate indices across clusters to:\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-This guide provides an overview of {ccr}:\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-* <<ccr-overview>>\n-* <<ccr-requirements>>\n-* <<ccr-auto-follow>>\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.\n+These requests can be served from any copy of the leader shard (primary or\n+replica).\n+\n+When a follower shard sends a read request, the leader shard responds with\n+any new operations, limited by the read parameters that you establish when\n+configuring the follower index. If no new operations are available, the\n+leader shard waits up to the configured timeout for new operations. If the\n+timeout elapses, the leader shard responds to the follower shard that there\n+are no new operations. The follower shard updates shard statistics and\n+immediately sends another read request to the leader shard. This\n+communication model ensures that network connections between the remote\n+cluster and the local cluster are continually in use, avoiding forceful\n+termination from an external sources such as a firewall.\n+\n+If a read request fails, the cause of the failure is inspected. If the\n+cause of the failure is deemed to be recoverable (such as a network\n+failure), the follower shard enters into a retry loop. Otherwise, the\n+follower shard pauses\n+<<ccr-pause-replication,until you resume it>>.\n+\n+When a follower shard receives operations from the leader shard, it places\n+those operations in a write buffer. The follower shard uses the write buffer\n+to submit bulk write requests within the shard. If the write buffer exceeds\n+its configured limits, no additional read requests are sent. This configuration\n+provides a back-pressure against read requests, allowing the follower shard\n+to resume sending read requests when the write buffer is no longer full.\n+\n+To manage how operations are replicated from the leader index, you can\n+configure settings when\n+<<ccr-getting-started-follower-index,creating the follower index>>.\n+\n+The follower index automatically retrieves some updates applied to the leader\n+index, while other updates are retrieved as needed:\n+\n+[cols=\"3\"]\n+|===\n+h| Update type h| Automatic  h| As needed\n+| Alias        | {yes-icon} | {no-icon}\n+| Mapping      | {no-icon}  | {yes-icon}\n+| Settings     | {no-icon}  | {yes-icon}\n+|===\n+\n+For example, changing the number of replicas on the leader index is not\n+replicated by the follower index, so that setting might not be retrieved.\n+\n+NOTE: You cannot manually modify the mapping or alias of a follower index.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODcwNTI5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/use-cases.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoyMjo1N1rOHAfthQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDoyNTowMFrOHA2jfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4MTYwNQ==", "bodyText": "It's not really Elasticsearch that can use the indexes replicated to the disaster recovery datacenter, it's that your application can access the replicated indices if the production cluster is unavailable.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470281605", "createdAt": "2020-08-13T22:22:57Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/use-cases.asciidoc", "diffHunk": "@@ -0,0 +1,121 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+[[ccr-use-cases]]\n+=== {ccr-cap} use cases\n+++++\n+<titleabbrev>Use cases</titleabbrev>\n+++++\n+\n+Use {ccr} to enable several use cases within the Elastic Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to serve reads locally and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for preventing search load from interfering with indexing by offloading search to a secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, {es} can use the disaster recovery datacenter if the production", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY1NTg3MA==", "bodyText": "Changed to read:\n\nBecause the follower indices replicate the leader index, your application can use the disaster recovery datacenter if the production datacenter is unavailable.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470655870", "createdAt": "2020-08-14T14:25:00Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/use-cases.asciidoc", "diffHunk": "@@ -0,0 +1,121 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+[[ccr-use-cases]]\n+=== {ccr-cap} use cases\n+++++\n+<titleabbrev>Use cases</titleabbrev>\n+++++\n+\n+Use {ccr} to enable several use cases within the Elastic Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to serve reads locally and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for preventing search load from interfering with indexing by offloading search to a secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, {es} can use the disaster recovery datacenter if the production", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4MTYwNQ=="}, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODcxMjg4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/use-cases.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoyNjowOFrOHAfyKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDoxMzowOFrOHA2Hpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4Mjc5NA==", "bodyText": "The linear arrangement makes the distinction between this and the chained version less obvious. I'd stack the two DR datacenters so you don't have to trace the lines.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470282794", "createdAt": "2020-08-13T22:26:08Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/use-cases.asciidoc", "diffHunk": "@@ -0,0 +1,121 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+[[ccr-use-cases]]\n+=== {ccr-cap} use cases\n+++++\n+<titleabbrev>Use cases</titleabbrev>\n+++++\n+\n+Use {ccr} to enable several use cases within the Elastic Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to serve reads locally and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for preventing search load from interfering with indexing by offloading search to a secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, {es} can use the disaster recovery datacenter if the production\n+datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY0ODc0Mg==", "bodyText": "Agreed. I'm going to redo all of those diagrams for color and size consistency, and will update this one to show the flow better.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470648742", "createdAt": "2020-08-14T14:13:08Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/use-cases.asciidoc", "diffHunk": "@@ -0,0 +1,121 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+[[ccr-use-cases]]\n+=== {ccr-cap} use cases\n+++++\n+<titleabbrev>Use cases</titleabbrev>\n+++++\n+\n+Use {ccr} to enable several use cases within the Elastic Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to serve reads locally and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for preventing search load from interfering with indexing by offloading search to a secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, {es} can use the disaster recovery datacenter if the production\n+datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4Mjc5NA=="}, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODcxNzQyOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/use-cases.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoyODoyMFrOHAf1Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoyMzozMlrOHA0ZoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4MzUzOQ==", "bodyText": "This reverses the data flow from the earlier diagrams--I'd be consistent.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470283539", "createdAt": "2020-08-13T22:28:20Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/use-cases.asciidoc", "diffHunk": "@@ -0,0 +1,121 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+[[ccr-use-cases]]\n+=== {ccr-cap} use cases\n+++++\n+<titleabbrev>Use cases</titleabbrev>\n+++++\n+\n+Use {ccr} to enable several use cases within the Elastic Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to serve reads locally and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for preventing search load from interfering with indexing by offloading search to a secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, {es} can use the disaster recovery datacenter if the production\n+datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]\n+\n+[discrete]\n+[[ccr-chained-replication]]\n+===== Chained replication\n+You can replicate data across multiple datacenters to form a replication\n+chain. In the following diagram, Datacenter A contains the leader index.\n+Datacenter B replicates data from Datacenter A, and Datacenter C replicates\n+from the follower indices in Datacenter B. The connection between these\n+datacenters forms a chained replication pattern.\n+\n+image::images/ccr-arch-chain-dcs.png[Three datacenters connected to form a replication chain]\n+\n+[discrete]\n+[[ccr-bi-directional-replication]]\n+===== Bi-directional replication\n+In a https://www.elastic.co/blog/bi-directional-replication-with-elasticsearch-cross-cluster-replication-ccr[bi-directional replication] setup, all clusters have access to view\n+all data, and all clusters have an index to write to without manually\n+implementing failover. Applications can write to the local index within each\n+datacenter, and read across multiple indices for a global view of all\n+information.\n+\n+This configuration requires no manual intervention when a cluster or datacenter\n+is unavailable. In the following diagram, if Datacenter A is unavailable, you can continue using Datacenter B without manual failover. When Datacenter A\n+comes online, replication resumes between the clusters.\n+\n+image::images/ccr-arch-bi-directional.png[Bi-directional configuration where each cluster contains both a leader index and follower indices]\n+\n+NOTE: This configuration is useful for index-only workloads, where no updates\n+to document values occur. In this configuration, documents indexed by {es} are\n+immutable. Clients are located in each datacenter alongside the {es}\n+cluster, and do not communicate with clusters in different datacenters.\n+\n+[[ccr-data-locality]]\n+==== Data locality\n+Bringing data closer to your users or application server can reduce latency\n+and response time. This methodology also applies when replicating data in {es}.\n+For example, you can replicate a product catalog or reference dataset to 20 or\n+more datacenters around the world to minimize the distance between the data and\n+the application server.\n+\n+In the following diagram, data is replicated from one datacenter to three\n+additional datacenters, each in their own region. The central datacenter\n+contains the leader index, and the additional datacenters contain follower\n+indices that replicate data in that particular region. This configuration\n+puts data closer to the application accessing it.\n+\n+image::images/ccr-arch-data-locality.png[A centralized datacenter replicated across three other datacenters, each in their own region]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYyMDU3Ng==", "bodyText": "Good point. I'll reverse the diagram so that data flows left -> right.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470620576", "createdAt": "2020-08-14T13:23:32Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/use-cases.asciidoc", "diffHunk": "@@ -0,0 +1,121 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+[[ccr-use-cases]]\n+=== {ccr-cap} use cases\n+++++\n+<titleabbrev>Use cases</titleabbrev>\n+++++\n+\n+Use {ccr} to enable several use cases within the Elastic Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to serve reads locally and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for preventing search load from interfering with indexing by offloading search to a secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, {es} can use the disaster recovery datacenter if the production\n+datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]\n+\n+[discrete]\n+[[ccr-chained-replication]]\n+===== Chained replication\n+You can replicate data across multiple datacenters to form a replication\n+chain. In the following diagram, Datacenter A contains the leader index.\n+Datacenter B replicates data from Datacenter A, and Datacenter C replicates\n+from the follower indices in Datacenter B. The connection between these\n+datacenters forms a chained replication pattern.\n+\n+image::images/ccr-arch-chain-dcs.png[Three datacenters connected to form a replication chain]\n+\n+[discrete]\n+[[ccr-bi-directional-replication]]\n+===== Bi-directional replication\n+In a https://www.elastic.co/blog/bi-directional-replication-with-elasticsearch-cross-cluster-replication-ccr[bi-directional replication] setup, all clusters have access to view\n+all data, and all clusters have an index to write to without manually\n+implementing failover. Applications can write to the local index within each\n+datacenter, and read across multiple indices for a global view of all\n+information.\n+\n+This configuration requires no manual intervention when a cluster or datacenter\n+is unavailable. In the following diagram, if Datacenter A is unavailable, you can continue using Datacenter B without manual failover. When Datacenter A\n+comes online, replication resumes between the clusters.\n+\n+image::images/ccr-arch-bi-directional.png[Bi-directional configuration where each cluster contains both a leader index and follower indices]\n+\n+NOTE: This configuration is useful for index-only workloads, where no updates\n+to document values occur. In this configuration, documents indexed by {es} are\n+immutable. Clients are located in each datacenter alongside the {es}\n+cluster, and do not communicate with clusters in different datacenters.\n+\n+[[ccr-data-locality]]\n+==== Data locality\n+Bringing data closer to your users or application server can reduce latency\n+and response time. This methodology also applies when replicating data in {es}.\n+For example, you can replicate a product catalog or reference dataset to 20 or\n+more datacenters around the world to minimize the distance between the data and\n+the application server.\n+\n+In the following diagram, data is replicated from one datacenter to three\n+additional datacenters, each in their own region. The central datacenter\n+contains the leader index, and the additional datacenters contain follower\n+indices that replicate data in that particular region. This configuration\n+puts data closer to the application accessing it.\n+\n+image::images/ccr-arch-data-locality.png[A centralized datacenter replicated across three other datacenters, each in their own region]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4MzUzOQ=="}, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODc1MTY1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/use-cases.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjo0MzozMFrOHAgJjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDoyNzo1N1rOHBCbgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4ODc4MA==", "bodyText": "I think this level of information is super helpful. I'd be inclined to avoid \"use case\" (which has a strong application/solution connotation) in favor of something like \"Multi-cluster architectures\".\nI'm also wondering if this can be incorporated into the overview--it's really information that you are probably interested in before you read about the mechanics of the implementation.\nMaybe the overview could look something like:\nCross cluster replication\nReplication model\nMulti-cluster architectures\nReplication mechanics\nInitializing followers uses remote recovery\nReplicating a leader relies on soft deletes", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470288780", "createdAt": "2020-08-13T22:43:30Z", "author": {"login": "debadair"}, "path": "docs/reference/ccr/use-cases.asciidoc", "diffHunk": "@@ -0,0 +1,121 @@\n+[role=\"xpack\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg1MDQzNQ==", "bodyText": "I waffled on that idea, but I think you're right - integrating that information into the overview makes sense.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470850435", "createdAt": "2020-08-14T20:27:57Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/use-cases.asciidoc", "diffHunk": "@@ -0,0 +1,121 @@\n+[role=\"xpack\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4ODc4MA=="}, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTI2ODY4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo1Mjo0OVrOHA3sQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo1Mjo0OVrOHA3sQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY3NDQ5OQ==", "bodyText": "Replace left with side.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470674499", "createdAt": "2020-08-14T14:52:49Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -76,19 +68,31 @@ ccr_user:\n --------------------------------------------------\n \n If you are managing\n-<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> via the\n-cluster update settings API, you will also need a user with the `all` cluster\n-privilege.\n---\n-\n+<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> using\n+the cluster update settings API, you will also need a user with the `all`\n+cluster privilege.\n \n [[ccr-getting-started-remote-cluster]]\n-==== Connecting to a remote cluster\n+==== Connect to a remote cluster\n+Connect your local cluster to a\n+<<modules-remote-clusters,remote cluster>> to begin using cross-cluster\n+replication.\n+\n+To configure a {kibana-ref}/working-remote-clusters.html[remote cluster],\n+access {kib} and go to\n+*Management > Stack Management*. In the left navigation, select", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTI3MzI0OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo1NDowNVrOHA3vMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo1NDowNVrOHA3vMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY3NTI0OQ==", "bodyText": "Suggest removing \"to access the Remote Clusters page\" as it is implied when you click Remote Clusters.  Also, we try to avoid using \"page\".", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470675249", "createdAt": "2020-08-14T14:54:05Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -76,19 +68,31 @@ ccr_user:\n --------------------------------------------------\n \n If you are managing\n-<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> via the\n-cluster update settings API, you will also need a user with the `all` cluster\n-privilege.\n---\n-\n+<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> using\n+the cluster update settings API, you will also need a user with the `all`\n+cluster privilege.\n \n [[ccr-getting-started-remote-cluster]]\n-==== Connecting to a remote cluster\n+==== Connect to a remote cluster\n+Connect your local cluster to a\n+<<modules-remote-clusters,remote cluster>> to begin using cross-cluster\n+replication.\n+\n+To configure a {kibana-ref}/working-remote-clusters.html[remote cluster],\n+access {kib} and go to\n+*Management > Stack Management*. In the left navigation, select\n+*Remote Clusters* to access the Remote Clusters page.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTI4NDIwOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo1Njo1MVrOHA31mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo1Njo1MVrOHA31mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY3Njg5MQ==", "bodyText": "This image is what you see when you open Remote Clusters.  Do you want to show the Add Remote Cluster page here instead so that it follows the text in the paragraph?", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470676891", "createdAt": "2020-08-14T14:56:51Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -76,19 +68,31 @@ ccr_user:\n --------------------------------------------------\n \n If you are managing\n-<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> via the\n-cluster update settings API, you will also need a user with the `all` cluster\n-privilege.\n---\n-\n+<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> using\n+the cluster update settings API, you will also need a user with the `all`\n+cluster privilege.\n \n [[ccr-getting-started-remote-cluster]]\n-==== Connecting to a remote cluster\n+==== Connect to a remote cluster\n+Connect your local cluster to a\n+<<modules-remote-clusters,remote cluster>> to begin using cross-cluster\n+replication.\n+\n+To configure a {kibana-ref}/working-remote-clusters.html[remote cluster],\n+access {kib} and go to\n+*Management > Stack Management*. In the left navigation, select\n+*Remote Clusters* to access the Remote Clusters page.\n+\n+Add a remote cluster by specifying the IP address or host name, followed by the\n+transport port of the remote cluster.\n+\n+[role=\"screenshot\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTQxMjAwOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToyNjoxNFrOHA5AHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToyNjoxNFrOHA5AHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY5NTk2Ng==", "bodyText": "side navigation", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470695966", "createdAt": "2020-08-14T15:26:14Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -201,20 +202,66 @@ PUT /server-metrics\n }\n --------------------------------------------------\n // TEST[continued]\n+====\n \n+[[ccr-enable-soft-deletes]]\n+==== Enable soft deletes on leader indices\n+<<ccr-leader-requirements,Soft deletes>> must be enabled for indices that you want to\n+use as leader indices. Soft deletes are enabled by default on new indices\n+created on or after {es} 7.0.0, so\n+*no further action is required if your cluster is running {es} 7.0.0 or later*.\n \n-[[ccr-getting-started-follower-index]]\n-==== Creating a follower index\n+include::{es-ref-dir}/ccr/index.asciidoc[tag=ccr-existing-indices-tag]\n \n-Follower indices are created with the {ref}/ccr-put-follow.html[create follower\n-API]. When you create a follower index, you must reference the\n+To enable soft deletes on indices created on versions of\n+{es} between 6.5.0 and 7.0.0, set <<ccr-index-soft-deletes,`index.soft_deletes.enabled`>> to `true`.\n+\n+[[ccr-getting-started-follower-index]]\n+==== Create a follower index\n+When you create a {kibana-ref}/managing-cross-cluster-replication.html#_create_specific_follower_indices[follower index], you\n+must reference the\n <<ccr-getting-started-remote-cluster,remote cluster>> and the\n <<ccr-getting-started-leader-index,leader index>> that you created in the remote\n cluster.\n \n+To create a follower index, access {kib} and go to\n+*Management > Stack Management*. In the left navigation, select", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 178}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTQzMzczOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTozMjoyMVrOHA5M_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxODowNjoyNVrOHA96-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY5OTI2MA==", "bodyText": "It would be useful if this image included more than one name.  However,  it might also be more interesting to the user to show the Add follower page with some default values and place it after step 2.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470699260", "createdAt": "2020-08-14T15:32:21Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -201,20 +202,66 @@ PUT /server-metrics\n }\n --------------------------------------------------\n // TEST[continued]\n+====\n \n+[[ccr-enable-soft-deletes]]\n+==== Enable soft deletes on leader indices\n+<<ccr-leader-requirements,Soft deletes>> must be enabled for indices that you want to\n+use as leader indices. Soft deletes are enabled by default on new indices\n+created on or after {es} 7.0.0, so\n+*no further action is required if your cluster is running {es} 7.0.0 or later*.\n \n-[[ccr-getting-started-follower-index]]\n-==== Creating a follower index\n+include::{es-ref-dir}/ccr/index.asciidoc[tag=ccr-existing-indices-tag]\n \n-Follower indices are created with the {ref}/ccr-put-follow.html[create follower\n-API]. When you create a follower index, you must reference the\n+To enable soft deletes on indices created on versions of\n+{es} between 6.5.0 and 7.0.0, set <<ccr-index-soft-deletes,`index.soft_deletes.enabled`>> to `true`.\n+\n+[[ccr-getting-started-follower-index]]\n+==== Create a follower index\n+When you create a {kibana-ref}/managing-cross-cluster-replication.html#_create_specific_follower_indices[follower index], you\n+must reference the\n <<ccr-getting-started-remote-cluster,remote cluster>> and the\n <<ccr-getting-started-leader-index,leader index>> that you created in the remote\n cluster.\n \n+To create a follower index, access {kib} and go to\n+*Management > Stack Management*. In the left navigation, select\n+*Cross Cluster Replication* and choose the *Follower Indices* tab.\n+\n+. Choose the remote cluster containing the index you want to replicate, which\n+is `leader` if you are following the tutorial.\n+. Enter the name of the leader index, which is `server-metrics` if you are\n+following the tutorial.\n+\n+The follower index is initialized using the\n+<<ccr-remote-recovery, remote recovery>>\n+process, which transfers the existing Lucene segment files from the leader\n+index to the follower index. The index status changes to *Paused*. When the\n+remote recovery process is complete, the index following begins and the status\n+changes to *Active*.\n+\n+When you index documents into your leader index, the documents are replicated\n+in the follower index.\n+\n+[role=\"screenshot\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 196}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc3NjU3MQ==", "bodyText": "I'll add a screenshot after step 2 and also add more follower indices for this screenshot \ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470776571", "createdAt": "2020-08-14T18:06:25Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -201,20 +202,66 @@ PUT /server-metrics\n }\n --------------------------------------------------\n // TEST[continued]\n+====\n \n+[[ccr-enable-soft-deletes]]\n+==== Enable soft deletes on leader indices\n+<<ccr-leader-requirements,Soft deletes>> must be enabled for indices that you want to\n+use as leader indices. Soft deletes are enabled by default on new indices\n+created on or after {es} 7.0.0, so\n+*no further action is required if your cluster is running {es} 7.0.0 or later*.\n \n-[[ccr-getting-started-follower-index]]\n-==== Creating a follower index\n+include::{es-ref-dir}/ccr/index.asciidoc[tag=ccr-existing-indices-tag]\n \n-Follower indices are created with the {ref}/ccr-put-follow.html[create follower\n-API]. When you create a follower index, you must reference the\n+To enable soft deletes on indices created on versions of\n+{es} between 6.5.0 and 7.0.0, set <<ccr-index-soft-deletes,`index.soft_deletes.enabled`>> to `true`.\n+\n+[[ccr-getting-started-follower-index]]\n+==== Create a follower index\n+When you create a {kibana-ref}/managing-cross-cluster-replication.html#_create_specific_follower_indices[follower index], you\n+must reference the\n <<ccr-getting-started-remote-cluster,remote cluster>> and the\n <<ccr-getting-started-leader-index,leader index>> that you created in the remote\n cluster.\n \n+To create a follower index, access {kib} and go to\n+*Management > Stack Management*. In the left navigation, select\n+*Cross Cluster Replication* and choose the *Follower Indices* tab.\n+\n+. Choose the remote cluster containing the index you want to replicate, which\n+is `leader` if you are following the tutorial.\n+. Enter the name of the leader index, which is `server-metrics` if you are\n+following the tutorial.\n+\n+The follower index is initialized using the\n+<<ccr-remote-recovery, remote recovery>>\n+process, which transfers the existing Lucene segment files from the leader\n+index to the follower index. The index status changes to *Paused*. When the\n+remote recovery process is complete, the index following begins and the status\n+changes to *Active*.\n+\n+When you index documents into your leader index, the documents are replicated\n+in the follower index.\n+\n+[role=\"screenshot\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY5OTI2MA=="}, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 196}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTQ0NzQ3OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTozNjozOVrOHA5Vng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTozNjozOVrOHA5Vng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcwMTQ3MA==", "bodyText": "Instead of this image, suggest showing the Add auto follow UI with the values filled out per your tutorial.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470701470", "createdAt": "2020-08-14T15:36:39Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -235,53 +282,65 @@ PUT /server-metrics-copy/_ccr/follow?wait_for_active_shards=1\n \n //////////////////////////\n \n-The follower index is initialized using the <<remote-recovery, remote recovery>>\n-process. The remote recovery process transfers the existing Lucene segment files\n-from the leader to the follower. When the remote recovery process is complete,\n-the index following begins.\n-\n-Now when you index documents into your leader index, you will see these\n-documents replicated in the follower index. You can\n-inspect the status of replication using the\n-{ref}/ccr-get-follow-stats.html[get follower stats API].\n-\n-Alternatively, you can {kibana-ref}/managing-cross-cluster-replication.html#_create_specific_follower_indices[manage follower indices] using {kib}:\n-\n-. From the {kib} menu, click *Management -> Stack Management*.\n-. Under *Data*, select *Cross Cluster Replication*.\n-. Choose the *Follower indices* tab.\n-\n-[role=\"screenshot\"]\n-image::images/ccr-follower-index.png[\"The Cross-Cluster Replication page in {kib}\"]\n+Use the\n+<<ccr-get-follow-stats,get follower stats API>> to inspect the status of\n+replication\n \n //////////////////////////\n \n [source,console]\n --------------------------------------------------\n-POST /server-metrics-copy/_ccr/pause_follow\n+POST /server-metrics-follower/_ccr/pause_follow\n \n-POST /server-metrics-copy/_close\n+POST /server-metrics-follower/_close\n \n-POST /server-metrics-copy/_ccr/unfollow\n+POST /server-metrics-follower/_ccr/unfollow\n --------------------------------------------------\n // TEST[continued]\n \n //////////////////////////\n-\n+====\n \n [[ccr-getting-started-auto-follow]]\n ==== Automatically create follower indices\n+Create <<ccr-auto-follow,auto-follow patterns>> to automatically follow time\n+series indices that are periodically created in a remote cluster (such as daily\n+{beats} indices).\n \n-The <<ccr-auto-follow,auto-follow>> feature in {ccr} helps for time series use\n-cases where you want to follow new indices that are periodically created in the\n-remote cluster (such as daily Beats indices). Auto-following is configured using\n-the {ref}/ccr-put-auto-follow-pattern.html[create auto-follow pattern API]. With\n-an auto-follow pattern, you reference the\n-<<ccr-getting-started-remote-cluster,remote cluster>> that you connected your\n-local cluster to. You must also specify a collection of  patterns that match the\n+With an auto-follow pattern, you reference the\n+<<ccr-getting-started-remote-cluster,remote cluster>> connected to your\n+local cluster. You must also specify a collection of patterns that match the\n indices you want to automatically follow.\n \n-For example:\n+// tag::ccr-create-auto-follow-pattern-tag[]\n+To create follower indices from an {kibana-ref}/managing-cross-cluster-replication.html#_create_follower_indices_from_an_auto_follow_pattern[auto-follow pattern],\n+access {kib} on your remote cluster and go to\n+*Management > Stack Management*. In the left navigation, select\n+*Cross Cluster Replication* and choose the *Auto-follow patterns* tab.\n+\n+[role=\"screenshot\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 289}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTQ1MDEzOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTozNzoyMlrOHA5XGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTozNzoyMlrOHA5XGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcwMTg1MQ==", "bodyText": "Suggest making this a numbered list as in the previous section.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470701851", "createdAt": "2020-08-14T15:37:22Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -235,53 +282,65 @@ PUT /server-metrics-copy/_ccr/follow?wait_for_active_shards=1\n \n //////////////////////////\n \n-The follower index is initialized using the <<remote-recovery, remote recovery>>\n-process. The remote recovery process transfers the existing Lucene segment files\n-from the leader to the follower. When the remote recovery process is complete,\n-the index following begins.\n-\n-Now when you index documents into your leader index, you will see these\n-documents replicated in the follower index. You can\n-inspect the status of replication using the\n-{ref}/ccr-get-follow-stats.html[get follower stats API].\n-\n-Alternatively, you can {kibana-ref}/managing-cross-cluster-replication.html#_create_specific_follower_indices[manage follower indices] using {kib}:\n-\n-. From the {kib} menu, click *Management -> Stack Management*.\n-. Under *Data*, select *Cross Cluster Replication*.\n-. Choose the *Follower indices* tab.\n-\n-[role=\"screenshot\"]\n-image::images/ccr-follower-index.png[\"The Cross-Cluster Replication page in {kib}\"]\n+Use the\n+<<ccr-get-follow-stats,get follower stats API>> to inspect the status of\n+replication\n \n //////////////////////////\n \n [source,console]\n --------------------------------------------------\n-POST /server-metrics-copy/_ccr/pause_follow\n+POST /server-metrics-follower/_ccr/pause_follow\n \n-POST /server-metrics-copy/_close\n+POST /server-metrics-follower/_close\n \n-POST /server-metrics-copy/_ccr/unfollow\n+POST /server-metrics-follower/_ccr/unfollow\n --------------------------------------------------\n // TEST[continued]\n \n //////////////////////////\n-\n+====\n \n [[ccr-getting-started-auto-follow]]\n ==== Automatically create follower indices\n+Create <<ccr-auto-follow,auto-follow patterns>> to automatically follow time\n+series indices that are periodically created in a remote cluster (such as daily\n+{beats} indices).\n \n-The <<ccr-auto-follow,auto-follow>> feature in {ccr} helps for time series use\n-cases where you want to follow new indices that are periodically created in the\n-remote cluster (such as daily Beats indices). Auto-following is configured using\n-the {ref}/ccr-put-auto-follow-pattern.html[create auto-follow pattern API]. With\n-an auto-follow pattern, you reference the\n-<<ccr-getting-started-remote-cluster,remote cluster>> that you connected your\n-local cluster to. You must also specify a collection of  patterns that match the\n+With an auto-follow pattern, you reference the\n+<<ccr-getting-started-remote-cluster,remote cluster>> connected to your\n+local cluster. You must also specify a collection of patterns that match the\n indices you want to automatically follow.\n \n-For example:\n+// tag::ccr-create-auto-follow-pattern-tag[]\n+To create follower indices from an {kibana-ref}/managing-cross-cluster-replication.html#_create_follower_indices_from_an_auto_follow_pattern[auto-follow pattern],\n+access {kib} on your remote cluster and go to\n+*Management > Stack Management*. In the left navigation, select\n+*Cross Cluster Replication* and choose the *Auto-follow patterns* tab.\n+\n+[role=\"screenshot\"]\n+image::images/auto-follow-patterns.png[\"The Auto-follow patterns page in {kib}\"]\n+\n+* Enter a name for the auto-follow pattern. For this tutorial, enter `beats`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 292}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTQ1MTE0OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTozNzozOVrOHA5XvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTozNzozOVrOHA5XvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcwMjAxMw==", "bodyText": "side navigation", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470702013", "createdAt": "2020-08-14T15:37:39Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -235,53 +282,65 @@ PUT /server-metrics-copy/_ccr/follow?wait_for_active_shards=1\n \n //////////////////////////\n \n-The follower index is initialized using the <<remote-recovery, remote recovery>>\n-process. The remote recovery process transfers the existing Lucene segment files\n-from the leader to the follower. When the remote recovery process is complete,\n-the index following begins.\n-\n-Now when you index documents into your leader index, you will see these\n-documents replicated in the follower index. You can\n-inspect the status of replication using the\n-{ref}/ccr-get-follow-stats.html[get follower stats API].\n-\n-Alternatively, you can {kibana-ref}/managing-cross-cluster-replication.html#_create_specific_follower_indices[manage follower indices] using {kib}:\n-\n-. From the {kib} menu, click *Management -> Stack Management*.\n-. Under *Data*, select *Cross Cluster Replication*.\n-. Choose the *Follower indices* tab.\n-\n-[role=\"screenshot\"]\n-image::images/ccr-follower-index.png[\"The Cross-Cluster Replication page in {kib}\"]\n+Use the\n+<<ccr-get-follow-stats,get follower stats API>> to inspect the status of\n+replication\n \n //////////////////////////\n \n [source,console]\n --------------------------------------------------\n-POST /server-metrics-copy/_ccr/pause_follow\n+POST /server-metrics-follower/_ccr/pause_follow\n \n-POST /server-metrics-copy/_close\n+POST /server-metrics-follower/_close\n \n-POST /server-metrics-copy/_ccr/unfollow\n+POST /server-metrics-follower/_ccr/unfollow\n --------------------------------------------------\n // TEST[continued]\n \n //////////////////////////\n-\n+====\n \n [[ccr-getting-started-auto-follow]]\n ==== Automatically create follower indices\n+Create <<ccr-auto-follow,auto-follow patterns>> to automatically follow time\n+series indices that are periodically created in a remote cluster (such as daily\n+{beats} indices).\n \n-The <<ccr-auto-follow,auto-follow>> feature in {ccr} helps for time series use\n-cases where you want to follow new indices that are periodically created in the\n-remote cluster (such as daily Beats indices). Auto-following is configured using\n-the {ref}/ccr-put-auto-follow-pattern.html[create auto-follow pattern API]. With\n-an auto-follow pattern, you reference the\n-<<ccr-getting-started-remote-cluster,remote cluster>> that you connected your\n-local cluster to. You must also specify a collection of  patterns that match the\n+With an auto-follow pattern, you reference the\n+<<ccr-getting-started-remote-cluster,remote cluster>> connected to your\n+local cluster. You must also specify a collection of patterns that match the\n indices you want to automatically follow.\n \n-For example:\n+// tag::ccr-create-auto-follow-pattern-tag[]\n+To create follower indices from an {kibana-ref}/managing-cross-cluster-replication.html#_create_follower_indices_from_an_auto_follow_pattern[auto-follow pattern],\n+access {kib} on your remote cluster and go to\n+*Management > Stack Management*. In the left navigation, select", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 286}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTUxNTY5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/managing.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTo1Njo0NlrOHA5_ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTo1Njo0NlrOHA5_ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcxMjIwMg==", "bodyText": "select the name of the follower index in Index Management.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470712202", "createdAt": "2020-08-14T15:56:46Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/managing.asciidoc", "diffHunk": "@@ -0,0 +1,164 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+\n+//////////////////////////\n+\n+[source,console]\n+--------------------------------------------------\n+PUT /follower_index/_ccr/follow?wait_for_active_shards=1\n+{\n+  \"remote_cluster\" : \"remote_cluster\",\n+  \"leader_index\" : \"leader_index\"\n+}\n+--------------------------------------------------\n+// TESTSETUP\n+// TEST[setup:remote_cluster_and_leader_index]\n+\n+[source,console]\n+--------------------------------------------------\n+POST /follower_index/_ccr/pause_follow\n+--------------------------------------------------\n+// TEARDOWN\n+\n+//////////////////////////\n+\n+[[ccr-managing]]\n+=== Manage {ccr}\n+Use the following information to manage {ccr} tasks, such as inspecting\n+replication progress, pausing and resuming replication, recreating a follower\n+index, and terminating replication.\n+\n+[[ccr-inspect-progress]]\n+==== Inspect replication statistics\n+To inspect the progress of replication for a follower index and view\n+detailed shard statistics, access {kib} and go to\n+*Management > Stack Management*. In the left navigation,\n+select *Cross Cluster Replication* and choose the *Follower indices* tab.\n+\n+Select the name of the follower index you want to view replication details\n+for. The slide-out panel shows settings and replication statistics for the\n+follower index, including read and write operations that are managed by the\n+follower shard.\n+\n+To view more detailed statistics, click *View in Index Management*, and\n+then select the name of the follower index on the Index Management page.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTUxODQ3OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/managing.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTo1NzoyN1rOHA6BDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTo1NzoyN1rOHA6BDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcxMjU4OQ==", "bodyText": "Maybe \"Open the tabs for detailed statistics about the follower index.\"", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470712589", "createdAt": "2020-08-14T15:57:27Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/managing.asciidoc", "diffHunk": "@@ -0,0 +1,164 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+\n+//////////////////////////\n+\n+[source,console]\n+--------------------------------------------------\n+PUT /follower_index/_ccr/follow?wait_for_active_shards=1\n+{\n+  \"remote_cluster\" : \"remote_cluster\",\n+  \"leader_index\" : \"leader_index\"\n+}\n+--------------------------------------------------\n+// TESTSETUP\n+// TEST[setup:remote_cluster_and_leader_index]\n+\n+[source,console]\n+--------------------------------------------------\n+POST /follower_index/_ccr/pause_follow\n+--------------------------------------------------\n+// TEARDOWN\n+\n+//////////////////////////\n+\n+[[ccr-managing]]\n+=== Manage {ccr}\n+Use the following information to manage {ccr} tasks, such as inspecting\n+replication progress, pausing and resuming replication, recreating a follower\n+index, and terminating replication.\n+\n+[[ccr-inspect-progress]]\n+==== Inspect replication statistics\n+To inspect the progress of replication for a follower index and view\n+detailed shard statistics, access {kib} and go to\n+*Management > Stack Management*. In the left navigation,\n+select *Cross Cluster Replication* and choose the *Follower indices* tab.\n+\n+Select the name of the follower index you want to view replication details\n+for. The slide-out panel shows settings and replication statistics for the\n+follower index, including read and write operations that are managed by the\n+follower shard.\n+\n+To view more detailed statistics, click *View in Index Management*, and\n+then select the name of the follower index on the Index Management page.\n+Each of the tabs provide detailed statistics about the follower index.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTU0NzQxOnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/managing.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNjowNjowOVrOHA6SqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNjowNjowOVrOHA6SqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcxNzA5Ng==", "bodyText": "side navigation", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470717096", "createdAt": "2020-08-14T16:06:09Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/managing.asciidoc", "diffHunk": "@@ -0,0 +1,164 @@\n+[role=\"xpack\"]\n+[testenv=\"platinum\"]\n+\n+//////////////////////////\n+\n+[source,console]\n+--------------------------------------------------\n+PUT /follower_index/_ccr/follow?wait_for_active_shards=1\n+{\n+  \"remote_cluster\" : \"remote_cluster\",\n+  \"leader_index\" : \"leader_index\"\n+}\n+--------------------------------------------------\n+// TESTSETUP\n+// TEST[setup:remote_cluster_and_leader_index]\n+\n+[source,console]\n+--------------------------------------------------\n+POST /follower_index/_ccr/pause_follow\n+--------------------------------------------------\n+// TEARDOWN\n+\n+//////////////////////////\n+\n+[[ccr-managing]]\n+=== Manage {ccr}\n+Use the following information to manage {ccr} tasks, such as inspecting\n+replication progress, pausing and resuming replication, recreating a follower\n+index, and terminating replication.\n+\n+[[ccr-inspect-progress]]\n+==== Inspect replication statistics\n+To inspect the progress of replication for a follower index and view\n+detailed shard statistics, access {kib} and go to\n+*Management > Stack Management*. In the left navigation,\n+select *Cross Cluster Replication* and choose the *Follower indices* tab.\n+\n+Select the name of the follower index you want to view replication details\n+for. The slide-out panel shows settings and replication statistics for the\n+follower index, including read and write operations that are managed by the\n+follower shard.\n+\n+To view more detailed statistics, click *View in Index Management*, and\n+then select the name of the follower index on the Index Management page.\n+Each of the tabs provide detailed statistics about the follower index.\n+\n+[%collapsible]\n+.API example\n+====\n+Use the <<ccr-get-follow-stats,get follower stats API>> to inspect replication\n+progress at the shard level. This API provides insight into the read and writes\n+managed by the follower shard. The API also reports read exceptions that can be\n+retried and fatal exceptions that require user intervention.\n+====\n+\n+[[ccr-pause-replication]]\n+==== Pause and resume replication\n+To pause and resume replication of the leader index, access {kib} and choose\n+*Management > Stack Management*. In the left navigation, select\n+*Cross Cluster Replication* and choose the *Follower indices* tab.\n+\n+Select the follower index you want to pause and choose *Manage > Pause Replication*. The follower index status changes to Paused.\n+\n+To resume replication, select the follower index and choose\n+*Resume replication*.\n+\n+[%collapsible]\n+.API example\n+====\n+You can pause replication with the\n+<<ccr-post-pause-follow,pause follower API>> and then later resume\n+replication with the <<ccr-post-resume-follow,resume follower API>>.\n+Using these APIs in tandem enables you to adjust the read and write parameters\n+on the follower shard task if your initial configuration is not suitable for\n+your use case.\n+====\n+\n+[[ccr-recreate-follower-index]]\n+==== Recreate a follower index\n+When a document is updated or deleted, the underlying operation is retained in\n+the Lucene index for a period of time defined by the\n+<<ccr-index-soft-deletes-retention-period,`index.soft_deletes.retention_lease.period`>> parameter. You configure\n+this setting on the <<ccr-leader-requirements,leader index>>.\n+\n+When a follower index starts, it acquires a retention lease from\n+the leader index. This lease informs the leader that it should not allow a soft\n+delete to be pruned until either the follower indicates that it has received\n+the operation, or until the lease expires.\n+\n+If a follower index falls sufficiently behind a leader and cannot\n+replicate operations, {es} reports an `indices[].fatal_exception` error. To\n+resolve the issue, recreate the follower index. When the new follow index\n+starts, the <<ccr-remote-recovery, remote recovery>> process recopies the\n+Lucene segment files from the leader.\n+\n+IMPORTANT: Recreating the follower index is a destructive action. All existing\n+Lucene segment files are deleted on the cluster containing the follower index.\n+\n+To recreate a follower index, access {kib} and choose\n+*Management > Stack Management*. In the left navigation, select\n+*Cross Cluster Replication* and choose the *Follower indices* tab.\n+\n+[role=\"screenshot\"]\n+image::images/ccr-follower-index.png[\"The Cross-Cluster Replication page in {kib}\"]\n+\n+Select the follower index and pause replication. When the follower index status\n+changes to Paused, reselect the follower index and choose to unfollow the\n+leader index.\n+\n+The follower index will be converted to a standard index and will no longer\n+display on the Cross-Cluster Replication page.\n+\n+In the left navigation, choose *Index Management*. Select the follower index", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTU3MzM1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/auto-follow.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNjoxNDoxMVrOHA6ipg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDoxNTo0N1rOHBCJSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcyMTE5MA==", "bodyText": "This info is also on a previous page.  Would a link suffice?", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470721190", "createdAt": "2020-08-14T16:14:11Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/auto-follow.asciidoc", "diffHunk": "@@ -1,32 +1,80 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-auto-follow]]\n-=== Automatically following indices\n-\n-In time series use cases where you want to follow new indices that are\n-periodically created (such as daily Beats indices), manually configuring follower\n-indices for each new leader index can be an operational burden. The auto-follow\n-functionality in {ccr} is aimed at easing this burden. With the auto-follow\n-functionality, you can specify that new indices in a remote cluster that have a \n-name that matches a pattern are automatically followed.\n-\n-==== Managing auto-follow patterns\n-\n-You can add a new auto-follow pattern configuration with the\n-{ref}/ccr-put-auto-follow-pattern.html[create auto-follow pattern API].  When you create\n-a new auto-follow pattern configuration, you are configuring a collection of\n-patterns against a single remote cluster. Any time a new index with a name that \n-matches one of the patterns in the collection is created in the remote cluster,\n-a follower index is configured in the local cluster. The follower index uses the \n-new index as its leader index.\n-\n-You can inspect all configured auto-follow pattern collections with the\n-{ref}/ccr-get-auto-follow-pattern.html[get auto-follow pattern API]. Auto-follow patterns\n-can be paused using the {ref}/ccr-pause-auto-follow-pattern.html[pause auto-follow pattern API]\n- and can be resumed using the {ref}/ccr-resume-auto-follow-pattern.html[resume auto-follow pattern API].\n-  To delete a configured auto-follow pattern collection, use the\n-{ref}/ccr-delete-auto-follow-pattern.html[delete auto-follow pattern API].\n-\n-Since auto-follow functionality is handled automatically in the background on\n-your behalf, error reporting is done through logs on the elected master node\n-and through the {ref}/ccr-get-stats.html[{ccr} stats API].\n+=== Manage auto-follow patterns\n+To replicate time series indices, you configure an auto-follow pattern so that\n+each new index in the series is replicated automatically. Whenever the name of\n+a new index on the remote cluster matches the auto-follow pattern, a\n+corresponding follower index is added to the local cluster.\n+\n+[[ccr-auto-follow-create]]\n+==== Create auto-follow patterns\n+When you create an auto-follow pattern, you are configuring a collection of\n+patterns against a single remote cluster. When an index is created in the\n+remote cluster with a name that matches one of the patterns in the collection,\n+a follower index is configured in the local cluster. The follower\n+index uses the new index as its leader index.\n+\n+include::{es-repo-dir}/ccr/getting-started.asciidoc[tag=ccr-create-auto-follow-pattern-tag]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg0NTc3MQ==", "bodyText": "Hmm, I was going for completeness, but I think that a link to that task in the Set up CCR page works well.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470845771", "createdAt": "2020-08-14T20:15:47Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/auto-follow.asciidoc", "diffHunk": "@@ -1,32 +1,80 @@\n [role=\"xpack\"]\n [testenv=\"platinum\"]\n [[ccr-auto-follow]]\n-=== Automatically following indices\n-\n-In time series use cases where you want to follow new indices that are\n-periodically created (such as daily Beats indices), manually configuring follower\n-indices for each new leader index can be an operational burden. The auto-follow\n-functionality in {ccr} is aimed at easing this burden. With the auto-follow\n-functionality, you can specify that new indices in a remote cluster that have a \n-name that matches a pattern are automatically followed.\n-\n-==== Managing auto-follow patterns\n-\n-You can add a new auto-follow pattern configuration with the\n-{ref}/ccr-put-auto-follow-pattern.html[create auto-follow pattern API].  When you create\n-a new auto-follow pattern configuration, you are configuring a collection of\n-patterns against a single remote cluster. Any time a new index with a name that \n-matches one of the patterns in the collection is created in the remote cluster,\n-a follower index is configured in the local cluster. The follower index uses the \n-new index as its leader index.\n-\n-You can inspect all configured auto-follow pattern collections with the\n-{ref}/ccr-get-auto-follow-pattern.html[get auto-follow pattern API]. Auto-follow patterns\n-can be paused using the {ref}/ccr-pause-auto-follow-pattern.html[pause auto-follow pattern API]\n- and can be resumed using the {ref}/ccr-resume-auto-follow-pattern.html[resume auto-follow pattern API].\n-  To delete a configured auto-follow pattern collection, use the\n-{ref}/ccr-delete-auto-follow-pattern.html[delete auto-follow pattern API].\n-\n-Since auto-follow functionality is handled automatically in the background on\n-your behalf, error reporting is done through logs on the elected master node\n-and through the {ref}/ccr-get-stats.html[{ccr} stats API].\n+=== Manage auto-follow patterns\n+To replicate time series indices, you configure an auto-follow pattern so that\n+each new index in the series is replicated automatically. Whenever the name of\n+a new index on the remote cluster matches the auto-follow pattern, a\n+corresponding follower index is added to the local cluster.\n+\n+[[ccr-auto-follow-create]]\n+==== Create auto-follow patterns\n+When you create an auto-follow pattern, you are configuring a collection of\n+patterns against a single remote cluster. When an index is created in the\n+remote cluster with a name that matches one of the patterns in the collection,\n+a follower index is configured in the local cluster. The follower\n+index uses the new index as its leader index.\n+\n+include::{es-repo-dir}/ccr/getting-started.asciidoc[tag=ccr-create-auto-follow-pattern-tag]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcyMTE5MA=="}, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTYxMzQ3OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/getting-started.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNjoyNjowMlrOHA666A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNjoyNjowMlrOHA666A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcyNzQwMA==", "bodyText": "Cross-Cluster Replication", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r470727400", "createdAt": "2020-08-14T16:26:02Z", "author": {"login": "gchaps"}, "path": "docs/reference/ccr/getting-started.asciidoc", "diffHunk": "@@ -201,20 +202,66 @@ PUT /server-metrics\n }\n --------------------------------------------------\n // TEST[continued]\n+====\n \n+[[ccr-enable-soft-deletes]]\n+==== Enable soft deletes on leader indices\n+<<ccr-leader-requirements,Soft deletes>> must be enabled for indices that you want to\n+use as leader indices. Soft deletes are enabled by default on new indices\n+created on or after {es} 7.0.0, so\n+*no further action is required if your cluster is running {es} 7.0.0 or later*.\n \n-[[ccr-getting-started-follower-index]]\n-==== Creating a follower index\n+include::{es-ref-dir}/ccr/index.asciidoc[tag=ccr-existing-indices-tag]\n \n-Follower indices are created with the {ref}/ccr-put-follow.html[create follower\n-API]. When you create a follower index, you must reference the\n+To enable soft deletes on indices created on versions of\n+{es} between 6.5.0 and 7.0.0, set <<ccr-index-soft-deletes,`index.soft_deletes.enabled`>> to `true`.\n+\n+[[ccr-getting-started-follower-index]]\n+==== Create a follower index\n+When you create a {kibana-ref}/managing-cross-cluster-replication.html#_create_specific_follower_indices[follower index], you\n+must reference the\n <<ccr-getting-started-remote-cluster,remote cluster>> and the\n <<ccr-getting-started-leader-index,leader index>> that you created in the remote\n cluster.\n \n+To create a follower index, access {kib} and go to\n+*Management > Stack Management*. In the left navigation, select\n+*Cross Cluster Replication* and choose the *Follower Indices* tab.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa6578823cdadc4e2057e160ce5ade344b55a33"}, "originalPosition": 179}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzM2ODQ5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/index.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowMDoyMlrOHBseVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowMDoyMlrOHBseVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUzOTI4Ng==", "bodyText": "form -> from?", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r471539286", "createdAt": "2020-08-17T15:00:22Z", "author": {"login": "dnhatn"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,300 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can replicate indices across clusters to:\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-This guide provides an overview of {ccr}:\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series indices.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-multi-cluster-architectures]]\n+=== Multi-cluster architectures\n+Use {ccr} to construct several multi-cluster architectures within the Elastic\n+Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to maintain multiple copies of the\n+dataset close to the application servers (and users), and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for minimizing network\n+traffic and latency in querying multiple geo-distributed {es} clusters, or for\n+preventing search load from interfering with indexing by offloading search to a\n+secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[discrete]\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, your application can use the disaster recovery datacenter if the\n+production datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]\n+\n+[discrete]\n+[[ccr-chained-replication]]\n+===== Chained replication\n+You can replicate data across multiple datacenters to form a replication\n+chain. In the following diagram, Datacenter A contains the leader index.\n+Datacenter B replicates data from Datacenter A, and Datacenter C replicates\n+from the follower indices in Datacenter B. The connection between these\n+datacenters forms a chained replication pattern.\n+\n+image::images/ccr-arch-chain-dcs.png[Three datacenters connected to form a replication chain]\n+\n+[discrete]\n+[[ccr-bi-directional-replication]]\n+===== Bi-directional replication\n+In a https://www.elastic.co/blog/bi-directional-replication-with-elasticsearch-cross-cluster-replication-ccr[bi-directional replication] setup, all clusters have access to view\n+all data, and all clusters have an index to write to without manually\n+implementing failover. Applications can write to the local index within each\n+datacenter, and read across multiple indices for a global view of all\n+information.\n+\n+This configuration requires no manual intervention when a cluster or datacenter\n+is unavailable. In the following diagram, if Datacenter A is unavailable, you can continue using Datacenter B without manual failover. When Datacenter A\n+comes online, replication resumes between the clusters.\n+\n+image::images/ccr-arch-bi-directional.png[Bi-directional configuration where each cluster contains both a leader index and follower indices]\n+\n+NOTE: This configuration is useful for index-only workloads, where no updates\n+to document values occur. In this configuration, documents indexed by {es} are\n+immutable. Clients are located in each datacenter alongside the {es}\n+cluster, and do not communicate with clusters in different datacenters.\n+\n+[discrete]\n+[[ccr-data-locality]]\n+==== Data locality\n+Bringing data closer to your users or application server can reduce latency\n+and response time. This methodology also applies when replicating data in {es}.\n+For example, you can replicate a product catalog or reference dataset to 20 or\n+more datacenters around the world to minimize the distance between the data and\n+the application server.\n+\n+In the following diagram, data is replicated from one datacenter to three\n+additional datacenters, each in their own region. The central datacenter\n+contains the leader index, and the additional datacenters contain follower\n+indices that replicate data in that particular region. This configuration\n+puts data closer to the application accessing it.\n+\n+image::images/ccr-arch-data-locality.png[A centralized datacenter replicated across three other datacenters, each in their own region]\n+\n+[discrete]\n+[[ccr-centralized-reporting]]\n+==== Centralized reporting\n+Using a centralized reporting cluster is useful when querying across a large\n+network is inefficient. In this configuration, you replicate data from many\n+smaller clusters to the centralized reporting cluster.\n+\n+For example, a large global bank might have 100 {es} clusters around the world\n+that are distributed across different regions for each bank branch. Using\n+{ccr}, the bank can replicate events from all 100 banks to a central cluster to\n+analyze and aggregate events locally for reporting. Rather than maintaining a\n+mirrored cluster, the bank can use {ccr} to replicate specific indices.\n+\n+In the following diagram, data from three datacenters in different regions is\n+replicated to a centralized reporting cluster. This configuration enables you\n+to copy data from regional hubs to a central cluster, where you can run all\n+reports locally.\n+\n+image::images/ccr-arch-central-reporting.png[Three clusters in different regions sending data to a centralized reporting cluster for analysis]\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb6d9c2c0dadf44ce5488cd8e7c1f8a2b16f223a"}, "originalPosition": 175}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzM4MjI3OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/index.asciidoc", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowMzozMlrOHBsmlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxOTowMTo1MFrOHB3MZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MTM5Ng==", "bodyText": "All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.`\n\nI am confused about this.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r471541396", "createdAt": "2020-08-17T15:03:32Z", "author": {"login": "dnhatn"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,300 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can replicate indices across clusters to:\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-This guide provides an overview of {ccr}:\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series indices.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-multi-cluster-architectures]]\n+=== Multi-cluster architectures\n+Use {ccr} to construct several multi-cluster architectures within the Elastic\n+Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to maintain multiple copies of the\n+dataset close to the application servers (and users), and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for minimizing network\n+traffic and latency in querying multiple geo-distributed {es} clusters, or for\n+preventing search load from interfering with indexing by offloading search to a\n+secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[discrete]\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, your application can use the disaster recovery datacenter if the\n+production datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]\n+\n+[discrete]\n+[[ccr-chained-replication]]\n+===== Chained replication\n+You can replicate data across multiple datacenters to form a replication\n+chain. In the following diagram, Datacenter A contains the leader index.\n+Datacenter B replicates data from Datacenter A, and Datacenter C replicates\n+from the follower indices in Datacenter B. The connection between these\n+datacenters forms a chained replication pattern.\n+\n+image::images/ccr-arch-chain-dcs.png[Three datacenters connected to form a replication chain]\n+\n+[discrete]\n+[[ccr-bi-directional-replication]]\n+===== Bi-directional replication\n+In a https://www.elastic.co/blog/bi-directional-replication-with-elasticsearch-cross-cluster-replication-ccr[bi-directional replication] setup, all clusters have access to view\n+all data, and all clusters have an index to write to without manually\n+implementing failover. Applications can write to the local index within each\n+datacenter, and read across multiple indices for a global view of all\n+information.\n+\n+This configuration requires no manual intervention when a cluster or datacenter\n+is unavailable. In the following diagram, if Datacenter A is unavailable, you can continue using Datacenter B without manual failover. When Datacenter A\n+comes online, replication resumes between the clusters.\n+\n+image::images/ccr-arch-bi-directional.png[Bi-directional configuration where each cluster contains both a leader index and follower indices]\n+\n+NOTE: This configuration is useful for index-only workloads, where no updates\n+to document values occur. In this configuration, documents indexed by {es} are\n+immutable. Clients are located in each datacenter alongside the {es}\n+cluster, and do not communicate with clusters in different datacenters.\n+\n+[discrete]\n+[[ccr-data-locality]]\n+==== Data locality\n+Bringing data closer to your users or application server can reduce latency\n+and response time. This methodology also applies when replicating data in {es}.\n+For example, you can replicate a product catalog or reference dataset to 20 or\n+more datacenters around the world to minimize the distance between the data and\n+the application server.\n+\n+In the following diagram, data is replicated from one datacenter to three\n+additional datacenters, each in their own region. The central datacenter\n+contains the leader index, and the additional datacenters contain follower\n+indices that replicate data in that particular region. This configuration\n+puts data closer to the application accessing it.\n+\n+image::images/ccr-arch-data-locality.png[A centralized datacenter replicated across three other datacenters, each in their own region]\n+\n+[discrete]\n+[[ccr-centralized-reporting]]\n+==== Centralized reporting\n+Using a centralized reporting cluster is useful when querying across a large\n+network is inefficient. In this configuration, you replicate data from many\n+smaller clusters to the centralized reporting cluster.\n+\n+For example, a large global bank might have 100 {es} clusters around the world\n+that are distributed across different regions for each bank branch. Using\n+{ccr}, the bank can replicate events from all 100 banks to a central cluster to\n+analyze and aggregate events locally for reporting. Rather than maintaining a\n+mirrored cluster, the bank can use {ccr} to replicate specific indices.\n+\n+In the following diagram, data from three datacenters in different regions is\n+replicated to a centralized reporting cluster. This configuration enables you\n+to copy data from regional hubs to a central cluster, where you can run all\n+reports locally.\n+\n+image::images/ccr-arch-central-reporting.png[Three clusters in different regions sending data to a centralized reporting cluster for analysis]\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb6d9c2c0dadf44ce5488cd8e7c1f8a2b16f223a"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4Nzc2MQ==", "bodyText": "@dnhatn, that sentence is confusing. How about this version instead?\n\nAll operations on the leader are replicated by the follower, such as operations to create, update, or delete a document.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r471587761", "createdAt": "2020-08-17T16:13:39Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,300 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can replicate indices across clusters to:\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-This guide provides an overview of {ccr}:\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series indices.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-multi-cluster-architectures]]\n+=== Multi-cluster architectures\n+Use {ccr} to construct several multi-cluster architectures within the Elastic\n+Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to maintain multiple copies of the\n+dataset close to the application servers (and users), and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for minimizing network\n+traffic and latency in querying multiple geo-distributed {es} clusters, or for\n+preventing search load from interfering with indexing by offloading search to a\n+secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[discrete]\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, your application can use the disaster recovery datacenter if the\n+production datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]\n+\n+[discrete]\n+[[ccr-chained-replication]]\n+===== Chained replication\n+You can replicate data across multiple datacenters to form a replication\n+chain. In the following diagram, Datacenter A contains the leader index.\n+Datacenter B replicates data from Datacenter A, and Datacenter C replicates\n+from the follower indices in Datacenter B. The connection between these\n+datacenters forms a chained replication pattern.\n+\n+image::images/ccr-arch-chain-dcs.png[Three datacenters connected to form a replication chain]\n+\n+[discrete]\n+[[ccr-bi-directional-replication]]\n+===== Bi-directional replication\n+In a https://www.elastic.co/blog/bi-directional-replication-with-elasticsearch-cross-cluster-replication-ccr[bi-directional replication] setup, all clusters have access to view\n+all data, and all clusters have an index to write to without manually\n+implementing failover. Applications can write to the local index within each\n+datacenter, and read across multiple indices for a global view of all\n+information.\n+\n+This configuration requires no manual intervention when a cluster or datacenter\n+is unavailable. In the following diagram, if Datacenter A is unavailable, you can continue using Datacenter B without manual failover. When Datacenter A\n+comes online, replication resumes between the clusters.\n+\n+image::images/ccr-arch-bi-directional.png[Bi-directional configuration where each cluster contains both a leader index and follower indices]\n+\n+NOTE: This configuration is useful for index-only workloads, where no updates\n+to document values occur. In this configuration, documents indexed by {es} are\n+immutable. Clients are located in each datacenter alongside the {es}\n+cluster, and do not communicate with clusters in different datacenters.\n+\n+[discrete]\n+[[ccr-data-locality]]\n+==== Data locality\n+Bringing data closer to your users or application server can reduce latency\n+and response time. This methodology also applies when replicating data in {es}.\n+For example, you can replicate a product catalog or reference dataset to 20 or\n+more datacenters around the world to minimize the distance between the data and\n+the application server.\n+\n+In the following diagram, data is replicated from one datacenter to three\n+additional datacenters, each in their own region. The central datacenter\n+contains the leader index, and the additional datacenters contain follower\n+indices that replicate data in that particular region. This configuration\n+puts data closer to the application accessing it.\n+\n+image::images/ccr-arch-data-locality.png[A centralized datacenter replicated across three other datacenters, each in their own region]\n+\n+[discrete]\n+[[ccr-centralized-reporting]]\n+==== Centralized reporting\n+Using a centralized reporting cluster is useful when querying across a large\n+network is inefficient. In this configuration, you replicate data from many\n+smaller clusters to the centralized reporting cluster.\n+\n+For example, a large global bank might have 100 {es} clusters around the world\n+that are distributed across different regions for each bank branch. Using\n+{ccr}, the bank can replicate events from all 100 banks to a central cluster to\n+analyze and aggregate events locally for reporting. Rather than maintaining a\n+mirrored cluster, the bank can use {ccr} to replicate specific indices.\n+\n+In the following diagram, data from three datacenters in different regions is\n+replicated to a centralized reporting cluster. This configuration enables you\n+to copy data from regional hubs to a central cluster, where you can run all\n+reports locally.\n+\n+image::images/ccr-arch-central-reporting.png[Three clusters in different regions sending data to a centralized reporting cluster for analysis]\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MTM5Ng=="}, "originalCommit": {"oid": "cb6d9c2c0dadf44ce5488cd8e7c1f8a2b16f223a"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYxNjI1Nw==", "bodyText": "Should it be \"replicated to the follower\" instead of \"replicated by the follower\"?", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r471616257", "createdAt": "2020-08-17T17:03:07Z", "author": {"login": "dnhatn"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,300 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can replicate indices across clusters to:\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-This guide provides an overview of {ccr}:\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series indices.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-multi-cluster-architectures]]\n+=== Multi-cluster architectures\n+Use {ccr} to construct several multi-cluster architectures within the Elastic\n+Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to maintain multiple copies of the\n+dataset close to the application servers (and users), and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for minimizing network\n+traffic and latency in querying multiple geo-distributed {es} clusters, or for\n+preventing search load from interfering with indexing by offloading search to a\n+secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[discrete]\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, your application can use the disaster recovery datacenter if the\n+production datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]\n+\n+[discrete]\n+[[ccr-chained-replication]]\n+===== Chained replication\n+You can replicate data across multiple datacenters to form a replication\n+chain. In the following diagram, Datacenter A contains the leader index.\n+Datacenter B replicates data from Datacenter A, and Datacenter C replicates\n+from the follower indices in Datacenter B. The connection between these\n+datacenters forms a chained replication pattern.\n+\n+image::images/ccr-arch-chain-dcs.png[Three datacenters connected to form a replication chain]\n+\n+[discrete]\n+[[ccr-bi-directional-replication]]\n+===== Bi-directional replication\n+In a https://www.elastic.co/blog/bi-directional-replication-with-elasticsearch-cross-cluster-replication-ccr[bi-directional replication] setup, all clusters have access to view\n+all data, and all clusters have an index to write to without manually\n+implementing failover. Applications can write to the local index within each\n+datacenter, and read across multiple indices for a global view of all\n+information.\n+\n+This configuration requires no manual intervention when a cluster or datacenter\n+is unavailable. In the following diagram, if Datacenter A is unavailable, you can continue using Datacenter B without manual failover. When Datacenter A\n+comes online, replication resumes between the clusters.\n+\n+image::images/ccr-arch-bi-directional.png[Bi-directional configuration where each cluster contains both a leader index and follower indices]\n+\n+NOTE: This configuration is useful for index-only workloads, where no updates\n+to document values occur. In this configuration, documents indexed by {es} are\n+immutable. Clients are located in each datacenter alongside the {es}\n+cluster, and do not communicate with clusters in different datacenters.\n+\n+[discrete]\n+[[ccr-data-locality]]\n+==== Data locality\n+Bringing data closer to your users or application server can reduce latency\n+and response time. This methodology also applies when replicating data in {es}.\n+For example, you can replicate a product catalog or reference dataset to 20 or\n+more datacenters around the world to minimize the distance between the data and\n+the application server.\n+\n+In the following diagram, data is replicated from one datacenter to three\n+additional datacenters, each in their own region. The central datacenter\n+contains the leader index, and the additional datacenters contain follower\n+indices that replicate data in that particular region. This configuration\n+puts data closer to the application accessing it.\n+\n+image::images/ccr-arch-data-locality.png[A centralized datacenter replicated across three other datacenters, each in their own region]\n+\n+[discrete]\n+[[ccr-centralized-reporting]]\n+==== Centralized reporting\n+Using a centralized reporting cluster is useful when querying across a large\n+network is inefficient. In this configuration, you replicate data from many\n+smaller clusters to the centralized reporting cluster.\n+\n+For example, a large global bank might have 100 {es} clusters around the world\n+that are distributed across different regions for each bank branch. Using\n+{ccr}, the bank can replicate events from all 100 banks to a central cluster to\n+analyze and aggregate events locally for reporting. Rather than maintaining a\n+mirrored cluster, the bank can use {ccr} to replicate specific indices.\n+\n+In the following diagram, data from three datacenters in different regions is\n+replicated to a centralized reporting cluster. This configuration enables you\n+to copy data from regional hubs to a central cluster, where you can run all\n+reports locally.\n+\n+image::images/ccr-arch-central-reporting.png[Three clusters in different regions sending data to a centralized reporting cluster for analysis]\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MTM5Ng=="}, "originalCommit": {"oid": "cb6d9c2c0dadf44ce5488cd8e7c1f8a2b16f223a"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTY3NTUyOA==", "bodyText": "Hmm \ud83e\udd14 Isn't the follower index the one that is doing the replicating?\nI could go either way on this one if you feel more strongly about the revised text, or feel that it is more accurate.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r471675528", "createdAt": "2020-08-17T18:19:33Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,300 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can replicate indices across clusters to:\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-This guide provides an overview of {ccr}:\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series indices.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-multi-cluster-architectures]]\n+=== Multi-cluster architectures\n+Use {ccr} to construct several multi-cluster architectures within the Elastic\n+Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to maintain multiple copies of the\n+dataset close to the application servers (and users), and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for minimizing network\n+traffic and latency in querying multiple geo-distributed {es} clusters, or for\n+preventing search load from interfering with indexing by offloading search to a\n+secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[discrete]\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, your application can use the disaster recovery datacenter if the\n+production datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]\n+\n+[discrete]\n+[[ccr-chained-replication]]\n+===== Chained replication\n+You can replicate data across multiple datacenters to form a replication\n+chain. In the following diagram, Datacenter A contains the leader index.\n+Datacenter B replicates data from Datacenter A, and Datacenter C replicates\n+from the follower indices in Datacenter B. The connection between these\n+datacenters forms a chained replication pattern.\n+\n+image::images/ccr-arch-chain-dcs.png[Three datacenters connected to form a replication chain]\n+\n+[discrete]\n+[[ccr-bi-directional-replication]]\n+===== Bi-directional replication\n+In a https://www.elastic.co/blog/bi-directional-replication-with-elasticsearch-cross-cluster-replication-ccr[bi-directional replication] setup, all clusters have access to view\n+all data, and all clusters have an index to write to without manually\n+implementing failover. Applications can write to the local index within each\n+datacenter, and read across multiple indices for a global view of all\n+information.\n+\n+This configuration requires no manual intervention when a cluster or datacenter\n+is unavailable. In the following diagram, if Datacenter A is unavailable, you can continue using Datacenter B without manual failover. When Datacenter A\n+comes online, replication resumes between the clusters.\n+\n+image::images/ccr-arch-bi-directional.png[Bi-directional configuration where each cluster contains both a leader index and follower indices]\n+\n+NOTE: This configuration is useful for index-only workloads, where no updates\n+to document values occur. In this configuration, documents indexed by {es} are\n+immutable. Clients are located in each datacenter alongside the {es}\n+cluster, and do not communicate with clusters in different datacenters.\n+\n+[discrete]\n+[[ccr-data-locality]]\n+==== Data locality\n+Bringing data closer to your users or application server can reduce latency\n+and response time. This methodology also applies when replicating data in {es}.\n+For example, you can replicate a product catalog or reference dataset to 20 or\n+more datacenters around the world to minimize the distance between the data and\n+the application server.\n+\n+In the following diagram, data is replicated from one datacenter to three\n+additional datacenters, each in their own region. The central datacenter\n+contains the leader index, and the additional datacenters contain follower\n+indices that replicate data in that particular region. This configuration\n+puts data closer to the application accessing it.\n+\n+image::images/ccr-arch-data-locality.png[A centralized datacenter replicated across three other datacenters, each in their own region]\n+\n+[discrete]\n+[[ccr-centralized-reporting]]\n+==== Centralized reporting\n+Using a centralized reporting cluster is useful when querying across a large\n+network is inefficient. In this configuration, you replicate data from many\n+smaller clusters to the centralized reporting cluster.\n+\n+For example, a large global bank might have 100 {es} clusters around the world\n+that are distributed across different regions for each bank branch. Using\n+{ccr}, the bank can replicate events from all 100 banks to a central cluster to\n+analyze and aggregate events locally for reporting. Rather than maintaining a\n+mirrored cluster, the bank can use {ccr} to replicate specific indices.\n+\n+In the following diagram, data from three datacenters in different regions is\n+replicated to a centralized reporting cluster. This configuration enables you\n+to copy data from regional hubs to a central cluster, where you can run all\n+reports locally.\n+\n+image::images/ccr-arch-central-reporting.png[Three clusters in different regions sending data to a centralized reporting cluster for analysis]\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MTM5Ng=="}, "originalCommit": {"oid": "cb6d9c2c0dadf44ce5488cd8e7c1f8a2b16f223a"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcxNDkxNg==", "bodyText": "I am fine with the current.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r471714916", "createdAt": "2020-08-17T19:01:50Z", "author": {"login": "dnhatn"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,300 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can replicate indices across clusters to:\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-This guide provides an overview of {ccr}:\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series indices.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-multi-cluster-architectures]]\n+=== Multi-cluster architectures\n+Use {ccr} to construct several multi-cluster architectures within the Elastic\n+Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to maintain multiple copies of the\n+dataset close to the application servers (and users), and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for minimizing network\n+traffic and latency in querying multiple geo-distributed {es} clusters, or for\n+preventing search load from interfering with indexing by offloading search to a\n+secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[discrete]\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, your application can use the disaster recovery datacenter if the\n+production datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]\n+\n+[discrete]\n+[[ccr-chained-replication]]\n+===== Chained replication\n+You can replicate data across multiple datacenters to form a replication\n+chain. In the following diagram, Datacenter A contains the leader index.\n+Datacenter B replicates data from Datacenter A, and Datacenter C replicates\n+from the follower indices in Datacenter B. The connection between these\n+datacenters forms a chained replication pattern.\n+\n+image::images/ccr-arch-chain-dcs.png[Three datacenters connected to form a replication chain]\n+\n+[discrete]\n+[[ccr-bi-directional-replication]]\n+===== Bi-directional replication\n+In a https://www.elastic.co/blog/bi-directional-replication-with-elasticsearch-cross-cluster-replication-ccr[bi-directional replication] setup, all clusters have access to view\n+all data, and all clusters have an index to write to without manually\n+implementing failover. Applications can write to the local index within each\n+datacenter, and read across multiple indices for a global view of all\n+information.\n+\n+This configuration requires no manual intervention when a cluster or datacenter\n+is unavailable. In the following diagram, if Datacenter A is unavailable, you can continue using Datacenter B without manual failover. When Datacenter A\n+comes online, replication resumes between the clusters.\n+\n+image::images/ccr-arch-bi-directional.png[Bi-directional configuration where each cluster contains both a leader index and follower indices]\n+\n+NOTE: This configuration is useful for index-only workloads, where no updates\n+to document values occur. In this configuration, documents indexed by {es} are\n+immutable. Clients are located in each datacenter alongside the {es}\n+cluster, and do not communicate with clusters in different datacenters.\n+\n+[discrete]\n+[[ccr-data-locality]]\n+==== Data locality\n+Bringing data closer to your users or application server can reduce latency\n+and response time. This methodology also applies when replicating data in {es}.\n+For example, you can replicate a product catalog or reference dataset to 20 or\n+more datacenters around the world to minimize the distance between the data and\n+the application server.\n+\n+In the following diagram, data is replicated from one datacenter to three\n+additional datacenters, each in their own region. The central datacenter\n+contains the leader index, and the additional datacenters contain follower\n+indices that replicate data in that particular region. This configuration\n+puts data closer to the application accessing it.\n+\n+image::images/ccr-arch-data-locality.png[A centralized datacenter replicated across three other datacenters, each in their own region]\n+\n+[discrete]\n+[[ccr-centralized-reporting]]\n+==== Centralized reporting\n+Using a centralized reporting cluster is useful when querying across a large\n+network is inefficient. In this configuration, you replicate data from many\n+smaller clusters to the centralized reporting cluster.\n+\n+For example, a large global bank might have 100 {es} clusters around the world\n+that are distributed across different regions for each bank branch. Using\n+{ccr}, the bank can replicate events from all 100 banks to a central cluster to\n+analyze and aggregate events locally for reporting. Rather than maintaining a\n+mirrored cluster, the bank can use {ccr} to replicate specific indices.\n+\n+In the following diagram, data from three datacenters in different regions is\n+replicated to a centralized reporting cluster. This configuration enables you\n+to copy data from regional hubs to a central cluster, where you can run all\n+reports locally.\n+\n+image::images/ccr-arch-central-reporting.png[Three clusters in different regions sending data to a centralized reporting cluster for analysis]\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MTM5Ng=="}, "originalCommit": {"oid": "cb6d9c2c0dadf44ce5488cd8e7c1f8a2b16f223a"}, "originalPosition": 177}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzM5ODc1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ccr/index.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowNzozMFrOHBswvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjoyOTo1MFrOHBwAQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0Mzk5OA==", "bodyText": "The follower shard uses the write buffer to submit bulk write requests within the shard\n\nI think we need to adjust this sentence. The follower shard submits bulk write requests using operations from the write buffer.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r471543998", "createdAt": "2020-08-17T15:07:30Z", "author": {"login": "dnhatn"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,300 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can replicate indices across clusters to:\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-This guide provides an overview of {ccr}:\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series indices.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-multi-cluster-architectures]]\n+=== Multi-cluster architectures\n+Use {ccr} to construct several multi-cluster architectures within the Elastic\n+Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to maintain multiple copies of the\n+dataset close to the application servers (and users), and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for minimizing network\n+traffic and latency in querying multiple geo-distributed {es} clusters, or for\n+preventing search load from interfering with indexing by offloading search to a\n+secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[discrete]\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, your application can use the disaster recovery datacenter if the\n+production datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]\n+\n+[discrete]\n+[[ccr-chained-replication]]\n+===== Chained replication\n+You can replicate data across multiple datacenters to form a replication\n+chain. In the following diagram, Datacenter A contains the leader index.\n+Datacenter B replicates data from Datacenter A, and Datacenter C replicates\n+from the follower indices in Datacenter B. The connection between these\n+datacenters forms a chained replication pattern.\n+\n+image::images/ccr-arch-chain-dcs.png[Three datacenters connected to form a replication chain]\n+\n+[discrete]\n+[[ccr-bi-directional-replication]]\n+===== Bi-directional replication\n+In a https://www.elastic.co/blog/bi-directional-replication-with-elasticsearch-cross-cluster-replication-ccr[bi-directional replication] setup, all clusters have access to view\n+all data, and all clusters have an index to write to without manually\n+implementing failover. Applications can write to the local index within each\n+datacenter, and read across multiple indices for a global view of all\n+information.\n+\n+This configuration requires no manual intervention when a cluster or datacenter\n+is unavailable. In the following diagram, if Datacenter A is unavailable, you can continue using Datacenter B without manual failover. When Datacenter A\n+comes online, replication resumes between the clusters.\n+\n+image::images/ccr-arch-bi-directional.png[Bi-directional configuration where each cluster contains both a leader index and follower indices]\n+\n+NOTE: This configuration is useful for index-only workloads, where no updates\n+to document values occur. In this configuration, documents indexed by {es} are\n+immutable. Clients are located in each datacenter alongside the {es}\n+cluster, and do not communicate with clusters in different datacenters.\n+\n+[discrete]\n+[[ccr-data-locality]]\n+==== Data locality\n+Bringing data closer to your users or application server can reduce latency\n+and response time. This methodology also applies when replicating data in {es}.\n+For example, you can replicate a product catalog or reference dataset to 20 or\n+more datacenters around the world to minimize the distance between the data and\n+the application server.\n+\n+In the following diagram, data is replicated from one datacenter to three\n+additional datacenters, each in their own region. The central datacenter\n+contains the leader index, and the additional datacenters contain follower\n+indices that replicate data in that particular region. This configuration\n+puts data closer to the application accessing it.\n+\n+image::images/ccr-arch-data-locality.png[A centralized datacenter replicated across three other datacenters, each in their own region]\n+\n+[discrete]\n+[[ccr-centralized-reporting]]\n+==== Centralized reporting\n+Using a centralized reporting cluster is useful when querying across a large\n+network is inefficient. In this configuration, you replicate data from many\n+smaller clusters to the centralized reporting cluster.\n+\n+For example, a large global bank might have 100 {es} clusters around the world\n+that are distributed across different regions for each bank branch. Using\n+{ccr}, the bank can replicate events from all 100 banks to a central cluster to\n+analyze and aggregate events locally for reporting. Rather than maintaining a\n+mirrored cluster, the bank can use {ccr} to replicate specific indices.\n+\n+In the following diagram, data from three datacenters in different regions is\n+replicated to a centralized reporting cluster. This configuration enables you\n+to copy data from regional hubs to a central cluster, where you can run all\n+reports locally.\n+\n+image::images/ccr-arch-central-reporting.png[Three clusters in different regions sending data to a centralized reporting cluster for analysis]\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.\n+These requests can be served from any copy of the leader shard (primary or\n+replica).\n+\n+When a follower shard sends a read request, the leader shard responds with\n+any new operations, limited by the read parameters that you establish when\n+configuring the follower index. If no new operations are available, the\n+leader shard waits up to the configured timeout for new operations. If the\n+timeout elapses, the leader shard responds to the follower shard that there\n+are no new operations. The follower shard updates shard statistics and\n+immediately sends another read request to the leader shard. This\n+communication model ensures that network connections between the remote\n+cluster and the local cluster are continually in use, avoiding forceful\n+termination by an external source such as a firewall.\n+\n+If a read request fails, the cause of the failure is inspected. If the\n+cause of the failure is deemed to be recoverable (such as a network\n+failure), the follower shard enters into a retry loop. Otherwise, the\n+follower shard pauses\n+<<ccr-pause-replication,until you resume it>>.\n+\n+When a follower shard receives operations from the leader shard, it places\n+those operations in a write buffer. The follower shard uses the write buffer\n+to submit bulk write requests within the shard. If the write buffer exceeds", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb6d9c2c0dadf44ce5488cd8e7c1f8a2b16f223a"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5NzEyMw==", "bodyText": "Changed to read:\n\nThe follower shard submits bulk write requests using operations from the write buffer.", "url": "https://github.com/elastic/elasticsearch/pull/60555#discussion_r471597123", "createdAt": "2020-08-17T16:29:50Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ccr/index.asciidoc", "diffHunk": "@@ -2,28 +2,300 @@\n [testenv=\"platinum\"]\n [[xpack-ccr]]\n == {ccr-cap}\n+With {ccr}, you can replicate indices across clusters to:\n \n-The {ccr} (CCR) feature enables replication of indices in remote clusters to a\n-local cluster. This functionality can be used in some common production use\n-cases:\n+* Continue handling search requests in the event of a datacenter outage\n+* Prevent search volume from impacting indexing throughput\n+* Reduce search latency by processing search requests in geo-proximity to the\n+user\n \n-* Disaster recovery in case a primary cluster fails. A secondary cluster can\n-  serve as a hot backup\n-* Geo-proximity so that reads can be served locally\n-* Prevent search load from interfering with indexing by offloading search to a secondary cluster\n+{ccr-cap} uses an active-passive model. You index to a _leader_ index, and the\n+data is replicated to one or more read-only _follower_ indices. Before you can add a follower index to a cluster, you must configure the _remote cluster_ that contains the leader index.\n \n-This guide provides an overview of {ccr}:\n+When the leader index receives writes, the follower indices pull changes from\n+the leader index on the remote cluster. You can manually create follower\n+indices, or configure auto-follow patterns to automatically create follower\n+indices for new time series indices.\n+\n+You configure {ccr} clusters in a uni-directional or bi-directional setup:\n+\n+* In a uni-directional configuration, one cluster contains only\n+leader indices, and the other cluster contains only follower indices.\n+* In a bi-directional configuration, each cluster contains both leader and\n+follower indices.\n+\n+In a uni-directional configuration, the cluster containing follower indices\n+must be running **the same or newer** version of {es} as the remote cluster.\n+If newer, the versions must also be compatible as outlined in the following matrix.\n+\n+[%collapsible]\n+[[ccr-version-compatibility]]\n+.Version compatibility matrix\n+====\n+include::../modules/remote-clusters.asciidoc[tag=remote-cluster-compatibility-matrix]\n+====\n+\n+[discrete]\n+[[ccr-multi-cluster-architectures]]\n+=== Multi-cluster architectures\n+Use {ccr} to construct several multi-cluster architectures within the Elastic\n+Stack:\n+\n+* <<ccr-disaster-recovery,Disaster recovery>> in case a primary cluster fails,\n+with a secondary cluster serving as a hot backup\n+* <<ccr-data-locality,Data locality>> to maintain multiple copies of the\n+dataset close to the application servers (and users), and reduce costly latency\n+* <<ccr-centralized-reporting,Centralized reporting>> for minimizing network\n+traffic and latency in querying multiple geo-distributed {es} clusters, or for\n+preventing search load from interfering with indexing by offloading search to a\n+secondary cluster\n+\n+Watch the\n+https://www.elastic.co/webinars/replicate-elasticsearch-data-with-cross-cluster-replication-ccr[{ccr} webinar] to learn more about the following use cases.\n+Then, <<ccr-getting-started,set up {ccr}>> on your local machine and work\n+through the demo from the webinar.\n+\n+[discrete]\n+[[ccr-disaster-recovery]]\n+==== Disaster recovery and high availability\n+Disaster recovery provides your mission-critical applications with the\n+tolerance to withstand datacenter or region outages. This use case is the\n+most common deployment of {ccr}. You can configure clusters in different\n+architectures to support disaster recovery and high availability:\n+\n+* <<ccr-single-datacenter-recovery>>\n+* <<ccr-multiple-datacenter-recovery>>\n+* <<ccr-chained-replication>>\n+* <<ccr-bi-directional-replication>>\n+\n+[discrete]\n+[[ccr-single-datacenter-recovery]]\n+===== Single disaster recovery datacenter\n+In this configuration, data is replicated from the production datacenter to the\n+disaster recovery datacenter. Because the follower indices replicate the leader\n+index, your application can use the disaster recovery datacenter if the\n+production datacenter is unavailable.\n+\n+image::images/ccr-arch-disaster-recovery.png[Production datacenter that replicates data to a disaster recovery datacenter]\n+\n+[discrete]\n+[[ccr-multiple-datacenter-recovery]]\n+===== Multiple disaster recovery datacenters\n+You can replicate data from one datacenter to multiple datacenters. This\n+configuration provides both disaster recovery and high availability, ensuring\n+that data is replicated in two datacenters if the primary datacenter is down\n+or unavailable.\n+\n+In the following diagram, data from Datacenter A is replicated to\n+Datacenter B and Datacenter C, which both have a read-only copy of the leader\n+index from Datacenter A.\n+\n+image::images/ccr-arch-multiple-dcs.png[Production datacenter that replicates data to two other datacenters]\n+\n+[discrete]\n+[[ccr-chained-replication]]\n+===== Chained replication\n+You can replicate data across multiple datacenters to form a replication\n+chain. In the following diagram, Datacenter A contains the leader index.\n+Datacenter B replicates data from Datacenter A, and Datacenter C replicates\n+from the follower indices in Datacenter B. The connection between these\n+datacenters forms a chained replication pattern.\n+\n+image::images/ccr-arch-chain-dcs.png[Three datacenters connected to form a replication chain]\n+\n+[discrete]\n+[[ccr-bi-directional-replication]]\n+===== Bi-directional replication\n+In a https://www.elastic.co/blog/bi-directional-replication-with-elasticsearch-cross-cluster-replication-ccr[bi-directional replication] setup, all clusters have access to view\n+all data, and all clusters have an index to write to without manually\n+implementing failover. Applications can write to the local index within each\n+datacenter, and read across multiple indices for a global view of all\n+information.\n+\n+This configuration requires no manual intervention when a cluster or datacenter\n+is unavailable. In the following diagram, if Datacenter A is unavailable, you can continue using Datacenter B without manual failover. When Datacenter A\n+comes online, replication resumes between the clusters.\n+\n+image::images/ccr-arch-bi-directional.png[Bi-directional configuration where each cluster contains both a leader index and follower indices]\n+\n+NOTE: This configuration is useful for index-only workloads, where no updates\n+to document values occur. In this configuration, documents indexed by {es} are\n+immutable. Clients are located in each datacenter alongside the {es}\n+cluster, and do not communicate with clusters in different datacenters.\n+\n+[discrete]\n+[[ccr-data-locality]]\n+==== Data locality\n+Bringing data closer to your users or application server can reduce latency\n+and response time. This methodology also applies when replicating data in {es}.\n+For example, you can replicate a product catalog or reference dataset to 20 or\n+more datacenters around the world to minimize the distance between the data and\n+the application server.\n+\n+In the following diagram, data is replicated from one datacenter to three\n+additional datacenters, each in their own region. The central datacenter\n+contains the leader index, and the additional datacenters contain follower\n+indices that replicate data in that particular region. This configuration\n+puts data closer to the application accessing it.\n+\n+image::images/ccr-arch-data-locality.png[A centralized datacenter replicated across three other datacenters, each in their own region]\n+\n+[discrete]\n+[[ccr-centralized-reporting]]\n+==== Centralized reporting\n+Using a centralized reporting cluster is useful when querying across a large\n+network is inefficient. In this configuration, you replicate data from many\n+smaller clusters to the centralized reporting cluster.\n+\n+For example, a large global bank might have 100 {es} clusters around the world\n+that are distributed across different regions for each bank branch. Using\n+{ccr}, the bank can replicate events from all 100 banks to a central cluster to\n+analyze and aggregate events locally for reporting. Rather than maintaining a\n+mirrored cluster, the bank can use {ccr} to replicate specific indices.\n+\n+In the following diagram, data from three datacenters in different regions is\n+replicated to a centralized reporting cluster. This configuration enables you\n+to copy data from regional hubs to a central cluster, where you can run all\n+reports locally.\n+\n+image::images/ccr-arch-central-reporting.png[Three clusters in different regions sending data to a centralized reporting cluster for analysis]\n+\n+[discrete]\n+[[ccr-replication-mechanics]]\n+=== Replication mechanics\n+Although you <<ccr-getting-started,set up {ccr}>> at the index level, {es}\n+achieves replication at the shard level. When a follower index is created,\n+each shard in that index pulls changes form its corresponding shard in the\n+leader index, which means that a follower index has the same number of\n+shards as its leader index. All operations are replicated by the follower, so that operations to create, update, or delete a document are replicated.\n+These requests can be served from any copy of the leader shard (primary or\n+replica).\n+\n+When a follower shard sends a read request, the leader shard responds with\n+any new operations, limited by the read parameters that you establish when\n+configuring the follower index. If no new operations are available, the\n+leader shard waits up to the configured timeout for new operations. If the\n+timeout elapses, the leader shard responds to the follower shard that there\n+are no new operations. The follower shard updates shard statistics and\n+immediately sends another read request to the leader shard. This\n+communication model ensures that network connections between the remote\n+cluster and the local cluster are continually in use, avoiding forceful\n+termination by an external source such as a firewall.\n+\n+If a read request fails, the cause of the failure is inspected. If the\n+cause of the failure is deemed to be recoverable (such as a network\n+failure), the follower shard enters into a retry loop. Otherwise, the\n+follower shard pauses\n+<<ccr-pause-replication,until you resume it>>.\n+\n+When a follower shard receives operations from the leader shard, it places\n+those operations in a write buffer. The follower shard uses the write buffer\n+to submit bulk write requests within the shard. If the write buffer exceeds", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0Mzk5OA=="}, "originalCommit": {"oid": "cb6d9c2c0dadf44ce5488cd8e7c1f8a2b16f223a"}, "originalPosition": 200}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2698, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}