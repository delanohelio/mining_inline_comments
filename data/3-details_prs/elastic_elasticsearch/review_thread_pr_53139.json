{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzOTAzOTg5", "number": 53139, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMTo0NToyMFrODlNr6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjozNzoxMlrODlOmvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzQ4MTM3OnYy", "diffSide": "LEFT", "path": "test/framework/src/main/java/org/elasticsearch/test/rest/yaml/section/DoSection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMTo0NToyMFrOFx-whA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMTo0NToyMFrOFx-whA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk1Mjc3Mg==", "bodyText": "I removed this branch both because it made me sad and because removing it gives me a convenient real world use case for this feature that doesn't require that I really understand what is going on in #52959.", "url": "https://github.com/elastic/elasticsearch/pull/53139#discussion_r387952772", "createdAt": "2020-03-04T21:45:20Z", "author": {"login": "nik9000"}, "path": "test/framework/src/main/java/org/elasticsearch/test/rest/yaml/section/DoSection.java", "diffHunk": "@@ -284,19 +320,25 @@ void checkWarningHeaders(final List<String> warningHeaders, final Version master\n         final List<String> unexpected = new ArrayList<>();\n         final List<String> unmatched = new ArrayList<>();\n         final List<String> missing = new ArrayList<>();\n+        Set<String> allowed = allowedWarningHeaders.stream()\n+                .map(DeprecationLogger::escapeAndEncode)\n+                .collect(toSet());\n         // LinkedHashSet so that missing expected warnings come back in a predictable order which is nice for testing\n-        final Set<String> expected =\n-                new LinkedHashSet<>(expectedWarningHeaders.stream().map(DeprecationLogger::escapeAndEncode).collect(Collectors.toList()));\n+        final Set<String> expected = expectedWarningHeaders.stream()\n+                .map(DeprecationLogger::escapeAndEncode)\n+                .collect(toCollection(LinkedHashSet::new));\n         for (final String header : warningHeaders) {\n             final Matcher matcher = WARNING_HEADER_PATTERN.matcher(header);\n             final boolean matches = matcher.matches();\n             if (matches) {\n                 final String message = matcher.group(1);\n-                if (message.startsWith(\"[_data_frame/transforms/] is deprecated\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4651d707032bbaeea41f11c76219bf1d65e2a3"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzQ4OTAwOnYy", "diffSide": "RIGHT", "path": "x-pack/qa/rolling-upgrade/src/test/resources/rest-api-spec/test/mixed_cluster/80_transform_jobs_crud.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMTo0Nzo0NlrOFx-1Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMTo0Nzo0NlrOFx-1Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk1Mzk5MA==", "bodyText": "There really are a lot of these! Maybe it'd be nicer to allow warnings on a test case level rather than on a \"do\" level, but I like precision if I can get it and adding allowed_warnings on the do level really was simpler to implement.", "url": "https://github.com/elastic/elasticsearch/pull/53139#discussion_r387953990", "createdAt": "2020-03-04T21:47:46Z", "author": {"login": "nik9000"}, "path": "x-pack/qa/rolling-upgrade/src/test/resources/rest-api-spec/test/mixed_cluster/80_transform_jobs_crud.yml", "diffHunk": "@@ -1,12 +1,17 @@\n ---\n \"Test put batch transform on mixed cluster\":\n+  - skip:\n+      features: allowed_warnings\n+\n   - do:\n       cluster.health:\n         index: \"transform-airline-data\"\n         wait_for_status: green\n         timeout: 70s\n \n   - do:\n+      allowed_warnings:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4651d707032bbaeea41f11c76219bf1d65e2a3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzYzMTk4OnYy", "diffSide": "RIGHT", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/README.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjozNzoxMlrOFyANzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjozNzoxMlrOFyANzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NjY1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    allowd_warnings:\n          \n          \n            \n                    allowed_warnings:", "url": "https://github.com/elastic/elasticsearch/pull/53139#discussion_r387976653", "createdAt": "2020-03-04T22:37:12Z", "author": {"login": "williamrandolph"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/README.asciidoc", "diffHunk": "@@ -198,6 +198,23 @@ header. The warnings must match exactly. Using it looks like this:\n             id:        1\n ....\n \n+If the arguments to `do` include `allowed_warnings` then matching `Warning`\n+headers do not fail the request. Unlike the `warnings` argument, these aren't\n+expected so much as \"allowed\". This usually comes up in backwards compatibility\n+testing. Using it looks like this:\n+\n+....\n+    - do:\n+        allowd_warnings:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2eef2e58e4d47255b5063a6cc294da1534a7b138"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3422, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}