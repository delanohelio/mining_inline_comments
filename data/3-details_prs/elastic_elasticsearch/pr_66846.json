{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MzY3MTQx", "number": 66846, "title": "Support keystore tests on FIPS JVM", "bodyText": "As of #64024 we run FIPS CI on a true, FIPS approved only mode JVM.\nThis mandates that any passwords that are fed into PBKDF2 must have at\nleast 112 bits of entropy (that is, be 14 characters long).\nThis commit updates our Keystore CLI tests so that tests either:\n\nUse a 14+ character password when in FIPS mode, or\nAre skipped on FIPS mode (because they explicitly test empty\npasswords)\n\nResolves: #66845", "createdAt": "2020-12-29T07:27:46Z", "url": "https://github.com/elastic/elasticsearch/pull/66846", "merged": true, "mergeCommit": {"oid": "f05da6bda8ab303eb301e4510bcaa5ff98c537fb"}, "closed": true, "closedAt": "2020-12-30T00:08:45Z", "author": {"login": "tvernum"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdq1gY4AH2gAyNTQ2MzY3MTQxOjU2ZGIzNTE2MWZiMTliNjgxNzQyNDJhYTNlZDdjYTAwMGQyNWIxZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdq4Y1kAFqTU1OTQ3NjA1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "56db35161fb19b68174242aa3ed7ca000d25b1d3", "author": {"user": {"login": "tvernum", "name": "Tim Vernum"}}, "url": "https://github.com/elastic/elasticsearch/commit/56db35161fb19b68174242aa3ed7ca000d25b1d3", "committedDate": "2020-12-29T07:22:24Z", "message": "Support keystore tests of FIPS JVM\n\nAs of #64024 we run FIPS CI on a true, FIPS approved only mode JVM.\nThis mandates that any passwords that are fed into PBKDF2 must have at\nleast 112 bits of entropy (that is, be 14 characters long).\n\nThis commit updates our Keystore CLI tests so that tests either:\n1. Use a 14+ character password when in FIPS mode, _or_\n2. Are skipped on FIPS mode (because they explicitly test empty\n   passwords)\n\nResolves: #66845"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NDA5MTQ3", "url": "https://github.com/elastic/elasticsearch/pull/66846#pullrequestreview-559409147", "createdAt": "2020-12-29T07:31:21Z", "commit": {"oid": "56db35161fb19b68174242aa3ed7ca000d25b1d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzozMToyMlrOIMI4kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzozMToyMlrOIMI4kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5OTM3OQ==", "bodyText": "This actually never tested with the password, because it didn't pass --password on the command line.", "url": "https://github.com/elastic/elasticsearch/pull/66846#discussion_r549599379", "createdAt": "2020-12-29T07:31:22Z", "author": {"login": "tvernum"}, "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java", "diffHunk": "@@ -53,48 +53,67 @@ public void testNotMatchingPasswords() throws Exception {\n     }\n \n     public void testDefaultNotPromptForPassword() throws Exception {\n+        assumeFalse(\"Cannot open unprotected keystore on FIPS JVM\", inFipsJvm());\n         execute();\n         Path configDir = env.configFile();\n         assertNotNull(KeyStoreWrapper.load(configDir));\n     }\n \n     public void testPosix() throws Exception {\n-        String password = randomFrom(\"\", \"keystorepassword\");\n-        terminal.addSecretInput(password);\n-        terminal.addSecretInput(password);\n-        execute();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56db35161fb19b68174242aa3ed7ca000d25b1d3"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a66940e62528232bb4626b4b469eb4301efcc35a", "author": {"user": {"login": "tvernum", "name": "Tim Vernum"}}, "url": "https://github.com/elastic/elasticsearch/commit/a66940e62528232bb4626b4b469eb4301efcc35a", "committedDate": "2020-12-29T07:34:47Z", "message": "Make sure wrong password is > 14 chars\n\nWhen testing with an incorrect password, make sure it is longer than\nthe original password so that we trigger \"incorrect password\"\nbehaviour rather than \"password too short\" behaviour."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NDQ2OTM0", "url": "https://github.com/elastic/elasticsearch/pull/66846#pullrequestreview-559446934", "createdAt": "2020-12-29T09:26:08Z", "commit": {"oid": "a66940e62528232bb4626b4b469eb4301efcc35a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwOToyNjowOFrOIMK7Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwOToyNjowOFrOIMK7Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzMjc3MQ==", "bodyText": "Do we need to execute(randomFrom(\"-p\", \"--password\")) here as well?", "url": "https://github.com/elastic/elasticsearch/pull/66846#discussion_r549632771", "createdAt": "2020-12-29T09:26:08Z", "author": {"login": "BigPandaToo"}, "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/ChangeKeyStorePasswordCommandTests.java", "diffHunk": "@@ -54,14 +55,15 @@ public void testChangeKeyStorePassword() throws Exception {\n         createKeystore(\"theoldpassword\");\n         loadKeystore(\"theoldpassword\");\n         terminal.addSecretInput(\"theoldpassword\");\n-        terminal.addSecretInput(\"thepassword\");\n-        terminal.addSecretInput(\"thepassword\");\n+        terminal.addSecretInput(\"the-better-password\");\n+        terminal.addSecretInput(\"the-better-password\");\n         // Prompted thrice: Once for the existing and twice for the new password\n         execute();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a66940e62528232bb4626b4b469eb4301efcc35a"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NDUyNjIy", "url": "https://github.com/elastic/elasticsearch/pull/66846#pullrequestreview-559452622", "createdAt": "2020-12-29T09:41:31Z", "commit": {"oid": "a66940e62528232bb4626b4b469eb4301efcc35a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NDc2MDU2", "url": "https://github.com/elastic/elasticsearch/pull/66846#pullrequestreview-559476056", "createdAt": "2020-12-29T10:43:52Z", "commit": {"oid": "a66940e62528232bb4626b4b469eb4301efcc35a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMDo0Mzo1MlrOIMMbbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMDo0Mzo1MlrOIMMbbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1NzQ1NQ==", "bodyText": "Ideally, when not firefighting, I think we should assert the behavior from the FIPS JVM in circumstances such as this one. For regular JVMs, the tests assert all kinds of behaviors, but since some are skipped in the FIPS JVM we condone unspecified behavior.\n@jkakavas Is #65464 supposed to handle some/all cases like this one?\nGranted, this assumes the FIPS provider implementation (different ones might fail differently), and maybe the JVMs as well. I see this as an argument for more clearly specifying and documenting the FIPS environments we test (and support).\nShould I open a separate GH issue regarding negative testing in the FIPS JVM?", "url": "https://github.com/elastic/elasticsearch/pull/66846#discussion_r549657455", "createdAt": "2020-12-29T10:43:52Z", "author": {"login": "albertzaharovits"}, "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java", "diffHunk": "@@ -53,48 +53,67 @@ public void testNotMatchingPasswords() throws Exception {\n     }\n \n     public void testDefaultNotPromptForPassword() throws Exception {\n+        assumeFalse(\"Cannot open unprotected keystore on FIPS JVM\", inFipsJvm());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a66940e62528232bb4626b4b469eb4301efcc35a"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4262, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}