{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTM4MTM1", "number": 57937, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMjozMjo0OVrOEagboA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMjozMjo0OVrOEagboA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjI5NzkyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMjozMjo0OVrOHD-qnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzozMzo0M1rOHEBURQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkzNDQ5Mw==", "bodyText": "WDYT about checking for a timeout again here before we do all the serialisation work? If we use a bounded threadpool then these things might pile up, so aborting early might be a helpful way to push back.", "url": "https://github.com/elastic/elasticsearch/pull/57937#discussion_r473934493", "createdAt": "2020-08-20T12:32:49Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java", "diffHunk": "@@ -62,13 +71,21 @@ public RestChannelConsumer prepareRequest(final RestRequest request, final NodeC\n         getMappingsRequest.indicesOptions(IndicesOptions.fromRequest(request, getMappingsRequest.indicesOptions()));\n         getMappingsRequest.masterNodeTimeout(request.paramAsTime(\"master_timeout\", getMappingsRequest.masterNodeTimeout()));\n         getMappingsRequest.local(request.paramAsBoolean(\"local\", getMappingsRequest.local()));\n-        return channel -> client.admin().indices().getMappings(getMappingsRequest, new RestBuilderListener<>(channel) {\n+        return channel -> client.admin().indices().getMappings(getMappingsRequest, new RestActionListener<>(channel) {\n+\n             @Override\n-            public RestResponse buildResponse(final GetMappingsResponse response, final XContentBuilder builder) throws Exception {\n-                builder.startObject();\n-                response.toXContent(builder, request);\n-                builder.endObject();\n-                return new BytesRestResponse(RestStatus.OK, builder);\n+            protected void processResponse(GetMappingsResponse getMappingsResponse) {\n+                // Process serialization on GENERIC pool since the serialization of the raw mappings to XContent can be too slow to execute\n+                // on an IO thread\n+                threadPool.generic().execute(ActionRunnable.wrap(this, l -> new RestBuilderListener<GetMappingsResponse>(channel) {\n+                    @Override\n+                    public RestResponse buildResponse(final GetMappingsResponse response, final XContentBuilder builder) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4f87baf2197c384a2e3b6e0ed66f997fdd53c33"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3NzkyNQ==", "bodyText": "\ud83d\udc4d  how about 0bd68d4 ? :)", "url": "https://github.com/elastic/elasticsearch/pull/57937#discussion_r473977925", "createdAt": "2020-08-20T13:33:43Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java", "diffHunk": "@@ -62,13 +71,21 @@ public RestChannelConsumer prepareRequest(final RestRequest request, final NodeC\n         getMappingsRequest.indicesOptions(IndicesOptions.fromRequest(request, getMappingsRequest.indicesOptions()));\n         getMappingsRequest.masterNodeTimeout(request.paramAsTime(\"master_timeout\", getMappingsRequest.masterNodeTimeout()));\n         getMappingsRequest.local(request.paramAsBoolean(\"local\", getMappingsRequest.local()));\n-        return channel -> client.admin().indices().getMappings(getMappingsRequest, new RestBuilderListener<>(channel) {\n+        return channel -> client.admin().indices().getMappings(getMappingsRequest, new RestActionListener<>(channel) {\n+\n             @Override\n-            public RestResponse buildResponse(final GetMappingsResponse response, final XContentBuilder builder) throws Exception {\n-                builder.startObject();\n-                response.toXContent(builder, request);\n-                builder.endObject();\n-                return new BytesRestResponse(RestStatus.OK, builder);\n+            protected void processResponse(GetMappingsResponse getMappingsResponse) {\n+                // Process serialization on GENERIC pool since the serialization of the raw mappings to XContent can be too slow to execute\n+                // on an IO thread\n+                threadPool.generic().execute(ActionRunnable.wrap(this, l -> new RestBuilderListener<GetMappingsResponse>(channel) {\n+                    @Override\n+                    public RestResponse buildResponse(final GetMappingsResponse response, final XContentBuilder builder) throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkzNDQ5Mw=="}, "originalCommit": {"oid": "b4f87baf2197c384a2e3b6e0ed66f997fdd53c33"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1677, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}