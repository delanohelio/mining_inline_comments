{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MzE4NDc0", "number": 59429, "title": "Convert DateFieldMapper to parametrized format", "bodyText": "This commit makes DateFieldMapper extend ParametrizedFieldMapper,\ndeclaring its parameters explicitly.  As well as changes to DateFieldMapper\nitself, there are some changes to dynamic mapping code to ensure that\ndynamically detected date formats are passed through to new date mapper\nbuilders.", "createdAt": "2020-07-13T15:10:47Z", "url": "https://github.com/elastic/elasticsearch/pull/59429", "merged": true, "mergeCommit": {"oid": "bf12ac1333315c43b2d18267ec779aca24fd3dc6"}, "closed": true, "closedAt": "2020-07-16T09:15:57Z", "author": {"login": "romseygeek"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0gR3MgH2gAyNDQ4MzE4NDc0OmJmNzIxOTcxNWRmZGM5ZjhhMmYyOWMxODQ1NDZhNTA2MjdhMjEwMjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1PIx3AFqTQ0OTIzMzMwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bf7219715dfdc9f8a2f29c184546a50627a21027", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/bf7219715dfdc9f8a2f29c184546a50627a21027", "committedDate": "2020-07-13T12:06:37Z", "message": "Convert DateFieldMapper to parametrized format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d765b18ee8b537391af68dfd7e36c7f273cc343d", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/d765b18ee8b537391af68dfd7e36c7f273cc343d", "committedDate": "2020-07-13T15:07:40Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/date-mergebuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88821ada4b41e5c27e418148d7f92bbe15c4f525", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/88821ada4b41e5c27e418148d7f92bbe15c4f525", "committedDate": "2020-07-13T15:24:37Z", "message": "precommit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDg5NjAw", "url": "https://github.com/elastic/elasticsearch/pull/59429#pullrequestreview-447489600", "createdAt": "2020-07-13T18:17:45Z", "commit": {"oid": "88821ada4b41e5c27e418148d7f92bbe15c4f525"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoxNzo0NVrOGw0PTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoyNjo0M1rOGw0jPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MDcxNw==", "bodyText": "I'd prefer to drop these if we can manage it. Or to rename it to public static Builder millisecondResolution(String name) or something.", "url": "https://github.com/elastic/elasticsearch/pull/59429#discussion_r453840717", "createdAt": "2020-07-13T18:17:45Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "diffHunk": "@@ -178,79 +159,64 @@ public static Resolution ofOrdinal(int ord) {\n         }\n     }\n \n-    public static class Builder extends FieldMapper.Builder<Builder> {\n-\n-        private Boolean ignoreMalformed;\n-        private Explicit<String> format = new Explicit<>(DEFAULT_DATE_TIME_FORMATTER.pattern(), false);\n-        private Locale locale;\n-        private Resolution resolution = Resolution.MILLISECONDS;\n-        String nullValue;\n+    private static DateFieldMapper toType(FieldMapper in) {\n+        return (DateFieldMapper) in;\n+    }\n \n-        public Builder(String name) {\n-            super(name, Defaults.FIELD_TYPE);\n-            builder = this;\n-            locale = Locale.ROOT;\n-        }\n+    public static class Builder extends ParametrizedFieldMapper.Builder {\n \n-        public Builder ignoreMalformed(boolean ignoreMalformed) {\n-            this.ignoreMalformed = ignoreMalformed;\n-            return builder;\n-        }\n+        private final Parameter<Boolean> index = Parameter.indexParam(m -> toType(m).indexed, true);\n+        private final Parameter<Boolean> docValues = Parameter.docValuesParam(m -> toType(m).hasDocValues, true);\n+        private final Parameter<Boolean> store = Parameter.storeParam(m -> toType(m).store, false);\n \n-        protected Explicit<Boolean> ignoreMalformed(BuilderContext context) {\n-            if (ignoreMalformed != null) {\n-                return new Explicit<>(ignoreMalformed, true);\n-            }\n-            if (context.indexSettings() != null) {\n-                return new Explicit<>(IGNORE_MALFORMED_SETTING.get(context.indexSettings()), false);\n-            }\n-            return Defaults.IGNORE_MALFORMED;\n-        }\n+        private final Parameter<Float> boost = Parameter.boostParam();\n+        private final Parameter<Map<String, String>> meta = Parameter.metaParam();\n \n-        public Builder locale(Locale locale) {\n-            this.locale = locale;\n-            return this;\n-        }\n+        private final Parameter<String> format\n+            = Parameter.stringParam(\"format\", false, m -> toType(m).format, DEFAULT_DATE_TIME_FORMATTER.pattern());\n+        private final Parameter<Locale> locale = new Parameter<>(\"locale\", false, Locale.ROOT,\n+            (n, c, o) -> LocaleUtils.parse(o.toString()), m -> toType(m).locale);\n \n-        public Builder nullValue(String nullValue) {\n-            this.nullValue = nullValue;\n-            return this;\n-        }\n+        private final Parameter<String> nullValue\n+            = Parameter.stringParam(\"null_value\", false, m -> toType(m).nullValueAsString, null);\n+        private final Parameter<Boolean> ignoreMalformed;\n \n-        public Locale locale() {\n-            return locale;\n-        }\n-\n-        public String format() {\n-            return format.value();\n-        }\n-\n-        public Builder format(String format) {\n-            this.format = new Explicit<>(format, true);\n-            return this;\n-        }\n+        private final Resolution resolution;\n \n-        public Builder withResolution(Resolution resolution) {\n+        public Builder(String name, Resolution resolution, DateFormatter dateFormatter, boolean ignoreMalformedByDefault) {\n+            super(name);\n             this.resolution = resolution;\n-            return this;\n+            this.ignoreMalformed\n+                = Parameter.boolParam(\"ignore_malformed\", true, m -> toType(m).ignoreMalformed, ignoreMalformedByDefault);\n+            if (dateFormatter != null) {\n+                this.format.setValue(dateFormatter.pattern());\n+                this.locale.setValue(dateFormatter.locale());\n+            }\n         }\n \n-        public boolean isFormatterSet() {\n-            return format.explicit();\n+        // for testing\n+        public Builder(String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88821ada4b41e5c27e418148d7f92bbe15c4f525"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MTY2Mg==", "bodyText": "Do you think it'd be cleaner to use the builder to get these in tests?", "url": "https://github.com/elastic/elasticsearch/pull/59429#discussion_r453841662", "createdAt": "2020-07-13T18:19:28Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "diffHunk": "@@ -311,6 +254,14 @@ public DateFieldType(String name) {\n             this(name, true, true, DEFAULT_DATE_TIME_FORMATTER, Resolution.MILLISECONDS, Collections.emptyMap());\n         }\n \n+        public DateFieldType(String name, DateFormatter dateFormatter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88821ada4b41e5c27e418148d7f92bbe15c4f525"}, "originalPosition": 225}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MzM0Ng==", "bodyText": "\u2764\ufe0f", "url": "https://github.com/elastic/elasticsearch/pull/59429#discussion_r453843346", "createdAt": "2020-07-13T18:22:25Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java", "diffHunk": "@@ -681,17 +679,15 @@ private static void parseNullValue(ParseContext context, ObjectMapper parentMapp\n                         // failure to parse this, continue\n                         continue;\n                     }\n-                    Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DATE);\n+                    Mapper.Builder builder\n+                        = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DATE, dateTimeFormatter);\n                     if (builder == null) {\n-                        builder = newDateBuilder(currentFieldName, dateTimeFormatter);\n-                    }\n-                    if (builder instanceof DateFieldMapper.Builder) {\n-                        DateFieldMapper.Builder dateBuilder = (DateFieldMapper.Builder) builder;\n-                        if (dateBuilder.isFormatterSet() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88821ada4b41e5c27e418148d7f92bbe15c4f525"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0NTgyMA==", "bodyText": "Probably worth javadoc - this is the format used for dynamic date detection and the default date format for date fields that don't have one set. Right?", "url": "https://github.com/elastic/elasticsearch/pull/59429#discussion_r453845820", "createdAt": "2020-07-13T18:26:43Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/Mapper.java", "diffHunk": "@@ -122,6 +129,14 @@ public Version indexVersionCreated() {\n                 return queryShardContextSupplier;\n             }\n \n+            public DateFormatter getDateFormatter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88821ada4b41e5c27e418148d7f92bbe15c4f525"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff06a3f4e074490afeb83251181e88a72d6da2c9", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/ff06a3f4e074490afeb83251181e88a72d6da2c9", "committedDate": "2020-07-15T09:16:14Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/date-mergebuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ff6504640fb0eac396fa36aebe65aed2582d5bc", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/1ff6504640fb0eac396fa36aebe65aed2582d5bc", "committedDate": "2020-07-15T10:20:13Z", "message": "feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MjMzMzAz", "url": "https://github.com/elastic/elasticsearch/pull/59429#pullrequestreview-449233303", "createdAt": "2020-07-15T18:42:14Z", "commit": {"oid": "1ff6504640fb0eac396fa36aebe65aed2582d5bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4412, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}