{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNzg5Mjc5", "number": 65904, "title": "[ML] remove thread sleep from results persister ", "bodyText": "Having a thread sleep in a recurring action may cause issues on node shutdown.\nWhat if the thread is sleeping while a nice shutdown is occurring? Since these retry timeouts\ncan extend to a larger period of time, we should instead use scheduled tasks + the threadpool.\nThis allows the retries to be effectively canceled instead of waiting for a thread to wake back up.\ncloses #65890", "createdAt": "2020-12-04T21:08:51Z", "url": "https://github.com/elastic/elasticsearch/pull/65904", "merged": true, "mergeCommit": {"oid": "eb91e35b1c1b7e5218bbca15de2f8c4e1281b94d"}, "closed": true, "closedAt": "2020-12-08T14:39:42Z", "author": {"login": "benwtrent"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdi9qYvAH2gAyNTMyNzg5Mjc5OmUyOTk3NGI1NDE0YzM4YmRmNjU1ZDY0NTViOGFiNDIyZTIwNDk3M2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkJhx2gH2gAyNTMyNzg5Mjc5Ojk0Njg3ZjJhMmNmMGM0MDczMGM2YmRiMjcxNWU5MGZiOGIxYjIxNzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e29974b5414c38bdf655d6455b8ab422e204973c", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/e29974b5414c38bdf655d6455b8ab422e204973c", "committedDate": "2020-12-04T20:21:10Z", "message": "[ML] remove thread sleep from results persister\nHaving a thread sleep in a recurring action may cause issues on node shutdown.\nWhat if the thread is sleeping while a nice shutdown is occurring? Since these retry timeouts\ncan extend to a larger period of time, we should instead use scheduled tasks + the threadpool.\nThis allows the retries to be effectively canceled instead of waiting for a thread to wake back up.\n\ncloses https://github.com/elastic/elasticsearch/issues/65890"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef2e1529f42a47c58b16ed2c35e68422b943c2ef", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/ef2e1529f42a47c58b16ed2c35e68422b943c2ef", "committedDate": "2020-12-04T20:36:38Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/ml-remove-thread-sleep-from-results-persister"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e2b3bac4c20bae3734a29406e9d958b07be4ecf", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/5e2b3bac4c20bae3734a29406e9d958b07be4ecf", "committedDate": "2020-12-04T21:07:33Z", "message": "fixing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cf3f8490c7b3f33b243ee2840cf7ec3cbde6d25", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/8cf3f8490c7b3f33b243ee2840cf7ec3cbde6d25", "committedDate": "2020-12-07T18:49:37Z", "message": "fixing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3a79f667f5688f14e0164b6059ac9577f25282f", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/d3a79f667f5688f14e0164b6059ac9577f25282f", "committedDate": "2020-12-07T20:04:15Z", "message": "clearing up retry logging and fixing delay"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "024b129bea847019ce907f5863cdd4cce638974e", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/024b129bea847019ce907f5863cdd4cce638974e", "committedDate": "2020-12-07T21:23:38Z", "message": "fixing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2145476a8fefd0fe57514ef3dd2ef303d5eabeb", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/b2145476a8fefd0fe57514ef3dd2ef303d5eabeb", "committedDate": "2020-12-07T21:23:52Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/ml-remove-thread-sleep-from-results-persister"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTE0MzI5", "url": "https://github.com/elastic/elasticsearch/pull/65904#pullrequestreview-546514329", "createdAt": "2020-12-07T20:34:54Z", "commit": {"oid": "d3a79f667f5688f14e0164b6059ac9577f25282f"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDozNDo1NFrOIA5jRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMjoxMTo1MFrOIA9FgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgxMzgzMQ==", "bodyText": "Good catch, it was sending the wrong bulkRequest before", "url": "https://github.com/elastic/elasticsearch/pull/65904#discussion_r537813831", "createdAt": "2020-12-07T20:34:54Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/persistence/ResultsPersisterService.java", "diffHunk": "@@ -123,82 +120,70 @@ public BulkResponse bulkIndexWithRetry(BulkRequest bulkRequest,\n                                            String jobId,\n                                            Supplier<Boolean> shouldRetry,\n                                            Consumer<String> retryMsgHandler) {\n-        return bulkIndexWithRetry(bulkRequest, jobId, shouldRetry, retryMsgHandler,\n-            providedBulkRequest -> client.bulk(providedBulkRequest).actionGet());\n+        return bulkIndexWithRetry(bulkRequest,\n+            jobId,\n+            shouldRetry,\n+            retryMsgHandler,\n+            client::bulk);\n     }\n \n     public BulkResponse bulkIndexWithHeadersWithRetry(Map<String, String> headers,\n                                                       BulkRequest bulkRequest,\n                                                       String jobId,\n                                                       Supplier<Boolean> shouldRetry,\n                                                       Consumer<String> retryMsgHandler) {\n-        return bulkIndexWithRetry(bulkRequest, jobId, shouldRetry, retryMsgHandler,\n-            providedBulkRequest -> ClientHelper.executeWithHeaders(\n-                headers, ClientHelper.ML_ORIGIN, client, () -> client.execute(BulkAction.INSTANCE, bulkRequest).actionGet()));\n+        return bulkIndexWithRetry(bulkRequest,\n+            jobId,\n+            shouldRetry,\n+            retryMsgHandler,\n+            (providedBulkRequest, listener) -> ClientHelper.executeWithHeadersAsync(\n+                headers,\n+                ClientHelper.ML_ORIGIN,\n+                client,\n+                BulkAction.INSTANCE,\n+                providedBulkRequest,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a79f667f5688f14e0164b6059ac9577f25282f"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgxODc1MA==", "bodyText": "is this comment out of date?", "url": "https://github.com/elastic/elasticsearch/pull/65904#discussion_r537818750", "createdAt": "2020-12-07T20:43:29Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/persistence/ResultsPersisterService.java", "diffHunk": "@@ -208,48 +193,195 @@ private static boolean isIrrecoverable(Exception ex) {\n         return IRRECOVERABLE_REST_STATUSES.contains(status(t));\n     }\n \n-    /**\n-     * {@link RetryContext} object handles logic that is executed between consecutive retries of an action.\n-     *\n-     * Note that it does not execute the action itself.\n-     */\n-    private class RetryContext {\n+    @SuppressWarnings(\"NonAtomicOperationOnVolatileField\")\n+    private static class BulkRequestRewriter {\n+        private volatile BulkRequest bulkRequest;\n+        BulkRequestRewriter(BulkRequest initialRequest) {\n+            this.bulkRequest = initialRequest;\n+        }\n+\n+        void rewriteRequest(BulkResponse bulkResponse) {\n+            if (bulkResponse.hasFailures() == false) {\n+                return;\n+            }\n+            // To lines to make it obvious that this is two operations and non-atomic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a79f667f5688f14e0164b6059ac9577f25282f"}, "originalPosition": 223}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3MDE0Mw==", "bodyText": "I don't understand why this is now required. Does it have to be part of this change?", "url": "https://github.com/elastic/elasticsearch/pull/65904#discussion_r537870143", "createdAt": "2020-12-07T22:09:07Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/MlSingleNodeTestCase.java", "diffHunk": "@@ -128,11 +149,66 @@ protected void waitForMlTemplates() throws Exception {\n         return responseHolder.get();\n     }\n \n+    protected static ThreadPool mockThreadPool() {\n+        ThreadPool tp = mock(ThreadPool.class);\n+        ExecutorService executor = mock(ExecutorService.class);\n+        doAnswer(invocationOnMock -> {\n+            ((Runnable) invocationOnMock.getArguments()[0]).run();\n+            return null;\n+        }).when(executor).execute(any(Runnable.class));\n+        when(tp.executor(any(String.class))).thenReturn(executor);\n+        doAnswer(invocationOnMock -> {\n+            ((Runnable) invocationOnMock.getArguments()[0]).run();\n+            return null;\n+        }).when(tp).schedule(\n+            any(Runnable.class), any(TimeValue.class), any(String.class)\n+        );\n+        return tp;\n+    }\n+\n+\n     public static void assertNoException(AtomicReference<Exception> error) throws Exception {\n         if (error.get() == null) {\n             return;\n         }\n         throw error.get();\n     }\n \n+    public static class MockPainlessScriptEngine extends MockScriptEngine {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2145476a8fefd0fe57514ef3dd2ef303d5eabeb"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3MTc0NA==", "bodyText": "I'm not convinced this class is bringing much to the party.\nprivate volatile BulkRequest bulkRequest; could be a field in BulkRetryableAction and buildNewRequestFromFailures could be called directly.", "url": "https://github.com/elastic/elasticsearch/pull/65904#discussion_r537871744", "createdAt": "2020-12-07T22:11:50Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/persistence/ResultsPersisterService.java", "diffHunk": "@@ -208,48 +193,195 @@ private static boolean isIrrecoverable(Exception ex) {\n         return IRRECOVERABLE_REST_STATUSES.contains(status(t));\n     }\n \n-    /**\n-     * {@link RetryContext} object handles logic that is executed between consecutive retries of an action.\n-     *\n-     * Note that it does not execute the action itself.\n-     */\n-    private class RetryContext {\n+    @SuppressWarnings(\"NonAtomicOperationOnVolatileField\")\n+    private static class BulkRequestRewriter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2145476a8fefd0fe57514ef3dd2ef303d5eabeb"}, "originalPosition": 213}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODA2OTMy", "url": "https://github.com/elastic/elasticsearch/pull/65904#pullrequestreview-546806932", "createdAt": "2020-12-08T07:20:47Z", "commit": {"oid": "d3a79f667f5688f14e0164b6059ac9577f25282f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoyMDo0N1rOIBKjeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoyMDo0N1rOIBKjeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5MjQwOQ==", "bodyText": "Could you please add some unit indication? Like minimumDelayMillis()?", "url": "https://github.com/elastic/elasticsearch/pull/65904#discussion_r538092409", "createdAt": "2020-12-08T07:20:47Z", "author": {"login": "przemekwitek"}, "path": "server/src/main/java/org/elasticsearch/action/support/RetryableAction.java", "diffHunk": "@@ -118,6 +118,10 @@ protected long calculateDelay(long previousDelay) {\n         return Math.min(previousDelay * 2, Integer.MAX_VALUE);\n     }\n \n+    protected long minimumDelay() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a79f667f5688f14e0164b6059ac9577f25282f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e17cc9d466dd61e376a82a2539d4628dcc20842c", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/e17cc9d466dd61e376a82a2539d4628dcc20842c", "committedDate": "2020-12-08T12:44:27Z", "message": "addressing PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94687f2a2cf0c40730c6bdb2715e90fb8b1b2177", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/94687f2a2cf0c40730c6bdb2715e90fb8b1b2177", "committedDate": "2020-12-08T12:44:33Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/ml-remove-thread-sleep-from-results-persister"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4002, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}