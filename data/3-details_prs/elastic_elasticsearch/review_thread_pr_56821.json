{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NTk3MTI5", "number": 56821, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDoxOTowMVrOD85A0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDoyMzoxMlrOD85IAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTc1MjQ4OnYy", "diffSide": "RIGHT", "path": "plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStoreRepositoryTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDoxOTowMVrOGWG2Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDoxOTowMVrOGWG2Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgzNDAxOQ==", "bodyText": "Let's track this under a different key so we can identify the counts by type? Just POST is probably fine here as I currently can't think of another POST we do on GCS.", "url": "https://github.com/elastic/elasticsearch/pull/56821#discussion_r425834019", "createdAt": "2020-05-15T14:19:01Z", "author": {"login": "original-brownbear"}, "path": "plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStoreRepositoryTests.java", "diffHunk": "@@ -289,17 +292,40 @@ protected boolean canFailRequest(final HttpExchange exchange) {\n     @SuppressForbidden(reason = \"this tests uses a HttpServer to emulate an GCS endpoint\")\n     private static class GoogleCloudStorageStatsCollectorHttpHandler extends HttpStatsCollectorHandler {\n \n+        public static final Pattern contentRangeMatcher = Pattern.compile(\"bytes \\\\d+-(\\\\d+)/(\\\\d+)\");\n+\n         GoogleCloudStorageStatsCollectorHttpHandler(final HttpHandler delegate) {\n             super(delegate);\n         }\n \n         @Override\n-        public void maybeTrack(final String request) {\n+        public void maybeTrack(final String request, Headers requestHeaders) {\n             if (Regex.simpleMatch(\"GET /storage/v1/b/*/o*\", request)) {\n                 trackRequest(\"LIST\");\n             } else if (Regex.simpleMatch(\"GET /download/storage/v1/b/*\", request)) {\n                 trackRequest(\"GET\");\n+            } else if (Regex.simpleMatch(\"PUT /upload/storage/v1/b/*\", request) && isLastPart(requestHeaders)) {\n+                trackRequest(\"PUT\");\n+            } else if (Regex.simpleMatch(\"POST /upload/storage/v1/b/*uploadType=multipart*\", request)) {\n+                trackRequest(\"PUT\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bdd164a3f649145a67cb109d308ffddc27c5d9a"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTc3MDg4OnYy", "diffSide": "RIGHT", "path": "plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDoyMzoxMlrOGWHBeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDoyMzoxMlrOGWHBeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgzNjkyMA==", "bodyText": "As mentioned below, let's give this a separate key to track under so we get metrics on what upload type we use how often.", "url": "https://github.com/elastic/elasticsearch/pull/56821#discussion_r425836920", "createdAt": "2020-05-15T14:23:12Z", "author": {"login": "original-brownbear"}, "path": "plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStore.java", "diffHunk": "@@ -335,6 +336,7 @@ private void writeBlobMultipart(BlobInfo blobInfo, InputStream inputStream, long\n                 new Storage.BlobTargetOption[0];\n             SocketAccess.doPrivilegedVoidIOException(\n                     () -> client().create(blobInfo, buffer, targetOptions));\n+            stats.trackPutObjectOperation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bdd164a3f649145a67cb109d308ffddc27c5d9a"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 446, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}