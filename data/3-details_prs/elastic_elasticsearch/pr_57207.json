{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzODI5Nzg5", "number": 57207, "title": "Fix casting of scaled_float in sorts", "bodyText": "Previously we'd get a ClassCastException when you tried to use\nnumeric_type on scaled_float. Oops! This cleans up the CCE and moves\nsome code around so the casting actually works.", "createdAt": "2020-05-27T12:47:33Z", "url": "https://github.com/elastic/elasticsearch/pull/57207", "merged": true, "mergeCommit": {"oid": "7382f446f79e909c1eeb3d0a2aeb75cf0c02325e"}, "closed": true, "closedAt": "2020-05-29T21:00:19Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclYnG1gH2gAyNDIzODI5Nzg5OjU3MmYwOTBiOWNiNGNmNTdkYjU5OWVmOTI0M2NjMjVmZDhhNTgyMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmILyNgH2gAyNDIzODI5Nzg5OjQyYzkwOTBiODk3N2ZlMmQ3NDc1MmQzODI2ODk5NTBiOGMxZjE3MDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "572f090b9cb4cf57db599ef9243cc25fd8a58218", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/572f090b9cb4cf57db599ef9243cc25fd8a58218", "committedDate": "2020-05-27T12:41:43Z", "message": "Fix casting of scaled_float in sorts\n\nPreviously we'd get a `ClassCastException` when you tried to use\n`numeric_type` on `scaled_float`. Oops! This cleans up the CCE and moves\nsome code around so the casting actually works."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTM4MTgx", "url": "https://github.com/elastic/elasticsearch/pull/57207#pullrequestreview-421138181", "createdAt": "2020-05-29T17:10:59Z", "commit": {"oid": "572f090b9cb4cf57db599ef9243cc25fd8a58218"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoxMDo1OVrOGclROA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoxMDo1OVrOGclROA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYyMzkyOA==", "bodyText": "Maybe leave a comment in here about why half_floats need a custom comparator?  I'm assuming their encoding makes them non-ordered or something?", "url": "https://github.com/elastic/elasticsearch/pull/57207#discussion_r432623928", "createdAt": "2020-05-29T17:10:59Z", "author": {"login": "polyfractal"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericIndexFieldData.java", "diffHunk": "@@ -113,95 +101,29 @@ public final Index index() {\n         return index;\n     }\n \n-    /**\n-     * Returns the {@link SortField} to used for sorting.\n-     * Values are casted to the provided <code>targetNumericType</code> type if it doesn't\n-     * match the field's <code>numericType</code>.\n-     */\n-    public SortField sortField(NumericType targetNumericType, Object missingValue, MultiValueMode sortMode,\n-                               Nested nested, boolean reverse) {\n-        final XFieldComparatorSource source = comparatorSource(targetNumericType, missingValue, sortMode, nested);\n-\n-        /**\n-         * Check if we can use a simple {@link SortedNumericSortField} compatible with index sorting and\n-         * returns a custom sort field otherwise.\n-         */\n-        if (nested != null\n-                || (sortMode != MultiValueMode.MAX && sortMode != MultiValueMode.MIN)\n-                || numericType == NumericType.HALF_FLOAT\n-                || targetNumericType != numericType) {\n-            return new SortField(fieldName, source, reverse);\n-        }\n-\n-        final SortField sortField;\n-        final SortedNumericSelector.Type selectorType = sortMode == MultiValueMode.MAX ?\n-            SortedNumericSelector.Type.MAX : SortedNumericSelector.Type.MIN;\n-        switch (numericType) {\n-            case FLOAT:\n-                sortField = new SortedNumericSortField(fieldName, SortField.Type.FLOAT, reverse, selectorType);\n-                break;\n-\n-            case DOUBLE:\n-                sortField = new SortedNumericSortField(fieldName, SortField.Type.DOUBLE, reverse, selectorType);\n-                break;\n-\n-            default:\n-                assert !numericType.isFloatingPoint();\n-                sortField = new SortedNumericSortField(fieldName, SortField.Type.LONG, reverse, selectorType);\n-                break;\n-        }\n-        sortField.setMissingValue(source.missingObject(missingValue, reverse));\n-        return sortField;\n-    }\n-\n     @Override\n-    public SortField sortField(Object missingValue, MultiValueMode sortMode, Nested nested, boolean reverse) {\n-        return sortField(numericType, missingValue, sortMode, nested, reverse);\n-    }\n-\n-    /**\n-     * Builds a {@linkplain BucketedSort} for the {@code targetNumericType},\n-     * casting the values if their native type doesn't match.\n-     */\n-    public BucketedSort newBucketedSort(NumericType targetNumericType, BigArrays bigArrays, @Nullable Object missingValue,\n-            MultiValueMode sortMode, Nested nested, SortOrder sortOrder, DocValueFormat format,\n-            int bucketSize, BucketedSort.ExtraData extra) {\n-        return comparatorSource(targetNumericType, missingValue, sortMode, nested)\n-                .newBucketedSort(bigArrays, sortOrder, format, bucketSize, extra);\n+    protected boolean sortRequiresCustomComparator() {\n+        return numericType == NumericType.HALF_FLOAT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "572f090b9cb4cf57db599ef9243cc25fd8a58218"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTQ3MzU4", "url": "https://github.com/elastic/elasticsearch/pull/57207#pullrequestreview-421147358", "createdAt": "2020-05-29T17:24:34Z", "commit": {"oid": "572f090b9cb4cf57db599ef9243cc25fd8a58218"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyNDozNVrOGclsCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyNDozNVrOGclsCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzMDc5Mw==", "bodyText": "thanks", "url": "https://github.com/elastic/elasticsearch/pull/57207#discussion_r432630793", "createdAt": "2020-05-29T17:24:35Z", "author": {"login": "jimczi"}, "path": "modules/mapper-extras/src/test/resources/rest-api-spec/test/scaled_float/10_basic.yml", "diffHunk": "@@ -97,8 +97,28 @@ setup:\n \n   - do:\n       search:\n-        rest_total_hits_as_int: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "572f090b9cb4cf57db599ef9243cc25fd8a58218"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0b549cb0edbd85a7a6b4f696fa212fd16ea8ddc", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/d0b549cb0edbd85a7a6b4f696fa212fd16ea8ddc", "committedDate": "2020-05-29T19:29:38Z", "message": "Explain why custom comparator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42c9090b8977fe2d74752d382689950b8c1f1706", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/42c9090b8977fe2d74752d382689950b8c1f1706", "committedDate": "2020-05-29T20:07:19Z", "message": "Merge branch 'master' into fix_scaled_float_sort_casting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4222, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}