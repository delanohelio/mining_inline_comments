{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMTI0Mjgx", "number": 52016, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTo0MzozM1rODd1zGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTo0MzozM1rODd1zGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjE2NzMwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTo0MzozM1rOFmrPFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTo0OToxOVrOFmrZfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5ODU4Mg==", "bodyText": "I think you mean they're always longs?", "url": "https://github.com/elastic/elasticsearch/pull/52016#discussion_r376098582", "createdAt": "2020-02-06T21:43:33Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java", "diffHunk": "@@ -419,10 +419,27 @@ public IntervalsSource intervals(String query, int max_gaps, boolean ordered,\n      *  {@link Relation#INTERSECTS}, which is always fine to return when there is\n      *  no way to check whether values are actually within bounds. */\n     public Relation isFieldWithinQuery(\n-        IndexReader reader,\n-        Object from, Object to,\n-        boolean includeLower, boolean includeUpper,\n-        ZoneId timeZone, DateMathParser dateMathParser, QueryRewriteContext context) throws IOException {\n+            IndexReader reader,\n+            Object from, Object to,\n+            boolean includeLower, boolean includeUpper,\n+            ZoneId timeZone, DateMathParser dateMathParser, QueryRewriteContext context) throws IOException {\n+        return Relation.INTERSECTS;\n+    }\n+\n+    /**\n+     * Return whether all values of the given {@link IndexReader} are within the range,\n+     * outside the range or cross the range. The default implementation returns\n+     * {@link Relation#INTERSECTS}, which is always fine to return when there is\n+     * no way to check whether values are actually within bounds.\n+     *\n+     * Use this instead of\n+     * {@link #isFieldWithinQuery(IndexReader, Object, Object, boolean, boolean, ZoneId, DateMathParser, QueryRewriteContext)}\n+     * when you *know* the {@code fromInclusive} and {@code toInclusive} are always\n+     * floats.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6fd9be2edbc6d41e0a4590aae4970d23f15cb5d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwMTI0Ng==", "bodyText": "+1", "url": "https://github.com/elastic/elasticsearch/pull/52016#discussion_r376101246", "createdAt": "2020-02-06T21:49:19Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java", "diffHunk": "@@ -419,10 +419,27 @@ public IntervalsSource intervals(String query, int max_gaps, boolean ordered,\n      *  {@link Relation#INTERSECTS}, which is always fine to return when there is\n      *  no way to check whether values are actually within bounds. */\n     public Relation isFieldWithinQuery(\n-        IndexReader reader,\n-        Object from, Object to,\n-        boolean includeLower, boolean includeUpper,\n-        ZoneId timeZone, DateMathParser dateMathParser, QueryRewriteContext context) throws IOException {\n+            IndexReader reader,\n+            Object from, Object to,\n+            boolean includeLower, boolean includeUpper,\n+            ZoneId timeZone, DateMathParser dateMathParser, QueryRewriteContext context) throws IOException {\n+        return Relation.INTERSECTS;\n+    }\n+\n+    /**\n+     * Return whether all values of the given {@link IndexReader} are within the range,\n+     * outside the range or cross the range. The default implementation returns\n+     * {@link Relation#INTERSECTS}, which is always fine to return when there is\n+     * no way to check whether values are actually within bounds.\n+     *\n+     * Use this instead of\n+     * {@link #isFieldWithinQuery(IndexReader, Object, Object, boolean, boolean, ZoneId, DateMathParser, QueryRewriteContext)}\n+     * when you *know* the {@code fromInclusive} and {@code toInclusive} are always\n+     * floats.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5ODU4Mg=="}, "originalCommit": {"oid": "b6fd9be2edbc6d41e0a4590aae4970d23f15cb5d"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4993, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}