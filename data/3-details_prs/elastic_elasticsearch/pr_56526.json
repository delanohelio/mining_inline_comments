{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MjA1NjQw", "number": 56526, "title": "Test adjustments for FIPS 140", "bodyText": "This change aims to fix our setup in CI so that we can run 7.x in\nFIPS 140 mode. The major issue that we have in 7.x and did not\nhave in master is that we can't use the diagnostic trust manager\nin FIPS mode in Java 8 with SunJSSE in FIPS approved mode as it\nexplicitly disallows the wrapping of X509TrustManager.\nPrevious attempts like #56427 and #52211 focused on disabling the\nsetting in all of our tests when creating a Settings object or\non setting fips_mode.enabled accordingly (which implicitly disables\nthe diagnostic trust manager). The attempts weren't future proof\nthough as nothing would forbid someone to add new tests without\nsetting the necessary setting and forcing this would be very\ninconvenient for any other case ( see\n#56427 (comment)\nfor the full argumentation).\nThis change introduces a runtime check in SSLService that overrides\nthe configuration value of xpack.security.ssl.diagnose.trust and\ndisables the diagnostic trust manager when we are running in Java 8\nand the SunJSSE provider is set in FIPS mode.", "createdAt": "2020-05-11T16:17:18Z", "url": "https://github.com/elastic/elasticsearch/pull/56526", "merged": true, "mergeCommit": {"oid": "239ada16692a70bd384da70ea9aa14c68fd6cc02"}, "closed": true, "closedAt": "2020-05-15T15:10:46Z", "author": {"login": "jkakavas"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgR8dcgH2gAyNDE2MjA1NjQwOjA5MWQ0MjU1ZGE3YjBjMDdjMGQ5MTJjODBjNThkNjA4YjM3Y2EzNzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchUi2agFqTQxMjIwNTk0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "091d4255da7b0c07c0d912c80c58d608b37ca373", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/091d4255da7b0c07c0d912c80c58d608b37ca373", "committedDate": "2020-05-11T16:06:05Z", "message": "Test adjustments for FIPS 140\n\nThis change aims to fix our setup in CI so that we can run 7.x in\nFIPS 140 mode. The major issue that we have in 7.x and did not\nhave in master is that we can't use the diagnostic trust manager\nin FIPS mode in Java 8 with SunJSSE in FIPS approved mode as it\nexplicitly disallows the wrapping of X509TrustManager.\n\nPrevious attempts like #56427 and #52211 focused on disabling the\nsetting in all of our tests when creating a Settings object or\non setting fips_mode.enabled accordingly (which implicitly disables\nthe diagnostic trust manager). The attempts weren't future proof\nthough as nothing would forbid someone to add new tests without\nsetting the necessary setting and forcing this would be very\ninconvenient for any other case ( see\nhttps://github.com/elastic/elasticsearch/pull/56427#issue-415264309\nfor the full argumentation).\n\nThis change introduces a system property that effectively bypasses\nthe configuration value of xpack.security.ssl.diagnose.trust and\ndisables the diagnostic trust manager. We will then set this\nsystem property in our periodic CI jobs for Java 8."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDQyNTI1", "url": "https://github.com/elastic/elasticsearch/pull/56526#pullrequestreview-409442525", "createdAt": "2020-05-11T18:54:24Z", "commit": {"oid": "091d4255da7b0c07c0d912c80c58d608b37ca373"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1NDoyNFrOGTpG8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTowMTo0OFrOGTpXjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI0OTY1MQ==", "bodyText": "for consistency these should be indented 2 spaces", "url": "https://github.com/elastic/elasticsearch/pull/56526#discussion_r423249651", "createdAt": "2020-05-11T18:54:24Z", "author": {"login": "rjernst"}, "path": "plugins/discovery-ec2/build.gradle", "diffHunk": "@@ -64,12 +64,34 @@ task writeTestJavaPolicy {\n       throw new GradleException(\"failed to create temporary directory [${tmp}]\")\n     }\n     final File javaPolicy = file(\"${tmp}/java.policy\")\n-    javaPolicy.write(\n-      [\n-        \"grant {\",\n-        \"  permission java.util.PropertyPermission \\\"com.amazonaws.sdk.ec2MetadataServiceEndpointOverride\\\", \\\"write\\\";\",\n-        \"};\"\n-      ].join(\"\\n\"))\n+    if (BuildParams.inFipsJvm) {\n+      javaPolicy.write(\n+        [\n+          \"grant {\",\n+          \"permission java.security.SecurityPermission \\\"putProviderProperty.BCFIPS\\\";\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091d4255da7b0c07c0d912c80c58d608b37ca373"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MzEyNg==", "bodyText": "What does the prefixed = do here? I wasn't able to find documentation on that special syntax. We should add a comment explaining for future readers.", "url": "https://github.com/elastic/elasticsearch/pull/56526#discussion_r423253126", "createdAt": "2020-05-11T19:00:17Z", "author": {"login": "rjernst"}, "path": "plugins/discovery-ec2/build.gradle", "diffHunk": "@@ -80,7 +102,11 @@ test {\n \n   // this is needed to manipulate com.amazonaws.sdk.ec2MetadataServiceEndpointOverride system property\n   // it is better rather disable security manager at all with `systemProperty 'tests.security.manager', 'false'`\n-  systemProperty 'java.security.policy', \"file://${buildDir}/tmp/java.policy\"\n+  if (BuildParams.inFipsJvm){\n+    systemProperty 'java.security.policy', \"=file://${buildDir}/tmp/java.policy\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091d4255da7b0c07c0d912c80c58d608b37ca373"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MzkwMw==", "bodyText": "Why can't we pass in fips mode as disabled in our tests properties from BuildPlugin? I don't see the need for another property, and don't like this leaking into production code.", "url": "https://github.com/elastic/elasticsearch/pull/56526#discussion_r423253903", "createdAt": "2020-05-11T19:01:48Z", "author": {"login": "rjernst"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ssl/SSLService.java", "diffHunk": "@@ -829,7 +829,12 @@ private static String sslContextAlgorithm(List<String> supportedProtocols) {\n     }\n \n     private boolean shouldEnableDiagnoseTrust() {\n-        if (XPackSettings.FIPS_MODE_ENABLED.get(settings) && DIAGNOSE_TRUST_EXCEPTIONS_SETTING.exists(settings) == false ) {\n+        // We disable the DiagnosticTrustManager in tests in Java 8 in FIPS 140 mode, as we're not allowed to wrap X509TrustManager\n+        final boolean explicitlyDisable = Boolean.parseBoolean(System.getProperty(\"es.disable.diagnostic.trust.manager\", \"false\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091d4255da7b0c07c0d912c80c58d608b37ca373"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3c7af6b8332f7bd5514580cc2594ae4d2f7dadd", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/c3c7af6b8332f7bd5514580cc2594ae4d2f7dadd", "committedDate": "2020-05-12T06:23:22Z", "message": "address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58539f98786bdb994401df33b2fcc5f722cfdf0e", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/58539f98786bdb994401df33b2fcc5f722cfdf0e", "committedDate": "2020-05-12T06:32:07Z", "message": "remove pasted text"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba92aeb4b6b7870fd48104e82b255186e439c5d7", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/ba92aeb4b6b7870fd48104e82b255186e439c5d7", "committedDate": "2020-05-12T07:10:54Z", "message": "Merge branch '7.x' into fips-ci-7.x-take2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5ODMwODU3", "url": "https://github.com/elastic/elasticsearch/pull/56526#pullrequestreview-409830857", "createdAt": "2020-05-12T08:48:58Z", "commit": {"oid": "ba92aeb4b6b7870fd48104e82b255186e439c5d7"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODo0ODo1OFrOGT8lGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODo1Njo0M1rOGT85Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU2ODY2NQ==", "bodyText": "Is the null to test the store type can be auto-detected?", "url": "https://github.com/elastic/elasticsearch/pull/56526#discussion_r423568665", "createdAt": "2020-05-12T08:48:58Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ssl/SSLServiceTests.java", "diffHunk": "@@ -90,14 +90,19 @@\n \n     @Before\n     public void setup() throws Exception {\n-        // Randomise the keystore type (jks/PKCS#12)\n-        if (randomBoolean()) {\n-            testnodeStore = getDataPath(\"/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testnode.jks\");\n-            // The default is to use JKS. Randomly test with explicit and with the default value.\n-            testnodeStoreType = \"jks\";\n-        } else {\n+        // Randomise the keystore type (jks/PKCS#12) when possible\n+        if (inFipsJvm()) {\n             testnodeStore = getDataPath(\"/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testnode.p12\");\n             testnodeStoreType = randomBoolean() ? \"PKCS12\" : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba92aeb4b6b7870fd48104e82b255186e439c5d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3Mzg1MQ==", "bodyText": "Is it possible to make this work if p12 file is used?", "url": "https://github.com/elastic/elasticsearch/pull/56526#discussion_r423573851", "createdAt": "2020-05-12T08:56:43Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLReloadDuringStartupIntegTests.java", "diffHunk": "@@ -28,6 +29,11 @@\n @ClusterScope(transportClientRatio = 0)\n public class SSLReloadDuringStartupIntegTests extends SecurityIntegTestCase {\n \n+    @BeforeClass\n+    public static void skipInFips() {\n+        assumeFalse(\"Can't use JKS keystores in FIPS JVM\", inFipsJvm());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba92aeb4b6b7870fd48104e82b255186e439c5d7"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24a5306824c6eda13e96b3fe9ece6654eece052e", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/24a5306824c6eda13e96b3fe9ece6654eece052e", "committedDate": "2020-05-13T09:16:45Z", "message": "Remove system property and do a runtime detection of the security provider in use"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjA1OTQ1", "url": "https://github.com/elastic/elasticsearch/pull/56526#pullrequestreview-412205945", "createdAt": "2020-05-14T21:41:45Z", "commit": {"oid": "24a5306824c6eda13e96b3fe9ece6654eece052e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 145, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}