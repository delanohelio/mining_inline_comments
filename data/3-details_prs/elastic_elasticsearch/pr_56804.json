{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NDI1Mzk3", "number": 56804, "title": "[TEST] Fix log tail mocking in native process unit tests", "bodyText": "This is a followup to #56632. Tests that had to be changed\nto mock the C++ log handler more accurately need to be more\ncareful about when that stream ends, as ending of that\nstream is used to detect crashes in the production system.\nFixes #56796", "createdAt": "2020-05-15T07:31:05Z", "url": "https://github.com/elastic/elasticsearch/pull/56804", "merged": true, "mergeCommit": {"oid": "0585fc63d70138763f70591d703cef05aab98741"}, "closed": true, "closedAt": "2020-05-15T09:08:32Z", "author": {"login": "droberts195"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchc5XZgH2gAyNDE4NDI1Mzk3OjEyOTBlNWJmM2E3Mjg4MWE3MGUwYzIzNjJkOTFkY2Q1NjVlYWVkMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchdf2SgH2gAyNDE4NDI1Mzk3Ojg4ODUwYjE2YzE2OGU2ZDdmYTAzOTZhODA0MTQ0NDgxYzQzNjE3N2Y=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1290e5bf3a72881a70e0c2362d91dcd565eaed18", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/1290e5bf3a72881a70e0c2362d91dcd565eaed18", "committedDate": "2020-05-15T07:25:35Z", "message": "[TEST] Fix log tail mocking in native process unit tests\n\nThis is a followup to #56632. Tests that had to be changed\nto mock the C++ log handler more accurately need to be more\ncareful about when that stream ends, as ending of that\nstream is used to detect crashes in the production system.\n\nFixes #56796"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNDE1NzYz", "url": "https://github.com/elastic/elasticsearch/pull/56804#pullrequestreview-412415763", "createdAt": "2020-05-15T07:39:30Z", "commit": {"oid": "1290e5bf3a72881a70e0c2362d91dcd565eaed18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNzozOTozMFrOGV54mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNzozOTozMFrOGV54mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYyMTY1Ng==", "bodyText": "Should it be in the finally block just like the other tests? If not, what's the difference?", "url": "https://github.com/elastic/elasticsearch/pull/56804#discussion_r425621656", "createdAt": "2020-05-15T07:39:30Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/process/AbstractNativeProcessTests.java", "diffHunk": "@@ -82,29 +87,34 @@ public void testStart_DoNotDetectCrashWhenNoInputPipeProvided() throws Exception\n         when(processPipes.getProcessInStream()).thenReturn(Optional.empty());\n         try (AbstractNativeProcess process = new TestNativeProcess()) {\n             process.start(executorService);\n-            wait.countDown();\n+        } finally {\n+            mockNativeProcessLoggingStreamEnds.countDown();\n+            // Not detecting a crash is confirmed in terminateExecutorService()\n         }\n     }\n \n     public void testStart_DoNotDetectCrashWhenProcessIsBeingClosed() throws Exception {\n         try (AbstractNativeProcess process = new TestNativeProcess()) {\n             process.start(executorService);\n-            wait.countDown();\n+        } finally {\n+            mockNativeProcessLoggingStreamEnds.countDown();\n+            // Not detecting a crash is confirmed in terminateExecutorService()\n         }\n     }\n \n     public void testStart_DoNotDetectCrashWhenProcessIsBeingKilled() throws Exception {\n         try (AbstractNativeProcess process = new TestNativeProcess()) {\n             process.start(executorService);\n             process.kill();\n-            wait.countDown();\n+            mockNativeProcessLoggingStreamEnds.countDown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1290e5bf3a72881a70e0c2362d91dcd565eaed18"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNDI2NDk4", "url": "https://github.com/elastic/elasticsearch/pull/56804#pullrequestreview-412426498", "createdAt": "2020-05-15T07:56:47Z", "commit": {"oid": "1290e5bf3a72881a70e0c2362d91dcd565eaed18"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNzo1Njo0N1rOGV6ZUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNzo1Njo0N1rOGV6ZUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYzMDAzNA==", "bodyText": "final?", "url": "https://github.com/elastic/elasticsearch/pull/56804#discussion_r425630034", "createdAt": "2020-05-15T07:56:47Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/process/AbstractNativeProcessTests.java", "diffHunk": "@@ -43,18 +43,23 @@\n     private ProcessPipes processPipes;\n     private Consumer<String> onProcessCrash;\n     private ExecutorService executorService;\n-    private CountDownLatch wait = new CountDownLatch(1);\n+    // This must be counted down at the point where a real native process would terminate, thus\n+    // causing an end-of-file on the stream tailing its logs.  This will be:\n+    // 1) After close() for jobs that stop gracefully\n+    // 2) After kill() for jobs that are forcefully terminated\n+    // 3) After a simulated crash when we test simulated crash\n+    private CountDownLatch mockNativeProcessLoggingStreamEnds = new CountDownLatch(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1290e5bf3a72881a70e0c2362d91dcd565eaed18"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88850b16c168e6d7fa0396a804144481c436177f", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/88850b16c168e6d7fa0396a804144481c436177f", "committedDate": "2020-05-15T08:07:37Z", "message": "Address review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 6, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}