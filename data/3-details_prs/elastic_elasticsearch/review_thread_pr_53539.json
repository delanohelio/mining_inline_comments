{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NzM3NDcz", "number": 53539, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODoyMjoxN1rODoOlKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODozMDozMlrODoOvNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTA4NTIxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODoyMjoxN1rOF2pjvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODoyMjoxN1rOF2pjvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0ODMxNg==", "bodyText": "Should 30 become a constant in this class?", "url": "https://github.com/elastic/elasticsearch/pull/53539#discussion_r392848316", "createdAt": "2020-03-16T08:22:17Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "diffHunk": "@@ -272,7 +275,7 @@ public boolean supportsCategoricalFields() {\n     @Override\n     public List<FieldCardinalityConstraint> getFieldCardinalityConstraints() {\n         // This restriction is due to the fact that currently the C++ backend only supports binomial classification.\n-        return Collections.singletonList(FieldCardinalityConstraint.between(dependentVariable, 2, 2));\n+        return Collections.singletonList(FieldCardinalityConstraint.between(dependentVariable, 2, 30));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d0c5cc7ccb2c017cdaad6565250415d1e0f9ef"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTA5NTQzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ClassificationIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODoyNToyM1rOF2ppyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwOToxNjo1OFrOF2rPhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0OTg2Ng==", "bodyText": "Could this test be made to work without muting if you indexed more than 30 distinct values for dep var?", "url": "https://github.com/elastic/elasticsearch/pull/53539#discussion_r392849866", "createdAt": "2020-03-16T08:25:23Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ClassificationIT.java", "diffHunk": "@@ -322,9 +322,11 @@ public void testStopAndRestart() throws Exception {\n         assertEvaluation(KEYWORD_FIELD, KEYWORD_FIELD_VALUES, \"ml.\" + predictedClassField);\n     }\n \n+    @AwaitsFix(bugUrl = \"Muted until ml-cpp supports multiple classes\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d0c5cc7ccb2c017cdaad6565250415d1e0f9ef"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg3NTkxMA==", "bodyText": "Yes, I'll do that but after multiclass is wired in ml-cpp", "url": "https://github.com/elastic/elasticsearch/pull/53539#discussion_r392875910", "createdAt": "2020-03-16T09:16:58Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ClassificationIT.java", "diffHunk": "@@ -322,9 +322,11 @@ public void testStopAndRestart() throws Exception {\n         assertEvaluation(KEYWORD_FIELD, KEYWORD_FIELD_VALUES, \"ml.\" + predictedClassField);\n     }\n \n+    @AwaitsFix(bugUrl = \"Muted until ml-cpp supports multiple classes\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0OTg2Ng=="}, "originalCommit": {"oid": "b4d0c5cc7ccb2c017cdaad6565250415d1e0f9ef"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTExMDk1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/extractor/ExtractedFieldsTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODozMDozMlrOF2pzdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwOToxODowNVrOF2rRwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MjM0MA==", "bodyText": "Should there be at least one unit test with non-empty map provided to this constructor?", "url": "https://github.com/elastic/elasticsearch/pull/53539#discussion_r392852340", "createdAt": "2020-03-16T08:30:32Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/extractor/ExtractedFieldsTests.java", "diffHunk": "@@ -32,7 +32,7 @@ public void testAllTypesOfFields() {\n         ExtractedField sourceField1 = new SourceField(\"src1\", Collections.singleton(\"text\"));\n         ExtractedField sourceField2 = new SourceField(\"src2\", Collections.singleton(\"text\"));\n         ExtractedFields extractedFields = new ExtractedFields(Arrays.asList(\n-                docValue1, docValue2, scriptField1, scriptField2, sourceField1, sourceField2));\n+                docValue1, docValue2, scriptField1, scriptField2, sourceField1, sourceField2), Collections.emptyMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d0c5cc7ccb2c017cdaad6565250415d1e0f9ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg3NjQ4MA==", "bodyText": "There is in AnalyticsProcessConfigTests where this is tested. Testing it here would just test the getter.", "url": "https://github.com/elastic/elasticsearch/pull/53539#discussion_r392876480", "createdAt": "2020-03-16T09:18:05Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/extractor/ExtractedFieldsTests.java", "diffHunk": "@@ -32,7 +32,7 @@ public void testAllTypesOfFields() {\n         ExtractedField sourceField1 = new SourceField(\"src1\", Collections.singleton(\"text\"));\n         ExtractedField sourceField2 = new SourceField(\"src2\", Collections.singleton(\"text\"));\n         ExtractedFields extractedFields = new ExtractedFields(Arrays.asList(\n-                docValue1, docValue2, scriptField1, scriptField2, sourceField1, sourceField2));\n+                docValue1, docValue2, scriptField1, scriptField2, sourceField1, sourceField2), Collections.emptyMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MjM0MA=="}, "originalCommit": {"oid": "b4d0c5cc7ccb2c017cdaad6565250415d1e0f9ef"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3238, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}