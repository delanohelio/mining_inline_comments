{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0ODE0ODQ1", "number": 56370, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozMjoxMVrOD6WWBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozMzowMlrOD6WXTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTEwMDg3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/InternalGeoCentroid.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozMjoxMVrOGSI9Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxODoyMjo1NVrOGSKyXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NDI1MQ==", "bodyText": "Huh! The count member variable was always a long!", "url": "https://github.com/elastic/elasticsearch/pull/56370#discussion_r421674251", "createdAt": "2020-05-07T17:32:11Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/InternalGeoCentroid.java", "diffHunk": "@@ -115,7 +115,7 @@ public long count() {\n     public InternalGeoCentroid reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext) {\n         double lonSum = Double.NaN;\n         double latSum = Double.NaN;\n-        int totalCount = 0;\n+        long totalCount = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "024b7e0443f4ab6631b615995508c80ca2f39086"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MTA3Mg==", "bodyText": "yup!", "url": "https://github.com/elastic/elasticsearch/pull/56370#discussion_r421681072", "createdAt": "2020-05-07T17:43:40Z", "author": {"login": "talevy"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/InternalGeoCentroid.java", "diffHunk": "@@ -115,7 +115,7 @@ public long count() {\n     public InternalGeoCentroid reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext) {\n         double lonSum = Double.NaN;\n         double latSum = Double.NaN;\n-        int totalCount = 0;\n+        long totalCount = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NDI1MQ=="}, "originalCommit": {"oid": "024b7e0443f4ab6631b615995508c80ca2f39086"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcwNDI4NQ==", "bodyText": "Huh!", "url": "https://github.com/elastic/elasticsearch/pull/56370#discussion_r421704285", "createdAt": "2020-05-07T18:22:55Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/InternalGeoCentroid.java", "diffHunk": "@@ -115,7 +115,7 @@ public long count() {\n     public InternalGeoCentroid reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext) {\n         double lonSum = Double.NaN;\n         double latSum = Double.NaN;\n-        int totalCount = 0;\n+        long totalCount = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NDI1MQ=="}, "originalCommit": {"oid": "024b7e0443f4ab6631b615995508c80ca2f39086"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTEwNDEyOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalGeoCentroidTests.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozMzowMlrOGSI--Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxODowOTozMVrOGSKUsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NDc0NQ==", "bodyText": "Usually the reducing result is in the list, right?", "url": "https://github.com/elastic/elasticsearch/pull/56370#discussion_r421674745", "createdAt": "2020-05-07T17:33:02Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalGeoCentroidTests.java", "diffHunk": "@@ -67,6 +70,16 @@ protected void assertReduced(InternalGeoCentroid reduced, List<InternalGeoCentro\n         assertEquals(totalCount, reduced.count());\n     }\n \n+    public void testReduceMaxCount() {\n+        InternalGeoCentroid maxValueGeoCentroid = new InternalGeoCentroid(\"agg\", new GeoPoint(10, 0),\n+            Long.MAX_VALUE, Collections.emptyMap());\n+        InternalGeoCentroid reducingGeoCentroid = new InternalGeoCentroid(\"agg\", new GeoPoint(10, 0),\n+            randomNonNegativeLong(), Collections.emptyMap());\n+        InternalGeoCentroid reducedGeoCentroid = reducingGeoCentroid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "024b7e0443f4ab6631b615995508c80ca2f39086"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MDc2OQ==", "bodyText": "I suppose I was not really interested in the semantics of how this method was used in the real world, and more interested in the reduce logic itself -- as it is returned. should I change this?", "url": "https://github.com/elastic/elasticsearch/pull/56370#discussion_r421680769", "createdAt": "2020-05-07T17:43:07Z", "author": {"login": "talevy"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalGeoCentroidTests.java", "diffHunk": "@@ -67,6 +70,16 @@ protected void assertReduced(InternalGeoCentroid reduced, List<InternalGeoCentro\n         assertEquals(totalCount, reduced.count());\n     }\n \n+    public void testReduceMaxCount() {\n+        InternalGeoCentroid maxValueGeoCentroid = new InternalGeoCentroid(\"agg\", new GeoPoint(10, 0),\n+            Long.MAX_VALUE, Collections.emptyMap());\n+        InternalGeoCentroid reducingGeoCentroid = new InternalGeoCentroid(\"agg\", new GeoPoint(10, 0),\n+            randomNonNegativeLong(), Collections.emptyMap());\n+        InternalGeoCentroid reducedGeoCentroid = reducingGeoCentroid", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NDc0NQ=="}, "originalCommit": {"oid": "024b7e0443f4ab6631b615995508c80ca2f39086"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5MzYwNw==", "bodyText": "It'd make me feel better if you did maxValueGeoCentroid.reduce(singletonList(maxValueGeoCentroid), null).", "url": "https://github.com/elastic/elasticsearch/pull/56370#discussion_r421693607", "createdAt": "2020-05-07T18:04:16Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalGeoCentroidTests.java", "diffHunk": "@@ -67,6 +70,16 @@ protected void assertReduced(InternalGeoCentroid reduced, List<InternalGeoCentro\n         assertEquals(totalCount, reduced.count());\n     }\n \n+    public void testReduceMaxCount() {\n+        InternalGeoCentroid maxValueGeoCentroid = new InternalGeoCentroid(\"agg\", new GeoPoint(10, 0),\n+            Long.MAX_VALUE, Collections.emptyMap());\n+        InternalGeoCentroid reducingGeoCentroid = new InternalGeoCentroid(\"agg\", new GeoPoint(10, 0),\n+            randomNonNegativeLong(), Collections.emptyMap());\n+        InternalGeoCentroid reducedGeoCentroid = reducingGeoCentroid", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NDc0NQ=="}, "originalCommit": {"oid": "024b7e0443f4ab6631b615995508c80ca2f39086"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5NjY4OA==", "bodyText": "done", "url": "https://github.com/elastic/elasticsearch/pull/56370#discussion_r421696688", "createdAt": "2020-05-07T18:09:31Z", "author": {"login": "talevy"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalGeoCentroidTests.java", "diffHunk": "@@ -67,6 +70,16 @@ protected void assertReduced(InternalGeoCentroid reduced, List<InternalGeoCentro\n         assertEquals(totalCount, reduced.count());\n     }\n \n+    public void testReduceMaxCount() {\n+        InternalGeoCentroid maxValueGeoCentroid = new InternalGeoCentroid(\"agg\", new GeoPoint(10, 0),\n+            Long.MAX_VALUE, Collections.emptyMap());\n+        InternalGeoCentroid reducingGeoCentroid = new InternalGeoCentroid(\"agg\", new GeoPoint(10, 0),\n+            randomNonNegativeLong(), Collections.emptyMap());\n+        InternalGeoCentroid reducedGeoCentroid = reducingGeoCentroid", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NDc0NQ=="}, "originalCommit": {"oid": "024b7e0443f4ab6631b615995508c80ca2f39086"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 626, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}