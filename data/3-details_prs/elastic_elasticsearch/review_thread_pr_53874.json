{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNTYwMTYx", "number": 53874, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTowMDo1NlrODqaoOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTowMDo1NlrODqaoOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODAzMDY2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/extractor/ExtractedFieldsDetectorFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTowMDo1NlrOF6JdrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjo0MTozNFrOF6OK3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxNjc4MQ==", "bodyText": "\ud83e\udd14\nWhat if this is a multi-field?\nIf the field mapping is\n\"foo\": {\n   \"type\": \"text\",\n   \"keyword\": {\n      \"type\": \"keyword\"\n   }\n}\n\nDo we prefer to use foo.keyword in this instance? I know that analytics chooses a preferred field-mapping but I am not sure that occurs before this call.", "url": "https://github.com/elastic/elasticsearch/pull/53874#discussion_r396516781", "createdAt": "2020-03-23T15:00:56Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/extractor/ExtractedFieldsDetectorFactory.java", "diffHunk": "@@ -111,6 +114,12 @@ private void getCardinalitiesForFieldsWithConstraints(String[] index, DataFrameA\n \n         SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder().size(0).query(config.getSource().getParsedQuery());\n         for (FieldCardinalityConstraint constraint : fieldCardinalityConstraints) {\n+            for (FieldCapabilities fieldCaps : fieldCapabilitiesResponse.getField(constraint.getField()).values()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a2b3dda100f9078df61b4f3b8c442a679dec758"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUzMTI2Ng==", "bodyText": "In your example, we'll prefer foo.keyword indeed.\nBut this matters only for fields that have constraints.\nAt the moment, the only field with cardinality constraint is the dependent_variable which we'll take in whatever form the user types it in.\nIf we ever introduce other fields with cardinality constraints, we'll have to ensure they're aggregatable anyway.", "url": "https://github.com/elastic/elasticsearch/pull/53874#discussion_r396531266", "createdAt": "2020-03-23T15:20:14Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/extractor/ExtractedFieldsDetectorFactory.java", "diffHunk": "@@ -111,6 +114,12 @@ private void getCardinalitiesForFieldsWithConstraints(String[] index, DataFrameA\n \n         SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder().size(0).query(config.getSource().getParsedQuery());\n         for (FieldCardinalityConstraint constraint : fieldCardinalityConstraints) {\n+            for (FieldCapabilities fieldCaps : fieldCapabilitiesResponse.getField(constraint.getField()).values()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxNjc4MQ=="}, "originalCommit": {"oid": "7a2b3dda100f9078df61b4f3b8c442a679dec758"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5Mzg4Nw==", "bodyText": "AH! We don't dynamically choose the best multi-field for the dependent_variable. In that case,", "url": "https://github.com/elastic/elasticsearch/pull/53874#discussion_r396593887", "createdAt": "2020-03-23T16:41:34Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/extractor/ExtractedFieldsDetectorFactory.java", "diffHunk": "@@ -111,6 +114,12 @@ private void getCardinalitiesForFieldsWithConstraints(String[] index, DataFrameA\n \n         SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder().size(0).query(config.getSource().getParsedQuery());\n         for (FieldCardinalityConstraint constraint : fieldCardinalityConstraints) {\n+            for (FieldCapabilities fieldCaps : fieldCapabilitiesResponse.getField(constraint.getField()).values()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxNjc4MQ=="}, "originalCommit": {"oid": "7a2b3dda100f9078df61b4f3b8c442a679dec758"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4274, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}