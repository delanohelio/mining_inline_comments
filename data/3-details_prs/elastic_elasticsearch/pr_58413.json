{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NDQyMDQz", "number": 58413, "title": "[ML] Fix wire serialization for flush acknowledgements", "bodyText": "There was a discrepancy in the implementation of flush\nacknowledgements: most of the class was designed on the\nbasis that the \"last finalized bucket time\" could be null\nbut the wire serialization assumed that it was never\nnull.  This works because, the C++ sends zero \"last\nfinalized bucket time\" when it is not known or not\nrelevant.  But then the Java code will print that to\nXContent as it is assuming null represents not known or\nnot relevant.\nThis change corrects the discrepancies.  Internally within\nthe class null represents not known or not relevant, but\nthis is translated from/to 0 for communications from the\nC++ and old nodes that have the bug.\nAdditionally I switched from Date to Instant for this\nclass and made the member variables final to modernise it\na bit.", "createdAt": "2020-06-23T09:28:35Z", "url": "https://github.com/elastic/elasticsearch/pull/58413", "merged": true, "mergeCommit": {"oid": "2a454be6ed3e3a98d8ee692f803cd241e54eca58"}, "closed": true, "closedAt": "2020-06-23T14:16:19Z", "author": {"login": "droberts195"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuB-DegH2gAyNDM4NDQyMDQzOmM5MGM5OTA1MGI0NTI5MmY4YzZmNjY1MzMxYjUzNzk1NTc4ZjY0MmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuFTxNgH2gAyNDM4NDQyMDQzOjI1ZGI1OTRkMDNkNWRjN2E5YjVjNzk2MjczMTYwMGJkZDI1OTk3MTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c90c99050b45292f8c6f665331b53795578f642f", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/c90c99050b45292f8c6f665331b53795578f642f", "committedDate": "2020-06-23T09:24:17Z", "message": "[ML] Fix wire serialization for flush acknowledgements\n\nThere was a discrepancy in the implementation of flush\nacknowledgements: most of the class was designed on the\nbasis that the \"last finalized bucket time\" could be null\nbut the wire serialization assumed that it was never\nnull.  This works because, the C++ sends zero \"last\nfinalized bucket time\" when it is not known or not\nrelevant.  But then the Java code will print that to\nXContent as it is assuming null represents not known or\nnot relevant.\n\nThis change corrects the discrepancies.  Internally within\nthe class null represents not known or not relevant, but\nthis is translated from/to 0 for communications from the\nC++ and old nodes that have the bug.\n\nAdditionally I switched from Date to Instant for this\nclass and made the member variables final to modernise it\na bit."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NjUwMjA5", "url": "https://github.com/elastic/elasticsearch/pull/58413#pullrequestreview-435650209", "createdAt": "2020-06-23T10:29:08Z", "commit": {"oid": "c90c99050b45292f8c6f665331b53795578f642f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDoyOTowOFrOGnjKww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDoyOTowOFrOGnjKww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyMzg0Mw==", "bodyText": "Could you re-use the same pattern as in FlushJobAction.Response here?\n            this.lastFinalizedBucketEnd =\n                (lastFinalizedBucketEnd != null) ? Instant.ofEpochMilli(lastFinalizedBucketEnd.toEpochMilli()) : null;", "url": "https://github.com/elastic/elasticsearch/pull/58413#discussion_r444123843", "createdAt": "2020-06-23T10:29:08Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/process/autodetect/output/FlushAcknowledgement.java", "diffHunk": "@@ -31,39 +32,54 @@\n     public static final ParseField LAST_FINALIZED_BUCKET_END = new ParseField(\"last_finalized_bucket_end\");\n \n     public static final ConstructingObjectParser<FlushAcknowledgement, Void> PARSER = new ConstructingObjectParser<>(\n-            TYPE.getPreferredName(), a -> new FlushAcknowledgement((String) a[0], (Date) a[1]));\n+            TYPE.getPreferredName(), a -> new FlushAcknowledgement((String) a[0], (Instant) a[1]));\n \n     static {\n         PARSER.declareString(ConstructingObjectParser.constructorArg(), ID);\n         PARSER.declareField(ConstructingObjectParser.optionalConstructorArg(),\n-                p -> TimeUtils.parseTimeField(p, LAST_FINALIZED_BUCKET_END.getPreferredName()),\n+                p -> TimeUtils.parseTimeFieldToInstant(p, LAST_FINALIZED_BUCKET_END.getPreferredName()),\n                 LAST_FINALIZED_BUCKET_END, ObjectParser.ValueType.VALUE);\n     }\n \n-    private String id;\n-    private Date lastFinalizedBucketEnd;\n+    private final String id;\n+    private final Instant lastFinalizedBucketEnd;\n \n-    public FlushAcknowledgement(String id, Date lastFinalizedBucketEnd) {\n+    public FlushAcknowledgement(String id, Instant lastFinalizedBucketEnd) {\n         this.id = id;\n-        this.lastFinalizedBucketEnd = lastFinalizedBucketEnd;\n+        // The C++ passes 0 when last finalized bucket end is not available\n+        long epochMillis = (lastFinalizedBucketEnd != null) ? lastFinalizedBucketEnd.toEpochMilli() : 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c90c99050b45292f8c6f665331b53795578f642f"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NjY0MTM5", "url": "https://github.com/elastic/elasticsearch/pull/58413#pullrequestreview-435664139", "createdAt": "2020-06-23T10:49:44Z", "commit": {"oid": "c90c99050b45292f8c6f665331b53795578f642f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDo0OTo0NFrOGnj0Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDo0OTo0NFrOGnj0Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEzNDQzMQ==", "bodyText": "nit: Is the autodetect output an epoch number or a string? If it is a long it seems a bit silly to parse it as an Instant (Date previously) then convert back to a long then back to an Instant.", "url": "https://github.com/elastic/elasticsearch/pull/58413#discussion_r444134431", "createdAt": "2020-06-23T10:49:44Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/process/autodetect/output/FlushAcknowledgement.java", "diffHunk": "@@ -31,39 +32,54 @@\n     public static final ParseField LAST_FINALIZED_BUCKET_END = new ParseField(\"last_finalized_bucket_end\");\n \n     public static final ConstructingObjectParser<FlushAcknowledgement, Void> PARSER = new ConstructingObjectParser<>(\n-            TYPE.getPreferredName(), a -> new FlushAcknowledgement((String) a[0], (Date) a[1]));\n+            TYPE.getPreferredName(), a -> new FlushAcknowledgement((String) a[0], (Instant) a[1]));\n \n     static {\n         PARSER.declareString(ConstructingObjectParser.constructorArg(), ID);\n         PARSER.declareField(ConstructingObjectParser.optionalConstructorArg(),\n-                p -> TimeUtils.parseTimeField(p, LAST_FINALIZED_BUCKET_END.getPreferredName()),\n+                p -> TimeUtils.parseTimeFieldToInstant(p, LAST_FINALIZED_BUCKET_END.getPreferredName()),\n                 LAST_FINALIZED_BUCKET_END, ObjectParser.ValueType.VALUE);\n     }\n \n-    private String id;\n-    private Date lastFinalizedBucketEnd;\n+    private final String id;\n+    private final Instant lastFinalizedBucketEnd;\n \n-    public FlushAcknowledgement(String id, Date lastFinalizedBucketEnd) {\n+    public FlushAcknowledgement(String id, Instant lastFinalizedBucketEnd) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c90c99050b45292f8c6f665331b53795578f642f"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a68c164e37486e44843471959bded3bbc48ea65c", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/a68c164e37486e44843471959bded3bbc48ea65c", "committedDate": "2020-06-23T11:30:58Z", "message": "Address review comments and fix YAML test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25db594d03d5dc7a9b5c7962731600bdd2599713", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/25db594d03d5dc7a9b5c7962731600bdd2599713", "committedDate": "2020-06-23T13:17:43Z", "message": "Merge branch 'master' into fix_flush_wire_serialization"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 336, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}