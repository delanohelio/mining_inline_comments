{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5ODUwMDg5", "number": 54838, "title": "HLRC support for Index Templates V2", "bodyText": "This change adds High Level Rest Client support for Index Templates V2.\nRelates to #53101\nAdded >non-issue label as component templates are still behind feature flag", "createdAt": "2020-04-06T19:13:55Z", "url": "https://github.com/elastic/elasticsearch/pull/54838", "merged": true, "mergeCommit": {"oid": "b8ca70b8aad53df09d9ec4d3bd097c37f457a5a2"}, "closed": true, "closedAt": "2020-04-07T23:11:02Z", "author": {"login": "probakowski"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVDnnugH2gAyMzk5ODUwMDg5OjdkYzk3YTRiODhiMzE1OTljMWVkZDc2YjcxM2U1ZDBiNmMxNzIwOTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVaaqogH2gAyMzk5ODUwMDg5OmExNTdjNWIyY2Y5MTM1ZmE1ODI3ZjdmZGVlNzE1ZTUyYTk3NDQ3YjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7dc97a4b88b31599c1edd76b713e5d0b6c172094", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/7dc97a4b88b31599c1edd76b713e5d0b6c172094", "committedDate": "2020-04-06T19:11:29Z", "message": "HLRC support for Index Templates V2\n\nThis change adds High Level Rest Client support for Index Templates V2.\n\nRelates to #53101"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc", "committedDate": "2020-04-06T19:22:33Z", "message": "remove debug comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MzE1ODAw", "url": "https://github.com/elastic/elasticsearch/pull/54838#pullrequestreview-389315800", "createdAt": "2020-04-07T17:01:16Z", "commit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "state": "APPROVED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowMToxNlrOGCNUdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowOTowNFrOGCNpJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2ODU2NQ==", "bodyText": "Super minor indentation nit here", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404968565", "createdAt": "2020-04-07T17:01:16Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java", "diffHunk": "@@ -909,6 +914,36 @@ public Cancellable putTemplateAsync(PutIndexTemplateRequest putIndexTemplateRequ\n             AcknowledgedResponse::fromXContent, listener, emptySet());\n     }\n \n+    /**\n+     * Puts an index template using the Index Templates API.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html\"> Index Templates API\n+     * on elastic.co</a>\n+     * @param putIndexTemplateRequest the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @return the response\n+     * @throws IOException in case there is a problem sending the request or parsing back the response\n+     */\n+    public AcknowledgedResponse putIndexTemplate(PutIndexTemplateV2Request putIndexTemplateRequest, RequestOptions options)\n+        throws IOException {\n+        return restHighLevelClient.performRequestAndParseEntity(putIndexTemplateRequest, IndicesRequestConverters::putIndexTemplate,\n+            options, AcknowledgedResponse::fromXContent, emptySet());\n+    }\n+\n+    /**\n+     * Asynchronously puts an index template using the Index Templates API.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html\"> Index Templates API\n+     * on elastic.co</a>\n+     * @param putIndexTemplateRequest the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @param listener the listener to be notified upon request completion\n+     * @return cancellable that may be used to cancel the request\n+     */\n+    public Cancellable putIndexTemplateAsync(PutIndexTemplateV2Request putIndexTemplateRequest,\n+                                        RequestOptions options, ActionListener<AcknowledgedResponse> listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2OTgwMA==", "bodyText": "Another minor indentation nit here", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404969800", "createdAt": "2020-04-07T17:03:11Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java", "diffHunk": "@@ -1006,6 +1071,37 @@ public Cancellable existsTemplateAsync(IndexTemplatesExistRequest indexTemplates\n             RestHighLevelClient::convertExistsResponse, listener, emptySet());\n     }\n \n+    /**\n+     * Uses the Index Templates API to determine if index templates exist\n+     *\n+     * @param indexTemplatesRequest the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @return true if any index templates in the request exist, false otherwise\n+     * @throws IOException in case there is a problem sending the request or parsing back the response\n+     */\n+    public boolean existsIndexTemplate(IndexTemplateV2ExistRequest indexTemplatesRequest,\n+                                  RequestOptions options) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2OTg3NA==", "bodyText": "Same here", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404969874", "createdAt": "2020-04-07T17:03:18Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java", "diffHunk": "@@ -1006,6 +1071,37 @@ public Cancellable existsTemplateAsync(IndexTemplatesExistRequest indexTemplates\n             RestHighLevelClient::convertExistsResponse, listener, emptySet());\n     }\n \n+    /**\n+     * Uses the Index Templates API to determine if index templates exist\n+     *\n+     * @param indexTemplatesRequest the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @return true if any index templates in the request exist, false otherwise\n+     * @throws IOException in case there is a problem sending the request or parsing back the response\n+     */\n+    public boolean existsIndexTemplate(IndexTemplateV2ExistRequest indexTemplatesRequest,\n+                                  RequestOptions options) throws IOException {\n+        return restHighLevelClient.performRequest(indexTemplatesRequest,\n+            IndicesRequestConverters::templatesExist, options,\n+            RestHighLevelClient::convertExistsResponse, emptySet());\n+    }\n+\n+    /**\n+     * Uses the Index Templates API to determine if index templates exist\n+     * @param indexTemplatesExistRequest the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @param listener the listener to be notified upon request completion. The listener will be called with the value {@code true}\n+     * @return cancellable that may be used to cancel the request\n+     */\n+    public Cancellable existsIndexTemplateAsync(IndexTemplateV2ExistRequest indexTemplatesExistRequest,\n+                                                  RequestOptions options,\n+                                                  ActionListener<Boolean> listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MDIyOQ==", "bodyText": "Same here", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404970229", "createdAt": "2020-04-07T17:03:40Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java", "diffHunk": "@@ -1112,6 +1208,35 @@ public Cancellable deleteTemplateAsync(DeleteIndexTemplateRequest request, Reque\n             options, AcknowledgedResponse::fromXContent, listener, emptySet());\n     }\n \n+    /**\n+     * Delete an index template using the Index Templates API\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html\"> Index Templates API\n+     * on elastic.co</a>\n+     *\n+     * @param request the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @throws IOException in case there is a problem sending the request or parsing back the response\n+     */\n+    public AcknowledgedResponse deleteIndexTemplate(DeleteIndexTemplateV2Request request, RequestOptions options) throws IOException {\n+        return restHighLevelClient.performRequestAndParseEntity(request, IndicesRequestConverters::deleteIndexTemplate,\n+            options, AcknowledgedResponse::fromXContent, emptySet());\n+    }\n+\n+    /**\n+     * Asynchronously delete an index template using the Index Templates API\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html\"> Index Templates API\n+     * on elastic.co</a>\n+     * @param request  the request\n+     * @param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @param listener the listener to be notified upon request completion\n+     * @return cancellable that may be used to cancel the request\n+     */\n+    public Cancellable deleteIndexTemplateAsync(DeleteIndexTemplateV2Request request, RequestOptions options,\n+                                           ActionListener<AcknowledgedResponse> listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MDgyMQ==", "bodyText": "To match what we have in core, I think we should name this GetIndexTemplateV2Request (no 's').", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404970821", "createdAt": "2020-04-07T17:04:34Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/GetIndexTemplatesV2Request.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.client.Validatable;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.unit.TimeValue;\n+\n+/**\n+ * A request to read the content of component templates\n+ */\n+public class GetIndexTemplatesV2Request implements Validatable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MTQyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(\"must provide component template name\");\n          \n          \n            \n                        throw new IllegalArgumentException(\"must provide index template name\");", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404971429", "createdAt": "2020-04-07T17:05:23Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/IndexTemplateV2ExistRequest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.common.Strings;\n+\n+/**\n+ * A request to check for the existence of component templates\n+ */\n+public class IndexTemplateV2ExistRequest extends GetComponentTemplatesRequest {\n+\n+    /**\n+     * Create a request to check for the existence of component template. Name must be provided\n+     *\n+     * @param name the name of template to check for the existence of\n+     */\n+    public IndexTemplateV2ExistRequest(String name) {\n+        super(name);\n+        if (Strings.isNullOrEmpty(name)) {\n+            throw new IllegalArgumentException(\"must provide component template name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MTUxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A request to check for the existence of component templates\n          \n          \n            \n             * A request to check for the existence of index templates", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404971511", "createdAt": "2020-04-07T17:05:31Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/IndexTemplateV2ExistRequest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.common.Strings;\n+\n+/**\n+ * A request to check for the existence of component templates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MTU5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Create a request to check for the existence of component template. Name must be provided\n          \n          \n            \n                 * Create a request to check for the existence of index template. Name must be provided", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404971598", "createdAt": "2020-04-07T17:05:39Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/IndexTemplateV2ExistRequest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.common.Strings;\n+\n+/**\n+ * A request to check for the existence of component templates\n+ */\n+public class IndexTemplateV2ExistRequest extends GetComponentTemplatesRequest {\n+\n+    /**\n+     * Create a request to check for the existence of component template. Name must be provided", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MTg3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Create a request to read the content of component template. If no template name is provided, all templates will\n          \n          \n            \n                 * Create a request to read the content of index template. If no template name is provided, all templates will", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404971871", "createdAt": "2020-04-07T17:06:04Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/GetIndexTemplatesV2Request.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.client.Validatable;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.unit.TimeValue;\n+\n+/**\n+ * A request to read the content of component templates\n+ */\n+public class GetIndexTemplatesV2Request implements Validatable {\n+\n+    private final String name;\n+\n+    private TimeValue masterNodeTimeout = TimedRequest.DEFAULT_MASTER_NODE_TIMEOUT;\n+    private boolean local = false;\n+\n+    /**\n+     * Create a request to read the content of component template. If no template name is provided, all templates will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MTk2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return the name of component template this request is requesting\n          \n          \n            \n                 * @return the name of index template this request is requesting", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404971968", "createdAt": "2020-04-07T17:06:12Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/GetIndexTemplatesV2Request.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.client.Validatable;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.unit.TimeValue;\n+\n+/**\n+ * A request to read the content of component templates\n+ */\n+public class GetIndexTemplatesV2Request implements Validatable {\n+\n+    private final String name;\n+\n+    private TimeValue masterNodeTimeout = TimedRequest.DEFAULT_MASTER_NODE_TIMEOUT;\n+    private boolean local = false;\n+\n+    /**\n+     * Create a request to read the content of component template. If no template name is provided, all templates will\n+     * be read\n+     *\n+     * @param name the name of template to read\n+     */\n+    public GetIndexTemplatesV2Request(String name) {\n+        this.name = name;\n+    }\n+\n+    /**\n+     * @return the name of component template this request is requesting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MjE0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A request to create an component template.\n          \n          \n            \n             * A request to create an index template.", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404972144", "createdAt": "2020-04-07T17:06:27Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.cluster.metadata.IndexTemplateV2;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A request to create an component template.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MjI1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Sets the name of the component template.\n          \n          \n            \n                 * Sets the name of the index template.", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404972259", "createdAt": "2020-04-07T17:06:35Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.cluster.metadata.IndexTemplateV2;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A request to create an component template.\n+ */\n+public class PutIndexTemplateV2Request extends TimedRequest implements ToXContentObject {\n+\n+    private String name;\n+\n+    private String cause = \"\";\n+\n+    private boolean create;\n+\n+    private IndexTemplateV2 indexTemplate;\n+\n+    /**\n+     * Sets the name of the component template.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MjM0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * The name of the component template.\n          \n          \n            \n                 * The name of the index template.", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404972345", "createdAt": "2020-04-07T17:06:43Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.cluster.metadata.IndexTemplateV2;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A request to create an component template.\n+ */\n+public class PutIndexTemplateV2Request extends TimedRequest implements ToXContentObject {\n+\n+    private String name;\n+\n+    private String cause = \"\";\n+\n+    private boolean create;\n+\n+    private IndexTemplateV2 indexTemplate;\n+\n+    /**\n+     * Sets the name of the component template.\n+     */\n+    public PutIndexTemplateV2Request name(String name) {\n+        if (Strings.isNullOrEmpty(name)) {\n+            throw new IllegalArgumentException(\"name cannot be null or empty\");\n+        }\n+        this.name = name;\n+        return this;\n+    }\n+\n+    /**\n+     * The name of the component template.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MjQ1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Set to {@code true} to force only creation, not an update of an component template. If it already\n          \n          \n            \n                 * Set to {@code true} to force only creation, not an update of an index template. If it already", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404972455", "createdAt": "2020-04-07T17:06:51Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.cluster.metadata.IndexTemplateV2;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A request to create an component template.\n+ */\n+public class PutIndexTemplateV2Request extends TimedRequest implements ToXContentObject {\n+\n+    private String name;\n+\n+    private String cause = \"\";\n+\n+    private boolean create;\n+\n+    private IndexTemplateV2 indexTemplate;\n+\n+    /**\n+     * Sets the name of the component template.\n+     */\n+    public PutIndexTemplateV2Request name(String name) {\n+        if (Strings.isNullOrEmpty(name)) {\n+            throw new IllegalArgumentException(\"name cannot be null or empty\");\n+        }\n+        this.name = name;\n+        return this;\n+    }\n+\n+    /**\n+     * The name of the component template.\n+     */\n+    public String name() {\n+        return this.name;\n+    }\n+\n+    /**\n+     * Set to {@code true} to force only creation, not an update of an component template. If it already", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MjU1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * The component template to create.\n          \n          \n            \n                 * The index template to create.", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404972559", "createdAt": "2020-04-07T17:07:02Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.cluster.metadata.IndexTemplateV2;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A request to create an component template.\n+ */\n+public class PutIndexTemplateV2Request extends TimedRequest implements ToXContentObject {\n+\n+    private String name;\n+\n+    private String cause = \"\";\n+\n+    private boolean create;\n+\n+    private IndexTemplateV2 indexTemplate;\n+\n+    /**\n+     * Sets the name of the component template.\n+     */\n+    public PutIndexTemplateV2Request name(String name) {\n+        if (Strings.isNullOrEmpty(name)) {\n+            throw new IllegalArgumentException(\"name cannot be null or empty\");\n+        }\n+        this.name = name;\n+        return this;\n+    }\n+\n+    /**\n+     * The name of the component template.\n+     */\n+    public String name() {\n+        return this.name;\n+    }\n+\n+    /**\n+     * Set to {@code true} to force only creation, not an update of an component template. If it already\n+     * exists, it will fail with an {@link IllegalArgumentException}.\n+     */\n+    public PutIndexTemplateV2Request create(boolean create) {\n+        this.create = create;\n+        return this;\n+    }\n+\n+    public boolean create() {\n+        return create;\n+    }\n+\n+    /**\n+     * The component template to create.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MjY2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * The cause for this component template creation.\n          \n          \n            \n                 * The cause for this index template creation.", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404972666", "createdAt": "2020-04-07T17:07:13Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.cluster.metadata.IndexTemplateV2;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A request to create an component template.\n+ */\n+public class PutIndexTemplateV2Request extends TimedRequest implements ToXContentObject {\n+\n+    private String name;\n+\n+    private String cause = \"\";\n+\n+    private boolean create;\n+\n+    private IndexTemplateV2 indexTemplate;\n+\n+    /**\n+     * Sets the name of the component template.\n+     */\n+    public PutIndexTemplateV2Request name(String name) {\n+        if (Strings.isNullOrEmpty(name)) {\n+            throw new IllegalArgumentException(\"name cannot be null or empty\");\n+        }\n+        this.name = name;\n+        return this;\n+    }\n+\n+    /**\n+     * The name of the component template.\n+     */\n+    public String name() {\n+        return this.name;\n+    }\n+\n+    /**\n+     * Set to {@code true} to force only creation, not an update of an component template. If it already\n+     * exists, it will fail with an {@link IllegalArgumentException}.\n+     */\n+    public PutIndexTemplateV2Request create(boolean create) {\n+        this.create = create;\n+        return this;\n+    }\n+\n+    public boolean create() {\n+        return create;\n+    }\n+\n+    /**\n+     * The component template to create.\n+     */\n+    public PutIndexTemplateV2Request indexTemplate(IndexTemplateV2 indexTemplate) {\n+        this.indexTemplate = indexTemplate;\n+        return this;\n+    }\n+\n+    /**\n+     * The cause for this component template creation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MjgyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    exist = exist = execute(indexTemplateV2ExistRequest,\n          \n          \n            \n                    exist = execute(indexTemplateV2ExistRequest,", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404972824", "createdAt": "2020-04-07T17:07:29Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/IndicesClientIT.java", "diffHunk": "@@ -1560,4 +1568,50 @@ public void testDeleteAlias() throws IOException {\n         assertThat(aliasExists(index, alias), equalTo(false));\n         assertThat(aliasExists(index, alias2), equalTo(true));\n     }\n+    \n+    public void testIndexTemplates() throws Exception {\n+        String templateName = \"my-template\";\n+        Settings settings = Settings.builder().put(\"index.number_of_shards\", 1).build();\n+        CompressedXContent mappings = new CompressedXContent(\"{\\\"properties\\\":{\\\"host_name\\\":{\\\"type\\\":\\\"keyword\\\"}}}\");\n+        AliasMetadata alias = AliasMetadata.builder(\"alias\").writeIndex(true).build();\n+        Template template = new Template(settings, mappings, Map.of(\"alias\", alias));\n+        List<String> pattern = List.of(\"pattern\");\n+        IndexTemplateV2 indexTemplate = new IndexTemplateV2(pattern, template, Collections.emptyList(), 1L, 1L, new HashMap<>());\n+        PutIndexTemplateV2Request putIndexTemplateV2Request =\n+            new PutIndexTemplateV2Request().name(templateName).create(true).indexTemplate(indexTemplate);\n+\n+        AcknowledgedResponse response = execute(putIndexTemplateV2Request,\n+            highLevelClient().indices()::putIndexTemplate, highLevelClient().indices()::putIndexTemplateAsync);\n+        assertThat(response.isAcknowledged(), equalTo(true));\n+\n+        IndexTemplateV2ExistRequest indexTemplateV2ExistRequest = new IndexTemplateV2ExistRequest(templateName);\n+        boolean exist = execute(indexTemplateV2ExistRequest,\n+            highLevelClient().indices()::existsIndexTemplate, highLevelClient().indices()::existsIndexTemplateAsync);\n+\n+        assertTrue(exist);\n+\n+        GetIndexTemplatesV2Request getIndexTemplatesV2Request = new GetIndexTemplatesV2Request(templateName);\n+        GetIndexTemplatesV2Response getResponse = execute(getIndexTemplatesV2Request,\n+            highLevelClient().indices()::getIndexTemplate, highLevelClient().indices()::getIndexTemplateAsync);\n+\n+        assertThat(getResponse.getIndexTemplates().size(), equalTo(1));\n+        assertThat(getResponse.getIndexTemplates().containsKey(templateName), equalTo(true));\n+        assertThat(getResponse.getIndexTemplates().get(templateName), equalTo(indexTemplate));\n+\n+        DeleteIndexTemplateV2Request deleteIndexTemplateV2Request = new DeleteIndexTemplateV2Request(templateName);\n+        response = execute(deleteIndexTemplateV2Request, highLevelClient().indices()::deleteIndexTemplate,\n+            highLevelClient().indices()::deleteIndexTemplateAsync);\n+        assertThat(response.isAcknowledged(), equalTo(true));\n+\n+        ElasticsearchStatusException statusException = expectThrows(ElasticsearchStatusException.class,\n+            () -> execute(getIndexTemplatesV2Request,\n+                highLevelClient().indices()::getIndexTemplate, highLevelClient().indices()::getIndexTemplateAsync));\n+\n+        assertThat(statusException.status(), equalTo(RestStatus.NOT_FOUND));\n+\n+        exist = exist = execute(indexTemplateV2ExistRequest,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MzQyMw==", "bodyText": "I think these methods (the randomization) can be reused from the component template tests you already added to the HLRC?", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404973423", "createdAt": "2020-04-07T17:08:25Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/indices/GetIndexTemplatesV2ResponseTests.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.cluster.metadata.AliasMetadata;\n+import org.elasticsearch.cluster.metadata.IndexTemplateV2;\n+import org.elasticsearch.cluster.metadata.Template;\n+import org.elasticsearch.common.compress.CompressedXContent;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.elasticsearch.test.AbstractXContentTestCase.xContentTester;\n+\n+public class GetIndexTemplatesV2ResponseTests extends ESTestCase {\n+\n+    public void testFromXContent() throws Exception {\n+        xContentTester(\n+            this::createParser,\n+            GetIndexTemplatesV2ResponseTests::createTestInstance,\n+            GetIndexTemplatesV2ResponseTests::toXContent,\n+            GetIndexTemplatesV2Response::fromXContent)\n+            .supportsUnknownFields(true)\n+            .randomFieldsExcludeFilter(a -> true)\n+            .test();\n+    }\n+\n+    private static GetIndexTemplatesV2Response createTestInstance() {\n+        Map<String, IndexTemplateV2> templates = new HashMap<>();\n+        if (randomBoolean()) {\n+            int count = randomInt(10);\n+            for (int i = 0; i < count; i++) {\n+                templates.put(randomAlphaOfLength(10), randomTemplate());\n+            }\n+        }\n+        return new GetIndexTemplatesV2Response(templates);\n+    }\n+\n+    private static void toXContent(GetIndexTemplatesV2Response response, XContentBuilder builder) throws IOException {\n+        builder.startObject();\n+        builder.startArray(\"index_templates\");\n+        for (Map.Entry<String, IndexTemplateV2> e : response.getIndexTemplates().entrySet()) {\n+            builder.startObject();\n+            builder.field(\"name\", e.getKey());\n+            builder.field(\"index_template\");\n+            e.getValue().toXContent(builder, null);\n+            builder.endObject();\n+        }\n+        builder.endArray();\n+        builder.endObject();\n+    }\n+\n+    private static IndexTemplateV2 randomTemplate() {\n+        Settings settings = null;\n+        CompressedXContent mappings = null;\n+        Map<String, AliasMetadata> aliases = null;\n+        List<String> patterns = Arrays.asList(generateRandomStringArray(10, 10, false, false));\n+        List<String> composedOf = null;\n+        if (randomBoolean()) {\n+            settings = randomSettings();\n+        }\n+        if (randomBoolean()) {\n+            mappings = randomMappings();\n+        }\n+        if (randomBoolean()) {\n+            aliases = randomAliases();\n+        }\n+        if (randomBoolean()) {\n+            composedOf = Arrays.asList(generateRandomStringArray(10, 10, false, false));\n+        }\n+        Template template = new Template(settings, mappings, aliases);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3Mzg2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A request to read the content of component templates\n          \n          \n            \n             * A request to read the content of index templates", "url": "https://github.com/elastic/elasticsearch/pull/54838#discussion_r404973863", "createdAt": "2020-04-07T17:09:04Z", "author": {"login": "dakrone"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/GetIndexTemplatesV2Request.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.indices;\n+\n+import org.elasticsearch.client.TimedRequest;\n+import org.elasticsearch.client.Validatable;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.unit.TimeValue;\n+\n+/**\n+ * A request to read the content of component templates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9dcbe2aafb4af9b4a8d4f4fe1e06316f3194fc"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38dd892eab2b36e18718ca6b9e0569ab07cd9aef", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/38dd892eab2b36e18718ca6b9e0569ab07cd9aef", "committedDate": "2020-04-07T20:36:35Z", "message": "Update client/rest-high-level/src/main/java/org/elasticsearch/client/indices/IndexTemplateV2ExistRequest.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1f765b659f42594fb7a3c7d49bbdc850824c206", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/a1f765b659f42594fb7a3c7d49bbdc850824c206", "committedDate": "2020-04-07T20:36:49Z", "message": "Update client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14443a1b0c1f1befadaf49e97e55a7ee9cd9b8b4", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/14443a1b0c1f1befadaf49e97e55a7ee9cd9b8b4", "committedDate": "2020-04-07T20:36:55Z", "message": "Update client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ab09b38df0b0f392d957310b2076814e0a1d2e1", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/4ab09b38df0b0f392d957310b2076814e0a1d2e1", "committedDate": "2020-04-07T20:37:46Z", "message": "Update client/rest-high-level/src/test/java/org/elasticsearch/client/IndicesClientIT.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "812d06c0fedf80c49da547cb1c24924be301e4b2", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/812d06c0fedf80c49da547cb1c24924be301e4b2", "committedDate": "2020-04-07T20:38:35Z", "message": "Update client/rest-high-level/src/main/java/org/elasticsearch/client/indices/GetIndexTemplatesV2Request.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3d08372c7b78c8bf399742e3c446e67f2cb6ce3", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/a3d08372c7b78c8bf399742e3c446e67f2cb6ce3", "committedDate": "2020-04-07T20:52:30Z", "message": "review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfe9a4c6af0d97ac600df28a66a9908ecf533d91", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/bfe9a4c6af0d97ac600df28a66a9908ecf533d91", "committedDate": "2020-04-07T20:55:37Z", "message": "Merge branch 'master' into hlrc-index-templates-v2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b26fb141311834b252e371127b1fa72d115d4fe", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/7b26fb141311834b252e371127b1fa72d115d4fe", "committedDate": "2020-04-07T20:57:40Z", "message": "review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec4fdf3104c2f04a2ce2eaa33a25b6b2a819a78f", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/ec4fdf3104c2f04a2ce2eaa33a25b6b2a819a78f", "committedDate": "2020-04-07T20:58:16Z", "message": "review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15ad1d2a18c7e8ce7a900747729cc8f9005568bb", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/15ad1d2a18c7e8ce7a900747729cc8f9005568bb", "committedDate": "2020-04-07T21:03:21Z", "message": "Update client/rest-high-level/src/main/java/org/elasticsearch/client/indices/IndexTemplateV2ExistRequest.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b562f987a21f6c038378c338f8db7bcec054212", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/8b562f987a21f6c038378c338f8db7bcec054212", "committedDate": "2020-04-07T21:03:43Z", "message": "Update client/rest-high-level/src/main/java/org/elasticsearch/client/indices/IndexTemplateV2ExistRequest.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e4d6a57397c5bc8c6412685d9f794e3284cdc61", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/8e4d6a57397c5bc8c6412685d9f794e3284cdc61", "committedDate": "2020-04-07T21:04:18Z", "message": "Update client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bcf1dce8cfea14a9f6cf928d818dd2626269162", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/1bcf1dce8cfea14a9f6cf928d818dd2626269162", "committedDate": "2020-04-07T21:04:32Z", "message": "Update client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4364591b0141f747e27708d145a022daf0450c8", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/d4364591b0141f747e27708d145a022daf0450c8", "committedDate": "2020-04-07T21:05:04Z", "message": "Update client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b54f1054abd208e75ee7f3ad16c370d2bd6b2e1c", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/b54f1054abd208e75ee7f3ad16c370d2bd6b2e1c", "committedDate": "2020-04-07T21:05:18Z", "message": "Update client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutIndexTemplateV2Request.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a157c5b2cf9135fa5827f7fdee715e52a97447b0", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/a157c5b2cf9135fa5827f7fdee715e52a97447b0", "committedDate": "2020-04-07T21:45:09Z", "message": "Merge branch 'master' into hlrc-index-templates-v2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3707, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}