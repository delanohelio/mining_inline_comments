{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMzQyNjgy", "number": 61544, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjoxODowOFrOEcbaGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjoyMjowOFrOEcbeCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjQ0NjM1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/test/SearchHitBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjoxODowOFrOHG9XoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjoxODowOFrOHG9XoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA1ODk3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    hit.sortValues(new String[] { sortValue}, new DocValueFormat[] { DocValueFormat.RAW });\n          \n          \n            \n                    hit.sortValues(new String[] { sortValue }, new DocValueFormat[] { DocValueFormat.RAW });", "url": "https://github.com/elastic/elasticsearch/pull/61544#discussion_r477058977", "createdAt": "2020-08-26T06:18:08Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/test/SearchHitBuilder.java", "diffHunk": "@@ -41,6 +42,11 @@ public SearchHitBuilder setSource(String sourceJson) {\n         return this;\n     }\n \n+    public SearchHitBuilder setStringSortValue(String sortValue) {\n+        hit.sortValues(new String[] { sortValue}, new DocValueFormat[] { DocValueFormat.RAW });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65d7391a31f5bd554898975374b35eb135048f9"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjQ1NDQ2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/extractor/DataFrameDataExtractor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjoyMToyMlrOHG9ceA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjo1NjoyNVrOHG-Wvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2MDIxNg==", "bodyText": "Is hit.getSortValues() always non-empty?", "url": "https://github.com/elastic/elasticsearch/pull/61544#discussion_r477060216", "createdAt": "2020-08-26T06:21:22Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/extractor/DataFrameDataExtractor.java", "diffHunk": "@@ -426,5 +441,9 @@ public boolean isTraining() {\n         public int getChecksum() {\n             return Arrays.hashCode(values);\n         }\n+\n+        public String getSortKey() {\n+            return (String) hit.getSortValues()[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65d7391a31f5bd554898975374b35eb135048f9"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA3NTEzNA==", "bodyText": "Yes because we own the search from within the extractor and we are sorting on the id copy field.", "url": "https://github.com/elastic/elasticsearch/pull/61544#discussion_r477075134", "createdAt": "2020-08-26T06:56:25Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/extractor/DataFrameDataExtractor.java", "diffHunk": "@@ -426,5 +441,9 @@ public boolean isTraining() {\n         public int getChecksum() {\n             return Arrays.hashCode(values);\n         }\n+\n+        public String getSortKey() {\n+            return (String) hit.getSortValues()[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2MDIxNg=="}, "originalCommit": {"oid": "f65d7391a31f5bd554898975374b35eb135048f9"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjQ1NjQwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/dataframe/extractor/DataFrameDataExtractorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjoyMjowOFrOHG9dnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjoyMjowOFrOHG9dnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2MDUwOA==", "bodyText": "IMO hasSize matcher could be used here instead.", "url": "https://github.com/elastic/elasticsearch/pull/61544#discussion_r477060508", "createdAt": "2020-08-26T06:22:08Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/dataframe/extractor/DataFrameDataExtractorTests.java", "diffHunk": "@@ -196,6 +197,13 @@ public void testRecoveryFromErrorOnSearchAfterRetry() throws IOException {\n         List<String> capturedClearScrollRequests = getCapturedClearScrollIds();\n         assertThat(capturedClearScrollRequests.size(), equalTo(1));\n         assertThat(capturedClearScrollRequests.get(0), equalTo(lastAndEmptyResponse.getScrollId()));\n+\n+        // Notice we've done two searches here\n+        assertThat(dataExtractor.capturedSearchRequests.size(), equalTo(2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65d7391a31f5bd554898975374b35eb135048f9"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 704, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}