{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMzI3NzQz", "number": 62053, "title": "Fix ccs permission for search with a scroll id", "bodyText": "CCS with remote indices only does not require any privileges on the local cluster.\nThis PR ensures that search with scroll follow the permission model.\nResolves: #61828", "createdAt": "2020-09-07T12:00:34Z", "url": "https://github.com/elastic/elasticsearch/pull/62053", "merged": true, "mergeCommit": {"oid": "7afe607b8902a7b9f64fdaada6c9f1b74a60e7dd"}, "closed": true, "closedAt": "2020-09-21T03:36:37Z", "author": {"login": "ywangd"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGhmpwAH2gAyNDgxMzI3NzQzOjkwY2FhYjNlOTM0YjU1ZmE4Zjk4ZjRmYWVjMDk4MDk3YzNhZGIyMmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJ8bnIgH2gAyNDgxMzI3NzQzOjQ0ZjUxODhiNTRjMWFkNGU4YmI2NDg1MDRkN2U2ZjgzYTc3YTFkYmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "90caab3e934b55fa8f98f4faec098097c3adb22e", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/90caab3e934b55fa8f98f4faec098097c3adb22e", "committedDate": "2020-09-07T11:49:52Z", "message": "Fix ccs permission for scroll search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f455e977cd32b782aac00147c4c12a755eba4c2f", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/f455e977cd32b782aac00147c4c12a755eba4c2f", "committedDate": "2020-09-07T12:20:19Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7518acd0675cbd7593b8f4afddc893fbd6e2e366", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/7518acd0675cbd7593b8f4afddc893fbd6e2e366", "committedDate": "2020-09-07T12:28:21Z", "message": "Merge remote-tracking branch 'origin/master' into es-61828-ccs-scroll-privileges"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bf7704fde501d74205e4ccb3b7a28af4d3024dd", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/6bf7704fde501d74205e4ccb3b7a28af4d3024dd", "committedDate": "2020-09-07T13:17:41Z", "message": "Fix test failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTEyMDYy", "url": "https://github.com/elastic/elasticsearch/pull/62053#pullrequestreview-483912062", "createdAt": "2020-09-08T08:32:16Z", "commit": {"oid": "6bf7704fde501d74205e4ccb3b7a28af4d3024dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODozMjoxNlrOHOSgkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODozMjoxNlrOHOSgkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc0NTM2Mg==", "bodyText": "I would suggest that hasLocalIndices be a method of ParsedScrollId , it's more OO this way.", "url": "https://github.com/elastic/elasticsearch/pull/62053#discussion_r484745362", "createdAt": "2020-09-08T08:32:16Z", "author": {"login": "albertzaharovits"}, "path": "server/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java", "diffHunk": "@@ -108,6 +109,10 @@ static ParsedScrollId parseScrollId(String scrollId) {\n         }\n     }\n \n+    static boolean hasLocalIndices(String scrollId) {\n+        return Arrays.stream(parseScrollId(scrollId).getContext()).anyMatch(c -> c.getClusterAlias() == null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bf7704fde501d74205e4ccb3b7a28af4d3024dd"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTIzMDA3", "url": "https://github.com/elastic/elasticsearch/pull/62053#pullrequestreview-483923007", "createdAt": "2020-09-08T08:45:45Z", "commit": {"oid": "6bf7704fde501d74205e4ccb3b7a28af4d3024dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODo0NTo0NlrOHOTBnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODo0NTo0NlrOHOTBnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc1MzgyMw==", "bodyText": "I would avoid throwing exceptions in this part of the code, it's very brittle, better call the listener.onFailure .", "url": "https://github.com/elastic/elasticsearch/pull/62053#discussion_r484753823", "createdAt": "2020-09-08T08:45:46Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/RBACEngine.java", "diffHunk": "@@ -261,7 +262,7 @@ public void authorizeIndexAction(RequestInfo requestInfo, AuthorizationInfo auth\n                 // if the action is a search scroll action, we first authorize that the user can execute the action for some\n                 // index and if they cannot, we can fail the request early before we allow the execution of the action and in\n                 // turn the shard actions\n-                if (SearchScrollAction.NAME.equals(action)) {\n+                if (SearchScrollAction.NAME.equals(action) && ((SearchScrollRequest) request).hasLocalIndices()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bf7704fde501d74205e4ccb3b7a28af4d3024dd"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTQwODAx", "url": "https://github.com/elastic/elasticsearch/pull/62053#pullrequestreview-483940801", "createdAt": "2020-09-08T09:07:57Z", "commit": {"oid": "6bf7704fde501d74205e4ccb3b7a28af4d3024dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43323950385bf88ed6fcf9cd395f2748e45444be", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/43323950385bf88ed6fcf9cd395f2748e45444be", "committedDate": "2020-09-08T14:16:42Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38c71eaf878e400fd9cac4802f99ac03de671e0c", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/38c71eaf878e400fd9cac4802f99ac03de671e0c", "committedDate": "2020-09-08T22:23:01Z", "message": "Add randomness to test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "177f9ee906d3953e4672d006421d9be96deeedf1", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/177f9ee906d3953e4672d006421d9be96deeedf1", "committedDate": "2020-09-08T23:22:22Z", "message": "Merge remote-tracking branch 'origin/master' into es-61828-ccs-scroll-privileges"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/161013453afd4e865871d385ac11a02cafc5d8f9", "committedDate": "2020-09-11T01:59:51Z", "message": "Merge remote-tracking branch 'origin/master' into es-61828-ccs-scroll-privileges"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NjE2NDE0", "url": "https://github.com/elastic/elasticsearch/pull/62053#pullrequestreview-487616414", "createdAt": "2020-09-14T10:20:43Z", "commit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDoyMDo0M1rOHRNUcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDoyMDo0M1rOHRNUcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgwNjA2NA==", "bodyText": "I would've made this variable take both values in this test, i.e. don't rely on randomisation.\nIn principle, it's better to avoid randomisation for test coverage, and use it for variables that don't have any bearing on the output of the test. That's in principle, but sometimes the input value space is large and randomisation might be used on the independent variables as well (more often inside, but sometimes across, value spaces that change the outcome of the test).", "url": "https://github.com/elastic/elasticsearch/pull/62053#discussion_r487806064", "createdAt": "2020-09-14T10:20:43Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java", "diffHunk": "@@ -411,6 +412,31 @@ public void testUserWithNoRolesCanPerformRemoteSearch() throws IOException {\n         verifyNoMoreInteractions(auditTrail);\n     }\n \n+    public void testUserWithNoRolesPerformsRemoteSearchWithScroll() throws IOException {\n+        final ParsedScrollId parsedScrollId = mock(ParsedScrollId.class);\n+        final boolean hasLocalIndices = randomBoolean();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NjE2ODQ4", "url": "https://github.com/elastic/elasticsearch/pull/62053#pullrequestreview-487616848", "createdAt": "2020-09-14T10:21:22Z", "commit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDoyMToyMlrOHRNVwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDoyMToyMlrOHRNVwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgwNjQwMQ==", "bodyText": "ditto https://github.com/elastic/elasticsearch/pull/62053/files#r487806064", "url": "https://github.com/elastic/elasticsearch/pull/62053#discussion_r487806401", "createdAt": "2020-09-14T10:21:22Z", "author": {"login": "albertzaharovits"}, "path": "server/src/test/java/org/elasticsearch/action/search/ParsedScrollIdTests.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.action.search;\n+\n+import org.elasticsearch.search.internal.ShardSearchContextId;\n+import org.elasticsearch.test.ESTestCase;\n+\n+public class ParsedScrollIdTests extends ESTestCase {\n+    public void testHasLocalIndices() {\n+        final int nResults = randomIntBetween(1, 3);\n+        final SearchContextIdForNode[] searchContextIdForNodes = new SearchContextIdForNode[nResults];\n+\n+        boolean hasLocal = false;\n+        for (int i = 0; i < nResults; i++) {\n+\n+            String clusterAlias = randomBoolean() ? randomAlphaOfLength(8) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NjIzNzQx", "url": "https://github.com/elastic/elasticsearch/pull/62053#pullrequestreview-487623741", "createdAt": "2020-09-14T10:31:47Z", "commit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDozMTo0OFrOHRNrfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDozMTo0OFrOHRNrfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgxMTk2NQ==", "bodyText": "This test relies on the TransportSearchHelperTests#testParseScrollId , where, given SearchShardTargets, the scroll id is encoded and then decoded, and the test asserts that the \"cluster alias\" shows up after decoding.\nIMO, this test adds little value on top of that, and it's coded away from the above mentioned piece of code.\nMy personal approach would've been to parametrise the TransportSearchHelperTests#generateQueryResults method to allow it to generate scroll ids with/without cluster aliases, and assert the ParsedScrollId#hasLocalIndices method there as well (probably in another test but not necessarily so).", "url": "https://github.com/elastic/elasticsearch/pull/62053#discussion_r487811965", "createdAt": "2020-09-14T10:31:48Z", "author": {"login": "albertzaharovits"}, "path": "server/src/test/java/org/elasticsearch/action/search/ParsedScrollIdTests.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.action.search;\n+\n+import org.elasticsearch.search.internal.ShardSearchContextId;\n+import org.elasticsearch.test.ESTestCase;\n+\n+public class ParsedScrollIdTests extends ESTestCase {\n+    public void testHasLocalIndices() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NjI0NTcz", "url": "https://github.com/elastic/elasticsearch/pull/62053#pullrequestreview-487624573", "createdAt": "2020-09-14T10:33:01Z", "commit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDozMzowMVrOHRNt1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDozMzowMVrOHRNt1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgxMjU2Nw==", "bodyText": "In principle, I would shy away from getters that do any processing, unless the method has a verb in the name.", "url": "https://github.com/elastic/elasticsearch/pull/62053#discussion_r487812567", "createdAt": "2020-09-14T10:33:01Z", "author": {"login": "albertzaharovits"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchScrollRequest.java", "diffHunk": "@@ -83,6 +83,10 @@ public SearchScrollRequest scrollId(String scrollId) {\n         return this;\n     }\n \n+    public ParsedScrollId parsedScrollId() {\n+        return TransportSearchHelper.parseScrollId(scrollId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NjI2NzQz", "url": "https://github.com/elastic/elasticsearch/pull/62053#pullrequestreview-487626743", "createdAt": "2020-09-14T10:36:27Z", "commit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NjM0MjU4", "url": "https://github.com/elastic/elasticsearch/pull/62053#pullrequestreview-487634258", "createdAt": "2020-09-14T10:48:02Z", "commit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDo0ODowMlrOHROMBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDo0ODowMlrOHROMBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyMDI5Mg==", "bodyText": "As you've mentioned the try-catch structure unfortunately doesn't fit too nicely with the async listener idiom .\nI personally would've maintained a check like request instanceof SearchScrollRequest && ((SearchScrollRequest)request).scrollId() != null as I'm not a fan of catching runtime exceptions .\nAgain, this is a feedback with my perspective, the codebase is cot consistent in this regard; it's your choice.", "url": "https://github.com/elastic/elasticsearch/pull/62053#discussion_r487820292", "createdAt": "2020-09-14T10:48:02Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/RBACEngine.java", "diffHunk": "@@ -262,7 +264,16 @@ public void authorizeIndexAction(RequestInfo requestInfo, AuthorizationInfo auth\n                 // index and if they cannot, we can fail the request early before we allow the execution of the action and in\n                 // turn the shard actions\n                 if (SearchScrollAction.NAME.equals(action)) {\n-                    authorizeIndexActionName(action, authorizationInfo, null, listener);\n+                    try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161013453afd4e865871d385ac11a02cafc5d8f9"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe4bc2785c4ae6d3cc7d7e4b723fb06cb370c9d3", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/fe4bc2785c4ae6d3cc7d7e4b723fb06cb370c9d3", "committedDate": "2020-09-17T06:47:20Z", "message": "Merge remote-tracking branch 'origin/master' into es-61828-ccs-scroll-privileges"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b83bc0a50687c98903904d68acd06257c3197ee", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/7b83bc0a50687c98903904d68acd06257c3197ee", "committedDate": "2020-09-18T01:55:56Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44f5188b54c1ad4e8bb648504d7e6f83a77a1dbc", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/44f5188b54c1ad4e8bb648504d7e6f83a77a1dbc", "committedDate": "2020-09-18T02:47:01Z", "message": "Merge remote-tracking branch 'origin/master' into es-61828-ccs-scroll-privileges"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4722, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}