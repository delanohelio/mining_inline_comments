{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MDg4MDEz", "number": 63389, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODo1OTo0M1rOErFPng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODo1OTo0M1rOErFPng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjEwMTQyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/suggest/SuggestionBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODo1OTo0M1rOHdpgEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTo0MToxOFrOHdrHUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MDcwNw==", "bodyText": "nit: indentation", "url": "https://github.com/elastic/elasticsearch/pull/63389#discussion_r500850707", "createdAt": "2020-10-07T08:59:43Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/search/suggest/SuggestionBuilder.java", "diffHunk": "@@ -298,22 +297,18 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n      * Transfers the text, prefix, regex, analyzer, field, size and shard size settings from the\n      * original {@link SuggestionBuilder} to the target {@link SuggestionContext}\n      */\n-    protected void populateCommonFields(MapperService mapperService, SuggestionSearchContext.SuggestionContext suggestionContext) {\n+    protected void populateCommonFields(QueryShardContext context, SuggestionSearchContext.SuggestionContext suggestionContext) {\n \n         Objects.requireNonNull(field, \"field must not be null\");\n-\n-        MappedFieldType fieldType = mapperService.fieldType(field);\n-        if (fieldType == null) {\n+        if (context.isFieldMapped(field) == false) {\n             throw new IllegalArgumentException(\"no mapping found for field [\" + field + \"]\");\n-        } else if (analyzer == null) {\n-            // no analyzer name passed in, so try the field's analyzer, or the default analyzer\n-            if (fieldType.getTextSearchInfo().getSearchAnalyzer() == null) {\n-                suggestionContext.setAnalyzer(mapperService.searchAnalyzer());\n-            } else {\n-                suggestionContext.setAnalyzer(fieldType.getTextSearchInfo().getSearchAnalyzer());\n-            }\n+        }\n+\n+        MappedFieldType fieldType = context.fieldMapper(field);\n+         if (analyzer == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cac267d53c5162fbf05ea0c2de36172b02766b88"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NzEzNw==", "bodyText": "thanks!", "url": "https://github.com/elastic/elasticsearch/pull/63389#discussion_r500877137", "createdAt": "2020-10-07T09:41:18Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/search/suggest/SuggestionBuilder.java", "diffHunk": "@@ -298,22 +297,18 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n      * Transfers the text, prefix, regex, analyzer, field, size and shard size settings from the\n      * original {@link SuggestionBuilder} to the target {@link SuggestionContext}\n      */\n-    protected void populateCommonFields(MapperService mapperService, SuggestionSearchContext.SuggestionContext suggestionContext) {\n+    protected void populateCommonFields(QueryShardContext context, SuggestionSearchContext.SuggestionContext suggestionContext) {\n \n         Objects.requireNonNull(field, \"field must not be null\");\n-\n-        MappedFieldType fieldType = mapperService.fieldType(field);\n-        if (fieldType == null) {\n+        if (context.isFieldMapped(field) == false) {\n             throw new IllegalArgumentException(\"no mapping found for field [\" + field + \"]\");\n-        } else if (analyzer == null) {\n-            // no analyzer name passed in, so try the field's analyzer, or the default analyzer\n-            if (fieldType.getTextSearchInfo().getSearchAnalyzer() == null) {\n-                suggestionContext.setAnalyzer(mapperService.searchAnalyzer());\n-            } else {\n-                suggestionContext.setAnalyzer(fieldType.getTextSearchInfo().getSearchAnalyzer());\n-            }\n+        }\n+\n+        MappedFieldType fieldType = context.fieldMapper(field);\n+         if (analyzer == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MDcwNw=="}, "originalCommit": {"oid": "cac267d53c5162fbf05ea0c2de36172b02766b88"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3145, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}