{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3OTY0NjI5", "number": 53562, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoyNzoxOVrODoALPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjo1NDozNlrODoAb-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjcyNTEwOnYy", "diffSide": "RIGHT", "path": "modules/mapper-extras/src/test/java/org/elasticsearch/index/query/RankFeatureQueryBuilderTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoyNzoxOVrOF2VGSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoyNzoxOVrOF2VGSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxMzA5Nw==", "bodyText": "I think there is room to pull the TestGeoShapeFieldMapperPlugin to the parent test class and inherited by those that need it or need to extend to include more plugins. I could see it stay either way since it is fairly low impact and the dependency is expected to go away", "url": "https://github.com/elastic/elasticsearch/pull/53562#discussion_r392513097", "createdAt": "2020-03-13T22:27:19Z", "author": {"login": "talevy"}, "path": "modules/mapper-extras/src/test/java/org/elasticsearch/index/query/RankFeatureQueryBuilderTests.java", "diffHunk": "@@ -52,7 +52,7 @@ protected void initializeAdditionalMappings(MapperService mapperService) throws\n \n     @Override\n     protected Collection<Class<? extends Plugin>> getPlugins() {\n-        return Collections.singleton(MapperExtrasPlugin.class);\n+        return List.of(MapperExtrasPlugin.class, TestGeoShapeFieldMapperPlugin.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7d8efdc0820259dd987792b71f718721426b36c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjc2MTE3OnYy", "diffSide": "RIGHT", "path": "modules/mapper-extras/src/test/java/org/elasticsearch/index/query/RankFeatureQueryBuilderTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjo1MDowOVrOF2VcAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMzoxODo1MlrOF2V08A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxODY1OA==", "bodyText": "Why changing to these newer methods? It will make backporting more difficult and should probably be done separately if we want to clean this up in master.", "url": "https://github.com/elastic/elasticsearch/pull/53562#discussion_r392518658", "createdAt": "2020-03-13T22:50:09Z", "author": {"login": "rjernst"}, "path": "modules/mapper-extras/src/test/java/org/elasticsearch/index/query/RankFeatureQueryBuilderTests.java", "diffHunk": "@@ -52,7 +52,7 @@ protected void initializeAdditionalMappings(MapperService mapperService) throws\n \n     @Override\n     protected Collection<Class<? extends Plugin>> getPlugins() {\n-        return Collections.singleton(MapperExtrasPlugin.class);\n+        return List.of(MapperExtrasPlugin.class, TestGeoShapeFieldMapperPlugin.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d9fb1227a1a21544454bb811f1de39fa7ba5a45"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxODk4OA==", "bodyText": "This also seems like it at least warrants a followup issue for cleanup. I don't see why we should need geo mappers inside tests of all these other modules?", "url": "https://github.com/elastic/elasticsearch/pull/53562#discussion_r392518988", "createdAt": "2020-03-13T22:51:30Z", "author": {"login": "rjernst"}, "path": "modules/mapper-extras/src/test/java/org/elasticsearch/index/query/RankFeatureQueryBuilderTests.java", "diffHunk": "@@ -52,7 +52,7 @@ protected void initializeAdditionalMappings(MapperService mapperService) throws\n \n     @Override\n     protected Collection<Class<? extends Plugin>> getPlugins() {\n-        return Collections.singleton(MapperExtrasPlugin.class);\n+        return List.of(MapperExtrasPlugin.class, TestGeoShapeFieldMapperPlugin.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxODY1OA=="}, "originalCommit": {"oid": "3d9fb1227a1a21544454bb811f1de39fa7ba5a45"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUyNTA0MA==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/53562#discussion_r392525040", "createdAt": "2020-03-13T23:18:52Z", "author": {"login": "talevy"}, "path": "modules/mapper-extras/src/test/java/org/elasticsearch/index/query/RankFeatureQueryBuilderTests.java", "diffHunk": "@@ -52,7 +52,7 @@ protected void initializeAdditionalMappings(MapperService mapperService) throws\n \n     @Override\n     protected Collection<Class<? extends Plugin>> getPlugins() {\n-        return Collections.singleton(MapperExtrasPlugin.class);\n+        return List.of(MapperExtrasPlugin.class, TestGeoShapeFieldMapperPlugin.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxODY1OA=="}, "originalCommit": {"oid": "3d9fb1227a1a21544454bb811f1de39fa7ba5a45"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjc2NjUyOnYy", "diffSide": "RIGHT", "path": "modules/spatial-extras/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjo1MzozM1rOF2VfJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjozMDoxMVrOF_-yFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxOTQ2MQ==", "bodyText": "This name doesn't make sense to me. These aren't extra classes, these are the geo classes. Can we just call this module geo or spatial or something similar?", "url": "https://github.com/elastic/elasticsearch/pull/53562#discussion_r392519461", "createdAt": "2020-03-13T22:53:33Z", "author": {"login": "rjernst"}, "path": "modules/spatial-extras/build.gradle", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+esplugin {\n+  description 'Placeholder plugin for spatial features in ES. only registers geo-shape field mapper for now'\n+  classname 'org.elasticsearch.spatial.SpatialExtrasPlugin'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d9fb1227a1a21544454bb811f1de39fa7ba5a45"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUyNTEwOA==", "bodyText": "I am +1 on geo for now until that does not reflect the contents of the plugin", "url": "https://github.com/elastic/elasticsearch/pull/53562#discussion_r392525108", "createdAt": "2020-03-13T23:19:10Z", "author": {"login": "talevy"}, "path": "modules/spatial-extras/build.gradle", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+esplugin {\n+  description 'Placeholder plugin for spatial features in ES. only registers geo-shape field mapper for now'\n+  classname 'org.elasticsearch.spatial.SpatialExtrasPlugin'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxOTQ2MQ=="}, "originalCommit": {"oid": "3d9fb1227a1a21544454bb811f1de39fa7ba5a45"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYzMzIzNw==", "bodyText": "this has been renamed to Geo", "url": "https://github.com/elastic/elasticsearch/pull/53562#discussion_r402633237", "createdAt": "2020-04-02T22:30:11Z", "author": {"login": "talevy"}, "path": "modules/spatial-extras/build.gradle", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+esplugin {\n+  description 'Placeholder plugin for spatial features in ES. only registers geo-shape field mapper for now'\n+  classname 'org.elasticsearch.spatial.SpatialExtrasPlugin'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxOTQ2MQ=="}, "originalCommit": {"oid": "3d9fb1227a1a21544454bb811f1de39fa7ba5a45"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjc2Nzk0OnYy", "diffSide": "RIGHT", "path": "modules/spatial-extras/src/main/java/org/elasticsearch/spatial/SpatialExtrasPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjo1NDozNlrOF2VgCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMzoxOTozMVrOF2V1cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxOTY4OQ==", "bodyText": "You can do this in a single line with Collections.singletonMap", "url": "https://github.com/elastic/elasticsearch/pull/53562#discussion_r392519689", "createdAt": "2020-03-13T22:54:36Z", "author": {"login": "rjernst"}, "path": "modules/spatial-extras/src/main/java/org/elasticsearch/spatial/SpatialExtrasPlugin.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.spatial;\n+\n+import org.elasticsearch.index.mapper.AbstractGeometryFieldMapper;\n+import org.elasticsearch.index.mapper.GeoShapeFieldMapper;\n+import org.elasticsearch.index.mapper.Mapper;\n+import org.elasticsearch.plugins.MapperPlugin;\n+import org.elasticsearch.plugins.Plugin;\n+\n+import java.util.Collections;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+public class SpatialExtrasPlugin extends Plugin implements MapperPlugin {\n+\n+    @Override\n+    public Map<String, Mapper.TypeParser> getMappers() {\n+        Map<String, Mapper.TypeParser> mappers = new LinkedHashMap<>();\n+        mappers.put(GeoShapeFieldMapper.CONTENT_TYPE, new AbstractGeometryFieldMapper.TypeParser());\n+        return Collections.unmodifiableMap(mappers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d9fb1227a1a21544454bb811f1de39fa7ba5a45"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUyNTE2OQ==", "bodyText": "thought about it, but wanted to make sure the tests passed first", "url": "https://github.com/elastic/elasticsearch/pull/53562#discussion_r392525169", "createdAt": "2020-03-13T23:19:31Z", "author": {"login": "talevy"}, "path": "modules/spatial-extras/src/main/java/org/elasticsearch/spatial/SpatialExtrasPlugin.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.spatial;\n+\n+import org.elasticsearch.index.mapper.AbstractGeometryFieldMapper;\n+import org.elasticsearch.index.mapper.GeoShapeFieldMapper;\n+import org.elasticsearch.index.mapper.Mapper;\n+import org.elasticsearch.plugins.MapperPlugin;\n+import org.elasticsearch.plugins.Plugin;\n+\n+import java.util.Collections;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+public class SpatialExtrasPlugin extends Plugin implements MapperPlugin {\n+\n+    @Override\n+    public Map<String, Mapper.TypeParser> getMappers() {\n+        Map<String, Mapper.TypeParser> mappers = new LinkedHashMap<>();\n+        mappers.put(GeoShapeFieldMapper.CONTENT_TYPE, new AbstractGeometryFieldMapper.TypeParser());\n+        return Collections.unmodifiableMap(mappers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxOTY4OQ=="}, "originalCommit": {"oid": "3d9fb1227a1a21544454bb811f1de39fa7ba5a45"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3246, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}