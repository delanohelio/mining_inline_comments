{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMDg0ODIw", "number": 66554, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjowNTo1NlrOFIjmSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjoxNTozM1rOFIjwHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTE2MTcwOnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/resources/test/ssl/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjowNTo1NlrOIKiyHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjowNTo1NlrOIKiyHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkyNjU1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            8. Export the client's private key\n          \n          \n            \n            8. Export the node's private key", "url": "https://github.com/elastic/elasticsearch/pull/66554#discussion_r547926557", "createdAt": "2020-12-23T12:05:56Z", "author": {"login": "ywangd"}, "path": "buildSrc/src/main/resources/test/ssl/README.md", "diffHunk": "@@ -18,3 +18,11 @@ The certificates are generated using catch-all SAN in the following procedure:\n    `keytool -export -alias test-client -keystore test-client.jks -storepass keypass -file test-client.crt`\n 6. Import the client certificate in the node's keystore:\n    `keytool -import -alias test-client -keystore test-node.jks -storepass keypass -file test-client.crt -noprompt`\n+7. Convert the node's keystore to PKCS#12 temporarily so that we can export the private key ( as keytool doesn't allow this)\n+   `keytool -importkeystore -srckeystore test-node.jks -srcstorepass keypass -destkeystore test-node.p12 -deststoretype PKCS12 -deststorepass keypass`\n+8. Export the client's private key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b1b3565354d49f9baacb8fac5347d3bb34145d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTE2MjUyOnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/resources/test/ssl/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjowNjoxM1rOIKiykA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjowNjoxM1rOIKiykA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkyNjY3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            9. Convert the node's keystore to PKCS#12 temporarily so that we can export the private key ( as keytool doesn't allow this)\n          \n          \n            \n            9. Convert the client's keystore to PKCS#12 temporarily so that we can export the private key ( as keytool doesn't allow this)", "url": "https://github.com/elastic/elasticsearch/pull/66554#discussion_r547926672", "createdAt": "2020-12-23T12:06:13Z", "author": {"login": "ywangd"}, "path": "buildSrc/src/main/resources/test/ssl/README.md", "diffHunk": "@@ -18,3 +18,11 @@ The certificates are generated using catch-all SAN in the following procedure:\n    `keytool -export -alias test-client -keystore test-client.jks -storepass keypass -file test-client.crt`\n 6. Import the client certificate in the node's keystore:\n    `keytool -import -alias test-client -keystore test-node.jks -storepass keypass -file test-client.crt -noprompt`\n+7. Convert the node's keystore to PKCS#12 temporarily so that we can export the private key ( as keytool doesn't allow this)\n+   `keytool -importkeystore -srckeystore test-node.jks -srcstorepass keypass -destkeystore test-node.p12 -deststoretype PKCS12 -deststorepass keypass`\n+8. Export the client's private key\n+   `openssl pkcs12 -in test-node.p12 -passin pass:keypass -nocerts -nodes -out test-node.key`\n+9. Convert the node's keystore to PKCS#12 temporarily so that we can export the private key ( as keytool doesn't allow this)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b1b3565354d49f9baacb8fac5347d3bb34145d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTE4Njg3OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/resources/test/ssl/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjoxNTozM1rOIKjAOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNDowOTozMlrOISw3DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkzMDE3MA==", "bodyText": "Is there any value to have encryption here? Since this file is mainly used for testing FIPS, so most likely the private key will be encrypted in the wild.", "url": "https://github.com/elastic/elasticsearch/pull/66554#discussion_r547930170", "createdAt": "2020-12-23T12:15:33Z", "author": {"login": "ywangd"}, "path": "buildSrc/src/main/resources/test/ssl/README.md", "diffHunk": "@@ -18,3 +18,11 @@ The certificates are generated using catch-all SAN in the following procedure:\n    `keytool -export -alias test-client -keystore test-client.jks -storepass keypass -file test-client.crt`\n 6. Import the client certificate in the node's keystore:\n    `keytool -import -alias test-client -keystore test-node.jks -storepass keypass -file test-client.crt -noprompt`\n+7. Convert the node's keystore to PKCS#12 temporarily so that we can export the private key ( as keytool doesn't allow this)\n+   `keytool -importkeystore -srckeystore test-node.jks -srcstorepass keypass -destkeystore test-node.p12 -deststoretype PKCS12 -deststorepass keypass`\n+8. Export the client's private key\n+   `openssl pkcs12 -in test-node.p12 -passin pass:keypass -nocerts -nodes -out test-node.key`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b1b3565354d49f9baacb8fac5347d3bb34145d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU0NTgwNA==", "bodyText": "I think we have enough coverage for this in unit tests, but on the other hand, why not ? :)", "url": "https://github.com/elastic/elasticsearch/pull/66554#discussion_r556545804", "createdAt": "2021-01-13T14:09:32Z", "author": {"login": "jkakavas"}, "path": "buildSrc/src/main/resources/test/ssl/README.md", "diffHunk": "@@ -18,3 +18,11 @@ The certificates are generated using catch-all SAN in the following procedure:\n    `keytool -export -alias test-client -keystore test-client.jks -storepass keypass -file test-client.crt`\n 6. Import the client certificate in the node's keystore:\n    `keytool -import -alias test-client -keystore test-node.jks -storepass keypass -file test-client.crt -noprompt`\n+7. Convert the node's keystore to PKCS#12 temporarily so that we can export the private key ( as keytool doesn't allow this)\n+   `keytool -importkeystore -srckeystore test-node.jks -srcstorepass keypass -destkeystore test-node.p12 -deststoretype PKCS12 -deststorepass keypass`\n+8. Export the client's private key\n+   `openssl pkcs12 -in test-node.p12 -passin pass:keypass -nocerts -nodes -out test-node.key`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkzMDE3MA=="}, "originalCommit": {"oid": "51b1b3565354d49f9baacb8fac5347d3bb34145d"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4443, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}