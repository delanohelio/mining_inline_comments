{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MjQ2MTAy", "number": 54281, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjozMjo0NFrODruu7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozMToyOFrODrx6KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTgxMDM5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/AutoDateHistogramAggregationBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjozMjo0NFrOF8Pqpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjozMjo0NFrOF8Pqpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcxNTU1OA==", "bodyText": "I'm aware of this TODO, I think it's okay to merge to master as is and fix there.", "url": "https://github.com/elastic/elasticsearch/pull/54281#discussion_r398715558", "createdAt": "2020-03-26T16:32:44Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/AutoDateHistogramAggregationBuilder.java", "diffHunk": "@@ -148,6 +145,12 @@ protected AutoDateHistogramAggregationBuilder(AutoDateHistogramAggregationBuilde\n         this.minimumIntervalExpression = clone.minimumIntervalExpression;\n     }\n \n+    @Override\n+    protected ValuesSourceType defaultValueSourceType() {\n+        // TODO: This should probably be DATE, but we're not failing tests with BYTES, so needs more tests?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cacf0a6fca9955da89cf6597bd3befa1a0428e03"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjI4MzU0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/IdFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyMDoxM1rOF8Uaow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyMDoxM1rOF8Uaow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5MzM3OQ==", "bodyText": "I can't tell if github is being weird with the diff or if this is an actual change, but it seems these are listed below as well?  Surprised precommit doesn't fail this", "url": "https://github.com/elastic/elasticsearch/pull/54281#discussion_r398793379", "createdAt": "2020-03-26T18:20:13Z", "author": {"login": "polyfractal"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/IdFieldMapper.java", "diffHunk": "@@ -48,6 +48,8 @@\n import org.elasticsearch.indices.breaker.CircuitBreakerService;\n import org.elasticsearch.search.DocValueFormat;\n import org.elasticsearch.search.MultiValueMode;\n+import org.elasticsearch.search.aggregations.support.CoreValuesSourceType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cacf0a6fca9955da89cf6597bd3befa1a0428e03"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjMzMDY0OnYy", "diffSide": "RIGHT", "path": "test/framework/src/main/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozMToyOFrOF8U4kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozMToyOFrOF8U4kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgwMTA0Mg==", "bodyText": "I believe we lost the check for date_nanos (DateFieldMapper.DATE_NANOS_CONTENT_TYPE)) which I think will eventually break?\nWe can do a quick follow-on PR instead of changing this one imo.", "url": "https://github.com/elastic/elasticsearch/pull/54281#discussion_r398801042", "createdAt": "2020-03-26T18:31:28Z", "author": {"login": "polyfractal"}, "path": "test/framework/src/main/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java", "diffHunk": "@@ -741,15 +737,25 @@ private void writeTestDoc(MappedFieldType fieldType, String fieldName, RandomInd\n             if (typeName.equals(BinaryFieldMapper.CONTENT_TYPE)) {\n                 doc.add(new BinaryFieldMapper.CustomBinaryDocValuesField(fieldName, new BytesRef(\"a\").bytes));\n                 json = \"{ \\\"\" + fieldName + \"\\\" : \\\"a\\\" }\";\n-            } else if (typeName.equals(IpFieldMapper.CONTENT_TYPE)) {\n-                // TODO note: once VS refactor adds IP, this conditional will go away\n-                InetAddress ip = randomIp(randomBoolean());\n-                json = \"{ \\\"\" + fieldName + \"\\\" : \\\"\" + NetworkAddress.format(ip) + \"\\\" }\";\n-                doc.add(new SortedSetDocValuesField(fieldName, new BytesRef(InetAddressPoint.encode(ip))));\n             } else {\n                 doc.add(new SortedSetDocValuesField(fieldName, new BytesRef(\"a\")));\n                 json = \"{ \\\"\" + fieldName + \"\\\" : \\\"a\\\" }\";\n             }\n+        } else if (vst.equals(CoreValuesSourceType.DATE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cacf0a6fca9955da89cf6597bd3befa1a0428e03"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4133, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}