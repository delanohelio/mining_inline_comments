{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MTUwODk2", "number": 62358, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo0MTowOFrOEjjQ2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo0MTowOFrOEjjQ2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzEzMzcxOnYy", "diffSide": "RIGHT", "path": "server/src/internalClusterTest/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo0MTowOFrOHR9rsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoxNTo1NVrOHSt_FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5ODQ0OA==", "bodyText": "refreshDiskUsage triggers a reroute, shouldn't we have that outside the busy assert and just make sure the the CS application is fully processed by busy asserting on the line below only? That should be all that's needed?", "url": "https://github.com/elastic/elasticsearch/pull/62358#discussion_r488598448", "createdAt": "2020-09-15T11:41:08Z", "author": {"login": "original-brownbear"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderIT.java", "diffHunk": "@@ -151,13 +150,17 @@ public void testHighWatermarkNotExceeded() throws InterruptedException {\n         // reduce disk size of node 0 so that no shards fit below the high watermark, forcing all shards onto the other data node\n         // (subtract the translog size since the disk threshold decider ignores this and may therefore move the shard back again)\n         fileSystemProvider.getTestFileStore(dataNode0Path).setTotalSpace(minShardSize + WATERMARK_BYTES - 1L);\n-        refreshDiskUsage();\n-        assertThat(getShardRoutings(dataNode0Id), empty());\n+        assertBusy(() -> {\n+            refreshDiskUsage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f77829c0f5d83c21915dbc6f64a9010b0bfe55d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4OTg0NQ==", "bodyText": "I agree, I think you're right.", "url": "https://github.com/elastic/elasticsearch/pull/62358#discussion_r489389845", "createdAt": "2020-09-16T12:15:55Z", "author": {"login": "tlrx"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderIT.java", "diffHunk": "@@ -151,13 +150,17 @@ public void testHighWatermarkNotExceeded() throws InterruptedException {\n         // reduce disk size of node 0 so that no shards fit below the high watermark, forcing all shards onto the other data node\n         // (subtract the translog size since the disk threshold decider ignores this and may therefore move the shard back again)\n         fileSystemProvider.getTestFileStore(dataNode0Path).setTotalSpace(minShardSize + WATERMARK_BYTES - 1L);\n-        refreshDiskUsage();\n-        assertThat(getShardRoutings(dataNode0Id), empty());\n+        assertBusy(() -> {\n+            refreshDiskUsage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5ODQ0OA=="}, "originalCommit": {"oid": "0f77829c0f5d83c21915dbc6f64a9010b0bfe55d"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1574, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}