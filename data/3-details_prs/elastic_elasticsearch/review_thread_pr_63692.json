{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTIxODM1", "number": 63692, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzoxNjozOFrOEtlW8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjo1OToyM1rOEuFr8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjMzNDU4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzoxNjozOFrOHhdMAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzoxNjozOFrOHhdMAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg0MzI2Nw==", "bodyText": "I think Number is better here. That, or Long and Integer. Its kind of plain luck that the range of numbers that cause the bug are small and so parsed as an Integer instead of a Long or whatever. But tests and stuff could still end up with a Long.", "url": "https://github.com/elastic/elasticsearch/pull/63692#discussion_r504843267", "createdAt": "2020-10-14T17:16:38Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "diffHunk": "@@ -349,9 +350,17 @@ public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower\n                 throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() +\n                         \"] does not support DISJOINT ranges\");\n             }\n-            DateMathParser parser = forcedDateParser == null\n-                    ? dateMathParser\n-                    : forcedDateParser;\n+            DateMathParser parser;\n+            if (forcedDateParser == null) {\n+                if (lowerTerm instanceof Integer || upperTerm instanceof Integer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "033cd0eb2e9dad8d842bbd8f347d5f864b2acfbd"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjMzNjc0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzoxNzoxN1rOHhdNbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTo0NjozN1rOHiOahg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg0MzYzMA==", "bodyText": "Should we just cast them to a number and call longValue on them? It feels like a shame to toString them and then parse them if we know they are numbers.", "url": "https://github.com/elastic/elasticsearch/pull/63692#discussion_r504843630", "createdAt": "2020-10-14T17:17:17Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "diffHunk": "@@ -349,9 +350,17 @@ public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower\n                 throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() +\n                         \"] does not support DISJOINT ranges\");\n             }\n-            DateMathParser parser = forcedDateParser == null\n-                    ? dateMathParser\n-                    : forcedDateParser;\n+            DateMathParser parser;\n+            if (forcedDateParser == null) {\n+                if (lowerTerm instanceof Integer || upperTerm instanceof Integer) {\n+                    // force epoch_millis\n+                    parser = EPOCH_MILLIS_PARSER;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "033cd0eb2e9dad8d842bbd8f347d5f864b2acfbd"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0OTc5OA==", "bodyText": "I explored that option but it's not as nice as thought at first. Needed to move code elsewhere to leverage the whole null-handling and also think we need to consider the millis/nanos resolution, but take a look at the latest commit and let me know what you think", "url": "https://github.com/elastic/elasticsearch/pull/63692#discussion_r505649798", "createdAt": "2020-10-15T15:46:37Z", "author": {"login": "cbuescher"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "diffHunk": "@@ -349,9 +350,17 @@ public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower\n                 throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() +\n                         \"] does not support DISJOINT ranges\");\n             }\n-            DateMathParser parser = forcedDateParser == null\n-                    ? dateMathParser\n-                    : forcedDateParser;\n+            DateMathParser parser;\n+            if (forcedDateParser == null) {\n+                if (lowerTerm instanceof Integer || upperTerm instanceof Integer) {\n+                    // force epoch_millis\n+                    parser = EPOCH_MILLIS_PARSER;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg0MzYzMA=="}, "originalCommit": {"oid": "033cd0eb2e9dad8d842bbd8f347d5f864b2acfbd"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjM0MDkyOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/index/query/IdsQueryBuilderTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzoxODoyMVrOHhdQFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzoxODoyMVrOHhdQFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg0NDMxMQ==", "bodyText": "Leftover I think.", "url": "https://github.com/elastic/elasticsearch/pull/63692#discussion_r504844311", "createdAt": "2020-10-14T17:18:21Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/index/query/IdsQueryBuilderTests.java", "diffHunk": "@@ -109,4 +111,18 @@ public void testMustRewrite() throws IOException {\n                 () -> queryBuilder.toQuery(context));\n         assertEquals(\"Rewrite first\", e.getMessage());\n     }\n+\n+    public void testFoo() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "033cd0eb2e9dad8d842bbd8f347d5f864b2acfbd"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzMzMTExOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTo0Nzo1NFrOHiOeRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTo1MzoxNVrOHiOs7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1MDc1Ng==", "bodyText": "I think we need \"resolution.convert\" here to this gets kind of ugly. I personally prefer the earlier variant where we just have a \"toString\" detour but keep the rest of the code as-is.", "url": "https://github.com/elastic/elasticsearch/pull/63692#discussion_r505650756", "createdAt": "2020-10-15T15:47:54Z", "author": {"login": "cbuescher"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "diffHunk": "@@ -372,25 +381,37 @@ public static Query dateRangeQuery(\n             boolean includeLower,\n             boolean includeUpper,\n             @Nullable ZoneId timeZone,\n-            DateMathParser parser,\n+            DateMathParser forcedDateParser,\n+            DateMathParser fallbackParser,\n             QueryShardContext context,\n             Resolution resolution,\n             BiFunction<Long, Long, Query> builder\n         ) {\n             return handleNow(context, nowSupplier -> {\n                 long l, u;\n+                DateMathParser parser = forcedDateParser == null ? fallbackParser : forcedDateParser;\n                 if (lowerTerm == null) {\n                     l = Long.MIN_VALUE;\n                 } else {\n-                    l = parseToLong(lowerTerm, !includeLower, timeZone, parser, nowSupplier, resolution);\n+                    if (lowerTerm instanceof Number && forcedDateParser == null) {\n+                        // force epoch_millis\n+                        l = resolution.convert(Instant.ofEpochMilli(((Number) lowerTerm).longValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aad02706f3b8ea3fe6e005dbb47cac94f29eb561"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NDUxMA==", "bodyText": "Yeah. I think you are right. If this were super performance sensitive code I'd argue more, but building queries typically isn't. I think going back is probably the right thing.", "url": "https://github.com/elastic/elasticsearch/pull/63692#discussion_r505654510", "createdAt": "2020-10-15T15:53:15Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "diffHunk": "@@ -372,25 +381,37 @@ public static Query dateRangeQuery(\n             boolean includeLower,\n             boolean includeUpper,\n             @Nullable ZoneId timeZone,\n-            DateMathParser parser,\n+            DateMathParser forcedDateParser,\n+            DateMathParser fallbackParser,\n             QueryShardContext context,\n             Resolution resolution,\n             BiFunction<Long, Long, Query> builder\n         ) {\n             return handleNow(context, nowSupplier -> {\n                 long l, u;\n+                DateMathParser parser = forcedDateParser == null ? fallbackParser : forcedDateParser;\n                 if (lowerTerm == null) {\n                     l = Long.MIN_VALUE;\n                 } else {\n-                    l = parseToLong(lowerTerm, !includeLower, timeZone, parser, nowSupplier, resolution);\n+                    if (lowerTerm instanceof Number && forcedDateParser == null) {\n+                        // force epoch_millis\n+                        l = resolution.convert(Instant.ofEpochMilli(((Number) lowerTerm).longValue()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1MDc1Ng=="}, "originalCommit": {"oid": "aad02706f3b8ea3fe6e005dbb47cac94f29eb561"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzYzMTIyOnYy", "diffSide": "RIGHT", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/field_caps/30_filter.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjo1OToyNFrOHiRZOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjo1OToyNFrOHiRZOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY5ODYxOA==", "bodyText": "Interestingly we weren't very precise about this in our own tests.", "url": "https://github.com/elastic/elasticsearch/pull/63692#discussion_r505698618", "createdAt": "2020-10-15T16:59:24Z", "author": {"login": "cbuescher"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/field_caps/30_filter.yml", "diffHunk": "@@ -81,7 +81,7 @@ setup:\n       field_caps:\n         index: test-*\n         fields: \"*\"\n-        body: { index_filter: { range: { timestamp: { gte: 2010 }}}}\n+        body: { index_filter: { range: { timestamp: { gte: \"2010\" }}}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2f74c98e48e0a50c0fc0d322841c3cfa5e11a4b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2868, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}