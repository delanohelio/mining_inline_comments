{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4Njc0MzEy", "number": 57762, "title": "Make ValuesSourceConfig behave like a config object", "bodyText": "This PR has two major changes for how ValuesSourceConfig works.  First, it makes VSConfig immutable.  It had been effectively immutable already, in that nothing outside of its factory methods called its mutators, but they still existed.  Now, it's obvious at a glance that the class is immutable, which should make it easier to reason about, and to pass around without worry.\nA consequence of that change, a lot of places where we previously picked out parts of VSConfig to pass into aggregators, we now just pass the whole config in.  This simplifies constructor arguments, lets us merge some supplier interfaces together, and makes it easier for future developers to add aggregators that might need some part of the config we hadn't used before - it no longer requires changing a bunch of signatures up the call chain to add a new parameter.\nThe second major change is that VSConfig no longer creates null values sources.  Previously, we'd used a null ValuesSource to communicate that there were no values (aka the unmapped-and-no-missing case).  The aggregation builder would detect this and call createUnmapped instead of doCreateInternal on the aggregator factory.  But since the field was nullable, a lot of aggregators have to carry around support for getting passed a null values source, even in cases where they never would be.  Other places, we effectively have a parallel aggregator in the same class for nulls.  In a follow-up PR, we can remove all of that needless null handling and just create proper, optimized, empty aggregators for the createUnmapped path to return.\nBesides these major changes, the rest of this PR plumbs through the low hanging fruit of passing the VSConfig directly into aggregators.  Not all aggregators were converted, because some of the more complicated ones I'd rather do in a smaller PR.", "createdAt": "2020-06-05T19:09:18Z", "url": "https://github.com/elastic/elasticsearch/pull/57762", "merged": true, "mergeCommit": {"oid": "9cbeb8ec91d567648b365ca2745e75722ee0d0ec"}, "closed": true, "closedAt": "2020-06-11T20:17:57Z", "author": {"login": "not-napoleon"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnabm-gH2gAyNDI4Njc0MzEyOjVlZWE1MTNhNTc3Mzg1NDgyNWE0MzY4NmRiNDUzYmJlNDJjOTA2Mzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqRybTAH2gAyNDI4Njc0MzEyOjA4YmRmZDQ5NzBiYjJhMGFmYTM3MjU1MWUwYWU5OTY1OTE0MzA2YWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5eea513a5773854825a43686db453bbe42c90637", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/5eea513a5773854825a43686db453bbe42c90637", "committedDate": "2020-06-02T19:56:49Z", "message": "Make VSConfig immutable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f607a15eb574b624a2bdcc5b39655a5ddbf00466", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/f607a15eb574b624a2bdcc5b39655a5ddbf00466", "committedDate": "2020-06-03T18:56:06Z", "message": "stop passing values sources to things that already have VSConfigs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18f09e36600416b1a7e71ba242f140149c380f57", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/18f09e36600416b1a7e71ba242f140149c380f57", "committedDate": "2020-06-03T20:22:53Z", "message": "rename for clarity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5298aa5ea3a12edb4d6bd667424d04cb91b077c", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/b5298aa5ea3a12edb4d6bd667424d04cb91b077c", "committedDate": "2020-06-04T15:53:23Z", "message": "checkpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fed635e36114ac82051f8d7d4f05f3303c673e5c", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/fed635e36114ac82051f8d7d4f05f3303c673e5c", "committedDate": "2020-06-04T16:06:13Z", "message": "checkpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/93cf920dbc2510f3fc54236dc7613c2ad57c3ee4", "committedDate": "2020-06-05T18:54:25Z", "message": "Simplify a bunch of metric constructors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NTY5Nzg3", "url": "https://github.com/elastic/elasticsearch/pull/57762#pullrequestreview-425569787", "createdAt": "2020-06-05T19:32:48Z", "commit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTozMjo0OFrOGf62ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTozNDoyMFrOGf644A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyMzMyMg==", "bodyText": "This'd probably be a little cleaner as a private final method with early returns.", "url": "https://github.com/elastic/elasticsearch/pull/57762#discussion_r436123322", "createdAt": "2020-06-05T19:32:48Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java", "diffHunk": "@@ -269,8 +275,36 @@ public ValuesSourceConfig(\n         this.unmapped = unmapped;\n         this.script = script;\n         this.scriptValueType = scriptValueType;\n+        this.missing = missing;\n+        this.timeZone = timeZone;\n+        this.format = format == null ? DocValueFormat.RAW : format;\n         this.nowSupplier = nowSupplier;\n \n+        if (!valid()) {\n+            // TODO: resolve no longer generates invalid configs.  Once VSConfig is immutable, we can drop this check\n+            throw new IllegalStateException(\n+                \"value source config is invalid; must have either a field context or a script or marked as unwrapped\");\n+        }\n+\n+        final ValuesSource vs;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyMzg3Mg==", "bodyText": "Isn't |= the compound bitwise-or-then-assign operator?", "url": "https://github.com/elastic/elasticsearch/pull/57762#discussion_r436123872", "createdAt": "2020-06-05T19:34:20Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java", "diffHunk": "@@ -285,8 +319,12 @@ public FieldContext fieldContext() {\n         return script;\n     }\n \n-    public boolean unmapped() {\n-        return unmapped;\n+    /**\n+     * Returns true if the values source configured by this object can yield values.  We might not be able to yield values if, for example,\n+     * the specified field does not exist on this index.\n+     */\n+    public boolean hasValues() {\n+        return fieldContext != null || script != null || missing != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NTcxNTc5", "url": "https://github.com/elastic/elasticsearch/pull/57762#pullrequestreview-425571579", "createdAt": "2020-06-05T19:35:52Z", "commit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTozNTo1MlrOGf67cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTo1Mzo0M1rOGf7elA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyNDUyOQ==", "bodyText": "Run it through the code-formatter?", "url": "https://github.com/elastic/elasticsearch/pull/57762#discussion_r436124529", "createdAt": "2020-06-05T19:35:52Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java", "diffHunk": "@@ -154,10 +154,9 @@ private static ValuesSourceConfig internalResolve(QueryShardContext context,\n         if (valuesSourceType == null) {\n             valuesSourceType = defaultValueSourceType;\n         }\n-        config = new ValuesSourceConfig(valuesSourceType, fieldContext, unmapped, aggregationScript, scriptValueType, context::nowInMillis);\n-        config.format(resolveFormat(format, valuesSourceType, timeZone, fieldType));\n-        config.missing(missing);\n-        config.timezone(timeZone);\n+        DocValueFormat docValueFormat = resolveFormat(format, valuesSourceType, timeZone, fieldType);\n+        config = new ValuesSourceConfig(valuesSourceType, fieldContext, unmapped, aggregationScript, scriptValueType, missing,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyNDYxMQ==", "bodyText": "Can this be final too?", "url": "https://github.com/elastic/elasticsearch/pull/57762#discussion_r436124611", "createdAt": "2020-06-05T19:36:02Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java", "diffHunk": "@@ -239,18 +241,19 @@ public static ValuesSourceConfig resolveFieldOnly(MappedFieldType fieldType,\n      * Convenience method for creating unmapped configs\n      */\n     public static ValuesSourceConfig resolveUnmapped(ValuesSourceType valuesSourceType, QueryShardContext queryShardContext) {\n-        return new ValuesSourceConfig(valuesSourceType, null, true, null, null, queryShardContext::nowInMillis);\n+        return new ValuesSourceConfig(valuesSourceType, null, true, null, null, null, null, null, queryShardContext::nowInMillis);\n     }\n \n     private final ValuesSourceType valuesSourceType;\n-    private FieldContext fieldContext;\n-    private AggregationScript.LeafFactory script;\n-    private ValueType scriptValueType;\n-    private boolean unmapped;\n-    private DocValueFormat format = DocValueFormat.RAW;\n-    private Object missing;\n-    private ZoneId timeZone;\n-    private LongSupplier nowSupplier;\n+    private final FieldContext fieldContext;\n+    private final AggregationScript.LeafFactory script;\n+    private final ValueType scriptValueType;\n+    private final boolean unmapped;\n+    private final DocValueFormat format;\n+    private final Object missing;\n+    private final ZoneId timeZone;\n+    private final LongSupplier nowSupplier;\n+    private ValuesSource valuesSource;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEzMzUyNA==", "bodyText": "Ignore this. On my browser |= and != look very similar.", "url": "https://github.com/elastic/elasticsearch/pull/57762#discussion_r436133524", "createdAt": "2020-06-05T19:53:43Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java", "diffHunk": "@@ -285,8 +319,12 @@ public FieldContext fieldContext() {\n         return script;\n     }\n \n-    public boolean unmapped() {\n-        return unmapped;\n+    /**\n+     * Returns true if the values source configured by this object can yield values.  We might not be able to yield values if, for example,\n+     * the specified field does not exist on this index.\n+     */\n+    public boolean hasValues() {\n+        return fieldContext != null || script != null || missing != null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyMzg3Mg=="}, "originalCommit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MTk1NDM2", "url": "https://github.com/elastic/elasticsearch/pull/57762#pullrequestreview-426195436", "createdAt": "2020-06-08T12:50:31Z", "commit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjo1MDozMVrOGgcFVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzowMDo1MlrOGgcjrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY2NzczNA==", "bodyText": "\ud83d\udc4d to getting the prepared rounding in the ctor.", "url": "https://github.com/elastic/elasticsearch/pull/57762#discussion_r436667734", "createdAt": "2020-06-08T12:50:31Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramAggregatorFactory.java", "diffHunk": "@@ -76,18 +75,21 @@ public long minDocCount() {\n     }\n \n     @Override\n-    protected Aggregator doCreateInternal(ValuesSource valuesSource,\n-                                            SearchContext searchContext,\n-                                            Aggregator parent,\n-                                            boolean collectsFromSingleBucket,\n-                                            Map<String, Object> metadata) throws IOException {\n+    protected Aggregator doCreateInternal(\n+        SearchContext searchContext,\n+        Aggregator parent,\n+        boolean collectsFromSingleBucket,\n+        Map<String, Object> metadata) throws IOException {\n         AggregatorSupplier aggregatorSupplier = queryShardContext.getValuesSourceRegistry().getAggregator(config,\n             DateHistogramAggregationBuilder.NAME);\n         if (aggregatorSupplier instanceof DateHistogramAggregationSupplier == false) {\n             throw new AggregationExecutionException(\"Registry miss-match - expected DateHistogramAggregationSupplier, found [\" +\n                 aggregatorSupplier.getClass().toString() + \"]\");\n         }\n-        Rounding.Prepared preparedRounding = valuesSource.roundingPreparer(queryShardContext.getIndexReader()).apply(shardRounding);\n+        // TODO: Is there a reason not to get the prepared rounding in the supplier itself?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY3MjY5OQ==", "bodyText": "Can this be a ctor reference like the others? It looks like it from here.", "url": "https://github.com/elastic/elasticsearch/pull/57762#discussion_r436672699", "createdAt": "2020-06-08T12:58:00Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/SpatialPlugin.java", "diffHunk": "@@ -106,17 +105,16 @@ protected XPackLicenseState getLicenseState() {\n \n     private static void registerGeoShapeBoundsAggregator(ValuesSourceRegistry.Builder builder) {\n         builder.register(GeoBoundsAggregationBuilder.NAME, GeoShapeValuesSourceType.instance(),\n-            (GeoBoundsAggregatorSupplier) (name, aggregationContext, parent, valuesSource, wrapLongitude, metadata)\n-                -> new GeoShapeBoundsAggregator(name, aggregationContext, parent, (GeoShapeValuesSource) valuesSource,\n-                wrapLongitude, metadata));\n+            (GeoBoundsAggregatorSupplier) (name, aggregationContext, parent, valuesSourceConfig, wrapLongitude, metadata)\n+                -> new GeoShapeBoundsAggregator(name, aggregationContext, parent, valuesSourceConfig, wrapLongitude, metadata));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY3NDQwMQ==", "bodyText": "I think it'd be a little cleaner to make a \"wrapper\" MetricAggregatorSupplier that checks the license state and calls a ctor reference if it is allowed.", "url": "https://github.com/elastic/elasticsearch/pull/57762#discussion_r436674401", "createdAt": "2020-06-08T12:59:46Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/SpatialPlugin.java", "diffHunk": "@@ -106,17 +105,16 @@ protected XPackLicenseState getLicenseState() {\n \n     private static void registerGeoShapeBoundsAggregator(ValuesSourceRegistry.Builder builder) {\n         builder.register(GeoBoundsAggregationBuilder.NAME, GeoShapeValuesSourceType.instance(),\n-            (GeoBoundsAggregatorSupplier) (name, aggregationContext, parent, valuesSource, wrapLongitude, metadata)\n-                -> new GeoShapeBoundsAggregator(name, aggregationContext, parent, (GeoShapeValuesSource) valuesSource,\n-                wrapLongitude, metadata));\n+            (GeoBoundsAggregatorSupplier) (name, aggregationContext, parent, valuesSourceConfig, wrapLongitude, metadata)\n+                -> new GeoShapeBoundsAggregator(name, aggregationContext, parent, valuesSourceConfig, wrapLongitude, metadata));\n     }\n \n     private void registerGeoShapeCentroidAggregator(ValuesSourceRegistry.Builder builder) {\n         builder.register(GeoCentroidAggregationBuilder.NAME, GeoShapeValuesSourceType.instance(),\n-            (GeoCentroidAggregatorSupplier) (name, aggregationContext, parent, valuesSource, metadata)\n+            (MetricAggregatorSupplier) (name, valuesSourceConfig, aggregationContext, parent, metadata)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY3NTUwMQ==", "bodyText": "This is a super long number of arguments! I'm glad we don't call the ctor very much though.", "url": "https://github.com/elastic/elasticsearch/pull/57762#discussion_r436675501", "createdAt": "2020-06-08T13:00:52Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/SpatialPluginTests.java", "diffHunk": "@@ -35,8 +35,8 @@ public void testGeoCentroidLicenseCheck() {\n             List<Consumer<ValuesSourceRegistry.Builder>> registrar = plugin.getAggregationExtentions();\n             registrar.forEach(c -> c.accept(registryBuilder));\n             ValuesSourceRegistry registry = registryBuilder.build();\n-            GeoCentroidAggregatorSupplier centroidSupplier = (GeoCentroidAggregatorSupplier) registry.getAggregator(\n-                new ValuesSourceConfig(GeoShapeValuesSourceType.instance(), null, false, null, null, null),\n+            MetricAggregatorSupplier centroidSupplier = (MetricAggregatorSupplier) registry.getAggregator(\n+                new ValuesSourceConfig(GeoShapeValuesSourceType.instance(), null, true, null, null, null, null, null, null),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93cf920dbc2510f3fc54236dc7613c2ad57c3ee4"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "657458dc8bae079e8d3f34ee6a3c6e4043fcf198", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/657458dc8bae079e8d3f34ee6a3c6e4043fcf198", "committedDate": "2020-06-09T18:24:50Z", "message": "Fix unmapped for ArrayVS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a539a4bc9f9553678832134b6c9a6d193f2ad17a", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/a539a4bc9f9553678832134b6c9a6d193f2ad17a", "committedDate": "2020-06-10T20:54:34Z", "message": "Response to PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01b072af501cf0a2803823f9935e7ff663f6f794", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/01b072af501cf0a2803823f9935e7ff663f6f794", "committedDate": "2020-06-10T21:24:52Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4893dd3298f07d90ed4e2c31e0735e051ad60aa2", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/4893dd3298f07d90ed4e2c31e0735e051ad60aa2", "committedDate": "2020-06-11T14:29:48Z", "message": "put nulls back in composite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d8f7e6396589e54dc204be00f2fbf501452751e", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/8d8f7e6396589e54dc204be00f2fbf501452751e", "committedDate": "2020-06-11T14:54:49Z", "message": "Make VSConfig immutable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bdb55f506d9a61492e9688d5e17a6c740cc8bd0", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/8bdb55f506d9a61492e9688d5e17a6c740cc8bd0", "committedDate": "2020-06-11T15:13:53Z", "message": "stop passing values sources to things that already have VSConfigs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b415fea5706c60f10ad8caf44855c312e2e102e0", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/b415fea5706c60f10ad8caf44855c312e2e102e0", "committedDate": "2020-06-11T15:13:54Z", "message": "rename for clarity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0507df5510ad4c49d7b233af6ae25250a65308e", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/b0507df5510ad4c49d7b233af6ae25250a65308e", "committedDate": "2020-06-11T15:13:54Z", "message": "checkpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e72f9200f87d899e622d8e99910f78133cc90ae8", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/e72f9200f87d899e622d8e99910f78133cc90ae8", "committedDate": "2020-06-11T15:13:54Z", "message": "checkpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "502d9668d64f9e1decfe265e47a42ca78d478b73", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/502d9668d64f9e1decfe265e47a42ca78d478b73", "committedDate": "2020-06-11T15:31:17Z", "message": "Simplify a bunch of metric constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4356558d6e9121c5aaa95230dcf7427f5ce2fe7a", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/4356558d6e9121c5aaa95230dcf7427f5ce2fe7a", "committedDate": "2020-06-11T15:31:18Z", "message": "Fix unmapped for ArrayVS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c884369785fc3715ffe0b6603cdc1b70b089c5bf", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/c884369785fc3715ffe0b6603cdc1b70b089c5bf", "committedDate": "2020-06-11T15:31:18Z", "message": "Response to PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92c796d9db9206eef0ce0ff0d1532c48c874860d", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/92c796d9db9206eef0ce0ff0d1532c48c874860d", "committedDate": "2020-06-11T15:31:18Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60c3d0aab543c0a1e80ac328d0d3845f9ed063be", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/60c3d0aab543c0a1e80ac328d0d3845f9ed063be", "committedDate": "2020-06-11T15:31:18Z", "message": "put nulls back in composite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d67236aa4a9fa43ffcbc820f4dc9afbd8f0696eb", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/d67236aa4a9fa43ffcbc820f4dc9afbd8f0696eb", "committedDate": "2020-06-11T15:32:34Z", "message": "Merge branch 'vs-refactor-vs-config-cleanup' of github.com:not-napoleon/elasticsearch into vs-refactor-vs-config-cleanup\n\n Conflicts:\n\tserver/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorFactory.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08bdfd4970bb2a0afa372551e0ae9965914306ad", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/08bdfd4970bb2a0afa372551e0ae9965914306ad", "committedDate": "2020-06-11T17:34:22Z", "message": "Merge branch 'master' into vs-refactor-vs-config-cleanup"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3790, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}