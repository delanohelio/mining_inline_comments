{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMDM4MTI2", "number": 52917, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzo1Mzo0M1rODoigug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDozNzozOVrODov6nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODM1MDY2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzo1Mzo0NFrOF3JnWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDowMzozM1rOF3dqZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3MzUzMA==", "bodyText": "Most of the indices referenced in this file is prefixed with a dot. So just wanna make sure this one is indeed without it.", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393373530", "createdAt": "2020-03-16T23:53:44Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5OTczNg==", "bodyText": "yes it's intentionally referring to the apm data indices", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393399736", "createdAt": "2020-03-17T01:41:58Z", "author": {"login": "ogupte"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3MzUzMA=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMTk4OQ==", "bodyText": "@ogupte In a previous discussion, of which you have been part of, see #50051 (comment), Brandon laid out the design of security privileges.\nAccording to it, system roles such as kibana_system, which are used by Kibana system tasks/jobs for internal house keeping, must not be granted privileges against end user data. The administrator must at all times be in control of which users and services have access to the end user's data.\nIf a system task needs to deal with user data, it must get consent from the user, and afterwards obtain API keys on the user's behalf (see #52886). The end users should be able to revoke the system user's access to his data at any time.\nIIUC this PR grants privileges to user data to the kibana_system role, going against the restrictions described above.", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393701989", "createdAt": "2020-03-17T14:03:33Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3MzUzMA=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDU0Njg0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "isResolved": false, "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDozNzozOVrOF3fMqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxNToyOVrOF4VRhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng==", "bodyText": "I also don't think the kibana_system user should access ML data directly, but I need more context.\nInstead I propose, similarly to the above, the the APM kibana system user calls the ML APIs using the credentials of the user (via an API key). That's because ML users do get access to the .ml-anomalies* indices which indicates that the .ml-anomalies* indices contain user data.\nMaybe @droberts195 has a better suggestion of how APM should access ML data ?", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393727146", "createdAt": "2020-03-17T14:37:39Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0MDgxNg==", "bodyText": "@albertzaharovits As far as I understand @kobelb was OK with this exception, see e.g. elastic/kibana#50757 (comment). I can't find anything more formal or explicit than this, so maybe Brandon can confirm here just to be sure.", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393740816", "createdAt": "2020-03-17T14:56:29Z", "author": {"login": "dgieselaar"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2NTEzNg==", "bodyText": "After quite a few discussions regarding this topic, I came to the conclusion that allowing the kibana_system role to read from the apm-* indices only for collecting telemetry was tolerable from the security perspective. The telemetry data is aggregate in nature, and unauthorized end-users will be unable to see these aggregates.  Since apm-* is a \"data index\" which users have complete control over, there's the risk that these indices contain documents that aren't created by the APM server for use within the APM application in Kibana, which could potentially lead to other bugs. I can only speculate on the likelihood and impact of these other bugs.\nI don't believe I was part of a prior discussion regarding .ml-anomalies*.  From the security perspective, as long as we're only using this for telemetry it also seems tolerable for the aforementioned reasons. I'll defer to @droberts195 on the risk of other bugs which might occur from Kibana reading from these indices directly.", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393765136", "createdAt": "2020-03-17T15:29:29Z", "author": {"login": "kobelb"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3NTcxNQ==", "bodyText": "From elastic/kibana#50757 (comment) it looks like the requirement is to find out:\n\n\nwhether the cluster has APM-specific ML indices\n\n\nBut actually given the way the check is being done - see https://github.com/elastic/kibana/pull/51612/files#diff-876010cd4a64003f0f8c1ded433c1c72R371 - it is finding out whether indices whose names match .ml-anomalies-*-high_mean_response_time contain at least one document.\nThe output in the telemetry is this:\n        integrations: {\n           ml: {\n             has_anomalies_indices: boolean\n           }\n         }\n\nIs the real requirement to find out if the ML jobs created by APM have done any work?  It seems to be wrong to be doing this via some internal implementation detail that could change (and could return an incorrect answer with the current implementation if somebody has created some other job not related to APM whose job ID ends with -high_mean_response_time).\nSince the APM telemetry code seems to know the job IDs of ML jobs APM might have created it would be better to just use the get job stats API.  That would mean giving the kibana_system role the manage_ml cluster privilege, but that's what we plan to do anyway for the \"ML in Spaces\" project so it wouldn't hurt if you did it now.  You could look for data_counts.processed_record_count > 0 in the job stats for the APM jobs to see if they've been used.\nEven if you really do want to report on ML indices (the internal implementation detail) rather than ML jobs (the public interface), I am not convinced it's appropriate to grant the read_cross_cluster privilege.  Would APM ever really need to access ML indices in a different cluster?", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393775715", "createdAt": "2020-03-17T15:43:08Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5NTkwOA==", "bodyText": "I also added elastic/kibana#50757 (comment) on the Kibana issue.", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393795908", "createdAt": "2020-03-17T16:09:57Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwMjg5Mg==", "bodyText": "@droberts195 sounds good (better actually), indeed we only want to know whether any APM jobs have been created. If the API you mentioned gives us that info, that would be good enough as well. @kobelb @albertzaharovits any concerns around adding the manage_ml privilege and removing access to the .ml-anomalies-* indices? Anything else we should add?", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393902892", "createdAt": "2020-03-17T18:57:51Z", "author": {"login": "dgieselaar"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxODIzMQ==", "bodyText": "@kobelb @albertzaharovits any concerns around adding the manage_ml privilege and removing access to the .ml-anomalies-* indices?\n\nSeems reasonable to me.\n\nAnything else we should add?\n\nNothing I can think of.", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393918231", "createdAt": "2020-03-17T19:27:42Z", "author": {"login": "kobelb"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0NDc2Ng==", "bodyText": "Thank you @kobelb and @droberts195  for the excellent explanations!\nI understand that metrics blur the line between \"user data\" and \"system data\". In this case, the imperative of obtaining user consent for metrics data loses importance.\nHowever, as you point out, users can potentially have write access to the apm-* indices, and code in Kibana might interpret that. Moreover, I assume the apm-* index pattern is user configurable, which would trip Kibana because reserved roles are not configurable.\nTherefore this sounds to me like a temporary solution. @dgieselaar would you agree with this assessment? I personally believe that we can come up with a better setup using capabilities from #52886 and #52886 , and I think we should have an GH issue in the elasticsearch or kibana repos that tracks this improvement and we should also add a link to it in a comment next to the apm-* privs.\nIf we follow the above, as well as @droberts195 's manage_ml suggestion, I would approve of this change.", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393944766", "createdAt": "2020-03-17T20:18:51Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0OTEyMQ==", "bodyText": "@albertzaharovits I think we want to avoid requiring our users to initiate background tasks like this (IIUC this is necessary even with the linked PR) because we want a solution that works out of the box. We previously discussed API keys but decided against it for this reason.\nI do agree it should be a temporary solution for the reasons you've mentioned, but I'm not sure which solution that would be. For now we would accept data loss if the user has reconfigured their indices.", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r393949121", "createdAt": "2020-03-17T20:27:18Z", "author": {"login": "dgieselaar"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMTU5MQ==", "bodyText": "@albertzaharovits I think we want to avoid requiring our users to initiate background tasks like this (IIUC this is necessary even with the linked PR) because we want a solution that works out of the box. We previously discussed API keys but decided against it for this reason.\n\n@dgieselaar This is not entirely accurate. For example, using secondary authentication (see #52093 - I now realize I made a mistake in the above \"#52886 and #52886\") the query against the apm-* indices can be made by the end user currently interacting with the APM UI. Also, if changing the apm-* index pattern is at all possible, it should also be feasible to obtain an ES API key for the configured index pattern for the user doing the configuration (although I don't have any idea about the multi-tenancy aspect of the data in the apm indices).\nAnother point is that there is an apm_user system user already, and it's not clear to me why the same privileges have to be assigned to the kibana system user as well.\nUltimately it seems I lack the context, and the PR description does not provide it, so I feel I'm not the person to review the changes. Although I'm open to learn about it and contribute options, that's not necessary, and we can rely on the reviews from @kobelb and @legrego since Kibana is doing most of the the authorization around APM anyway.", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r394001591", "createdAt": "2020-03-17T22:15:30Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA0NTA0NQ==", "bodyText": "I think further thought needs to be given to how we enable solutions like APM to report their telemetry data. Per elastic/kibana#50757 (comment), @TinaHeiligers and the Pulse team will be taking this into consideration when fleshing out the improvements which they're going to be making to our existing telemetry infrastructure.\nFor the time being, using Kibana to access the hard-coded apm-* indices is tolerable, but far from ideal.", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r394045045", "createdAt": "2020-03-18T00:29:46Z", "author": {"login": "kobelb"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxODQ1NA==", "bodyText": "indeed we only want to know whether any APM jobs have been created\n\nIf you don't care if they've been used or not, just literally if they've been created, then the most appropriate API would be get jobs.  You can choose one of these two ways to use it:\n\nCall it with your wildcard ID pattern and check whether you get an empty array back.  Empty array => no APM jobs, non-empty array => APM jobs exist.\nCall it with your wildcard and ?allow_no_match=false.  Then 404 status => no APM jobs and 200 status => APM jobs exist.", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r394218454", "createdAt": "2020-03-18T09:45:13Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYxMzEyNA==", "bodyText": "I've addressed your suggestions in the PR @droberts195, thanks!", "url": "https://github.com/elastic/elasticsearch/pull/52917#discussion_r394613124", "createdAt": "2020-03-18T20:15:29Z", "author": {"login": "dgieselaar"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java", "diffHunk": "@@ -124,11 +124,19 @@\n                                         .indices(\".monitoring-*\").privileges(\"read\", \"read_cross_cluster\").build(),\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".management-beats\").privileges(\"create_index\", \"read\", \"write\").build(),\n-                                // .apm-* is for APM's agent configuration and custom link index creation\n+                                // APM agent configuration\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-agent-configuration\").privileges(\"all\").build(),\n+                                // APM custom link index creation\n                                 RoleDescriptor.IndicesPrivileges.builder()\n                                         .indices(\".apm-custom-link\").privileges(\"all\").build(),\n+                                // APM telemetry queries APM & ML anomalies indices in kibana task runner\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\"apm-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),\n+                                RoleDescriptor.IndicesPrivileges.builder()\n+                                    .indices(\".ml-anomalies-*\")\n+                                    .privileges(\"read\", \"read_cross_cluster\", \"view_index_metadata\").build(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzE0Ng=="}, "originalCommit": {"oid": "c8f26084d1bda8e1450f14041752f4e516a63f55"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3709, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}