{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NjQ5NDY1", "number": 51282, "title": "Cut over from SearchContext to ReaderContext", "bodyText": "With this change, we partially move the state of SearchContext to ReaderContext. This is another step allowing us to move the state of search to the coordinating node.\nWe will need several follow-ups to move the entire search state to the coordinating node.\nRelates #46523\nNote: this pull request targets the reader-context branch.", "createdAt": "2020-01-22T03:50:12Z", "url": "https://github.com/elastic/elasticsearch/pull/51282", "merged": true, "mergeCommit": {"oid": "3ce9a3bf9663e83636af3cc30072f3a9dfa38692"}, "closed": true, "closedAt": "2020-01-27T20:38:57Z", "author": {"login": "dnhatn"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8tGyyAH2gAyMzY1NjQ5NDY1OjVlZjQyODAzYTBhNzYxYWZmZDAzYjNiMGViMzliYmVlN2YxMGU4ZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-eYJxAH2gAyMzY1NjQ5NDY1OjM0ZWQzOWJjYWU0MjgwNmZiNWMwMTY4ODRmMWE1NmFkNTA0YzlhZjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5ef42803a0a761affd03b3b0eb39bbee7f10e8e7", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/5ef42803a0a761affd03b3b0eb39bbee7f10e8e7", "committedDate": "2020-01-22T03:23:32Z", "message": "Cut over from SearchContext to ReaderContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "087f0af49ebb971b03e64f45edd9f78a5fa0787d", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/087f0af49ebb971b03e64f45edd9f78a5fa0787d", "committedDate": "2020-01-22T15:21:16Z", "message": "Merge branch 'feature/reader-context' into cut-over-reader-context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2d899bd9bf175fb44e17bd1a576748cc80e99ac", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/b2d899bd9bf175fb44e17bd1a576748cc80e99ac", "committedDate": "2020-01-22T22:31:38Z", "message": "notify when releasing a search context"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTE5OTE5", "url": "https://github.com/elastic/elasticsearch/pull/51282#pullrequestreview-348519919", "createdAt": "2020-01-27T09:18:30Z", "commit": {"oid": "b2d899bd9bf175fb44e17bd1a576748cc80e99ac"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwOToxODozMFrOFh77Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwOToyMDo1N1rOFh7_Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEyOTE1MQ==", "bodyText": "I think we can remove Lifetime entirely. We don't use COLLECTION so it would be easier to just call addReleasable(Releasable).", "url": "https://github.com/elastic/elasticsearch/pull/51282#discussion_r371129151", "createdAt": "2020-01-27T09:18:30Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/internal/SearchContext.java", "diffHunk": "@@ -411,10 +377,6 @@ public final boolean hasOnlySuggest() {\n          * This life time is for objects that only live during collection time.\n          */\n         COLLECTION,\n-        /**\n-         * This life time is for objects that need to live until the end of the current search phase.\n-         */\n-        PHASE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2d899bd9bf175fb44e17bd1a576748cc80e99ac"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEzMDE5NQ==", "bodyText": "Why do you need to keep the rescorers ? Can't we build them on each phase like we do for the Query ?", "url": "https://github.com/elastic/elasticsearch/pull/51282#discussion_r371130195", "createdAt": "2020-01-27T09:20:57Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/internal/ReaderContext.java", "diffHunk": "@@ -0,0 +1,155 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.search.internal;\n+\n+import org.elasticsearch.common.lease.Releasable;\n+import org.elasticsearch.common.lease.Releasables;\n+import org.elasticsearch.common.util.concurrent.AbstractRefCounted;\n+import org.elasticsearch.index.engine.Engine;\n+import org.elasticsearch.index.shard.IndexShard;\n+import org.elasticsearch.search.dfs.AggregatedDfs;\n+import org.elasticsearch.search.rescore.RescoreContext;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * Holds a reference to a point in time {@link Engine.Searcher} that will be used to construct {@link SearchContext}.\n+ * This class also implements {@link org.elasticsearch.common.util.concurrent.RefCounted} since in some situations like\n+ * in {@link org.elasticsearch.search.SearchService} a SearchContext can be closed concurrently due to independent events\n+ * ie. when an index gets removed. To prevent accessing closed IndexReader / IndexSearcher instances the SearchContext\n+ * can be guarded by a reference count and fail if it's been closed by an external event.\n+ *\n+ * For reference why we use RefCounted here see https://github.com/elastic/elasticsearch/pull/20095.\n+ */\n+public class ReaderContext extends AbstractRefCounted implements Releasable {\n+    private final long id;\n+    private final IndexShard indexShard;\n+    private final Engine.Searcher engineSearcher;\n+    private final AtomicBoolean closed = new AtomicBoolean(false);\n+\n+    private volatile long keepAlive;\n+    private volatile long lastAccessTime = -1L;\n+\n+    // BWC\n+    private final ShardSearchRequest request;\n+    private final ScrollContext scrollContext;\n+    private AggregatedDfs aggregatedDfs;\n+    private List<RescoreContext> rescore;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2d899bd9bf175fb44e17bd1a576748cc80e99ac"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6e1f6f01d47d26102fcf7df3c1f734b0e32975c", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/b6e1f6f01d47d26102fcf7df3c1f734b0e32975c", "committedDate": "2020-01-27T14:21:44Z", "message": "Merge branch 'feature/reader-context' into cut-over-reader-context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34ed39bcae42806fb5c016884f1a56ad504c9af6", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/34ed39bcae42806fb5c016884f1a56ad504c9af6", "committedDate": "2020-01-27T15:21:46Z", "message": "Remove lifetime"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2829, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}