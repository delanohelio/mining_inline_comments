{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NzIzOTQ5", "number": 60494, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNjo1ODowNFrOEUIFWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNjo1ODowNFrOEUIFWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTM5NDE3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsContext.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNjo1ODowNFrOG6Pcbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjoyOToxN1rOG7Kv6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyMzYzMQ==", "bodyText": "This felt a bit hacky. We take a similar strategy in FetchSourceContext#getFilter.", "url": "https://github.com/elastic/elasticsearch/pull/60494#discussion_r463723631", "createdAt": "2020-07-31T16:58:04Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsContext.java", "diffHunk": "@@ -102,22 +105,43 @@ public void setChildInnerHits(Map<String, InnerHitSubContext> childInnerHits) {\n             this.childInnerHits = new InnerHitsContext(childInnerHits);\n         }\n \n-        protected Weight createInnerHitQueryWeight() throws IOException {\n-            final boolean needsScores = size() != 0 && (sort() == null || sort().sort.needsScores());\n-            return context.searcher().createWeight(context.searcher().rewrite(query()),\n+        protected Weight getInnerHitQueryWeight() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY2MDc0Ng==", "bodyText": "I think it's still hacky but slightly better.\nThere should be a way to share a state in FetchSubPhase#hitExecute though.\nIf we plan to use hitExecute more, maybe we should provide a way to  share a state between hits ?\nA factory could help for instance:\nFunction<SearchContext, FetchSubPhase> fetchSubPhase;", "url": "https://github.com/elastic/elasticsearch/pull/60494#discussion_r464660746", "createdAt": "2020-08-03T21:02:59Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsContext.java", "diffHunk": "@@ -102,22 +105,43 @@ public void setChildInnerHits(Map<String, InnerHitSubContext> childInnerHits) {\n             this.childInnerHits = new InnerHitsContext(childInnerHits);\n         }\n \n-        protected Weight createInnerHitQueryWeight() throws IOException {\n-            final boolean needsScores = size() != 0 && (sort() == null || sort().sort.needsScores());\n-            return context.searcher().createWeight(context.searcher().rewrite(query()),\n+        protected Weight getInnerHitQueryWeight() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyMzYzMQ=="}, "originalCommit": {"oid": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY5NTI3NQ==", "bodyText": "This is a good idea, I do think we'll need a mechanism like this as we convert more phases to use hitExecute.", "url": "https://github.com/elastic/elasticsearch/pull/60494#discussion_r464695275", "createdAt": "2020-08-03T22:29:17Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsContext.java", "diffHunk": "@@ -102,22 +105,43 @@ public void setChildInnerHits(Map<String, InnerHitSubContext> childInnerHits) {\n             this.childInnerHits = new InnerHitsContext(childInnerHits);\n         }\n \n-        protected Weight createInnerHitQueryWeight() throws IOException {\n-            final boolean needsScores = size() != 0 && (sort() == null || sort().sort.needsScores());\n-            return context.searcher().createWeight(context.searcher().rewrite(query()),\n+        protected Weight getInnerHitQueryWeight() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyMzYzMQ=="}, "originalCommit": {"oid": "f9c3c90c3371d5913b4c0b71b98c32345c5d5b8c"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2654, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}