{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NDA1MjM4", "number": 62984, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOToxMDoyNFrOEotI6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOTozMTowM1rOEot6sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTE4MDU2OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/action/support/AutoCreateIndexTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOToxMDoyNFrOHZ86PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToxMzowOFrOHaYnIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk3NDM5Ng==", "bodyText": "Nitpick: I'd recommend changing the name some something like .test-system-index, just to make it a bit more immediately obvious what's going on rather than using a generic .foo here because this is shared across tests.", "url": "https://github.com/elastic/elasticsearch/pull/62984#discussion_r496974396", "createdAt": "2020-09-29T19:10:24Z", "author": {"login": "gwbrown"}, "path": "server/src/test/java/org/elasticsearch/action/support/AutoCreateIndexTests.java", "diffHunk": "@@ -201,8 +210,9 @@ private static ClusterState buildClusterState(String... indices) {\n     }\n \n     private AutoCreateIndex newAutoCreateIndex(Settings settings) {\n+        SystemIndices systemIndices = new SystemIndices(Map.of(\"plugin\", List.of(new SystemIndexDescriptor(\".foo\", \"\"))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c906cfeade7063c8d115bb800d0377530edd0ee"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQyODI1OA==", "bodyText": "Good call. I'll make it a constant too so that it's easier to find usages.", "url": "https://github.com/elastic/elasticsearch/pull/62984#discussion_r497428258", "createdAt": "2020-09-30T11:13:08Z", "author": {"login": "williamrandolph"}, "path": "server/src/test/java/org/elasticsearch/action/support/AutoCreateIndexTests.java", "diffHunk": "@@ -201,8 +210,9 @@ private static ClusterState buildClusterState(String... indices) {\n     }\n \n     private AutoCreateIndex newAutoCreateIndex(Settings settings) {\n+        SystemIndices systemIndices = new SystemIndices(Map.of(\"plugin\", List.of(new SystemIndexDescriptor(\".foo\", \"\"))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk3NDM5Ng=="}, "originalCommit": {"oid": "7c906cfeade7063c8d115bb800d0377530edd0ee"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTIxMjQ3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOToxNTozNVrOHZ9LnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOToxNTozNVrOHZ9LnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk3ODg0NQ==", "bodyText": "You've already noted in this in the PR description, but this is going to conflict with https://github.com/elastic/elasticsearch/pull/61858/files?file-filters%5B%5D=.java#diff-7c2a294c3d25c427072ee6c64983b560L227 specifically. I think this is the only place they'll meaningfully conflict, though.", "url": "https://github.com/elastic/elasticsearch/pull/62984#discussion_r496978845", "createdAt": "2020-09-29T19:15:35Z", "author": {"login": "gwbrown"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -224,7 +224,9 @@ protected void doInternalExecute(Task task, BulkRequest bulkRequest, String exec\n             return;\n         }\n \n-        if (needToCheck()) {\n+        final boolean includesSystem = includesSystem(bulkRequest, clusterService.state().metadata().getIndicesLookup(), systemIndices);\n+\n+        if (includesSystem || needToCheck()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c906cfeade7063c8d115bb800d0377530edd0ee"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTMwODAwOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/action/support/AutoCreateIndexTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOTozMTowM1rOHZ-A4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDowMTo1MVrOHbL4PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5MjQ4MQ==", "bodyText": "Another good unit test would be a pattern specifically excluding the system index, e.g. action.auto_create_index=*,-.foo. We still want system indices to be auto-created in that case, I think, and it would be good to double check.", "url": "https://github.com/elastic/elasticsearch/pull/62984#discussion_r496992481", "createdAt": "2020-09-29T19:31:03Z", "author": {"login": "gwbrown"}, "path": "server/src/test/java/org/elasticsearch/action/support/AutoCreateIndexTests.java", "diffHunk": "@@ -89,6 +91,12 @@ public void testAutoCreationDisabled() {\n         assertEquals(\"no such index [\" + randomIndex + \"] and [action.auto_create_index] is [false]\", e.getMessage());\n     }\n \n+    public void testSystemIndexWithAutoCreationDisabled() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c906cfeade7063c8d115bb800d0377530edd0ee"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI2ODIyMQ==", "bodyText": "I've added this.", "url": "https://github.com/elastic/elasticsearch/pull/62984#discussion_r498268221", "createdAt": "2020-10-01T14:01:51Z", "author": {"login": "williamrandolph"}, "path": "server/src/test/java/org/elasticsearch/action/support/AutoCreateIndexTests.java", "diffHunk": "@@ -89,6 +91,12 @@ public void testAutoCreationDisabled() {\n         assertEquals(\"no such index [\" + randomIndex + \"] and [action.auto_create_index] is [false]\", e.getMessage());\n     }\n \n+    public void testSystemIndexWithAutoCreationDisabled() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5MjQ4MQ=="}, "originalCommit": {"oid": "7c906cfeade7063c8d115bb800d0377530edd0ee"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3251, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}