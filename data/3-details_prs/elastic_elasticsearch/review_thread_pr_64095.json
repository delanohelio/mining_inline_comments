{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4ODk3NjAw", "number": 64095, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo1NToxMVrOEx_yyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo1NToxMVrOEx_yyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwODYwODc1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/geo/GeoPolygonDecomposer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo1NToxMVrOHoZP9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo1NToxMVrOHoZP9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExODc3Mg==", "bodyText": "Maybe we should add the text of this comment to the exception message?", "url": "https://github.com/elastic/elasticsearch/pull/64095#discussion_r512118772", "createdAt": "2020-10-26T16:55:11Z", "author": {"login": "imotov"}, "path": "server/src/main/java/org/elasticsearch/common/geo/GeoPolygonDecomposer.java", "diffHunk": "@@ -145,17 +144,27 @@ private static int createEdges(int component, boolean orientation, LinearRing sh\n      */\n     private static Edge[] ring(int component, boolean direction, boolean handedness,\n                         Point[] points, int offset, Edge[] edges, int toffset, int length, final AtomicBoolean translated) {\n-\n-        boolean orientation = getOrientation(points, offset, length);\n+        double signedArea = 0;\n+        double minX = Double.POSITIVE_INFINITY;\n+        double maxX = Double.NEGATIVE_INFINITY;\n+        for (int i = offset; i < offset + length; i++) {\n+            signedArea += points[i].getX() * points[i + 1].getY() - points[i].getY() * points[i + 1].getX();\n+            minX = Math.min(minX, points[i].getX());\n+            maxX = Math.max(maxX, points[i].getX());\n+        }\n+        if (signedArea == 0) {\n+            // Points are collinear or self-intersection\n+            throw new InvalidShapeException(\"Cannot determine orientation: signed area equal to 0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59918e70aad1004908587f690688e54fd97f1dfe"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4297, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}