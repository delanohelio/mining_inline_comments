{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0Njc1NTUx", "number": 60006, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNjowNTo1M1rOEQ5uhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNjowNTo1M1rOEQ5uhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTU4NDcxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNjowNTo1M1rOG1T94A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNjowNTo1M1rOG1T94A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU1NDg0OA==", "bodyText": "maybe refomulate this as (listener == null && repositoryData == null) == false?", "url": "https://github.com/elastic/elasticsearch/pull/60006#discussion_r458554848", "createdAt": "2020-07-22T06:05:53Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1422,12 +1422,17 @@ private static ClusterState stateWithoutSnapshot(ClusterState state, Snapshot sn\n      * used when the snapshot fails for some reason. During normal operation the snapshot repository will remove the\n      * {@link SnapshotsInProgress.Entry} from the cluster state once it's done finalizing the snapshot.\n      *\n-     * @param snapshot snapshot that failed\n-     * @param failure  exception that failed the snapshot\n+     * @param snapshot       snapshot that failed\n+     * @param failure        exception that failed the snapshot\n+     * @param repositoryData repository data or {@code null} when cleaning up a BwC snapshot that never fully initialized\n+     * @param listener       listener to invoke when done with, only passed by the BwC path that has {@code repositoryData} set to\n+     *                       {@code null}\n      */\n     private void removeFailedSnapshotFromClusterState(Snapshot snapshot, Exception failure, @Nullable RepositoryData repositoryData,\n                                                       @Nullable CleanupAfterErrorListener listener) {\n         assert failure != null : \"Failure must be supplied\";\n+        assert (listener == null || repositoryData == null) && (repositoryData != null || listener != null) :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c11739d194f97131340826cf9ffacc46aa80e5c"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2196, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}