{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MTMxNzgy", "number": 58381, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzo1NDo1NFrOEJxI-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDowNjozN1rOELMxrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4Njc3NzU1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/IndicesRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzo1NDo1NFrOGqb4eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzo1NDo1NFrOGqb4eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE1MDIwMA==", "bodyText": "Suggestion: I would work on the naming and/or javadoc for this to make it clear that such requests over wildcards are meant to (not) expand to data stream names too.", "url": "https://github.com/elastic/elasticsearch/pull/58381#discussion_r447150200", "createdAt": "2020-06-29T17:54:54Z", "author": {"login": "albertzaharovits"}, "path": "server/src/main/java/org/elasticsearch/action/IndicesRequest.java", "diffHunk": "@@ -40,6 +40,13 @@\n      */\n     IndicesOptions indicesOptions();\n \n+    /**\n+     * Determines whether the action should be applied to data streams\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "233c0431e7125497e72f974554c4d6b1fecc0788"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTk2MTYzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/IndicesAndAliasesResolver.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOToxNToyN1rOGsaMOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOToxNToyN1rOGsaMOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIxOTY0MQ==", "bodyText": "I would make it an IllegalStateException.", "url": "https://github.com/elastic/elasticsearch/pull/58381#discussion_r449219641", "createdAt": "2020-07-02T19:15:27Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/IndicesAndAliasesResolver.java", "diffHunk": "@@ -412,13 +413,17 @@ private boolean containsWildcards(IndicesRequest indicesRequest) {\n         return finalIndices;\n     }\n \n-    private static boolean isIndexVisible(String expression, String index, IndicesOptions indicesOptions, Metadata metadata) {\n-        return isIndexVisible(expression, index, indicesOptions, metadata, false);\n+    private static boolean isIndexVisible(String expression, String index, IndicesOptions indicesOptions, Metadata metadata,\n+                                          boolean includeDataStreams) {\n+        return isIndexVisible(expression, index, indicesOptions, metadata, includeDataStreams, false);\n     }\n \n     private static boolean isIndexVisible(String expression, String index, IndicesOptions indicesOptions, Metadata metadata,\n-                                          boolean dateMathExpression) {\n+                                          boolean includeDataStreams, boolean dateMathExpression) {\n         IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(index);\n+        if (indexAbstraction == null) {\n+            return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "022c7c14dd66072ecb20d58b6a3f78c032e3962c"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDIyNjA1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizedIndicesTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDo1MzoyMVrOGsctEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDo1MzoyMVrOGsctEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2MDgxOQ==", "bodyText": "We need to test that RBACEngine.resolveAuthorizedIndicesFromRole:\n\nreturns the list containing the backing indices if the role grants access to a data stream (granting as part of a wildcard or a simple name)\nindices which are not backing indices are not returned when some data stream is covered by the role permission\ngranting access to backing indices (as a wildcard or simple name) does not include the data stream in the list of authorised names\n\nWe need to repeat the tests for when the request works with data streams or not.", "url": "https://github.com/elastic/elasticsearch/pull/58381#discussion_r449260819", "createdAt": "2020-07-02T20:53:21Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizedIndicesTests.java", "diffHunk": "@@ -35,7 +37,7 @@\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "022c7c14dd66072ecb20d58b6a3f78c032e3962c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDI1MzcyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/IndicesAndAliasesResolverTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTowNDo0N1rOGsc-YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTowNDo0N1rOGsc-YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2NTI0OA==", "bodyText": "no backing indices as well.\nBut regular indices and aliases are visible. Same with backing indices.\n(I would expand the namespace granted to by the role to ensure those entities are OK - i.e. I'm not suggesting another test, just a more complete one).\nBut I would also test a simple (not wildcard) data stream name.", "url": "https://github.com/elastic/elasticsearch/pull/58381#discussion_r449265248", "createdAt": "2020-07-02T21:04:47Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/IndicesAndAliasesResolverTests.java", "diffHunk": "@@ -1551,25 +1554,54 @@ public void testDataStreamResolution() {\n             assertThat(resolvedIndices.getRemote(), emptyIterable());\n         }\n         {\n-            final User user = new User(\"data-steam-tester2\", \"data_stream_test2\");\n-            final List<String> authorizedIndices = buildAuthorizedIndices(user, SearchAction.NAME);\n+            final User user = new User(\"data-stream-tester2\", \"data_stream_test2\");\n \n             // Resolve *all* data streams:\n             SearchRequest searchRequest = new SearchRequest();\n             searchRequest.indices(\"logs-*\");\n             searchRequest.indicesOptions(IndicesOptions.fromOptions(false, false, true, false, false, true, true, true, true));\n+            final List<String> authorizedIndices = buildAuthorizedIndices(user, SearchAction.NAME, searchRequest);\n             ResolvedIndices resolvedIndices = defaultIndicesResolver.resolveIndicesAndAliases(searchRequest, metadata, authorizedIndices);\n             assertThat(resolvedIndices.getLocal(), containsInAnyOrder(\"logs-foo\", \"logs-foobar\"));\n             assertThat(resolvedIndices.getRemote(), emptyIterable());\n         }\n     }\n \n+    public void testDataStreamsAreNotVisibleWhenNotIncludedByRequest() {\n+        final User user = new User(\"data-stream-tester2\", \"data_stream_test2\");\n+        GetAliasesRequest request = new GetAliasesRequest(\"*\");\n+        assertThat(request, instanceOf(IndicesRequest.Replaceable.class));\n+        assertThat(request.includeDataStreams(), is(false));\n+\n+        final List<String> authorizedIndices = buildAuthorizedIndices(user, GetAliasesAction.NAME, request);\n+        ResolvedIndices resolvedIndices = defaultIndicesResolver.resolveIndicesAndAliases(request, metadata, authorizedIndices);\n+        assertThat(resolvedIndices.getLocal(), not(hasItem(\"logs-foo\")));\n+        assertThat(resolvedIndices.getLocal(), not(hasItem(\"logs-foobar\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "022c7c14dd66072ecb20d58b6a3f78c032e3962c"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDI1NDY4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/IndicesAndAliasesResolverTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTowNTowOVrOGsc-9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTowNTowOVrOGsc-9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2NTM5Ng==", "bodyText": "Should include the backing indices as well, right?", "url": "https://github.com/elastic/elasticsearch/pull/58381#discussion_r449265396", "createdAt": "2020-07-02T21:05:09Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/IndicesAndAliasesResolverTests.java", "diffHunk": "@@ -1551,25 +1554,54 @@ public void testDataStreamResolution() {\n             assertThat(resolvedIndices.getRemote(), emptyIterable());\n         }\n         {\n-            final User user = new User(\"data-steam-tester2\", \"data_stream_test2\");\n-            final List<String> authorizedIndices = buildAuthorizedIndices(user, SearchAction.NAME);\n+            final User user = new User(\"data-stream-tester2\", \"data_stream_test2\");\n \n             // Resolve *all* data streams:\n             SearchRequest searchRequest = new SearchRequest();\n             searchRequest.indices(\"logs-*\");\n             searchRequest.indicesOptions(IndicesOptions.fromOptions(false, false, true, false, false, true, true, true, true));\n+            final List<String> authorizedIndices = buildAuthorizedIndices(user, SearchAction.NAME, searchRequest);\n             ResolvedIndices resolvedIndices = defaultIndicesResolver.resolveIndicesAndAliases(searchRequest, metadata, authorizedIndices);\n             assertThat(resolvedIndices.getLocal(), containsInAnyOrder(\"logs-foo\", \"logs-foobar\"));\n             assertThat(resolvedIndices.getRemote(), emptyIterable());\n         }\n     }\n \n+    public void testDataStreamsAreNotVisibleWhenNotIncludedByRequest() {\n+        final User user = new User(\"data-stream-tester2\", \"data_stream_test2\");\n+        GetAliasesRequest request = new GetAliasesRequest(\"*\");\n+        assertThat(request, instanceOf(IndicesRequest.Replaceable.class));\n+        assertThat(request.includeDataStreams(), is(false));\n+\n+        final List<String> authorizedIndices = buildAuthorizedIndices(user, GetAliasesAction.NAME, request);\n+        ResolvedIndices resolvedIndices = defaultIndicesResolver.resolveIndicesAndAliases(request, metadata, authorizedIndices);\n+        assertThat(resolvedIndices.getLocal(), not(hasItem(\"logs-foo\")));\n+        assertThat(resolvedIndices.getLocal(), not(hasItem(\"logs-foobar\")));\n+    }\n+\n+    public void testDataStreamsAreVisibleWhenIncludedByRequest() {\n+        final User user = new User(\"data-stream-tester2\", \"data_stream_test2\");\n+        SearchRequest request = new SearchRequest(\"*\");\n+        assertThat(request, instanceOf(IndicesRequest.Replaceable.class));\n+        assertThat(request.includeDataStreams(), is(true));\n+\n+        final List<String> authorizedIndices = buildAuthorizedIndices(user, SearchAction.NAME, request);\n+        ResolvedIndices resolvedIndices = defaultIndicesResolver.resolveIndicesAndAliases(request, metadata, authorizedIndices);\n+        assertThat(resolvedIndices.getLocal(), hasItem(\"logs-foo\"));\n+        assertThat(resolvedIndices.getLocal(), hasItem(\"logs-foobar\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "022c7c14dd66072ecb20d58b6a3f78c032e3962c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMTc5MTE3OnYy", "diffSide": "RIGHT", "path": ".idea/runConfigurations/Debug_Elasticsearch.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDowNjozN1rOGsrT_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjoyNjoxNlrOGsuxZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUwMDE1Ng==", "bodyText": "@danhermann Is this change intended? Also the one below for AUTO_RESTART?", "url": "https://github.com/elastic/elasticsearch/pull/58381#discussion_r449500156", "createdAt": "2020-07-03T10:06:37Z", "author": {"login": "ywangd"}, "path": ".idea/runConfigurations/Debug_Elasticsearch.xml", "diffHunk": "@@ -1,11 +1,11 @@\n <component name=\"ProjectRunConfigurationManager\">\n   <configuration default=\"false\" name=\"Debug Elasticsearch\" type=\"Remote\">\n     <option name=\"USE_SOCKET_TRANSPORT\" value=\"true\" />\n-    <option name=\"SERVER_MODE\" value=\"true\" />\n+    <option name=\"SERVER_MODE\" value=\"false\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba65c932f003ff01d7398b9f40f559951f33970"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0NDUwMw==", "bodyText": "@ywangd, no I have a PR open to revert it here: #58992", "url": "https://github.com/elastic/elasticsearch/pull/58381#discussion_r449544503", "createdAt": "2020-07-03T11:55:01Z", "author": {"login": "danhermann"}, "path": ".idea/runConfigurations/Debug_Elasticsearch.xml", "diffHunk": "@@ -1,11 +1,11 @@\n <component name=\"ProjectRunConfigurationManager\">\n   <configuration default=\"false\" name=\"Debug Elasticsearch\" type=\"Remote\">\n     <option name=\"USE_SOCKET_TRANSPORT\" value=\"true\" />\n-    <option name=\"SERVER_MODE\" value=\"true\" />\n+    <option name=\"SERVER_MODE\" value=\"false\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUwMDE1Ng=="}, "originalCommit": {"oid": "2ba65c932f003ff01d7398b9f40f559951f33970"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU1NjgzOQ==", "bodyText": "Thanks", "url": "https://github.com/elastic/elasticsearch/pull/58381#discussion_r449556839", "createdAt": "2020-07-03T12:26:16Z", "author": {"login": "ywangd"}, "path": ".idea/runConfigurations/Debug_Elasticsearch.xml", "diffHunk": "@@ -1,11 +1,11 @@\n <component name=\"ProjectRunConfigurationManager\">\n   <configuration default=\"false\" name=\"Debug Elasticsearch\" type=\"Remote\">\n     <option name=\"USE_SOCKET_TRANSPORT\" value=\"true\" />\n-    <option name=\"SERVER_MODE\" value=\"true\" />\n+    <option name=\"SERVER_MODE\" value=\"false\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUwMDE1Ng=="}, "originalCommit": {"oid": "2ba65c932f003ff01d7398b9f40f559951f33970"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1479, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}