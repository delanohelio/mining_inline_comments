{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI5OTAwOTA2", "number": 57785, "title": "Fix Bug With RepositoryData Caching", "bodyText": "This fixes a really subtle bug with caching RepositoryData (introduced in #52341) that can corrupt a repository.\nWe were caching RepositoryData serialized in the newest\nmetadata format. This lead to a confusing situation where\nnumeric shard generations would be cached in ShardGenerations\nthat were not written to the repository because the repository\nor cluster did not yet support ShardGenerations.\nIn the case where shard generations are not actually supported yet,\nthese cached numeric generations are not safe and there's multiple\nscenarios where they would be incorrect, leading to the repository\ntrying to read shard level metadata from index-N that don't exist.\nThis commit makes it so that cached metadata is always in the same\nformat as the metadata in the repository.\nExample broken scenario:\n\nSuccessful snapshot for metadata version 7.5 caches RepositoryData with some numeric shard generations\nAttempt a new snapshot but somehow fail to ever finalize it (IO exception on finalization for example) while data nodes moved the shard generation forward and deleted the old generation (that is now referenced by the cached repository metadata)\n\n-> at this point the shards that were moved to a new generation by the data node are already not writable any more though this can be fixed by re-adding the repository or restarting the master node still at this point.\nThe situation gets worse though:\n\nDelete all snapshots such that the repository moves to the new 7.6+ metadata format. Now, there is a chance that the cached broken shard generations value actually makes it to the repository because the new RepositoryData that is written is based off of the cached version. Corrupting the repository since there is no fail-safe for this in the snapshot delete logic (will open a separate PR to add one).", "createdAt": "2020-06-07T09:23:18Z", "url": "https://github.com/elastic/elasticsearch/pull/57785", "merged": true, "mergeCommit": {"oid": "17fe54d19ac8dd37864baa3d91c6901405f961da"}, "closed": true, "closedAt": "2020-06-08T10:02:10Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABco4UPtgH2gAyNDI5OTAwOTA2OjJmMjJjNWM1MDdkNmEwY2ZmMzY3MmU1OTI3MWQzOTNjNTZkOTJkYTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpNSTUAFqTQyNjA3MTEyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2f22c5c507d6a0cff3672e59271d393c56d92da0", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/2f22c5c507d6a0cff3672e59271d393c56d92da0", "committedDate": "2020-06-07T09:19:51Z", "message": "Fix Bug With RepositoryData Caching\n\nThis fixes a really subtle bug with caching `RepositoryData`\nthat can corrupt a repository.\nWe were caching `RepositoryData` serialized in the newest\nmetadata format. This lead to a confusing situation where\nnumeric shard generations would be cached in `ShardGenerations`\nthat were not written to the repository because the repository\nor cluster did not yet support `ShardGenerations`.\nIn the case where shard generations are not actually supported yet,\nthese cached numeric generations are not safe and there's multiple\nscenarios where they would be incorrect, leading to the repository\ntrying to read shard level metadata from index-N that don't exist.\nThis commit makes it so that cached metadata is always in the same\nformat as the metadata in the repository."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODA1NDQ2", "url": "https://github.com/elastic/elasticsearch/pull/57785#pullrequestreview-425805446", "createdAt": "2020-06-07T10:07:25Z", "commit": {"oid": "2f22c5c507d6a0cff3672e59271d393c56d92da0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxMDowNzoyNVrOGgIe-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxMDowNzoyNVrOGgIe-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM0NjYxOQ==", "bodyText": "There is an obvious and much cleaner fix here by simply caching the compressed form of the already serialized RepositoryData when writing/reading instead of re-serializing that would also improve efficiency. I just went with this approach now to have the smallest possible fix for a safe back-port.", "url": "https://github.com/elastic/elasticsearch/pull/57785#discussion_r436346619", "createdAt": "2020-06-07T10:07:25Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1295,15 +1297,16 @@ private void doGetRepositoryData(ActionListener<RepositoryData> listener) {\n      * generation will always contain the same {@link RepositoryData}.\n      *\n      * @param updated RepositoryData to cache if newer than the cache contents\n+     * @param version version of the repository metadata that was cached\n      */\n-    private void cacheRepositoryData(RepositoryData updated) {\n+    private void cacheRepositoryData(RepositoryData updated, Version version) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f22c5c507d6a0cff3672e59271d393c56d92da0"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1OTYyMzA1", "url": "https://github.com/elastic/elasticsearch/pull/57785#pullrequestreview-425962305", "createdAt": "2020-06-08T07:08:02Z", "commit": {"oid": "2f22c5c507d6a0cff3672e59271d393c56d92da0"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96e30e92e2a1fb9ece7e0e702875fef5c710f03f", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/96e30e92e2a1fb9ece7e0e702875fef5c710f03f", "committedDate": "2020-06-08T07:37:46Z", "message": "Merge remote-tracking branch 'elastic/master' into fix-broken-repo-data-cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2292885b02ec38f2ed6ac7b3a2337796cfb7c4b", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/f2292885b02ec38f2ed6ac7b3a2337796cfb7c4b", "committedDate": "2020-06-08T08:32:11Z", "message": "CR: add test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MDcxMTI0", "url": "https://github.com/elastic/elasticsearch/pull/57785#pullrequestreview-426071124", "createdAt": "2020-06-08T09:45:44Z", "commit": {"oid": "f2292885b02ec38f2ed6ac7b3a2337796cfb7c4b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3797, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}