{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3MTgyMTU2", "number": 66206, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowOTowMFrOFFF0SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowOTowOVrOFFF0gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODgyNTA1OnYy", "diffSide": "RIGHT", "path": "server/src/internalClusterTest/java/org/elasticsearch/action/search/TransportSearchIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowOTowMFrOIFa3Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoyNjoxNlrOIFbpzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1MzkzNQ==", "bodyText": "parentTaskId ?", "url": "https://github.com/elastic/elasticsearch/pull/66206#discussion_r542553935", "createdAt": "2020-12-14T17:09:00Z", "author": {"login": "jimczi"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/action/search/TransportSearchIT.java", "diffHunk": "@@ -159,6 +161,7 @@ public void testLocalClusterAlias() {\n     }\n \n     public void testAbsoluteStartMillis() {\n+        TaskId takeId = new TaskId(\"node\", randomNonNegativeLong());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4df4dac1359e73fec37c5f6f5af894d047f432f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU2Njg2Mw==", "bodyText": "Addressed in 646aeab", "url": "https://github.com/elastic/elasticsearch/pull/66206#discussion_r542566863", "createdAt": "2020-12-14T17:26:16Z", "author": {"login": "dnhatn"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/action/search/TransportSearchIT.java", "diffHunk": "@@ -159,6 +161,7 @@ public void testLocalClusterAlias() {\n     }\n \n     public void testAbsoluteStartMillis() {\n+        TaskId takeId = new TaskId(\"node\", randomNonNegativeLong());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1MzkzNQ=="}, "originalCommit": {"oid": "d4df4dac1359e73fec37c5f6f5af894d047f432f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODgyNTYzOnYy", "diffSide": "RIGHT", "path": "server/src/internalClusterTest/java/org/elasticsearch/action/search/TransportSearchIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowOTowOVrOIFa3rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoyNjoyM1rOIFbqJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1NDAzMQ==", "bodyText": "parentTaskId ?", "url": "https://github.com/elastic/elasticsearch/pull/66206#discussion_r542554031", "createdAt": "2020-12-14T17:09:09Z", "author": {"login": "jimczi"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/action/search/TransportSearchIT.java", "diffHunk": "@@ -131,9 +132,10 @@ public void testLocalClusterAlias() {\n         indexRequest.setRefreshPolicy(WriteRequest.RefreshPolicy.WAIT_UNTIL);\n         IndexResponse indexResponse = client().index(indexRequest).actionGet();\n         assertEquals(RestStatus.CREATED, indexResponse.status());\n+        TaskId taskId = new TaskId(\"node\", randomNonNegativeLong());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4df4dac1359e73fec37c5f6f5af894d047f432f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU2Njk0OA==", "bodyText": "Addressed in 646aeab", "url": "https://github.com/elastic/elasticsearch/pull/66206#discussion_r542566948", "createdAt": "2020-12-14T17:26:23Z", "author": {"login": "dnhatn"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/action/search/TransportSearchIT.java", "diffHunk": "@@ -131,9 +132,10 @@ public void testLocalClusterAlias() {\n         indexRequest.setRefreshPolicy(WriteRequest.RefreshPolicy.WAIT_UNTIL);\n         IndexResponse indexResponse = client().index(indexRequest).actionGet();\n         assertEquals(RestStatus.CREATED, indexResponse.status());\n+        TaskId taskId = new TaskId(\"node\", randomNonNegativeLong());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1NDAzMQ=="}, "originalCommit": {"oid": "d4df4dac1359e73fec37c5f6f5af894d047f432f"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4649, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}