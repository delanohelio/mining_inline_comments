{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NjQyODk5", "number": 66268, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNTo0NVrOFFFuMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoyOTowNVrOFFGavw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODgwOTQ0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNTo0NVrOIFatYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNTo0NVrOIFatYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1MTM5Mw==", "bodyText": "Filtering only works on bool hence why I recommend renaming it to checkFilterConditionType", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542551393", "createdAt": "2020-12-14T17:05:45Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -626,6 +628,15 @@ private static boolean checkGroupMatch(Expression e, Node<?> source, List<Expres\n         return false;\n     }\n \n+    private static void checkBooleanFiltering(LogicalPlan p, Set<Failure> localFailures) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e91fd4b80d5be5c2ce665836b985ae1b35846c4d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODgxMzAwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNjozMVrOIFavfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOToyNzowNlrOIFil6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1MTkzNA==", "bodyText": "No need to check if the condition is resolved, this has already been checked before - these checks get applied only if the plan is fully resolved.", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542551934", "createdAt": "2020-12-14T17:06:31Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -626,6 +628,15 @@ private static boolean checkGroupMatch(Expression e, Node<?> source, List<Expres\n         return false;\n     }\n \n+    private static void checkBooleanFiltering(LogicalPlan p, Set<Failure> localFailures) {\n+        if (p instanceof Filter) {\n+            Expression condition = ((Filter) p).condition();\n+            if (condition.resolved() && condition.dataType() != BOOLEAN) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e91fd4b80d5be5c2ce665836b985ae1b35846c4d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4MDU1NA==", "bodyText": "Right, this follows after checking against unresolved nodes (and even a comment about it!). Thanks, fixed.", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542680554", "createdAt": "2020-12-14T19:27:06Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -626,6 +628,15 @@ private static boolean checkGroupMatch(Expression e, Node<?> source, List<Expres\n         return false;\n     }\n \n+    private static void checkBooleanFiltering(LogicalPlan p, Set<Failure> localFailures) {\n+        if (p instanceof Filter) {\n+            Expression condition = ((Filter) p).condition();\n+            if (condition.resolved() && condition.dataType() != BOOLEAN) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1MTkzNA=="}, "originalCommit": {"oid": "e91fd4b80d5be5c2ce665836b985ae1b35846c4d"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODgyNTU3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowOTowOFrOIFa3pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOToyNzoxMlrOIFimXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1NDAyMg==", "bodyText": "Maybe Condition expression needs to be boolean, found [{}]. Remove the notion of filter which is not something the user declares.", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542554022", "createdAt": "2020-12-14T17:09:08Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -626,6 +628,15 @@ private static boolean checkGroupMatch(Expression e, Node<?> source, List<Expres\n         return false;\n     }\n \n+    private static void checkBooleanFiltering(LogicalPlan p, Set<Failure> localFailures) {\n+        if (p instanceof Filter) {\n+            Expression condition = ((Filter) p).condition();\n+            if (condition.resolved() && condition.dataType() != BOOLEAN) {\n+                localFailures.add(fail(condition, \"Cannot filter by non-boolean expression of type [{}]\", condition.dataType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e91fd4b80d5be5c2ce665836b985ae1b35846c4d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4MDY3MQ==", "bodyText": "Changed.", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542680671", "createdAt": "2020-12-14T19:27:12Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -626,6 +628,15 @@ private static boolean checkGroupMatch(Expression e, Node<?> source, List<Expres\n         return false;\n     }\n \n+    private static void checkBooleanFiltering(LogicalPlan p, Set<Failure> localFailures) {\n+        if (p instanceof Filter) {\n+            Expression condition = ((Filter) p).condition();\n+            if (condition.resolved() && condition.dataType() != BOOLEAN) {\n+                localFailures.add(fail(condition, \"Cannot filter by non-boolean expression of type [{}]\", condition.dataType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1NDAyMg=="}, "originalCommit": {"oid": "e91fd4b80d5be5c2ce665836b985ae1b35846c4d"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODkyMzUxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/qa/server/src/main/resources/conditionals.csv-spec", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoyOTowNVrOIFbyYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOTozMTowMlrOIFi4eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU2OTA1OQ==", "bodyText": "\ud83d\udc4d  for this test case.\nWhat about covering the simplest case (WHERE boolField) specifically too? The reason: the test case above gets translated into a script query, while the WHERE boolField into a terms query, and while there are plenty of test cases that test the script query, I don't think we have any that tests querying a bool field directly. Note: This would require adding a new field to the test dataset with bool type though.", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542569059", "createdAt": "2020-12-14T17:29:05Z", "author": {"login": "palesz"}, "path": "x-pack/plugin/sql/qa/server/src/main/resources/conditionals.csv-spec", "diffHunk": "@@ -326,6 +326,23 @@ Pettey\n Heyers\n ;\n \n+iifConditionWhere\n+SELECT last_name FROM test_emp WHERE IIF(LENGTH(last_name) < 7, true, false) LIMIT 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e91fd4b80d5be5c2ce665836b985ae1b35846c4d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4NTMwNg==", "bodyText": "Yeh, I think it might make sense to add data for a new test index, with more types (like floats like bools) or extend one of the current ones. But not sure if part of this small PR. I'll open an issue to track it.", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542685306", "createdAt": "2020-12-14T19:31:02Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/qa/server/src/main/resources/conditionals.csv-spec", "diffHunk": "@@ -326,6 +326,23 @@ Pettey\n Heyers\n ;\n \n+iifConditionWhere\n+SELECT last_name FROM test_emp WHERE IIF(LENGTH(last_name) < 7, true, false) LIMIT 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU2OTA1OQ=="}, "originalCommit": {"oid": "e91fd4b80d5be5c2ce665836b985ae1b35846c4d"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4670, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}