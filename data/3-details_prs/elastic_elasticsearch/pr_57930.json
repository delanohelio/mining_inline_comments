{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNDE5MDgx", "number": 57930, "title": "[ML] adding new inference model size estimate handling from native process", "bodyText": "Adds support for reading in model_size_info objects.\nThese objects contain numeric values indicating the model definition size and complexity.\nAdditionally, these objects are not stored or serialized to any other node. They are to be used for calculating and storing model metadata. They are much smaller on heap than the true model definition and should help prevent the analytics process from using too much memory.", "createdAt": "2020-06-10T12:23:38Z", "url": "https://github.com/elastic/elasticsearch/pull/57930", "merged": true, "mergeCommit": {"oid": "ef66191feb99f9815a8c349e0d94e1d85befaa7c"}, "closed": true, "closedAt": "2020-06-11T16:58:02Z", "author": {"login": "benwtrent"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp4t60gH2gAyNDMyNDE5MDgxOmMzOGZiNTJlYzZlNzhkMzI3NTIwNTZmZDJjMzgxOTRmNWE1ZGFjYTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqQqQKAFqTQyOTA3NDQwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c38fb52ec6e78d32752056fd2c38194f5a5daca7", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/c38fb52ec6e78d32752056fd2c38194f5a5daca7", "committedDate": "2020-06-10T12:21:49Z", "message": "[ML] adding new inference model size estimate handling from native process"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjgxOTYx", "url": "https://github.com/elastic/elasticsearch/pull/57930#pullrequestreview-428681961", "createdAt": "2020-06-11T08:04:39Z", "commit": {"oid": "c38fb52ec6e78d32752056fd2c38194f5a5daca7"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODowNDozOVrOGiSyyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoxNzowNlrOGiakzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMjY4Mg==", "bodyText": "This has changed from shallowSizeOf to normal sizeOf. Could you explain?", "url": "https://github.com/elastic/elasticsearch/pull/57930#discussion_r438612682", "createdAt": "2020-06-11T08:04:39Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/inference/TreeInferenceModel.java", "diffHunk": "@@ -302,18 +303,16 @@ public void rewriteFeatureIndices(Map<String, Integer> newFeatureIndexMapping) {\n             treeNode.splitFeature = newSplitFeatureIndex;\n         }\n         this.featureNames = new String[0];\n+        // Since we are not top level, we no longer need local classification labels\n+        this.classificationLabels = null;\n     }\n \n     @Override\n     public long ramBytesUsed() {\n         long size = SHALLOW_SIZE;\n-        size += RamUsageEstimator.sizeOfCollection(classificationLabels);\n-        size += RamUsageEstimator.sizeOf(featureNames);\n-        size += RamUsageEstimator.shallowSizeOf(nodes);\n-        for (Node node : nodes) {\n-            size += node.ramBytesUsed();\n-        }\n-        size += RamUsageEstimator.sizeOfCollection(Arrays.asList(nodes));\n+        size += sizeOfCollection(classificationLabels);\n+        size += sizeOf(featureNames);\n+        size += sizeOf(nodes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c38fb52ec6e78d32752056fd2c38194f5a5daca7"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczOTI2NA==", "bodyText": "nit: no need for qualifying with this", "url": "https://github.com/elastic/elasticsearch/pull/57930#discussion_r438739264", "createdAt": "2020-06-11T12:15:15Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/modelsize/ModelSize.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.ml.inference.modelsize;\n+\n+import org.apache.lucene.util.Accountable;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.xpack.core.ml.inference.trainedmodel.inference.InferenceDefinition;\n+import org.elasticsearch.xpack.core.ml.utils.NamedXContentObjectHelper;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.apache.lucene.util.RamUsageEstimator.alignObjectSize;\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.constructorArg;\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.optionalConstructorArg;\n+\n+public class ModelSize implements Accountable, ToXContentObject {\n+\n+    private static final ParseField PREPROCESSORS = new ParseField(\"preprocessors\");\n+    private static final ParseField TRAINED_MODEL_SIZE = new ParseField(\"trained_model_size\");\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public static ConstructingObjectParser<ModelSize, Void> PARSER = new ConstructingObjectParser<>(\n+        \"model_size\",\n+        false,\n+        a -> new ModelSize((EnsembleSize)a[0], (List<PreprocessorSize>)a[1])\n+    );\n+    static {\n+        PARSER.declareNamedObject(constructorArg(),\n+            (p, c, n) -> p.namedObject(TrainedModelSize.class, n, null),\n+            TRAINED_MODEL_SIZE);\n+        PARSER.declareNamedObjects(optionalConstructorArg(),\n+            (p, c, n) -> p.namedObject(PreprocessorSize.class, n, null),\n+            (val) -> {},\n+            PREPROCESSORS);\n+    }\n+\n+    private final EnsembleSize ensembleSize;\n+    private final List<PreprocessorSize> preprocessorSizes;\n+\n+    public ModelSize(EnsembleSize ensembleSize, List<PreprocessorSize> preprocessorSizes) {\n+        this.ensembleSize = ensembleSize;\n+        this.preprocessorSizes = preprocessorSizes == null ? Collections.emptyList() : preprocessorSizes;\n+    }\n+\n+    public int numOperations() {\n+        return this.preprocessorSizes.size() + this.ensembleSize.getNumOperations();\n+    }\n+\n+    @Override\n+    public long ramBytesUsed() {\n+        long size = InferenceDefinition.SHALLOW_SIZE;\n+        size += ensembleSize.ramBytesUsed();\n+        size += this.preprocessorSizes.stream().mapToLong(PreprocessorSize::ramBytesUsed).sum();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c38fb52ec6e78d32752056fd2c38194f5a5daca7"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0MDE3NQ==", "bodyText": "I wonder if there's a good way to avoid the discrepancy: ModelSize VS. model_size_info. Could the java side by ModelSizeInfo? Or do we rather change the c++ to model_size?", "url": "https://github.com/elastic/elasticsearch/pull/57930#discussion_r438740175", "createdAt": "2020-06-11T12:17:06Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/results/AnalyticsResult.java", "diffHunk": "@@ -56,6 +59,7 @@\n         PARSER.declareObject(optionalConstructorArg(), OutlierDetectionStats.STRICT_PARSER, OUTLIER_DETECTION_STATS);\n         PARSER.declareObject(optionalConstructorArg(), ClassificationStats.STRICT_PARSER, CLASSIFICATION_STATS);\n         PARSER.declareObject(optionalConstructorArg(), RegressionStats.STRICT_PARSER, REGRESSION_STATS);\n+        PARSER.declareObject(optionalConstructorArg(), ModelSize.PARSER, MODEL_SIZE_INFO);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c38fb52ec6e78d32752056fd2c38194f5a5daca7"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c0a7c7830d2e270904560178340aee29adcdcb7", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/9c0a7c7830d2e270904560178340aee29adcdcb7", "committedDate": "2020-06-11T13:30:35Z", "message": "addressing pr comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56835128f1a004dbd3ddc7e885116d1a67570f24", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/56835128f1a004dbd3ddc7e885116d1a67570f24", "committedDate": "2020-06-11T14:45:13Z", "message": "more renaming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDQ1NTY5", "url": "https://github.com/elastic/elasticsearch/pull/57930#pullrequestreview-429045569", "createdAt": "2020-06-11T15:43:03Z", "commit": {"oid": "56835128f1a004dbd3ddc7e885116d1a67570f24"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0MzowM1rOGijY3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0MzowM1rOGijY3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDU3NQ==", "bodyText": "Too much information! :-)", "url": "https://github.com/elastic/elasticsearch/pull/57930#discussion_r438884575", "createdAt": "2020-06-11T15:43:03Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/modelsize/EnsembleSizeInfoInfo.java", "diffHunk": "@@ -25,7 +25,7 @@\n import static org.elasticsearch.xpack.ml.inference.modelsize.SizeEstimatorHelper.sizeOfDoubleArray;\n import static org.elasticsearch.xpack.ml.inference.modelsize.SizeEstimatorHelper.sizeOfStringCollection;\n \n-public class EnsembleSize implements TrainedModelSize {\n+public class EnsembleSizeInfoInfo implements TrainedModelSizeInfo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56835128f1a004dbd3ddc7e885116d1a67570f24"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1a56077fddad4824ad9f7c37d4cdb99547c0849", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/c1a56077fddad4824ad9f7c37d4cdb99547c0849", "committedDate": "2020-06-11T16:14:06Z", "message": "fixing name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDc0NDAw", "url": "https://github.com/elastic/elasticsearch/pull/57930#pullrequestreview-429074400", "createdAt": "2020-06-11T16:15:32Z", "commit": {"oid": "c1a56077fddad4824ad9f7c37d4cdb99547c0849"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 739, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}