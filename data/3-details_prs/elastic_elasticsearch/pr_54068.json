{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyOTE1NjQx", "number": 54068, "title": "[Transform] Transform optmize date histogram", "bodyText": "optimize transform for group_by on date_histogram by injecting an additional range query. This limits the number of search and index requests and avoids unnecessary updates. Only recent buckets get re-written.\nfixes #54254", "createdAt": "2020-03-24T10:49:53Z", "url": "https://github.com/elastic/elasticsearch/pull/54068", "merged": true, "mergeCommit": {"oid": "69fe13c9dc93175a9e5273335105f65c567edad8"}, "closed": true, "closedAt": "2020-03-26T20:38:18Z", "author": {"login": "hendrikmuhs"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQx3_3gFqTM4MDIwMjAyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRcVa6AH2gAyMzkyOTE1NjQxOmEzNTk1ZTZjMDE1NTE0M2ExZGNkM2NlY2ExNGMwYTA1NGUyODBhMzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMjAyMDI1", "url": "https://github.com/elastic/elasticsearch/pull/54068#pullrequestreview-380202025", "createdAt": "2020-03-24T11:02:44Z", "commit": {"oid": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMTowMjo0NFrOF6rF9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjoxMjoxOFrOF6tZew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA2Nzc2NQ==", "bodyText": "Suggested change", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397067765", "createdAt": "2020-03-24T11:02:44Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -315,9 +345,13 @@ public int hashCode() {\n     }\n \n     @Override\n-    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets) {\n-        // no need for an extra range filter as this is already done by checkpoints\n-        return null;\n+    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets, long synchronizationTimestamp) {\n+        if (synchronizationTimestamp > 0) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4NzE5Ng==", "bodyText": "Do we know if this rounding will always round down? I think we will want it to always round down. If it does not, then it might be prudent to do synchronizationTimestamp - interval.getMilliseconds() in the rounding.", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397087196", "createdAt": "2020-03-24T11:38:12Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -315,9 +345,13 @@ public int hashCode() {\n     }\n \n     @Override\n-    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets) {\n-        // no need for an extra range filter as this is already done by checkpoints\n-        return null;\n+    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets, long synchronizationTimestamp) {\n+        if (synchronizationTimestamp > 0) {\n+\n+            return new RangeQueryBuilder(field).gte(rounding.round(synchronizationTimestamp)).format(\"epoch_millis\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4OTA5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final Rounding.Builder roundingBuilder;\n          \n          \n            \n                    if (timeUnit != null) {\n          \n          \n            \n                        roundingBuilder = new Rounding.Builder(timeUnit);\n          \n          \n            \n            \n          \n          \n            \n                    } else {\n          \n          \n            \n                        roundingBuilder = new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), \"createRounding\"));\n          \n          \n            \n                    }\n          \n          \n            \n                    final Rounding.Builder roundingBuilder = timeUnit != null ? new Rounding.Builder(timeUnit) : new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), \"createRounding\"));", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397089091", "createdAt": "2020-03-24T11:41:52Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -195,11 +208,27 @@ private void writeInterval(Interval interval, StreamOutput out) throws IOExcepti\n     private static final ConstructingObjectParser<DateHistogramGroupSource, Void> LENIENT_PARSER = createParser(true);\n \n     private final Interval interval;\n-    private ZoneId timeZone;\n+    private final ZoneId timeZone;\n+    private Rounding rounding;\n \n-    public DateHistogramGroupSource(String field, ScriptConfig scriptConfig, Interval interval) {\n+    public DateHistogramGroupSource(String field, ScriptConfig scriptConfig, Interval interval, ZoneId timeZone) {\n         super(field, scriptConfig);\n         this.interval = interval;\n+        this.timeZone = timeZone;\n+\n+        Rounding.DateTimeUnit timeUnit = DateHistogramAggregationBuilder.DATE_FIELD_UNITS.get(interval.toString());\n+        final Rounding.Builder roundingBuilder;\n+        if (timeUnit != null) {\n+            roundingBuilder = new Rounding.Builder(timeUnit);\n+\n+        } else {\n+            roundingBuilder = new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), \"createRounding\"));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEwNTUzMQ==", "bodyText": "It seems we are needlessly adding an if branch. I think we should probably just supply both the synchronizationField and the lastSynchronizationCheckpoint to getIncrementalBucketUpdateFilterQuery.\n(similar comment for the more than one group source entry)", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397105531", "createdAt": "2020-03-24T12:12:18Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java", "diffHunk": "@@ -189,44 +189,37 @@ public boolean supportsIncrementalBucketUpdate() {\n         );\n     }\n \n-    public QueryBuilder filterBuckets(Map<String, Set<String>> changedBuckets) {\n-\n-        if (changedBuckets == null || changedBuckets.isEmpty()) {\n-            return null;\n-        }\n+    public QueryBuilder filterBuckets(\n+        Map<String, Set<String>> changedBuckets,\n+        String synchronizationField,\n+        long lastSynchronizationCheckpoint\n+    ) {\n \n         if (config.getGroupConfig().getGroups().size() == 1) {\n             Entry<String, SingleGroupSource> entry = config.getGroupConfig().getGroups().entrySet().iterator().next();\n-            // it should not be possible to get into this code path\n-            assert (entry.getValue().supportsIncrementalBucketUpdate());\n \n             logger.trace(\"filter by bucket: \" + entry.getKey() + \"/\" + entry.getValue().getField());\n-            if (changedBuckets.containsKey(entry.getKey())) {\n-                return entry.getValue().getIncrementalBucketUpdateFilterQuery(changedBuckets.get(entry.getKey()));\n-            } else {\n-                // should never happen\n-                throw new RuntimeException(\"Could not find bucket value for key \" + entry.getKey());\n-            }\n+            Set<String> changedBucketsByGroup = changedBuckets.get(entry.getKey());\n+\n+            // important: the fields must match to apply this optimization\n+            long synchronizationTimestamp = entry.getKey().equals(synchronizationField) ? lastSynchronizationCheckpoint : 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09085df31ff5332679b64cb4a3e7c02a6780d3da", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/09085df31ff5332679b64cb4a3e7c02a6780d3da", "committedDate": "2020-03-24T21:02:24Z", "message": "move synchronizationField into group source"}, "afterCommit": {"oid": "9c2ed35927896e97d43c20c5b45802b21aa71b88", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/9c2ed35927896e97d43c20c5b45802b21aa71b88", "committedDate": "2020-03-24T21:26:33Z", "message": "move synchronizationField into group source"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9690e8098f3a92af61840b0dfd2e219e812fe72e", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/9690e8098f3a92af61840b0dfd2e219e812fe72e", "committedDate": "2020-03-26T08:22:56Z", "message": "make date histogram group source immutable by moving timezone into the constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99fca93ab41b5e89baee244495b97c8e0619f56e", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/99fca93ab41b5e89baee244495b97c8e0619f56e", "committedDate": "2020-03-26T08:22:56Z", "message": "optimize date_histogram continuous transforms by limiting updates to\nrecent buckets according to sync configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7ebaf50d6d5f104090bc3a0e1a4a6e07cd56b38", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/d7ebaf50d6d5f104090bc3a0e1a4a6e07cd56b38", "committedDate": "2020-03-26T08:22:56Z", "message": "remove dead code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5eddcdea8a7d82ac41ecb156b467d44a014fada0", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/5eddcdea8a7d82ac41ecb156b467d44a014fada0", "committedDate": "2020-03-26T08:22:56Z", "message": "move synchronizationField into group source"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e10111b724490c3d3f7391a5ac8b895f50eaf294", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/e10111b724490c3d3f7391a5ac8b895f50eaf294", "committedDate": "2020-03-26T08:22:56Z", "message": "add some more date histogram rounding test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80d94133ed508acde7634f710f0a03b38f4e168d", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/80d94133ed508acde7634f710f0a03b38f4e168d", "committedDate": "2020-03-26T08:22:56Z", "message": "revert methode rename"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dbfd27cf9620b8bfc7565a57a11c4a8c66534361", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/dbfd27cf9620b8bfc7565a57a11c4a8c66534361", "committedDate": "2020-03-26T08:07:20Z", "message": "add some more date histogram rounding test cases"}, "afterCommit": {"oid": "80d94133ed508acde7634f710f0a03b38f4e168d", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/80d94133ed508acde7634f710f0a03b38f4e168d", "committedDate": "2020-03-26T08:22:56Z", "message": "revert methode rename"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTI1NTkw", "url": "https://github.com/elastic/elasticsearch/pull/54068#pullrequestreview-381925590", "createdAt": "2020-03-26T11:38:48Z", "commit": {"oid": "80d94133ed508acde7634f710f0a03b38f4e168d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTozODo0OFrOF8C2wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo0NTowNlrOF8DDrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUwNTY2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (synchronizationField != null && field != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {\n          \n          \n            \n                    if (synchronizationField != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r398505665", "createdAt": "2020-03-26T11:38:48Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -315,9 +344,16 @@ public int hashCode() {\n     }\n \n     @Override\n-    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets) {\n-        // no need for an extra range filter as this is already done by checkpoints\n-        return null;\n+    public QueryBuilder getIncrementalBucketUpdateFilterQuery(\n+        Set<String> changedBuckets,\n+        String synchronizationField,\n+        long synchronizationTimestamp\n+    ) {\n+        if (synchronizationField != null && field != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80d94133ed508acde7634f710f0a03b38f4e168d"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUwODk3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.trace(\"filter by bucket: \" + entry.getKey() + \"/\" + entry.getValue().getField());\n          \n          \n            \n                        logger.trace(() -> new ParameterizedMessage(\"filter by bucket: {}/{}\", entry.getKey(), entry.getValue().getField()));\n          \n      \n    \n    \n  \n\nnit", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r398508973", "createdAt": "2020-03-26T11:45:06Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java", "diffHunk": "@@ -189,44 +188,31 @@ public boolean supportsIncrementalBucketUpdate() {\n         );\n     }\n \n-    public QueryBuilder filterBuckets(Map<String, Set<String>> changedBuckets) {\n-\n-        if (changedBuckets == null || changedBuckets.isEmpty()) {\n-            return null;\n-        }\n+    public QueryBuilder filterBuckets(\n+        Map<String, Set<String>> changedBuckets,\n+        String synchronizationField,\n+        long lastSynchronizationCheckpoint\n+    ) {\n+        assert changedBuckets != null;\n \n         if (config.getGroupConfig().getGroups().size() == 1) {\n             Entry<String, SingleGroupSource> entry = config.getGroupConfig().getGroups().entrySet().iterator().next();\n-            // it should not be possible to get into this code path\n-            assert (entry.getValue().supportsIncrementalBucketUpdate());\n-\n             logger.trace(\"filter by bucket: \" + entry.getKey() + \"/\" + entry.getValue().getField());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80d94133ed508acde7634f710f0a03b38f4e168d"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4389bf1a6d09ac5fb5d3bb3a61b33fbe52d5f74", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/e4389bf1a6d09ac5fb5d3bb3a61b33fbe52d5f74", "committedDate": "2020-03-26T13:11:44Z", "message": "Update x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java\n\nCo-Authored-By: Benjamin Trent <ben.w.trent@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7cd216a0982afe3fa9cb0dd07343506b625ef9a", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/f7cd216a0982afe3fa9cb0dd07343506b625ef9a", "committedDate": "2020-03-26T13:11:57Z", "message": "Update x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\n\nCo-Authored-By: Benjamin Trent <ben.w.trent@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3595e6c0155143a1dcd3ceca14c0a054e280a33", "author": {"user": {"login": "hendrikmuhs", "name": "Hendrik Muhs"}}, "url": "https://github.com/elastic/elasticsearch/commit/a3595e6c0155143a1dcd3ceca14c0a054e280a33", "committedDate": "2020-03-26T13:43:32Z", "message": "fix import"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1672, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}