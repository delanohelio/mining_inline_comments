{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMjcxNTA1", "number": 65776, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjozMjowNlrOE_1meA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjo0MDozMFrOFAON5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzczOTQ0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjozMjowNlrOH9w5WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjozMjowNlrOH9w5WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyNjI5Nw==", "bodyText": "maybe use the same exception type as termQuery?", "url": "https://github.com/elastic/elasticsearch/pull/65776#discussion_r534526297", "createdAt": "2020-12-02T22:32:06Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java", "diffHunk": "@@ -55,12 +52,12 @@ public String typeName() {\n \n         @Override\n         public String familyTypeName() {\n-            return NumberFieldMapper.NumberType.LONG.typeName();\n+            return NumberFieldMapper.NumberType.INTEGER.typeName();\n         }\n \n         @Override\n         public Query existsQuery(QueryShardContext context) {\n-            return new DocValuesFieldExistsQuery(NAME);\n+            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] does not support exists queries\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c42ab9bd000b5ae3ec3d94ae94ed8dadd253e05"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Mzc0NTQ2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/DocCountProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjozMzo0OFrOH9w9Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoyNjozMVrOH9yclQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyNzI1MA==", "bodyText": "should it be DEFAULT_VALUE since it is a constant?", "url": "https://github.com/elastic/elasticsearch/pull/65776#discussion_r534527250", "createdAt": "2020-12-02T22:33:48Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/DocCountProvider.java", "diffHunk": "@@ -33,17 +33,25 @@\n  */\n public class DocCountProvider {\n \n-    private NumericDocValues docCountValues;\n+    public static final int defaultValue = DocCountFieldMapper.DocCountFieldType.defaultValue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c42ab9bd000b5ae3ec3d94ae94ed8dadd253e05"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MTcwMQ==", "bodyText": "Originally, I had it DEFAULT_VALUE, but then changed it so that is inline with DocCountFieldMapper.DocCountFieldType.defaultValue which is also a constant.\nChanging it for both fields", "url": "https://github.com/elastic/elasticsearch/pull/65776#discussion_r534551701", "createdAt": "2020-12-02T23:26:31Z", "author": {"login": "csoulios"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/DocCountProvider.java", "diffHunk": "@@ -33,17 +33,25 @@\n  */\n public class DocCountProvider {\n \n-    private NumericDocValues docCountValues;\n+    public static final int defaultValue = DocCountFieldMapper.DocCountFieldType.defaultValue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyNzI1MA=="}, "originalCommit": {"oid": "9c42ab9bd000b5ae3ec3d94ae94ed8dadd253e05"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Nzc0OTAzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/CustomTermFreqField.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjozNDo1MFrOH-ZfIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjozNDo1MFrOH-ZfIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE5MTMyOQ==", "bodyText": "nit: I'd rather drop this constructor and require callers of this class to think about what is the right field name and term they should use", "url": "https://github.com/elastic/elasticsearch/pull/65776#discussion_r535191329", "createdAt": "2020-12-03T12:34:50Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/CustomTermFreqField.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.mapper;\n+\n+import org.apache.lucene.analysis.Analyzer;\n+import org.apache.lucene.analysis.TokenStream;\n+import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;\n+import org.apache.lucene.analysis.tokenattributes.TermFrequencyAttribute;\n+import org.apache.lucene.document.Field;\n+import org.apache.lucene.document.FieldType;\n+import org.apache.lucene.index.IndexOptions;\n+\n+/**\n+ * Custom field that allow storing an integer value as a term frequency in lucene.\n+ */\n+public final class CustomTermFreqField extends Field {\n+\n+  private static final FieldType FIELD_TYPE = new FieldType();\n+  static {\n+    FIELD_TYPE.setTokenized(false);\n+    FIELD_TYPE.setOmitNorms(true);\n+    FIELD_TYPE.setIndexOptions(IndexOptions.DOCS_AND_FREQS);\n+  }\n+\n+  private int fieldValue;\n+\n+  public CustomTermFreqField(String fieldName, CharSequence term, int fieldValue) {\n+    super(fieldName, term, FIELD_TYPE);\n+    this.fieldValue = fieldValue;\n+  }\n+\n+  public CustomTermFreqField(String fieldName, int fieldValue) {\n+    this(fieldName, fieldName, fieldValue);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d77def5b625392cfbb5574f726cffd390cf21f4"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Nzc3MjUyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjo0MDozMFrOH-Zsuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjo0MDozMFrOH-Zsuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE5NDgxMQ==", "bodyText": "This method is a bit trappy as it does a linear scan of the fields of the document. Can you use addWithKey like BinaryFieldMapper does?", "url": "https://github.com/elastic/elasticsearch/pull/65776#discussion_r535194811", "createdAt": "2020-12-03T12:40:30Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java", "diffHunk": "@@ -96,17 +93,19 @@ protected void parseCreateField(ParseContext context) throws IOException {\n         XContentParser parser = context.parser();\n         XContentParserUtils.ensureExpectedToken(XContentParser.Token.VALUE_NUMBER, parser.currentToken(), parser);\n \n-        long value = parser.longValue(false);\n+        // Check that _doc_count is a single value and not an array\n+        if (context.doc().getField(NAME) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d77def5b625392cfbb5574f726cffd390cf21f4"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1815, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}