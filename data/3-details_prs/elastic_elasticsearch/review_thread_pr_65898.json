{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjgxMjQ5", "number": 65898, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxODoyNDowMFrOFA7COA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxODoyNDowMFrOFA7COA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTExNTQ0OnYy", "diffSide": "RIGHT", "path": "docs/reference/eql/syntax.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxODoyNDowMFrOH_csjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxODoyNDowMFrOH_csjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI5MjQ5NQ==", "bodyText": "I originally tried using SVG images here similar to the ones above, but they broke up the example too much.", "url": "https://github.com/elastic/elasticsearch/pull/65898#discussion_r536292495", "createdAt": "2020-12-04T18:24:00Z", "author": {"login": "jrodewig"}, "path": "docs/reference/eql/syntax.asciidoc", "diffHunk": "@@ -847,81 +847,165 @@ The query's event items correspond to the following states:\n * State B:  `[process where process.name == \"bash\"]`\n * Complete: `[process where process.name == \"cat\"]`\n \n+image::images/eql/sequence-state-machine.svg[align=\"center\"]\n+\n To find matching sequences, the query uses separate state machines for each\n-unique `user.name` value. Pending sequence matches move through each machine's\n-states as follows:\n+unique `user.name` value. Based on the data set, you can expect two state\n+machines: one for the `root` user and one for `elkbee`.\n+\n+image::images/eql/separate-state-machines.svg[align=\"center\"]\n+\n+Pending sequence matches move through each machine's states as follows:\n \n [source,txt]\n ----\n-{ \"index\" : { \"_id\" : \"1\" } }\n+{ \"index\" : { \"_id\": \"1\" } }\n { \"user\": { \"name\": \"root\" }, \"process\": { \"name\": \"attrib\" }, ...}\n // Creates sequence [1] in state A for the \"root\" user.\n //\n-// root: A=[1]\n-\n-{ \"index\" : { \"_id\" : \"2\" } }\n+// +-------------------------root-------------------------+\n+// |  +-----------+     +-----------+     +------------+  |\n+// |  |  State A  |     |  State B  |     |  Complete  |  |\n+// |  +-----------+     +-----------+     +------------+  |\n+// |  |    [1]    |     |           |     |            |  |\n+// |  +-----------+     +-----------+     +------------+  |\n+// +------------------------------------------------------+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "140a7878a14cc349bdd90ac634e1c31553d9fbb4"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1752, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}