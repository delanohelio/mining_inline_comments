{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5Nzc3NDI4", "number": 51776, "title": "Remove custom \"execute\" method from SClass user node in Painless", "bodyText": "One of the goals moving forward is to make the user tree nodes and ir tree nodes generic (as in not have custom code for specific methods, etc.). Eventually, the user tree should not need to process anything from the ScriptContextInfo class as any customization should be added as generic nodes by whatever is creating the user and ir trees, respectively. This PR moves all code required for the customized \"execute\" method from the SClass/ClassNode into the SFunction/FunctionNode as a first step towards the aforementioned goals. In upcoming PRs the customized \"execute\" method code will be completely removed from the SFunction/FunctionNode classes as well. The SClass/ClassNode now consist of only functions and fields instead of also having logic to process statements for a singular custom \"execute\" method.", "createdAt": "2020-01-31T21:25:25Z", "url": "https://github.com/elastic/elasticsearch/pull/51776", "merged": true, "mergeCommit": {"oid": "c6746e20321d4e775d6ce63b3cec5ef087c47721"}, "closed": true, "closedAt": "2020-02-04T17:04:03Z", "author": {"login": "jdconrad"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_041bAH2gAyMzY5Nzc3NDI4OmU0MjI5MmM4YjkyYzFjNWJjMTZkMDI2NWRmYWY1OTExZTU4MGQ2NDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBELCcgFqTM1MzEyMTM1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e42292c8b92c1c5bc16d0265dfaf5911e580d642", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/e42292c8b92c1c5bc16d0265dfaf5911e580d642", "committedDate": "2020-01-31T20:09:18Z", "message": "add data to functions required to move execute method out of class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27f21d01c0f96ab005f50e5a99fe517c5b803b99", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/27f21d01c0f96ab005f50e5a99fe517c5b803b99", "committedDate": "2020-01-31T20:53:27Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "111edd4f4c9568d48c25438a526733545aab1ac5", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/111edd4f4c9568d48c25438a526733545aab1ac5", "committedDate": "2020-01-31T21:11:05Z", "message": "remove dead code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb03654550088c0e1b524abebb6288deed4286ea", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/eb03654550088c0e1b524abebb6288deed4286ea", "committedDate": "2020-01-31T21:11:22Z", "message": "fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53217b661b2064f49f1aa43b58788e82844c259e", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/53217b661b2064f49f1aa43b58788e82844c259e", "committedDate": "2020-01-31T21:13:05Z", "message": "fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/b12215f7e148551246196c6a3b419273d8147aea", "committedDate": "2020-01-31T21:27:11Z", "message": "add another todo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTkwMDE1", "url": "https://github.com/elastic/elasticsearch/pull/51776#pullrequestreview-352590015", "createdAt": "2020-02-03T21:53:54Z", "commit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMTo1Mzo1NVrOFlBSBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMTo1Mzo1NVrOFlBSBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM2MjYyOA==", "bodyText": "Consider cutting an issue for TODOs like this so they don't get lost, then ref the issue in the comment.", "url": "https://github.com/elastic/elasticsearch/pull/51776#discussion_r374362628", "createdAt": "2020-02-03T21:53:55Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/MethodWriter.java", "diffHunk": "@@ -125,7 +125,8 @@ public void writeStatementOffset(Location location) {\n         int offset = location.getOffset();\n         // ensure we don't have duplicate stuff going in here. can catch bugs\n         // (e.g. nodes get assigned wrong offsets by antlr walker)\n-        assert statements.get(offset) == false;\n+        // TODO: introduce a way to ignore internal statements so this assert is not triggered", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTkwODY2", "url": "https://github.com/elastic/elasticsearch/pull/51776#pullrequestreview-352590866", "createdAt": "2020-02-03T21:55:22Z", "commit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMTo1NToyMlrOFlBUdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMTo1NToyMlrOFlBUdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM2MzI1NQ==", "bodyText": "Consider adding a comment here \"handle execute\" or something similar.", "url": "https://github.com/elastic/elasticsearch/pull/51776#discussion_r374363255", "createdAt": "2020-02-03T21:55:22Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/antlr/Walker.java", "diffHunk": "@@ -251,7 +252,20 @@ public ANode visitSource(SourceContext ctx) {\n             statements.add((AStatement)visit(statement));\n         }\n \n-        return new SClass(scriptClassInfo, sourceName, sourceText, debugStream, location(ctx), functions, statements);\n+        String returnCanonicalTypeName = PainlessLookupUtility.typeToCanonicalTypeName(scriptClassInfo.getExecuteMethodReturnType());\n+        List<String> paramTypes = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTkxMzM4", "url": "https://github.com/elastic/elasticsearch/pull/51776#pullrequestreview-352591338", "createdAt": "2020-02-03T21:56:10Z", "commit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMTo1NjoxMVrOFlBV6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMTo1NjoxMVrOFlBV6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM2MzYyNg==", "bodyText": "true, false, false, true\n\nugh.", "url": "https://github.com/elastic/elasticsearch/pull/51776#discussion_r374363626", "createdAt": "2020-02-03T21:56:11Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/antlr/Walker.java", "diffHunk": "@@ -251,7 +252,20 @@ public ANode visitSource(SourceContext ctx) {\n             statements.add((AStatement)visit(statement));\n         }\n \n-        return new SClass(scriptClassInfo, sourceName, sourceText, debugStream, location(ctx), functions, statements);\n+        String returnCanonicalTypeName = PainlessLookupUtility.typeToCanonicalTypeName(scriptClassInfo.getExecuteMethodReturnType());\n+        List<String> paramTypes = new ArrayList<>();\n+        List<String> paramNames = new ArrayList<>();\n+\n+        for (ScriptClassInfo.MethodArgument argument : scriptClassInfo.getExecuteArguments()) {\n+            paramTypes.add(PainlessLookupUtility.typeToCanonicalTypeName(argument.getClazz()));\n+            paramNames.add(argument.getName());\n+        }\n+\n+        SFunction execute = new SFunction(location(ctx), returnCanonicalTypeName, \"execute\", paramTypes, paramNames, new SBlock(\n+                location(ctx), statements), true, false, false, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTkyNzg2", "url": "https://github.com/elastic/elasticsearch/pull/51776#pullrequestreview-352592786", "createdAt": "2020-02-03T21:58:38Z", "commit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMTo1ODozOFrOFlBamA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMTo1ODozOFrOFlBamA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM2NDgyNA==", "bodyText": "?", "url": "https://github.com/elastic/elasticsearch/pull/51776#discussion_r374364824", "createdAt": "2020-02-03T21:58:38Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/test/java/org/elasticsearch/painless/node/NodeToStringTests.java", "diffHunk": "@@ -19,39 +19,16 @@\n \n package org.elasticsearch.painless.node;\n \n-import org.elasticsearch.painless.CompilerSettings;\n-import org.elasticsearch.painless.FeatureTestObject;\n-import org.elasticsearch.painless.Scope.Variable;\n-import org.elasticsearch.painless.Location;\n-import org.elasticsearch.painless.Operation;\n-import org.elasticsearch.painless.ScriptClassInfo;\n-import org.elasticsearch.painless.action.PainlessExecuteAction.PainlessTestScript;\n-import org.elasticsearch.painless.antlr.Walker;\n-import org.elasticsearch.painless.lookup.PainlessCast;\n-import org.elasticsearch.painless.lookup.PainlessClass;\n-import org.elasticsearch.painless.lookup.PainlessField;\n-import org.elasticsearch.painless.lookup.PainlessLookup;\n-import org.elasticsearch.painless.lookup.PainlessLookupBuilder;\n-import org.elasticsearch.painless.lookup.PainlessLookupUtility;\n-import org.elasticsearch.painless.lookup.PainlessMethod;\n-import org.elasticsearch.painless.spi.Whitelist;\n-import org.elasticsearch.painless.spi.WhitelistLoader;\n import org.elasticsearch.test.ESTestCase;\n \n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.Map;\n-\n-import static java.util.Collections.emptyList;\n-import static java.util.Collections.singletonList;\n+// TODO: fix these tests to match new node structure\n \n /**\n  * Tests {@link Object#toString} implementations on all extensions of {@link ANode}.\n  */\n public class NodeToStringTests extends ESTestCase {\n \n-    public void testEAssignment() {\n+    /*public void testEAssignment() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNjAyODgx", "url": "https://github.com/elastic/elasticsearch/pull/51776#pullrequestreview-352602881", "createdAt": "2020-02-03T22:16:45Z", "commit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxNjo0NVrOFlB6Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxNjo0NVrOFlB6Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3Mjg2Ng==", "bodyText": "doAutoReturn implies an action, perhaps autoReturnEnabled?", "url": "https://github.com/elastic/elasticsearch/pull/51776#discussion_r374372866", "createdAt": "2020-02-03T22:16:45Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFunction.java", "diffHunk": "@@ -56,19 +59,23 @@\n \n     org.objectweb.asm.commons.Method method;\n \n+    private ScriptRoot scriptRoot;\n     private boolean methodEscape;\n \n     public SFunction(Location location, String rtnType, String name,\n             List<String> paramTypes, List<String> paramNames,\n-            SBlock block, boolean synthetic) {\n+            SBlock block, boolean isInternal, boolean isStatic, boolean synthetic, boolean doAutoReturn) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNjA2NTI1", "url": "https://github.com/elastic/elasticsearch/pull/51776#pullrequestreview-352606525", "createdAt": "2020-02-03T22:23:33Z", "commit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoyMzozM1rOFlCFVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoyMzozM1rOFlCFVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3NTc2Ng==", "bodyText": "Even with the name change, a comment on the semantics of this var would be useful since it's a non-standard extension.", "url": "https://github.com/elastic/elasticsearch/pull/51776#discussion_r374375766", "createdAt": "2020-02-03T22:23:33Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/FunctionNode.java", "diffHunk": "@@ -47,14 +63,25 @@ public BlockNode getBlockNode() {\n \n     /* ---- end tree structure, begin node data ---- */\n \n+    private ScriptRoot scriptRoot;\n     private String name;\n     private Class<?> returnType;\n     private List<Class<?>> typeParameters = new ArrayList<>();\n     private List<String> parameterNames = new ArrayList<>();\n+    private boolean isStatic;\n     private boolean isSynthetic;\n+    private boolean doAutoReturn;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNjA5OTYy", "url": "https://github.com/elastic/elasticsearch/pull/51776#pullrequestreview-352609962", "createdAt": "2020-02-03T22:30:17Z", "commit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjozMDoxOFrOFlCQYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjozMDoxOFrOFlCQYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3ODU5NA==", "bodyText": "Can you do something like:\ntry {\n\n} catch (XXX) {\n\n}", "url": "https://github.com/elastic/elasticsearch/pull/51776#discussion_r374378594", "createdAt": "2020-02-03T22:30:18Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/ir/FunctionNode.java", "diffHunk": "@@ -136,6 +185,34 @@ protected void write(ClassWriter classWriter, MethodWriter methodWriter, Globals\n         methodWriter = classWriter.newMethodWriter(access, method);\n         methodWriter.visitCode();\n \n+        // TODO: do not specialize for execute\n+        Label startTry = new Label();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12215f7e148551246196c6a3b419273d8147aea"}, "originalPosition": 106}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b724725d53d16c3f9bc067d3ddbb8470018caa57", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/b724725d53d16c3f9bc067d3ddbb8470018caa57", "committedDate": "2020-02-03T22:49:30Z", "message": "Merge branch 'master' into trees5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3479ef0f3c3b19a33e39bdb7828b1e01373f589a", "author": {"user": {"login": "jdconrad", "name": "Jack Conradson"}}, "url": "https://github.com/elastic/elasticsearch/commit/3479ef0f3c3b19a33e39bdb7828b1e01373f589a", "committedDate": "2020-02-04T00:27:10Z", "message": "response to PR comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTIxMTA0", "url": "https://github.com/elastic/elasticsearch/pull/51776#pullrequestreview-353121104", "createdAt": "2020-02-04T16:31:22Z", "commit": {"oid": "3479ef0f3c3b19a33e39bdb7828b1e01373f589a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNjozMToyMlrOFla2Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNjozMToyMlrOFla2Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc4MTQ1MA==", "bodyText": "no need to change, but I usually do something like\n// TODO: do not specialize for execute, see #51841", "url": "https://github.com/elastic/elasticsearch/pull/51776#discussion_r374781450", "createdAt": "2020-02-04T16:31:22Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFunction.java", "diffHunk": "@@ -122,9 +149,17 @@ void analyze(ScriptRoot scriptRoot) {\n         block.analyze(scriptRoot, functionScope.newLocalScope());\n         methodEscape = block.methodEscape;\n \n-        if (!methodEscape && returnType != void.class) {\n-            throw createError(new IllegalArgumentException(\"Not all paths provide a return value for method [\" + name + \"].\"));\n+        if (methodEscape == false && isAutoReturnEnabled == false && returnType != void.class) {\n+            throw createError(new IllegalArgumentException(\"not all paths provide a return value \" +\n+                    \"for function [\" + name + \"] with [\" + typeParameters.size() + \"] parameters\"));\n+        }\n+\n+        // TODO: do not specialize for execute", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3479ef0f3c3b19a33e39bdb7828b1e01373f589a"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTIxMzU4", "url": "https://github.com/elastic/elasticsearch/pull/51776#pullrequestreview-353121358", "createdAt": "2020-02-04T16:31:41Z", "commit": {"oid": "3479ef0f3c3b19a33e39bdb7828b1e01373f589a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2940, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}