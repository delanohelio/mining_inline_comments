{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNDU0NjU3", "number": 50741, "title": "Fold node metadata into new node storage", "bodyText": "Moves node metadata to uses the new storage mechanism (see #48701) as the authoritative source.", "createdAt": "2020-01-08T13:18:30Z", "url": "https://github.com/elastic/elasticsearch/pull/50741", "merged": true, "mergeCommit": {"oid": "c8bfe3dae77accc6507bde8c0f514fd4395d4baf"}, "closed": true, "closedAt": "2020-01-08T20:58:43Z", "author": {"login": "ywelsch"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4VJjqAH2gAyMzYwNDU0NjU3OmUzZmIyYjIxYjBkNWI0MjhjZWQwMjE4MjI1YWZkMjBmYmJiZTM3NWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4ZWBTAH2gAyMzYwNDU0NjU3OmFmNTExNjc2MmU1NGU4ZDYzYWZiZTA0MGZjNzU2N2MwMDZhYjQ0ODc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e3fb2b21b0d5b428ced0218225afd20fbbbe375d", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/e3fb2b21b0d5b428ced0218225afd20fbbbe375d", "committedDate": "2020-01-08T13:13:08Z", "message": "Fold node metadata into new storage layer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1bf599a16f97471c6f900aed0145bd818798e36", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/c1bf599a16f97471c6f900aed0145bd818798e36", "committedDate": "2020-01-08T13:41:11Z", "message": "import got lost"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bc2c501ea134f6e11d724de73bebac11618c668", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/2bc2c501ea134f6e11d724de73bebac11618c668", "committedDate": "2020-01-08T13:46:15Z", "message": "correct OpenMode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9325a786890ca5fa51b697d708078b172cf330d1", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/9325a786890ca5fa51b697d708078b172cf330d1", "committedDate": "2020-01-08T13:54:28Z", "message": "Add test that CS preserved"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5OTY4NzMz", "url": "https://github.com/elastic/elasticsearch/pull/50741#pullrequestreview-339968733", "createdAt": "2020-01-08T16:04:58Z", "commit": {"oid": "9325a786890ca5fa51b697d708078b172cf330d1"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjowNDo1OFrOFbbsyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozMzoyNVrOFbcrpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwOTcwNA==", "bodyText": "Given that we have to keep the node metadata around to prevent invalid downgrades, we may as well validate that it's consistent with the new-format metadata whether metaData is set or not.", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364309704", "createdAt": "2020-01-08T16:04:58Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/env/NodeEnvironment.java", "diffHunk": "@@ -497,36 +498,36 @@ private void maybeLogHeapDetails() {\n \n     /**\n      * scans the node paths and loads existing metaData file. If not found a new meta data will be generated\n-     * and persisted into the nodePaths\n      */\n-    private static NodeMetaData loadOrCreateNodeMetaData(Settings settings, Logger logger,\n-                                                         NodePath... nodePaths) throws IOException {\n+    private static NodeMetaData loadNodeMetaData(Settings settings, Logger logger,\n+                                                 NodePath... nodePaths) throws IOException {\n         final Path[] paths = Arrays.stream(nodePaths).map(np -> np.path).toArray(Path[]::new);\n-\n-        final Set<String> nodeIds = new HashSet<>();\n-        for (final Path path : paths) {\n-            final NodeMetaData metaData = NodeMetaData.FORMAT.loadLatestState(logger, NamedXContentRegistry.EMPTY, path);\n-            if (metaData != null) {\n-                nodeIds.add(metaData.nodeId());\n-            }\n-        }\n-        if (nodeIds.size() > 1) {\n-            throw new IllegalStateException(\n-                \"data paths \" + Arrays.toString(paths) + \" belong to multiple nodes with IDs \" + nodeIds);\n-        }\n-\n-        NodeMetaData metaData = NodeMetaData.FORMAT.loadLatestState(logger, NamedXContentRegistry.EMPTY, paths);\n+        NodeMetaData metaData = PersistedClusterStateService.nodeMetaData(paths);\n         if (metaData == null) {\n-            assert nodeIds.isEmpty() : nodeIds;\n-            metaData = new NodeMetaData(generateNodeId(settings), Version.CURRENT);\n-        } else {\n-            assert nodeIds.equals(Collections.singleton(metaData.nodeId())) : nodeIds + \" doesn't match \" + metaData;\n-            metaData = metaData.upgradeToCurrentVersion();\n+            // load legacy metadata", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9325a786890ca5fa51b697d708078b172cf330d1"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyMTY0OA==", "bodyText": "nodeId is always null at this point.", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364321648", "createdAt": "2020-01-08T16:26:18Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/gateway/PersistedClusterStateService.java", "diffHunk": "@@ -218,6 +228,67 @@ public boolean empty() {\n         }\n     }\n \n+    /**\n+     * Returns the node metadata for the given data paths, and checks if the node ids are unique\n+     * @param dataPaths the data paths to scan\n+     */\n+    @Nullable\n+    public static NodeMetaData nodeMetaData(Path... dataPaths) throws IOException {\n+        String nodeId = null;\n+        Version version = null;\n+        for (final Path dataPath : dataPaths) {\n+            final Path indexPath = dataPath.resolve(METADATA_DIRECTORY_NAME);\n+            if (Files.exists(indexPath)) {\n+                try (DirectoryReader reader = DirectoryReader.open(new SimpleFSDirectory(dataPath.resolve(METADATA_DIRECTORY_NAME)))) {\n+                    final Map<String, String> userData = reader.getIndexCommit().getUserData();\n+                    assert userData.get(NODE_VERSION_KEY) != null;\n+\n+                    final String thisNodeId = userData.get(NODE_ID_KEY);\n+                    assert thisNodeId != null;\n+                    if (nodeId != null && nodeId.equals(thisNodeId) == false) {\n+                        throw new IllegalStateException(\"unexpected node ID in metadata, found [\" + thisNodeId +\n+                            \"] in [\" + dataPath + \"] but expected [\" + nodeId + \"]\");\n+                    } else if (nodeId == null) {\n+                        nodeId = thisNodeId;\n+                        version = Version.fromId(Integer.parseInt(userData.get(NODE_VERSION_KEY)));\n+                    }\n+                    return new NodeMetaData(thisNodeId, Version.fromId(Integer.parseInt(userData.get(NODE_VERSION_KEY))));\n+                } catch (IndexNotFoundException e) {\n+                    logger.debug(new ParameterizedMessage(\"no on-disk state at {}\", indexPath), e);\n+                }\n+            }\n+        }\n+        if (nodeId == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9325a786890ca5fa51b697d708078b172cf330d1"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyMjk0NA==", "bodyText": "nodeId is always null at this point.", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364322944", "createdAt": "2020-01-08T16:28:34Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/gateway/PersistedClusterStateService.java", "diffHunk": "@@ -218,6 +228,67 @@ public boolean empty() {\n         }\n     }\n \n+    /**\n+     * Returns the node metadata for the given data paths, and checks if the node ids are unique\n+     * @param dataPaths the data paths to scan\n+     */\n+    @Nullable\n+    public static NodeMetaData nodeMetaData(Path... dataPaths) throws IOException {\n+        String nodeId = null;\n+        Version version = null;\n+        for (final Path dataPath : dataPaths) {\n+            final Path indexPath = dataPath.resolve(METADATA_DIRECTORY_NAME);\n+            if (Files.exists(indexPath)) {\n+                try (DirectoryReader reader = DirectoryReader.open(new SimpleFSDirectory(dataPath.resolve(METADATA_DIRECTORY_NAME)))) {\n+                    final Map<String, String> userData = reader.getIndexCommit().getUserData();\n+                    assert userData.get(NODE_VERSION_KEY) != null;\n+\n+                    final String thisNodeId = userData.get(NODE_ID_KEY);\n+                    assert thisNodeId != null;\n+                    if (nodeId != null && nodeId.equals(thisNodeId) == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9325a786890ca5fa51b697d708078b172cf330d1"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyMzM4OA==", "bodyText": "This assignment is unnecessary: nodeId is not used again.", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364323388", "createdAt": "2020-01-08T16:29:21Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/gateway/PersistedClusterStateService.java", "diffHunk": "@@ -218,6 +228,67 @@ public boolean empty() {\n         }\n     }\n \n+    /**\n+     * Returns the node metadata for the given data paths, and checks if the node ids are unique\n+     * @param dataPaths the data paths to scan\n+     */\n+    @Nullable\n+    public static NodeMetaData nodeMetaData(Path... dataPaths) throws IOException {\n+        String nodeId = null;\n+        Version version = null;\n+        for (final Path dataPath : dataPaths) {\n+            final Path indexPath = dataPath.resolve(METADATA_DIRECTORY_NAME);\n+            if (Files.exists(indexPath)) {\n+                try (DirectoryReader reader = DirectoryReader.open(new SimpleFSDirectory(dataPath.resolve(METADATA_DIRECTORY_NAME)))) {\n+                    final Map<String, String> userData = reader.getIndexCommit().getUserData();\n+                    assert userData.get(NODE_VERSION_KEY) != null;\n+\n+                    final String thisNodeId = userData.get(NODE_ID_KEY);\n+                    assert thisNodeId != null;\n+                    if (nodeId != null && nodeId.equals(thisNodeId) == false) {\n+                        throw new IllegalStateException(\"unexpected node ID in metadata, found [\" + thisNodeId +\n+                            \"] in [\" + dataPath + \"] but expected [\" + nodeId + \"]\");\n+                    } else if (nodeId == null) {\n+                        nodeId = thisNodeId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9325a786890ca5fa51b697d708078b172cf330d1"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyNTc5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns the node metadata for the given data paths, and checks if the node ids are unique\n          \n          \n            \n                 * Returns the node metadata for one of the given data paths, or {@code null} if no node metadata is found in any of these paths.", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364325798", "createdAt": "2020-01-08T16:33:25Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/gateway/PersistedClusterStateService.java", "diffHunk": "@@ -218,6 +228,67 @@ public boolean empty() {\n         }\n     }\n \n+    /**\n+     * Returns the node metadata for the given data paths, and checks if the node ids are unique", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9325a786890ca5fa51b697d708078b172cf330d1"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1b5aa46117ed003e6a16c4f82f1adc6857bd593", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/a1b5aa46117ed003e6a16c4f82f1adc6857bd593", "committedDate": "2020-01-08T17:13:36Z", "message": "No early return from nodeMetaData method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMDIzOTM2", "url": "https://github.com/elastic/elasticsearch/pull/50741#pullrequestreview-340023936", "createdAt": "2020-01-08T17:28:19Z", "commit": {"oid": "a1b5aa46117ed003e6a16c4f82f1adc6857bd593"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af5116762e54e8d63afbe040fc7567c006ab4487", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/af5116762e54e8d63afbe040fc7567c006ab4487", "committedDate": "2020-01-08T18:06:22Z", "message": "fix test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3926, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}