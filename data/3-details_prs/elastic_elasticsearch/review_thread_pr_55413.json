{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MjU2NDMx", "number": 55413, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMToyOTozMFrOD8b-tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTozMDowNlrOD8b_lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Njk5NTczOnYy", "diffSide": "RIGHT", "path": "qa/smoke-test-http/src/test/java/org/elasticsearch/http/HttpCompressionIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMToyOTozMFrOGVX-jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMTowMjoxMFrOGVzFqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA2NjEyNg==", "bodyText": "shall we rename this to the existing test name testCompressesResponseIfRequested and delete the old version? (as this is more thorough as it's reading the body)", "url": "https://github.com/elastic/elasticsearch/pull/55413#discussion_r425066126", "createdAt": "2020-05-14T11:29:30Z", "author": {"login": "andreidan"}, "path": "qa/smoke-test-http/src/test/java/org/elasticsearch/http/HttpCompressionIT.java", "diffHunk": "@@ -57,6 +64,30 @@ public void testUncompressedResponseByDefault() throws IOException {\n         response = client().performRequest(request);\n         assertEquals(201, response.getStatusLine().getStatusCode());\n         assertNull(response.getHeader(HttpHeaders.CONTENT_ENCODING));\n+        assertThat(response.getEntity(), is(not(instanceOf(GzipDecompressingEntity.class))));\n+    }\n+\n+    public void testCompressesGetDocumentResponseIfRequested() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9816d841e7c156db9a6478648c8b6d62c282e06f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUxMDMxNQ==", "bodyText": "Sure, just fixed it", "url": "https://github.com/elastic/elasticsearch/pull/55413#discussion_r425510315", "createdAt": "2020-05-15T01:02:10Z", "author": {"login": "Hakky54"}, "path": "qa/smoke-test-http/src/test/java/org/elasticsearch/http/HttpCompressionIT.java", "diffHunk": "@@ -57,6 +64,30 @@ public void testUncompressedResponseByDefault() throws IOException {\n         response = client().performRequest(request);\n         assertEquals(201, response.getStatusLine().getStatusCode());\n         assertNull(response.getHeader(HttpHeaders.CONTENT_ENCODING));\n+        assertThat(response.getEntity(), is(not(instanceOf(GzipDecompressingEntity.class))));\n+    }\n+\n+    public void testCompressesGetDocumentResponseIfRequested() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA2NjEyNg=="}, "originalCommit": {"oid": "9816d841e7c156db9a6478648c8b6d62c282e06f"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Njk5Nzk2OnYy", "diffSide": "LEFT", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTozMDowNlrOGVX_8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwOTo1MDoyN1rOGV-KRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA2NjQ4MQ==", "bodyText": "these high level rest client decompression tests are still valid right?", "url": "https://github.com/elastic/elasticsearch/pull/55413#discussion_r425066481", "createdAt": "2020-05-14T11:30:06Z", "author": {"login": "andreidan"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java", "diffHunk": "@@ -326,59 +322,6 @@ public void testParseEntity() throws IOException {\n         }\n     }\n \n-    public void testParseCompressedEntity() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9816d841e7c156db9a6478648c8b6d62c282e06f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUxNTE2NA==", "bodyText": "Well the decompression happens within the llrc when executing request and parsing the response. When the response is given to the rhlc the compressed data is already decompressed. In any kind of scenario the rhlc will always get a decompressed http enity, so therefor I can't unit test that method within the rhlc anymore.\nWhat do you think, should we drop this unit test or do you think there is a way to validate this use case within the rhlc?", "url": "https://github.com/elastic/elasticsearch/pull/55413#discussion_r425515164", "createdAt": "2020-05-15T01:22:28Z", "author": {"login": "Hakky54"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java", "diffHunk": "@@ -326,59 +322,6 @@ public void testParseEntity() throws IOException {\n         }\n     }\n \n-    public void testParseCompressedEntity() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA2NjQ4MQ=="}, "originalCommit": {"oid": "9816d841e7c156db9a6478648c8b6d62c282e06f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY5MTcxNg==", "bodyText": "Sorry, I was a bit confused as we previously dropped the mocks in this test, but you're right, the decompression is not a parseEntity matter anymore.\nMy aim was to make sure we test the HLRC, irrespective of who in the implementation chain performs it (it is now the LLRC's responsibility but that might change).\nAfter looking at this a bit closer we are covered here by the HighLevelRestClientCompressionIT which makes sure the HLRC is tested.", "url": "https://github.com/elastic/elasticsearch/pull/55413#discussion_r425691716", "createdAt": "2020-05-15T09:50:27Z", "author": {"login": "andreidan"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java", "diffHunk": "@@ -326,59 +322,6 @@ public void testParseEntity() throws IOException {\n         }\n     }\n \n-    public void testParseCompressedEntity() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA2NjQ4MQ=="}, "originalCommit": {"oid": "9816d841e7c156db9a6478648c8b6d62c282e06f"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1007, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}