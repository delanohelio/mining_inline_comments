{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0OTA4MzE5", "number": 63813, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjo0NDozNFrOEx4jeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDoxMzo1MVrOEy1RZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzQyMjY0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjo0NDozNFrOHoNzew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNzo1OToyNlrOHpd04g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkzMTI1OQ==", "bodyText": "I'm open to suggestions how this could be simplified.\nWe just want to fetch mapping by path. Should I be using FieldCapabilities API instead?", "url": "https://github.com/elastic/elasticsearch/pull/63813#discussion_r511931259", "createdAt": "2020-10-26T12:44:34Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "diffHunk": "@@ -406,8 +405,38 @@ public boolean supportsCategoricalFields() {\n         return additionalProperties;\n     }\n \n-    private static Object extractMapping(String path, Map<String, Object> mappingsProperties) {\n-        return extractValue(String.join(\".properties.\", path.split(\"\\\\.\")), mappingsProperties);\n+    // Visible for testing\n+    static Object extractMapping(String path, Map<String, Object> mappingsProperties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30f2edf3bffdedcece000b9bd8c89b15286165ab"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk1NDE2OQ==", "bodyText": "We probably should use field capabilities.\nIt returns nice objects that are like:\n  \"data.foo.bar\" : {\n      \"double\" : {\n        \"type\" : \"double\",\n        \"searchable\" : true,\n        \"aggregatable\" : true,\n        \"indices\" : [\n          \"fake-foo-2\"\n        ]\n      },\n      \"long\" : {\n        \"type\" : \"long\",\n        \"searchable\" : true,\n        \"aggregatable\" : true,\n        \"indices\" : [\n          \"fake-foo\"\n        ]\n      }\n    },\n\nWhere data.foo.bar would be this path variable.\nHere is another example:\nPUT complicated\n{\n  \"mappings\": {\n    \"properties\": {\n      \"foo\": {\n        \"type\": \"text\",\n        \"fields\": {\n          \"sub_foo\": {\n          \"type\": \"keyword\"\n          }\n        }\n      },\n      \"bar\": {\n        \"properties\": {\n          \"baz\": {\n            \"type\": \"long\"\n          }\n        }\n      }\n    }\n  }\n}\n\nReturns the following in the field caps:\n{\n  \"indices\" : [\n    \"complicated\"\n  ],\n  \"fields\" : {\n    \"foo.sub_foo\" : {\n      \"keyword\" : {\n        \"type\" : \"keyword\",\n        \"searchable\" : true,\n        \"aggregatable\" : true\n      }\n    },\n    \"bar.baz\" : {\n      \"long\" : {\n        \"type\" : \"long\",\n        \"searchable\" : true,\n        \"aggregatable\" : true\n      }\n    },\n    \"foo\" : {\n      \"text\" : {\n        \"type\" : \"text\",\n        \"searchable\" : true,\n        \"aggregatable\" : false\n      }\n    }\n    \"bar\" : {\n      \"object\" : {\n        \"type\" : \"object\",\n        \"searchable\" : false,\n        \"aggregatable\" : false\n      }\n    }\n  }\n}", "url": "https://github.com/elastic/elasticsearch/pull/63813#discussion_r511954169", "createdAt": "2020-10-26T13:22:26Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "diffHunk": "@@ -406,8 +405,38 @@ public boolean supportsCategoricalFields() {\n         return additionalProperties;\n     }\n \n-    private static Object extractMapping(String path, Map<String, Object> mappingsProperties) {\n-        return extractValue(String.join(\".properties.\", path.split(\"\\\\.\")), mappingsProperties);\n+    // Visible for testing\n+    static Object extractMapping(String path, Map<String, Object> mappingsProperties) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkzMTI1OQ=="}, "originalCommit": {"oid": "30f2edf3bffdedcece000b9bd8c89b15286165ab"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0MjMzOA==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63813#discussion_r513242338", "createdAt": "2020-10-28T07:59:26Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "diffHunk": "@@ -406,8 +405,38 @@ public boolean supportsCategoricalFields() {\n         return additionalProperties;\n     }\n \n-    private static Object extractMapping(String path, Map<String, Object> mappingsProperties) {\n-        return extractValue(String.join(\".properties.\", path.split(\"\\\\.\")), mappingsProperties);\n+    // Visible for testing\n+    static Object extractMapping(String path, Map<String, Object> mappingsProperties) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkzMTI1OQ=="}, "originalCommit": {"oid": "30f2edf3bffdedcece000b9bd8c89b15286165ab"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzQ5NjE5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMzowNDo1N1rOHoOhHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTo0OToyMVrOHozdOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk0Mjk0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        currentAsMap = (Map<String, Object>) current;\n          \n          \n            \n                        if (currentAsMap.containsKey(\"properties\")) {\n          \n          \n            \n                            current = currentAsMap.get(\"properties\");\n          \n          \n            \n                            currentAsMap = (Map<String, Object>) current;\n          \n          \n            \n                        } else if (currentAsMap.containsKey(\"fields\")) {\n          \n          \n            \n                            current = currentAsMap.get(\"fields\");\n          \n          \n            \n                            currentAsMap = (Map<String, Object>) current;\n          \n          \n            \n                        } else {\n          \n          \n            \n                            return null;\n          \n          \n            \n                        }\n          \n          \n            \n                        currentAsMap = (Map<String, Object>) current;\n          \n          \n            \n                        current = currentAsMap.get(\"properties\");\n          \n          \n            \n                        if (current == null) {\n          \n          \n            \n                            current = currentAsMap.get(\"fields\");\n          \n          \n            \n                        }\n          \n          \n            \n                        currentAsMap = (Map<String, Object>) current;\n          \n      \n    \n    \n  \n\nYou do a null check at the start of the loop. So, use that as your loop exit. Seems like only one branch is needed here.", "url": "https://github.com/elastic/elasticsearch/pull/63813#discussion_r511942943", "createdAt": "2020-10-26T13:04:57Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "diffHunk": "@@ -406,8 +405,38 @@ public boolean supportsCategoricalFields() {\n         return additionalProperties;\n     }\n \n-    private static Object extractMapping(String path, Map<String, Object> mappingsProperties) {\n-        return extractValue(String.join(\".properties.\", path.split(\"\\\\.\")), mappingsProperties);\n+    // Visible for testing\n+    static Object extractMapping(String path, Map<String, Object> mappingsProperties) {\n+        if (path.isEmpty()) {\n+            return mappingsProperties;\n+        }\n+        Object current = mappingsProperties;\n+        Map<String, Object> currentAsMap = mappingsProperties;\n+        String[] pathParts = path.split(\"\\\\.\");\n+        for (int i = 0; i < pathParts.length; ++i) {\n+            if (current == null) {\n+                return null;\n+            }\n+            String pathPart = pathParts[i];\n+            if (currentAsMap.containsKey(pathPart) == false) {\n+                return null;\n+            }\n+            current = currentAsMap.get(pathPart);\n+            if (i == pathParts.length - 1) {\n+                break;\n+            }\n+            currentAsMap = (Map<String, Object>) current;\n+            if (currentAsMap.containsKey(\"properties\")) {\n+                current = currentAsMap.get(\"properties\");\n+                currentAsMap = (Map<String, Object>) current;\n+            } else if (currentAsMap.containsKey(\"fields\")) {\n+                current = currentAsMap.get(\"fields\");\n+                currentAsMap = (Map<String, Object>) current;\n+            } else {\n+                return null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30f2edf3bffdedcece000b9bd8c89b15286165ab"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk0NTM0Mw==", "bodyText": "Also, casting null ends up as null. So that should still be ok.", "url": "https://github.com/elastic/elasticsearch/pull/63813#discussion_r511945343", "createdAt": "2020-10-26T13:09:01Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "diffHunk": "@@ -406,8 +405,38 @@ public boolean supportsCategoricalFields() {\n         return additionalProperties;\n     }\n \n-    private static Object extractMapping(String path, Map<String, Object> mappingsProperties) {\n-        return extractValue(String.join(\".properties.\", path.split(\"\\\\.\")), mappingsProperties);\n+    // Visible for testing\n+    static Object extractMapping(String path, Map<String, Object> mappingsProperties) {\n+        if (path.isEmpty()) {\n+            return mappingsProperties;\n+        }\n+        Object current = mappingsProperties;\n+        Map<String, Object> currentAsMap = mappingsProperties;\n+        String[] pathParts = path.split(\"\\\\.\");\n+        for (int i = 0; i < pathParts.length; ++i) {\n+            if (current == null) {\n+                return null;\n+            }\n+            String pathPart = pathParts[i];\n+            if (currentAsMap.containsKey(pathPart) == false) {\n+                return null;\n+            }\n+            current = currentAsMap.get(pathPart);\n+            if (i == pathParts.length - 1) {\n+                break;\n+            }\n+            currentAsMap = (Map<String, Object>) current;\n+            if (currentAsMap.containsKey(\"properties\")) {\n+                current = currentAsMap.get(\"properties\");\n+                currentAsMap = (Map<String, Object>) current;\n+            } else if (currentAsMap.containsKey(\"fields\")) {\n+                current = currentAsMap.get(\"fields\");\n+                currentAsMap = (Map<String, Object>) current;\n+            } else {\n+                return null;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk0Mjk0Mw=="}, "originalCommit": {"oid": "30f2edf3bffdedcece000b9bd8c89b15286165ab"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU0ODE1Mw==", "bodyText": "Thanks for the suggestion. I removed the mappings fetching code anyway as I use field caps now.", "url": "https://github.com/elastic/elasticsearch/pull/63813#discussion_r512548153", "createdAt": "2020-10-27T09:49:21Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "diffHunk": "@@ -406,8 +405,38 @@ public boolean supportsCategoricalFields() {\n         return additionalProperties;\n     }\n \n-    private static Object extractMapping(String path, Map<String, Object> mappingsProperties) {\n-        return extractValue(String.join(\".properties.\", path.split(\"\\\\.\")), mappingsProperties);\n+    // Visible for testing\n+    static Object extractMapping(String path, Map<String, Object> mappingsProperties) {\n+        if (path.isEmpty()) {\n+            return mappingsProperties;\n+        }\n+        Object current = mappingsProperties;\n+        Map<String, Object> currentAsMap = mappingsProperties;\n+        String[] pathParts = path.split(\"\\\\.\");\n+        for (int i = 0; i < pathParts.length; ++i) {\n+            if (current == null) {\n+                return null;\n+            }\n+            String pathPart = pathParts[i];\n+            if (currentAsMap.containsKey(pathPart) == false) {\n+                return null;\n+            }\n+            current = currentAsMap.get(pathPart);\n+            if (i == pathParts.length - 1) {\n+                break;\n+            }\n+            currentAsMap = (Map<String, Object>) current;\n+            if (currentAsMap.containsKey(\"properties\")) {\n+                current = currentAsMap.get(\"properties\");\n+                currentAsMap = (Map<String, Object>) current;\n+            } else if (currentAsMap.containsKey(\"fields\")) {\n+                current = currentAsMap.get(\"fields\");\n+                currentAsMap = (Map<String, Object>) current;\n+            } else {\n+                return null;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk0Mjk0Mw=="}, "originalCommit": {"oid": "30f2edf3bffdedcece000b9bd8c89b15286165ab"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzM3MDYzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDoxMzo1MVrOHpsI5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDoxMzo1MVrOHpsI5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ3NjgzNg==", "bodyText": "@przemekwitek  FieldCapabilitiesResponse is nullable. You need to do a null check here.", "url": "https://github.com/elastic/elasticsearch/pull/63813#discussion_r513476836", "createdAt": "2020-10-28T14:13:51Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/Classification.java", "diffHunk": "@@ -374,28 +374,19 @@ public boolean supportsCategoricalFields() {\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public Map<String, Object> getExplicitlyMappedFields(Map<String, Object> mappingsProperties, String resultsFieldName) {\n+    public Map<String, Object> getExplicitlyMappedFields(String resultsFieldName, FieldCapabilitiesResponse fieldCapabilitiesResponse) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b23e3230c37424259fa83acfe057193ad4e888"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2824, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}