{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxOTIyNTAx", "number": 53924, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTozODozMVrODq8SgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTozODozMVrODq8SgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzU0NTYwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeRole.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTozODozMVrOF7AKpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0MTozM1rOF7Fy0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQxMzAyOQ==", "bodyText": "Shouldn't this be based on version? At what point would this get updated? Perhaps we could use a map of role to min version (or a predicate) and iterate over them checking each role when serializing against the version of the output stream?", "url": "https://github.com/elastic/elasticsearch/pull/53924#discussion_r397413029", "createdAt": "2020-03-24T19:38:31Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeRole.java", "diffHunk": "@@ -134,10 +134,21 @@ public final String toString() {\n \n     };\n \n+    public static final DiscoveryNodeRole REMOTE_CLUSTER_CLIENT_ROLE = new DiscoveryNodeRole(\"remote_cluster_client\", \"r\") {\n+\n+        @Override\n+        protected Setting<Boolean> roleSetting() {\n+            return Node.NODE_REMOTE_CLUSTER_CLIENT;\n+        }\n+\n+    };\n+\n     /**\n      * The built-in node roles.\n      */\n-    public static Set<DiscoveryNodeRole> BUILT_IN_ROLES = Set.of(DATA_ROLE, INGEST_ROLE, MASTER_ROLE);\n+    public static Set<DiscoveryNodeRole> BUILT_IN_ROLES = Set.of(DATA_ROLE, INGEST_ROLE, MASTER_ROLE, REMOTE_CLUSTER_CLIENT_ROLE);\n+\n+    static Set<DiscoveryNodeRole> LEGACY_ROLES = Set.of(DATA_ROLE, INGEST_ROLE, MASTER_ROLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acba939510cfb91e907669925cd77945f8be20d3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQyODA2OQ==", "bodyText": "No, this shouldn't be based on version. We have two things:\n\nvery old nodes before we made roles pluggable that only understand three roles: master, data, and ingest\nnew nodes after we made roles pluggable that understand the roles they are built with us, but also understand that other nodes might send them roles that they don't understand\nfor example, a 7.6.0 node today while it doesn't have a role built-in for remote_cluster_client, does have the ability to receive that role from a 7.7.0 node, and represent it accordingly\nhowever, a 7.0.0 node, before we made roles pluggable, has no possibility of understanding a remote_cluster_client role, it would blow up if it sees it", "url": "https://github.com/elastic/elasticsearch/pull/53924#discussion_r397428069", "createdAt": "2020-03-24T20:06:10Z", "author": {"login": "jasontedor"}, "path": "server/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeRole.java", "diffHunk": "@@ -134,10 +134,21 @@ public final String toString() {\n \n     };\n \n+    public static final DiscoveryNodeRole REMOTE_CLUSTER_CLIENT_ROLE = new DiscoveryNodeRole(\"remote_cluster_client\", \"r\") {\n+\n+        @Override\n+        protected Setting<Boolean> roleSetting() {\n+            return Node.NODE_REMOTE_CLUSTER_CLIENT;\n+        }\n+\n+    };\n+\n     /**\n      * The built-in node roles.\n      */\n-    public static Set<DiscoveryNodeRole> BUILT_IN_ROLES = Set.of(DATA_ROLE, INGEST_ROLE, MASTER_ROLE);\n+    public static Set<DiscoveryNodeRole> BUILT_IN_ROLES = Set.of(DATA_ROLE, INGEST_ROLE, MASTER_ROLE, REMOTE_CLUSTER_CLIENT_ROLE);\n+\n+    static Set<DiscoveryNodeRole> LEGACY_ROLES = Set.of(DATA_ROLE, INGEST_ROLE, MASTER_ROLE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQxMzAyOQ=="}, "originalCommit": {"oid": "acba939510cfb91e907669925cd77945f8be20d3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNTIzNA==", "bodyText": "Thanks for the explanation", "url": "https://github.com/elastic/elasticsearch/pull/53924#discussion_r397505234", "createdAt": "2020-03-24T22:41:33Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeRole.java", "diffHunk": "@@ -134,10 +134,21 @@ public final String toString() {\n \n     };\n \n+    public static final DiscoveryNodeRole REMOTE_CLUSTER_CLIENT_ROLE = new DiscoveryNodeRole(\"remote_cluster_client\", \"r\") {\n+\n+        @Override\n+        protected Setting<Boolean> roleSetting() {\n+            return Node.NODE_REMOTE_CLUSTER_CLIENT;\n+        }\n+\n+    };\n+\n     /**\n      * The built-in node roles.\n      */\n-    public static Set<DiscoveryNodeRole> BUILT_IN_ROLES = Set.of(DATA_ROLE, INGEST_ROLE, MASTER_ROLE);\n+    public static Set<DiscoveryNodeRole> BUILT_IN_ROLES = Set.of(DATA_ROLE, INGEST_ROLE, MASTER_ROLE, REMOTE_CLUSTER_CLIENT_ROLE);\n+\n+    static Set<DiscoveryNodeRole> LEGACY_ROLES = Set.of(DATA_ROLE, INGEST_ROLE, MASTER_ROLE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQxMzAyOQ=="}, "originalCommit": {"oid": "acba939510cfb91e907669925cd77945f8be20d3"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4194, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}