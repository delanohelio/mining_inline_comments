{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDU0MTky", "number": 52336, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0NDozNlrODfrPrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMDoyMTowN1rODfr5Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTQwOTc0OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/MaxAggregator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0NDozNlrOFphNpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0NDozNlrOFphNpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDEwMQ==", "bodyText": "This was a javadoc comment in an invalid spot for javadoc.", "url": "https://github.com/elastic/elasticsearch/pull/52336#discussion_r379080101", "createdAt": "2020-02-13T19:44:36Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/MaxAggregator.java", "diffHunk": "@@ -98,7 +98,7 @@ public LeafBucketCollector getLeafCollector(LeafReaderContext ctx,\n         if (pointConverter != null) {\n             Number segMax = findLeafMaxValue(ctx.reader(), pointField, pointConverter);\n             if (segMax != null) {\n-                /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb9b992fb40f372e2ffce6e5163564d0e4d256c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTQxMTEwOnYy", "diffSide": "LEFT", "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/MinAggregatorTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0NTowNVrOFphOgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0NTowNVrOFphOgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDMyMA==", "bodyText": "This isn't used any more.", "url": "https://github.com/elastic/elasticsearch/pull/52336#discussion_r379080320", "createdAt": "2020-02-13T19:45:05Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/MinAggregatorTests.java", "diffHunk": "@@ -799,21 +815,6 @@ public void testMinShortcutRandom() throws Exception {\n             (v) -> DoublePoint.decodeDimension(v, 0));\n     }\n \n-    private void testMinCase(IndexSearcher searcher,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb9b992fb40f372e2ffce6e5163564d0e4d256c"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTQxMjUzOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/MinAggregatorTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0NTozM1rOFphPdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0NTozM1rOFphPdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDU2NQ==", "bodyText": "There is a ton more ceremony here because resolution is only set when you call build. Bleh.", "url": "https://github.com/elastic/elasticsearch/pull/52336#discussion_r379080565", "createdAt": "2020-02-13T19:45:33Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/MinAggregatorTests.java", "diffHunk": "@@ -889,12 +890,17 @@ private Aggregator mockAggregator() {\n         return config;\n     }\n \n-    private ValuesSourceConfig<ValuesSource.Numeric> mockDateValuesSourceConfig(String fieldName, boolean indexed) {\n+    private ValuesSourceConfig<ValuesSource.Numeric> mockDateValuesSourceConfig(String fieldName, boolean indexed,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb9b992fb40f372e2ffce6e5163564d0e4d256c"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTUxNTY3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/MinAggregatorTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMDoyMTowOFrOFpiQ1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMToyMzo1NVrOFpkCXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5NzMwMQ==", "bodyText": "I'm a little uncomfortable using a randomization for coverage here.  I'd rather loop over the possible resolution values like we loop over the possible numeric types above.", "url": "https://github.com/elastic/elasticsearch/pull/52336#discussion_r379097301", "createdAt": "2020-02-13T20:21:08Z", "author": {"login": "not-napoleon"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/MinAggregatorTests.java", "diffHunk": "@@ -740,41 +743,54 @@ public void testShortcutIsApplicable() {\n                 )\n             );\n         }\n-        assertNotNull(\n-            MinAggregator.getPointReaderOrNull(\n-                mockSearchContext(new MatchAllDocsQuery()),\n-                null,\n-                mockDateValuesSourceConfig(\"number\", true)\n-            )\n-        );\n         assertNull(\n             MinAggregator.getPointReaderOrNull(\n                 mockSearchContext(new MatchAllDocsQuery()),\n                 mockAggregator(),\n-                mockDateValuesSourceConfig(\"number\", true)\n+                mockDateValuesSourceConfig(\"number\", true, randomFrom(DateFieldMapper.Resolution.values()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a583cad635bf18f811831723d0f1d023566cdd20"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyNjM2NQ==", "bodyText": "Sure!", "url": "https://github.com/elastic/elasticsearch/pull/52336#discussion_r379126365", "createdAt": "2020-02-13T21:23:55Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/MinAggregatorTests.java", "diffHunk": "@@ -740,41 +743,54 @@ public void testShortcutIsApplicable() {\n                 )\n             );\n         }\n-        assertNotNull(\n-            MinAggregator.getPointReaderOrNull(\n-                mockSearchContext(new MatchAllDocsQuery()),\n-                null,\n-                mockDateValuesSourceConfig(\"number\", true)\n-            )\n-        );\n         assertNull(\n             MinAggregator.getPointReaderOrNull(\n                 mockSearchContext(new MatchAllDocsQuery()),\n                 mockAggregator(),\n-                mockDateValuesSourceConfig(\"number\", true)\n+                mockDateValuesSourceConfig(\"number\", true, randomFrom(DateFieldMapper.Resolution.values()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5NzMwMQ=="}, "originalCommit": {"oid": "a583cad635bf18f811831723d0f1d023566cdd20"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3999, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}