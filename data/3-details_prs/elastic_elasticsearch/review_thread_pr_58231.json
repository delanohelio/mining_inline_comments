{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NzE4MjU2", "number": 58231, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDoyMTozOVrOEJrq9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDoyMTozOVrOEJrq9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTg4MTUxOnYy", "diffSide": "RIGHT", "path": "server/src/internalClusterTest/java/org/elasticsearch/indices/DataStreamIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDoyMTozOVrOGqTSIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNjo1NToyMVrOGquR0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAwOTMxMw==", "bodyText": "Is this comment correct? It looks like it applies the mapping to all backing indices.", "url": "https://github.com/elastic/elasticsearch/pull/58231#discussion_r447009313", "createdAt": "2020-06-29T14:21:39Z", "author": {"login": "danhermann"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/indices/DataStreamIT.java", "diffHunk": "@@ -592,6 +605,58 @@ public void testTimestampFieldCustomAttributes() throws Exception {\n         client().admin().indices().deleteDataStream(deleteDataStreamRequest).actionGet();\n     }\n \n+    public void testUpdateMappingViaDataStream() throws Exception {\n+        putComposableIndexTemplate(\"id1\", \"@timestamp\", List.of(\"logs-*\"));\n+        CreateDataStreamAction.Request createDataStreamRequest = new CreateDataStreamAction.Request(\"logs-foobar\");\n+        client().admin().indices().createDataStream(createDataStreamRequest).actionGet();\n+\n+        String backingIndex1 = DataStream.getDefaultBackingIndexName(\"logs-foobar\", 1);\n+        String backingIndex2 = DataStream.getDefaultBackingIndexName(\"logs-foobar\", 2);\n+\n+        RolloverResponse rolloverResponse = client().admin().indices().rolloverIndex(new RolloverRequest(\"logs-foobar\", null)).get();\n+        assertThat(rolloverResponse.getNewIndex(), equalTo(backingIndex2));\n+        assertTrue(rolloverResponse.isRolledOver());\n+\n+        Map<?, ?> expectedMapping = Map.of(\"properties\", Map.of(\"@timestamp\", Map.of(\"type\", \"date\")));\n+        GetMappingsResponse getMappingsResponse = getMapping(\"logs-foobar\").get();\n+        assertThat(getMappingsResponse.getMappings().size(), equalTo(2));\n+        assertThat(getMappingsResponse.getMappings().get(backingIndex1).getSourceAsMap(), equalTo(expectedMapping));\n+        assertThat(getMappingsResponse.getMappings().get(backingIndex2).getSourceAsMap(), equalTo(expectedMapping));\n+\n+        expectedMapping = Map.of(\"properties\", Map.of(\"@timestamp\", Map.of(\"type\", \"date\"), \"my_field\", Map.of(\"type\", \"keyword\")));\n+        putMapping(\"{\\\"properties\\\":{\\\"my_field\\\":{\\\"type\\\":\\\"keyword\\\"}}}\", \"logs-foobar\").get();\n+        // Only the mapping of th latest backing index should be updated:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9def6e3768c3002eb483a6f12634cc244967fd87"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1MTYwMQ==", "bodyText": "\ud83d\udc4d let me fix that", "url": "https://github.com/elastic/elasticsearch/pull/58231#discussion_r447451601", "createdAt": "2020-06-30T06:55:21Z", "author": {"login": "martijnvg"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/indices/DataStreamIT.java", "diffHunk": "@@ -592,6 +605,58 @@ public void testTimestampFieldCustomAttributes() throws Exception {\n         client().admin().indices().deleteDataStream(deleteDataStreamRequest).actionGet();\n     }\n \n+    public void testUpdateMappingViaDataStream() throws Exception {\n+        putComposableIndexTemplate(\"id1\", \"@timestamp\", List.of(\"logs-*\"));\n+        CreateDataStreamAction.Request createDataStreamRequest = new CreateDataStreamAction.Request(\"logs-foobar\");\n+        client().admin().indices().createDataStream(createDataStreamRequest).actionGet();\n+\n+        String backingIndex1 = DataStream.getDefaultBackingIndexName(\"logs-foobar\", 1);\n+        String backingIndex2 = DataStream.getDefaultBackingIndexName(\"logs-foobar\", 2);\n+\n+        RolloverResponse rolloverResponse = client().admin().indices().rolloverIndex(new RolloverRequest(\"logs-foobar\", null)).get();\n+        assertThat(rolloverResponse.getNewIndex(), equalTo(backingIndex2));\n+        assertTrue(rolloverResponse.isRolledOver());\n+\n+        Map<?, ?> expectedMapping = Map.of(\"properties\", Map.of(\"@timestamp\", Map.of(\"type\", \"date\")));\n+        GetMappingsResponse getMappingsResponse = getMapping(\"logs-foobar\").get();\n+        assertThat(getMappingsResponse.getMappings().size(), equalTo(2));\n+        assertThat(getMappingsResponse.getMappings().get(backingIndex1).getSourceAsMap(), equalTo(expectedMapping));\n+        assertThat(getMappingsResponse.getMappings().get(backingIndex2).getSourceAsMap(), equalTo(expectedMapping));\n+\n+        expectedMapping = Map.of(\"properties\", Map.of(\"@timestamp\", Map.of(\"type\", \"date\"), \"my_field\", Map.of(\"type\", \"keyword\")));\n+        putMapping(\"{\\\"properties\\\":{\\\"my_field\\\":{\\\"type\\\":\\\"keyword\\\"}}}\", \"logs-foobar\").get();\n+        // Only the mapping of th latest backing index should be updated:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAwOTMxMw=="}, "originalCommit": {"oid": "9def6e3768c3002eb483a6f12634cc244967fd87"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1548, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}