{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MjY0MTgy", "number": 51464, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQyMTozOTo0N1rODavieQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwOTo0OTo0OVrODa0O6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzY4NDQxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQyMTozOTo0N1rOFh19NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQyMTozOTo0N1rOFh19NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAzMTM0OA==", "bodyText": "Making the fact that we're using a potentially racy CS here, leading to some needless snapshot delete failures, obvious was the main motivation behind this change actually (a bigger change to deletes making use of this cleanup is coming in #51463).", "url": "https://github.com/elastic/elasticsearch/pull/51464#discussion_r371031348", "createdAt": "2020-01-26T21:39:47Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1222,7 +1226,8 @@ public void deleteSnapshot(final String repositoryName, final String snapshotNam\n             // if nothing found by the same name, then look in the cluster state for current in progress snapshots\n             long repoGenId = repositoryData.getGenId();\n             if (matchedEntry.isPresent() == false) {\n-                Optional<SnapshotsInProgress.Entry> matchedInProgress = currentSnapshots(repositoryName, Collections.emptyList()).stream()\n+                Optional<SnapshotsInProgress.Entry> matchedInProgress = currentSnapshots(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a691424cc4fc1657eb0438a13a540ae4381f5bb2"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDIwNTA5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODoxOTo1NlrOFh6gow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODo1NjoyNlrOFh7VvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwNTk1NQ==", "bodyText": "Should we just pass down SnapshotsInProgress? Makes it a bit clearer what the dependencies are", "url": "https://github.com/elastic/elasticsearch/pull/51464#discussion_r371105955", "createdAt": "2020-01-27T08:19:56Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java", "diffHunk": "@@ -103,14 +103,14 @@ protected void masterOperation(Task task, final GetSnapshotsRequest request, fin\n                                 response ->\n                                         // switch to GENERIC thread pool because it might be long running operation\n                                         threadPool.executor(ThreadPool.Names.GENERIC).execute(\n-                                                () -> getMultipleReposSnapshotInfo(response.repositories(), request.snapshots(),\n+                                                () -> getMultipleReposSnapshotInfo(state, response.repositories(), request.snapshots(),\n                                                         request.ignoreUnavailable(), request.verbose(), listener)),\n                                 listener::onFailure),\n                         GetRepositoriesResponse::new));\n     }\n \n-    private void getMultipleReposSnapshotInfo(List<RepositoryMetaData> repos, String[] snapshots, boolean ignoreUnavailable,\n-                                              boolean verbose, ActionListener<GetSnapshotsResponse> listener) {\n+    private void getMultipleReposSnapshotInfo(ClusterState state, List<RepositoryMetaData> repos, String[] snapshots,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a691424cc4fc1657eb0438a13a540ae4381f5bb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExOTU0OQ==", "bodyText": "Sure sounds good :) => f2efe16", "url": "https://github.com/elastic/elasticsearch/pull/51464#discussion_r371119549", "createdAt": "2020-01-27T08:56:26Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java", "diffHunk": "@@ -103,14 +103,14 @@ protected void masterOperation(Task task, final GetSnapshotsRequest request, fin\n                                 response ->\n                                         // switch to GENERIC thread pool because it might be long running operation\n                                         threadPool.executor(ThreadPool.Names.GENERIC).execute(\n-                                                () -> getMultipleReposSnapshotInfo(response.repositories(), request.snapshots(),\n+                                                () -> getMultipleReposSnapshotInfo(state, response.repositories(), request.snapshots(),\n                                                         request.ignoreUnavailable(), request.verbose(), listener)),\n                                 listener::onFailure),\n                         GetRepositoriesResponse::new));\n     }\n \n-    private void getMultipleReposSnapshotInfo(List<RepositoryMetaData> repos, String[] snapshots, boolean ignoreUnavailable,\n-                                              boolean verbose, ActionListener<GetSnapshotsResponse> listener) {\n+    private void getMultipleReposSnapshotInfo(ClusterState state, List<RepositoryMetaData> repos, String[] snapshots,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwNTk1NQ=="}, "originalCommit": {"oid": "a691424cc4fc1657eb0438a13a540ae4381f5bb2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDQ1MzUyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwOTo0OTo0OVrOFh8zLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDowMjo0MlrOFh9LPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE0MzQ2OQ==", "bodyText": "Can you add @Nullable to the methods that pass SnapshotsInProgress, or alternatively, pass an empty instance?", "url": "https://github.com/elastic/elasticsearch/pull/51464#discussion_r371143469", "createdAt": "2020-01-27T09:49:49Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java", "diffHunk": "@@ -133,16 +135,16 @@ private void getMultipleReposSnapshotInfo(List<RepositoryMetaData> repos, String\n                     } else {\n                         groupedListener.onFailure(e);\n                     }\n-                }), wrappedListener -> getSingleRepoSnapshotInfo(repoName, snapshots, ignoreUnavailable, verbose,\n+                }), wrappedListener -> getSingleRepoSnapshotInfo(snapshotsInProgress, repoName, snapshots, ignoreUnavailable, verbose,\n                     ActionListener.map(wrappedListener, snInfos -> GetSnapshotsResponse.Response.snapshots(repoName, snInfos)))));\n         }\n     }\n \n-    private void getSingleRepoSnapshotInfo(String repo, String[] snapshots, boolean ignoreUnavailable, boolean verbose,\n-                                           ActionListener<List<SnapshotInfo>> listener) {\n+    private void getSingleRepoSnapshotInfo(SnapshotsInProgress snapshotsInProgress, String repo, String[] snapshots,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2efe16f149c787e75fae3fe80042c5c303ee63d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE0OTYzMA==", "bodyText": "Sure added the @Nullables in 2bfe8f5 :)", "url": "https://github.com/elastic/elasticsearch/pull/51464#discussion_r371149630", "createdAt": "2020-01-27T10:02:42Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java", "diffHunk": "@@ -133,16 +135,16 @@ private void getMultipleReposSnapshotInfo(List<RepositoryMetaData> repos, String\n                     } else {\n                         groupedListener.onFailure(e);\n                     }\n-                }), wrappedListener -> getSingleRepoSnapshotInfo(repoName, snapshots, ignoreUnavailable, verbose,\n+                }), wrappedListener -> getSingleRepoSnapshotInfo(snapshotsInProgress, repoName, snapshots, ignoreUnavailable, verbose,\n                     ActionListener.map(wrappedListener, snInfos -> GetSnapshotsResponse.Response.snapshots(repoName, snInfos)))));\n         }\n     }\n \n-    private void getSingleRepoSnapshotInfo(String repo, String[] snapshots, boolean ignoreUnavailable, boolean verbose,\n-                                           ActionListener<List<SnapshotInfo>> listener) {\n+    private void getSingleRepoSnapshotInfo(SnapshotsInProgress snapshotsInProgress, String repo, String[] snapshots,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE0MzQ2OQ=="}, "originalCommit": {"oid": "f2efe16f149c787e75fae3fe80042c5c303ee63d"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4376, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}