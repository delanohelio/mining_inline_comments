{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NDE4NjEx", "number": 57274, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMToxOTo1MVrOEAdwoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMTo1MDoxMlrOEAeUwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTIzMDQxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMToxOTo1MVrOGbwq_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyMzo1MlrOGbypng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc2MjE3Mg==", "bodyText": "We should validate that this setting is >= 1 when it is provided. I did not see this check anywhere (unless you were planning on adding it to the rest layer).", "url": "https://github.com/elastic/elasticsearch/pull/57274#discussion_r431762172", "createdAt": "2020-05-28T11:19:51Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsConfig.java", "diffHunk": "@@ -142,6 +146,7 @@ private DataFrameAnalyticsConfig(String id, String description, DataFrameAnalyti\n         this.createTime = createTime == null ? null : Instant.ofEpochMilli(createTime.toEpochMilli());\n         this.version = version;\n         this.allowLazyStart = allowLazyStart;\n+        this.maxNumThreads = maxNumThreads;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84c6fa4fbae0727fb7e15548e0a4000e9a1e5a71"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NDU5MA==", "bodyText": "I intentionally avoided adding validation as I believe the way we implement the setting may change based on the feedback we get from testing performance behaviour. If we end up leaving it as is, I'll add validation plus other things that are missing in a following PR.", "url": "https://github.com/elastic/elasticsearch/pull/57274#discussion_r431794590", "createdAt": "2020-05-28T12:23:52Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsConfig.java", "diffHunk": "@@ -142,6 +146,7 @@ private DataFrameAnalyticsConfig(String id, String description, DataFrameAnalyti\n         this.createTime = createTime == null ? null : Instant.ofEpochMilli(createTime.toEpochMilli());\n         this.version = version;\n         this.allowLazyStart = allowLazyStart;\n+        this.maxNumThreads = maxNumThreads;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc2MjE3Mg=="}, "originalCommit": {"oid": "84c6fa4fbae0727fb7e15548e0a4000e9a1e5a71"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTMyMjkwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsProcessManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMTo1MDoxMlrOGbxliA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyNDozNlrOGbyrIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3NzE2MA==", "bodyText": "I'm wondering where we should apply the default: here or in DataFrameAnalyticsConfig.\nIf the calling code doesn't care whether the user has set max_num_threads, the default of 1 could be as well applied in DataFrameAnalyticsConfig's constructor.\nThen we wouldn't need null handling here.\nI don't have a strong opinion though so feel free to disregard the comment.", "url": "https://github.com/elastic/elasticsearch/pull/57274#discussion_r431777160", "createdAt": "2020-05-28T11:50:12Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsProcessManager.java", "diffHunk": "@@ -438,12 +443,13 @@ private AnalyticsProcessConfig createProcessConfig(DataFrameDataExtractor dataEx\n                                                            ExtractedFields extractedFields) {\n             DataFrameDataExtractor.DataSummary dataSummary = dataExtractor.collectDataSummary();\n             Set<String> categoricalFields = dataExtractor.getCategoricalFields(config.getAnalysis());\n+            int threads = config.getMaxNumThreads() == null ? 1 : Math.min(config.getMaxNumThreads(), numAllocatedProcessors);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84c6fa4fbae0727fb7e15548e0a4000e9a1e5a71"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NDk3Nw==", "bodyText": "I intentionally left it there as it's minimum effort. I anticipate we might change the way we implement this setting depending on feedback we'll get from testing.", "url": "https://github.com/elastic/elasticsearch/pull/57274#discussion_r431794977", "createdAt": "2020-05-28T12:24:36Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsProcessManager.java", "diffHunk": "@@ -438,12 +443,13 @@ private AnalyticsProcessConfig createProcessConfig(DataFrameDataExtractor dataEx\n                                                            ExtractedFields extractedFields) {\n             DataFrameDataExtractor.DataSummary dataSummary = dataExtractor.collectDataSummary();\n             Set<String> categoricalFields = dataExtractor.getCategoricalFields(config.getAnalysis());\n+            int threads = config.getMaxNumThreads() == null ? 1 : Math.min(config.getMaxNumThreads(), numAllocatedProcessors);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3NzE2MA=="}, "originalCommit": {"oid": "84c6fa4fbae0727fb7e15548e0a4000e9a1e5a71"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3837, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}