{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxODUxNTMy", "number": 66517, "title": "Docs adjustments for FIPS 140-2 support", "bodyText": "Adjust the wording around our FIPS 140-2 documentation to make\nit hopefully clearer.", "createdAt": "2020-12-17T13:04:15Z", "url": "https://github.com/elastic/elasticsearch/pull/66517", "merged": true, "mergeCommit": {"oid": "7c7e08456b758ab0720cf5d042b29ea009d195a2"}, "closed": true, "closedAt": "2020-12-23T12:10:33Z", "author": {"login": "jkakavas"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkEeYlgH2gAyNTQxODUxNTMyOjNlMGFjN2ExNGU1NGQ5NzQyNjczZWI0NmE1NDgzYjMzNDNhODE3Zjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdo9bTLAH2gAyNTQxODUxNTMyOmM2ZjRlYTY2YjZjOWZhN2QyZjU0NDk0MjlhZmQ5YmI2NDk2M2U4YWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3e0ac7a14e54d9742673eb46a5483b3343a817f9", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/3e0ac7a14e54d9742673eb46a5483b3343a817f9", "committedDate": "2020-12-08T06:51:19Z", "message": "FIPS 140-2 documentation changes and introduction of pbkdf2_stretch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9deb35335227bfb1e7901593a06ab3ca8b1336ac", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/9deb35335227bfb1e7901593a06ab3ca8b1336ac", "committedDate": "2020-12-09T19:00:08Z", "message": "address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edce8396a2a641733953de760ac4f71532e5f9d2", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/edce8396a2a641733953de760ac4f71532e5f9d2", "committedDate": "2020-12-17T13:19:36Z", "message": "fix link"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62cc56208abca4405c9f96475a4b1bf310035bde", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/62cc56208abca4405c9f96475a4b1bf310035bde", "committedDate": "2020-12-17T13:19:51Z", "message": "Merge remote-tracking branch 'origin/master' into fips140-7.11-docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31f7c38a065b33b966ff56b731d659d3744d5839", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/31f7c38a065b33b966ff56b731d659d3744d5839", "committedDate": "2020-12-17T14:19:40Z", "message": "fix another link"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTI0MTg5", "url": "https://github.com/elastic/elasticsearch/pull/66517#pullrequestreview-555124189", "createdAt": "2020-12-18T02:05:07Z", "commit": {"oid": "31f7c38a065b33b966ff56b731d659d3744d5839"}, "state": "APPROVED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMjowNTowN1rOIIQOQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMjoyNToyNlrOIIQmIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUyNTMxNA==", "bodyText": "Do we want to explicitly say that the JVM that is bundled with ES, is not configured to run with a FIPS certified security provider?", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545525314", "createdAt": "2020-12-18T02:05:07Z", "author": {"login": "tvernum"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -6,8 +6,11 @@ The Federal Information Processing Standard (FIPS) Publication 140-2, (FIPS PUB\n 140-2), titled \"Security Requirements for Cryptographic Modules\" is a U.S.\n government computer security standard used to approve cryptographic modules.\n {es} offers a FIPS 140-2 compliant mode and as such can run in a FIPS 140-2\n-enabled JVM. In order to set {es} in fips mode, you must set the\n-`xpack.security.fips_mode.enabled` to `true` in `elasticsearch.yml`\n+configured JVM.\n+\n+After ensuring that your JVM is properly configured according to FIPS 140-2 requirements\n+using the Java Security Provider of your choice, you can set {es} in fips mode\n+by setting the `xpack.security.fips_mode.enabled` to `true` in `elasticsearch.yml`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f7c38a065b33b966ff56b731d659d3744d5839"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUyOTE0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            properly configured FIPS  140-2 JVM. This enables {es} to take care of a couple\n          \n          \n            \n            properly configured FIPS 140-2 JVM. This enables {es} to take care of a couple", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545529146", "createdAt": "2020-12-18T02:17:54Z", "author": {"login": "tvernum"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -22,20 +25,23 @@ For {es}, adherence to FIPS 140-2 is ensured by\n === Upgrade considerations\n \n If you plan to upgrade your existing cluster to a version that can be run in\n-a FIPS 140-2 enabled JVM, the suggested approach is to first perform a rolling\n+a FIPS 140-2 configured JVM, the suggested approach is to first perform a rolling\n upgrade to the new version in your existing JVM and perform all necessary\n configuration changes in preparation for running in fips mode. You can then\n-perform a rolling restart of the nodes, this time starting each node in the FIPS\n-140-2 JVM. This enables {es} to take care of a couple of things automatically for you:\n+perform a rolling restart of the nodes, this time starting each node in a\n+properly configured FIPS  140-2 JVM. This enables {es} to take care of a couple", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f7c38a065b33b966ff56b731d659d3744d5839"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUyOTIxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              keystore is not password protected, you'd still need to manually set a password, see\n          \n          \n            \n              keystore is not password protected, you will still need to manually set a password, see", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545529217", "createdAt": "2020-12-18T02:18:10Z", "author": {"login": "tvernum"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -22,20 +25,23 @@ For {es}, adherence to FIPS 140-2 is ensured by\n === Upgrade considerations\n \n If you plan to upgrade your existing cluster to a version that can be run in\n-a FIPS 140-2 enabled JVM, the suggested approach is to first perform a rolling\n+a FIPS 140-2 configured JVM, the suggested approach is to first perform a rolling\n upgrade to the new version in your existing JVM and perform all necessary\n configuration changes in preparation for running in fips mode. You can then\n-perform a rolling restart of the nodes, this time starting each node in the FIPS\n-140-2 JVM. This enables {es} to take care of a couple of things automatically for you:\n+perform a rolling restart of the nodes, this time starting each node in a\n+properly configured FIPS  140-2 JVM. This enables {es} to take care of a couple\n+of things automatically for you:\n \n - <<secure-settings,Secure settings>> will be upgraded to the latest format version as\n-  previous format versions cannot be loaded in a FIPS 140-2 JVM.\n+  previous format versions cannot be loaded in a FIPS 140-2 JVM. If your elasticsearch\n+  keystore is not password protected, you'd still need to manually set a password, see", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f7c38a065b33b966ff56b731d659d3744d5839"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUyOTM4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            FIPS 140-2 ( via NIST Special Publication 800-132 ) dictates that encryption keys should at\n          \n          \n            \n            FIPS 140-2 (via NIST Special Publication 800-132) dictates that encryption keys should at", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545529389", "createdAt": "2020-12-18T02:18:40Z", "author": {"login": "tvernum"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -45,7 +51,22 @@ starting each node.\n \n Apart from setting `xpack.security.fips_mode.enabled`, a number of security\n related settings need to be configured accordingly in order to be compliant\n-and able to run {es} successfully in a FIPS 140-2 enabled JVM.\n+and able to run {es} successfully in a FIPS 140-2 configured JVM.\n+\n+[discrete]\n+[[keystore-fips-password]]\n+==== Elasticsearch Keystore\n+\n+FIPS 140-2 ( via NIST Special Publication 800-132 ) dictates that encryption keys should at", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f7c38a065b33b966ff56b731d659d3744d5839"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUyOTQ4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This means that the  password needs to be 14 bytes long which is equivalent\n          \n          \n            \n            This means that the password needs to be 14 bytes long which is equivalent", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545529485", "createdAt": "2020-12-18T02:18:57Z", "author": {"login": "tvernum"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -45,7 +51,22 @@ starting each node.\n \n Apart from setting `xpack.security.fips_mode.enabled`, a number of security\n related settings need to be configured accordingly in order to be compliant\n-and able to run {es} successfully in a FIPS 140-2 enabled JVM.\n+and able to run {es} successfully in a FIPS 140-2 configured JVM.\n+\n+[discrete]\n+[[keystore-fips-password]]\n+==== Elasticsearch Keystore\n+\n+FIPS 140-2 ( via NIST Special Publication 800-132 ) dictates that encryption keys should at\n+least have an effective strength of 112 bits.\n+As such, the elasticsearch keystore that stores the node's <<secure-settings,secure settings>>\n+needs to be password protected with a password that satisfies this requirement.\n+This means that the  password needs to be 14 bytes long which is equivalent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f7c38a065b33b966ff56b731d659d3744d5839"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUzMDkxNA==", "bodyText": "Just a personal view:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            function, it is affected by the 112 bit key strength requirement (see <<keystore-fips-password>>)\n          \n          \n            \n            even if that requirement does not apply to password hashing. In order to comply to this,\n          \n          \n            \n            function, your JVM security provider may enforce a 112 bit key strength requirement\n          \n          \n            \n            (see <<keystore-fips-password>>), and this requirement may affect password hashing\n          \n          \n            \n            in {es}, even though FIPS 140-2 does not mandate password standards for user\n          \n          \n            \n            authentication. In order to accommodate this requirement,", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545530914", "createdAt": "2020-12-18T02:23:52Z", "author": {"login": "tvernum"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -87,25 +108,37 @@ keys must have corresponding length according to the following table:\n [discrete]\n ==== Password Hashing\n \n-{es} offers a number of algorithms for securely hashing credentials in memory and\n-on disk. However, only the `PBKDF2` family of algorithms is compliant with FIPS\n-140-2 for password hashing. You must set the `cache.hash_algo` realm settings\n+While {es} offers a number of algorithms for securely hashing credentials in memory and\n+on disk, only the `PBKDF2` based family of algorithms is compliant with FIPS\n+140-2 for password hashing. However, since `PBKDF2` is essentially a key derivation\n+function, it is affected by the 112 bit key strength requirement (see <<keystore-fips-password>>)\n+even if that requirement does not apply to password hashing. In order to comply to this,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f7c38a065b33b966ff56b731d659d3744d5839"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUzMTQyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            credentials of existing users of the reserved, native and fle realms will not be\n          \n          \n            \n            credentials of existing users of the reserved, native and file realms will not be", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545531427", "createdAt": "2020-12-18T02:25:26Z", "author": {"login": "tvernum"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -87,25 +108,37 @@ keys must have corresponding length according to the following table:\n [discrete]\n ==== Password Hashing\n \n-{es} offers a number of algorithms for securely hashing credentials in memory and\n-on disk. However, only the `PBKDF2` family of algorithms is compliant with FIPS\n-140-2 for password hashing. You must set the `cache.hash_algo` realm settings\n+While {es} offers a number of algorithms for securely hashing credentials in memory and\n+on disk, only the `PBKDF2` based family of algorithms is compliant with FIPS\n+140-2 for password hashing. However, since `PBKDF2` is essentially a key derivation\n+function, it is affected by the 112 bit key strength requirement (see <<keystore-fips-password>>)\n+even if that requirement does not apply to password hashing. In order to comply to this,\n+while allowing you to use passwords that satisfy your security policy, {es} offers\n+<<hashing-settings, pbkdf2_stretch>> which is the suggested hashing algorithm when running\n+{es} in FIPS 140-2 environments. `pbkdf2_stretch` performs a single round of SHA-512\n+on the user password before passing it to the `PBKDF2` implementation.\n+\n+NOTE: You can still use one of the plain `pbkdf2` options instead of `pbkdf2_stretch` if\n+you have external policies and tools that can ensure all user passwords for the reserved,\n+native and file realms are longer than 14 bytes.\n+\n+You must set the `cache.hash_algo` realm settings\n and the `xpack.security.authc.password_hashing.algorithm` setting to one of the\n-available `PBKDF2` values.\n+available `pbkdf_stretch_*` values.\n See <<hashing-settings>>.\n \n Password hashing configuration changes are not retroactive so the stored hashed\n-credentials of existing users of the file and native realms will not be updated\n-on disk.\n-Authentication will still work, but in order to ensure FIPS 140-2 compliance,\n-you would need to recreate users or change their password using the\n-<<users-command, elasticsearch-user>> CLI tool for the file realm and the\n-<<security-api-put-user,create users>> and <<security-api-change-password,change\n-password>> APIs for the native realm.\n+credentials of existing users of the reserved, native and fle realms will not be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f7c38a065b33b966ff56b731d659d3744d5839"}, "originalPosition": 123}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ef2e66b48ce36c5c56d34a892c6085429563b6a", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/4ef2e66b48ce36c5c56d34a892c6085429563b6a", "committedDate": "2020-12-18T07:20:49Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Tim Vernum <tim@adjective.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/3dcd3108eabf9f429236055df9e61ea9aa9deae3", "committedDate": "2020-12-18T07:26:10Z", "message": "Add note about the bundled JVM"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NTk1MTY4", "url": "https://github.com/elastic/elasticsearch/pull/66517#pullrequestreview-555595168", "createdAt": "2020-12-18T15:38:00Z", "commit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "state": "APPROVED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTozODowMFrOIIoAuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNjo0NDo1MFrOIIqdWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkxNTA2NQ==", "bodyText": "Typo, but we don't need the word anyway.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              cofigured JVM (pointing `JAVA_HOME` environment variable to a different java\n          \n          \n            \n              JVM (pointing `JAVA_HOME` environment variable to a different Java", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545915065", "createdAt": "2020-12-18T15:38:00Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -117,8 +156,8 @@ features are not available while running in fips mode. The list is as follows:\n * Ingest Attachment Plugin\n * The <<certutil,`elasticsearch-certutil`>> tool. However,\n  `elasticsearch-certutil` can very well be used in a non FIPS 140-2\n-  enabled JVM (pointing `JAVA_HOME` environment variable to a different java\n+  cofigured JVM (pointing `JAVA_HOME` environment variable to a different java", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyMzQwNA==", "bodyText": "I'd flip the order of the paragraphs. That lets you streamline the wording.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            After ensuring that your JVM is properly configured according to FIPS 140-2 requirements\n          \n          \n            \n            using the Java Security Provider of your choice, you can set {es} in fips mode\n          \n          \n            \n            by setting the `xpack.security.fips_mode.enabled` to `true` in `elasticsearch.yml`\n          \n          \n            \n            \n          \n          \n            \n            NOTE: The JVM that is bundled with {es} is not configured to run with a FIPS 140-2\n          \n          \n            \n            certified Java Security Provider. You either need to configure this according to\n          \n          \n            \n            FIPS 140-2 requirements, or point {es} to an already configured external JVM.\n          \n          \n            \n            IMPORTANT: The JVM bundled with {es} is not configured for FIPS 140-2. You must\n          \n          \n            \n            either configure the bundled JVM to run with a FIPS 140-2 certified Java\n          \n          \n            \n            Security Provider or use an external JVM configured for FIPS 140-2.\n          \n          \n            \n            \n          \n          \n            \n            After configuring your JVM for FIPS 140-2, you can run {es} in FIPS mode by\n          \n          \n            \n            setting the `xpack.security.fips_mode.enabled` to `true` in `elasticsearch.yml`.", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545923404", "createdAt": "2020-12-18T15:51:22Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -6,8 +6,15 @@ The Federal Information Processing Standard (FIPS) Publication 140-2, (FIPS PUB\n 140-2), titled \"Security Requirements for Cryptographic Modules\" is a U.S.\n government computer security standard used to approve cryptographic modules.\n {es} offers a FIPS 140-2 compliant mode and as such can run in a FIPS 140-2\n-enabled JVM. In order to set {es} in fips mode, you must set the\n-`xpack.security.fips_mode.enabled` to `true` in `elasticsearch.yml`\n+configured JVM.\n+\n+After ensuring that your JVM is properly configured according to FIPS 140-2 requirements\n+using the Java Security Provider of your choice, you can set {es} in fips mode\n+by setting the `xpack.security.fips_mode.enabled` to `true` in `elasticsearch.yml`\n+\n+NOTE: The JVM that is bundled with {es} is not configured to run with a FIPS 140-2\n+certified Java Security Provider. You either need to configure this according to\n+FIPS 140-2 requirements, or point {es} to an already configured external JVM.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNDUyNw==", "bodyText": "Tried to streamline this a little:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            perform a rolling restart of the nodes, this time starting each node in a\n          \n          \n            \n            properly configured FIPS 140-2 JVM. This enables {es} to take care of a couple\n          \n          \n            \n            of things automatically for you:\n          \n          \n            \n            perform a rolling restart of the nodes, starting each node in a FIPS 140-2 JVM.\n          \n          \n            \n            During each restart, {es}:", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545924527", "createdAt": "2020-12-18T15:53:10Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -22,20 +29,23 @@ For {es}, adherence to FIPS 140-2 is ensured by\n === Upgrade considerations\n \n If you plan to upgrade your existing cluster to a version that can be run in\n-a FIPS 140-2 enabled JVM, the suggested approach is to first perform a rolling\n+a FIPS 140-2 configured JVM, the suggested approach is to first perform a rolling\n upgrade to the new version in your existing JVM and perform all necessary\n configuration changes in preparation for running in fips mode. You can then\n-perform a rolling restart of the nodes, this time starting each node in the FIPS\n-140-2 JVM. This enables {es} to take care of a couple of things automatically for you:\n+perform a rolling restart of the nodes, this time starting each node in a\n+properly configured FIPS 140-2 JVM. This enables {es} to take care of a couple\n+of things automatically for you:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNzA5Ng==", "bodyText": "This rewords to avoid future tense and passive voice.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - <<secure-settings,Secure settings>> will be upgraded to the latest format version as\n          \n          \n            \n              previous format versions cannot be loaded in a FIPS 140-2 JVM.\n          \n          \n            \n              previous format versions cannot be loaded in a FIPS 140-2 JVM. If your elasticsearch\n          \n          \n            \n              keystore is not password protected, you will still need to manually set a password, see\n          \n          \n            \n              the <<keystore-fips-password, keystore>> section.\n          \n          \n            \n            - Upgrades <<secure-settings,secure settings>> to the latest compliant format.\n          \n          \n            \n            A FIPS 140-2 JVM cannot load previous format versions. If your keystore is\n          \n          \n            \n            not password-protected, you must manually set a password. See\n          \n          \n            \n            <<keystore-fips-password>>.", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545927096", "createdAt": "2020-12-18T15:57:17Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -22,20 +29,23 @@ For {es}, adherence to FIPS 140-2 is ensured by\n === Upgrade considerations\n \n If you plan to upgrade your existing cluster to a version that can be run in\n-a FIPS 140-2 enabled JVM, the suggested approach is to first perform a rolling\n+a FIPS 140-2 configured JVM, the suggested approach is to first perform a rolling\n upgrade to the new version in your existing JVM and perform all necessary\n configuration changes in preparation for running in fips mode. You can then\n-perform a rolling restart of the nodes, this time starting each node in the FIPS\n-140-2 JVM. This enables {es} to take care of a couple of things automatically for you:\n+perform a rolling restart of the nodes, this time starting each node in a\n+properly configured FIPS 140-2 JVM. This enables {es} to take care of a couple\n+of things automatically for you:\n \n - <<secure-settings,Secure settings>> will be upgraded to the latest format version as\n-  previous format versions cannot be loaded in a FIPS 140-2 JVM.\n+  previous format versions cannot be loaded in a FIPS 140-2 JVM. If your elasticsearch\n+  keystore is not password protected, you will still need to manually set a password, see\n+  the <<keystore-fips-password, keystore>> section.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNzUyOA==", "bodyText": "Updates this for consistency.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Self-generated trial licenses will be upgraded to the latest format that\n          \n          \n            \n              is compliant with FIPS 140-2.\n          \n          \n            \n            - Upgrades self-generated trial licenses to the latest FIPS 140-2 compliant format.", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545927528", "createdAt": "2020-12-18T15:58:02Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -22,20 +29,23 @@ For {es}, adherence to FIPS 140-2 is ensured by\n === Upgrade considerations\n \n If you plan to upgrade your existing cluster to a version that can be run in\n-a FIPS 140-2 enabled JVM, the suggested approach is to first perform a rolling\n+a FIPS 140-2 configured JVM, the suggested approach is to first perform a rolling\n upgrade to the new version in your existing JVM and perform all necessary\n configuration changes in preparation for running in fips mode. You can then\n-perform a rolling restart of the nodes, this time starting each node in the FIPS\n-140-2 JVM. This enables {es} to take care of a couple of things automatically for you:\n+perform a rolling restart of the nodes, this time starting each node in a\n+properly configured FIPS 140-2 JVM. This enables {es} to take care of a couple\n+of things automatically for you:\n \n - <<secure-settings,Secure settings>> will be upgraded to the latest format version as\n-  previous format versions cannot be loaded in a FIPS 140-2 JVM.\n+  previous format versions cannot be loaded in a FIPS 140-2 JVM. If your elasticsearch\n+  keystore is not password protected, you will still need to manually set a password, see\n+  the <<keystore-fips-password, keystore>> section.\n - Self-generated trial licenses will be upgraded to the latest format that\n   is compliant with FIPS 140-2.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNzc2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you already have a {subscriptions}[subscription] that supports FIPS 140-2 mode, you\n          \n          \n            \n            If your {subscriptions}[subscription] already supports FIPS 140-2 mode, you", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545927761", "createdAt": "2020-12-18T15:58:25Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -22,20 +29,23 @@ For {es}, adherence to FIPS 140-2 is ensured by\n === Upgrade considerations\n \n If you plan to upgrade your existing cluster to a version that can be run in\n-a FIPS 140-2 enabled JVM, the suggested approach is to first perform a rolling\n+a FIPS 140-2 configured JVM, the suggested approach is to first perform a rolling\n upgrade to the new version in your existing JVM and perform all necessary\n configuration changes in preparation for running in fips mode. You can then\n-perform a rolling restart of the nodes, this time starting each node in the FIPS\n-140-2 JVM. This enables {es} to take care of a couple of things automatically for you:\n+perform a rolling restart of the nodes, this time starting each node in a\n+properly configured FIPS 140-2 JVM. This enables {es} to take care of a couple\n+of things automatically for you:\n \n - <<secure-settings,Secure settings>> will be upgraded to the latest format version as\n-  previous format versions cannot be loaded in a FIPS 140-2 JVM.\n+  previous format versions cannot be loaded in a FIPS 140-2 JVM. If your elasticsearch\n+  keystore is not password protected, you will still need to manually set a password, see\n+  the <<keystore-fips-password, keystore>> section.\n - Self-generated trial licenses will be upgraded to the latest format that\n   is compliant with FIPS 140-2.\n \n-If you have a {subscriptions}[subscription] that supports FIPS 140-2 mode, you\n+If you already have a {subscriptions}[subscription] that supports FIPS 140-2 mode, you", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkzMjg1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ==== Elasticsearch Keystore\n          \n          \n            \n            ==== {es} keystore", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545932856", "createdAt": "2020-12-18T16:07:22Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -45,7 +55,22 @@ starting each node.\n \n Apart from setting `xpack.security.fips_mode.enabled`, a number of security\n related settings need to be configured accordingly in order to be compliant\n-and able to run {es} successfully in a FIPS 140-2 enabled JVM.\n+and able to run {es} successfully in a FIPS 140-2 configured JVM.\n+\n+[discrete]\n+[[keystore-fips-password]]\n+==== Elasticsearch Keystore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkzMjk0Mw==", "bodyText": "It doesn't seem like the NIST Special Publication 800-132 is needed.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            FIPS 140-2 (via NIST Special Publication 800-132) dictates that encryption keys should at\n          \n          \n            \n            least have an effective strength of 112 bits.\n          \n          \n            \n            As such, the elasticsearch keystore that stores the node's <<secure-settings,secure settings>>\n          \n          \n            \n            needs to be password protected with a password that satisfies this requirement.\n          \n          \n            \n            This means that the password needs to be 14 bytes long which is equivalent\n          \n          \n            \n            to a 14 character ASCII encoded password, or a 7 character UTF-8 encoded password.\n          \n          \n            \n            You can use the <<elasticsearch-keystore, elasticsearch-keystore passwd>> subcommand to change or set the\n          \n          \n            \n            password of an existing keystore.\n          \n          \n            \n            Note that when the keystore is password-protected, you must supply the password each time\n          \n          \n            \n            Elasticsearch starts.\n          \n          \n            \n            FIPS 140-2 states encryption keys must have an effective strength of at least\n          \n          \n            \n            112 bits. To satisfy this requirement, the {es} keystore password must be at\n          \n          \n            \n            least 14 bytes long, equivalent to a 14-character ASCII password or a\n          \n          \n            \n            7-character UTF-8 password. Use the\n          \n          \n            \n            <<elasticsearch-keystore,`elasticsearch-keystore passwd`>> subcommand to set or\n          \n          \n            \n            change an existing keystore's password. You must provide this password each time\n          \n          \n            \n            {es} starts.", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545932943", "createdAt": "2020-12-18T16:07:29Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -45,7 +55,22 @@ starting each node.\n \n Apart from setting `xpack.security.fips_mode.enabled`, a number of security\n related settings need to be configured accordingly in order to be compliant\n-and able to run {es} successfully in a FIPS 140-2 enabled JVM.\n+and able to run {es} successfully in a FIPS 140-2 configured JVM.\n+\n+[discrete]\n+[[keystore-fips-password]]\n+==== Elasticsearch Keystore\n+\n+FIPS 140-2 (via NIST Special Publication 800-132) dictates that encryption keys should at\n+least have an effective strength of 112 bits.\n+As such, the elasticsearch keystore that stores the node's <<secure-settings,secure settings>>\n+needs to be password protected with a password that satisfies this requirement.\n+This means that the password needs to be 14 bytes long which is equivalent\n+to a 14 character ASCII encoded password, or a 7 character UTF-8 encoded password.\n+You can use the <<elasticsearch-keystore, elasticsearch-keystore passwd>> subcommand to change or set the\n+password of an existing keystore.\n+Note that when the keystore is password-protected, you must supply the password each time\n+Elasticsearch starts.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkzMzY0MA==", "bodyText": "Streamline this a bit.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            can be used in a FIPS 140-2 configured JVM however, so you must refrain from using\n          \n          \n            \n            can be used in a FIPS 140-2 JVM. Avoid using", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545933640", "createdAt": "2020-12-18T16:08:38Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -59,14 +84,14 @@ are configured by default in {es} are FIPS 140-2 compliant and as such can be\n used in a FIPS 140-2 JVM. See <<ssl-tls-settings,`ssl.cipher_suites`>>.\n \n [discrete]\n-==== TLS Keystores and keys\n+==== TLS keystores and keys\n \n Keystores can be used in a number of <<ssl-tls-settings>> in order to\n conveniently store key and trust material. Neither `JKS`, nor `PKCS#12` keystores\n-can be used in a FIPS 140-2 enabled JVM however, so you must refrain from using\n-these keystores.  Your FIPS 140-2 provider may provide a compliant keystore that\n-can be used or you can use PEM encoded files. To use PEM encoded key material,\n-you can use the relevant `\\*.key` and `*.certificate` configuration\n+can be used in a FIPS 140-2 configured JVM however, so you must refrain from using", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkzNjM2Nw==", "bodyText": "Style nit: Use serial commas.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            native and file realms are longer than 14 bytes.\n          \n          \n            \n            native, and file realms are longer than 14 bytes.", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545936367", "createdAt": "2020-12-18T16:13:16Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -87,25 +112,39 @@ keys must have corresponding length according to the following table:\n [discrete]\n ==== Password Hashing\n \n-{es} offers a number of algorithms for securely hashing credentials in memory and\n-on disk. However, only the `PBKDF2` family of algorithms is compliant with FIPS\n-140-2 for password hashing. You must set the `cache.hash_algo` realm settings\n+While {es} offers a number of algorithms for securely hashing credentials in memory and\n+on disk, only the `PBKDF2` based family of algorithms is compliant with FIPS\n+140-2 for password hashing. However, since `PBKDF2` is essentially a key derivation\n+function, your JVM security provider may enforce a 112 bit key strength requirement\n+(see <<keystore-fips-password>>), and this requirement may affect password hashing\n+in {es}, even though FIPS 140-2 does not mandate password standards for user\n+authentication. In order to accommodate this requirement, \n+while allowing you to use passwords that satisfy your security policy, {es} offers\n+<<hashing-settings, pbkdf2_stretch>> which is the suggested hashing algorithm when running\n+{es} in FIPS 140-2 environments. `pbkdf2_stretch` performs a single round of SHA-512\n+on the user password before passing it to the `PBKDF2` implementation.\n+\n+NOTE: You can still use one of the plain `pbkdf2` options instead of `pbkdf2_stretch` if\n+you have external policies and tools that can ensure all user passwords for the reserved,\n+native and file realms are longer than 14 bytes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkzNjY0NA==", "bodyText": "Style nits: Avoid future tense. Use serial commas.\nWe could probably reword to avoid passive voice too, but that may not be needed.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            credentials of existing users of the reserved, native and file realms will not be\n          \n          \n            \n            credentials of existing users of the reserved, native, and file realms are not", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545936644", "createdAt": "2020-12-18T16:13:43Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -87,25 +112,39 @@ keys must have corresponding length according to the following table:\n [discrete]\n ==== Password Hashing\n \n-{es} offers a number of algorithms for securely hashing credentials in memory and\n-on disk. However, only the `PBKDF2` family of algorithms is compliant with FIPS\n-140-2 for password hashing. You must set the `cache.hash_algo` realm settings\n+While {es} offers a number of algorithms for securely hashing credentials in memory and\n+on disk, only the `PBKDF2` based family of algorithms is compliant with FIPS\n+140-2 for password hashing. However, since `PBKDF2` is essentially a key derivation\n+function, your JVM security provider may enforce a 112 bit key strength requirement\n+(see <<keystore-fips-password>>), and this requirement may affect password hashing\n+in {es}, even though FIPS 140-2 does not mandate password standards for user\n+authentication. In order to accommodate this requirement, \n+while allowing you to use passwords that satisfy your security policy, {es} offers\n+<<hashing-settings, pbkdf2_stretch>> which is the suggested hashing algorithm when running\n+{es} in FIPS 140-2 environments. `pbkdf2_stretch` performs a single round of SHA-512\n+on the user password before passing it to the `PBKDF2` implementation.\n+\n+NOTE: You can still use one of the plain `pbkdf2` options instead of `pbkdf2_stretch` if\n+you have external policies and tools that can ensure all user passwords for the reserved,\n+native and file realms are longer than 14 bytes.\n+\n+You must set the `cache.hash_algo` realm settings\n and the `xpack.security.authc.password_hashing.algorithm` setting to one of the\n-available `PBKDF2` values.\n+available `pbkdf_stretch_*` values.\n See <<hashing-settings>>.\n \n Password hashing configuration changes are not retroactive so the stored hashed\n-credentials of existing users of the file and native realms will not be updated\n-on disk.\n-Authentication will still work, but in order to ensure FIPS 140-2 compliance,\n-you would need to recreate users or change their password using the\n-<<users-command, elasticsearch-user>> CLI tool for the file realm and the\n-<<security-api-put-user,create users>> and <<security-api-change-password,change\n-password>> APIs for the native realm.\n+credentials of existing users of the reserved, native and file realms will not be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkzNjc5OQ==", "bodyText": "A little streamlining.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In order to ensure FIPS 140-2 compliance, you would need to recreate users or\n          \n          \n            \n            To ensure FIPS 140-2 compliance, recreate users or", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545936799", "createdAt": "2020-12-18T16:13:58Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -87,25 +112,39 @@ keys must have corresponding length according to the following table:\n [discrete]\n ==== Password Hashing\n \n-{es} offers a number of algorithms for securely hashing credentials in memory and\n-on disk. However, only the `PBKDF2` family of algorithms is compliant with FIPS\n-140-2 for password hashing. You must set the `cache.hash_algo` realm settings\n+While {es} offers a number of algorithms for securely hashing credentials in memory and\n+on disk, only the `PBKDF2` based family of algorithms is compliant with FIPS\n+140-2 for password hashing. However, since `PBKDF2` is essentially a key derivation\n+function, your JVM security provider may enforce a 112 bit key strength requirement\n+(see <<keystore-fips-password>>), and this requirement may affect password hashing\n+in {es}, even though FIPS 140-2 does not mandate password standards for user\n+authentication. In order to accommodate this requirement, \n+while allowing you to use passwords that satisfy your security policy, {es} offers\n+<<hashing-settings, pbkdf2_stretch>> which is the suggested hashing algorithm when running\n+{es} in FIPS 140-2 environments. `pbkdf2_stretch` performs a single round of SHA-512\n+on the user password before passing it to the `PBKDF2` implementation.\n+\n+NOTE: You can still use one of the plain `pbkdf2` options instead of `pbkdf2_stretch` if\n+you have external policies and tools that can ensure all user passwords for the reserved,\n+native and file realms are longer than 14 bytes.\n+\n+You must set the `cache.hash_algo` realm settings\n and the `xpack.security.authc.password_hashing.algorithm` setting to one of the\n-available `PBKDF2` values.\n+available `pbkdf_stretch_*` values.\n See <<hashing-settings>>.\n \n Password hashing configuration changes are not retroactive so the stored hashed\n-credentials of existing users of the file and native realms will not be updated\n-on disk.\n-Authentication will still work, but in order to ensure FIPS 140-2 compliance,\n-you would need to recreate users or change their password using the\n-<<users-command, elasticsearch-user>> CLI tool for the file realm and the\n-<<security-api-put-user,create users>> and <<security-api-change-password,change\n-password>> APIs for the native realm.\n+credentials of existing users of the reserved, native and file realms will not be\n+updated on disk.\n+In order to ensure FIPS 140-2 compliance, you would need to recreate users or", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkzNjk3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            using the compliant `PBKDF2` based algorithm you have selected.\n          \n          \n            \n            using the `PBKDF2` algorithm you selected.", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545936979", "createdAt": "2020-12-18T16:14:18Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -87,25 +112,39 @@ keys must have corresponding length according to the following table:\n [discrete]\n ==== Password Hashing\n \n-{es} offers a number of algorithms for securely hashing credentials in memory and\n-on disk. However, only the `PBKDF2` family of algorithms is compliant with FIPS\n-140-2 for password hashing. You must set the `cache.hash_algo` realm settings\n+While {es} offers a number of algorithms for securely hashing credentials in memory and\n+on disk, only the `PBKDF2` based family of algorithms is compliant with FIPS\n+140-2 for password hashing. However, since `PBKDF2` is essentially a key derivation\n+function, your JVM security provider may enforce a 112 bit key strength requirement\n+(see <<keystore-fips-password>>), and this requirement may affect password hashing\n+in {es}, even though FIPS 140-2 does not mandate password standards for user\n+authentication. In order to accommodate this requirement, \n+while allowing you to use passwords that satisfy your security policy, {es} offers\n+<<hashing-settings, pbkdf2_stretch>> which is the suggested hashing algorithm when running\n+{es} in FIPS 140-2 environments. `pbkdf2_stretch` performs a single round of SHA-512\n+on the user password before passing it to the `PBKDF2` implementation.\n+\n+NOTE: You can still use one of the plain `pbkdf2` options instead of `pbkdf2_stretch` if\n+you have external policies and tools that can ensure all user passwords for the reserved,\n+native and file realms are longer than 14 bytes.\n+\n+You must set the `cache.hash_algo` realm settings\n and the `xpack.security.authc.password_hashing.algorithm` setting to one of the\n-available `PBKDF2` values.\n+available `pbkdf_stretch_*` values.\n See <<hashing-settings>>.\n \n Password hashing configuration changes are not retroactive so the stored hashed\n-credentials of existing users of the file and native realms will not be updated\n-on disk.\n-Authentication will still work, but in order to ensure FIPS 140-2 compliance,\n-you would need to recreate users or change their password using the\n-<<users-command, elasticsearch-user>> CLI tool for the file realm and the\n-<<security-api-put-user,create users>> and <<security-api-change-password,change\n-password>> APIs for the native realm.\n+credentials of existing users of the reserved, native and file realms will not be\n+updated on disk.\n+In order to ensure FIPS 140-2 compliance, you would need to recreate users or\n+change their password using the <<users-command, elasticsearch-user>> CLI tool\n+for the file realm and the <<security-api-put-user,create users>> and\n+<<security-api-change-password,change password>> APIs for the native and reserved realms.\n+Other types of realms are not affected and do not require any changes.\n \n The user cache will be emptied upon node restart, so any existing hashes using\n non-compliant algorithms will be discarded and the new ones will be created\n-using the compliant `PBKDF2` algorithm you have selected.\n+using the compliant `PBKDF2` based algorithm you have selected.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk0MjEzOA==", "bodyText": "Streamlines a bit to remove the parenthetical.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            function, your JVM security provider may enforce a 112 bit key strength requirement\n          \n          \n            \n            (see <<keystore-fips-password>>), and this requirement may affect password hashing\n          \n          \n            \n            in {es}, even though FIPS 140-2 does not mandate password standards for user\n          \n          \n            \n            authentication. In order to accommodate this requirement, \n          \n          \n            \n            while allowing you to use passwords that satisfy your security policy, {es} offers\n          \n          \n            \n            function, your JVM security provider may enforce a\n          \n          \n            \n            <<keystore-fips-password,112-bit key strength requirement>>. Although FIPS 140-2\n          \n          \n            \n            does not mandate user password standards, this requirement may affect password\n          \n          \n            \n            hashing in {es}. To comply with this requirement and your security policy, {es} offers", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545942138", "createdAt": "2020-12-18T16:22:53Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -87,25 +112,39 @@ keys must have corresponding length according to the following table:\n [discrete]\n ==== Password Hashing\n \n-{es} offers a number of algorithms for securely hashing credentials in memory and\n-on disk. However, only the `PBKDF2` family of algorithms is compliant with FIPS\n-140-2 for password hashing. You must set the `cache.hash_algo` realm settings\n+While {es} offers a number of algorithms for securely hashing credentials in memory and\n+on disk, only the `PBKDF2` based family of algorithms is compliant with FIPS\n+140-2 for password hashing. However, since `PBKDF2` is essentially a key derivation\n+function, your JVM security provider may enforce a 112 bit key strength requirement\n+(see <<keystore-fips-password>>), and this requirement may affect password hashing\n+in {es}, even though FIPS 140-2 does not mandate password standards for user\n+authentication. In order to accommodate this requirement, \n+while allowing you to use passwords that satisfy your security policy, {es} offers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk0OTAzMg==", "bodyText": "Style nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            these types of keystores.  Your FIPS 140-2 provider may provide a compliant keystore\n          \n          \n            \n            these types of keystores. Your FIPS 140-2 provider may provide a compliant keystore", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545949032", "createdAt": "2020-12-18T16:34:26Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -59,14 +84,14 @@ are configured by default in {es} are FIPS 140-2 compliant and as such can be\n used in a FIPS 140-2 JVM. See <<ssl-tls-settings,`ssl.cipher_suites`>>.\n \n [discrete]\n-==== TLS Keystores and keys\n+==== TLS keystores and keys\n \n Keystores can be used in a number of <<ssl-tls-settings>> in order to\n conveniently store key and trust material. Neither `JKS`, nor `PKCS#12` keystores\n-can be used in a FIPS 140-2 enabled JVM however, so you must refrain from using\n-these keystores.  Your FIPS 140-2 provider may provide a compliant keystore that\n-can be used or you can use PEM encoded files. To use PEM encoded key material,\n-you can use the relevant `\\*.key` and `*.certificate` configuration\n+can be used in a FIPS 140-2 configured JVM however, so you must refrain from using\n+these types of keystores.  Your FIPS 140-2 provider may provide a compliant keystore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk1MDY4OQ==", "bodyText": "I think we can just go with FIPS 140-2 JVM from here out. Users should know what we're referencing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            a FIPS 140-2 configured JVM, the suggested approach is to first perform a rolling\n          \n          \n            \n            a FIPS 140-2 JVM,  we recommend first perform a rolling", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545950689", "createdAt": "2020-12-18T16:37:16Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -22,20 +29,23 @@ For {es}, adherence to FIPS 140-2 is ensured by\n === Upgrade considerations\n \n If you plan to upgrade your existing cluster to a version that can be run in\n-a FIPS 140-2 enabled JVM, the suggested approach is to first perform a rolling\n+a FIPS 140-2 configured JVM, the suggested approach is to first perform a rolling", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk1MjQxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              can be later used in the FIPS 140-2 configured JVM.\n          \n          \n            \n              can be later used in the FIPS 140-2 JVM.", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545952419", "createdAt": "2020-12-18T16:40:09Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -117,8 +156,8 @@ features are not available while running in fips mode. The list is as follows:\n * Ingest Attachment Plugin\n * The <<certutil,`elasticsearch-certutil`>> tool. However,\n  `elasticsearch-certutil` can very well be used in a non FIPS 140-2\n-  enabled JVM (pointing `JAVA_HOME` environment variable to a different java\n+  cofigured JVM (pointing `JAVA_HOME` environment variable to a different java\n   installation) in order to generate the keys and certificates that\n-  can be later used in the FIPS 140-2 enabled JVM.\n-* The SQL CLI client cannot run in a FIPS 140-2 enabled JVM while using\n+  can be later used in the FIPS 140-2 configured JVM.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk1MjQ2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * The SQL CLI client cannot run in a FIPS 140-2 configured JVM while using\n          \n          \n            \n            * The SQL CLI client cannot run in a FIPS 140-2 JVM while using", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545952466", "createdAt": "2020-12-18T16:40:13Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -117,8 +156,8 @@ features are not available while running in fips mode. The list is as follows:\n * Ingest Attachment Plugin\n * The <<certutil,`elasticsearch-certutil`>> tool. However,\n  `elasticsearch-certutil` can very well be used in a non FIPS 140-2\n-  enabled JVM (pointing `JAVA_HOME` environment variable to a different java\n+  cofigured JVM (pointing `JAVA_HOME` environment variable to a different java\n   installation) in order to generate the keys and certificates that\n-  can be later used in the FIPS 140-2 enabled JVM.\n-* The SQL CLI client cannot run in a FIPS 140-2 enabled JVM while using\n+  can be later used in the FIPS 140-2 configured JVM.\n+* The SQL CLI client cannot run in a FIPS 140-2 configured JVM while using", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk1NTE2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            and able to run {es} successfully in a FIPS 140-2 configured JVM.\n          \n          \n            \n            and able to run {es} successfully in a FIPS 140-2 JVM.", "url": "https://github.com/elastic/elasticsearch/pull/66517#discussion_r545955163", "createdAt": "2020-12-18T16:44:50Z", "author": {"login": "jrodewig"}, "path": "x-pack/docs/en/security/fips-140-compliance.asciidoc", "diffHunk": "@@ -45,7 +55,22 @@ starting each node.\n \n Apart from setting `xpack.security.fips_mode.enabled`, a number of security\n related settings need to be configured accordingly in order to be compliant\n-and able to run {es} successfully in a FIPS 140-2 enabled JVM.\n+and able to run {es} successfully in a FIPS 140-2 configured JVM.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcd3108eabf9f429236055df9e61ea9aa9deae3"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6f4ea66b6c9fa7d2f5449429afd9bb64963e8aa", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/c6f4ea66b6c9fa7d2f5449429afd9bb64963e8aa", "committedDate": "2020-12-23T11:28:14Z", "message": "feedback from review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4473, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}