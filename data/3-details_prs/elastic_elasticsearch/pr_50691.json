{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NzUyMzMz", "number": 50691, "title": "Teach ObjectParser a happy pattern", "bodyText": "We very commonly have object with ctors like:\npublic Foo(String name)\n\nAnd then declare a bunch of setters on the object. Every aggregation\nworks like this, for example. This change teaches ObjectParser how to\nbuild these aggregations all on its own, without any help. This'll make\nit much cleaner to parse aggs, and, probably, a bunch of other things.\nIt'll let us remove lots of wrapping. I've used this new power for the\navg aggregation just to prove that it works outside of a unit test.", "createdAt": "2020-01-06T23:10:24Z", "url": "https://github.com/elastic/elasticsearch/pull/50691", "merged": true, "mergeCommit": {"oid": "792b5e150bd33406e27db6f97f0ab99a5895bb94"}, "closed": true, "closedAt": "2020-01-07T15:55:18Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb30Yc0AH2gAyMzU5NzUyMzMzOjdkNGJkZmI5MmE1ZjM3ZWFlNmFlYzAwZTc0Mzg2MzI5NjZlYzc4NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4BEFJgH2gAyMzU5NzUyMzMzOmNhYzRkYmY5OTgxNDkwYjFlNDUyMDMwMTA2ZTdlMDAwODM1YzE0NDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7d4bdfb92a5f37eae6aec00e7438632966ec7852", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/7d4bdfb92a5f37eae6aec00e7438632966ec7852", "committedDate": "2020-01-06T23:02:32Z", "message": "Teach ObjectParser a happy pattern\n\nWe *very* commonly have object with ctors like:\n```\npublic Foo(String name)\n```\n\nAnd then declare a bunch of setters on the object. Every aggregation\nworks like this, for example. This change teaches `ObjectParser` how to\nbuild these aggregations all on its own, without any help. This'll make\nit much cleaner to parse aggs, and, probably, a bunch of other things.\nIt'll let us remove lots of wrapping. I've used this new power for the\n`avg` aggregation just to prove that it works outside of a unit test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4OTg1ODI1", "url": "https://github.com/elastic/elasticsearch/pull/50691#pullrequestreview-338985825", "createdAt": "2020-01-07T01:15:54Z", "commit": {"oid": "7d4bdfb92a5f37eae6aec00e7438632966ec7852"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMToxNTo1NFrOFatoSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMToxNTo1NFrOFatoSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU1NDg4OA==", "bodyText": "From here the payoff doesn't look that good, but we can remove the parses method entirely in a follow-up  and call the parser directly. We can't do it right now because the order of the arguments is backwards.", "url": "https://github.com/elastic/elasticsearch/pull/50691#discussion_r363554888", "createdAt": "2020-01-07T01:15:54Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/AvgAggregationBuilder.java", "diffHunk": "@@ -42,14 +42,13 @@\n public class AvgAggregationBuilder extends ValuesSourceAggregationBuilder.LeafOnly<ValuesSource.Numeric, AvgAggregationBuilder> {\n     public static final String NAME = \"avg\";\n \n-    private static final ObjectParser<AvgAggregationBuilder, Void> PARSER;\n+    private static final ObjectParser<AvgAggregationBuilder, String> PARSER = new ObjectParser<>(NAME, AvgAggregationBuilder::new);\n     static {\n-        PARSER = new ObjectParser<>(AvgAggregationBuilder.NAME);\n         ValuesSourceParserHelper.declareNumericFields(PARSER, true, true, false);\n     }\n \n     public static AggregationBuilder parse(String aggregationName, XContentParser parser) throws IOException {\n-        return PARSER.parse(parser, new AvgAggregationBuilder(aggregationName), null);\n+        return PARSER.parse(parser, aggregationName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4bdfb92a5f37eae6aec00e7438632966ec7852"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4OTg2MTM2", "url": "https://github.com/elastic/elasticsearch/pull/50691#pullrequestreview-338986136", "createdAt": "2020-01-07T01:16:59Z", "commit": {"oid": "7d4bdfb92a5f37eae6aec00e7438632966ec7852"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMToxNjo1OVrOFatpRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMToxNjo1OVrOFatpRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU1NTE0Mw==", "bodyText": "All of these are because it couldn't compile now that there are two methods that take two args. It is better not to have the null anyway.", "url": "https://github.com/elastic/elasticsearch/pull/50691#discussion_r363555143", "createdAt": "2020-01-07T01:16:59Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/rescore/QueryRescorerBuilder.java", "diffHunk": "@@ -45,7 +45,7 @@\n     private static final ParseField RESCORE_QUERY_WEIGHT_FIELD = new ParseField(\"rescore_query_weight\");\n     private static final ParseField SCORE_MODE_FIELD = new ParseField(\"score_mode\");\n \n-    private static final ObjectParser<InnerBuilder, Void> QUERY_RESCORE_PARSER = new ObjectParser<>(NAME, null);\n+    private static final ObjectParser<InnerBuilder, Void> QUERY_RESCORE_PARSER = new ObjectParser<>(NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4bdfb92a5f37eae6aec00e7438632966ec7852"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4OTg2NDk3", "url": "https://github.com/elastic/elasticsearch/pull/50691#pullrequestreview-338986497", "createdAt": "2020-01-07T01:18:22Z", "commit": {"oid": "7d4bdfb92a5f37eae6aec00e7438632966ec7852"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMToxODoyMlrOFatqiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMToxODoyMlrOFatqiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU1NTQ2NA==", "bodyText": "This is because there are two ctors on atomic reference. One that looks like a function and one that looks like a supplier. The compiler was confused when I passed ::new to the ctor.", "url": "https://github.com/elastic/elasticsearch/pull/50691#discussion_r363555464", "createdAt": "2020-01-07T01:18:22Z", "author": {"login": "nik9000"}, "path": "libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java", "diffHunk": "@@ -634,8 +637,9 @@ public void setArray(List<Object> testArray) {\n         assertThat(ex.getMessage(), containsString(\"[foo] failed to parse field [int_array]\"));\n     }\n \n+    private static final Supplier<AtomicReference<String>> NEW_EMPTY_STRING_REF = AtomicReference::new;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4bdfb92a5f37eae6aec00e7438632966ec7852"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTE5Njc0", "url": "https://github.com/elastic/elasticsearch/pull/50691#pullrequestreview-339119674", "createdAt": "2020-01-07T09:29:39Z", "commit": {"oid": "7d4bdfb92a5f37eae6aec00e7438632966ec7852"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cac4dbf9981490b1e452030106e7e000835c1443", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/cac4dbf9981490b1e452030106e7e000835c1443", "committedDate": "2020-01-07T13:49:03Z", "message": "Named ctor"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3859, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}