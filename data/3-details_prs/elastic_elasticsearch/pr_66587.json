{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNDc3ODI1", "number": 66587, "title": "Reduce Overhead of RepositoryData Cache for Large Repositories", "bodyText": "This adds caching the fact that RepositoryData was too large to be\ncached so we don't serialize it over and over just to find out we can't\ncache it (which obviously is quite costly for larger RepositoryData instances).\nrelates #66042", "createdAt": "2020-12-18T11:14:45Z", "url": "https://github.com/elastic/elasticsearch/pull/66587", "merged": true, "mergeCommit": {"oid": "502d10fa3894339484b5b039f6c8ee3776936a13"}, "closed": true, "closedAt": "2020-12-18T16:53:03Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnVNi6gH2gAyNTQyNDc3ODI1Ojk1MDg3YjNhOTRjMzNkNTAwZWQyOTE1NzViNGJjYTA2YWY3OGRlYzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnXlvJgFqTU1NTQ1ODI4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "95087b3a94c33d500ed291575b4bca06af78dec0", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/95087b3a94c33d500ed291575b4bca06af78dec0", "committedDate": "2020-12-18T10:03:05Z", "message": "Reduce Overhead of RepositoryData Cache for Large Repositories\n\nThis adds caching the fact that `RepositoryData` was too large to be\ncached so we don't serialize it over and over just to find out we can't\ncache it."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NDA1ODMy", "url": "https://github.com/elastic/elasticsearch/pull/66587#pullrequestreview-555405832", "createdAt": "2020-12-18T11:22:03Z", "commit": {"oid": "95087b3a94c33d500ed291575b4bca06af78dec0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMToyMjowM1rOIIfF0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMToyMjowM1rOIIfF0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc2ODkxNQ==", "bodyText": "I figured I'd encapsulate this a little (even though it adds a bunch of lines) because the Tuple access is quite hard to read and it's used in a bunch of spots.", "url": "https://github.com/elastic/elasticsearch/pull/66587#discussion_r545768915", "createdAt": "2020-12-18T11:22:03Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1298,20 +1297,62 @@ public void endVerification(String seed) {\n     private final AtomicLong latestKnownRepoGen = new AtomicLong(RepositoryData.UNKNOWN_REPO_GEN);\n \n     // Best effort cache of the latest known repository data and its generation, cached serialized as compressed json\n-    private final AtomicReference<Tuple<Long, BytesReference>> latestKnownRepositoryData = new AtomicReference<>();\n+    private final AtomicReference<CachedRepositoryData> latestKnownRepositoryData =\n+            new AtomicReference<>(new CachedRepositoryData(RepositoryData.EMPTY_REPO_GEN, null));\n+\n+    /**\n+     * Cached serialized repository data or placeholder to keep track of the fact that data for a generation was too large to be cached.\n+     */\n+    private static final class CachedRepositoryData {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95087b3a94c33d500ed291575b4bca06af78dec0"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NDU4Mjgy", "url": "https://github.com/elastic/elasticsearch/pull/66587#pullrequestreview-555458282", "createdAt": "2020-12-18T12:49:19Z", "commit": {"oid": "95087b3a94c33d500ed291575b4bca06af78dec0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4359, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}