{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTMyMDE1", "number": 53199, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNzozMTowOVrODls7ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNzozMzowMlrODls9Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODYwMDI3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/util/BitArray.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNzozMTowOVrOFyvXgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMzozOTowN1rOFy4_Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc0OTE4NA==", "bodyText": "That's a good catch. It feels more natural and robust to test BitArray size within the BitArray implementation than add it to the  calling methods (such as in BucketSort).\nWhen it comes to performance, we can't really say if this test affects some compiler optimization unless we test/benchmark it. Also, I wonder if this is faster or just catching the ArrayIndexOutOfBoundsException thrown by bits.get(wordNum) within the method and simply returning false. I know try/catch blocks can have performance impacts too.", "url": "https://github.com/elastic/elasticsearch/pull/53199#discussion_r388749184", "createdAt": "2020-03-06T07:31:09Z", "author": {"login": "csoulios"}, "path": "server/src/main/java/org/elasticsearch/common/util/BitArray.java", "diffHunk": "@@ -37,16 +37,32 @@ public BitArray(int initialSize, BigArrays bigArrays) {\n         this.bits = bigArrays.newLongArray(initialSize, true);\n     }\n \n+    /**\n+     * Set the {@code index}th bit.\n+     */\n     public void set(int index) {\n         fill(index, true);\n     }\n \n+    /**\n+     * Clear the {@code index}th bit.\n+     */\n     public void clear(int index) {\n         fill(index, false);\n     }\n \n+    /**\n+     * Is the {@code index}th bit set?\n+     */\n     public boolean get(int index) {\n         int wordNum = index >> 6;\n+        if (wordNum >= bits.size()) {\n+            /*\n+             * If the word is bigger than the array then it could *never* have\n+             * been set.\n+             */\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ffcce9adf0a0b6c05f8b06e82f87dac96213ae8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg5OTcyNg==", "bodyText": "I can check that, but I expect it'll depend on the frequency of throw. I already have some benchmarks i can run it against though so it is pretty quick to test.", "url": "https://github.com/elastic/elasticsearch/pull/53199#discussion_r388899726", "createdAt": "2020-03-06T13:24:25Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/common/util/BitArray.java", "diffHunk": "@@ -37,16 +37,32 @@ public BitArray(int initialSize, BigArrays bigArrays) {\n         this.bits = bigArrays.newLongArray(initialSize, true);\n     }\n \n+    /**\n+     * Set the {@code index}th bit.\n+     */\n     public void set(int index) {\n         fill(index, true);\n     }\n \n+    /**\n+     * Clear the {@code index}th bit.\n+     */\n     public void clear(int index) {\n         fill(index, false);\n     }\n \n+    /**\n+     * Is the {@code index}th bit set?\n+     */\n     public boolean get(int index) {\n         int wordNum = index >> 6;\n+        if (wordNum >= bits.size()) {\n+            /*\n+             * If the word is bigger than the array then it could *never* have\n+             * been set.\n+             */\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc0OTE4NA=="}, "originalCommit": {"oid": "4ffcce9adf0a0b6c05f8b06e82f87dac96213ae8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkwNjc3NA==", "bodyText": "I would assume that most of the times an exception is not thrown. Yet, a try-catch block has its performance implications even no exceptions are thrown.", "url": "https://github.com/elastic/elasticsearch/pull/53199#discussion_r388906774", "createdAt": "2020-03-06T13:39:07Z", "author": {"login": "csoulios"}, "path": "server/src/main/java/org/elasticsearch/common/util/BitArray.java", "diffHunk": "@@ -37,16 +37,32 @@ public BitArray(int initialSize, BigArrays bigArrays) {\n         this.bits = bigArrays.newLongArray(initialSize, true);\n     }\n \n+    /**\n+     * Set the {@code index}th bit.\n+     */\n     public void set(int index) {\n         fill(index, true);\n     }\n \n+    /**\n+     * Clear the {@code index}th bit.\n+     */\n     public void clear(int index) {\n         fill(index, false);\n     }\n \n+    /**\n+     * Is the {@code index}th bit set?\n+     */\n     public boolean get(int index) {\n         int wordNum = index >> 6;\n+        if (wordNum >= bits.size()) {\n+            /*\n+             * If the word is bigger than the array then it could *never* have\n+             * been set.\n+             */\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc0OTE4NA=="}, "originalCommit": {"oid": "4ffcce9adf0a0b6c05f8b06e82f87dac96213ae8"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODYwNDIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/util/BitArray.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNzozMzowMlrOFyvZ6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNzozMzowMlrOFyvZ6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc0OTgwMQ==", "bodyText": "I always appreciate it when I see some javadoc added \ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/53199#discussion_r388749801", "createdAt": "2020-03-06T07:33:02Z", "author": {"login": "csoulios"}, "path": "server/src/main/java/org/elasticsearch/common/util/BitArray.java", "diffHunk": "@@ -37,16 +37,32 @@ public BitArray(int initialSize, BigArrays bigArrays) {\n         this.bits = bigArrays.newLongArray(initialSize, true);\n     }\n \n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ffcce9adf0a0b6c05f8b06e82f87dac96213ae8"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3446, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}