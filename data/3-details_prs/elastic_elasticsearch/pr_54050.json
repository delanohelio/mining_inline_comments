{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyODAxMzE0", "number": 54050, "title": "Use special XContent registry for node tool", "bodyText": "Fixes an issue where the elasticsearch-node command-line tools would not work correctly because PersistentTasksCustomMetaData contains named XContent from plugins. This PR makes it so that the parsing for all custom metadata is skipped, even if the core system would know how to handle it.\nCloses #53549", "createdAt": "2020-03-24T06:25:06Z", "url": "https://github.com/elastic/elasticsearch/pull/54050", "merged": true, "mergeCommit": {"oid": "895b1605f8e5f5f9420a3654eeffb98e9b6be2b6"}, "closed": true, "closedAt": "2020-03-24T16:21:40Z", "author": {"login": "ywelsch"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQs0UDAH2gAyMzkyODAxMzE0OjM0N2M3ODQyNThkOGJjMDkwNTg3YTJlZDgzZGIwNjQ4MzU5MWZmMzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ0UffgH2gAyMzkyODAxMzE0OmY0NGJlYzhjYzllYjhjZDVmNTlmYTJiN2ZlOWYxNTliZTMxZThhYmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "347c784258d8bc090587a2ed83db06483591ff35", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/347c784258d8bc090587a2ed83db06483591ff35", "committedDate": "2020-03-24T06:21:50Z", "message": "Use special XContent registry for node tool\n\nCloses #53549"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca1b564231107c5baed263d6878455d96f822125", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/ca1b564231107c5baed263d6878455d96f822125", "committedDate": "2020-03-24T06:36:20Z", "message": "compile"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMjI1MjE4", "url": "https://github.com/elastic/elasticsearch/pull/54050#pullrequestreview-380225218", "createdAt": "2020-03-24T11:36:52Z", "commit": {"oid": "ca1b564231107c5baed263d6878455d96f822125"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMTozNjo1MlrOF6sPEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMTo0MToxNFrOF6sX8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4NjQ4MA==", "bodyText": "assert false here to be sure we're not calling this?", "url": "https://github.com/elastic/elasticsearch/pull/54050#discussion_r397086480", "createdAt": "2020-03-24T11:36:52Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/coordination/ElasticsearchNodeCommand.java", "diffHunk": "@@ -168,4 +186,45 @@ protected abstract void processNodePaths(Terminal terminal, Path[] dataPaths, Op\n     OptionParser getParser() {\n         return parser;\n     }\n+\n+    public static class UnknownMetaDataCustom implements MetaData.Custom {\n+\n+        private final String name;\n+        private final Map<String, Object> contents;\n+\n+        public UnknownMetaDataCustom(String name, Map<String, Object> contents) {\n+            this.name = name;\n+            this.contents = contents;\n+        }\n+\n+        @Override\n+        public EnumSet<MetaData.XContentContext> context() {\n+            return EnumSet.of(MetaData.XContentContext.API, MetaData.XContentContext.GATEWAY);\n+        }\n+\n+        @Override\n+        public Diff<MetaData.Custom> diff(MetaData.Custom previousState) {\n+            throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b564231107c5baed263d6878455d96f822125"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4NjUwNw==", "bodyText": "assert false here to be sure we're not calling this?", "url": "https://github.com/elastic/elasticsearch/pull/54050#discussion_r397086507", "createdAt": "2020-03-24T11:36:56Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/coordination/ElasticsearchNodeCommand.java", "diffHunk": "@@ -168,4 +186,45 @@ protected abstract void processNodePaths(Terminal terminal, Path[] dataPaths, Op\n     OptionParser getParser() {\n         return parser;\n     }\n+\n+    public static class UnknownMetaDataCustom implements MetaData.Custom {\n+\n+        private final String name;\n+        private final Map<String, Object> contents;\n+\n+        public UnknownMetaDataCustom(String name, Map<String, Object> contents) {\n+            this.name = name;\n+            this.contents = contents;\n+        }\n+\n+        @Override\n+        public EnumSet<MetaData.XContentContext> context() {\n+            return EnumSet.of(MetaData.XContentContext.API, MetaData.XContentContext.GATEWAY);\n+        }\n+\n+        @Override\n+        public Diff<MetaData.Custom> diff(MetaData.Custom previousState) {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        @Override\n+        public String getWriteableName() {\n+            return name;\n+        }\n+\n+        @Override\n+        public Version getMinimalSupportedVersion() {\n+            throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b564231107c5baed263d6878455d96f822125"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4NjUzMA==", "bodyText": "assert false here to be sure we're not calling this?", "url": "https://github.com/elastic/elasticsearch/pull/54050#discussion_r397086530", "createdAt": "2020-03-24T11:36:59Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/coordination/ElasticsearchNodeCommand.java", "diffHunk": "@@ -168,4 +186,45 @@ protected abstract void processNodePaths(Terminal terminal, Path[] dataPaths, Op\n     OptionParser getParser() {\n         return parser;\n     }\n+\n+    public static class UnknownMetaDataCustom implements MetaData.Custom {\n+\n+        private final String name;\n+        private final Map<String, Object> contents;\n+\n+        public UnknownMetaDataCustom(String name, Map<String, Object> contents) {\n+            this.name = name;\n+            this.contents = contents;\n+        }\n+\n+        @Override\n+        public EnumSet<MetaData.XContentContext> context() {\n+            return EnumSet.of(MetaData.XContentContext.API, MetaData.XContentContext.GATEWAY);\n+        }\n+\n+        @Override\n+        public Diff<MetaData.Custom> diff(MetaData.Custom previousState) {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        @Override\n+        public String getWriteableName() {\n+            return name;\n+        }\n+\n+        @Override\n+        public Version getMinimalSupportedVersion() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        @Override\n+        public void writeTo(StreamOutput out) throws IOException {\n+            throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b564231107c5baed263d6878455d96f822125"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4ODc1Mg==", "bodyText": "Why keep IndicesModule.getNamedXContents() but drop ClusterModule.getNamedXWriteables() here? Shouldn't we handle Condition named objects similarly to MetaData.Custom?\n\nEdit: we discussed this in another channel and it's kinda thorny because the Condition things are represented as JSON primitives (strings, numbers) rather than objects. Could you add a comment recording that in the source", "url": "https://github.com/elastic/elasticsearch/pull/54050#discussion_r397088752", "createdAt": "2020-03-24T11:41:14Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/coordination/ElasticsearchNodeCommand.java", "diffHunk": "@@ -65,10 +70,23 @@\n     protected static final String CS_MISSING_MSG =\n         \"cluster state is empty, cluster has never been bootstrapped?\";\n \n-    protected static final NamedXContentRegistry namedXContentRegistry = new NamedXContentRegistry(\n-        Stream.of(ClusterModule.getNamedXWriteables().stream(), IndicesModule.getNamedXContents().stream())\n-            .flatMap(Function.identity())\n-            .collect(Collectors.toList()));\n+    // fake the registry here, as command-line tools are not loading plugins, and ensure that it preserves the parsed XContent\n+    public static final NamedXContentRegistry namedXContentRegistry = new NamedXContentRegistry(IndicesModule.getNamedXContents()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b564231107c5baed263d6878455d96f822125"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89b0810e5b910493449c5e9d73e05e097fdf418a", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/89b0810e5b910493449c5e9d73e05e097fdf418a", "committedDate": "2020-03-24T13:44:02Z", "message": "feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f44bec8cc9eb8cd5f59fa2b7fe9f159be31e8aba", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/f44bec8cc9eb8cd5f59fa2b7fe9f159be31e8aba", "committedDate": "2020-03-24T15:06:19Z", "message": "Thanks for tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1661, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}