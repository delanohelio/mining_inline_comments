{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNjIzNzU1", "number": 57187, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjowMDoxM1rOD_8iTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjowMDoxM1rOD_8iTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mzc4NzAzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/shard/IndexShard.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjowMDoxM1rOGa6ftA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjoxNzoxMFrOGbGiFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3NDU0OA==", "bodyText": "The new test found this issue where the index is synced flush, but the global checkpoint is still unassigned.", "url": "https://github.com/elastic/elasticsearch/pull/57187#discussion_r430874548", "createdAt": "2020-05-27T06:00:13Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/index/shard/IndexShard.java", "diffHunk": "@@ -1411,14 +1411,16 @@ public long recoverLocallyUpToGlobalCheckpoint() {\n             logger.debug(\"skip local recovery as failed to find the safe commit\", e);\n             return UNASSIGNED_SEQ_NO;\n         }\n-        if (safeCommit.isPresent() == false) {\n-            logger.trace(\"skip local recovery as no safe commit found\");\n-            return UNASSIGNED_SEQ_NO;\n-        }\n-        assert safeCommit.get().localCheckpoint <= globalCheckpoint : safeCommit.get().localCheckpoint + \" > \" + globalCheckpoint;\n         try {\n             maybeCheckIndex(); // check index here and won't do it again if ops-based recovery occurs\n             recoveryState.setStage(RecoveryState.Stage.TRANSLOG);\n+            if (safeCommit.isPresent() == false) {\n+                assert globalCheckpoint == UNASSIGNED_SEQ_NO || indexSettings.getIndexVersionCreated().before(Version.V_6_2_0) :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c60082b3931dcacbb318ce621ad63066b4b58d9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg5NjE0OQ==", "bodyText": "I'm not sure I understand what issue is being addressed here. How is moving this condition further down (after maybeCheckIndex) helping?\nIs the issue that we have not properly moved to the translog stage?", "url": "https://github.com/elastic/elasticsearch/pull/57187#discussion_r430896149", "createdAt": "2020-05-27T06:57:30Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/index/shard/IndexShard.java", "diffHunk": "@@ -1411,14 +1411,16 @@ public long recoverLocallyUpToGlobalCheckpoint() {\n             logger.debug(\"skip local recovery as failed to find the safe commit\", e);\n             return UNASSIGNED_SEQ_NO;\n         }\n-        if (safeCommit.isPresent() == false) {\n-            logger.trace(\"skip local recovery as no safe commit found\");\n-            return UNASSIGNED_SEQ_NO;\n-        }\n-        assert safeCommit.get().localCheckpoint <= globalCheckpoint : safeCommit.get().localCheckpoint + \" > \" + globalCheckpoint;\n         try {\n             maybeCheckIndex(); // check index here and won't do it again if ops-based recovery occurs\n             recoveryState.setStage(RecoveryState.Stage.TRANSLOG);\n+            if (safeCommit.isPresent() == false) {\n+                assert globalCheckpoint == UNASSIGNED_SEQ_NO || indexSettings.getIndexVersionCreated().before(Version.V_6_2_0) :", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3NDU0OA=="}, "originalCommit": {"oid": "c60082b3931dcacbb318ce621ad63066b4b58d9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkwMDQzNQ==", "bodyText": "Also, which part of the new tests show this issue, and is it something that can also be triggered with a single restart?", "url": "https://github.com/elastic/elasticsearch/pull/57187#discussion_r430900435", "createdAt": "2020-05-27T07:07:27Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/index/shard/IndexShard.java", "diffHunk": "@@ -1411,14 +1411,16 @@ public long recoverLocallyUpToGlobalCheckpoint() {\n             logger.debug(\"skip local recovery as failed to find the safe commit\", e);\n             return UNASSIGNED_SEQ_NO;\n         }\n-        if (safeCommit.isPresent() == false) {\n-            logger.trace(\"skip local recovery as no safe commit found\");\n-            return UNASSIGNED_SEQ_NO;\n-        }\n-        assert safeCommit.get().localCheckpoint <= globalCheckpoint : safeCommit.get().localCheckpoint + \" > \" + globalCheckpoint;\n         try {\n             maybeCheckIndex(); // check index here and won't do it again if ops-based recovery occurs\n             recoveryState.setStage(RecoveryState.Stage.TRANSLOG);\n+            if (safeCommit.isPresent() == false) {\n+                assert globalCheckpoint == UNASSIGNED_SEQ_NO || indexSettings.getIndexVersionCreated().before(Version.V_6_2_0) :", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3NDU0OA=="}, "originalCommit": {"oid": "c60082b3931dcacbb318ce621ad63066b4b58d9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3MTc2Ng==", "bodyText": "Sorry, I should have explained better.\n\nIs the issue that we have not properly moved to the translog stage?\n\nThat's correct. Previously, we do not move the recovery stage from INDEX to TRANSLOG if we don't have the safe commit, which can be the case if the index was created before 6.2 or the global checkpoint is still unassigned. Here we expect a file-based recovery to happen, and we will move the recovery stage to TRANSLOG in the clean files step. However, if the shard has a synced flush, we won't execute the clean files step and trip the assertion.\n\nAlso, which part of the new tests show this issue, and is it something that can also be triggered with a single restart?\n\nYes, I will add it to the full cluster restart suite.", "url": "https://github.com/elastic/elasticsearch/pull/57187#discussion_r431071766", "createdAt": "2020-05-27T12:17:10Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/index/shard/IndexShard.java", "diffHunk": "@@ -1411,14 +1411,16 @@ public long recoverLocallyUpToGlobalCheckpoint() {\n             logger.debug(\"skip local recovery as failed to find the safe commit\", e);\n             return UNASSIGNED_SEQ_NO;\n         }\n-        if (safeCommit.isPresent() == false) {\n-            logger.trace(\"skip local recovery as no safe commit found\");\n-            return UNASSIGNED_SEQ_NO;\n-        }\n-        assert safeCommit.get().localCheckpoint <= globalCheckpoint : safeCommit.get().localCheckpoint + \" > \" + globalCheckpoint;\n         try {\n             maybeCheckIndex(); // check index here and won't do it again if ops-based recovery occurs\n             recoveryState.setStage(RecoveryState.Stage.TRANSLOG);\n+            if (safeCommit.isPresent() == false) {\n+                assert globalCheckpoint == UNASSIGNED_SEQ_NO || indexSettings.getIndexVersionCreated().before(Version.V_6_2_0) :", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3NDU0OA=="}, "originalCommit": {"oid": "c60082b3931dcacbb318ce621ad63066b4b58d9a"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3919, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}