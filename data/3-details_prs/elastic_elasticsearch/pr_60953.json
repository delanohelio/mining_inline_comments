{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1OTg3NTI2", "number": 60953, "title": "Simplify and Speed up some Compression Usage", "bodyText": "Use thread-local buffers and deflater and inflater instances to speed up\ncompressing and decompressing from in-memory bytes.\nNot manually invoking end() on these should be safe since their off-heap memory\nwill eventually be reclaimed by the finalizer thread which should not be an issue for thread-locals\nthat are not instantiated at a high frequency.\nThis significantly reduces the amount of byte copying and object creation relative to the previous approach\nwhich had to create a fresh temporary buffer (that was then resized multiple times during operations), copied\nbytes out of that buffer to a freshly allocated byte[], used 4k stream buffers needlessly when working with\nbytes that are already in arrays (writeTo handles efficient writing to the compression logic now) etc.\nRelates #57284 which should be helped by this change to some degree.\nAlso, I expect this change to speed up mapping/template updates a little as those make heavy use of these\ncode paths.", "createdAt": "2020-08-11T09:33:40Z", "url": "https://github.com/elastic/elasticsearch/pull/60953", "merged": true, "mergeCommit": {"oid": "9059cfb7d40b9ab9e878662b69be7cfb04f11f52"}, "closed": true, "closedAt": "2020-08-11T20:47:02Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9zck3AH2gAyNDY1OTg3NTI2OmM0MTkwM2M2YWM1ZTIzODI0YWI1YzkyMzQ5N2E3MzAyYzBlOWUyZjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc984F3AFqTQ2NTQwNjQyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c41903c6ac5e23824ab5c923497a7302c0e9e2f9", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/c41903c6ac5e23824ab5c923497a7302c0e9e2f9", "committedDate": "2020-08-11T09:31:50Z", "message": "Simplify and Speed up some Compression Usage\n\nUse thread-local buffers and deflater and inflater instances to speed up\ncompressing and decompressing from in-memory bytes.\nNot manually invoking `end()` on these should be safe since their off-heap memory\nwill eventually be reclaimed by the finalizer thread which should not be an issue for thread-locals\nthat are not instantiated at a high frequency.\nThis significantly reduces the amount of byte copying and object creation relative to the previous approach\nwhich had to create a fresh temporary buffer (that was then resized multiple times during operations), copied\nbytes out of that buffer to a freshly allocated `byte[]`, used 4k stream buffers needlessly when working with\nbytes that are already in arrays (`writeTo` handles efficient writing to the compression logic now) etc.\n\nRelates #57284 which should be helped by this change to some degree.\nAlso, I expect this change to speed up mapping/template updates a little as those make heavy use of these\ncode paths."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MjMzOTYx", "url": "https://github.com/elastic/elasticsearch/pull/60953#pullrequestreview-465233961", "createdAt": "2020-08-11T16:28:54Z", "commit": {"oid": "c41903c6ac5e23824ab5c923497a7302c0e9e2f9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNjoyODo1NFrOG-_zLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNjozMzoxOFrOG-_-Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcxMDE4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return uncompressed().equals(uncompressed());\n          \n          \n            \n                    return uncompressed().equals(that.uncompressed());\n          \n      \n    \n    \n  \n\nalso looking at the code above, I wonder why we don't compare crc32 first before comparing the compressed byte arrays", "url": "https://github.com/elastic/elasticsearch/pull/60953#discussion_r468710189", "createdAt": "2020-08-11T16:28:54Z", "author": {"login": "jaymode"}, "path": "server/src/main/java/org/elasticsearch/common/compress/CompressedXContent.java", "diffHunk": "@@ -167,7 +162,7 @@ public boolean equals(Object o) {\n             return false;\n         }\n \n-        return Arrays.equals(uncompressed(), that.uncompressed());\n+        return uncompressed().equals(uncompressed());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41903c6ac5e23824ab5c923497a7302c0e9e2f9"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcxMzA0Ng==", "bodyText": "IMO it would be a good idea to add a comment about why these threadlocals are not used in the other methods of the class", "url": "https://github.com/elastic/elasticsearch/pull/60953#discussion_r468713046", "createdAt": "2020-08-11T16:33:18Z", "author": {"login": "jaymode"}, "path": "server/src/main/java/org/elasticsearch/common/compress/DeflateCompressor.java", "diffHunk": "@@ -129,4 +131,37 @@ public void close() throws IOException {\n             }\n         };\n     }\n+\n+    private static final ThreadLocal<Inflater> inflaterRef = ThreadLocal.withInitial(() -> new Inflater(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41903c6ac5e23824ab5c923497a7302c0e9e2f9"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a02149db0c03391f23345b2d8d72850609152007", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/a02149db0c03391f23345b2d8d72850609152007", "committedDate": "2020-08-11T19:24:07Z", "message": "Merge remote-tracking branch 'elastic/master' into faster-compression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af815ae229eb3ab4caa7cb502210356063d85a47", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/af815ae229eb3ab4caa7cb502210356063d85a47", "committedDate": "2020-08-11T19:44:54Z", "message": "CR: comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NDA2NDIx", "url": "https://github.com/elastic/elasticsearch/pull/60953#pullrequestreview-465406421", "createdAt": "2020-08-11T20:31:02Z", "commit": {"oid": "af815ae229eb3ab4caa7cb502210356063d85a47"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3391, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}