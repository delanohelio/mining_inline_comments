{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NDYwMDIy", "number": 50643, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjo1MToxNVrODWZJ3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDo0NjozMlrODbEmZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODA3Mzg4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/IndexPrivilege.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjo1MToxNVrOFbIOFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwOToxMToyNlrOFbvC7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk5MDU0OQ==", "bodyText": "The test that it's failing {\"type\":\"security_exception\",\"reason\":\"action [indices:admin/refresh[s]] is unauthorized for user [u15]\"}}]}} hints that indices:admin/refresh[s] is unauthorized.\nThe refresh action translates into shard wise sub-actions, which are also authorized by themselves.\nYou need to add replace indices:admin/refresh with indices:admin/refresh*.", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r363990549", "createdAt": "2020-01-07T22:51:15Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/IndexPrivilege.java", "diffHunk": "@@ -66,6 +66,8 @@\n         CloseIndexAction.NAME + \"*\");\n     private static final Automaton MANAGE_LEADER_INDEX_AUTOMATON = patterns(ForgetFollowerAction.NAME + \"*\");\n     private static final Automaton MANAGE_ILM_AUTOMATON = patterns(\"indices:admin/ilm/*\");\n+    private static final Automaton MAINTENANCE_AUTOMATON = patterns(\"indices:admin/refresh\", \"indices:admin/flush\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f758896edc9e9176ce65f8fe0f05c6ce30340d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYyNjY3MQ==", "bodyText": "This should be:\nprivate static final Automaton MAINTENANCE_AUTOMATON = patterns(\"indices:admin/refresh*\", \"indices:admin/flush*\", \"indices:admin/synced_flush\", \"indices:admin/forcemerge*\");\n\nThe motive is that, as mentioned above, a cluster action might spawn other actions, both on the node first handling the request as well as other nodes on the cluster. Every such action is authorized individually, i.e. the authorization status of the parent action is not consulted. For example, for the refresh (and flush) action translate to indices:admin/refresh[s] (and indices:admin/flush[s]) actions for every index shard, which are then translated into indices:admin/refresh[p] and indices:admin/refresh[r] for the primary and replica shards. The maintenance privilege should grant all these action types, and we customary add the wildcard star to the name of the originating action instead of iterating all the sub-action names.", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r364626671", "createdAt": "2020-01-09T09:11:26Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/IndexPrivilege.java", "diffHunk": "@@ -66,6 +66,8 @@\n         CloseIndexAction.NAME + \"*\");\n     private static final Automaton MANAGE_LEADER_INDEX_AUTOMATON = patterns(ForgetFollowerAction.NAME + \"*\");\n     private static final Automaton MANAGE_ILM_AUTOMATON = patterns(\"indices:admin/ilm/*\");\n+    private static final Automaton MAINTENANCE_AUTOMATON = patterns(\"indices:admin/refresh\", \"indices:admin/flush\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk5MDU0OQ=="}, "originalCommit": {"oid": "22f758896edc9e9176ce65f8fe0f05c6ce30340d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjE3NDA3OnYy", "diffSide": "RIGHT", "path": "x-pack/docs/en/security/authorization/privileges.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwOToyMTowMlrOFbvTJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwOToyMTowMlrOFbvTJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYzMDgyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Privilege to refresh, flush, synced_flush, force merge\n          \n          \n            \n            Permits refresh, flush, synced flush and force merge operations. No privilege to read or write index data or otherwise manage the index.", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r364630820", "createdAt": "2020-01-09T09:21:02Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/docs/en/security/authorization/privileges.asciidoc", "diffHunk": "@@ -201,15 +201,18 @@ Privilege to delete an index.\n Privilege to index and update documents. Also grants access to the update\n mapping action.\n \n+`maintenance`::\n+Privilege to refresh, flush, synced_flush, force merge", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f758896edc9e9176ce65f8fe0f05c6ce30340d"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjE5MjcxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/privileges/11_builtin.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwOToyNzowNVrOFbveMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwOToyNzowNVrOFbveMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYzMzY0OQ==", "bodyText": "You're adding a new index privilege not a cluster one, so I believe this should instead be:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              - length: { \"cluster\" : 33 }\n          \n          \n            \n              - length: { \"cluster\" : 34 }\n          \n          \n            \n              - length: { \"index\" : 17 }\n          \n          \n            \n               - length: { \"index\" : 18 }", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r364633649", "createdAt": "2020-01-09T09:27:05Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/privileges/11_builtin.yml", "diffHunk": "@@ -15,5 +15,5 @@ setup:\n   # This is fragile - it needs to be updated every time we add a new cluster/index privilege\n   # I would much prefer we could just check that specific entries are in the array, but we don't have\n   # an assertion for that\n-  - length: { \"cluster\" : 33 }\n+  - length: { \"cluster\" : 34 }\n   - length: { \"index\" : 17 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f758896edc9e9176ce65f8fe0f05c6ce30340d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjM3MTA2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMDoyMzozOFrOFbxJ8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMDoyMzozOFrOFbxJ8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY2MTIzMw==", "bodyText": "I don't think we need this fluff. This is testing the authorization of composite requests but refresh and flush are not part of those composite type of requests.\nIn addition to assertUserIsAllowed(\"u15\", \"maintenance\", \"a\"); I would also check that crud is not allowed, and we should also test that other users in this class don't have the maintenance priv (right now it only checks the positive case).", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r364661233", "createdAt": "2020-01-09T10:23:38Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "diffHunk": "@@ -385,6 +391,18 @@ public void testUserU14() throws Exception {\n                 \"GET\", \"/\" + randomIndex() + \"/_mtermvectors\", \"{ \\\"docs\\\" : [ { \\\"_id\\\": \\\"1\\\" }, { \\\"_id\\\": \\\"2\\\" } ] }\");\n     }\n \n+    public void testUser15() throws Exception {\n+        assertUserIsAllowed(\"u15\", \"maintenance\", \"a\");\n+\n+        assertAccessIsAllowed(\"u15\",\n+            \"GET\", \"/\" + randomIndex() + \"/_msearch\", \"{}\\n{ \\\"query\\\" : { \\\"match_all\\\" : {} } }\\n\");\n+        assertAccessIsAllowed(\"u15\", \"POST\", \"/\" + randomIndex() + \"/_mget\", \"{ \\\"ids\\\" : [ \\\"1\\\", \\\"2\\\" ] } \");\n+        assertAccessIsDenied(\"u15\", \"PUT\",\n+            \"/\" + randomIndex() + \"/_bulk\", \"{ \\\"index\\\" : { \\\"_id\\\" : \\\"123\\\" } }\\n{ \\\"foo\\\" : \\\"bar\\\" }\\n\");\n+        assertAccessIsAllowed(\"u15\",\n+            \"GET\", \"/\" + randomIndex() + \"/_mtermvectors\", \"{ \\\"docs\\\" : [ { \\\"_id\\\": \\\"1\\\" }, { \\\"_id\\\": \\\"2\\\" } ] }\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f758896edc9e9176ce65f8fe0f05c6ce30340d"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjM3MjE4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMDoyNDowOFrOFbxKxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMDoyNDowOFrOFbxKxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY2MTQ0Nw==", "bodyText": "Should be assertAccessIsDenied, right?", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r364661447", "createdAt": "2020-01-09T10:24:08Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "diffHunk": "@@ -419,6 +437,23 @@ private void assertUserExecutes(String user, String action, String index, boolea\n                 }\n                 break;\n \n+            case \"maintenance\" :\n+                if (userIsAllowed) {\n+                    assertUserIsDenied(user, \"crud\", index);\n+                    assertAccessIsAllowed(user, \"POST\", \"/\" + index + \"/_refresh\");\n+                    assertAccessIsAllowed(user, \"POST\", \"/\" + index + \"/_flush\");\n+                    assertAccessIsAllowed(user, \"POST\", \"/\" + index + \"/_flush/synced\");\n+                    assertAccessIsAllowed(user, \"POST\", \"/\" + index + \"/_forcemerge\");\n+                } else {\n+                    assertUserIsDenied(user, \"crud\", index);\n+                    assertAccessIsDenied(user, \"PUT\", \"/\" + index);\n+                    assertAccessIsDenied(user, \"POST\", \"/\" + index + \"/_refresh\");\n+                    assertAccessIsDenied(user, \"POST\", \"/\" + index + \"/_flush\");\n+                    assertAccessIsAllowed(user, \"POST\", \"/\" + index + \"/_flush/synced\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f758896edc9e9176ce65f8fe0f05c6ce30340d"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Njc1MjI1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzoyNjoyOVrOFca6Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzoyNjoyOVrOFca6Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM0NTMxNA==", "bodyText": "Please move this to the testUser11 function and do it for the b and c indices, i.e.\nassertUserIsDenied(\"u11\", \"maintenance\", \"b\");, assertUserIsDenied(\"u11\", \"maintenance\", \"c\"); .", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r365345314", "createdAt": "2020-01-10T17:26:29Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "diffHunk": "@@ -385,6 +391,13 @@ public void testUserU14() throws Exception {\n                 \"GET\", \"/\" + randomIndex() + \"/_mtermvectors\", \"{ \\\"docs\\\" : [ { \\\"_id\\\": \\\"1\\\" }, { \\\"_id\\\": \\\"2\\\" } ] }\");\n     }\n \n+    public void testUserU15() throws Exception {\n+        assertUserIsAllowed(\"u15\", \"maintenance\", \"a\");\n+        assertUserIsDenied(\"u15\", \"crud\", \"a\");\n+\n+        assertUserIsDenied(\"u11\", \"maintenance\", \"a\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "844c4b13ecb2d9fd58914e7587f03e64d569940e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Njc2NTY2OnYy", "diffSide": "RIGHT", "path": "x-pack/docs/en/security/authorization/privileges.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzozMTozMFrOFcbCcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzozMTozMFrOFcbCcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM0NzQ0Mg==", "bodyText": "You missed an and. We try to be sharp wrt the docs.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Permits refresh, flush, synced flush, force merge operations. No privilege\n          \n          \n            \n            Permits refresh, flush, synced flush and force merge index administration operations.", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r365347442", "createdAt": "2020-01-10T17:31:30Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/docs/en/security/authorization/privileges.asciidoc", "diffHunk": "@@ -204,15 +204,19 @@ Privilege to delete an index.\n Privilege to index and update documents. Also grants access to the update\n mapping action.\n \n+`maintenance`::\n+Permits refresh, flush, synced flush, force merge operations. No privilege", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "844c4b13ecb2d9fd58914e7587f03e64d569940e"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzEyNDUwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/IndexPrivilege.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDozOTo1NlrOFiWNtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDozOTo1NlrOFiWNtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1OTg2Mg==", "bodyText": "Minor:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        entry(\"maintenance\",MAINTENANCE));\n          \n          \n            \n                        entry(\"maintenance\", MAINTENANCE));", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r371559862", "createdAt": "2020-01-28T00:39:56Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/IndexPrivilege.java", "diffHunk": "@@ -102,7 +105,8 @@\n             entry(\"read_cross_cluster\", READ_CROSS_CLUSTER),\n             entry(\"manage_follow_index\", MANAGE_FOLLOW_INDEX),\n             entry(\"manage_leader_index\", MANAGE_LEADER_INDEX),\n-            entry(\"manage_ilm\", MANAGE_ILM));\n+            entry(\"manage_ilm\", MANAGE_ILM),\n+            entry(\"maintenance\",MAINTENANCE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a9779ac29b42f1ff1342a413b2b96bd769bbc9e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzEzNTAzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDo0NjoyOVrOFiWULA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMzo1MTo0MVrOFi4n1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2MTUxNg==", "bodyText": "I think this this is what we want.\nA user being allowed maintenance should not imply anything about whether they are/aren't allowed crud.", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r371561516", "createdAt": "2020-01-28T00:46:29Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "diffHunk": "@@ -419,6 +432,22 @@ private void assertUserExecutes(String user, String action, String index, boolea\n                 }\n                 break;\n \n+            case \"maintenance\" :\n+                if (userIsAllowed) {\n+                    assertUserIsDenied(user, \"crud\", index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a9779ac29b42f1ff1342a413b2b96bd769bbc9e"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4ODc1NQ==", "bodyText": "@tvernum the first and second statement made me a bit confuse. but it looks like the explanation has precedence. so I will remove them.", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r371688755", "createdAt": "2020-01-28T09:28:20Z", "author": {"login": "amirhmd"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "diffHunk": "@@ -419,6 +432,22 @@ private void assertUserExecutes(String user, String action, String index, boolea\n                 }\n                 break;\n \n+            case \"maintenance\" :\n+                if (userIsAllowed) {\n+                    assertUserIsDenied(user, \"crud\", index);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2MTUxNg=="}, "originalCommit": {"oid": "8a9779ac29b42f1ff1342a413b2b96bd769bbc9e"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyMzYwNQ==", "bodyText": "Sorry, somehow I dropped a word. It should have said:\n\nI don't think this is what we want.\n\nYour fix is correct.", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r372123605", "createdAt": "2020-01-28T23:51:41Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "diffHunk": "@@ -419,6 +432,22 @@ private void assertUserExecutes(String user, String action, String index, boolea\n                 }\n                 break;\n \n+            case \"maintenance\" :\n+                if (userIsAllowed) {\n+                    assertUserIsDenied(user, \"crud\", index);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2MTUxNg=="}, "originalCommit": {"oid": "8a9779ac29b42f1ff1342a413b2b96bd769bbc9e"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzEzNTExOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDo0NjozMlrOFiWUOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDo0NjozMlrOFiWUOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2MTUzMQ==", "bodyText": "Per above.", "url": "https://github.com/elastic/elasticsearch/pull/50643#discussion_r371561531", "createdAt": "2020-01-28T00:46:32Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/IndexPrivilegeTests.java", "diffHunk": "@@ -419,6 +432,22 @@ private void assertUserExecutes(String user, String action, String index, boolea\n                 }\n                 break;\n \n+            case \"maintenance\" :\n+                if (userIsAllowed) {\n+                    assertUserIsDenied(user, \"crud\", index);\n+                    assertAccessIsAllowed(user, \"POST\", \"/\" + index + \"/_refresh\");\n+                    assertAccessIsAllowed(user, \"POST\", \"/\" + index + \"/_flush\");\n+                    assertAccessIsAllowed(user, \"POST\", \"/\" + index + \"/_flush/synced\");\n+                    assertAccessIsAllowed(user, \"POST\", \"/\" + index + \"/_forcemerge\");\n+                } else {\n+                    assertUserIsDenied(user, \"crud\", index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a9779ac29b42f1ff1342a413b2b96bd769bbc9e"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4876, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}