{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NDE5NDMx", "number": 51260, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoyODo0MVrODaZ0EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoyODo0MVrODaZ0EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDEyNDk2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/stats/IndexFeatureStats.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoyODo0MVrOFhVnhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjoyMzo1M1rOFhjCQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTUwOA==", "bodyText": "I think both count and indexCount are useful. Was there a specific reason why it wasn't included in the change to the xpack usage api initially?", "url": "https://github.com/elastic/elasticsearch/pull/51260#discussion_r370501508", "createdAt": "2020-01-24T07:28:41Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/stats/IndexFeatureStats.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.action.admin.cluster.stats;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+/**\n+ * Statistics about an index feature.\n+ */\n+public final class IndexFeatureStats implements ToXContent, Writeable {\n+\n+    final String name;\n+    int count;\n+    int indexCount;\n+\n+    IndexFeatureStats(String name) {\n+        this.name = Objects.requireNonNull(name);\n+    }\n+\n+    IndexFeatureStats(StreamInput in) throws IOException {\n+        this.name = in.readString();\n+        this.count = in.readVInt();\n+        this.indexCount = in.readVInt();\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        out.writeString(name);\n+        out.writeVInt(count);\n+        out.writeVInt(indexCount);\n+    }\n+\n+    /**\n+     * Return the name of the field type.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Return the number of times this feature is used across the cluster.\n+     */\n+    public int getCount() {\n+        return count;\n+    }\n+\n+    /**\n+     * Return the number of indices that use this feature across the cluster.\n+     */\n+    public int getIndexCount() {\n+        return indexCount;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9425b8c2295298df90b0d6e4f9a5d11d35992851"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcyMTM0Ng==", "bodyText": "I mostly added statistics because the API name suggests so. I suspect that the number of clusters that used a field is going to be much more interesting than the number of indices or fields.", "url": "https://github.com/elastic/elasticsearch/pull/51260#discussion_r370721346", "createdAt": "2020-01-24T16:23:53Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/stats/IndexFeatureStats.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.action.admin.cluster.stats;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+/**\n+ * Statistics about an index feature.\n+ */\n+public final class IndexFeatureStats implements ToXContent, Writeable {\n+\n+    final String name;\n+    int count;\n+    int indexCount;\n+\n+    IndexFeatureStats(String name) {\n+        this.name = Objects.requireNonNull(name);\n+    }\n+\n+    IndexFeatureStats(StreamInput in) throws IOException {\n+        this.name = in.readString();\n+        this.count = in.readVInt();\n+        this.indexCount = in.readVInt();\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        out.writeString(name);\n+        out.writeVInt(count);\n+        out.writeVInt(indexCount);\n+    }\n+\n+    /**\n+     * Return the name of the field type.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Return the number of times this feature is used across the cluster.\n+     */\n+    public int getCount() {\n+        return count;\n+    }\n+\n+    /**\n+     * Return the number of indices that use this feature across the cluster.\n+     */\n+    public int getIndexCount() {\n+        return indexCount;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTUwOA=="}, "originalCommit": {"oid": "9425b8c2295298df90b0d6e4f9a5d11d35992851"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4405, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}