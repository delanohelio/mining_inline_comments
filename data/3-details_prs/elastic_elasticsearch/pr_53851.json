{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNDcyNDQ3", "number": 53851, "title": "Wildcard field - add normalizer support", "bodyText": "Add normalizer support for the wildcard field to allow case insensitivity", "createdAt": "2020-03-20T11:06:29Z", "url": "https://github.com/elastic/elasticsearch/pull/53851", "merged": true, "mergeCommit": {"oid": "2537e02a7dbfc7805b9e0387ac225069cad1c68a"}, "closed": true, "closedAt": "2020-03-24T09:35:29Z", "author": {"login": "markharwood"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPhonzgFqTM3ODU0NTcwNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQieoZABqjMxNTY0ODczMTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NTQ1NzA2", "url": "https://github.com/elastic/elasticsearch/pull/53851#pullrequestreview-378545706", "createdAt": "2020-03-20T14:45:39Z", "commit": {"oid": "ffc75372aa6ef5462903a3b2a22c84b352cce806"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDo0NTo0MFrOF5WrGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDo0NTo0MFrOF5WrGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4NDYzMg==", "bodyText": "We should normalize all term-based query like  KeywordFieldType.\nAlso @cbuescher added the support in StringFieldType to mask special characters (*)  during normalization so we should reuse here ?", "url": "https://github.com/elastic/elasticsearch/pull/53851#discussion_r395684632", "createdAt": "2020-03-20T14:45:40Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java", "diffHunk": "@@ -327,6 +376,12 @@ public boolean equals(Object obj) {\n \n         @Override\n         public Query wildcardQuery(String wildcardPattern, RewriteMethod method, QueryShardContext context) {\n+            try {\n+                wildcardPattern = normalize(wildcardPattern);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc75372aa6ef5462903a3b2a22c84b352cce806"}, "originalPosition": 115}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "594a54552cda34f49ecf19e710874ffc29818f2f", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/594a54552cda34f49ecf19e710874ffc29818f2f", "committedDate": "2020-03-20T17:23:45Z", "message": "Fix wrong toString method"}, "afterCommit": {"oid": "2d3172c32cb993713af9aec45046fde365a3a3fa", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/2d3172c32cb993713af9aec45046fde365a3a3fa", "committedDate": "2020-03-20T17:39:30Z", "message": "Fix wrong toString method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NDAyMjU1", "url": "https://github.com/elastic/elasticsearch/pull/53851#pullrequestreview-379402255", "createdAt": "2020-03-23T12:57:32Z", "commit": {"oid": "2d3172c32cb993713af9aec45046fde365a3a3fa"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjo1NzozMlrOF6ELNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjo1ODoxM1rOF6EM1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMDEzMw==", "bodyText": "Can we try to expose something reusable (a static function ?) in StringFieldType ?", "url": "https://github.com/elastic/elasticsearch/pull/53851#discussion_r396430133", "createdAt": "2020-03-23T12:57:32Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java", "diffHunk": "@@ -467,7 +526,63 @@ public Query termsQuery(List<?> values, QueryShardContext context) {\n                         CircuitBreakerService breakerService, MapperService mapperService) {\n                     return new WildcardBytesBinaryDVIndexFieldData(indexSettings.getIndex(), fieldType.name());\n                 }};\n-        }        \n+        }\n+\n+\n+        String normalize(String value) throws IOException {\n+            if (normalizer != null) {\n+                try (TokenStream ts = normalizer.tokenStream(name(), value)) {\n+                    final CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n+                    ts.reset();\n+                    if (ts.incrementToken() == false) {\n+                      throw new IllegalStateException(\"The normalization token stream is \"\n+                          + \"expected to produce exactly 1 token, but got 0 for analyzer \"\n+                          + normalizer + \" and input \\\"\" + value + \"\\\"\");\n+                    }\n+                    final String newValue = termAtt.toString();\n+                    if (ts.incrementToken()) {\n+                      throw new IllegalStateException(\"The normalization token stream is \"\n+                          + \"expected to produce exactly 1 token, but got 2+ for analyzer \"\n+                          + normalizer + \" and input \\\"\" + value + \"\\\"\");\n+                    }\n+                    ts.end();\n+                    return newValue;\n+                }\n+            }\n+            return value;\n+        }       \n+        \n+        private static final Pattern WILDCARD_PATTERN = Pattern.compile(\"(\\\\\\\\.)|([?*]+)\");\n+        \n+        String normalizeWildcardPattern(String value) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d3172c32cb993713af9aec45046fde365a3a3fa"}, "originalPosition": 167}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMDU0OA==", "bodyText": "You also need to override checkCompatibility in order to ensure that the normalizer doesn't change ?", "url": "https://github.com/elastic/elasticsearch/pull/53851#discussion_r396430548", "createdAt": "2020-03-23T12:58:13Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java", "diffHunk": "@@ -206,13 +235,37 @@ public WildcardFieldType() {\n \n         protected WildcardFieldType(WildcardFieldType ref) {\n             super(ref);\n+            this.normalizer = ref.normalizer;\n         }\n \n         public WildcardFieldType clone() {\n             WildcardFieldType result = new WildcardFieldType(this);\n             return result;\n         }\n         \n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (super.equals(o) == false) {\n+                return false;\n+            }\n+            WildcardFieldType other = (WildcardFieldType) o;\n+            return Objects.equals(normalizer, other.normalizer);\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return 31 * super.hashCode() + Objects.hash(normalizer);\n+        }       \n+        \n+        private NamedAnalyzer normalizer() {\n+            return normalizer;\n+        }\n+\n+        public void setNormalizer(NamedAnalyzer normalizer) {\n+            checkIfFrozen();\n+            this.normalizer = normalizer;\n+        }                \n                 ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d3172c32cb993713af9aec45046fde365a3a3fa"}, "originalPosition": 118}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NjgyNDY3", "url": "https://github.com/elastic/elasticsearch/pull/53851#pullrequestreview-379682467", "createdAt": "2020-03-23T17:57:19Z", "commit": {"oid": "46439ece25835726d7a7ed1b8ae5ab145fb7072f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d42128cf33de8d6c2c40437a0fc39c0be930811e", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/d42128cf33de8d6c2c40437a0fc39c0be930811e", "committedDate": "2020-03-23T18:10:11Z", "message": "Add support for normalisation to wildcard field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cf000001c7052a7aa928e0dc859c4a983c85b49", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/2cf000001c7052a7aa928e0dc859c4a983c85b49", "committedDate": "2020-03-23T18:10:11Z", "message": "Tidied imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccefc677169317c941a88f19678ba0df05bed371", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/ccefc677169317c941a88f19678ba0df05bed371", "committedDate": "2020-03-23T18:10:11Z", "message": "Added docs about params"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea6bd9a0f69867f2fb5165d6ab6e3d98d698acc4", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/ea6bd9a0f69867f2fb5165d6ab6e3d98d698acc4", "committedDate": "2020-03-23T18:10:11Z", "message": "Fix outdated error message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8817a4bec13c0f5d5cf1e86827b9f2d8a9e2fd2", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/e8817a4bec13c0f5d5cf1e86827b9f2d8a9e2fd2", "committedDate": "2020-03-23T18:10:11Z", "message": "Avoid normaliser butchering wildcard query special characters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "567a3fb0b032efd59081532a511df31c5b2e8cef", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/567a3fb0b032efd59081532a511df31c5b2e8cef", "committedDate": "2020-03-23T18:10:11Z", "message": "Fix broken test expectations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7b934b5c428162b9c4996d28f4d576b272de462", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/c7b934b5c428162b9c4996d28f4d576b272de462", "committedDate": "2020-03-23T18:10:12Z", "message": "Fix wrong toString method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dc50492759e936579b16773d9ed1ac9e73aa884", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/8dc50492759e936579b16773d9ed1ac9e73aa884", "committedDate": "2020-03-23T18:10:12Z", "message": "Address review comments - common method for normalising wildcard patterns and checkCompatibility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f242fc9f23294400bcc5593a7b24c941868e399", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/4f242fc9f23294400bcc5593a7b24c941868e399", "committedDate": "2020-03-23T18:10:12Z", "message": "Remove unused import"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46439ece25835726d7a7ed1b8ae5ab145fb7072f", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/46439ece25835726d7a7ed1b8ae5ab145fb7072f", "committedDate": "2020-03-23T16:03:30Z", "message": "Remove unused import"}, "afterCommit": {"oid": "4f242fc9f23294400bcc5593a7b24c941868e399", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/4f242fc9f23294400bcc5593a7b24c941868e399", "committedDate": "2020-03-23T18:10:12Z", "message": "Remove unused import"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1886, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}