{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMzc4NDQ5", "number": 55896, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzozMzowMFrOD3a64Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToyMzoyMVrOD3xJ9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDM5MzI5OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzozMzowMFrOGNqzIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToyOToxM1rOGONwmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4NTg4OA==", "bodyText": "Can you break up this up into sourceSet creation and task creation methods ?\nI am converting the yamlTests to independent sourceSets and task, and would like to re-use the sourceSet parts here. However, I don't think the task part is re-usabe. Below is my requirement for task creation:\n    RestIntegTestTask yamlTestTask = project.getTasks()\n            .create(\"yamlTest\", RestIntegTestTask.class, task -> {\n                task.dependsOn(project.getTasks().getByName(\"copyRestApiSpecsTask\"));\n            });\n\nrequires a custom Test.class, can't use task configuration avoidance (register vs. create) due to the constructor of RestIntegTestTask, needs a dependency.\nI have a WIP for the YAML tests here: https://github.com/elastic/elasticsearch/pull/55833/files#diff-c8d3f49f55d848e6358cf9ebf14b7a79R48", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r416985888", "createdAt": "2020-04-28T23:33:00Z", "author": {"login": "jakelandis"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +132,61 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ef6e79ddebc7b4df13df057347648899ce87463"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1MTA1NA==", "bodyText": "I know that we use RestIntegTestTask, that exists for a mixture of reasons that I believe are all no longer relevant (eg task ordering which is now solved by testclusters, or common setup which is solved by your plugin instead of inside task creation). Regarding needing a dependency, that can be done by your plugin after the task is created.", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417551054", "createdAt": "2020-04-29T19:15:24Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +132,61 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4NTg4OA=="}, "originalCommit": {"oid": "6ef6e79ddebc7b4df13df057347648899ce87463"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1ODY4Mg==", "bodyText": "We could have this method take a Function<? super SourceSet, ? extends TaskProvider<?>> factory argument such that the caller defines how the \"test task\" should be created, and the utility would handle wiring it to check, etc.", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417558682", "createdAt": "2020-04-29T19:29:13Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +132,61 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4NTg4OA=="}, "originalCommit": {"oid": "6ef6e79ddebc7b4df13df057347648899ce87463"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDQxODMwOnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzo0NDoxMFrOGNrBmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToyMTowM1rOGONerA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4OTU5Mg==", "bodyText": "If I understand this (which I may not :) ) this applies the test configuration to the new source set ? (e.g. if testCompile depends on foo, then so does myNewTest sourceSet ?)\nLooking at this for the requirements for YAML tests, I wonder if this should be optional since we want the YAML tests to have no dependencies beyond the test framework.", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r416989592", "createdAt": "2020-04-28T23:44:10Z", "author": {"login": "jakelandis"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +132,61 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {\n+        project.getPluginManager().apply(ElasticsearchJavaPlugin.class);\n+\n+        // create our test source set and task\n+        SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+        SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n+        TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n+        testTask.configure(task -> {\n+            task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n+            task.setClasspath(extraTestSourceSet.getRuntimeClasspath());\n+        });\n+        SourceSet mainSourceSet = sourceSets.getByName(\"main\");\n+        SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getCompileConfigurationName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ef6e79ddebc7b4df13df057347648899ce87463"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1MzQyOA==", "bodyText": "We could have this utility method accept a list of source sets from which the new source set should extend.", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417553428", "createdAt": "2020-04-29T19:19:51Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +132,61 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {\n+        project.getPluginManager().apply(ElasticsearchJavaPlugin.class);\n+\n+        // create our test source set and task\n+        SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+        SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n+        TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n+        testTask.configure(task -> {\n+            task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n+            task.setClasspath(extraTestSourceSet.getRuntimeClasspath());\n+        });\n+        SourceSet mainSourceSet = sourceSets.getByName(\"main\");\n+        SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getCompileConfigurationName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4OTU5Mg=="}, "originalCommit": {"oid": "6ef6e79ddebc7b4df13df057347648899ce87463"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1NDA5Mg==", "bodyText": "I can work on that, although I'd like to do it in a followup. At first I tried having the tests only extend main. However, we have several IT tests in server which use static utility methods from unit test classes. It will take some work to sort that all out.", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417554092", "createdAt": "2020-04-29T19:21:03Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +132,61 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {\n+        project.getPluginManager().apply(ElasticsearchJavaPlugin.class);\n+\n+        // create our test source set and task\n+        SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+        SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n+        TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n+        testTask.configure(task -> {\n+            task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n+            task.setClasspath(extraTestSourceSet.getRuntimeClasspath());\n+        });\n+        SourceSet mainSourceSet = sourceSets.getByName(\"main\");\n+        SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getCompileConfigurationName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4OTU5Mg=="}, "originalCommit": {"oid": "6ef6e79ddebc7b4df13df057347648899ce87463"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDQzMTA4OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzo0OTo0MlrOGNrI8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToyMTo0NVrOGONgPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTQ3NA==", "bodyText": "should this task.setGroup(JavaBasePlugin.VERIFICATION_GROUP); ? (It helps with the Intellij Gradle view)", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r416991474", "createdAt": "2020-04-28T23:49:42Z", "author": {"login": "jakelandis"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +132,61 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {\n+        project.getPluginManager().apply(ElasticsearchJavaPlugin.class);\n+\n+        // create our test source set and task\n+        SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+        SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n+        TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n+        testTask.configure(task -> {\n+            task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n+            task.setClasspath(extraTestSourceSet.getRuntimeClasspath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ef6e79ddebc7b4df13df057347648899ce87463"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1NDQ5NA==", "bodyText": "good call, done", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417554494", "createdAt": "2020-04-29T19:21:45Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +132,61 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {\n+        project.getPluginManager().apply(ElasticsearchJavaPlugin.class);\n+\n+        // create our test source set and task\n+        SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+        SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n+        TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n+        testTask.configure(task -> {\n+            task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n+            task.setClasspath(extraTestSourceSet.getRuntimeClasspath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTQ3NA=="}, "originalCommit": {"oid": "6ef6e79ddebc7b4df13df057347648899ce87463"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDQ0NTQ4OnYy", "diffSide": "RIGHT", "path": "server/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzo1NjoxM1rOGNrRYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToyMzoxNlrOGONjvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MzYzNA==", "bodyText": "should the help method setup the TestCompile dependency on :test:framework ? (admittedly, I don't know how to handle the exclude here...but i think all tests will need that dependency)", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r416993634", "createdAt": "2020-04-28T23:56:13Z", "author": {"login": "jakelandis"}, "path": "server/build.gradle", "diffHunk": "@@ -134,11 +135,15 @@ dependencies {\n     // tests use the locally compiled version of server\n     exclude group: 'org.elasticsearch', module: 'server'\n   }\n+  internalClusterTestCompile(project(\":test:framework\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ef6e79ddebc7b4df13df057347648899ce87463"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1NTM4OQ==", "bodyText": "Possibly, but I'd like to consolidate that after we have converted all the xpack projects to using this plugin. For now, I want to stay simple as possible and only make it more complicated as we see universal commonalities.", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417555389", "createdAt": "2020-04-29T19:23:16Z", "author": {"login": "rjernst"}, "path": "server/build.gradle", "diffHunk": "@@ -134,11 +135,15 @@ dependencies {\n     // tests use the locally compiled version of server\n     exclude group: 'org.elasticsearch', module: 'server'\n   }\n+  internalClusterTestCompile(project(\":test:framework\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MzYzNA=="}, "originalCommit": {"oid": "6ef6e79ddebc7b4df13df057347648899ce87463"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODAxOTAzOnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToxODoyOVrOGONZVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToxODoyOVrOGONZVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1MjcyNg==", "bodyText": "Let's use the SourceSet constants here.", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417552726", "createdAt": "2020-04-29T19:18:29Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +130,69 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {\n+        project.getPluginManager().apply(ElasticsearchJavaPlugin.class);\n+\n+        // create our test source set and task\n+        SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+        SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n+        TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n+        testTask.configure(task -> {\n+            task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n+            task.setClasspath(extraTestSourceSet.getRuntimeClasspath());\n+        });\n+        SourceSet mainSourceSet = sourceSets.getByName(\"main\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "407062ae7cfbf7e6bb5e3095ca20a909d659b044"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODAzNjM4OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToyMzoyMVrOGONj7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToyMzoyMVrOGONj7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1NTQzOA==", "bodyText": "This could also just be mainSourceSet.getOutput().plus(testSourceSet.getOutput()).plus(extraTestCompileConfig)", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417555438", "createdAt": "2020-04-29T19:23:21Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +130,69 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {\n+        project.getPluginManager().apply(ElasticsearchJavaPlugin.class);\n+\n+        // create our test source set and task\n+        SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+        SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n+        TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n+        testTask.configure(task -> {\n+            task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n+            task.setClasspath(extraTestSourceSet.getRuntimeClasspath());\n+        });\n+        SourceSet mainSourceSet = sourceSets.getByName(\"main\");\n+        SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getCompileConfigurationName);\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getImplementationConfigurationName);\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getRuntimeConfigurationName);\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getRuntimeOnlyConfigurationName);\n+\n+        // tie this new test source set to the main and test source sets\n+        Configuration extraTestCompileConfig = project.getConfigurations()\n+            .getByName(extraTestSourceSet.getCompileClasspathConfigurationName());\n+        Configuration extraTestRuntimeConfig = project.getConfigurations()\n+            .getByName(extraTestSourceSet.getRuntimeClasspathConfigurationName());\n+        extraTestSourceSet.setCompileClasspath(\n+            project.getObjects().fileCollection().from(mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestCompileConfig)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "407062ae7cfbf7e6bb5e3095ca20a909d659b044"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2488, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}