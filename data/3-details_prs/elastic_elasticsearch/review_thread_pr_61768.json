{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2ODYyMzM2", "number": 61768, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo0Njo0NlrOEmitKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNjoyMTozMVrOEps9Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODQ5OTYyOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo0Njo0NlrOHWoWJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo0Njo0NlrOHWoWJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5MTc0OA==", "bodyText": "I know it's not a good design but couldn't think of a better way to ensure sequential indexing in case of throttling", "url": "https://github.com/elastic/elasticsearch/pull/61768#discussion_r493491748", "createdAt": "2020-09-23T11:46:46Z", "author": {"login": "nitin2goyal"}, "path": "server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java", "diffHunk": "@@ -5786,6 +5788,69 @@ private void runTestDeleteFailure(final CheckedBiConsumer<InternalEngine, Engine\n         }\n     }\n \n+    public void testIndexThrottling() throws Exception {\n+        engine = spy(engine);\n+\n+        long sleepInMillis = 1000;\n+        engine.activateThrottling();\n+        Long timeTaken = concurrentIndexingWithSleep(sleepInMillis);\n+        assertTrue(timeTaken > (2 * sleepInMillis));\n+\n+        engine.deactivateThrottling();\n+        timeTaken = concurrentIndexingWithSleep(sleepInMillis);\n+        assertTrue(timeTaken < (2 * sleepInMillis));\n+    }\n+\n+    private long concurrentIndexingWithSleep(long sleepInMillis) throws Exception {\n+        CountDownLatch countDownLatch = new CountDownLatch(3);\n+        Mockito.doAnswer((Answer<InternalEngine.IndexingStrategy>) invocation -> {\n+            try {\n+                Thread.sleep(sleepInMillis);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93f6f163c4cfac8872d28e2facd1db4022e145ad"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTYzNTYxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/engine/Engine.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNjoyMToxM1rOHbiOSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNjoyMToxM1rOHbiOSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNDMxMw==", "bodyText": "I would like to add a comment that this is to be used in assertions and tests only.", "url": "https://github.com/elastic/elasticsearch/pull/61768#discussion_r498634313", "createdAt": "2020-10-02T06:21:13Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/index/engine/Engine.java", "diffHunk": "@@ -279,6 +279,13 @@ long getThrottleTimeInMillis() {\n         boolean isThrottled() {\n             return lock != NOOP_LOCK;\n         }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee786069c4f82f25ba5ef0782f4f960efb5740c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTYzNjEwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNjoyMTozMVrOHbiOlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNjoyMTozMVrOHbiOlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNDM4OQ==", "bodyText": "Also add comment here on only use in assertions and tests.", "url": "https://github.com/elastic/elasticsearch/pull/61768#discussion_r498634389", "createdAt": "2020-10-02T06:21:31Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java", "diffHunk": "@@ -2178,6 +2178,10 @@ public boolean isThrottled() {\n         return throttle.isThrottled();\n     }\n \n+    boolean throttleLockIsHeldByCurrentThread() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee786069c4f82f25ba5ef0782f4f960efb5740c"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1780, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}