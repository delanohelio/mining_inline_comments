{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NzUxOTE3", "number": 56608, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDoyMjowNVrOD7rMMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDoyMjowNVrOD7rMMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTAwMjExOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDoyMjowNVrOGUJICQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDoyMjowNVrOGUJICQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc3NDIxNw==", "bodyText": "The synchronization here isn't 100% necessary, could as well just copy the map before checking the listener key-set, but I figured the logic (and worst case assertion message) is a little easier to follow if we prevent concurrently starting another snapshot finalization.", "url": "https://github.com/elastic/elasticsearch/pull/56608#discussion_r423774217", "createdAt": "2020-05-12T14:22:05Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -430,11 +431,15 @@ public void applyClusterState(ClusterChangedEvent event) {\n     private boolean assertConsistentWithClusterState(ClusterState state) {\n         final SnapshotsInProgress snapshotsInProgress = state.custom(SnapshotsInProgress.TYPE);\n         if (snapshotsInProgress != null && snapshotsInProgress.entries().isEmpty() == false) {\n-            final Set<Snapshot> runningSnapshots =\n-                snapshotsInProgress.entries().stream().map(SnapshotsInProgress.Entry::snapshot).collect(Collectors.toSet());\n-            final Set<Snapshot> snapshotListenerKeys = snapshotCompletionListeners.keySet();\n-            assert runningSnapshots.containsAll(snapshotListenerKeys) : \"Saw completion listeners for unknown snapshots in \"\n-                + snapshotListenerKeys + \" but running snapshots are \" + runningSnapshots;\n+            synchronized (endingSnapshots) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44a82596300ec71ce8e99a8444ca8d5d86646ced"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 458, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}