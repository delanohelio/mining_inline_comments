{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MDgzNDk4", "number": 64650, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTowNDo0OVrOE1ssIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTowNDo0OVrOE1ssIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzQyMTc5OnYy", "diffSide": "RIGHT", "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ParsedMediaType.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTowNDo0OVrOHuHi1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNToyMjoxMlrOHuIVvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEyMDE0OQ==", "bodyText": "I think for keyValueParam[0] you only want to check trailing whitespace, and for keyValueParam[1] you only want to check for leading whitespace. trim() checks for both.", "url": "https://github.com/elastic/elasticsearch/pull/64650#discussion_r518120149", "createdAt": "2020-11-05T15:04:49Z", "author": {"login": "jakelandis"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ParsedMediaType.java", "diffHunk": "@@ -90,16 +91,14 @@ public static ParsedMediaType parseMediaType(String headerValue) {\n                     if (paramsAsString.isEmpty()) {\n                         continue;\n                     }\n-                    // intentionally allowing to have spaces around `=`\n-                    // https://tools.ietf.org/html/rfc7231#section-3.1.1.1 disallows this\n-                    String[] keyValueParam = elements[i].trim().split(\"=\");\n-                    if (keyValueParam.length == 2) {\n-                        String parameterName = keyValueParam[0].toLowerCase(Locale.ROOT).trim();\n-                        String parameterValue = keyValueParam[1].toLowerCase(Locale.ROOT).trim();\n-                        parameters.put(parameterName, parameterValue);\n-                    } else {\n+                    //spaces are allowed between parameters, but not between '=' sign\n+                    String[] keyValueParam = paramsAsString.split(\"=\");\n+                    if (keyValueParam.length != 2 || hasSpaces(keyValueParam[0]) || hasSpaces(keyValueParam[1])) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80b3944f52728bd739fd4ad3f82f52bb014dbffa"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEyMTY2MA==", "bodyText": "I think you can use https://docs.oracle.com/javase/7/docs/api/java/lang/Character.html#isWhitespace(char) for the first and last characters to check them independently.", "url": "https://github.com/elastic/elasticsearch/pull/64650#discussion_r518121660", "createdAt": "2020-11-05T15:06:51Z", "author": {"login": "jakelandis"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ParsedMediaType.java", "diffHunk": "@@ -90,16 +91,14 @@ public static ParsedMediaType parseMediaType(String headerValue) {\n                     if (paramsAsString.isEmpty()) {\n                         continue;\n                     }\n-                    // intentionally allowing to have spaces around `=`\n-                    // https://tools.ietf.org/html/rfc7231#section-3.1.1.1 disallows this\n-                    String[] keyValueParam = elements[i].trim().split(\"=\");\n-                    if (keyValueParam.length == 2) {\n-                        String parameterName = keyValueParam[0].toLowerCase(Locale.ROOT).trim();\n-                        String parameterValue = keyValueParam[1].toLowerCase(Locale.ROOT).trim();\n-                        parameters.put(parameterName, parameterValue);\n-                    } else {\n+                    //spaces are allowed between parameters, but not between '=' sign\n+                    String[] keyValueParam = paramsAsString.split(\"=\");\n+                    if (keyValueParam.length != 2 || hasSpaces(keyValueParam[0]) || hasSpaces(keyValueParam[1])) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEyMDE0OQ=="}, "originalCommit": {"oid": "80b3944f52728bd739fd4ad3f82f52bb014dbffa"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEzMzE4MQ==", "bodyText": "good idea, I was meant to refactor with trim as it was unnecessarily creating garbage", "url": "https://github.com/elastic/elasticsearch/pull/64650#discussion_r518133181", "createdAt": "2020-11-05T15:22:12Z", "author": {"login": "pgomulka"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ParsedMediaType.java", "diffHunk": "@@ -90,16 +91,14 @@ public static ParsedMediaType parseMediaType(String headerValue) {\n                     if (paramsAsString.isEmpty()) {\n                         continue;\n                     }\n-                    // intentionally allowing to have spaces around `=`\n-                    // https://tools.ietf.org/html/rfc7231#section-3.1.1.1 disallows this\n-                    String[] keyValueParam = elements[i].trim().split(\"=\");\n-                    if (keyValueParam.length == 2) {\n-                        String parameterName = keyValueParam[0].toLowerCase(Locale.ROOT).trim();\n-                        String parameterValue = keyValueParam[1].toLowerCase(Locale.ROOT).trim();\n-                        parameters.put(parameterName, parameterValue);\n-                    } else {\n+                    //spaces are allowed between parameters, but not between '=' sign\n+                    String[] keyValueParam = paramsAsString.split(\"=\");\n+                    if (keyValueParam.length != 2 || hasSpaces(keyValueParam[0]) || hasSpaces(keyValueParam[1])) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEyMDE0OQ=="}, "originalCommit": {"oid": "80b3944f52728bd739fd4ad3f82f52bb014dbffa"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3160, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}