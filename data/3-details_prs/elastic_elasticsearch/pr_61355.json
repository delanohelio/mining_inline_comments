{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNjgxNjg2", "number": 61355, "title": "Report anonymous roles in authenticate response", "bodyText": "Report anonymous roles in response to \"GET _security/_authenticate\" API call when:\n\nAnonymous role is enabled\nUser is not the anonymous user\nCredentials is not an API Key\n\nPrevious attempt (#53453) tried to solve this issue by re-locating anonymous role resolution from authz to authc. It has since been reverted (#57853) because of potential issues on how anonymous access can be used with persisted authentication objects, e.g. Watchers (#57711). Hence the current attempt tries to limit the solution to only the reporting side avoid potential implications. I personally feel this is an acceptable solution and it is also consistent with the original ask.\nResolves: #47195", "createdAt": "2020-08-20T06:05:10Z", "url": "https://github.com/elastic/elasticsearch/pull/61355", "merged": true, "mergeCommit": {"oid": "d6a0642736be8495b69239aa3079ad1d983796b6"}, "closed": true, "closedAt": "2020-08-24T01:26:23Z", "author": {"login": "ywangd"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAphxjAH2gAyNDcwNjgxNjg2OjRkMmZkOTNjZTZmNzEzZjI0MzJjN2VlODdkMzI4N2Y4MWViM2ZiY2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdB3osNgH2gAyNDcwNjgxNjg2OmIzNmVmY2IzYjg1OGJkMDRmOTY2NjkwM2YwODgxODNhYzcxODI2ZDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4d2fd93ce6f713f2432c7ee87d3287f81eb3fbcf", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/4d2fd93ce6f713f2432c7ee87d3287f81eb3fbcf", "committedDate": "2020-08-20T05:40:14Z", "message": "Report anonymous roles in authenticate response"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDIwNzMz", "url": "https://github.com/elastic/elasticsearch/pull/61355#pullrequestreview-473020733", "createdAt": "2020-08-23T15:30:38Z", "commit": {"oid": "4d2fd93ce6f713f2432c7ee87d3287f81eb3fbcf"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxNTozMDozOFrOHFN53Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxNTozNDoxMVrOHFN7JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzMjczMw==", "bodyText": "This is rather verbose but I don't have any good suggestions to do otherwise and we don't seem to have a generic need for a cloneWithChanges method !", "url": "https://github.com/elastic/elasticsearch/pull/61355#discussion_r475232733", "createdAt": "2020-08-23T15:30:38Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/user/TransportAuthenticateAction.java", "diffHunk": "@@ -43,7 +49,32 @@ protected void doExecute(Task task, AuthenticateRequest request, ActionListener<\n         } else if (SystemUser.is(runAsUser) || XPackUser.is(runAsUser)) {\n             listener.onFailure(new IllegalArgumentException(\"user [\" + runAsUser.principal() + \"] is internal\"));\n         } else {\n-            listener.onResponse(new AuthenticateResponse(authentication));\n+            final User user = authentication.getUser();\n+            final boolean shouldAddAnonymousRoleNames = anonymousUser.enabled() && false == anonymousUser.equals(user)\n+                && authentication.getAuthenticationType() != Authentication.AuthenticationType.API_KEY;\n+            if (shouldAddAnonymousRoleNames) {\n+                final String[] allRoleNames = Stream.concat(\n+                    Stream.of(user.roles()), Stream.of(anonymousUser.roles())).toArray(String[]::new);\n+                listener.onResponse(new AuthenticateResponse(\n+                    new Authentication(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d2fd93ce6f713f2432c7ee87d3287f81eb3fbcf"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzMjkxNw==", "bodyText": "nit: add a hint that anonymous user is enabled maybe so the test makes more sense when you look at it ?", "url": "https://github.com/elastic/elasticsearch/pull/61355#discussion_r475232917", "createdAt": "2020-08-23T15:32:33Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/qa/basic-enable-security/src/test/java/org/elasticsearch/xpack/security/EnableSecurityOnBasicLicenseIT.java", "diffHunk": "@@ -132,7 +132,7 @@ private void checkAuthentication() throws IOException {\n         final Map<String, Object> auth = getAsMap(\"/_security/_authenticate\");\n         // From file realm, configured in build.gradle", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d2fd93ce6f713f2432c7ee87d3287f81eb3fbcf"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzMzA2MA==", "bodyText": "nit: this only makes sense in the if branch right?", "url": "https://github.com/elastic/elasticsearch/pull/61355#discussion_r475233060", "createdAt": "2020-08-23T15:34:11Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportAuthenticateActionTests.java", "diffHunk": "@@ -118,7 +122,33 @@ public void onFailure(Exception e) {\n         });\n \n         assertThat(responseRef.get(), notNullValue());\n-        assertThat(responseRef.get().authentication(), sameInstance(authentication));\n+        if (anonymousUser.enabled()) {\n+            final Authentication auth = responseRef.get().authentication();\n+            final User authUser = auth.getUser();\n+            List.of(authUser.roles()).containsAll(List.of(authentication.getUser().roles()));\n+            List.of(authUser.roles()).containsAll(List.of(anonymousUser.roles()));\n+            assertThat(authUser.authenticatedUser(), sameInstance(user.authenticatedUser()));\n+            assertThat(auth.getAuthenticatedBy(), sameInstance(auth.getAuthenticatedBy()));\n+            assertThat(auth.getLookedUpBy(), sameInstance(auth.getLookedUpBy()));\n+            assertThat(auth.getVersion(), sameInstance(auth.getVersion()));\n+            assertThat(auth.getAuthenticationType(), sameInstance(auth.getAuthenticationType()));\n+            assertThat(auth.getMetadata(), sameInstance(auth.getMetadata()));\n+        } else {\n+            assertThat(responseRef.get().authentication(), sameInstance(authentication));\n+        }\n         assertThat(throwableRef.get(), nullValue());\n     }\n+\n+    private AnonymousUser prepareAnonymousUser() {\n+        final AnonymousUser anonymousUser = mock(AnonymousUser.class);\n+        if (randomBoolean()) {\n+            when(anonymousUser.enabled()).thenReturn(true);\n+        } else {\n+            when(anonymousUser.enabled()).thenReturn(false);\n+        }\n+        final String[] roleNames = randomList(1, 4, () -> randomAlphaOfLengthBetween(4, 12)).toArray(new String[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d2fd93ce6f713f2432c7ee87d3287f81eb3fbcf"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15597908fca415807f5bbcf78b1f10f5374d58fb", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/15597908fca415807f5bbcf78b1f10f5374d58fb", "committedDate": "2020-08-24T00:40:08Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b36efcb3b858bd04f9666903f088183ac71826d0", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/b36efcb3b858bd04f9666903f088183ac71826d0", "committedDate": "2020-08-24T00:40:23Z", "message": "Merge remote-tracking branch 'origin/master' into es-47195-anonymous-role-take2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4790, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}