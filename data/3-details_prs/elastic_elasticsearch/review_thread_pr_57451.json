{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MTEzODYw", "number": 57451, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzo1MzowNVrOEBdRuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODozMzozNlrOEBeEmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTYzNzA0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/type/DateUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzo1MzowNVrOGdUNzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODozMjo0OVrOGdVfAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5MzEwMg==", "bodyText": "Why '+3' here?", "url": "https://github.com/elastic/elasticsearch/pull/57451#discussion_r433393102", "createdAt": "2020-06-01T17:53:05Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/type/DateUtils.java", "diffHunk": "@@ -33,10 +54,21 @@ public static ZonedDateTime asDateTime(long millis) {\n      * Parses the given string into a DateTime using UTC as a default timezone.\n      */\n     public static ZonedDateTime asDateTime(String dateFormat) {\n-        return DateFormatters.from(UTC_DATE_TIME_FORMATTER.parse(dateFormat)).withZoneSameInstant(UTC);\n+        int separatorIdx = dateFormat.indexOf('-');\n+        if (separatorIdx == 0) { // negative year\n+            separatorIdx = dateFormat.indexOf('-', 1);\n+        }\n+        separatorIdx = dateFormat.indexOf('-', separatorIdx + 1) + 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4c6d3622d73e94a9c56ac0b5e686da798ffb465"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQwNzA5MQ==", "bodyText": "if you have a date like -1000-11-22T10:20:30....:\ncheck for the first char, if - move to idx 1.\nThen detect the first -, then detect the second - and +3 to move past 22 to the T or whitespace.", "url": "https://github.com/elastic/elasticsearch/pull/57451#discussion_r433407091", "createdAt": "2020-06-01T18:19:57Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/type/DateUtils.java", "diffHunk": "@@ -33,10 +54,21 @@ public static ZonedDateTime asDateTime(long millis) {\n      * Parses the given string into a DateTime using UTC as a default timezone.\n      */\n     public static ZonedDateTime asDateTime(String dateFormat) {\n-        return DateFormatters.from(UTC_DATE_TIME_FORMATTER.parse(dateFormat)).withZoneSameInstant(UTC);\n+        int separatorIdx = dateFormat.indexOf('-');\n+        if (separatorIdx == 0) { // negative year\n+            separatorIdx = dateFormat.indexOf('-', 1);\n+        }\n+        separatorIdx = dateFormat.indexOf('-', separatorIdx + 1) + 3;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5MzEwMg=="}, "originalCommit": {"oid": "e4c6d3622d73e94a9c56ac0b5e686da798ffb465"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQxMzg5MQ==", "bodyText": "Worth a comment in the code.", "url": "https://github.com/elastic/elasticsearch/pull/57451#discussion_r433413891", "createdAt": "2020-06-01T18:32:49Z", "author": {"login": "costin"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/type/DateUtils.java", "diffHunk": "@@ -33,10 +54,21 @@ public static ZonedDateTime asDateTime(long millis) {\n      * Parses the given string into a DateTime using UTC as a default timezone.\n      */\n     public static ZonedDateTime asDateTime(String dateFormat) {\n-        return DateFormatters.from(UTC_DATE_TIME_FORMATTER.parse(dateFormat)).withZoneSameInstant(UTC);\n+        int separatorIdx = dateFormat.indexOf('-');\n+        if (separatorIdx == 0) { // negative year\n+            separatorIdx = dateFormat.indexOf('-', 1);\n+        }\n+        separatorIdx = dateFormat.indexOf('-', separatorIdx + 1) + 3;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5MzEwMg=="}, "originalCommit": {"oid": "e4c6d3622d73e94a9c56ac0b5e686da798ffb465"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTY1MDA1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/type/DateUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzo1NzoxNFrOGdUWYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODoyODowNlrOGdVVPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5NTI5OQ==", "bodyText": "Why are these needed in QL and not SQL only?\nAlso, SQL has a DateUtils class with DateTimeFormatters that use whitespace separators. Haven't looked into this in more depth, but have you considered having a single definition source for these DateTimeFormatters?", "url": "https://github.com/elastic/elasticsearch/pull/57451#discussion_r433395299", "createdAt": "2020-06-01T17:57:14Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/type/DateUtils.java", "diffHunk": "@@ -6,19 +6,40 @@\n \n package org.elasticsearch.xpack.ql.type;\n \n-import org.elasticsearch.common.time.DateFormatter;\n import org.elasticsearch.common.time.DateFormatters;\n \n import java.time.Instant;\n import java.time.ZoneId;\n import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_TIME;\n \n //NB: Taken from sql-proto.\n public final class DateUtils {\n \n     public static final ZoneId UTC = ZoneId.of(\"Z\");\n \n-    private static final DateFormatter UTC_DATE_TIME_FORMATTER = DateFormatter.forPattern(\"date_optional_time\").withZone(UTC);\n+    private static final DateTimeFormatter DATE_OPTIONAL_TIME_FORMATTER_WHITESPACE = new DateTimeFormatterBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4c6d3622d73e94a9c56ac0b5e686da798ffb465"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQxMTM5MQ==", "bodyText": "Currently SQL is using the QL for the String->DATETIME conversion, and SQL has the additional conversions for String->DATE, String->TIME. If we move the leniency only to SQL we'll have to move that conversion there. What do you think?\nAlso we have this issue for consolidating the date related utils: #56494 so I'd rather do the whole refactoring in a separate PR.", "url": "https://github.com/elastic/elasticsearch/pull/57451#discussion_r433411391", "createdAt": "2020-06-01T18:28:06Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/type/DateUtils.java", "diffHunk": "@@ -6,19 +6,40 @@\n \n package org.elasticsearch.xpack.ql.type;\n \n-import org.elasticsearch.common.time.DateFormatter;\n import org.elasticsearch.common.time.DateFormatters;\n \n import java.time.Instant;\n import java.time.ZoneId;\n import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_TIME;\n \n //NB: Taken from sql-proto.\n public final class DateUtils {\n \n     public static final ZoneId UTC = ZoneId.of(\"Z\");\n \n-    private static final DateFormatter UTC_DATE_TIME_FORMATTER = DateFormatter.forPattern(\"date_optional_time\").withZone(UTC);\n+    private static final DateTimeFormatter DATE_OPTIONAL_TIME_FORMATTER_WHITESPACE = new DateTimeFormatterBuilder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5NTI5OQ=="}, "originalCommit": {"oid": "e4c6d3622d73e94a9c56ac0b5e686da798ffb465"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTc2NzMwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/type/DateUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODozMzozNlrOGdVgnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODozMzozNlrOGdVgnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQxNDMwMw==", "bodyText": "It's annoying the format builder does not allow for two literals to be specified as either/or yet supports optional.", "url": "https://github.com/elastic/elasticsearch/pull/57451#discussion_r433414303", "createdAt": "2020-06-01T18:33:36Z", "author": {"login": "costin"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/type/DateUtils.java", "diffHunk": "@@ -6,19 +6,40 @@\n \n package org.elasticsearch.xpack.ql.type;\n \n-import org.elasticsearch.common.time.DateFormatter;\n import org.elasticsearch.common.time.DateFormatters;\n \n import java.time.Instant;\n import java.time.ZoneId;\n import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_TIME;\n \n //NB: Taken from sql-proto.\n public final class DateUtils {\n \n     public static final ZoneId UTC = ZoneId.of(\"Z\");\n \n-    private static final DateFormatter UTC_DATE_TIME_FORMATTER = DateFormatter.forPattern(\"date_optional_time\").withZone(UTC);\n+    private static final DateTimeFormatter DATE_OPTIONAL_TIME_FORMATTER_WHITESPACE = new DateTimeFormatterBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4c6d3622d73e94a9c56ac0b5e686da798ffb465"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3812, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}