{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NjQ3ODY3", "number": 59648, "title": "Extensibility for Composite Agg", "bodyText": "This PR adds the ability to plug new ValuesSourceType support into Composite aggregations via the ValuesSourceRegistry.  This should let plugins which define new field types wire those types into composite.  That said, I didn't actually wire up anything from a plugin because we don't have a good test case right now.  We're also able to get rid of a bunch of instanceof checks, and replace some uses of ValueType with ValuesSourceType.\nI've left a few notes around what I consider the rough edges of this right now.", "createdAt": "2020-07-15T18:08:46Z", "url": "https://github.com/elastic/elasticsearch/pull/59648", "merged": true, "mergeCommit": {"oid": "65caee9163a0b57b3d74ac9d8bd4157be14b3339"}, "closed": true, "closedAt": "2020-08-06T16:34:15Z", "author": {"login": "not-napoleon"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0281gAH2gAyNDQ5NjQ3ODY3OmI5OTQ2MTc5MzcyMjg1Y2RkNDQ1YzI5YjdlYmQ3MzY2ZjgxOWU0NTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8RrSEAFqTQ2MjYzODExNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b9946179372285cdd445c29b7ebd7366f819e458", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/b9946179372285cdd445c29b7ebd7366f819e458", "committedDate": "2020-07-14T14:31:28Z", "message": "use the new field-based resolver for composite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bac2f68549353915bdb9d57c1ece75561ad29b70", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/bac2f68549353915bdb9d57c1ece75561ad29b70", "committedDate": "2020-07-15T17:01:08Z", "message": "Move SingleDimensionVS creation onto CompositeVSConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1becefa8b2a52fbaf475f769efebcf593438dc5", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/f1becefa8b2a52fbaf475f769efebcf593438dc5", "committedDate": "2020-07-15T21:45:23Z", "message": "Make SingleDimensionVS creation injectable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ead736d0721ce1c15a864b977ca043f9024d6aca", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/ead736d0721ce1c15a864b977ca043f9024d6aca", "committedDate": "2020-07-20T18:13:01Z", "message": "Add composite lookup to the VS Registry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98332148ecd2b13232ccc202ed5db7dc44c9a1c7", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/98332148ecd2b13232ccc202ed5db7dc44c9a1c7", "committedDate": "2020-07-20T20:49:12Z", "message": "Drop unnecessary null conversions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78fecf0d2263b724e9f351fd2f6336cd5724c133", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/78fecf0d2263b724e9f351fd2f6336cd5724c133", "committedDate": "2020-07-21T14:33:43Z", "message": "Make CompositeBucketStrategy immutable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c55c777d8b5657bdc147d4593087a66f8a1110f", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/9c55c777d8b5657bdc147d4593087a66f8a1110f", "committedDate": "2020-07-21T20:46:47Z", "message": "Wire up DateHisto composites"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "880ed6b8725614e22507a7be956565174c8ef07f", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/880ed6b8725614e22507a7be956565174c8ef07f", "committedDate": "2020-07-22T18:51:51Z", "message": "Wire up histogram"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08006e3ee4144a6503bedcdd33adc38b3a3a03d4", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/08006e3ee4144a6503bedcdd33adc38b3a3a03d4", "committedDate": "2020-07-22T19:22:40Z", "message": "Wire up geotile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "267c2bbf15edcc55b0f1cc4fe89694a2cf1e4c07", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/267c2bbf15edcc55b0f1cc4fe89694a2cf1e4c07", "committedDate": "2020-07-22T19:51:15Z", "message": "make name a top level parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "482eb61374d188b0c69ddce302ec4439f084a0c3", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/482eb61374d188b0c69ddce302ec4439f084a0c3", "committedDate": "2020-07-23T14:44:19Z", "message": "wire up terms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7275e46055ca0bf24534f59340d8656cd68c72e2", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/7275e46055ca0bf24534f59340d8656cd68c72e2", "committedDate": "2020-07-28T15:21:21Z", "message": "Fix failing doc test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c30020a8f0eae84e03e1f496776c88f558eddb", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/89c30020a8f0eae84e03e1f496776c88f558eddb", "committedDate": "2020-07-29T13:31:39Z", "message": "Terms should support boolean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4546d99d59507a4bb908f133ece47087763adf2b", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/4546d99d59507a4bb908f133ece47087763adf2b", "committedDate": "2020-07-29T17:59:50Z", "message": "test rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a035d5d0591a41e443e0db46bcb57c6529d6edc", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/1a035d5d0591a41e443e0db46bcb57c6529d6edc", "committedDate": "2020-07-29T19:05:18Z", "message": "Merge branch 'master' into composite-date-vst"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4678328430fb30a7507d9418a82002a1f62747c", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/e4678328430fb30a7507d9418a82002a1f62747c", "committedDate": "2020-07-29T21:10:25Z", "message": "Tests and default VST for geopoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c6bc4aceed62eebb534cc57e96e73f95bb6733a", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/3c6bc4aceed62eebb534cc57e96e73f95bb6733a", "committedDate": "2020-07-30T16:02:51Z", "message": "Additional unmapped tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c87db76194af5089f7d827d353c0c5d4366ed029", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/c87db76194af5089f7d827d353c0c5d4366ed029", "committedDate": "2020-07-30T16:37:21Z", "message": "Move default VST in line with how single value does it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef398db887558b6336c340093d09142b686eb25a", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/ef398db887558b6336c340093d09142b686eb25a", "committedDate": "2020-07-30T17:10:50Z", "message": "Rename value type to match intended use"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NjAyNjUw", "url": "https://github.com/elastic/elasticsearch/pull/59648#pullrequestreview-458602650", "createdAt": "2020-07-30T17:17:16Z", "commit": {"oid": "ef398db887558b6336c340093d09142b686eb25a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoxNzoxN1rOG5sdPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoxNzoxN1rOG5sdPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1MDM5OQ==", "bodyText": "This preserves the existing behavior (i.e. it tracks composite usage like it was tracked before setting up the registry). It might be worth more detailed tracking, since we can capture what key types and values sources are being used.   But this PR is big enough already, and we don't have a clear plan for composite usage tracking, so I'm leaving it be for now.  Can open a ticket if folks think it's worth tinkering with, or we can just leave it alone.", "url": "https://github.com/elastic/elasticsearch/pull/59648#discussion_r463150399", "createdAt": "2020-07-30T17:17:17Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeAggregationBuilder.java", "diffHunk": "@@ -61,6 +62,14 @@\n         PARSER.declareObject(CompositeAggregationBuilder::aggregateAfter, (p, context) -> p.map(), AFTER_FIELD_NAME);\n     }\n \n+    public static void registerAggregators(ValuesSourceRegistry.Builder builder) {\n+        DateHistogramValuesSourceBuilder.register(builder);\n+        HistogramValuesSourceBuilder.register(builder);\n+        GeoTileGridValuesSourceBuilder.register(builder);\n+        TermsValuesSourceBuilder.register(builder);\n+        builder.registerUsage(NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef398db887558b6336c340093d09142b686eb25a"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NjA5NTIz", "url": "https://github.com/elastic/elasticsearch/pull/59648#pullrequestreview-458609523", "createdAt": "2020-07-30T17:26:32Z", "commit": {"oid": "ef398db887558b6336c340093d09142b686eb25a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoyNjozMlrOG5syNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoyNjozMlrOG5syNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1NTc2Ng==", "bodyText": "It's definitely a little weird that CompositeValuesSourceConfig is both the object that holds this function, and a parameter to this function.  I'm pretty confidant that there's a less tangled way to do this.  My plan is to land this initial change to get stuff into the registry at all, and try to neaten up this edge in a follow up PR.", "url": "https://github.com/elastic/elasticsearch/pull/59648#discussion_r463155766", "createdAt": "2020-07-30T17:26:32Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeValuesSourceConfig.java", "diffHunk": "@@ -19,13 +19,29 @@\n \n package org.elasticsearch.search.aggregations.bucket.composite;\n \n+import org.apache.lucene.index.IndexReader;\n import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.util.BigArrays;\n import org.elasticsearch.index.mapper.MappedFieldType;\n import org.elasticsearch.search.DocValueFormat;\n import org.elasticsearch.search.aggregations.support.ValuesSource;\n import org.elasticsearch.search.sort.SortOrder;\n \n-class CompositeValuesSourceConfig {\n+import java.util.function.LongConsumer;\n+\n+public class CompositeValuesSourceConfig {\n+\n+    @FunctionalInterface\n+    public interface SingleDimensionValuesSourceProvider {\n+        SingleDimensionValuesSource<?> createValuesSource(\n+            BigArrays bigArrays,\n+            IndexReader reader,\n+            int size,\n+            LongConsumer addRequestCircuitBreakerBytes,\n+            CompositeValuesSourceConfig config", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef398db887558b6336c340093d09142b686eb25a"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NjIxNzY0", "url": "https://github.com/elastic/elasticsearch/pull/59648#pullrequestreview-458621764", "createdAt": "2020-07-30T17:44:08Z", "commit": {"oid": "ef398db887558b6336c340093d09142b686eb25a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzo0NDowOFrOG5tXnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzo0NDowOFrOG5tXnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE2NTM0MQ==", "bodyText": "We should be able to do this now,  but I didn't.", "url": "https://github.com/elastic/elasticsearch/pull/59648#discussion_r463165341", "createdAt": "2020-07-30T17:44:08Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/DateHistogramValuesSourceBuilder.java", "diffHunk": "@@ -246,25 +253,61 @@ public DateHistogramValuesSourceBuilder offset(long offset) {\n         return this;\n     }\n \n+    public static void register(ValuesSourceRegistry.Builder builder) {\n+        builder.registerComposite(\n+            TYPE,\n+            List.of(CoreValuesSourceType.DATE, CoreValuesSourceType.NUMERIC),\n+            ((valuesSourceConfig, compositeBucketStrategy, name, hasScript, format, missingBucket, order) -> {\n+                ValuesSource.Numeric numeric = (ValuesSource.Numeric) valuesSourceConfig.getValuesSource();\n+                // TODO once composite is plugged in to the values source registry or at least understands Date values source types use it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef398db887558b6336c340093d09142b686eb25a"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9119051112725d6ef80ea0e7f6d678379f1dbec", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/c9119051112725d6ef80ea0e7f6d678379f1dbec", "committedDate": "2020-07-30T20:05:15Z", "message": "Few cleanup bits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "709ee18027ada4bf0129fac20b03d2414695c811", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/709ee18027ada4bf0129fac20b03d2414695c811", "committedDate": "2020-08-03T17:33:46Z", "message": "Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzEyNzE2", "url": "https://github.com/elastic/elasticsearch/pull/59648#pullrequestreview-460312716", "createdAt": "2020-08-03T20:17:26Z", "commit": {"oid": "709ee18027ada4bf0129fac20b03d2414695c811"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzE4NjI2", "url": "https://github.com/elastic/elasticsearch/pull/59648#pullrequestreview-460318626", "createdAt": "2020-08-03T20:27:54Z", "commit": {"oid": "709ee18027ada4bf0129fac20b03d2414695c811"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMDoyNzo1NFrOG7HopA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMDoyNzo1NFrOG7HopA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY0NDI2MA==", "bodyText": "It seems to me that this should be an interface that returns a T extends ValuesSource given a ValuesSource.\nexamples\n    interface StrategyApplier<T extends ValuesSource, R extends ValuesSource> {\n\n        R build(T valueSource);\n\n    }\n\n    //Terms one\n    public static class None implements StrategyApplier<ValuesSource, ValuesSource> {\n        @Override\n        public ValuesSource build(ValuesSource valuesSource) {\n            return valuesSource;\n        }\n    }\n\n    //Geotile one\n    public static class Geo implements StrategyApplier<ValuesSource.GeoPoint, CellIdSource> {\n\n        private final int precision;\n        private final GeoBoundingBox boundingBox;\n        \n        public Geo(int precision, GeoBoundingBox boundingBox) {\n            this.precision = precision;\n            this.boundingBox = boundingBox;\n        }\n\n        @Override\n        public CellIdSource build(ValuesSource.GeoPoint valueSource) {\n            return new CellIdSource(\n                valueSource,\n                precision,\n                boundingBox,\n                GeoTileUtils::longEncode\n            );\n        }\n    }\n\n\nThese appliers could constructed in your innerBuild objects. You will have to cast things, but it is doing that anyways in the register methods.\nThis seems cleaner to me than asserting on a strategy enum and having this pseudo union type.", "url": "https://github.com/elastic/elasticsearch/pull/59648#discussion_r464644260", "createdAt": "2020-08-03T20:27:54Z", "author": {"login": "benwtrent"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeBucketStrategy.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.search.aggregations.bucket.composite;\n+\n+import org.elasticsearch.common.Rounding;\n+import org.elasticsearch.common.geo.GeoBoundingBox;\n+\n+/**\n+ * This class acts as a bit of syntactic sugar to let us pass in the rounding info for dates or the interval for numeric histograms as one\n+ * class, to save needing three different interfaces.  Sometimes I miss C-style Union structures.\n+ */\n+public class CompositeBucketStrategy {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "709ee18027ada4bf0129fac20b03d2414695c811"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxODg0NjM4", "url": "https://github.com/elastic/elasticsearch/pull/59648#pullrequestreview-461884638", "createdAt": "2020-08-05T17:40:03Z", "commit": {"oid": "709ee18027ada4bf0129fac20b03d2414695c811"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzo0MDowM1rOG8T8zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOToxMToxMFrOG8W_zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg5NDYwNQ==", "bodyText": "While you are here could you remove the extra (?", "url": "https://github.com/elastic/elasticsearch/pull/59648#discussion_r465894605", "createdAt": "2020-08-05T17:40:03Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/SearchModule.java", "diffHunk": "@@ -468,8 +468,12 @@ private ValuesSourceRegistry registerAggregations(List<SearchPlugin> plugins) {\n                     .setAggregatorRegistrar(GeoCentroidAggregationBuilder::registerAggregators), builder);\n         registerAggregation(new AggregationSpec(ScriptedMetricAggregationBuilder.NAME, ScriptedMetricAggregationBuilder::new,\n                 ScriptedMetricAggregationBuilder.PARSER).addResultReader(InternalScriptedMetric::new), builder);\n-        registerAggregation((new AggregationSpec(CompositeAggregationBuilder.NAME, CompositeAggregationBuilder::new,\n-                CompositeAggregationBuilder.PARSER).addResultReader(InternalComposite::new)), builder);\n+        registerAggregation(\n+            (new AggregationSpec(CompositeAggregationBuilder.NAME, CompositeAggregationBuilder::new, CompositeAggregationBuilder.PARSER)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "709ee18027ada4bf0129fac20b03d2414695c811"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg5NTAwNw==", "bodyText": "\ud83d\udc4d to preserving the original behavior for now.", "url": "https://github.com/elastic/elasticsearch/pull/59648#discussion_r465895007", "createdAt": "2020-08-05T17:40:48Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeAggregationBuilder.java", "diffHunk": "@@ -61,6 +62,14 @@\n         PARSER.declareObject(CompositeAggregationBuilder::aggregateAfter, (p, context) -> p.map(), AFTER_FIELD_NAME);\n     }\n \n+    public static void registerAggregators(ValuesSourceRegistry.Builder builder) {\n+        DateHistogramValuesSourceBuilder.register(builder);\n+        HistogramValuesSourceBuilder.register(builder);\n+        GeoTileGridValuesSourceBuilder.register(builder);\n+        TermsValuesSourceBuilder.register(builder);\n+        builder.registerUsage(NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1MDM5OQ=="}, "originalCommit": {"oid": "ef398db887558b6336c340093d09142b686eb25a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzODAzMA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/59648#discussion_r465938030", "createdAt": "2020-08-05T18:58:59Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeValuesSourceConfig.java", "diffHunk": "@@ -19,13 +19,29 @@\n \n package org.elasticsearch.search.aggregations.bucket.composite;\n \n+import org.apache.lucene.index.IndexReader;\n import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.util.BigArrays;\n import org.elasticsearch.index.mapper.MappedFieldType;\n import org.elasticsearch.search.DocValueFormat;\n import org.elasticsearch.search.aggregations.support.ValuesSource;\n import org.elasticsearch.search.sort.SortOrder;\n \n-class CompositeValuesSourceConfig {\n+import java.util.function.LongConsumer;\n+\n+public class CompositeValuesSourceConfig {\n+\n+    @FunctionalInterface\n+    public interface SingleDimensionValuesSourceProvider {\n+        SingleDimensionValuesSource<?> createValuesSource(\n+            BigArrays bigArrays,\n+            IndexReader reader,\n+            int size,\n+            LongConsumer addRequestCircuitBreakerBytes,\n+            CompositeValuesSourceConfig config", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1NTc2Ng=="}, "originalCommit": {"oid": "ef398db887558b6336c340093d09142b686eb25a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0NDUyNA==", "bodyText": "I wonder if it'd make sense to move the have three methods on CompositeSupplier that map to these three ctors. Each supplier could implement the strategy it supports and throw an exception for the ones it doesn't?", "url": "https://github.com/elastic/elasticsearch/pull/59648#discussion_r465944524", "createdAt": "2020-08-05T19:11:10Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeBucketStrategy.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.search.aggregations.bucket.composite;\n+\n+import org.elasticsearch.common.Rounding;\n+import org.elasticsearch.common.geo.GeoBoundingBox;\n+\n+/**\n+ * This class acts as a bit of syntactic sugar to let us pass in the rounding info for dates or the interval for numeric histograms as one\n+ * class, to save needing three different interfaces.  Sometimes I miss C-style Union structures.\n+ */\n+public class CompositeBucketStrategy {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY0NDI2MA=="}, "originalCommit": {"oid": "709ee18027ada4bf0129fac20b03d2414695c811"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcf3ae9904ad7591ddcb5b826765f8728289afea", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/fcf3ae9904ad7591ddcb5b826765f8728289afea", "committedDate": "2020-08-05T20:41:31Z", "message": "Replace union with a bunch of interfaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "617cbebca29d31f8dff4914662ab859bb6c68ca4", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/617cbebca29d31f8dff4914662ab859bb6c68ca4", "committedDate": "2020-08-05T21:56:36Z", "message": "Change key type to supplier class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "feb8f08efc4921b63af79d794aa440a47d95c9f1", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/feb8f08efc4921b63af79d794aa440a47d95c9f1", "committedDate": "2020-08-05T22:20:29Z", "message": "casting magic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70eba12a41be3ee1ae28485d750ca8d8e53f0bcf", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/70eba12a41be3ee1ae28485d750ca8d8e53f0bcf", "committedDate": "2020-08-05T22:21:58Z", "message": "remove extra parens"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDY2MTA1", "url": "https://github.com/elastic/elasticsearch/pull/59648#pullrequestreview-462066105", "createdAt": "2020-08-05T22:26:59Z", "commit": {"oid": "70eba12a41be3ee1ae28485d750ca8d8e53f0bcf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjoyNzowMFrOG8cvXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjoyNzowMFrOG8cvXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAzODYyMA==", "bodyText": "@nik9000 - What do you think is the right thing to throw from here?  This would be a startup-time error to plugin authors indicating that they loaded a miss-matched supplier.  Thinking about it, throwing from registration is pretty scary. If the plugin doesn't catch this, we could utterly break its whole registration process.", "url": "https://github.com/elastic/elasticsearch/pull/59648#discussion_r466038620", "createdAt": "2020-08-05T22:27:00Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceRegistry.java", "diffHunk": "@@ -78,6 +85,48 @@ public void register(String aggregationName, List<ValuesSourceType> valuesSource\n             }\n         }\n \n+        /**\n+         * Register a new key generation function for the\n+         * {@link org.elasticsearch.search.aggregations.bucket.composite.CompositeAggregation}.\n+         * @param supplierClass the subclass of {@link CompositeSupplier} associated with the {@link CompositeValuesSourceBuilder} type this\n+         *                      mapping is being registered for\n+         * @param valuesSourceType the {@link ValuesSourceType} this mapping applies to\n+         * @param compositeSupplier A function returning an appropriate\n+         *                          {@link org.elasticsearch.search.aggregations.bucket.composite.CompositeValuesSourceConfig}\n+         */\n+        public void registerComposite(\n+            Class<? extends CompositeSupplier> supplierClass,\n+            ValuesSourceType valuesSourceType,\n+            CompositeSupplier compositeSupplier\n+        ) {\n+            // TODO: Assert is almost definitely wrong here, but I don't know what the right thing to throw is.\n+            assert compositeSupplier.getClass() == supplierClass;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70eba12a41be3ee1ae28485d750ca8d8e53f0bcf"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDY2ODMy", "url": "https://github.com/elastic/elasticsearch/pull/59648#pullrequestreview-462066832", "createdAt": "2020-08-05T22:28:41Z", "commit": {"oid": "70eba12a41be3ee1ae28485d750ca8d8e53f0bcf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjoyODo0MlrOG8cxwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjoyODo0MlrOG8cxwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAzOTIzMw==", "bodyText": "@nik9000 In this model, we no longer have convenient access to the composite key type name here, so we can't throw a well formed error message.  I kind of feel like this means we should be using the CompositeValuesSourceBuilder class as the key here, since we can at least use reflection to get a name out of that.  I don't love it though.  Thoughts?", "url": "https://github.com/elastic/elasticsearch/pull/59648#discussion_r466039233", "createdAt": "2020-08-05T22:28:42Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceRegistry.java", "diffHunk": "@@ -139,6 +195,21 @@ public AggregatorSupplier getAggregator(ValuesSourceConfig valuesSourceConfig, S\n         throw  new AggregationExecutionException(\"Unregistered Aggregation [\" + aggregationName + \"]\");\n     }\n \n+    public <T extends CompositeSupplier> T getComposite(Class<T> supplierClass, ValuesSourceConfig config) {\n+        if (supplierClass != null && compositeRegistry.containsKey(supplierClass)) {\n+            CompositeSupplier supplier = compositeRegistry.get(supplierClass).get(config.valueSourceType());\n+            if (supplier == null) {\n+                // TODO: Fix this error message! The class name of the supplier isn't going to mean anything to a user\n+                throw new IllegalArgumentException(\n+                    config.getDescription() + \" is not supported for composite source [\" + supplierClass.getCanonicalName() + \"]\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70eba12a41be3ee1ae28485d750ca8d8e53f0bcf"}, "originalPosition": 140}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fe2ba1ae0e67ae4c6aa2dbc2b8ab5e94f6226a8", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/7fe2ba1ae0e67ae4c6aa2dbc2b8ab5e94f6226a8", "committedDate": "2020-08-06T13:55:40Z", "message": "make missmatched suppliers a compile time error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5db9b63e83c42d580c6680f4d7a4790e6089124f", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/5db9b63e83c42d580c6680f4d7a4790e6089124f", "committedDate": "2020-08-06T15:02:43Z", "message": "add the composite name back to the registry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b009a42d006cf33643af406d9286aa37625d753", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/9b009a42d006cf33643af406d9286aa37625d753", "committedDate": "2020-08-06T15:03:58Z", "message": "minor cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2fb3ef22c38f624f8798dcd5aeffe3aa212926e", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/e2fb3ef22c38f624f8798dcd5aeffe3aa212926e", "committedDate": "2020-08-06T15:30:23Z", "message": "use constant registry keys in the builders"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNjM4MTE0", "url": "https://github.com/elastic/elasticsearch/pull/59648#pullrequestreview-462638114", "createdAt": "2020-08-06T15:37:12Z", "commit": {"oid": "e2fb3ef22c38f624f8798dcd5aeffe3aa212926e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4400, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}