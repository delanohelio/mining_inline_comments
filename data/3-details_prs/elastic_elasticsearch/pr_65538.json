{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3OTc0Njc0", "number": 65538, "title": "Allow to add existing cache files in searchable snapshots cache service", "bodyText": "This pull request adds a new put() method to the CacheService that allows to add existing cache files to the searchable snapshot cache before the service is effectively started. This method will be used in the future to fill the cache at node start-up time with information retrieved from a Lucene index.", "createdAt": "2020-11-26T10:19:21Z", "url": "https://github.com/elastic/elasticsearch/pull/65538", "merged": true, "mergeCommit": {"oid": "0f7bbed37e8955875b1e2c730722b0d06f7eb7dc"}, "closed": true, "closedAt": "2020-11-26T11:57:53Z", "author": {"login": "tlrx"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgQN2KgH2gAyNTI3OTc0Njc0OjFkZmYwNzVlYzZjYmRiNWUwNTE5MDIwOGU2YmU2ZDRhYWE5NDY1NTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgQdYTgFqTUzOTE5MDA1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1dff075ec6cbdb5e05190208e6be6d4aaa946553", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/1dff075ec6cbdb5e05190208e6be6d4aaa946553", "committedDate": "2020-11-26T10:16:25Z", "message": "Allow to add existing cache files in searchable snapshots cache service"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MTc5MzQ4", "url": "https://github.com/elastic/elasticsearch/pull/65538#pullrequestreview-539179348", "createdAt": "2020-11-26T10:20:29Z", "commit": {"oid": "1dff075ec6cbdb5e05190208e6be6d4aaa946553"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDoyMDoyOVrOH6U48w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDoyMDoyOVrOH6U48w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkyMTcxNQ==", "bodyText": "I expect this to also be useful later when indexing information about the cache file (snapshot, index id etc)", "url": "https://github.com/elastic/elasticsearch/pull/65538#discussion_r530921715", "createdAt": "2020-11-26T10:20:29Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/CacheFile.java", "diffHunk": "@@ -123,14 +123,26 @@ protected void closeInternal() {\n     @Nullable\n     private volatile FileChannelReference channelRef;\n \n-    public CacheFile(String description, long length, Path file, Runnable onNeedFSync) {\n-        this.tracker = new SparseFileTracker(file.toString(), length);\n-        this.description = Objects.requireNonNull(description);\n+    public CacheFile(CacheKey cacheKey, long length, Path file, Runnable onNeedFSync) {\n+        this(cacheKey, new SparseFileTracker(file.toString(), length), file, onNeedFSync);\n+    }\n+\n+    public CacheFile(CacheKey cacheKey, long length, Path file, SortedSet<Tuple<Long, Long>> ranges, Runnable onNeedFSync) {\n+        this(cacheKey, new SparseFileTracker(file.toString(), length, ranges), file, onNeedFSync);\n+    }\n+\n+    private CacheFile(CacheKey cacheKey, SparseFileTracker tracker, Path file, Runnable onNeedFSync) {\n+        this.cacheKey = Objects.requireNonNull(cacheKey);\n+        this.tracker = Objects.requireNonNull(tracker);\n         this.file = Objects.requireNonNull(file);\n         this.needsFsyncRunnable = Objects.requireNonNull(onNeedFSync);\n         assert invariant();\n     }\n \n+    public CacheKey getCacheKey() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dff075ec6cbdb5e05190208e6be6d4aaa946553"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MTkwMDU1", "url": "https://github.com/elastic/elasticsearch/pull/65538#pullrequestreview-539190055", "createdAt": "2020-11-26T10:33:23Z", "commit": {"oid": "1dff075ec6cbdb5e05190208e6be6d4aaa946553"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4306, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}