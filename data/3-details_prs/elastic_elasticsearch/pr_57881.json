{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxODQzMjM4", "number": 57881, "title": "Add range query support to wildcard field", "bodyText": "The last query type required for parity with keyword field.\nCloses #57816", "createdAt": "2020-06-09T14:38:52Z", "url": "https://github.com/elastic/elasticsearch/pull/57881", "merged": true, "mergeCommit": {"oid": "85e14950f764257877a5864390192cd9044d67f3"}, "closed": true, "closedAt": "2020-06-11T11:16:29Z", "author": {"login": "markharwood"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpno4uAH2gAyNDMxODQzMjM4OmY2Nzk0MmRmNjY2N2VhNzMwYzZjYjdiOGVkZjg3YWY3YjgwMjQ1MWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqK_iSgH2gAyNDMxODQzMjM4OmRkOTUxZmE0ZTUxMzBiODc5N2FkMjlkNDk4OGQzNjNmMGRjZWFlODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f67942df6667ea730c6cb7b8edf87af7b802451a", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/f67942df6667ea730c6cb7b8edf87af7b802451a", "committedDate": "2020-06-09T16:27:56Z", "message": "Add range query support to wildcard field\n\nCloses #57816"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfde45ebacd4cfdfceaf78be4b4054e389f7d8b7", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/cfde45ebacd4cfdfceaf78be4b4054e389f7d8b7", "committedDate": "2020-06-09T14:35:49Z", "message": "Add range query support to wildcard field\n\nCloses #57816"}, "afterCommit": {"oid": "f67942df6667ea730c6cb7b8edf87af7b802451a", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/f67942df6667ea730c6cb7b8edf87af7b802451a", "committedDate": "2020-06-09T16:27:56Z", "message": "Add range query support to wildcard field\n\nCloses #57816"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzUwODQ5", "url": "https://github.com/elastic/elasticsearch/pull/57881#pullrequestreview-428350849", "createdAt": "2020-06-10T19:09:02Z", "commit": {"oid": "f67942df6667ea730c6cb7b8edf87af7b802451a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOTowOTowMlrOGiCr0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOTowOTowMlrOGiCr0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0ODc1NQ==", "bodyText": "maybe add a specific test for case (e.g: ProgramFiles => programFiles)  and one without a common prefix ?", "url": "https://github.com/elastic/elasticsearch/pull/57881#discussion_r438348755", "createdAt": "2020-06-10T19:09:02Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/wildcard/src/test/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapperTests.java", "diffHunk": "@@ -485,6 +494,54 @@ public void testFuzzyAcceleration() throws IOException, ParseException {\n         }\n     }    \n     \n+    \n+    static class RangeTest {\n+        String lower;\n+        String upper;\n+        String ngrams;\n+\n+        RangeTest(\n+            String lower,\n+            String upper,\n+            String ngrams\n+        ) {\n+            super();\n+            this.lower = lower;\n+            this.upper = upper;\n+            this.ngrams = ngrams;\n+        }\n+\n+        Query getRangeQuery() {\n+            return wildcardFieldType.fieldType().rangeQuery(lower, upper, true, true, null, null, null, MOCK_QSC);\n+        }\n+\n+        Query getExpectedApproxQuery() throws ParseException {\n+            BooleanQuery.Builder bq = new BooleanQuery.Builder();\n+            if (ngrams != null) {\n+                String[] tokens = ngrams.split(\" \");\n+                for (String token : tokens) {\n+                    Query ngramQuery = new TermQuery(\n+                        new Term(WILDCARD_FIELD_NAME, token.replaceAll(\"_\", WildcardFieldMapper.TOKEN_START_STRING))\n+                    );\n+                    bq.add(ngramQuery, Occur.MUST);\n+                }\n+            }\n+            return bq.build();\n+        }\n+    }    \n+    \n+    public void testRangeAcceleration() throws IOException, ParseException {\n+\n+        RangeTest[] tests = {\n+            new RangeTest(\"c:/a.txt\", \"c:/z.txt\", \"_c: c:/\"),\n+            new RangeTest(\"C:/ProgramFiles/a.txt\", \"C:/ProgramFiles/z.txt\", \"_c: :/p pro ogr ram mfi ile es/\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f67942df6667ea730c6cb7b8edf87af7b802451a"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzUxNjM5", "url": "https://github.com/elastic/elasticsearch/pull/57881#pullrequestreview-428351639", "createdAt": "2020-06-10T19:10:14Z", "commit": {"oid": "f67942df6667ea730c6cb7b8edf87af7b802451a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd951fa4e5130b8797ad29d4988d363f0dceae80", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/dd951fa4e5130b8797ad29d4988d363f0dceae80", "committedDate": "2020-06-11T09:39:21Z", "message": "Added test and fix for bug it revealed."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 829, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}