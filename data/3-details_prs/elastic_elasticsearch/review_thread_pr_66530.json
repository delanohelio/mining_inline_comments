{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxOTMzNzQz", "number": 66530, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMDoxODo0NVrOFHvOAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNTo0NDoxOFrOFNShZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjU3OTg2OnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping/dynamic/templates.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMDoxODo0NVrOIJTNBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMDoxODo0NVrOIJTNBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMjcyNQ==", "bodyText": "do we need to reinforce that it is mapped as a runtime keyword rather than the \"ordinary\" keyword?", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r546622725", "createdAt": "2020-12-21T10:18:45Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/dynamic/templates.asciidoc", "diffHunk": "@@ -124,18 +128,53 @@ PUT my-index-000001/_doc/1\n <1> The `my_integer` field is mapped as an `integer`.\n <2> The `my_string` field is mapped as a `text`, with a `keyword` <<multi-fields,multi field>>.\n \n+[[match-mapping-runtime-fields]]\n+===== Mapping runtime fields in a dynamic template\n+You can also map runtime fields in a dynamic template. For example, the\n+following request adds a dynamic template named `dayofweek` that maps all\n+incoming `string` fields as `keyword` fields. Although the `runtime` definition\n+is blank, new `string` fields will be mapped as `keyword` fields based on the\n+<<dynamic-field-mapping-types,dynamic mapping rules>> that {es} uses for adding\n+field types to the mapping. Any `string` that doesn't pass date detection or\n+numeric detection is automatically mapped as a `keyword` when `dynamic` is set", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1a51205f817193bbfddd46c94fa0cc08fac62b3"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzQwOTg4OnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMTo0NjoyNlrOIOURBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNjo1MDowNlrOIOe5yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg4MzAxNA==", "bodyText": "I am trying to understand how explicit mappings would require more storage space compared to dynamic field mappings. It depends I would say, and also around search performance, it may depend.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r551883014", "createdAt": "2021-01-05T11:46:26Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,14 +5,39 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n-\n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n+are stored and indexed. You can choose how and where to map your data. Each\n+method provides different benefits based on where you are in your data journey:\n+\n+* <<dynamic-field-mapping,Dynamic field mappings>> allow you to experiment with\n+and explore data when you\u2019re just getting started. {es} will add new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n+* <<runtime-search-request,Runtime fields in search requests>> are flexible,\n+allowing you to experiment with different mapping options.\n+* <<runtime-mapping-fields,Runtime fields in index mappings>> allow you to make\n+schema changes without reindexing. You can use these fields in conjunction with\n+indexed fields to balance resource usage and performance. Your index will be\n+smaller, but with slower search performance.\n+* <<explicit-mapping,Explicit mappings>> provide the best search performance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "245a8cab07b92bdc12fab562fc351463cab047a5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk4MTY5Nw==", "bodyText": "Yes, this is tricky! With dynamic mapping and explicit mapping (with the exception of runtime fields), you're indexing fields. So, either method would increase the index size. I'm trying to separate runtime fields from explicit mapping, though one form of runtime fields is still explicit mapping.\nMaybe this statement should be more like:\n\nExplicit mappings typically provide the best search performance. However, you must reindex your data to modify the mappings, which can be costly.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r551981697", "createdAt": "2021-01-05T14:54:31Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,14 +5,39 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n-\n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n+are stored and indexed. You can choose how and where to map your data. Each\n+method provides different benefits based on where you are in your data journey:\n+\n+* <<dynamic-field-mapping,Dynamic field mappings>> allow you to experiment with\n+and explore data when you\u2019re just getting started. {es} will add new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n+* <<runtime-search-request,Runtime fields in search requests>> are flexible,\n+allowing you to experiment with different mapping options.\n+* <<runtime-mapping-fields,Runtime fields in index mappings>> allow you to make\n+schema changes without reindexing. You can use these fields in conjunction with\n+indexed fields to balance resource usage and performance. Your index will be\n+smaller, but with slower search performance.\n+* <<explicit-mapping,Explicit mappings>> provide the best search performance", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg4MzAxNA=="}, "originalCommit": {"oid": "245a8cab07b92bdc12fab562fc351463cab047a5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA1NzI5MA==", "bodyText": "I would like to avoid sentences like \"explicit mapping (with the exception of runtime fields)\". runtime fields can be mapped explicitly or dynamically, like any other field. So I find it confusing to refer to explicit mappings with the exception of runtime fields.\nI think that with the introduction of runtime fields a sentence like \"Explicit mappings typically provide the best search performance\" no longer stands. I see what you are trying to do, provide clear messaging to users on the different options they have, but I would try to not make runtime fields an exception. I would focus more on what runtime fields allow users to do compared to ordinary fields, regardless of how they are mapped.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r552057290", "createdAt": "2021-01-05T16:50:06Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,14 +5,39 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n-\n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n+are stored and indexed. You can choose how and where to map your data. Each\n+method provides different benefits based on where you are in your data journey:\n+\n+* <<dynamic-field-mapping,Dynamic field mappings>> allow you to experiment with\n+and explore data when you\u2019re just getting started. {es} will add new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n+* <<runtime-search-request,Runtime fields in search requests>> are flexible,\n+allowing you to experiment with different mapping options.\n+* <<runtime-mapping-fields,Runtime fields in index mappings>> allow you to make\n+schema changes without reindexing. You can use these fields in conjunction with\n+indexed fields to balance resource usage and performance. Your index will be\n+smaller, but with slower search performance.\n+* <<explicit-mapping,Explicit mappings>> provide the best search performance", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg4MzAxNA=="}, "originalCommit": {"oid": "245a8cab07b92bdc12fab562fc351463cab047a5"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzQxMjIzOnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMTo0NzowMVrOIOUSXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNjowNjo0NFrOIOdM2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg4MzM1Ng==", "bodyText": "what;s the difference between explicit mapping and using runtime fields?", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r551883356", "createdAt": "2021-01-05T11:47:01Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,14 +5,39 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n-\n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n+are stored and indexed. You can choose how and where to map your data. Each\n+method provides different benefits based on where you are in your data journey:\n+\n+* <<dynamic-field-mapping,Dynamic field mappings>> allow you to experiment with\n+and explore data when you\u2019re just getting started. {es} will add new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n+* <<runtime-search-request,Runtime fields in search requests>> are flexible,\n+allowing you to experiment with different mapping options.\n+* <<runtime-mapping-fields,Runtime fields in index mappings>> allow you to make\n+schema changes without reindexing. You can use these fields in conjunction with\n+indexed fields to balance resource usage and performance. Your index will be\n+smaller, but with slower search performance.\n+* <<explicit-mapping,Explicit mappings>> provide the best search performance\n+but require more storage space, resulting in a larger index.\n+\n+When mapping your data using runtime fields or through explicit mapping, you", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "245a8cab07b92bdc12fab562fc351463cab047a5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3NzUxMQ==", "bodyText": "Hmm...other than using runtime fields in a search request, I guess that you're explicitly mapping fields on both accounts. That is, you're adding something to the mapping. The difference is that values for one are always stored in _source, while runtime fields can calculate values at query time. Correct?", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r551977511", "createdAt": "2021-01-05T14:47:42Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,14 +5,39 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n-\n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n+are stored and indexed. You can choose how and where to map your data. Each\n+method provides different benefits based on where you are in your data journey:\n+\n+* <<dynamic-field-mapping,Dynamic field mappings>> allow you to experiment with\n+and explore data when you\u2019re just getting started. {es} will add new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n+* <<runtime-search-request,Runtime fields in search requests>> are flexible,\n+allowing you to experiment with different mapping options.\n+* <<runtime-mapping-fields,Runtime fields in index mappings>> allow you to make\n+schema changes without reindexing. You can use these fields in conjunction with\n+indexed fields to balance resource usage and performance. Your index will be\n+smaller, but with slower search performance.\n+* <<explicit-mapping,Explicit mappings>> provide the best search performance\n+but require more storage space, resulting in a larger index.\n+\n+When mapping your data using runtime fields or through explicit mapping, you", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg4MzM1Ng=="}, "originalCommit": {"oid": "245a8cab07b92bdc12fab562fc351463cab047a5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAyOTQwMA==", "bodyText": "yes, to me mappings-wise, there is no difference. only runtime fields are defined in a separate section, but it is still under mappings. So after all you can explicitly map runtime fields or concrete fields, or you can automatically map runtime fields or concrete fields.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r552029400", "createdAt": "2021-01-05T16:06:44Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,14 +5,39 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n-\n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n+are stored and indexed. You can choose how and where to map your data. Each\n+method provides different benefits based on where you are in your data journey:\n+\n+* <<dynamic-field-mapping,Dynamic field mappings>> allow you to experiment with\n+and explore data when you\u2019re just getting started. {es} will add new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n+* <<runtime-search-request,Runtime fields in search requests>> are flexible,\n+allowing you to experiment with different mapping options.\n+* <<runtime-mapping-fields,Runtime fields in index mappings>> allow you to make\n+schema changes without reindexing. You can use these fields in conjunction with\n+indexed fields to balance resource usage and performance. Your index will be\n+smaller, but with slower search performance.\n+* <<explicit-mapping,Explicit mappings>> provide the best search performance\n+but require more storage space, resulting in a larger index.\n+\n+When mapping your data using runtime fields or through explicit mapping, you", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg4MzM1Ng=="}, "originalCommit": {"oid": "245a8cab07b92bdc12fab562fc351463cab047a5"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzQyMDk0OnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping/dynamic/field-mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMTo1MDowOVrOIOUXlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMTo1MDowOVrOIOUXlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg4NDY5NA==", "bodyText": "FYI #66911 you will get a conflict on this line when that one gets merged", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r551884694", "createdAt": "2021-01-05T11:50:09Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/dynamic/field-mapping.asciidoc", "diffHunk": "@@ -2,25 +2,24 @@\n === Dynamic field mapping\n \n When {es} detects a new field in a document, it _dynamically_ adds the field to\n-the type mapping. The <<dynamic,`dynamic`>> parameter controls this behavior.\n+the type mapping by default. The <<dynamic,`dynamic`>> parameter controls this behavior.\n \n-You can disable dynamic mapping, both at the document and at the\n-<<object,`object`>> level. Setting the `dynamic` parameter to\n-`false` ignores new fields, and `strict` rejects the document if {es}\n-encounters an unknown field.\n-\n-When dynamic field mapping is enabled, {es} uses the following rules to\n+You can explicitly instruct {es} to dynamically create fields based on incoming\n+documents by setting the `dynamic` parameter to `true` or `runtime`. When\n+dynamic field mapping is enabled, {es} uses the rules in the following table to\n determine how to map data types for each field.\n \n-NOTE: These are the only <<mapping-types,field data types>> that {es} detects\n-dynamically. All other data types must be mapped explicitly.\n+NOTE: The field data types in the following table are the only\n+<<mapping-types,field data types>> that {es} detects dynamically. You must\n+explicitly map all other data types.\n \n+[[dynamic-field-mapping-types]]\n [cols=\"3\"]\n |===\n h| JSON data type h| `dynamic:true` h| `dynamic:runtime`\n  |`null` 2*| No field added\n  |`true` or `false` 2*| `boolean`\n- |floating point number | `float` | `double`\n+ |`double` | `float` | `double`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "245a8cab07b92bdc12fab562fc351463cab047a5"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MzkyNjcwOnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOTowMjowMFrOIP4Xcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOTowMjowMFrOIP4Xcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyMzA1OQ==", "bodyText": "properties should probably be removed as it refers only to concrete fields?", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553523059", "createdAt": "2021-01-07T19:02:00Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,54 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields or `properties` that are pertinent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MzkzMTQwOnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOTowMzoyOFrOIP4agg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOTo1OTo0NVrOIP6b-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyMzg0Mg==", "bodyText": "one thing that I am not sure is clear is that you can also go for a mixed approach, meaning you map some fields manually, and others dynamically. From this sentence it may seem like you need to decide to go for one or the other approach upfront.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553523842", "createdAt": "2021-01-07T19:03:28Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,54 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields or `properties` that are pertinent\n+to the document. A mapping definition also includes\n+<<mapping-fields,metadata fields>>, like the `_source` field, which customize\n+how a document's associated metadata is handled.\n+\n+You can choose a _dynamic mapping_ or an _explicit mapping_ to define your data.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU0NDM4Mg==", "bodyText": "Yeah, that sentence is limiting. Is this revision precise enough?\n\nUse dynamic mapping and explicit mapping to define your data. Each method\nprovides different benefits based on where you are in your data journey. You\nmight explicitly map specific fields that you want to query frequently, such as\na timestamp, whereas Elasticsearch can add other fields dynamically.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553544382", "createdAt": "2021-01-07T19:38:46Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,54 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields or `properties` that are pertinent\n+to the document. A mapping definition also includes\n+<<mapping-fields,metadata fields>>, like the `_source` field, which customize\n+how a document's associated metadata is handled.\n+\n+You can choose a _dynamic mapping_ or an _explicit mapping_ to define your data.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyMzg0Mg=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU1Njk4Nw==", "bodyText": "well, even the timestamp does not need to be mapped if its format is the one that ES supports by default. It is really \"map anything explicitly if the defaults are not good enough, or if you want to have control over which fields get created\"", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553556987", "createdAt": "2021-01-07T19:59:45Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,54 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields or `properties` that are pertinent\n+to the document. A mapping definition also includes\n+<<mapping-fields,metadata fields>>, like the `_source` field, which customize\n+how a document's associated metadata is handled.\n+\n+You can choose a _dynamic mapping_ or an _explicit mapping_ to define your data.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyMzg0Mg=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MzkzNTY2OnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOTowNDo0NVrOIP4dHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMDowMTowMVrOIP6edg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNDUwOQ==", "bodyText": "I would not mention here runtime fields explicitly, as they should be considered just fields. It should not come as a surprise that runtime fields can be both mapped explicitly or dynamically", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553524509", "createdAt": "2021-01-07T19:04:45Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,54 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields or `properties` that are pertinent\n+to the document. A mapping definition also includes\n+<<mapping-fields,metadata fields>>, like the `_source` field, which customize\n+how a document's associated metadata is handled.\n+\n+You can choose a _dynamic mapping_ or an _explicit mapping_ to define your data.\n+Each method provides different benefits based on where you are in your data\n+journey.\n \n-A mapping definition includes metadata fields and fields:\n+NOTE: Before 7.0.0, the mapping definition included a type name.\n+{es} 7.0.0 and later no longer accept a _default_ mapping. See <<removal-of-types>>.\n \n-<<mapping-fields,Metadata fields>>::\n+[discrete]\n+[[mapping-dynamic]]\n+== Dynamic mapping\n+<<dynamic-field-mapping,Dynamic mapping>> allows you to experiment with\n+and explore data when you\u2019re just getting started. {es} adds new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n \n-Metadata fields are used to customize how a document's associated metadata is\n-treated. Examples of metadata fields include the document's\n-<<mapping-index-field,`_index`>>, <<mapping-id-field,`_id`>>, and\n-<<mapping-source-field,`_source`>> fields.\n+You can also dynamically map runtime fields:\n \n-<<mapping-types,Fields>>::\n+* <<match-mapping-runtime-fields,Map runtime fields in a dynamic template>> so\n+that new fields are automatically added to the index mapping as runtime fields.\n+* <<runtime-search-request,Define runtime fields in a search request>> to\n+experiment with different mapping options, and also fix mistakes in your index\n+mapping values by overriding values in the mapping during the search request.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU1MzkxNg==", "bodyText": "Agreed, though I'm wondering if we want to mention dynamic templates here.\n\nDynamic mapping allows you to experiment with and explore data when you\u2019re just getting started. Elasticsearch adds new fields automatically, just by indexing a document. You can add fields to the top-level mapping, and to inner object and nested fields.\n\n\nUse dynamic templates to define custom mappings that are applied to dynamically added fields based on the matching condition. You can also map runtime fields in a dynamic template so that new fields are automatically added to the index mapping as runtime fields.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553553916", "createdAt": "2021-01-07T19:53:33Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,54 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields or `properties` that are pertinent\n+to the document. A mapping definition also includes\n+<<mapping-fields,metadata fields>>, like the `_source` field, which customize\n+how a document's associated metadata is handled.\n+\n+You can choose a _dynamic mapping_ or an _explicit mapping_ to define your data.\n+Each method provides different benefits based on where you are in your data\n+journey.\n \n-A mapping definition includes metadata fields and fields:\n+NOTE: Before 7.0.0, the mapping definition included a type name.\n+{es} 7.0.0 and later no longer accept a _default_ mapping. See <<removal-of-types>>.\n \n-<<mapping-fields,Metadata fields>>::\n+[discrete]\n+[[mapping-dynamic]]\n+== Dynamic mapping\n+<<dynamic-field-mapping,Dynamic mapping>> allows you to experiment with\n+and explore data when you\u2019re just getting started. {es} adds new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n \n-Metadata fields are used to customize how a document's associated metadata is\n-treated. Examples of metadata fields include the document's\n-<<mapping-index-field,`_index`>>, <<mapping-id-field,`_id`>>, and\n-<<mapping-source-field,`_source`>> fields.\n+You can also dynamically map runtime fields:\n \n-<<mapping-types,Fields>>::\n+* <<match-mapping-runtime-fields,Map runtime fields in a dynamic template>> so\n+that new fields are automatically added to the index mapping as runtime fields.\n+* <<runtime-search-request,Define runtime fields in a search request>> to\n+experiment with different mapping options, and also fix mistakes in your index\n+mapping values by overriding values in the mapping during the search request.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNDUwOQ=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU1NzYyMg==", "bodyText": "To me, dynamic templates belong to the dynamic mapping side of things. I am not sure if I would mention them explicitly here.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553557622", "createdAt": "2021-01-07T20:01:01Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,54 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields or `properties` that are pertinent\n+to the document. A mapping definition also includes\n+<<mapping-fields,metadata fields>>, like the `_source` field, which customize\n+how a document's associated metadata is handled.\n+\n+You can choose a _dynamic mapping_ or an _explicit mapping_ to define your data.\n+Each method provides different benefits based on where you are in your data\n+journey.\n \n-A mapping definition includes metadata fields and fields:\n+NOTE: Before 7.0.0, the mapping definition included a type name.\n+{es} 7.0.0 and later no longer accept a _default_ mapping. See <<removal-of-types>>.\n \n-<<mapping-fields,Metadata fields>>::\n+[discrete]\n+[[mapping-dynamic]]\n+== Dynamic mapping\n+<<dynamic-field-mapping,Dynamic mapping>> allows you to experiment with\n+and explore data when you\u2019re just getting started. {es} adds new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n \n-Metadata fields are used to customize how a document's associated metadata is\n-treated. Examples of metadata fields include the document's\n-<<mapping-index-field,`_index`>>, <<mapping-id-field,`_id`>>, and\n-<<mapping-source-field,`_source`>> fields.\n+You can also dynamically map runtime fields:\n \n-<<mapping-types,Fields>>::\n+* <<match-mapping-runtime-fields,Map runtime fields in a dynamic template>> so\n+that new fields are automatically added to the index mapping as runtime fields.\n+* <<runtime-search-request,Define runtime fields in a search request>> to\n+experiment with different mapping options, and also fix mistakes in your index\n+mapping values by overriding values in the mapping during the search request.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNDUwOQ=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MzkzNjg0OnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOTowNTowMlrOIP4dyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOTowNTowMlrOIP4dyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNDY4MA==", "bodyText": "Here too, I would not mention runtime  fields specifically", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553524680", "createdAt": "2021-01-07T19:05:02Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,54 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields or `properties` that are pertinent\n+to the document. A mapping definition also includes\n+<<mapping-fields,metadata fields>>, like the `_source` field, which customize\n+how a document's associated metadata is handled.\n+\n+You can choose a _dynamic mapping_ or an _explicit mapping_ to define your data.\n+Each method provides different benefits based on where you are in your data\n+journey.\n \n-A mapping definition includes metadata fields and fields:\n+NOTE: Before 7.0.0, the mapping definition included a type name.\n+{es} 7.0.0 and later no longer accept a _default_ mapping. See <<removal-of-types>>.\n \n-<<mapping-fields,Metadata fields>>::\n+[discrete]\n+[[mapping-dynamic]]\n+== Dynamic mapping\n+<<dynamic-field-mapping,Dynamic mapping>> allows you to experiment with\n+and explore data when you\u2019re just getting started. {es} adds new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n \n-Metadata fields are used to customize how a document's associated metadata is\n-treated. Examples of metadata fields include the document's\n-<<mapping-index-field,`_index`>>, <<mapping-id-field,`_id`>>, and\n-<<mapping-source-field,`_source`>> fields.\n+You can also dynamically map runtime fields:\n \n-<<mapping-types,Fields>>::\n+* <<match-mapping-runtime-fields,Map runtime fields in a dynamic template>> so\n+that new fields are automatically added to the index mapping as runtime fields.\n+* <<runtime-search-request,Define runtime fields in a search request>> to\n+experiment with different mapping options, and also fix mistakes in your index\n+mapping values by overriding values in the mapping during the search request.\n \n-A mapping contains a list of fields or `properties` pertinent to the\n-document. Each field has its own <<mapping-types, data type>>.\n+[discrete]\n+[[mapping-explicit]]\n+== Explicit mapping\n+<<explicit-mapping,Explicit mapping>> allows you to precisely choose how to\n+define the mapping definition, such as:\n+\n+* Which string fields should be treated as full text fields.\n+* Which fields contain numbers, dates, or geolocations.\n+* The <<mapping-date-format,format>> of date values.\n+* Custom rules to control the mapping for\n+  <<dynamic-mapping,dynamically added fields>>.\n \n-NOTE: Before 7.0.0, the 'mappings' definition used to include a type name.\n-For more details, please see <<removal-of-types>>.\n+You can <<runtime-mapping-fields,explicitly map runtime fields>>,\n+which allows you to make schema changes without reindexing. You can use runtime\n+fields in conjunction with indexed fields to balance resource usage and\n+performance. Your index will be smaller, but with slower search performance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4Mzk0ODAwOnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping/dynamic/templates.asciidoc", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOTowODoxN1rOIP4kjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMjowNDoxMFrOIRShfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNjQxNQ==", "bodyText": "as keyword within the runtime section?", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553526415", "createdAt": "2021-01-07T19:08:17Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/dynamic/templates.asciidoc", "diffHunk": "@@ -124,18 +128,55 @@ PUT my-index-000001/_doc/1\n <1> The `my_integer` field is mapped as an `integer`.\n <2> The `my_string` field is mapped as a `text`, with a `keyword` <<multi-fields,multi field>>.\n \n+[[match-mapping-runtime-fields]]\n+===== Mapping runtime fields in a dynamic template\n+You can also map runtime fields in a dynamic template. For example, the\n+following request adds a dynamic template named `dayOfWeek` that maps all\n+incoming `string` fields as `keyword` runtime fields. Although the `runtime`\n+definition is blank, new `string` fields will be mapped as `keyword` runtime\n+fields based on the <<dynamic-field-mapping-types,dynamic mapping rules>> that\n+{es} uses for adding field types to the mapping. Any `string` that doesn't pass\n+date detection or numeric detection is automatically mapped as a `keyword` when", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU1NTgwMA==", "bodyText": "Based on the dynamic mapping rules, a string\u00a0that doesn\u2019t pass\u00a0date\u00a0detection or\u00a0numeric\u00a0detection is mapped as a keyword for runtime fields, correct?", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553555800", "createdAt": "2021-01-07T19:57:15Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping/dynamic/templates.asciidoc", "diffHunk": "@@ -124,18 +128,55 @@ PUT my-index-000001/_doc/1\n <1> The `my_integer` field is mapped as an `integer`.\n <2> The `my_string` field is mapped as a `text`, with a `keyword` <<multi-fields,multi field>>.\n \n+[[match-mapping-runtime-fields]]\n+===== Mapping runtime fields in a dynamic template\n+You can also map runtime fields in a dynamic template. For example, the\n+following request adds a dynamic template named `dayOfWeek` that maps all\n+incoming `string` fields as `keyword` runtime fields. Although the `runtime`\n+definition is blank, new `string` fields will be mapped as `keyword` runtime\n+fields based on the <<dynamic-field-mapping-types,dynamic mapping rules>> that\n+{es} uses for adding field types to the mapping. Any `string` that doesn't pass\n+date detection or numeric detection is automatically mapped as a `keyword` when", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNjQxNQ=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU1ODIxNg==", "bodyText": "yes, I was referring to the fact that keyword (as well as other field types) exist both under runtime and properties. So I was wondering if we need to be explicit about which side of things we are talking about", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553558216", "createdAt": "2021-01-07T20:02:20Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/dynamic/templates.asciidoc", "diffHunk": "@@ -124,18 +128,55 @@ PUT my-index-000001/_doc/1\n <1> The `my_integer` field is mapped as an `integer`.\n <2> The `my_string` field is mapped as a `text`, with a `keyword` <<multi-fields,multi field>>.\n \n+[[match-mapping-runtime-fields]]\n+===== Mapping runtime fields in a dynamic template\n+You can also map runtime fields in a dynamic template. For example, the\n+following request adds a dynamic template named `dayOfWeek` that maps all\n+incoming `string` fields as `keyword` runtime fields. Although the `runtime`\n+definition is blank, new `string` fields will be mapped as `keyword` runtime\n+fields based on the <<dynamic-field-mapping-types,dynamic mapping rules>> that\n+{es} uses for adding field types to the mapping. Any `string` that doesn't pass\n+date detection or numeric detection is automatically mapped as a `keyword` when", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNjQxNQ=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU4NjU5MQ==", "bodyText": "We can be more explicit and say:\n\nFor example, the following request adds a dynamic template named dayOfWeek that maps all\nincoming string fields as keyword fields in the runtime section of the mapping.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553586591", "createdAt": "2021-01-07T21:04:41Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping/dynamic/templates.asciidoc", "diffHunk": "@@ -124,18 +128,55 @@ PUT my-index-000001/_doc/1\n <1> The `my_integer` field is mapped as an `integer`.\n <2> The `my_string` field is mapped as a `text`, with a `keyword` <<multi-fields,multi field>>.\n \n+[[match-mapping-runtime-fields]]\n+===== Mapping runtime fields in a dynamic template\n+You can also map runtime fields in a dynamic template. For example, the\n+following request adds a dynamic template named `dayOfWeek` that maps all\n+incoming `string` fields as `keyword` runtime fields. Although the `runtime`\n+definition is blank, new `string` fields will be mapped as `keyword` runtime\n+fields based on the <<dynamic-field-mapping-types,dynamic mapping rules>> that\n+{es} uses for adding field types to the mapping. Any `string` that doesn't pass\n+date detection or numeric detection is automatically mapped as a `keyword` when", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNjQxNQ=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTAwMDE5MQ==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r555000191", "createdAt": "2021-01-11T12:04:10Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/dynamic/templates.asciidoc", "diffHunk": "@@ -124,18 +128,55 @@ PUT my-index-000001/_doc/1\n <1> The `my_integer` field is mapped as an `integer`.\n <2> The `my_string` field is mapped as a `text`, with a `keyword` <<multi-fields,multi field>>.\n \n+[[match-mapping-runtime-fields]]\n+===== Mapping runtime fields in a dynamic template\n+You can also map runtime fields in a dynamic template. For example, the\n+following request adds a dynamic template named `dayOfWeek` that maps all\n+incoming `string` fields as `keyword` runtime fields. Although the `runtime`\n+definition is blank, new `string` fields will be mapped as `keyword` runtime\n+fields based on the <<dynamic-field-mapping-types,dynamic mapping rules>> that\n+{es} uses for adding field types to the mapping. Any `string` that doesn't pass\n+date detection or numeric detection is automatically mapped as a `keyword` when", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNjQxNQ=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4Mzk1MDI4OnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping/dynamic-mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOTowOTowNFrOIP4mAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMDowMjo1MFrOIP6huw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNjc4Ng==", "bodyText": "Was this on purpose?", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553526786", "createdAt": "2021-01-07T19:09:04Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/dynamic-mapping.asciidoc", "diffHunk": "@@ -1,11 +1,11 @@\n [[dynamic-mapping]]\n-== Dynamic Mapping\n+== Dynamic mapping\n \n-One of the most important features of Elasticsearch is that it tries to get\n+One of the most important features of {es} is that it tries to get", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU1NjE1Nw==", "bodyText": "Yes! The {es} variable is rendered as Elasticsearch in the output.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553556157", "createdAt": "2021-01-07T19:57:59Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping/dynamic-mapping.asciidoc", "diffHunk": "@@ -1,11 +1,11 @@\n [[dynamic-mapping]]\n-== Dynamic Mapping\n+== Dynamic mapping\n \n-One of the most important features of Elasticsearch is that it tries to get\n+One of the most important features of {es} is that it tries to get", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNjc4Ng=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU1ODQ1OQ==", "bodyText": "For some reason my eyes thought that you removed {es} here. you did the opposite, which is totally fine :)", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553558459", "createdAt": "2021-01-07T20:02:50Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/dynamic-mapping.asciidoc", "diffHunk": "@@ -1,11 +1,11 @@\n [[dynamic-mapping]]\n-== Dynamic Mapping\n+== Dynamic mapping\n \n-One of the most important features of Elasticsearch is that it tries to get\n+One of the most important features of {es} is that it tries to get", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNjc4Ng=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4Mzk1NTAzOnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping/explicit-mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOToxMDo0NVrOIP4pKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMjowNDoyNFrOIRSiCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNzU5Mw==", "bodyText": "runtime fields are not mentioned at all, maybe the examples should have a mix of runtime fields and indexed fields? Or should we relegate runtime fields to their own page? I am torn on this", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553527593", "createdAt": "2021-01-07T19:10:45Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/explicit-mapping.asciidoc", "diffHunk": "@@ -0,0 +1,148 @@\n+\n+[[explicit-mapping]]\n+== Explicit mapping\n+\n+You know more about your data than {es} can guess, so while dynamic\n+mapping can be useful to get started, at some point you will want to specify\n+your own explicit mappings.\n+\n+You can create field mappings when you <<create-mapping,create an index>> and\n+<<add-field-mapping,add fields to an existing index>>.\n+\n+[discrete]\n+[[create-mapping]]\n+=== Create an index with an explicit mapping", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU4MTYyOQ==", "bodyText": "I think that we can explore this distinction in a separate PR. It's a valuable conversation.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553581629", "createdAt": "2021-01-07T20:53:20Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping/explicit-mapping.asciidoc", "diffHunk": "@@ -0,0 +1,148 @@\n+\n+[[explicit-mapping]]\n+== Explicit mapping\n+\n+You know more about your data than {es} can guess, so while dynamic\n+mapping can be useful to get started, at some point you will want to specify\n+your own explicit mappings.\n+\n+You can create field mappings when you <<create-mapping,create an index>> and\n+<<add-field-mapping,add fields to an existing index>>.\n+\n+[discrete]\n+[[create-mapping]]\n+=== Create an index with an explicit mapping", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNzU5Mw=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTAwMDMyOQ==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r555000329", "createdAt": "2021-01-11T12:04:24Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/explicit-mapping.asciidoc", "diffHunk": "@@ -0,0 +1,148 @@\n+\n+[[explicit-mapping]]\n+== Explicit mapping\n+\n+You know more about your data than {es} can guess, so while dynamic\n+mapping can be useful to get started, at some point you will want to specify\n+your own explicit mappings.\n+\n+You can create field mappings when you <<create-mapping,create an index>> and\n+<<add-field-mapping,add fields to an existing index>>.\n+\n+[discrete]\n+[[create-mapping]]\n+=== Create an index with an explicit mapping", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNzU5Mw=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4Mzk1NzY0OnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping/runtime.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOToxMTo0MFrOIP4q2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMDowMDoyM1rOIP6dNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyODAyNw==", "bodyText": "doesn't this repeat what we already state above?", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553528027", "createdAt": "2021-01-07T19:11:40Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/runtime.asciidoc", "diffHunk": "@@ -44,13 +47,13 @@ smaller and you can more quickly process logs without having to index them.\n \n Runtime fields are especially useful in the following contexts:\n \n-* Adding fields to documents that are already indexed without having to reindex\n+* Add fields to documents that are already indexed without having to reindex\n data\n-* Immediately begin working on a new data stream without fully understanding\n-the data it contains\n-* Shadowing an indexed field with a runtime field to fix a mistake after\n-indexing documents\n-* Defining fields that are only relevant for a particular context (such as a\n+* Start work on a new data stream without fully understanding the data it\n+contains\n+* Override the value of an indexed field with a runtime field to fix a mistake\n+after indexing documents\n+* Define fields that are only relevant for a particular context (such as a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU1NzMwMA==", "bodyText": "Pretty much. I think we can remove this entire section now since it's restating what is now in the introduction.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553557300", "createdAt": "2021-01-07T20:00:23Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping/runtime.asciidoc", "diffHunk": "@@ -44,13 +47,13 @@ smaller and you can more quickly process logs without having to index them.\n \n Runtime fields are especially useful in the following contexts:\n \n-* Adding fields to documents that are already indexed without having to reindex\n+* Add fields to documents that are already indexed without having to reindex\n data\n-* Immediately begin working on a new data stream without fully understanding\n-the data it contains\n-* Shadowing an indexed field with a runtime field to fix a mistake after\n-indexing documents\n-* Defining fields that are only relevant for a particular context (such as a\n+* Start work on a new data stream without fully understanding the data it\n+contains\n+* Override the value of an indexed field with a runtime field to fix a mistake\n+after indexing documents\n+* Define fields that are only relevant for a particular context (such as a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyODAyNw=="}, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4Mzk2MDI2OnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping/runtime.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOToxMjozNFrOIP4shQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOToxMjozNFrOIP4shQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyODQ1Mw==", "bodyText": "nit: shall we use a more descriptive name for the field?", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r553528453", "createdAt": "2021-01-07T19:12:34Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/runtime.asciidoc", "diffHunk": "@@ -195,21 +184,42 @@ GET my-index/_search\n   }\n }\n ----\n-// TEST[continued]\n+//TEST[continued]\n \n Defining a runtime field in a search request uses the same format as defining\n a runtime field in the index mapping. That consistency means you can promote a\n runtime field from a search request to the index mapping by moving the field\n definition from `runtime_mappings` in the search request to the `runtime`\n section of the index mapping.\n \n-[[runtime-shadowing-fields]]\n-=== Shadowing fields\n+[[runtime-fields-scriptless]]\n+==== Define runtime fields without a script\n+You can define a runtime field in the mapping definition without a\n+script. At query time, {es} looks in `_source` for a field with the same name\n+and returns a value if one exists. If a field with the same name doesn\u2019t\n+exist, the response doesn't include any values for that runtime field.\n+\n+[source,console]\n+----\n+PUT my-index/\n+{\n+  \"mappings\": {\n+    \"runtime\": {\n+      \"newField\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99eec8f2db97e0031ec152a37cc48a66a834b89"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5MzkxNzg4OnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMjowNjo0OFrOIRSm7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMjowNjo0OFrOIRSm7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTAwMTU4MA==", "bodyText": "I like this idea and how it looks in the docs, runtime fields are mentioned but not emphasized. Maybe I would move it down after the explicit and dynamic mapping explanation, up to you", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r555001580", "createdAt": "2021-01-11T12:06:48Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,61 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n+\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields that are pertinent to the document.\n+A mapping definition also includes <<mapping-fields,metadata fields>>, like the\n+`_source` field, which customize how a document's associated metadata is\n+handled.\n+\n+Use _dynamic mapping_ and _explicit mapping_ to define your data. Each method\n+provides different benefits based on where you are in your data journey. For\n+example, explicitly map fields where you don't want to use the defaults, or to\n+gain greater control over which fields are created. You can then allow {es} to\n+add other fields dynamically.\n+\n+NOTE: Before 7.0.0, the mapping definition included a type name.\n+{es} 7.0.0 and later no longer accept a _default_ mapping. See <<removal-of-types>>.\n+\n+.Experiment with mapping options", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f692f87cb71f8e2d5e6f658af46dd3989d0d089c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NDU4NDM2OnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNDo1ODoyNVrOIRY8fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNjo1Njo0NFrOIRefKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEwNTQwNw==", "bodyText": "I would really stop at the first sentence here. I don't see why mentioning runtime fields explicitly. To me it is implicit that you can map runtime fields dynamically, like any other field, especially through dynamic templates", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r555105407", "createdAt": "2021-01-11T14:58:25Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,61 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n+\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields that are pertinent to the document.\n+A mapping definition also includes <<mapping-fields,metadata fields>>, like the\n+`_source` field, which customize how a document's associated metadata is\n+handled.\n+\n+Use _dynamic mapping_ and _explicit mapping_ to define your data. Each method\n+provides different benefits based on where you are in your data journey. For\n+example, explicitly map fields where you don't want to use the defaults, or to\n+gain greater control over which fields are created. You can then allow {es} to\n+add other fields dynamically.\n+\n+NOTE: Before 7.0.0, the mapping definition included a type name.\n+{es} 7.0.0 and later no longer accept a _default_ mapping. See <<removal-of-types>>.\n+\n+.Experiment with mapping options\n+****\n+<<runtime-search-request,Define runtime fields in a search request>> to\n+experiment with different mapping options, and also fix mistakes in your index\n+mapping values by overriding values in the mapping during the search request.\n+****\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n-\n-A mapping definition includes metadata fields and fields:\n-\n-<<mapping-fields,Metadata fields>>::\n-\n-Metadata fields are used to customize how a document's associated metadata is\n-treated. Examples of metadata fields include the document's\n-<<mapping-index-field,`_index`>>, <<mapping-id-field,`_id`>>, and\n-<<mapping-source-field,`_source`>> fields.\n+[discrete]\n+[[mapping-dynamic]]\n+== Dynamic mapping\n+<<dynamic-field-mapping,Dynamic mapping>> allows you to experiment with\n+and explore data when you\u2019re just getting started. {es} adds new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n \n-<<mapping-types,Fields>>::\n+Use <<dynamic-templates,dynamic templates>> to define custom mappings that are\n+applied to dynamically added fields based on the matching condition. You can", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f692f87cb71f8e2d5e6f658af46dd3989d0d089c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5NjIwMQ==", "bodyText": "+1 -- I'll remove that second sentence.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r555196201", "createdAt": "2021-01-11T16:56:44Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,61 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n+\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields that are pertinent to the document.\n+A mapping definition also includes <<mapping-fields,metadata fields>>, like the\n+`_source` field, which customize how a document's associated metadata is\n+handled.\n+\n+Use _dynamic mapping_ and _explicit mapping_ to define your data. Each method\n+provides different benefits based on where you are in your data journey. For\n+example, explicitly map fields where you don't want to use the defaults, or to\n+gain greater control over which fields are created. You can then allow {es} to\n+add other fields dynamically.\n+\n+NOTE: Before 7.0.0, the mapping definition included a type name.\n+{es} 7.0.0 and later no longer accept a _default_ mapping. See <<removal-of-types>>.\n+\n+.Experiment with mapping options\n+****\n+<<runtime-search-request,Define runtime fields in a search request>> to\n+experiment with different mapping options, and also fix mistakes in your index\n+mapping values by overriding values in the mapping during the search request.\n+****\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n-\n-A mapping definition includes metadata fields and fields:\n-\n-<<mapping-fields,Metadata fields>>::\n-\n-Metadata fields are used to customize how a document's associated metadata is\n-treated. Examples of metadata fields include the document's\n-<<mapping-index-field,`_index`>>, <<mapping-id-field,`_id`>>, and\n-<<mapping-source-field,`_source`>> fields.\n+[discrete]\n+[[mapping-dynamic]]\n+== Dynamic mapping\n+<<dynamic-field-mapping,Dynamic mapping>> allows you to experiment with\n+and explore data when you\u2019re just getting started. {es} adds new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n \n-<<mapping-types,Fields>>::\n+Use <<dynamic-templates,dynamic templates>> to define custom mappings that are\n+applied to dynamically added fields based on the matching condition. You can", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEwNTQwNw=="}, "originalCommit": {"oid": "f692f87cb71f8e2d5e6f658af46dd3989d0d089c"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NDc4MTAwOnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNTo0MTo0MFrOIRa1Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNjo1Nzo0NlrOIReh6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzNjI2Mg==", "bodyText": "If we want to call out Runtime fields explicitly here, I would replace \"explicitly mapping runtime fields\" with \"Runtime fields\".", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r555136262", "createdAt": "2021-01-11T15:41:40Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,61 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n+\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields that are pertinent to the document.\n+A mapping definition also includes <<mapping-fields,metadata fields>>, like the\n+`_source` field, which customize how a document's associated metadata is\n+handled.\n+\n+Use _dynamic mapping_ and _explicit mapping_ to define your data. Each method\n+provides different benefits based on where you are in your data journey. For\n+example, explicitly map fields where you don't want to use the defaults, or to\n+gain greater control over which fields are created. You can then allow {es} to\n+add other fields dynamically.\n+\n+NOTE: Before 7.0.0, the mapping definition included a type name.\n+{es} 7.0.0 and later no longer accept a _default_ mapping. See <<removal-of-types>>.\n+\n+.Experiment with mapping options\n+****\n+<<runtime-search-request,Define runtime fields in a search request>> to\n+experiment with different mapping options, and also fix mistakes in your index\n+mapping values by overriding values in the mapping during the search request.\n+****\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n-\n-A mapping definition includes metadata fields and fields:\n-\n-<<mapping-fields,Metadata fields>>::\n-\n-Metadata fields are used to customize how a document's associated metadata is\n-treated. Examples of metadata fields include the document's\n-<<mapping-index-field,`_index`>>, <<mapping-id-field,`_id`>>, and\n-<<mapping-source-field,`_source`>> fields.\n+[discrete]\n+[[mapping-dynamic]]\n+== Dynamic mapping\n+<<dynamic-field-mapping,Dynamic mapping>> allows you to experiment with\n+and explore data when you\u2019re just getting started. {es} adds new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n \n-<<mapping-types,Fields>>::\n+Use <<dynamic-templates,dynamic templates>> to define custom mappings that are\n+applied to dynamically added fields based on the matching condition. You can\n+<<match-mapping-runtime-fields,map runtime fields in a dynamic template>>\n+so that new fields are automatically added to the index mapping as runtime\n+fields.\n \n-A mapping contains a list of fields or `properties` pertinent to the\n-document. Each field has its own <<mapping-types, data type>>.\n+[discrete]\n+[[mapping-explicit]]\n+== Explicit mapping\n+<<explicit-mapping,Explicit mapping>> allows you to precisely choose how to\n+define the mapping definition, such as:\n+\n+* Which string fields should be treated as full text fields.\n+* Which fields contain numbers, dates, or geolocations.\n+* The <<mapping-date-format,format>> of date values.\n+* Custom rules to control the mapping for\n+  <<dynamic-mapping,dynamically added fields>>.\n \n-NOTE: Before 7.0.0, the 'mappings' definition used to include a type name.\n-For more details, please see <<removal-of-types>>.\n+<<runtime-mapping-fields,Explicitly mapping runtime fields>> allows you to make", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f692f87cb71f8e2d5e6f658af46dd3989d0d089c"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5NjkwNA==", "bodyText": "Changing to:\n\nUse runtime fields to make schema changes without reindexing.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r555196904", "createdAt": "2021-01-11T16:57:46Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -5,30 +5,61 @@\n --\n \n Mapping is the process of defining how a document, and the fields it contains,\n-are stored and indexed. For instance, use mappings to define:\n+are stored and indexed.\n+\n+Each document is a collection of fields, which each have their own\n+<<mapping-types,data type>>. When mapping your data, you create a mapping\n+definition, which contains a list of fields that are pertinent to the document.\n+A mapping definition also includes <<mapping-fields,metadata fields>>, like the\n+`_source` field, which customize how a document's associated metadata is\n+handled.\n+\n+Use _dynamic mapping_ and _explicit mapping_ to define your data. Each method\n+provides different benefits based on where you are in your data journey. For\n+example, explicitly map fields where you don't want to use the defaults, or to\n+gain greater control over which fields are created. You can then allow {es} to\n+add other fields dynamically.\n+\n+NOTE: Before 7.0.0, the mapping definition included a type name.\n+{es} 7.0.0 and later no longer accept a _default_ mapping. See <<removal-of-types>>.\n+\n+.Experiment with mapping options\n+****\n+<<runtime-search-request,Define runtime fields in a search request>> to\n+experiment with different mapping options, and also fix mistakes in your index\n+mapping values by overriding values in the mapping during the search request.\n+****\n \n-* which string fields should be treated as full text fields.\n-* which fields contain numbers, dates, or geolocations.\n-* the <<mapping-date-format,format>> of date values.\n-* custom rules to control the mapping for\n-  <<dynamic-mapping,dynamically added fields>>.\n-\n-A mapping definition includes metadata fields and fields:\n-\n-<<mapping-fields,Metadata fields>>::\n-\n-Metadata fields are used to customize how a document's associated metadata is\n-treated. Examples of metadata fields include the document's\n-<<mapping-index-field,`_index`>>, <<mapping-id-field,`_id`>>, and\n-<<mapping-source-field,`_source`>> fields.\n+[discrete]\n+[[mapping-dynamic]]\n+== Dynamic mapping\n+<<dynamic-field-mapping,Dynamic mapping>> allows you to experiment with\n+and explore data when you\u2019re just getting started. {es} adds new fields\n+automatically, just by indexing a document. You can add fields to the top-level\n+mapping, and to inner <<object,`object`>>  and <<nested,`nested`>> fields.\n \n-<<mapping-types,Fields>>::\n+Use <<dynamic-templates,dynamic templates>> to define custom mappings that are\n+applied to dynamically added fields based on the matching condition. You can\n+<<match-mapping-runtime-fields,map runtime fields in a dynamic template>>\n+so that new fields are automatically added to the index mapping as runtime\n+fields.\n \n-A mapping contains a list of fields or `properties` pertinent to the\n-document. Each field has its own <<mapping-types, data type>>.\n+[discrete]\n+[[mapping-explicit]]\n+== Explicit mapping\n+<<explicit-mapping,Explicit mapping>> allows you to precisely choose how to\n+define the mapping definition, such as:\n+\n+* Which string fields should be treated as full text fields.\n+* Which fields contain numbers, dates, or geolocations.\n+* The <<mapping-date-format,format>> of date values.\n+* Custom rules to control the mapping for\n+  <<dynamic-mapping,dynamically added fields>>.\n \n-NOTE: Before 7.0.0, the 'mappings' definition used to include a type name.\n-For more details, please see <<removal-of-types>>.\n+<<runtime-mapping-fields,Explicitly mapping runtime fields>> allows you to make", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzNjI2Mg=="}, "originalCommit": {"oid": "f692f87cb71f8e2d5e6f658af46dd3989d0d089c"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NDc5MjY4OnYy", "diffSide": "RIGHT", "path": "docs/reference/mapping/dynamic/templates.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNTo0NDoxOFrOIRa8QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNzoyOTo1MFrOIRf2ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzODExMw==", "bodyText": "The mention of dynamic runtime here is out of place. If you use dynamic: runtime, you normally would not need to define runtime fields from dynamic templates. If you use dynamic: true, then it would make sense to define some fields as runtime fields, as they would otherwise be indexed.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r555138113", "createdAt": "2021-01-11T15:44:18Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/dynamic/templates.asciidoc", "diffHunk": "@@ -124,18 +128,54 @@ PUT my-index-000001/_doc/1\n <1> The `my_integer` field is mapped as an `integer`.\n <2> The `my_string` field is mapped as a `text`, with a `keyword` <<multi-fields,multi field>>.\n \n+[[match-mapping-runtime-fields]]\n+===== Mapping runtime fields in a dynamic template\n+You can also map runtime fields in a dynamic template. For example, the\n+following request adds a dynamic template named `dayOfWeek` that maps all\n+incoming `string` fields as `keyword` fields in the `runtime` section of the\n+mapping. Although the `runtime` definition is blank, new `string` fields will\n+be mapped as `keyword` runtime fields based on the <<dynamic-field-mapping-types,dynamic mapping rules>> that {es} uses for adding field types to the\n+mapping. Any `string` that doesn't pass date detection or numeric detection is\n+automatically mapped as a `keyword` when `dynamic` is set to `runtime`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f692f87cb71f8e2d5e6f658af46dd3989d0d089c"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIxODUzMw==", "bodyText": "Per our conversation, we'll handle this distinction in an upcoming PR.", "url": "https://github.com/elastic/elasticsearch/pull/66530#discussion_r555218533", "createdAt": "2021-01-11T17:29:50Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/mapping/dynamic/templates.asciidoc", "diffHunk": "@@ -124,18 +128,54 @@ PUT my-index-000001/_doc/1\n <1> The `my_integer` field is mapped as an `integer`.\n <2> The `my_string` field is mapped as a `text`, with a `keyword` <<multi-fields,multi field>>.\n \n+[[match-mapping-runtime-fields]]\n+===== Mapping runtime fields in a dynamic template\n+You can also map runtime fields in a dynamic template. For example, the\n+following request adds a dynamic template named `dayOfWeek` that maps all\n+incoming `string` fields as `keyword` fields in the `runtime` section of the\n+mapping. Although the `runtime` definition is blank, new `string` fields will\n+be mapped as `keyword` runtime fields based on the <<dynamic-field-mapping-types,dynamic mapping rules>> that {es} uses for adding field types to the\n+mapping. Any `string` that doesn't pass date detection or numeric detection is\n+automatically mapped as a `keyword` when `dynamic` is set to `runtime`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzODExMw=="}, "originalCommit": {"oid": "f692f87cb71f8e2d5e6f658af46dd3989d0d089c"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4569, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}