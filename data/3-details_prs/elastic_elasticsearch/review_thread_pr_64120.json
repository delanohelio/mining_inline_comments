{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5ODExMDQ1", "number": 64120, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjo1OToyOVrOExxTMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzozMjozOVrOExxyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjIzNDEwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/TokenAuthIntegTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjo1OToyOVrOHoCufQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzoyOTo1NlrOHoDXDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0OTc1Nw==", "bodyText": "This was the test bug.", "url": "https://github.com/elastic/elasticsearch/pull/64120#discussion_r511749757", "createdAt": "2020-10-26T06:59:29Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/TokenAuthIntegTests.java", "diffHunk": "@@ -189,12 +189,13 @@ public void testExpiredTokensDeletedAfterExpiration() throws Exception {\n \n         // Now the documents are deleted, try to invalidate the access token and refresh token again\n         InvalidateTokenResponse invalidateAccessTokenResponse = restClient.security().invalidateToken(\n-            new InvalidateTokenRequest(accessToken, null, null, null), SECURITY_REQUEST_OPTIONS);\n+            InvalidateTokenRequest.accessToken(accessToken), SECURITY_REQUEST_OPTIONS);\n         assertThat(invalidateAccessTokenResponse.getInvalidatedTokens(), equalTo(0));\n         assertThat(invalidateAccessTokenResponse.getPreviouslyInvalidatedTokens(), equalTo(0));\n         assertThat(invalidateAccessTokenResponse.getErrors(), empty());\n+\n         InvalidateTokenResponse invalidateRefreshTokenResponse = restClient.security().invalidateToken(\n-            new InvalidateTokenRequest(refreshToken, null, null, null), SECURITY_REQUEST_OPTIONS);\n+            InvalidateTokenRequest.refreshToken(refreshToken), SECURITY_REQUEST_OPTIONS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1005a79069a14075c1c53441f882ec869f9761f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc2MDE0MQ==", "bodyText": "Good catch.", "url": "https://github.com/elastic/elasticsearch/pull/64120#discussion_r511760141", "createdAt": "2020-10-26T07:29:56Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/TokenAuthIntegTests.java", "diffHunk": "@@ -189,12 +189,13 @@ public void testExpiredTokensDeletedAfterExpiration() throws Exception {\n \n         // Now the documents are deleted, try to invalidate the access token and refresh token again\n         InvalidateTokenResponse invalidateAccessTokenResponse = restClient.security().invalidateToken(\n-            new InvalidateTokenRequest(accessToken, null, null, null), SECURITY_REQUEST_OPTIONS);\n+            InvalidateTokenRequest.accessToken(accessToken), SECURITY_REQUEST_OPTIONS);\n         assertThat(invalidateAccessTokenResponse.getInvalidatedTokens(), equalTo(0));\n         assertThat(invalidateAccessTokenResponse.getPreviouslyInvalidatedTokens(), equalTo(0));\n         assertThat(invalidateAccessTokenResponse.getErrors(), empty());\n+\n         InvalidateTokenResponse invalidateRefreshTokenResponse = restClient.security().invalidateToken(\n-            new InvalidateTokenRequest(refreshToken, null, null, null), SECURITY_REQUEST_OPTIONS);\n+            InvalidateTokenRequest.refreshToken(refreshToken), SECURITY_REQUEST_OPTIONS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0OTc1Nw=="}, "originalCommit": {"oid": "c1005a79069a14075c1c53441f882ec869f9761f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjMxMTk3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/TokenAuthIntegTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzozMTo1N1rOHoDaeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNToxMDo0OFrOHorqGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc2MTAxOA==", "bodyText": "Not suggesting for you to change it in this PR since it is user visible, but the method name userTokens is confusing.", "url": "https://github.com/elastic/elasticsearch/pull/64120#discussion_r511761018", "createdAt": "2020-10-26T07:31:57Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/TokenAuthIntegTests.java", "diffHunk": "@@ -208,7 +209,7 @@ public void testInvalidateAllTokensForUser() throws Exception {\n                 SecuritySettingsSourceField.TEST_PASSWORD.toCharArray()), SECURITY_REQUEST_OPTIONS);\n         }\n         InvalidateTokenResponse invalidateResponse = restClient.security().invalidateToken(\n-            new InvalidateTokenRequest(null, null, null, SecuritySettingsSource.TEST_USER_NAME),\n+            InvalidateTokenRequest.userTokens(SecuritySettingsSource.TEST_USER_NAME),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7709322364985fa33647cb6eabea83c8f2e302a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMDM3OA==", "bodyText": "I agree - I thought the same thing when I converted all these calls.", "url": "https://github.com/elastic/elasticsearch/pull/64120#discussion_r512420378", "createdAt": "2020-10-27T05:10:48Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/TokenAuthIntegTests.java", "diffHunk": "@@ -208,7 +209,7 @@ public void testInvalidateAllTokensForUser() throws Exception {\n                 SecuritySettingsSourceField.TEST_PASSWORD.toCharArray()), SECURITY_REQUEST_OPTIONS);\n         }\n         InvalidateTokenResponse invalidateResponse = restClient.security().invalidateToken(\n-            new InvalidateTokenRequest(null, null, null, SecuritySettingsSource.TEST_USER_NAME),\n+            InvalidateTokenRequest.userTokens(SecuritySettingsSource.TEST_USER_NAME),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc2MTAxOA=="}, "originalCommit": {"oid": "a7709322364985fa33647cb6eabea83c8f2e302a"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjMxMzUyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/TokenAuthIntegTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzozMjozOVrOHoDbfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzozMjozOVrOHoDbfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc2MTI3OQ==", "bodyText": "Same for this method name.", "url": "https://github.com/elastic/elasticsearch/pull/64120#discussion_r511761279", "createdAt": "2020-10-26T07:32:39Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/TokenAuthIntegTests.java", "diffHunk": "@@ -225,7 +226,7 @@ public void testInvalidateAllTokensForRealm() throws Exception {\n                 SecuritySettingsSourceField.TEST_PASSWORD.toCharArray()), SECURITY_REQUEST_OPTIONS);\n         }\n         InvalidateTokenResponse invalidateResponse = restClient.security().invalidateToken(\n-            new InvalidateTokenRequest(null, null, \"file\", null),\n+            InvalidateTokenRequest.realmTokens(\"file\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7709322364985fa33647cb6eabea83c8f2e302a"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4311, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}