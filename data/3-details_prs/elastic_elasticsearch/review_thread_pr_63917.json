{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NjQ4MjY3", "number": 63917, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo1NDoyN1rOEvseNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo1NDoyN1rOEvseNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDQ3MTU3OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo1NDoyN1rOHk0PcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDowNToxMVrOHk0q_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NjcwNQ==", "bodyText": "@romseygeek as part of the backport, due to this call to documentMapper that takes a type, I had to make this argument a function, and the corresponding method in MapperService now takes a String argument. Is that good enough or can you thin of further simplications?", "url": "https://github.com/elastic/elasticsearch/pull/63917#discussion_r508366705", "createdAt": "2020-10-20T09:54:27Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java", "diffHunk": "@@ -46,49 +45,38 @@\n import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Objects;\n+import java.util.function.Function;\n import java.util.stream.Stream;\n \n \n public class DocumentMapper implements ToXContentFragment {\n \n     public static class Builder {\n-\n-        private final Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> metadataMappers = new LinkedHashMap<>();\n+        private final Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> metadataMappers;\n         private final RootObjectMapper rootObjectMapper;\n         private final Mapper.BuilderContext builderContext;\n         private final IndexSettings indexSettings;\n         private final IndexAnalyzers indexAnalyzers;\n-        private final DocumentMapperParser documentMapperParser;\n         private final DocumentParser documentParser;\n \n         private Map<String, Object> meta;\n \n         public Builder(RootObjectMapper.Builder builder, MapperService mapperService) {\n-            this.indexSettings = mapperService.getIndexSettings();\n-            this.indexAnalyzers = mapperService.getIndexAnalyzers();\n-            this.documentMapperParser = mapperService.documentMapperParser();\n-            this.documentParser = mapperService.documentParser();\n+            this(builder, mapperService.getIndexSettings(), mapperService.getIndexAnalyzers(), mapperService.documentParser(),\n+                mapperService::getMetadataMappers);\n+        }\n+\n+        Builder(RootObjectMapper.Builder builder,\n+                IndexSettings indexSettings,\n+                IndexAnalyzers indexAnalyzers,\n+                DocumentParser documentParser,\n+                Function<String, Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper>> metadataMappersFunction) {\n+            this.indexSettings = indexSettings;\n+            this.indexAnalyzers = indexAnalyzers;\n+            this.documentParser = documentParser;\n             this.builderContext = new Mapper.BuilderContext(indexSettings.getSettings(), new ContentPath(1));\n             this.rootObjectMapper = builder.build(builderContext);\n-            final String type = rootObjectMapper.name();\n-            final DocumentMapper existingMapper = mapperService.documentMapper(type);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed0a07c700e482c1124d5d0426c2f40affdd8e86"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3Mzc1Ng==", "bodyText": "I think it fine; it's not beautiful, but that's types for you.", "url": "https://github.com/elastic/elasticsearch/pull/63917#discussion_r508373756", "createdAt": "2020-10-20T10:05:11Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java", "diffHunk": "@@ -46,49 +45,38 @@\n import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Objects;\n+import java.util.function.Function;\n import java.util.stream.Stream;\n \n \n public class DocumentMapper implements ToXContentFragment {\n \n     public static class Builder {\n-\n-        private final Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> metadataMappers = new LinkedHashMap<>();\n+        private final Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> metadataMappers;\n         private final RootObjectMapper rootObjectMapper;\n         private final Mapper.BuilderContext builderContext;\n         private final IndexSettings indexSettings;\n         private final IndexAnalyzers indexAnalyzers;\n-        private final DocumentMapperParser documentMapperParser;\n         private final DocumentParser documentParser;\n \n         private Map<String, Object> meta;\n \n         public Builder(RootObjectMapper.Builder builder, MapperService mapperService) {\n-            this.indexSettings = mapperService.getIndexSettings();\n-            this.indexAnalyzers = mapperService.getIndexAnalyzers();\n-            this.documentMapperParser = mapperService.documentMapperParser();\n-            this.documentParser = mapperService.documentParser();\n+            this(builder, mapperService.getIndexSettings(), mapperService.getIndexAnalyzers(), mapperService.documentParser(),\n+                mapperService::getMetadataMappers);\n+        }\n+\n+        Builder(RootObjectMapper.Builder builder,\n+                IndexSettings indexSettings,\n+                IndexAnalyzers indexAnalyzers,\n+                DocumentParser documentParser,\n+                Function<String, Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper>> metadataMappersFunction) {\n+            this.indexSettings = indexSettings;\n+            this.indexAnalyzers = indexAnalyzers;\n+            this.documentParser = documentParser;\n             this.builderContext = new Mapper.BuilderContext(indexSettings.getSettings(), new ContentPath(1));\n             this.rootObjectMapper = builder.build(builderContext);\n-            final String type = rootObjectMapper.name();\n-            final DocumentMapper existingMapper = mapperService.documentMapper(type);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NjcwNQ=="}, "originalCommit": {"oid": "ed0a07c700e482c1124d5d0426c2f40affdd8e86"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4319, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}