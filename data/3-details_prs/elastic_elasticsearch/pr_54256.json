{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MDU4ODQ2", "number": 54256, "title": "Improve Snapshot Abort Behavior", "bodyText": "This commit improves the behavior of aborting snapshots and by that fixes\nsome extremely rare test failures.\nImprovements:\n\nWhen aborting a snapshot while it is in the INIT stage we do not need\nto ever delete anything from the repository because nothing is written to the\nrepo during INIT any more (in the past running deletes for these snapshots made\nsense because we were writing snap- and meta- blobs during the INIT step).\nDo not try to finalize snapshots that never moved past INIT. Same reason as\nwith the first step. If we never moved past INIT no data was written to the repo\nso no need to now write a useless entry for the aborted snapshot to index-N.\nThis is especially true, since the reason the snapshot was aborted during INIT was\na delete call so the useless empty snapshot just added to index-N would be removed\nby the subsequent delete that is still waiting anyway.\nif after aborting a snapshot we wait for it to finish we should not try deleting it\nif it failed. If the snapshot failed it means it did not become part of the most recent\nRepositoryData so a delete for it will needlessly fail with a confusing message about\nthat snapshot being missing or concurrent repository modification. I moved to throw the snapshot missing exception here because that seems the most user friendly. This allows the user to simply ignore 404 returns from the delete API when using it to make sure a snapshot is aborted+deleted.\n\nExample test failure fixed: https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+pull-request-2/19730/consoleText\nMarking this as a non-issue since it doesn't have any negative repercussions other than confusing exceptions on some snapshot aborts.\nCloses #52843", "createdAt": "2020-03-26T09:42:14Z", "url": "https://github.com/elastic/elasticsearch/pull/54256", "merged": true, "mergeCommit": {"oid": "e3a1f2b7fae07d547c3bcde9c479c53bbabfca36"}, "closed": true, "closedAt": "2020-03-30T11:10:52Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRYumcgH2gAyMzk0MDU4ODQ2OmY0YzE0MTkzOThkNzI3MWNmNTgzNjU4MzQ0MzIxMDM3NWRhYjE1NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSqVhDAFqTM4MzYzODE2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f4c1419398d7271cf5836583443210375dab1551", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/f4c1419398d7271cf5836583443210375dab1551", "committedDate": "2020-03-26T09:31:25Z", "message": "Improve Snapshot Abort Behavior\n\nThis commit improves the behavior of aborting snapshots and by that fixes\nsome extremely rare test failures.\n\nImprovements:\n1. When aborting a snapshot while it is in the `INIT` stage we do not need\nto ever delete anything from the repository because nothing is written to the\nrepo during INIT any more (in the past running deletes for these snapshots made\nsense because we were writing `snap-` and `meta-` blobs during the `INIT` step).\n2. Do not try to finalize snapshots that never moved past `INIT`. Same reason as\nwith the first step. If we never moved past `INIT` no data was written to the repo\nso no need to now write a useless entry for the aborted snapshot to `index-N`.\nThis is especially true, since the reason the snapshot was aborted during `INIT` was\na delete call so the useless empty snapshot just added to `index-N` would be removed\nby the subsequent delete that is still waiting anyway.\n3. if after aborting a snapshot we wait for it to finish we should not try deleting it\nif it failed. If the snapshot failed it means it did not become part of the most recent\n`RepositoryData` so a delete for it will needlessly fail with a confusing message about\nthat snapshot being missing or concurrent repository modification."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56f11059f053608b5926499176236ba1304ec4c3", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/56f11059f053608b5926499176236ba1304ec4c3", "committedDate": "2020-03-26T09:41:53Z", "message": "bck"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODQzODMy", "url": "https://github.com/elastic/elasticsearch/pull/54256#pullrequestreview-381843832", "createdAt": "2020-03-26T09:45:54Z", "commit": {"oid": "56f11059f053608b5926499176236ba1304ec4c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo0NTo1NFrOF7-vhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo0NTo1NFrOF7-vhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzODI3OQ==", "bodyText": "This whole step is kind of stupid now in 7.6+ because we don't write anything during INIT. Ideally (and I'd do that in a follow-up), we shouldn't move the snapshot to ABORTED here but instead just drop it from the cluster state right away and resolve the listener in beginSnapshot to not have the redundant CS updates from moving to ABORTED and then removing the snapshot from the CS in beginSnapshot.", "url": "https://github.com/elastic/elasticsearch/pull/54256#discussion_r398438279", "createdAt": "2020-03-26T09:45:54Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1292,6 +1300,7 @@ public ClusterState execute(ClusterState currentState) {\n                         shards = snapshotEntry.shards();\n                         assert shards.isEmpty();\n                         failure = \"Snapshot was aborted during initialization\";\n+                        abortedDuringInit = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56f11059f053608b5926499176236ba1304ec4c3"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53e9ae10e3572bfd634e6375e9cfbc88e78ed021", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/53e9ae10e3572bfd634e6375e9cfbc88e78ed021", "committedDate": "2020-03-26T10:48:14Z", "message": "nope"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTE4Mjky", "url": "https://github.com/elastic/elasticsearch/pull/54256#pullrequestreview-381918292", "createdAt": "2020-03-26T11:27:50Z", "commit": {"oid": "53e9ae10e3572bfd634e6375e9cfbc88e78ed021"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMToyNzo1MFrOF8Cfww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMToyNzo1MFrOF8Cfww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ5OTc3OQ==", "bodyText": "This change will help debug future issues+test-failures more easily. If we're aborting we get a log sequence as below now (without the newly added information it was impossible to tell if the deletes were due to rerunning the delete after finishing the snapshot or due to REST client retries):\n[2020-03-26T11:45:02,542][INFO ][o.e.s.SnapshotsService   ] [asyncIntegTest-0] deleting snapshot [test_repository:test_snapshot/P5-mkax-TwupQvH2i4i6Kw] assuming repository generation [-1] and with priory [NORMAL]\n[2020-03-26T11:45:02,640][INFO ][o.e.s.SnapshotsService   ] [asyncIntegTest-0] snapshot [test_repository:test_snapshot/P5-mkax-TwupQvH2i4i6Kw] completed with state [SUCCESS]\n[2020-03-26T11:45:02,656][INFO ][o.e.s.SnapshotsService   ] [asyncIntegTest-0] deleting snapshot [test_repository:test_snapshot/P5-mkax-TwupQvH2i4i6Kw] assuming repository generation [0] and with priory [IMMEDIATE]", "url": "https://github.com/elastic/elasticsearch/pull/54256#discussion_r398499779", "createdAt": "2020-03-26T11:27:50Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1227,12 +1233,15 @@ public void deleteSnapshot(final String repositoryName, final String snapshotNam\n      */\n     private void deleteSnapshot(final Snapshot snapshot, final ActionListener<Void> listener, final long repositoryStateId,\n                                 final boolean immediatePriority) {\n-        logger.info(\"deleting snapshot [{}]\", snapshot);\n         Priority priority = immediatePriority ? Priority.IMMEDIATE : Priority.NORMAL;\n+        logger.info(\"deleting snapshot [{}] assuming repository generation [{}] and with priory [{}]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e9ae10e3572bfd634e6375e9cfbc88e78ed021"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDY5MTY0", "url": "https://github.com/elastic/elasticsearch/pull/54256#pullrequestreview-382069164", "createdAt": "2020-03-26T14:33:24Z", "commit": {"oid": "53e9ae10e3572bfd634e6375e9cfbc88e78ed021"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDozMzoyNVrOF8J1tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDo1NToxM1rOF8K4iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYyMDA4Ng==", "bodyText": "s/priory/priority", "url": "https://github.com/elastic/elasticsearch/pull/54256#discussion_r398620086", "createdAt": "2020-03-26T14:33:25Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1227,12 +1233,15 @@ public void deleteSnapshot(final String repositoryName, final String snapshotNam\n      */\n     private void deleteSnapshot(final Snapshot snapshot, final ActionListener<Void> listener, final long repositoryStateId,\n                                 final boolean immediatePriority) {\n-        logger.info(\"deleting snapshot [{}]\", snapshot);\n         Priority priority = immediatePriority ? Priority.IMMEDIATE : Priority.NORMAL;\n+        logger.info(\"deleting snapshot [{}] assuming repository generation [{}] and with priory [{}]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e9ae10e3572bfd634e6375e9cfbc88e78ed021"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYyNjA2NQ==", "bodyText": "The JavaDocs on beginSnapshot should be updated as well, as it claims that the snapshot is created in the repo.", "url": "https://github.com/elastic/elasticsearch/pull/54256#discussion_r398626065", "createdAt": "2020-03-26T14:41:11Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1292,6 +1300,7 @@ public ClusterState execute(ClusterState currentState) {\n                         shards = snapshotEntry.shards();\n                         assert shards.isEmpty();\n                         failure = \"Snapshot was aborted during initialization\";\n+                        abortedDuringInit = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzODI3OQ=="}, "originalCommit": {"oid": "56f11059f053608b5926499176236ba1304ec4c3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzNzE5Mw==", "bodyText": "I'm not sure what cases this is supposed to cover. In particular, I'm wondering about the case where the current node failed (e.g. got disconnected from the rest of the cluster) and another master completed the snapshot. How are the listeners in snapshotCompletionListeners informed?", "url": "https://github.com/elastic/elasticsearch/pull/54256#discussion_r398637193", "createdAt": "2020-03-26T14:55:13Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1356,19 +1366,14 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n                             );\n                         },\n                         e -> {\n-                            logger.warn(\"deleted snapshot failed - deleting files\", e);\n-                            threadPool.executor(ThreadPool.Names.SNAPSHOT).execute(() -> {\n-                                try {\n-                                    deleteSnapshot(snapshot.getRepository(), snapshot.getSnapshotId().getName(), listener, true);\n-                                } catch (SnapshotMissingException smex) {\n-                                    logger.info(() -> new ParameterizedMessage(\n-                                        \"Tried deleting in-progress snapshot [{}], but it could not be found after failing to abort.\",\n-                                        smex.getSnapshotName()), e);\n-                                    listener.onFailure(new SnapshotException(snapshot,\n-                                        \"Tried deleting in-progress snapshot [\" + smex.getSnapshotName() + \"], but it \" +\n-                                            \"could not be found after failing to abort.\", smex));\n-                                }\n-                            });\n+                            if (abortedDuringInit) {\n+                                logger.debug(() -> new ParameterizedMessage(\"Snapshot [{}] was aborted during INIT\", snapshot), e);\n+                                listener.onResponse(null);\n+                            } else {\n+                                logger.warn(\"deleted snapshot failed\", e);\n+                                listener.onFailure(\n+                                    new SnapshotMissingException(snapshot.getRepository(), snapshot.getSnapshotId(), e));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e9ae10e3572bfd634e6375e9cfbc88e78ed021"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7155cc72d9e22cc46a8a925e867a6b844844d389", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/7155cc72d9e22cc46a8a925e867a6b844844d389", "committedDate": "2020-03-26T15:17:35Z", "message": "fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "026dda41ed0b6680ffee565682fce9a0726f744e", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/026dda41ed0b6680ffee565682fce9a0726f744e", "committedDate": "2020-03-27T10:09:46Z", "message": "Merge remote-tracking branch 'elastic/master' into repo-abort-snapshot-bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a2422b86923b496eb3d0e63bcb9c7aa2600d32c", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/2a2422b86923b496eb3d0e63bcb9c7aa2600d32c", "committedDate": "2020-03-27T10:14:29Z", "message": "retry on master failover"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92e0db0ec35f708d5aabdd27de2544fe92243cbb", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/92e0db0ec35f708d5aabdd27de2544fe92243cbb", "committedDate": "2020-03-27T10:14:40Z", "message": "Merge remote-tracking branch 'elastic/master' into repo-abort-snapshot-bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e373a8834f6d0675ff0c6c99479ba3b08820920e", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/e373a8834f6d0675ff0c6c99479ba3b08820920e", "committedDate": "2020-03-27T10:23:59Z", "message": "CS"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjAwNDg4", "url": "https://github.com/elastic/elasticsearch/pull/54256#pullrequestreview-383600488", "createdAt": "2020-03-30T07:42:34Z", "commit": {"oid": "e373a8834f6d0675ff0c6c99479ba3b08820920e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo0MjozNFrOF9dOAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo0MjozNFrOF9dOAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NjE3OA==", "bodyText": "I think I would rather always bubble up the original exception, marking the deletion as failed (and have the client retry). This listener here can be called in a range of situations, and I don't think that in all cases it denotes that the snapshot has been deleted or fully aborted (especially because with waitForSnapshot we are supposed to wait until the snapshot has truly completed, whether exceptional or not).", "url": "https://github.com/elastic/elasticsearch/pull/54256#discussion_r399986178", "createdAt": "2020-03-30T07:42:34Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1356,19 +1365,21 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n                             );\n                         },\n                         e -> {\n-                            logger.warn(\"deleted snapshot failed - deleting files\", e);\n-                            threadPool.executor(ThreadPool.Names.SNAPSHOT).execute(() -> {\n-                                try {\n-                                    deleteSnapshot(snapshot.getRepository(), snapshot.getSnapshotId().getName(), listener, true);\n-                                } catch (SnapshotMissingException smex) {\n-                                    logger.info(() -> new ParameterizedMessage(\n-                                        \"Tried deleting in-progress snapshot [{}], but it could not be found after failing to abort.\",\n-                                        smex.getSnapshotName()), e);\n-                                    listener.onFailure(new SnapshotException(snapshot,\n-                                        \"Tried deleting in-progress snapshot [\" + smex.getSnapshotName() + \"], but it \" +\n-                                            \"could not be found after failing to abort.\", smex));\n+                            if (abortedDuringInit) {\n+                                logger.debug(() -> new ParameterizedMessage(\"Snapshot [{}] was aborted during INIT\", snapshot), e);\n+                                listener.onResponse(null);\n+                            } else {\n+                                if (ExceptionsHelper.unwrap(e, NotMasterException.class, FailedToCommitClusterStateException.class)\n+                                    != null) {\n+                                    logger.warn(\"master failover before deleted snapshot could complete\", e);\n+                                    // Just pass the exception to the transport handler as is so it is retried on the new master\n+                                    listener.onFailure(e);\n+                                } else {\n+                                    logger.warn(\"deleted snapshot failed\", e);\n+                                    listener.onFailure(\n+                                        new SnapshotMissingException(snapshot.getRepository(), snapshot.getSnapshotId(), e));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e373a8834f6d0675ff0c6c99479ba3b08820920e"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjM4MTY0", "url": "https://github.com/elastic/elasticsearch/pull/54256#pullrequestreview-383638164", "createdAt": "2020-03-30T08:36:14Z", "commit": {"oid": "e373a8834f6d0675ff0c6c99479ba3b08820920e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1609, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}