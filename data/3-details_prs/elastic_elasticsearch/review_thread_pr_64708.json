{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NzQxNjQ2", "number": 64708, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNzozMjoyMFrOE2LPwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNzozMjoyMFrOE2LPwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MjQyODE3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/http/AbstractHttpServerTransportTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNzozMjoyMFrOHu3JmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwODo1MjoxNlrOHvkbMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkwMDEyMQ==", "bodyText": "Is there anywhere that we can assert that the header name at fault is included in the error sent back to the user ?", "url": "https://github.com/elastic/elasticsearch/pull/64708#discussion_r518900121", "createdAt": "2020-11-06T17:32:20Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/http/AbstractHttpServerTransportTests.java", "diffHunk": "@@ -173,6 +177,63 @@ public HttpStats stats() {\n         }\n     }\n \n+    public void testIncorrectHeaderHandling() {\n+\n+        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n+        try (AbstractHttpServerTransport transport =\n+                 new AbstractHttpServerTransport(Settings.EMPTY, networkService, bigArrays, threadPool, xContentRegistry(),\n+                     new HttpServerTransport.Dispatcher() {\n+                         @Override\n+                         public void dispatchRequest(RestRequest request, RestChannel channel, ThreadContext threadContext) {\n+                             Assert.fail();\n+                         }\n+\n+                         @Override\n+                         public void dispatchBadRequest(RestChannel channel, ThreadContext threadContext, Throwable cause) {\n+                             assertThat(cause, instanceOf(RestRequest.MediaTypeHeaderException.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d89c2985c247acafb9fb4aaeb1a1c5bfa3a996"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY0MTkwNQ==", "bodyText": "great you noticed this. in fact the header name was not surfaced on a response.\nI refactored this to return something like\n{\n  \"error\": {\n    \"root_cause\": [\n      {\n        \"type\": \"media_type_header_exception\",\n        \"reason\": \"Invalid media-type value on header [Accept]\"\n      }\n    ],\n    \"type\": \"media_type_header_exception\",\n    \"reason\": \"Invalid media-type value on header [Accept]\",\n    \"caused_by\": {\n      \"type\": \"illegal_argument_exception\",\n      \"reason\": \"invalid media type [texffff]\"\n    }\n  },\n  \"status\": 400\n}", "url": "https://github.com/elastic/elasticsearch/pull/64708#discussion_r519641905", "createdAt": "2020-11-09T08:52:16Z", "author": {"login": "pgomulka"}, "path": "server/src/test/java/org/elasticsearch/http/AbstractHttpServerTransportTests.java", "diffHunk": "@@ -173,6 +177,63 @@ public HttpStats stats() {\n         }\n     }\n \n+    public void testIncorrectHeaderHandling() {\n+\n+        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n+        try (AbstractHttpServerTransport transport =\n+                 new AbstractHttpServerTransport(Settings.EMPTY, networkService, bigArrays, threadPool, xContentRegistry(),\n+                     new HttpServerTransport.Dispatcher() {\n+                         @Override\n+                         public void dispatchRequest(RestRequest request, RestChannel channel, ThreadContext threadContext) {\n+                             Assert.fail();\n+                         }\n+\n+                         @Override\n+                         public void dispatchBadRequest(RestChannel channel, ThreadContext threadContext, Throwable cause) {\n+                             assertThat(cause, instanceOf(RestRequest.MediaTypeHeaderException.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkwMDEyMQ=="}, "originalCommit": {"oid": "a6d89c2985c247acafb9fb4aaeb1a1c5bfa3a996"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3105, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}