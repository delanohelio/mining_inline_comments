{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NjYwOTk3", "number": 63338, "title": "SQL: integer parameter validation in string functions", "bodyText": "This PR adds integer parameter validation for the string functions taking one: LOCATE, LEFT, INSERT, REPEAT, RIGHT, SUBSTRING.\nCloses #58923.\nSupersedes #60281.\nCo-authored-by:  yinanwu yinanwu@tencent.com", "createdAt": "2020-10-06T15:55:16Z", "url": "https://github.com/elastic/elasticsearch/pull/63338", "merged": true, "mergeCommit": {"oid": "bf6dc58b93529f977d035a846d083b1c31867694"}, "closed": true, "closedAt": "2020-10-15T10:43:56Z", "author": {"login": "bpintea"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5U1_FAH2gAyNDk4NjYwOTk3Ojk5NzdmYTFkYTM3Y2NmMGY0NGNiNjdlMDFmMDYzMTg5ZjBjMjQ5Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSOYAjAH2gAyNDk4NjYwOTk3OjVlMzM0OTUxODMwNWU0MzYyMDY0Yzg5NDRhNzgwOGIyYjM3ZTcwMDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9977fa1da37ccf0f44cb67e01f063189f0c24927", "author": {"user": null}, "url": "https://github.com/elastic/elasticsearch/commit/9977fa1da37ccf0f44cb67e01f063189f0c24927", "committedDate": "2020-07-28T11:36:50Z", "message": "SQL: integer parameter validation in string functions (#58923)\n\nIn insert, locate, substring function, when argument `start` or `length` is greater than Integer.MAX_INT OR less then Integer.MIN_INT + 1 (note that `start` need to minus 1), it causes overflow and leads to unexpected results."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bff4b53dfc955c0c4db562fe50b98ff945b28c8", "author": {"user": null}, "url": "https://github.com/elastic/elasticsearch/commit/3bff4b53dfc955c0c4db562fe50b98ff945b28c8", "committedDate": "2020-07-30T10:00:07Z", "message": "SQL: IN operator incorrectly handling specified date format (#58932)\n\nExtract the checks into methods Check.isNumberOutOfRange and add unit tests to the three string function."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5577a2f38c6992270f52502dc2cb2047be60a04d", "author": {"user": null}, "url": "https://github.com/elastic/elasticsearch/commit/5577a2f38c6992270f52502dc2cb2047be60a04d", "committedDate": "2020-07-31T01:29:21Z", "message": "SQL: IN operator incorrectly handling specified date format (#58932)\n\nUpdate the Check.isFixedNumberAndInRange function to comply with code specifications."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72d80074d8eb1211c925619ab47ad608717d97ae", "author": {"user": null}, "url": "https://github.com/elastic/elasticsearch/commit/72d80074d8eb1211c925619ab47ad608717d97ae", "committedDate": "2020-07-31T01:47:18Z", "message": "SQL: IN operator incorrectly handling specified date format (#58932)\n\nUpdate the unit tests to fit new check error messages."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd639c9d54f03c0eb9d447e94ed14aae1d8d4c36", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/bd639c9d54f03c0eb9d447e94ed14aae1d8d4c36", "committedDate": "2020-10-05T16:27:04Z", "message": "Merge remote-tracking branch 'upstream/master' into fix/str_func_param_validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58f48992500fb760808ebd8a9ebd09a298d4c4c3", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/58f48992500fb760808ebd8a9ebd09a298d4c4c3", "committedDate": "2020-10-06T15:25:38Z", "message": "Add range checks for BinaryStringNumericProcessors\n\n- Add range checks for Left, Right, Repeat.\n- Minor refactorings on initial PR changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e46b970524177363d555741cee560cdf6eb247f", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/8e46b970524177363d555741cee560cdf6eb247f", "committedDate": "2020-10-06T15:55:58Z", "message": "Merge branch 'master' into fix/str_func_param_validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0ODk5OTgz", "url": "https://github.com/elastic/elasticsearch/pull/63338#pullrequestreview-504899983", "createdAt": "2020-10-08T15:22:21Z", "commit": {"oid": "8e46b970524177363d555741cee560cdf6eb247f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNToyMjoyMVrOHej7dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNToyMjoyMVrOHej7dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgwNzk4OQ==", "bodyText": "minor: Could you use Integer.MIN/MAX_VALUE to make it more clear?", "url": "https://github.com/elastic/elasticsearch/pull/63338#discussion_r501807989", "createdAt": "2020-10-08T15:22:21Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/InsertProcessorTests.java", "diffHunk": "@@ -52,33 +52,53 @@ public void testInsertWithEdgeCases() {\n         assertEquals(\"bazbar\", new Insert(EMPTY, l(\"foobar\"), l(-1), l(3), l(\"baz\")).makePipe().asProcessor().process(null));\n         assertEquals(\"foobaz\", new Insert(EMPTY, l(\"foobar\"), l(4), l(30), l(\"baz\")).makePipe().asProcessor().process(null));\n         assertEquals(\"foobaz\", new Insert(EMPTY, l(\"foobar\"), l(6), l(1), l('z')).makePipe().asProcessor().process(null));\n-        assertEquals(\"foobarbaz\", \n+        assertEquals(\"foobarbaz\",\n                 new Insert(EMPTY, l(\"foobar\"), l(7), l(1000), l(\"baz\")).makePipe().asProcessor().process(null));\n-        assertEquals(\"foobar\", \n+        assertEquals(\"foobar\",\n                 new Insert(EMPTY, l(\"foobar\"), l(8), l(1000), l(\"baz\")).makePipe().asProcessor().process(null));\n         assertEquals(\"fzr\", new Insert(EMPTY, l(\"foobar\"), l(2), l(4), l('z')).makePipe().asProcessor().process(null));\n         assertEquals(\"CAR\", new Insert(EMPTY, l(\"FOOBAR\"), l(1), l(5), l(\"CA\")).makePipe().asProcessor().process(null));\n         assertEquals(\"z\", new Insert(EMPTY, l('f'), l(1), l(10), l('z')).makePipe().asProcessor().process(null));\n-        \n+\n         assertEquals(\"bla\", new Insert(EMPTY, l(\"\"), l(1), l(10), l(\"bla\")).makePipe().asProcessor().process(null));\n         assertEquals(\"\", new Insert(EMPTY, l(\"\"), l(2), l(10), l(\"bla\")).makePipe().asProcessor().process(null));\n     }\n-    \n+\n     public void testInsertInputsValidation() {\n         SqlIllegalArgumentException siae = expectThrows(SqlIllegalArgumentException.class,\n                 () -> new Insert(EMPTY, l(5), l(1), l(3), l(\"baz\")).makePipe().asProcessor().process(null));\n         assertEquals(\"A string/char is required; received [5]\", siae.getMessage());\n+\n         siae = expectThrows(SqlIllegalArgumentException.class,\n                 () -> new Insert(EMPTY, l(\"foobar\"), l(1), l(3), l(66)).makePipe().asProcessor().process(null));\n         assertEquals(\"A string/char is required; received [66]\", siae.getMessage());\n+\n         siae = expectThrows(SqlIllegalArgumentException.class,\n                 () -> new Insert(EMPTY, l(\"foobar\"), l(\"c\"), l(3), l(\"baz\")).makePipe().asProcessor().process(null));\n-        assertEquals(\"A number is required; received [c]\", siae.getMessage());\n+        assertEquals(\"A fixed point number is required for [start]; received [java.lang.String]\", siae.getMessage());\n+\n         siae = expectThrows(SqlIllegalArgumentException.class,\n                 () -> new Insert(EMPTY, l(\"foobar\"), l(1), l('z'), l(\"baz\")).makePipe().asProcessor().process(null));\n-        assertEquals(\"A number is required; received [z]\", siae.getMessage());\n+        assertEquals(\"A fixed point number is required for [length]; received [java.lang.Character]\", siae.getMessage());\n+\n+        assertEquals(\"baroobar\", new Insert(EMPTY, l(\"foobar\"), l(-2147483647), l(1), l(\"bar\")).makePipe().asProcessor().process(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e46b970524177363d555741cee560cdf6eb247f"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52a5a0720793a4bec54869513e3fcf9acd4eccd1", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/52a5a0720793a4bec54869513e3fcf9acd4eccd1", "committedDate": "2020-10-12T11:50:09Z", "message": "Adress review comments\n\nPort\nhttps://github.com/elastic/elasticsearch/pull/60281/commits/7d8ecfc8aece028a965c1fad017c7e137696989c"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0532b33661fb6aeefbbef35189f0a69c977cd7dc", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/0532b33661fb6aeefbbef35189f0a69c977cd7dc", "committedDate": "2020-10-12T11:51:32Z", "message": "Merge branch 'master' into fix/str_func_param_validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjE0NzM3", "url": "https://github.com/elastic/elasticsearch/pull/63338#pullrequestreview-507614737", "createdAt": "2020-10-13T16:20:11Z", "commit": {"oid": "0532b33661fb6aeefbbef35189f0a69c977cd7dc"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoyMDoxMVrOHgu8Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozNDoyM1rOHgvoUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4NTUxNA==", "bodyText": "Unless we use this format elsewhere [{} .. {}] (with two dots), I would use the comma format [{}, {}].", "url": "https://github.com/elastic/elasticsearch/pull/63338#discussion_r504085514", "createdAt": "2020-10-13T16:20:11Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/util/Check.java", "diffHunk": "@@ -36,4 +36,15 @@ public static void notNull(Object object, String message, Object... values) {\n             throw new SqlIllegalArgumentException(message, values);\n         }\n     }\n+\n+    public static void isFixedNumberAndInRange(Object object, String objectName, Long from, Long to) {\n+        if ((object instanceof Number) == false || object instanceof Float || object instanceof Double) {\n+            throw new SqlIllegalArgumentException(\"A fixed point number is required for [{}]; received [{}]\", objectName,\n+                object.getClass().getTypeName());\n+        }\n+        Long longValue = ((Number) object).longValue();\n+        if (longValue < from || longValue > to) {\n+            throw new SqlIllegalArgumentException(\"[{}] equals [{}], out of the allowed range [{}..{}]\", objectName, longValue, from, to);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0532b33661fb6aeefbbef35189f0a69c977cd7dc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5Njg0OQ==", "bodyText": "Also, I think the style of the error message we use is first state the problem, then the actual value. Something like \"[start] out of the allowed range [ ], received [{}]\". Found one example (maybe there are more with out of range values) in the Analyzer.", "url": "https://github.com/elastic/elasticsearch/pull/63338#discussion_r504096849", "createdAt": "2020-10-13T16:34:23Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/util/Check.java", "diffHunk": "@@ -36,4 +36,15 @@ public static void notNull(Object object, String message, Object... values) {\n             throw new SqlIllegalArgumentException(message, values);\n         }\n     }\n+\n+    public static void isFixedNumberAndInRange(Object object, String objectName, Long from, Long to) {\n+        if ((object instanceof Number) == false || object instanceof Float || object instanceof Double) {\n+            throw new SqlIllegalArgumentException(\"A fixed point number is required for [{}]; received [{}]\", objectName,\n+                object.getClass().getTypeName());\n+        }\n+        Long longValue = ((Number) object).longValue();\n+        if (longValue < from || longValue > to) {\n+            throw new SqlIllegalArgumentException(\"[{}] equals [{}], out of the allowed range [{}..{}]\", objectName, longValue, from, to);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4NTUxNA=="}, "originalCommit": {"oid": "0532b33661fb6aeefbbef35189f0a69c977cd7dc"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c9e805de236200d77a3540ab89aa79809aed271", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/5c9e805de236200d77a3540ab89aa79809aed271", "committedDate": "2020-10-13T20:11:48Z", "message": "Adress review comments\n\nUpdate one error message."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e3349518305e4362064c8944a7808b2b37e7009", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/5e3349518305e4362064c8944a7808b2b37e7009", "committedDate": "2020-10-13T20:12:46Z", "message": "Merge branch 'master' into fix/str_func_param_validation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4338, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}