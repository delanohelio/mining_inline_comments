{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjc5Mzkw", "number": 51105, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDoyNjozOFrODY-Dkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDozNjowOVrODY-HUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTA5MTM4OnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/indices/query_cache.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDoyNjozOVrOFfIZLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDoyNjozOVrOFfIZLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4NzY5Mg==", "bodyText": "I'd take the opportunity to tighten this up a bit.\nThe results of queries used in the filter context are cached in the node query cache for fast lookup.\nThe cache uses an LRU eviction policy: when the cache is full, the least recently used query results are evicted to make way for new data. You cannot inspect the contents of the query cache.", "url": "https://github.com/elastic/elasticsearch/pull/51105#discussion_r368187692", "createdAt": "2020-01-18T00:26:39Z", "author": {"login": "debadair"}, "path": "docs/reference/modules/indices/query_cache.asciidoc", "diffHunk": "@@ -1,27 +1,35 @@\n [[query-cache]]\n === Node Query Cache\n \n-The query cache is responsible for caching the results of queries.\n-There is one queries cache per node that is shared by all shards.\n-The cache implements an LRU eviction policy: when a cache becomes full, the\n-least recently used data is evicted to make way for new data.\n-It is not possible to look at the contents being cached.\n+The query cache is responsible for caching the results of queries. There is one \n+queries cache per node that is shared by all shards. The cache implements an LRU \n+eviction policy: when a cache becomes full, the least recently used data is \n+evicted to make way for new data. It is not possible to look at the contents \n+being cached.\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTA5NTU2OnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/indices/query_cache.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDozMDo0NlrOFfIbqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDozMDo0NlrOFfIbqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4ODMyOQ==", "bodyText": "If you mention that this cache is for queries used in a filter context above, you can probably just focus on the exceptions here:\nTerm queries and queries used outside of a filter context are not eligible for caching.", "url": "https://github.com/elastic/elasticsearch/pull/51105#discussion_r368188329", "createdAt": "2020-01-18T00:30:46Z", "author": {"login": "debadair"}, "path": "docs/reference/modules/indices/query_cache.asciidoc", "diffHunk": "@@ -1,27 +1,35 @@\n [[query-cache]]\n === Node Query Cache\n \n-The query cache is responsible for caching the results of queries.\n-There is one queries cache per node that is shared by all shards.\n-The cache implements an LRU eviction policy: when a cache becomes full, the\n-least recently used data is evicted to make way for new data.\n-It is not possible to look at the contents being cached.\n+The query cache is responsible for caching the results of queries. There is one \n+queries cache per node that is shared by all shards. The cache implements an LRU \n+eviction policy: when a cache becomes full, the least recently used data is \n+evicted to make way for new data. It is not possible to look at the contents \n+being cached.\n \n-The query cache only caches queries which are being used in a filter context.\n+The query cache only caches queries which are being used in a filter context. \n+However, term queries are not eligible for caching, not even in the filter \n+context.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTA5NzQxOnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/indices/query_cache.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDozMjoxOVrOFfIcrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDozMjoxOVrOFfIcrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4ODU5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It caches up to 10000 queries in up to 10% of the total heap space by default. \n          \n          \n            \n            By default, the cache holds a maximum of 10000 queries in up to 10% of the total heap space.", "url": "https://github.com/elastic/elasticsearch/pull/51105#discussion_r368188590", "createdAt": "2020-01-18T00:32:19Z", "author": {"login": "debadair"}, "path": "docs/reference/modules/indices/query_cache.asciidoc", "diffHunk": "@@ -1,27 +1,35 @@\n [[query-cache]]\n === Node Query Cache\n \n-The query cache is responsible for caching the results of queries.\n-There is one queries cache per node that is shared by all shards.\n-The cache implements an LRU eviction policy: when a cache becomes full, the\n-least recently used data is evicted to make way for new data.\n-It is not possible to look at the contents being cached.\n+The query cache is responsible for caching the results of queries. There is one \n+queries cache per node that is shared by all shards. The cache implements an LRU \n+eviction policy: when a cache becomes full, the least recently used data is \n+evicted to make way for new data. It is not possible to look at the contents \n+being cached.\n \n-The query cache only caches queries which are being used in a filter context.\n+The query cache only caches queries which are being used in a filter context. \n+However, term queries are not eligible for caching, not even in the filter \n+context.\n+\n+It caches up to 10000 queries in up to 10% of the total heap space by default. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTA5OTQ0OnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/indices/query_cache.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDozNDoxMVrOFfId6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDozNDoxMVrOFfId6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4ODkwNQ==", "bodyText": "I'd probably switch this to the active voice:\nTo determine if a query is eligible for caching, Elasticsearch maintains a query history to track occurrences.", "url": "https://github.com/elastic/elasticsearch/pull/51105#discussion_r368188905", "createdAt": "2020-01-18T00:34:11Z", "author": {"login": "debadair"}, "path": "docs/reference/modules/indices/query_cache.asciidoc", "diffHunk": "@@ -1,27 +1,35 @@\n [[query-cache]]\n === Node Query Cache\n \n-The query cache is responsible for caching the results of queries.\n-There is one queries cache per node that is shared by all shards.\n-The cache implements an LRU eviction policy: when a cache becomes full, the\n-least recently used data is evicted to make way for new data.\n-It is not possible to look at the contents being cached.\n+The query cache is responsible for caching the results of queries. There is one \n+queries cache per node that is shared by all shards. The cache implements an LRU \n+eviction policy: when a cache becomes full, the least recently used data is \n+evicted to make way for new data. It is not possible to look at the contents \n+being cached.\n \n-The query cache only caches queries which are being used in a filter context.\n+The query cache only caches queries which are being used in a filter context. \n+However, term queries are not eligible for caching, not even in the filter \n+context.\n+\n+It caches up to 10000 queries in up to 10% of the total heap space by default. \n+To determine if a query is eligible for caching, a history of queries is \n+maintained to track occurrences.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTEwMDk5OnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/indices/query_cache.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDozNjowOVrOFfIe5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDozNjowOVrOFfIe5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4OTE1Nw==", "bodyText": "Maybe:\nBecause caching is per segment, merging segments can invalidate cached queries.", "url": "https://github.com/elastic/elasticsearch/pull/51105#discussion_r368189157", "createdAt": "2020-01-18T00:36:09Z", "author": {"login": "debadair"}, "path": "docs/reference/modules/indices/query_cache.asciidoc", "diffHunk": "@@ -1,27 +1,35 @@\n [[query-cache]]\n === Node Query Cache\n \n-The query cache is responsible for caching the results of queries.\n-There is one queries cache per node that is shared by all shards.\n-The cache implements an LRU eviction policy: when a cache becomes full, the\n-least recently used data is evicted to make way for new data.\n-It is not possible to look at the contents being cached.\n+The query cache is responsible for caching the results of queries. There is one \n+queries cache per node that is shared by all shards. The cache implements an LRU \n+eviction policy: when a cache becomes full, the least recently used data is \n+evicted to make way for new data. It is not possible to look at the contents \n+being cached.\n \n-The query cache only caches queries which are being used in a filter context.\n+The query cache only caches queries which are being used in a filter context. \n+However, term queries are not eligible for caching, not even in the filter \n+context.\n+\n+It caches up to 10000 queries in up to 10% of the total heap space by default. \n+To determine if a query is eligible for caching, a history of queries is \n+maintained to track occurrences.\n+\n+Caching is done on a per segment basis if a segment contains at least 10000 \n+documents and the segment has at least 3% of the total documents of a shard. Due \n+to the per segment basis, segment merging can invalidate a cached query.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac0204e94f9f5f1365d3bfe7d97a46bcb74eae6a"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4484, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}