{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMDEzNjQ5", "number": 57981, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMToyNzoyN1rOEEpNIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTozNjozN1rOEEpWGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzA0ODY3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMToyNzoyN1rOGiZMJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMToyNzoyN1rOGiZMJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxNzQ3OA==", "bodyText": "This test is now failing - @iverase could you take a look?", "url": "https://github.com/elastic/elasticsearch/pull/57981#discussion_r438717478", "createdAt": "2020-06-11T11:27:27Z", "author": {"login": "romseygeek"}, "path": "server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java", "diffHunk": "@@ -774,14 +776,16 @@ public void testIndexHasNoDuplicateData() throws IOException {\n                 LongPoint.encodeDimension(value, longBytes, 0);\n                 w.add(longBytes, docId);\n             }\n-            long indexFP;\n-            try (IndexOutput out = dir.createOutput(\"bkd\", IOContext.DEFAULT)) {\n-                indexFP = w.finish(out);\n+            try (IndexOutput metaout = dir.createOutput(\"bkdmeta\", IOContext.DEFAULT);\n+                 IndexOutput indexout = dir.createOutput(\"bkdindex\", IOContext.DEFAULT);\n+                 IndexOutput dataout = dir.createOutput(\"bkddata\", IOContext.DEFAULT)) {\n+                w.finish(metaout, indexout, dataout).run();\n             }\n-            try (IndexInput in = dir.openInput(\"bkd\", IOContext.DEFAULT)) {\n-                in.seek(indexFP);\n-                BKDReader r = new BKDReader(in);\n-                assertFalse(pointsHaveDuplicateData(r, r.getDocCount()/2));\n+            try (IndexInput metain = dir.openInput(\"bkdmeta\", IOContext.DEFAULT);\n+                 IndexInput indexin = dir.openInput(\"bkdindex\", IOContext.DEFAULT);\n+                 IndexInput datain = dir.openInput(\"bkddata\", IOContext.DEFAULT)) {\n+                BKDReader r = new BKDReader(metain, indexin, datain);\n+                assertTrue(pointsHaveDuplicateData(r, r.getDocCount() / 2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab6bd1e6cfe8bc799109367d7a45efdce7db8325"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzA3MTYyOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTozNjozN1rOGiZa7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo0NToyNFrOGiZqLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyMTI2Mg==", "bodyText": "You need to change the finish method to something like:\nRunnable finalizer = writer.finish(metaOut, indexOut, dataOut);\n      if (finalizer != null) {\n        metaout.writeInt(fieldInfo.number);\n        finalizer.run();\n      }", "url": "https://github.com/elastic/elasticsearch/pull/57981#discussion_r438721262", "createdAt": "2020-06-11T11:36:37Z", "author": {"login": "iverase"}, "path": "server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java", "diffHunk": "@@ -748,14 +748,16 @@ public void testIndexHasDuplicateData() throws IOException {\n                 LongPoint.encodeDimension(value, longBytes, 0);\n                 w.add(longBytes, docId);\n             }\n-            long indexFP;\n-            try (IndexOutput out = dir.createOutput(\"bkd\", IOContext.DEFAULT)) {\n-                indexFP = w.finish(out);\n+            try (IndexOutput metaout = dir.createOutput(\"bkdmeta\", IOContext.DEFAULT);\n+                 IndexOutput indexout = dir.createOutput(\"bkdindex\", IOContext.DEFAULT);\n+                 IndexOutput dataout = dir.createOutput(\"bkddata\", IOContext.DEFAULT)) {\n+                w.finish(metaout, indexout, dataout).run();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab6bd1e6cfe8bc799109367d7a45efdce7db8325"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyNTE2Nw==", "bodyText": "Or even better like this:\n        Runnable finalizer = w.finish(metaout, indexout, dataout);\n        long indexFP = metaout.getFilePointer();\n        finalizer.run();\n\nThen when you call the reader you need to make sure retain is in the right position:\nmetain.seek(indexFP);", "url": "https://github.com/elastic/elasticsearch/pull/57981#discussion_r438725167", "createdAt": "2020-06-11T11:45:24Z", "author": {"login": "iverase"}, "path": "server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java", "diffHunk": "@@ -748,14 +748,16 @@ public void testIndexHasDuplicateData() throws IOException {\n                 LongPoint.encodeDimension(value, longBytes, 0);\n                 w.add(longBytes, docId);\n             }\n-            long indexFP;\n-            try (IndexOutput out = dir.createOutput(\"bkd\", IOContext.DEFAULT)) {\n-                indexFP = w.finish(out);\n+            try (IndexOutput metaout = dir.createOutput(\"bkdmeta\", IOContext.DEFAULT);\n+                 IndexOutput indexout = dir.createOutput(\"bkdindex\", IOContext.DEFAULT);\n+                 IndexOutput dataout = dir.createOutput(\"bkddata\", IOContext.DEFAULT)) {\n+                w.finish(metaout, indexout, dataout).run();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyMTI2Mg=="}, "originalCommit": {"oid": "ab6bd1e6cfe8bc799109367d7a45efdce7db8325"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1710, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}