{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MzIyNDI4", "number": 63415, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMTo1NDo1N1rOErXw0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzo0OTo1NlrOErfSgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTEzNTUzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/test/resources/sequences.series-spec", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMTo1NDo1N1rOHeG47g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMTo1NDo1N1rOHeG47g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMzMjIwNg==", "bodyText": "@astefan Here's the description on why X99 is needed.\nIt is not needed for the bug fix itself however since the algorithm now makes multiple calls and does extra filtering, the way the test is currently setup the data for each query is returned at once in the first go and then nothing else.\nThus specs that have more items at the tail miss those and thus fail to do matching and thus fail.\nX99 is essentially a late marker to force a large window and thus get all values inside for matching.\nNote the spec is about testing the way matching works, not pagination or filtering so having all the data at once or not is a separate detail.", "url": "https://github.com/elastic/elasticsearch/pull/63415#discussion_r501332206", "createdAt": "2020-10-07T21:54:57Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/test/resources/sequences.series-spec", "diffHunk": "@@ -10,17 +10,19 @@\n // the number following the string is used as a timestamp/order\n // while the optional prefix followed by | indicates the key\n \n-// since the spec checks the way matching is done\n-// which is based on the runtime component that can make multiple requests\n-// use X99 as an token to force results from other lines to be read in\n+// since the spec checks only the way matching is done it returns\n+// all the results in the first call and then an empty list.\n+// Since the runtime component can make multiple requests and thus discard\n+// returned data, use X99 as an token to force results from other lines\n+// to be read in (as it makes a larger window for the runtime)\n \n // For example\n // A1 A2\n //       B3\n // fails because B3 should not be read in its first call as it goes beyond A1/A2 window.\n // however the testing infrastructure doesn't know this so it returns the item\n-// which is then discarded.\n-// To avoid the runtime filtering leaking in, adding an extra token at the end forces\n+// which is then discarded. On the next call, empty results are returned.\n+// To avoid the runtime behavior leaking in, adding an extra token at the end forces\n // the runtime window to be expanded and thus for all results to be properly read:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7f8af6e6fc420dd63a5d236d646cd3d73662254"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDM2ODY3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/TumblingWindow.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzo0OTo1NlrOHeSErg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzo0OTo1NlrOHeSErg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxNTQzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // however check if the window has been fully consumed consumed\n          \n          \n            \n                        // however check if the window has been fully consumed", "url": "https://github.com/elastic/elasticsearch/pull/63415#discussion_r501515438", "createdAt": "2020-10-08T07:49:56Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/TumblingWindow.java", "diffHunk": "@@ -245,7 +264,8 @@ private void secondaryCriterion(WindowInfo window, int currentStage, ActionListe\n             }\n \n             // keep running the query runs out of the results (essentially returns less than what we want)\n-            if (hits.size() == windowSize) {\n+            // however check if the window has been fully consumed consumed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7f8af6e6fc420dd63a5d236d646cd3d73662254"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3008, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}