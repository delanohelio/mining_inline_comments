{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NDYzOTQ3", "number": 51189, "title": "Use Lucene index in peer recovery and resync", "bodyText": "We can use Lucene index exclusively in peer recoveries and primary-replica resync in 8.0.\nRelates #50775", "createdAt": "2020-01-18T20:48:19Z", "url": "https://github.com/elastic/elasticsearch/pull/51189", "merged": true, "mergeCommit": {"oid": "6e2f7b4b0842654ea9db8837a935947a6da49aa4"}, "closed": true, "closedAt": "2020-01-20T22:06:12Z", "author": {"login": "dnhatn"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7poEWAH2gAyMzY0NDYzOTQ3OjEwNmIwZDc3ODllMTUwYmRhODA3NzEwNWU3NTEwMzM0NTNjNTRiMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8S54hAH2gAyMzY0NDYzOTQ3OjZkNTBjZjU5YWY1OTdhY2FhYjQ0NzE2ODkwZDBjMDk1YWJhODZmMDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "106b0d7789e150bda8077105e751033453c54b16", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/106b0d7789e150bda8077105e751033453c54b16", "committedDate": "2020-01-18T20:46:20Z", "message": "Use Lucene index in peer recovery and resync"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MTI0MTMz", "url": "https://github.com/elastic/elasticsearch/pull/51189#pullrequestreview-345124133", "createdAt": "2020-01-20T07:51:05Z", "commit": {"oid": "106b0d7789e150bda8077105e751033453c54b16"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNzo1MTowNlrOFfVrNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNzo1NTozNVrOFfVwbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQwNTMwMw==", "bodyText": "readHistoryOperations used Math.max(0, startingSeqNo) as from. I wonder if we need to guard against SequenceNumbers.UNASSIGNED_SEQ_NO similarly here.", "url": "https://github.com/elastic/elasticsearch/pull/51189#discussion_r368405303", "createdAt": "2020-01-20T07:51:06Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/index/shard/PrimaryReplicaSyncer.java", "diffHunk": "@@ -91,9 +90,7 @@ public void resync(final IndexShard indexShard, final ActionListener<ResyncTask>\n             // Wrap translog snapshot to make it synchronized as it is accessed by different threads through SnapshotSender.\n             // Even though those calls are not concurrent, snapshot.next() uses non-synchronized state and is not multi-thread-compatible\n             // Also fail the resync early if the shard is shutting down\n-            snapshot = indexShard.getHistoryOperations(\"resync\",\n-                indexShard.indexSettings.isSoftDeleteEnabled() ? Engine.HistorySource.INDEX : Engine.HistorySource.TRANSLOG,\n-                startingSeqNo);\n+            snapshot = indexShard.newChangesSnapshot(\"resync\", startingSeqNo, Long.MAX_VALUE, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106b0d7789e150bda8077105e751033453c54b16"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQwNjYzOQ==", "bodyText": "can startingSeqNo be `UNASSIGNED_SEQ_NO here?", "url": "https://github.com/elastic/elasticsearch/pull/51189#discussion_r368406639", "createdAt": "2020-01-20T07:55:35Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java", "diffHunk": "@@ -296,9 +286,8 @@ public void recoverToTarget(ActionListener<RecoveryResponse> listener) {\n                     shardId + \" initiating tracking of \" + request.targetAllocationId(), shard, cancellableThreads, logger);\n \n                 final long endingSeqNo = shard.seqNoStats().getMaxSeqNo();\n-                logger.trace(\"snapshot translog for recovery; current size is [{}]\",\n-                    shard.estimateNumberOfHistoryOperations(\"peer-recovery\", historySource, startingSeqNo));\n-                final Translog.Snapshot phase2Snapshot = shard.getHistoryOperations(\"peer-recovery\", historySource, startingSeqNo);\n+                logger.trace(\"snapshot for recovery; current size is [{}]\", estimateNumberOfHistoryOperations(startingSeqNo));\n+                final Translog.Snapshot phase2Snapshot = shard.newChangesSnapshot(\"peer-recovery\", startingSeqNo, Long.MAX_VALUE, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "106b0d7789e150bda8077105e751033453c54b16"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea8da99f2577a470471f6c2dfc94cb9ccb46b72d", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/ea8da99f2577a470471f6c2dfc94cb9ccb46b72d", "committedDate": "2020-01-20T15:43:45Z", "message": "assert startingSeqNo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a3766ba47c67a4f73086e894ea1cc4de9576578", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/0a3766ba47c67a4f73086e894ea1cc4de9576578", "committedDate": "2020-01-20T15:43:50Z", "message": "Merge branch 'master' into use-soft-deletes-recovery"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1Mzk2MTI3", "url": "https://github.com/elastic/elasticsearch/pull/51189#pullrequestreview-345396127", "createdAt": "2020-01-20T15:47:49Z", "commit": {"oid": "0a3766ba47c67a4f73086e894ea1cc4de9576578"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bf3de261d1ee63840de01d40446435ccafb2e9e", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/7bf3de261d1ee63840de01d40446435ccafb2e9e", "committedDate": "2020-01-20T15:55:51Z", "message": "Merge branch 'master' into use-soft-deletes-recovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dba2d64604e35617d4d54b8ce574c27470b1d7fc", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/dba2d64604e35617d4d54b8ce574c27470b1d7fc", "committedDate": "2020-01-20T16:13:47Z", "message": "remove unsed imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d50cf59af597acaab44716890d0c095aba86f07", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/6d50cf59af597acaab44716890d0c095aba86f07", "committedDate": "2020-01-20T20:51:54Z", "message": "Remove outdated test\n\nEvery operation in Lucene must have seqId"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3012, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}