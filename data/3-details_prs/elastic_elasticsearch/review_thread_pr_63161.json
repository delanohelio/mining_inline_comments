{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NzY0MDYz", "number": 63161, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDowMjo0MVrOEpwniw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDowMjo0MVrOEpwniw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjIzNjI3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/search/PITAwareQueryClient.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDowMjo0MVrOHboFMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDozNjozNVrOHbo_DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMDI4OA==", "bodyText": "I think IndexFieldMapper can't yet query against data streams. So if a data stream is provided as indices then that will correct always yield no results.\nI think the SearchIndexNameMatcher class needs to be modified in order to take into account data streams. The\nmatchesIndex() method should invoke the overloaded version of concreteIndexNames() method that accepts includeDataStreams parameter and provide true.", "url": "https://github.com/elastic/elasticsearch/pull/63161#discussion_r498730288", "createdAt": "2020-10-02T10:02:41Z", "author": {"login": "martijnvg"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/search/PITAwareQueryClient.java", "diffHunk": "@@ -91,6 +97,23 @@ private void searchWithPIT(MultiSearchRequest search, ActionListener<MultiSearch\n         }, listener));\n     }\n \n+    private void makeRequestPITCompatible(SearchRequest request) {\n+        SearchSourceBuilder source = request.source();\n+        // don't increase the keep alive\n+        source.pointInTimeBuilder(new PointInTimeBuilder(pitId));\n+        // move the indices from the search request to a index filter - see #63132\n+        String[] indices = request.indices();\n+        if (CollectionUtils.isEmpty(indices) == false) {\n+            request.indices(Strings.EMPTY_ARRAY);\n+            BoolQueryBuilder indexFilter = boolQuery().filter(termsQuery(GetResult._INDEX, indices));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9040ff4b3669d95a523bad7c21d08b6efcee95a3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczNzUzOA==", "bodyText": "Should I fix that in a separate change? I think a dedicated test for this should exists as well.", "url": "https://github.com/elastic/elasticsearch/pull/63161#discussion_r498737538", "createdAt": "2020-10-02T10:19:12Z", "author": {"login": "martijnvg"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/search/PITAwareQueryClient.java", "diffHunk": "@@ -91,6 +97,23 @@ private void searchWithPIT(MultiSearchRequest search, ActionListener<MultiSearch\n         }, listener));\n     }\n \n+    private void makeRequestPITCompatible(SearchRequest request) {\n+        SearchSourceBuilder source = request.source();\n+        // don't increase the keep alive\n+        source.pointInTimeBuilder(new PointInTimeBuilder(pitId));\n+        // move the indices from the search request to a index filter - see #63132\n+        String[] indices = request.indices();\n+        if (CollectionUtils.isEmpty(indices) == false) {\n+            request.indices(Strings.EMPTY_ARRAY);\n+            BoolQueryBuilder indexFilter = boolQuery().filter(termsQuery(GetResult._INDEX, indices));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMDI4OA=="}, "originalCommit": {"oid": "9040ff4b3669d95a523bad7c21d08b6efcee95a3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczOTQ4Nw==", "bodyText": "+1", "url": "https://github.com/elastic/elasticsearch/pull/63161#discussion_r498739487", "createdAt": "2020-10-02T10:23:26Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/search/PITAwareQueryClient.java", "diffHunk": "@@ -91,6 +97,23 @@ private void searchWithPIT(MultiSearchRequest search, ActionListener<MultiSearch\n         }, listener));\n     }\n \n+    private void makeRequestPITCompatible(SearchRequest request) {\n+        SearchSourceBuilder source = request.source();\n+        // don't increase the keep alive\n+        source.pointInTimeBuilder(new PointInTimeBuilder(pitId));\n+        // move the indices from the search request to a index filter - see #63132\n+        String[] indices = request.indices();\n+        if (CollectionUtils.isEmpty(indices) == false) {\n+            request.indices(Strings.EMPTY_ARRAY);\n+            BoolQueryBuilder indexFilter = boolQuery().filter(termsQuery(GetResult._INDEX, indices));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMDI4OA=="}, "originalCommit": {"oid": "9040ff4b3669d95a523bad7c21d08b6efcee95a3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczOTU5Nw==", "bodyText": "Thanks for looking @martijnvg", "url": "https://github.com/elastic/elasticsearch/pull/63161#discussion_r498739597", "createdAt": "2020-10-02T10:23:39Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/search/PITAwareQueryClient.java", "diffHunk": "@@ -91,6 +97,23 @@ private void searchWithPIT(MultiSearchRequest search, ActionListener<MultiSearch\n         }, listener));\n     }\n \n+    private void makeRequestPITCompatible(SearchRequest request) {\n+        SearchSourceBuilder source = request.source();\n+        // don't increase the keep alive\n+        source.pointInTimeBuilder(new PointInTimeBuilder(pitId));\n+        // move the indices from the search request to a index filter - see #63132\n+        String[] indices = request.indices();\n+        if (CollectionUtils.isEmpty(indices) == false) {\n+            request.indices(Strings.EMPTY_ARRAY);\n+            BoolQueryBuilder indexFilter = boolQuery().filter(termsQuery(GetResult._INDEX, indices));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMDI4OA=="}, "originalCommit": {"oid": "9040ff4b3669d95a523bad7c21d08b6efcee95a3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0NTEwMQ==", "bodyText": "I've opened: #63170", "url": "https://github.com/elastic/elasticsearch/pull/63161#discussion_r498745101", "createdAt": "2020-10-02T10:36:35Z", "author": {"login": "martijnvg"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/search/PITAwareQueryClient.java", "diffHunk": "@@ -91,6 +97,23 @@ private void searchWithPIT(MultiSearchRequest search, ActionListener<MultiSearch\n         }, listener));\n     }\n \n+    private void makeRequestPITCompatible(SearchRequest request) {\n+        SearchSourceBuilder source = request.source();\n+        // don't increase the keep alive\n+        source.pointInTimeBuilder(new PointInTimeBuilder(pitId));\n+        // move the indices from the search request to a index filter - see #63132\n+        String[] indices = request.indices();\n+        if (CollectionUtils.isEmpty(indices) == false) {\n+            request.indices(Strings.EMPTY_ARRAY);\n+            BoolQueryBuilder indexFilter = boolQuery().filter(termsQuery(GetResult._INDEX, indices));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMDI4OA=="}, "originalCommit": {"oid": "9040ff4b3669d95a523bad7c21d08b6efcee95a3"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3221, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}