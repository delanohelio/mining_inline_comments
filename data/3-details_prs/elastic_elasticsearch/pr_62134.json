{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMjk5ODQy", "number": 62134, "title": "EQL: Remove unused classes from reponse API", "bodyText": "Remove Count class and related artifacts since that functionality is not\n(yet) available.\nUpdate parser name for better error reporting.\nFix #62131", "createdAt": "2020-09-08T21:13:00Z", "url": "https://github.com/elastic/elasticsearch/pull/62134", "merged": true, "mergeCommit": {"oid": "060f500346788c4c5d0b3b9c045facec5d677d3d"}, "closed": true, "closedAt": "2020-09-30T12:02:39Z", "author": {"login": "costin"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG-NkdgH2gAyNDgyMjk5ODQyOmI2YTU1MzJlZjRhMzhmN2FhYjQ0ZmVhZTQ1NDI3ZWZlODY2NmMwNTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdN6wWEgH2gAyNDgyMjk5ODQyOjc0ODViODI5ZTRkMmUwMjgzMjc4OTllOTRlNDEzMWU1OGFmMzIzOTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b6a5532ef4a38f7aab44feae45427efe8666c058", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/b6a5532ef4a38f7aab44feae45427efe8666c058", "committedDate": "2020-09-08T21:09:43Z", "message": "EQL: Remove unused classes from reponse API\n\nRemove Count class and related artifacts since that functionality is not\n(yet) available.\nUpdate parser name for better error reporting.\n\nFix #62131"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NDk3MzY0", "url": "https://github.com/elastic/elasticsearch/pull/62134#pullrequestreview-484497364", "createdAt": "2020-09-08T21:13:59Z", "commit": {"oid": "b6a5532ef4a38f7aab44feae45427efe8666c058"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMToxMzo1OVrOHOuOxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMToxMzo1OVrOHOuOxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE5OTU1Ng==", "bodyText": "The name here looks like a mistake (left-over from count I presume) so I've changed it to hits instead to preserve the current naming conventions.", "url": "https://github.com/elastic/elasticsearch/pull/62134#discussion_r485199556", "createdAt": "2020-09-08T21:13:59Z", "author": {"login": "costin"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/eql/EqlSearchResponse.java", "diffHunk": "@@ -292,123 +292,41 @@ public boolean equals(Object o) {\n         }\n     }\n \n-    // Count\n-    public static class Count {\n-        private static final class Fields {\n-            static final String COUNT = \"_count\";\n-            static final String KEYS = \"_keys\";\n-            static final String PERCENT = \"_percent\";\n-        }\n-\n-        private final int count;\n-        private final List<Object> keys;\n-        private final float percent;\n-\n-        private static final ParseField COUNT = new ParseField(Fields.COUNT);\n-        private static final ParseField KEYS = new ParseField(Fields.KEYS);\n-        private static final ParseField PERCENT = new ParseField(Fields.PERCENT);\n-\n-        private static final ConstructingObjectParser<EqlSearchResponse.Count, Void> PARSER =\n-            new ConstructingObjectParser<>(\"eql/search_response_count\", true,\n-                args -> {\n-                    int i = 0;\n-                    int count = (int) args[i++];\n-                    @SuppressWarnings(\"unchecked\") List<Object> joinKeys = (List<Object>) args[i++];\n-                    float percent = (float) args[i];\n-                    return new EqlSearchResponse.Count(count, joinKeys, percent);\n-                });\n-\n-        static {\n-            PARSER.declareInt(ConstructingObjectParser.constructorArg(), COUNT);\n-            PARSER.declareFieldArray(constructorArg(), (p, c) -> XContentParserUtils.parseFieldsValue(p), KEYS,\n-                ObjectParser.ValueType.VALUE_ARRAY);\n-            PARSER.declareFloat(ConstructingObjectParser.constructorArg(), PERCENT);\n-        }\n-\n-        public Count(int count, List<Object> keys, float percent) {\n-            this.count = count;\n-            this.keys = keys == null ? Collections.emptyList() : keys;\n-            this.percent = percent;\n-        }\n-\n-        public static Count fromXContent(XContentParser parser) {\n-            return PARSER.apply(parser, null);\n-        }\n-\n-        public int count() {\n-            return count;\n-        }\n-\n-        public List<Object> keys() {\n-            return keys;\n-        }\n-\n-        public float percent() {\n-            return percent;\n-        }\n-\n-        @Override\n-        public int hashCode() {\n-            return Objects.hash(count, keys, percent);\n-        }\n-\n-        @Override\n-        public boolean equals(Object o) {\n-            if (this == o) {\n-                return true;\n-            }\n-            if (o == null || getClass() != o.getClass()) {\n-                return false;\n-            }\n-            Count that = (Count) o;\n-            return Objects.equals(count, that.count)\n-                && Objects.equals(keys, that.keys)\n-                && Objects.equals(percent, that.percent);\n-        }\n-    }\n-\n     // Hits\n     public static class Hits {\n-        public static final Hits EMPTY = new Hits(null, null, null, null);\n+        public static final Hits EMPTY = new Hits(null, null, null);\n \n         private final List<Event> events;\n         private final List<Sequence> sequences;\n-        private final List<Count> counts;\n         private final TotalHits totalHits;\n \n         private static final class Fields {\n             static final String TOTAL = \"total\";\n             static final String EVENTS = \"events\";\n             static final String SEQUENCES = \"sequences\";\n-            static final String COUNTS = \"counts\";\n         }\n \n-        public Hits(@Nullable List<Event> events, @Nullable List<Sequence> sequences, @Nullable List<Count> counts,\n-                    @Nullable TotalHits totalHits) {\n+        public Hits(@Nullable List<Event> events, @Nullable List<Sequence> sequences, @Nullable TotalHits totalHits) {\n             this.events = events;\n             this.sequences = sequences;\n-            this.counts = counts;\n             this.totalHits = totalHits;\n         }\n \n         private static final ConstructingObjectParser<EqlSearchResponse.Hits, Void> PARSER =\n-            new ConstructingObjectParser<>(\"eql/search_response_count\", true,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6a5532ef4a38f7aab44feae45427efe8666c058"}, "originalPosition": 138}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NDk3ODE2", "url": "https://github.com/elastic/elasticsearch/pull/62134#pullrequestreview-484497816", "createdAt": "2020-09-08T21:14:46Z", "commit": {"oid": "b6a5532ef4a38f7aab44feae45427efe8666c058"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMToxNDo0NlrOHOuQPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMToxNDo0NlrOHOuQPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE5OTkzNQ==", "bodyText": "This file is just added in with small clean-up (removal of unused variables).", "url": "https://github.com/elastic/elasticsearch/pull/62134#discussion_r485199935", "createdAt": "2020-09-08T21:14:46Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/test/java/org/elasticsearch/xpack/eql/optimizer/OptimizerTests.java", "diffHunk": "@@ -69,7 +69,6 @@\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6a5532ef4a38f7aab44feae45427efe8666c058"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTEyODc5", "url": "https://github.com/elastic/elasticsearch/pull/62134#pullrequestreview-484512879", "createdAt": "2020-09-08T21:43:14Z", "commit": {"oid": "b6a5532ef4a38f7aab44feae45427efe8666c058"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMTo0MzoxNFrOHOvCGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMTo0MzoxNFrOHOvCGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxMjY5OA==", "bodyText": "This will break requests in mixed clusters, are we ok with that?", "url": "https://github.com/elastic/elasticsearch/pull/62134#discussion_r485212698", "createdAt": "2020-09-08T21:43:14Z", "author": {"login": "imotov"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/action/EqlSearchResponse.java", "diffHunk": "@@ -512,7 +409,6 @@ public Hits(StreamInput in) throws IOException {\n             }\n             events = in.readBoolean() ? in.readList(Event::new) : null;\n             sequences = in.readBoolean() ? in.readList(Sequence::new) : null;\n-            counts = in.readBoolean() ? in.readList(Count::new) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6a5532ef4a38f7aab44feae45427efe8666c058"}, "originalPosition": 133}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NjkwODUx", "url": "https://github.com/elastic/elasticsearch/pull/62134#pullrequestreview-484690851", "createdAt": "2020-09-09T06:18:21Z", "commit": {"oid": "b6a5532ef4a38f7aab44feae45427efe8666c058"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzYwNjcy", "url": "https://github.com/elastic/elasticsearch/pull/62134#pullrequestreview-484760672", "createdAt": "2020-09-09T08:08:16Z", "commit": {"oid": "b6a5532ef4a38f7aab44feae45427efe8666c058"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzYwODg3", "url": "https://github.com/elastic/elasticsearch/pull/62134#pullrequestreview-484760887", "createdAt": "2020-09-09T08:08:34Z", "commit": {"oid": "b6a5532ef4a38f7aab44feae45427efe8666c058"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e8792f3a7a80d8b6f7a1508a984c3c55a911090", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/6e8792f3a7a80d8b6f7a1508a984c3c55a911090", "committedDate": "2020-09-30T11:01:11Z", "message": "Merge remote-tracking branch 'remotes/upstream/master' into fix/62131"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7485b829e4d2e028327899e94e4131e58af32392", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/7485b829e4d2e028327899e94e4131e58af32392", "committedDate": "2020-09-30T11:05:33Z", "message": "Keep backwards compatibility"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4793, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}