{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwODY2ODM0", "number": 55956, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxODoxOTowNFrOD3vw4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTo0NjoxMFrOD4Aeeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzgwODMzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxODoxOTowNFrOGOLSqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDozMzozNFrOGOP6Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUxODI1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (plan instanceof Aggregate && !plan.resolved() && plan.childrenResolved()) {\n          \n          \n            \n                        if (plan instanceof Aggregate && plan.resolved() == false && plan.childrenResolved()) {\n          \n      \n    \n    \n  \n\ndespite my own prefs.", "url": "https://github.com/elastic/elasticsearch/pull/55956#discussion_r417518251", "createdAt": "2020-04-29T18:19:04Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java", "diffHunk": "@@ -722,7 +722,7 @@ protected LogicalPlan rule(LogicalPlan plan) {\n             }\n \n             // Try to resolve aggregates and groupings based on the child plan\n-            if (plan instanceof Aggregate) {\n+            if (plan instanceof Aggregate && !plan.resolved() && plan.childrenResolved()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaeeb130877ac4c3e77e5f21f2c12a395500dd92"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU5Mzk0Ng==", "bodyText": "Considering this condition applies for all ifs inside this rule, I would extract it to the top:\n        @Override\n        protected LogicalPlan rule(LogicalPlan plan) {\n            if (plan.resolved() || plan.childrenResolved() == false) {\n               return plan;\n            }\n            if (plan instanceof Filter) {...\n\nIn fact the check for children resolution is present I believe in all analyzer rules so it might make to create a subclass that all other rules extend to avoid having to repeat this bit of code which as we can see, introduces some subtle bugs.\nI'm fine with doing it in a follow-up PR to get this in (with the if moved to the top level).", "url": "https://github.com/elastic/elasticsearch/pull/55956#discussion_r417593946", "createdAt": "2020-04-29T20:33:34Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java", "diffHunk": "@@ -722,7 +722,7 @@ protected LogicalPlan rule(LogicalPlan plan) {\n             }\n \n             // Try to resolve aggregates and groupings based on the child plan\n-            if (plan instanceof Aggregate) {\n+            if (plan instanceof Aggregate && !plan.resolved() && plan.childrenResolved()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUxODI1MQ=="}, "originalCommit": {"oid": "aaeeb130877ac4c3e77e5f21f2c12a395500dd92"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDEwMTUwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOToyOTowN1rOGOhRVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOToyOTowN1rOGOhRVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg3ODM1Nw==", "bodyText": "I don't think this is needed anymore - see AnalyzeRule which takes care of skipping if the node is resolved and skipResolved is true (default).", "url": "https://github.com/elastic/elasticsearch/pull/55956#discussion_r417878357", "createdAt": "2020-04-30T09:29:07Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java", "diffHunk": "@@ -610,9 +600,12 @@ private AggGroupingFailure(List<String> expectedGrouping) {\n         }\n \n         @Override\n-        protected LogicalPlan rule(LogicalPlan plan) {\n+        protected LogicalPlan rulePlan(LogicalPlan plan) {\n+            if (plan.resolved()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab35be53500a06a14ce70e447a37c95077747ec"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDEwNTMzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTozMDowNlrOGOhTgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTo0MzozMlrOGOllVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg3ODkxMw==", "bodyText": "I'd pick a different name - maybe DefaultAnalyzeRule or BaseAnalyzeRule.", "url": "https://github.com/elastic/elasticsearch/pull/55956#discussion_r417878913", "createdAt": "2020-04-30T09:30:06Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java", "diffHunk": "@@ -1312,4 +1303,17 @@ protected boolean skipResolved() {\n             return true;\n         }\n     }\n+    \n+    abstract static class LogicalPlanAnalyzeRule extends AnalyzeRule<LogicalPlan> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab35be53500a06a14ce70e447a37c95077747ec"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0NzUyMA==", "bodyText": "I was struggling with the name, indeed. I didn't particularly like LogicalPlanAnalyzeRule, but didn't find any better alternatives.", "url": "https://github.com/elastic/elasticsearch/pull/55956#discussion_r417947520", "createdAt": "2020-04-30T11:40:22Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java", "diffHunk": "@@ -1312,4 +1303,17 @@ protected boolean skipResolved() {\n             return true;\n         }\n     }\n+    \n+    abstract static class LogicalPlanAnalyzeRule extends AnalyzeRule<LogicalPlan> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg3ODkxMw=="}, "originalCommit": {"oid": "cab35be53500a06a14ce70e447a37c95077747ec"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0OTAxMw==", "bodyText": "I like BaseAnalyzeRule.", "url": "https://github.com/elastic/elasticsearch/pull/55956#discussion_r417949013", "createdAt": "2020-04-30T11:43:32Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java", "diffHunk": "@@ -1312,4 +1303,17 @@ protected boolean skipResolved() {\n             return true;\n         }\n     }\n+    \n+    abstract static class LogicalPlanAnalyzeRule extends AnalyzeRule<LogicalPlan> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg3ODkxMw=="}, "originalCommit": {"oid": "cab35be53500a06a14ce70e447a37c95077747ec"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDExMDc2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTozMTozOVrOGOhW9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTozMTozOVrOGOhW9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg3OTc5OA==", "bodyText": "rulePlan is repetitive (the method only accepts LogicalPlans)  - how about doRule or analyze?", "url": "https://github.com/elastic/elasticsearch/pull/55956#discussion_r417879798", "createdAt": "2020-04-30T09:31:39Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java", "diffHunk": "@@ -1312,4 +1303,17 @@ protected boolean skipResolved() {\n             return true;\n         }\n     }\n+    \n+    abstract static class LogicalPlanAnalyzeRule extends AnalyzeRule<LogicalPlan> {\n+\n+        @Override\n+        protected LogicalPlan rule(LogicalPlan plan) {\n+            if (plan.childrenResolved() == false) {\n+                return plan;\n+            }\n+            return rulePlan(plan);\n+        }\n+\n+        protected abstract LogicalPlan rulePlan(LogicalPlan plan);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab35be53500a06a14ce70e447a37c95077747ec"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDU0NjUwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/qa/src/main/resources/subselect.sql-spec", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTo0NjoxMFrOGOlqWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTo0NjoxMFrOGOlqWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1MDI5Nw==", "bodyText": "Please add the following comment in case someone needs to mute a test in the future:\n// To mute tests follow example in file: example.sql-spec", "url": "https://github.com/elastic/elasticsearch/pull/55956#discussion_r417950297", "createdAt": "2020-04-30T11:46:10Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/qa/src/main/resources/subselect.sql-spec", "diffHunk": "@@ -0,0 +1,53 @@\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab35be53500a06a14ce70e447a37c95077747ec"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2538, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}