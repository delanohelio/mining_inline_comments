{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MTM1Nzg5", "number": 63894, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo0OTowMlrOEw1O_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MTo0NlrOEw1UIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjM5Mjk0OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo0OTowMlrOHmob3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzoxNDozOFrOHmr6kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MDQyOA==", "bodyText": "expand this.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510270428", "createdAt": "2020-10-22T15:49:02Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "diffHunk": "@@ -770,18 +772,22 @@ public void visitBinaryMath(BinaryMathNode irBinaryMathNode, WriteScope writeSco\n                 methodWriter.invokeVirtual(Type.getType(Matcher.class), WriterConstants.MATCHER_MATCHES);\n             } else {\n                 throw new IllegalStateException(\"unexpected binary math operation [\" + operation + \"] \" +\n-                        \"for type [\" + irBinaryMathNode.getExpressionCanonicalTypeName() + \"]\");\n+                        \"for type [\" + irBinaryMathNode.getDecoration(IRDExpressionType.class).getCanonicalTypeName() + \"]\");\n             }\n         } else {\n             visit(irLeftNode, writeScope);\n             visit(irRightNode, writeScope);\n \n             if (irBinaryMathNode.getBinaryType() == def.class ||\n                     (irBinaryMathNode.getShiftType() != null && irBinaryMathNode.getShiftType() == def.class)) {\n-                methodWriter.writeDynamicBinaryInstruction(irBinaryMathNode.getLocation(), irBinaryMathNode.getExpressionType(),\n-                        irLeftNode.getExpressionType(), irRightNode.getExpressionType(), operation, irBinaryMathNode.getFlags());\n+                methodWriter.writeDynamicBinaryInstruction(irBinaryMathNode.getLocation(),\n+                        irBinaryMathNode.getDecoration(IRDExpressionType.class).getType(),\n+                        irLeftNode.getDecoration(IRDExpressionType.class).getType(),\n+                        irRightNode.getDecoration(IRDExpressionType.class).getType(),\n+                        operation, irBinaryMathNode.getFlags());\n             } else {\n-                methodWriter.writeBinaryInstruction(irBinaryMathNode.getLocation(), irBinaryMathNode.getExpressionType(), operation);\n+                methodWriter.writeBinaryInstruction(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMyNzQ0Mw==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510327443", "createdAt": "2020-10-22T17:14:38Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "diffHunk": "@@ -770,18 +772,22 @@ public void visitBinaryMath(BinaryMathNode irBinaryMathNode, WriteScope writeSco\n                 methodWriter.invokeVirtual(Type.getType(Matcher.class), WriterConstants.MATCHER_MATCHES);\n             } else {\n                 throw new IllegalStateException(\"unexpected binary math operation [\" + operation + \"] \" +\n-                        \"for type [\" + irBinaryMathNode.getExpressionCanonicalTypeName() + \"]\");\n+                        \"for type [\" + irBinaryMathNode.getDecoration(IRDExpressionType.class).getCanonicalTypeName() + \"]\");\n             }\n         } else {\n             visit(irLeftNode, writeScope);\n             visit(irRightNode, writeScope);\n \n             if (irBinaryMathNode.getBinaryType() == def.class ||\n                     (irBinaryMathNode.getShiftType() != null && irBinaryMathNode.getShiftType() == def.class)) {\n-                methodWriter.writeDynamicBinaryInstruction(irBinaryMathNode.getLocation(), irBinaryMathNode.getExpressionType(),\n-                        irLeftNode.getExpressionType(), irRightNode.getExpressionType(), operation, irBinaryMathNode.getFlags());\n+                methodWriter.writeDynamicBinaryInstruction(irBinaryMathNode.getLocation(),\n+                        irBinaryMathNode.getDecoration(IRDExpressionType.class).getType(),\n+                        irLeftNode.getDecoration(IRDExpressionType.class).getType(),\n+                        irRightNode.getDecoration(IRDExpressionType.class).getType(),\n+                        operation, irBinaryMathNode.getFlags());\n             } else {\n-                methodWriter.writeBinaryInstruction(irBinaryMathNode.getLocation(), irBinaryMathNode.getExpressionType(), operation);\n+                methodWriter.writeBinaryInstruction(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MDQyOA=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjM5Njk3OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo0OTo1M1rOHmoehA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzoxNzoxOFrOHmsA-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTEwOA==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510271108", "createdAt": "2020-10-22T15:49:53Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "diffHunk": "@@ -990,15 +997,16 @@ public void visitInstanceof(InstanceofNode irInstanceofNode, WriteScope writeSco\n         visit(irChildNode, writeScope);\n \n         Class<?> instanceType = irInstanceofNode.getInstanceType();\n-        Class<?> expressionType = irInstanceofNode.getExpressionType();\n+        Class<?> expressionType = irInstanceofNode.getDecoration(IRDExpressionType.class).getType();\n \n         if (irInstanceofNode.getInstanceType() == def.class) {\n             methodWriter.writePop(MethodWriter.getType(expressionType).getSize());\n             methodWriter.push(true);\n-        } else if (irChildNode.getExpressionType().isPrimitive()) {\n+        } else if (irChildNode.getDecoration(IRDExpressionType.class).getType().isPrimitive()) {\n             methodWriter.writePop(MethodWriter.getType(expressionType).getSize());\n             Class<?> boxedInstanceType = PainlessLookupUtility.typeToBoxedType(instanceType);\n-            Class<?> boxedExpressionType = PainlessLookupUtility.typeToBoxedType(irChildNode.getExpressionType());\n+            Class<?> boxedExpressionType =\n+                    PainlessLookupUtility.typeToBoxedType(irChildNode.getDecoration(IRDExpressionType.class).getType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMyOTA4Mw==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510329083", "createdAt": "2020-10-22T17:17:18Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "diffHunk": "@@ -990,15 +997,16 @@ public void visitInstanceof(InstanceofNode irInstanceofNode, WriteScope writeSco\n         visit(irChildNode, writeScope);\n \n         Class<?> instanceType = irInstanceofNode.getInstanceType();\n-        Class<?> expressionType = irInstanceofNode.getExpressionType();\n+        Class<?> expressionType = irInstanceofNode.getDecoration(IRDExpressionType.class).getType();\n \n         if (irInstanceofNode.getInstanceType() == def.class) {\n             methodWriter.writePop(MethodWriter.getType(expressionType).getSize());\n             methodWriter.push(true);\n-        } else if (irChildNode.getExpressionType().isPrimitive()) {\n+        } else if (irChildNode.getDecoration(IRDExpressionType.class).getType().isPrimitive()) {\n             methodWriter.writePop(MethodWriter.getType(expressionType).getSize());\n             Class<?> boxedInstanceType = PainlessLookupUtility.typeToBoxedType(instanceType);\n-            Class<?> boxedExpressionType = PainlessLookupUtility.typeToBoxedType(irChildNode.getExpressionType());\n+            Class<?> boxedExpressionType =\n+                    PainlessLookupUtility.typeToBoxedType(irChildNode.getDecoration(IRDExpressionType.class).getType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTEwOA=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 186}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjM5NzY5OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MDowMVrOHmoe9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzoyNToyNFrOHmsUeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTIyMQ==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510271221", "createdAt": "2020-10-22T15:50:01Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "diffHunk": "@@ -1195,11 +1203,11 @@ public void visitTypeCaptureReference(TypedCaptureReferenceNode irTypedCaptureRe\n         Variable captured = writeScope.getVariable(irTypedCaptureReferenceNode.getCaptures().get(0));\n \n         methodWriter.visitVarInsn(captured.getAsmType().getOpcode(Opcodes.ILOAD), captured.getSlot());\n-        Type methodType = Type.getMethodType(\n-                MethodWriter.getType(irTypedCaptureReferenceNode.getExpressionType()),\n+        Type methodType = Type.getMethodType(MethodWriter.getType(\n+                irTypedCaptureReferenceNode.getDecoration(IRDExpressionType.class).getType()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 233}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMzNDA3NA==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510334074", "createdAt": "2020-10-22T17:25:24Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "diffHunk": "@@ -1195,11 +1203,11 @@ public void visitTypeCaptureReference(TypedCaptureReferenceNode irTypedCaptureRe\n         Variable captured = writeScope.getVariable(irTypedCaptureReferenceNode.getCaptures().get(0));\n \n         methodWriter.visitVarInsn(captured.getAsmType().getOpcode(Opcodes.ILOAD), captured.getSlot());\n-        Type methodType = Type.getMethodType(\n-                MethodWriter.getType(irTypedCaptureReferenceNode.getExpressionType()),\n+        Type methodType = Type.getMethodType(MethodWriter.getType(\n+                irTypedCaptureReferenceNode.getDecoration(IRDExpressionType.class).getType()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTIyMQ=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 233}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjM5ODIxOnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MDowOVrOHmofSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzoyNjoyN1rOHmsXDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTMwNw==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510271307", "createdAt": "2020-10-22T15:50:09Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "diffHunk": "@@ -1195,11 +1203,11 @@ public void visitTypeCaptureReference(TypedCaptureReferenceNode irTypedCaptureRe\n         Variable captured = writeScope.getVariable(irTypedCaptureReferenceNode.getCaptures().get(0));\n \n         methodWriter.visitVarInsn(captured.getAsmType().getOpcode(Opcodes.ILOAD), captured.getSlot());\n-        Type methodType = Type.getMethodType(\n-                MethodWriter.getType(irTypedCaptureReferenceNode.getExpressionType()),\n+        Type methodType = Type.getMethodType(MethodWriter.getType(\n+                irTypedCaptureReferenceNode.getDecoration(IRDExpressionType.class).getType()),\n                 captured.getAsmType());\n-        methodWriter.invokeDefCall(irTypedCaptureReferenceNode.getMethodName(),\n-                methodType, DefBootstrap.REFERENCE, irTypedCaptureReferenceNode.getExpressionCanonicalTypeName());\n+        methodWriter.invokeDefCall(irTypedCaptureReferenceNode.getMethodName(), methodType, DefBootstrap.REFERENCE,\n+                irTypedCaptureReferenceNode.getDecoration(IRDExpressionType.class).getCanonicalTypeName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 238}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMzNDczMw==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510334733", "createdAt": "2020-10-22T17:26:27Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultIRTreeToASMBytesPhase.java", "diffHunk": "@@ -1195,11 +1203,11 @@ public void visitTypeCaptureReference(TypedCaptureReferenceNode irTypedCaptureRe\n         Variable captured = writeScope.getVariable(irTypedCaptureReferenceNode.getCaptures().get(0));\n \n         methodWriter.visitVarInsn(captured.getAsmType().getOpcode(Opcodes.ILOAD), captured.getSlot());\n-        Type methodType = Type.getMethodType(\n-                MethodWriter.getType(irTypedCaptureReferenceNode.getExpressionType()),\n+        Type methodType = Type.getMethodType(MethodWriter.getType(\n+                irTypedCaptureReferenceNode.getDecoration(IRDExpressionType.class).getType()),\n                 captured.getAsmType());\n-        methodWriter.invokeDefCall(irTypedCaptureReferenceNode.getMethodName(),\n-                methodType, DefBootstrap.REFERENCE, irTypedCaptureReferenceNode.getExpressionCanonicalTypeName());\n+        methodWriter.invokeDefCall(irTypedCaptureReferenceNode.getMethodName(), methodType, DefBootstrap.REFERENCE,\n+                irTypedCaptureReferenceNode.getDecoration(IRDExpressionType.class).getCanonicalTypeName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTMwNw=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 238}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjM5OTc0OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MDoyNVrOHmogLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzozMjoyNlrOHmslWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTUzNQ==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510271535", "createdAt": "2020-10-22T15:50:25Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -973,14 +975,15 @@ public void visitBinary(EBinary userBinaryNode, ScriptScope scriptScope) {\n             irExpressionNode = irBinaryMathNode;\n         }\n \n-        irExpressionNode.setExpressionType(valueType);\n+        irExpressionNode.attachDecoration(new IRDExpressionType(valueType));\n         scriptScope.putDecoration(userBinaryNode, new IRNodeDecoration(irExpressionNode));\n     }\n \n     @Override\n     public void visitBooleanComp(EBooleanComp userBooleanCompNode, ScriptScope scriptScope) {\n         BooleanNode irBooleanNode = new BooleanNode(userBooleanCompNode.getLocation());\n-        irBooleanNode.setExpressionType(scriptScope.getDecoration(userBooleanCompNode, ValueType.class).getValueType());\n+        irBooleanNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userBooleanCompNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 261}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMzODM5NA==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510338394", "createdAt": "2020-10-22T17:32:26Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -973,14 +975,15 @@ public void visitBinary(EBinary userBinaryNode, ScriptScope scriptScope) {\n             irExpressionNode = irBinaryMathNode;\n         }\n \n-        irExpressionNode.setExpressionType(valueType);\n+        irExpressionNode.attachDecoration(new IRDExpressionType(valueType));\n         scriptScope.putDecoration(userBinaryNode, new IRNodeDecoration(irExpressionNode));\n     }\n \n     @Override\n     public void visitBooleanComp(EBooleanComp userBooleanCompNode, ScriptScope scriptScope) {\n         BooleanNode irBooleanNode = new BooleanNode(userBooleanCompNode.getLocation());\n-        irBooleanNode.setExpressionType(scriptScope.getDecoration(userBooleanCompNode, ValueType.class).getValueType());\n+        irBooleanNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userBooleanCompNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTUzNQ=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 261}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwMDgyOnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MDozOFrOHmog1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzozOToyMVrOHms2DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTcwMA==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510271700", "createdAt": "2020-10-22T15:50:38Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1008,7 +1011,8 @@ public void visitExplicit(EExplicit userExplicitNode, ScriptScope scriptScope) {\n     @Override\n     public void visitInstanceof(EInstanceof userInstanceofNode, ScriptScope scriptScope) {\n         InstanceofNode irInstanceofNode = new InstanceofNode(userInstanceofNode.getLocation());\n-        irInstanceofNode.setExpressionType(scriptScope.getDecoration(userInstanceofNode, ValueType.class).getValueType());\n+        irInstanceofNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userInstanceofNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 280}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0MjY2OA==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510342668", "createdAt": "2020-10-22T17:39:21Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1008,7 +1011,8 @@ public void visitExplicit(EExplicit userExplicitNode, ScriptScope scriptScope) {\n     @Override\n     public void visitInstanceof(EInstanceof userInstanceofNode, ScriptScope scriptScope) {\n         InstanceofNode irInstanceofNode = new InstanceofNode(userInstanceofNode.getLocation());\n-        irInstanceofNode.setExpressionType(scriptScope.getDecoration(userInstanceofNode, ValueType.class).getValueType());\n+        irInstanceofNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userInstanceofNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTcwMA=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 280}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwMTQ3OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MDo0N1rOHmohPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo0ODoyM1rOHmtLJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTgwNQ==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510271805", "createdAt": "2020-10-22T15:50:47Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1091,7 +1098,8 @@ public void visitNewArray(ENewArray userNewArrayNode, ScriptScope scriptScope) {\n     public void visitNewObj(ENewObj userNewObjectNode, ScriptScope scriptScope) {\n         NewObjectNode irNewObjectNode = new NewObjectNode(userNewObjectNode.getLocation());\n \n-        irNewObjectNode.setExpressionType(scriptScope.getDecoration(userNewObjectNode, ValueType.class).getValueType());\n+        irNewObjectNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userNewObjectNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 338}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0ODA3MA==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510348070", "createdAt": "2020-10-22T17:48:23Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1091,7 +1098,8 @@ public void visitNewArray(ENewArray userNewArrayNode, ScriptScope scriptScope) {\n     public void visitNewObj(ENewObj userNewObjectNode, ScriptScope scriptScope) {\n         NewObjectNode irNewObjectNode = new NewObjectNode(userNewObjectNode.getLocation());\n \n-        irNewObjectNode.setExpressionType(scriptScope.getDecoration(userNewObjectNode, ValueType.class).getValueType());\n+        irNewObjectNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userNewObjectNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTgwNQ=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 338}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwMTkwOnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MDo1M1rOHmohfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo0OToxM1rOHmtNNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTg2OQ==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510271869", "createdAt": "2020-10-22T15:50:53Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1151,15 +1159,17 @@ public void visitCallLocal(ECallLocal callLocalNode, ScriptScope scriptScope) {\n             irInvokeCallMemberNode.addArgumentNode(injectCast(userArgumentNode, scriptScope));\n         }\n \n-        irInvokeCallMemberNode.setExpressionType(scriptScope.getDecoration(callLocalNode, ValueType.class).getValueType());\n+        irInvokeCallMemberNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(callLocalNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 348}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0ODU5OQ==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510348599", "createdAt": "2020-10-22T17:49:13Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1151,15 +1159,17 @@ public void visitCallLocal(ECallLocal callLocalNode, ScriptScope scriptScope) {\n             irInvokeCallMemberNode.addArgumentNode(injectCast(userArgumentNode, scriptScope));\n         }\n \n-        irInvokeCallMemberNode.setExpressionType(scriptScope.getDecoration(callLocalNode, ValueType.class).getValueType());\n+        irInvokeCallMemberNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(callLocalNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTg2OQ=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 348}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwMjIwOnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MDo1N1rOHmohsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo1MjoxNVrOHmtUlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTkyMw==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510271923", "createdAt": "2020-10-22T15:50:57Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1151,15 +1159,17 @@ public void visitCallLocal(ECallLocal callLocalNode, ScriptScope scriptScope) {\n             irInvokeCallMemberNode.addArgumentNode(injectCast(userArgumentNode, scriptScope));\n         }\n \n-        irInvokeCallMemberNode.setExpressionType(scriptScope.getDecoration(callLocalNode, ValueType.class).getValueType());\n+        irInvokeCallMemberNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(callLocalNode, ValueType.class).getValueType()));\n \n         scriptScope.putDecoration(callLocalNode, new IRNodeDecoration(irInvokeCallMemberNode));\n     }\n \n     @Override\n     public void visitBooleanConstant(EBooleanConstant userBooleanConstantNode, ScriptScope scriptScope) {\n         ConstantNode irConstantNode = new ConstantNode(userBooleanConstantNode.getLocation());\n-        irConstantNode.setExpressionType(scriptScope.getDecoration(userBooleanConstantNode, ValueType.class).getValueType());\n+        irConstantNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userBooleanConstantNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 358}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1MDQ4NQ==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510350485", "createdAt": "2020-10-22T17:52:15Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1151,15 +1159,17 @@ public void visitCallLocal(ECallLocal callLocalNode, ScriptScope scriptScope) {\n             irInvokeCallMemberNode.addArgumentNode(injectCast(userArgumentNode, scriptScope));\n         }\n \n-        irInvokeCallMemberNode.setExpressionType(scriptScope.getDecoration(callLocalNode, ValueType.class).getValueType());\n+        irInvokeCallMemberNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(callLocalNode, ValueType.class).getValueType()));\n \n         scriptScope.putDecoration(callLocalNode, new IRNodeDecoration(irInvokeCallMemberNode));\n     }\n \n     @Override\n     public void visitBooleanConstant(EBooleanConstant userBooleanConstantNode, ScriptScope scriptScope) {\n         ConstantNode irConstantNode = new ConstantNode(userBooleanConstantNode.getLocation());\n-        irConstantNode.setExpressionType(scriptScope.getDecoration(userBooleanConstantNode, ValueType.class).getValueType());\n+        irConstantNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userBooleanConstantNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTkyMw=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 358}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwMjQ3OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MTowMlrOHmoh3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo1NDoyNlrOHmtZcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTk2NQ==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510271965", "createdAt": "2020-10-22T15:51:02Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1168,7 +1178,8 @@ public void visitBooleanConstant(EBooleanConstant userBooleanConstantNode, Scrip\n     @Override\n     public void visitNumeric(ENumeric userNumericNode, ScriptScope scriptScope) {\n         ConstantNode irConstantNode = new ConstantNode(userNumericNode.getLocation());\n-        irConstantNode.setExpressionType(scriptScope.getDecoration(userNumericNode, ValueType.class).getValueType());\n+        irConstantNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userNumericNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 368}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1MTcyOQ==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510351729", "createdAt": "2020-10-22T17:54:26Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1168,7 +1178,8 @@ public void visitBooleanConstant(EBooleanConstant userBooleanConstantNode, Scrip\n     @Override\n     public void visitNumeric(ENumeric userNumericNode, ScriptScope scriptScope) {\n         ConstantNode irConstantNode = new ConstantNode(userNumericNode.getLocation());\n-        irConstantNode.setExpressionType(scriptScope.getDecoration(userNumericNode, ValueType.class).getValueType());\n+        irConstantNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userNumericNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTk2NQ=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 368}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwMjg5OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MTowN1rOHmoiIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo1NDo1NVrOHmtahg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjAzNA==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510272034", "createdAt": "2020-10-22T15:51:07Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1177,7 +1188,8 @@ public void visitNumeric(ENumeric userNumericNode, ScriptScope scriptScope) {\n     @Override\n     public void visitDecimal(EDecimal userDecimalNode, ScriptScope scriptScope) {\n         ConstantNode irConstantNode = new ConstantNode(userDecimalNode.getLocation());\n-        irConstantNode.setExpressionType(scriptScope.getDecoration(userDecimalNode, ValueType.class).getValueType());\n+        irConstantNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userDecimalNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 378}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1MjAwNg==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510352006", "createdAt": "2020-10-22T17:54:55Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1177,7 +1188,8 @@ public void visitNumeric(ENumeric userNumericNode, ScriptScope scriptScope) {\n     @Override\n     public void visitDecimal(EDecimal userDecimalNode, ScriptScope scriptScope) {\n         ConstantNode irConstantNode = new ConstantNode(userDecimalNode.getLocation());\n-        irConstantNode.setExpressionType(scriptScope.getDecoration(userDecimalNode, ValueType.class).getValueType());\n+        irConstantNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userDecimalNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjAzNA=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 378}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwMzU0OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MToxNVrOHmoiiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo1ODo0NlrOHmtjhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjEzNw==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510272137", "createdAt": "2020-10-22T15:51:15Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1335,7 +1347,8 @@ public void visitFunctionRef(EFunctionRef userFunctionRefNode, ScriptScope scrip\n             irReferenceNode = typedInterfaceReferenceNode;\n         }\n \n-        irReferenceNode.setExpressionType(scriptScope.getDecoration(userFunctionRefNode, ValueType.class).getValueType());\n+        irReferenceNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userFunctionRefNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 470}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1NDMxMA==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510354310", "createdAt": "2020-10-22T17:58:46Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1335,7 +1347,8 @@ public void visitFunctionRef(EFunctionRef userFunctionRefNode, ScriptScope scrip\n             irReferenceNode = typedInterfaceReferenceNode;\n         }\n \n-        irReferenceNode.setExpressionType(scriptScope.getDecoration(userFunctionRefNode, ValueType.class).getValueType());\n+        irReferenceNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userFunctionRefNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjEzNw=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 470}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwMzgzOnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MToyMFrOHmoivg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo1OTo0NlrOHmtl4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjE5MA==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510272190", "createdAt": "2020-10-22T15:51:20Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1393,7 +1406,8 @@ public void visitNewArrayFunctionRef(ENewArrayFunctionRef userNewArrayFunctionRe\n \n         irClassNode.addFunctionNode(irFunctionNode);\n \n-        irReferenceNode.setExpressionType(scriptScope.getDecoration(userNewArrayFunctionRefNode, ValueType.class).getValueType());\n+        irReferenceNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userNewArrayFunctionRefNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 494}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1NDkxMw==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510354913", "createdAt": "2020-10-22T17:59:46Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1393,7 +1406,8 @@ public void visitNewArrayFunctionRef(ENewArrayFunctionRef userNewArrayFunctionRe\n \n         irClassNode.addFunctionNode(irFunctionNode);\n \n-        irReferenceNode.setExpressionType(scriptScope.getDecoration(userNewArrayFunctionRefNode, ValueType.class).getValueType());\n+        irReferenceNode.attachDecoration(\n+                new IRDExpressionType(scriptScope.getDecoration(userNewArrayFunctionRefNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjE5MA=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 494}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwNDY3OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MTozMVrOHmojQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODowMzo0MVrOHmtujg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjMyMA==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510272320", "createdAt": "2020-10-22T15:51:31Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1665,20 +1679,21 @@ public void visitBrace(EBrace userBraceNode, ScriptScope scriptScope) {\n \n             if (write == false || compound) {\n                 LoadMapShortcutNode irLoadMapShortcutNode = new LoadMapShortcutNode(location);\n-                irLoadMapShortcutNode.setExpressionType(scriptScope.getDecoration(userBraceNode, ValueType.class).getValueType());\n+                irLoadMapShortcutNode.attachDecoration(\n+                        new IRDExpressionType(scriptScope.getDecoration(userBraceNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 707}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1NzEzNA==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510357134", "createdAt": "2020-10-22T18:03:41Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1665,20 +1679,21 @@ public void visitBrace(EBrace userBraceNode, ScriptScope scriptScope) {\n \n             if (write == false || compound) {\n                 LoadMapShortcutNode irLoadMapShortcutNode = new LoadMapShortcutNode(location);\n-                irLoadMapShortcutNode.setExpressionType(scriptScope.getDecoration(userBraceNode, ValueType.class).getValueType());\n+                irLoadMapShortcutNode.attachDecoration(\n+                        new IRDExpressionType(scriptScope.getDecoration(userBraceNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjMyMA=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 707}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwNTI3OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MTozNlrOHmojig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODowMzo1N1rOHmtvJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjM5NA==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510272394", "createdAt": "2020-10-22T15:51:36Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1687,7 +1702,8 @@ public void visitBrace(EBrace userBraceNode, ScriptScope scriptScope) {\n \n             if (write == false || compound) {\n                 LoadListShortcutNode irLoadListShortcutNode = new LoadListShortcutNode(location);\n-                irLoadListShortcutNode.setExpressionType(scriptScope.getDecoration(userBraceNode, ValueType.class).getValueType());\n+                irLoadListShortcutNode.attachDecoration(\n+                        new IRDExpressionType(scriptScope.getDecoration(userBraceNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 732}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1NzI4NA==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510357284", "createdAt": "2020-10-22T18:03:57Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1687,7 +1702,8 @@ public void visitBrace(EBrace userBraceNode, ScriptScope scriptScope) {\n \n             if (write == false || compound) {\n                 LoadListShortcutNode irLoadListShortcutNode = new LoadListShortcutNode(location);\n-                irLoadListShortcutNode.setExpressionType(scriptScope.getDecoration(userBraceNode, ValueType.class).getValueType());\n+                irLoadListShortcutNode.attachDecoration(\n+                        new IRDExpressionType(scriptScope.getDecoration(userBraceNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjM5NA=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 732}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwNTQ3OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MTozOVrOHmojqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODowMzo0OVrOHmtu0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjQyNA==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510272424", "createdAt": "2020-10-22T15:51:39Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1715,7 +1731,8 @@ public void visitCall(ECall userCallNode, ScriptScope scriptScope) {\n                 irCallSubDefNode.addArgumentNode((ExpressionNode)visit(userArgumentNode, scriptScope));\n             }\n \n-            irCallSubDefNode.setExpressionType(scriptScope.getDecoration(userCallNode, ValueType.class).getValueType());\n+            irCallSubDefNode.attachDecoration(\n+                    new IRDExpressionType(scriptScope.getDecoration(userCallNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 742}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1NzIwMg==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510357202", "createdAt": "2020-10-22T18:03:49Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1715,7 +1731,8 @@ public void visitCall(ECall userCallNode, ScriptScope scriptScope) {\n                 irCallSubDefNode.addArgumentNode((ExpressionNode)visit(userArgumentNode, scriptScope));\n             }\n \n-            irCallSubDefNode.setExpressionType(scriptScope.getDecoration(userCallNode, ValueType.class).getValueType());\n+            irCallSubDefNode.attachDecoration(\n+                    new IRDExpressionType(scriptScope.getDecoration(userCallNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjQyNA=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 742}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwNjEwOnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MTo0NlrOHmokCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODowNjo1MlrOHmt1eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjUyMg==", "bodyText": "pull into intermediate variable.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510272522", "createdAt": "2020-10-22T15:51:46Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1751,7 +1768,8 @@ public void visitCall(ECall userCallNode, ScriptScope scriptScope) {\n                 irInvokeCallNode.addArgumentNode(injectCast(userCallArgumentNode, scriptScope));\n             }\n \n-            irInvokeCallNode.setExpressionType(scriptScope.getDecoration(userCallNode, ValueType.class).getValueType());;\n+            irInvokeCallNode.attachDecoration(\n+                    new IRDExpressionType(scriptScope.getDecoration(userCallNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 761}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1ODkwNA==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/63894#discussion_r510358904", "createdAt": "2020-10-22T18:06:52Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -1751,7 +1768,8 @@ public void visitCall(ECall userCallNode, ScriptScope scriptScope) {\n                 irInvokeCallNode.addArgumentNode(injectCast(userCallArgumentNode, scriptScope));\n             }\n \n-            irInvokeCallNode.setExpressionType(scriptScope.getDecoration(userCallNode, ValueType.class).getValueType());;\n+            irInvokeCallNode.attachDecoration(\n+                    new IRDExpressionType(scriptScope.getDecoration(userCallNode, ValueType.class).getValueType()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjUyMg=="}, "originalCommit": {"oid": "e025b887a4018c746f944293b59f4276a6d43170"}, "originalPosition": 761}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2851, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}