{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMDQ0ODAz", "number": 50803, "title": "Test password-protected keystore with Docker", "bodyText": "This commit adds two tests for the case where we mount a password-protected keystore into a Docker container and provide a password via a Docker environment variable.\nIn order to mount a password-protected keystore into a Docker container, I had to use Docker commands to create a password-protected keystore in a Docker container and then copy it down to the host. This turned out to be a messier process than I'd like it to be, and I'd welcome suggestions for improvements to my helper method.\nI also fixed a logging bug where we were logging the identifier for an array of strings rather than the contents of that array.\nRelates #32691", "createdAt": "2020-01-09T16:24:02Z", "url": "https://github.com/elastic/elasticsearch/pull/50803", "merged": true, "mergeCommit": {"oid": "3d7cf1f4bccfeaa30cb11ad96e9fa291d0a36276"}, "closed": true, "closedAt": "2020-01-10T16:30:13Z", "author": {"login": "williamrandolph"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4sYMMAH2gAyMzYxMDQ0ODAzOmE0NTg1OGIwNGJjNzI1ZGMwNjQzMzVlMWIwYTdmZmE2NmE4NGU1NWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4ubVvgH2gAyMzYxMDQ0ODAzOmNkYTFlM2MxNmM2YTcxOGRhZjI1ZGQ4YzcxZjU4MjVkNWExOTdlNjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a45858b04bc725dc064335e1b0a7ffa66a84e55c", "author": {"user": {"login": "williamrandolph", "name": "William Brafford"}}, "url": "https://github.com/elastic/elasticsearch/commit/a45858b04bc725dc064335e1b0a7ffa66a84e55c", "committedDate": "2020-01-09T16:16:56Z", "message": "Test pwd-protected keystore with Docker\n\nThis commit adds two tests for the case where we mount a\npassword-protected keystore into a Docker container and provide a\npassword via a Docker environment variable.\n\nWe also fix a logging bug where we were logging the identifier for an\narray of strings rather than the contents of that array."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNjkyOTk0", "url": "https://github.com/elastic/elasticsearch/pull/50803#pullrequestreview-340692994", "createdAt": "2020-01-09T17:31:27Z", "commit": {"oid": "a45858b04bc725dc064335e1b0a7ffa66a84e55c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNzozMToyOFrOFb93jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNzozMzowMFrOFb96KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2OTUxOQ==", "bodyText": "Are we only concerned with whether ES starts up?", "url": "https://github.com/elastic/elasticsearch/pull/50803#discussion_r364869519", "createdAt": "2020-01-09T17:31:28Z", "author": {"login": "rjernst"}, "path": "qa/os/src/test/java/org/elasticsearch/packaging/test/KeystoreManagementTests.java", "diffHunk": "@@ -253,6 +258,81 @@ public void test51WrongKeystorePasswordFromFile() throws Exception {\n         }\n     }\n \n+    /**\n+     * Check that we can mount a password-protected keystore to a docker image\n+     * and provide a password via an environment variable.\n+     */\n+    public void test60DockerEnvironmentVariablePassword() throws Exception {\n+        assumeTrue(distribution().isDocker());\n+        String password = \"password\";\n+        Path dockerKeystore = installation.config(\"elasticsearch.keystore\");\n+\n+        Path localKeystoreFile = getKeystoreFileFromDockerContainer(password, dockerKeystore);\n+\n+        // restart ES with password and mounted keystore\n+        Map<Path, Path> volumes = Map.of(localKeystoreFile, dockerKeystore);\n+        Map<String, String> envVars = Map.of(\"KEYSTORE_PASSWORD\", password);\n+        runContainer(distribution(), volumes, envVars);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a45858b04bc725dc064335e1b0a7ffa66a84e55c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg3MDE4NA==", "bodyText": "Future thought: should we have a test utility to grab any file from the container, not just the keystore?", "url": "https://github.com/elastic/elasticsearch/pull/50803#discussion_r364870184", "createdAt": "2020-01-09T17:33:00Z", "author": {"login": "rjernst"}, "path": "qa/os/src/test/java/org/elasticsearch/packaging/test/KeystoreManagementTests.java", "diffHunk": "@@ -253,6 +258,81 @@ public void test51WrongKeystorePasswordFromFile() throws Exception {\n         }\n     }\n \n+    /**\n+     * Check that we can mount a password-protected keystore to a docker image\n+     * and provide a password via an environment variable.\n+     */\n+    public void test60DockerEnvironmentVariablePassword() throws Exception {\n+        assumeTrue(distribution().isDocker());\n+        String password = \"password\";\n+        Path dockerKeystore = installation.config(\"elasticsearch.keystore\");\n+\n+        Path localKeystoreFile = getKeystoreFileFromDockerContainer(password, dockerKeystore);\n+\n+        // restart ES with password and mounted keystore\n+        Map<Path, Path> volumes = Map.of(localKeystoreFile, dockerKeystore);\n+        Map<String, String> envVars = Map.of(\"KEYSTORE_PASSWORD\", password);\n+        runContainer(distribution(), volumes, envVars);\n+    }\n+\n+    /**\n+     * Check that if we provide the wrong password for a mounted and password-protected\n+     * keystore, Elasticsearch doesn't start.\n+     */\n+    public void test61DockerEnvironmentVariableBadPassword() throws Exception {\n+        assumeTrue(distribution().isDocker());\n+        String password = \"password\";\n+        Path dockerKeystore = installation.config(\"elasticsearch.keystore\");\n+\n+        Path localKeystoreFile = getKeystoreFileFromDockerContainer(password, dockerKeystore);\n+\n+        // restart ES with password and mounted keystore\n+        Map<Path, Path> volumes = Map.of(localKeystoreFile, dockerKeystore);\n+        Map<String, String> envVars = Map.of(\"KEYSTORE_PASSWORD\", \"wrong\");\n+        Shell.Result r = runContainerExpectingFailure(distribution(), volumes, envVars);\n+        assertThat(r.stderr, containsString(PASSWORD_ERROR_MESSAGE));\n+    }\n+\n+    /**\n+     * In the Docker context, it's a little bit tricky to get a password-protected\n+     * keystore. All of the utilities we'd want to use are on the Docker image.\n+     * This method mounts a temporary directory to a Docker container, password-protects\n+     * the keystore, and then returns the path of the file that appears in the\n+     * mounted directory (now accessible from the local filesystem).\n+     */\n+    private Path getKeystoreFileFromDockerContainer(String password, Path dockerKeystore) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a45858b04bc725dc064335e1b0a7ffa66a84e55c"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cda1e3c16c6a718daf25dd8c71f5825d5a197e65", "author": {"user": {"login": "williamrandolph", "name": "William Brafford"}}, "url": "https://github.com/elastic/elasticsearch/commit/cda1e3c16c6a718daf25dd8c71f5825d5a197e65", "committedDate": "2020-01-09T18:40:11Z", "message": "Add line to run ES tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3705, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}