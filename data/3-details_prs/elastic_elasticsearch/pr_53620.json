{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5Mzk2MjEw", "number": 53620, "title": "Add Watcher to available rest resources ", "bodyText": "Prior to this commit Watcher explicitly copied test between two\nprojects with a copy task. This commit removes the explicit copy in favor\nof adding the Watcher tests to the available restResources that may be\ncopied between projects.\nThis is how inter-project dependencies should be modeled. However, only\nWatcher is included here since it is (currently) the only project with\ninter-project test dependencies.\n\nNote - this was originally reviewed and merged (only to master) via #53319, where it failed the intake test and was reverted.\nThis PR reverts the revert and adds 6fa7176.  I believe the root cause of the failure was overloading the configuration names, and 6fa7176 should address that issue.\nThe configurations are as follows:\nrestTests, restXpackTests, restSpecs, and restXpackSpecs are all configurations that can be defined per module (e.g. watcher, x-pack plugin). Watcher is defining its own restXpackTests (hence the maybeCreate) to express it's tests. Other configurations (from those 4) could also be defined per module to express dependencies. Users are expected to interact with these if they need expose anyone of those 4 things.\nrestTestConfig and restSpec are configurations used by the plugin and should not be created elsewhere (hence only create). Users are not expected to interact with these.\nThe dependencies represented through restTests, restXpackTests, restSpecs, and restXpackSpecs configurations per project are added to restTestConfig and restSpec configuration for the plugin. The task only cares about these two configurations, which should be a representation of the super set of all of the test or spec dependencies.", "createdAt": "2020-03-16T17:37:10Z", "url": "https://github.com/elastic/elasticsearch/pull/53620", "merged": true, "mergeCommit": {"oid": "3ef3cc571f3b1ef3f1a3a797b0147e2f571b8fac"}, "closed": true, "closedAt": "2020-03-18T14:08:14Z", "author": {"login": "jakelandis"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOQt-NgH2gAyMzg5Mzk2MjEwOmIzOTc5ZjEzZDhjNmRlYzRkZmJmZTZjYWRlNjkxNzMxNTJlN2NiMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOrOXjAFqTM3NjQ3MDIzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b3979f13d8c6dec4dfbfe6cade69173152e7cb19", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/b3979f13d8c6dec4dfbfe6cade69173152e7cb19", "committedDate": "2020-03-16T16:29:43Z", "message": "Revert \"Revert \"Add Watcher to available rest resources (#53319)\"\"\n\nThis reverts commit 4f48e053f92b2ae7677a2e2ba0e5464ede7128d1."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fa7176500c989f11414dfa5d6c44a1e981af364", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/6fa7176500c989f11414dfa5d6c44a1e981af364", "committedDate": "2020-03-16T17:12:24Z", "message": "don't overload configuration names"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MjYyODg2", "url": "https://github.com/elastic/elasticsearch/pull/53620#pullrequestreview-376262886", "createdAt": "2020-03-17T17:41:10Z", "commit": {"oid": "6fa7176500c989f11414dfa5d6c44a1e981af364"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzo0MToxMVrOF3nIGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzo0NjoyOVrOF3nVEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1NzA1MQ==", "bodyText": "We should probalby not be creating these configurations inside this configuration block. The reason being, because we are using the lazy task creation api, that means that sometimes we create these, and sometimes we don't, depending on the requested task graph. When it comes to configuration API elements, we should always create these or we could get funny errors depending on what tasks you ask to run.", "url": "https://github.com/elastic/elasticsearch/pull/53620#discussion_r393857051", "createdAt": "2020-03-17T17:41:11Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java", "diffHunk": "@@ -86,21 +86,29 @@\n     public void apply(Project project) {\n         RestResourcesExtension extension = project.getExtensions().create(EXTENSION_NAME, RestResourcesExtension.class);\n \n+        // tests\n         Provider<CopyRestTestsTask> copyRestYamlTestTask = project.getTasks()\n             .register(\"copyYamlTestsTask\", CopyRestTestsTask.class, task -> {\n                 task.includeCore.set(extension.restTests.getIncludeCore());\n                 task.includeXpack.set(extension.restTests.getIncludeXpack());\n-                task.coreConfig = project.getConfigurations().create(\"restTest\");\n+                task.coreConfig = project.getConfigurations().create(\"restTestConfig\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fa7176500c989f11414dfa5d6c44a1e981af364"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1OTI2Nw==", "bodyText": "I'm not particular excited about us hard-coding these mappings. Are we going to have to add something here for every project that shares tests. Also, if we want to get to a point where we can aggregate all xpack tests (as the clients team has asked about) we'll need a more generic solution here likely based on some convention.", "url": "https://github.com/elastic/elasticsearch/pull/53620#discussion_r393859267", "createdAt": "2020-03-17T17:44:43Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java", "diffHunk": "@@ -86,21 +86,29 @@\n     public void apply(Project project) {\n         RestResourcesExtension extension = project.getExtensions().create(EXTENSION_NAME, RestResourcesExtension.class);\n \n+        // tests\n         Provider<CopyRestTestsTask> copyRestYamlTestTask = project.getTasks()\n             .register(\"copyYamlTestsTask\", CopyRestTestsTask.class, task -> {\n                 task.includeCore.set(extension.restTests.getIncludeCore());\n                 task.includeXpack.set(extension.restTests.getIncludeXpack());\n-                task.coreConfig = project.getConfigurations().create(\"restTest\");\n+                task.coreConfig = project.getConfigurations().create(\"restTestConfig\");\n+                project.getConfigurations().maybeCreate(\"restTests\");\n+                project.getConfigurations().maybeCreate(\"restXpackTests\");\n                 if (BuildParams.isInternal()) {\n+                    // core\n                     Dependency restTestdependency = project.getDependencies()\n                         .project(Map.of(\"path\", \":rest-api-spec\", \"configuration\", \"restTests\"));\n                     project.getDependencies().add(task.coreConfig.getName(), restTestdependency);\n-\n+                    // x-pack\n                     task.xpackConfig = project.getConfigurations().create(\"restXpackTest\");\n                     Dependency restXPackTestdependency = project.getDependencies()\n                         .project(Map.of(\"path\", \":x-pack:plugin\", \"configuration\", \"restXpackTests\"));\n                     project.getDependencies().add(task.xpackConfig.getName(), restXPackTestdependency);\n                     task.dependsOn(task.xpackConfig);\n+                    // watcher", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fa7176500c989f11414dfa5d6c44a1e981af364"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg2MDM3MA==", "bodyText": "I think we should just use create instead of maybeCreate and remove any instances in projects that are manually creating these. The risk with the lenient approach is that some project declares this configuration for one purpose, and we see it and use it for a different one. This should be explicit. If you create a conflicting configuration we should error.", "url": "https://github.com/elastic/elasticsearch/pull/53620#discussion_r393860370", "createdAt": "2020-03-17T17:46:29Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java", "diffHunk": "@@ -86,21 +86,29 @@\n     public void apply(Project project) {\n         RestResourcesExtension extension = project.getExtensions().create(EXTENSION_NAME, RestResourcesExtension.class);\n \n+        // tests\n         Provider<CopyRestTestsTask> copyRestYamlTestTask = project.getTasks()\n             .register(\"copyYamlTestsTask\", CopyRestTestsTask.class, task -> {\n                 task.includeCore.set(extension.restTests.getIncludeCore());\n                 task.includeXpack.set(extension.restTests.getIncludeXpack());\n-                task.coreConfig = project.getConfigurations().create(\"restTest\");\n+                task.coreConfig = project.getConfigurations().create(\"restTestConfig\");\n+                project.getConfigurations().maybeCreate(\"restTests\");\n+                project.getConfigurations().maybeCreate(\"restXpackTests\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fa7176500c989f11414dfa5d6c44a1e981af364"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "287fb72ec4ce5984e41cd69de907b1092863b200", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/287fb72ec4ce5984e41cd69de907b1092863b200", "committedDate": "2020-03-17T20:19:35Z", "message": "move configuration out of task, prefer create over maybcreate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80da08cc280985dc3ca6d0af51b5d31861cf5220", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/80da08cc280985dc3ca6d0af51b5d31861cf5220", "committedDate": "2020-03-17T21:37:27Z", "message": "Merge branch 'master' into re_introduce_add_watcher_to_rest_resources"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NDcwMjM1", "url": "https://github.com/elastic/elasticsearch/pull/53620#pullrequestreview-376470235", "createdAt": "2020-03-17T23:22:38Z", "commit": {"oid": "80da08cc280985dc3ca6d0af51b5d31861cf5220"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1452, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}