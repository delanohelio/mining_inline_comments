{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNzIwMzU1", "number": 61430, "title": "Pass SearchLookup supplier through to fielddataBuilder", "bodyText": "Runtime fields need to have a SearchLookup available,  when building their fielddata implementations, so that they can look up other fields, runtime or not.\nTo achieve that, we add a Supplier<SearchLookup> argument to the existing MappedFieldType#fielddataBuilder method.\nAs we introduce the ability to look up other fields while building fielddata for mapped fields, we implicitly add the ability for a field to require other fields. This requires some protection mechanism that detects dependency cycles to prevent stack overflow errors.\nWith this PR we also introduce detection for cycles, as well as a limit on the depth of the references for a runtime field. Note that we also plan on introducing cycles detection at compile time, so the runtime cycles detection is a last resort to prevent stack overflow errors but we hope that we can reject runtime fields from being registered in the mappings when they create a cycle in their definition.\nNote that this PR does not introduce any production implementation of runtime fields, but is rather a pre-requisite to merge the runtime fields feature branch.\nThis is a breaking change for MapperPlugins that plug in a mapper, as the signature of MappedFieldType#fielddataBuilder changes from taking a single argument (the index name), to also accept a Supplier<SearchLookup>.\nRelates to #59332", "createdAt": "2020-08-21T16:08:32Z", "url": "https://github.com/elastic/elasticsearch/pull/61430", "merged": true, "mergeCommit": {"oid": "462e25f9bba7c5260300427f16ca8e05e5c00098"}, "closed": true, "closedAt": "2020-08-26T18:19:22Z", "author": {"login": "javanna"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAu4XVAH2gAyNDcxNzIwMzU1OjgzNWE2NWQ5YWUyZTVhODkxNTE3OTNlMWM5NDgzNTlmZDE5YWNlYTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCuBNJAFqTQ3NTYzNjkxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "835a65d9ae2e5a89151793e1c948359fd19acea9", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/835a65d9ae2e5a89151793e1c948359fd19acea9", "committedDate": "2020-08-20T11:54:26Z", "message": "Pass a SearchLookup supplier through to fielddataBuilder (#60224)\n\nRuntime fields look up other fields through `SearchLookup`. With this change we add a `Supplier<SearchLookup>` argument to the existing `MappedFieldType#fielddataBuilder` method so that fielddata implementations can have `SearchLookup` available when needed.\n\nNote that this commit does not introduce any production implementation of runtime fields, but rather the plumbing needed to then merge the feature branch where runtime fields have been developed.\n\nAdditionally the use of runtime fields in index sorting is disallowed.\n\nRelates to #59332"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11f73efff96dbcb994d6cc7e325d1f2a967610da", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/11f73efff96dbcb994d6cc7e325d1f2a967610da", "committedDate": "2020-08-20T12:42:21Z", "message": "add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caf8ecd34e775541e6e00cf85363d7b30bf52520", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/caf8ecd34e775541e6e00cf85363d7b30bf52520", "committedDate": "2020-08-21T08:41:32Z", "message": "typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09c2ed9130ae7f997ed6638ecafb1d8b7c5ff26f", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/09c2ed9130ae7f997ed6638ecafb1d8b7c5ff26f", "committedDate": "2020-08-21T15:37:44Z", "message": "Add support for tracking cyclic field references\n\nThis is needed for scripted runtime fields, as they allow to refer to other runtime fields.\n\nAlso reject resolving fields that depend on a defined limit, which is deterined at 32."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "864637915efd81a4250f74874414540275558bfa", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/864637915efd81a4250f74874414540275558bfa", "committedDate": "2020-08-21T15:55:16Z", "message": "trim down field data service tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjE3MDYz", "url": "https://github.com/elastic/elasticsearch/pull/61430#pullrequestreview-472617063", "createdAt": "2020-08-21T16:10:38Z", "commit": {"oid": "09c2ed9130ae7f997ed6638ecafb1d8b7c5ff26f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjoxMDozOFrOHEzE0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjoxMDozOFrOHEzE0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc5MzE3MQ==", "bodyText": "This was not strictly required in this PR, though it came natural as I added isRuntimeField to MappedFieldType. and configuring index sorting on runtime fields looked like a bad idea to me.", "url": "https://github.com/elastic/elasticsearch/pull/61430#discussion_r474793171", "createdAt": "2020-08-21T16:10:38Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/IndexSortConfig.java", "diffHunk": "@@ -192,7 +195,7 @@ public Sort buildIndexSort(Function<String, MappedFieldType> fieldTypeLookup,\n             try {\n                 fieldData = fieldDataLookup.apply(ft);\n             } catch (Exception e) {\n-                throw new IllegalArgumentException(\"docvalues not found for index sort field:[\" + sortSpec.field + \"]\");\n+                throw new IllegalArgumentException(\"docvalues not found for index sort field:[\" + sortSpec.field + \"]\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09c2ed9130ae7f997ed6638ecafb1d8b7c5ff26f"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjE3NzE1", "url": "https://github.com/elastic/elasticsearch/pull/61430#pullrequestreview-472617715", "createdAt": "2020-08-21T16:11:44Z", "commit": {"oid": "09c2ed9130ae7f997ed6638ecafb1d8b7c5ff26f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjoxMTo0NFrOHEzG1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjoxMTo0NFrOHEzG1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc5MzY4NA==", "bodyText": "this is the main reason why I introduced isRuntimeField as part of this PR. I want to enforce that this method is never called for runtime fields. That is the case today, this is only used for index warmers and index sorting, but we need to make sure that that is still the case in the future.", "url": "https://github.com/elastic/elasticsearch/pull/61430#discussion_r474793684", "createdAt": "2020-08-21T16:11:44Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java", "diffHunk": "@@ -106,14 +108,27 @@ public synchronized void clearField(final String fieldName) {\n         ExceptionsHelper.maybeThrowRuntimeAndSuppress(exceptions);\n     }\n \n+    /**\n+     * Returns fielddata for the provided field type. Same as {@link #getForField(MappedFieldType, String, Supplier)} but does not take\n+     * the index name and the search lookup supplier as arguments. Does not support runtime fields.\n+     */\n     public <IFD extends IndexFieldData<?>> IFD getForField(MappedFieldType fieldType) {\n-        return getForField(fieldType, index().getName());\n+        assert fieldType.isRuntimeField() == false : \"runtime fields are not supported\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09c2ed9130ae7f997ed6638ecafb1d8b7c5ff26f"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjE5ODM3", "url": "https://github.com/elastic/elasticsearch/pull/61430#pullrequestreview-472619837", "createdAt": "2020-08-21T16:14:58Z", "commit": {"oid": "09c2ed9130ae7f997ed6638ecafb1d8b7c5ff26f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjoxNDo1OFrOHEzNWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjoxNDo1OFrOHEzNWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc5NTM1Mg==", "bodyText": "@nik9000 this is very similar to what you had in #60318 ( I will give you credit in the final commit). The main difference is that I don't recreate a SearchLookup and DocLookup every time a new field is referenced. I rather fork SearchLookup once a field is looked up and keep on reusing the same and adding field names to that same list. I find it more intuitive this way. I guess you may have a different opinion. I also tried to enclose the tracking in the lookup function. All of the other changes turned out the same as what you made, although I started from scratch to see where I ended up :)", "url": "https://github.com/elastic/elasticsearch/pull/61430#discussion_r474795352", "createdAt": "2020-08-21T16:14:58Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/search/lookup/SearchLookup.java", "diffHunk": "@@ -54,4 +94,20 @@ public DocLookup doc() {\n     public SourceLookup source() {\n         return sourceLookup;\n     }\n+\n+    private static Function<MappedFieldType, IndexFieldData<?>> wrapAndTrackFieldReferences(String field,\n+            Function<MappedFieldType, IndexFieldData<?>> fieldDataLookup) {\n+        final Set<String> fields = new LinkedHashSet<>();\n+        fields.add(field);\n+        return fieldType -> {\n+            if (fields.add(fieldType.name()) == false) {\n+                String message = String.join(\" -> \", fields) + \" -> \" + fieldType.name();\n+                throw new IllegalArgumentException(\"Cyclic dependency detected while resolving runtime fields: \" + message);\n+            }\n+            if (fields.size() > MAX_FIELD_CHAIN) {\n+                throw new IllegalArgumentException(\"Field requires resolving too many dependent fields: \" + String.join(\" -> \", fields));\n+            }\n+            return fieldDataLookup.apply(fieldType);\n+        };\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09c2ed9130ae7f997ed6638ecafb1d8b7c5ff26f"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "437e6f00c0ac6398367c618c35c78dfe3d3d63ee", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/437e6f00c0ac6398367c618c35c78dfe3d3d63ee", "committedDate": "2020-08-21T16:17:00Z", "message": "shorten test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMjU4NzEw", "url": "https://github.com/elastic/elasticsearch/pull/61430#pullrequestreview-473258710", "createdAt": "2020-08-24T09:10:38Z", "commit": {"oid": "437e6f00c0ac6398367c618c35c78dfe3d3d63ee"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwOToxMDozOFrOHFbKdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwOToxNDo1NlrOHFbT4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ0OTk3Mw==", "bodyText": "32 feels big to me ;). I think we can be more aggressive here, something like 4-5 should be more than enough ?", "url": "https://github.com/elastic/elasticsearch/pull/61430#discussion_r475449973", "createdAt": "2020-08-24T09:10:38Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/lookup/SearchLookup.java", "diffHunk": "@@ -24,20 +24,60 @@\n import org.elasticsearch.index.mapper.MappedFieldType;\n import org.elasticsearch.index.mapper.MapperService;\n \n+import java.util.LinkedHashSet;\n+import java.util.Set;\n+import java.util.function.BiFunction;\n import java.util.function.Function;\n+import java.util.function.Supplier;\n \n public class SearchLookup {\n \n-    final DocLookup docMap;\n+    private static final int MAX_FIELD_CHAIN = 32;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437e6f00c0ac6398367c618c35c78dfe3d3d63ee"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ1MjM4NA==", "bodyText": "I wonder if this is the right way to do since we may forgot to override this function where needed ?\nCould we instead rely on some inheritance, runtime field type must extend a specific class to be considered runtime ?", "url": "https://github.com/elastic/elasticsearch/pull/61430#discussion_r475452384", "createdAt": "2020-08-24T09:14:56Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java", "diffHunk": "@@ -83,15 +85,22 @@ public MappedFieldType(String name, boolean isIndexed, boolean hasDocValues, Tex\n      * Return a fielddata builder for this field\n      *\n      * @param fullyQualifiedIndexName the name of the index this field-data is build for\n-     *\n+     * @param searchLookup a {@link SearchLookup} supplier to allow for accessing other fields values in the context of runtime fields\n      * @throws IllegalArgumentException if the fielddata is not supported on this type.\n      * An IllegalArgumentException is needed in order to return an http error 400\n      * when this error occurs in a request. see: {@link org.elasticsearch.ExceptionsHelper#status}\n      */\n-    public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {\n+    public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName, Supplier<SearchLookup> searchLookup) {\n         throw new IllegalArgumentException(\"Fielddata is not supported on field [\" + name() + \"] of type [\" + typeName() + \"]\");\n     }\n \n+    /**\n+     * Return true for field types that are runtime fields implementation, false otherwise\n+     */\n+    public boolean isRuntimeField() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437e6f00c0ac6398367c618c35c78dfe3d3d63ee"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c7fe453e84de221a20075bbf2f7272fc5a94743", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/3c7fe453e84de221a20075bbf2f7272fc5a94743", "committedDate": "2020-08-24T15:26:08Z", "message": "lower max field chain limit to 5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "063fe1ac17e8deb1f34ae277f48af4ae743955fa", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/063fe1ac17e8deb1f34ae277f48af4ae743955fa", "committedDate": "2020-08-24T15:27:09Z", "message": "lower max field chain limit to 5 for real"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNzA4ODg0", "url": "https://github.com/elastic/elasticsearch/pull/61430#pullrequestreview-473708884", "createdAt": "2020-08-24T17:25:40Z", "commit": {"oid": "063fe1ac17e8deb1f34ae277f48af4ae743955fa"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzoyNTo0MFrOHFvKtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzozMDoyOVrOHFvVJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc3NzcxNg==", "bodyText": "Shadowing the lookup name here makes this harder to read. I probably had this on my version of the PR too, but could you rename lookup to l or something?", "url": "https://github.com/elastic/elasticsearch/pull/61430#discussion_r475777716", "createdAt": "2020-08-24T17:25:40Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/query/QueryShardContext.java", "diffHunk": "@@ -290,8 +292,9 @@ MappedFieldType failIfFieldMappingNotFound(String name, MappedFieldType fieldMap\n \n     public SearchLookup lookup() {\n         if (lookup == null) {\n-            lookup = new SearchLookup(getMapperService(),\n-                    mappedFieldType -> indexFieldDataService.apply(mappedFieldType, fullyQualifiedIndex.getName()));\n+            lookup = new SearchLookup(\n+                getMapperService(),\n+                (fieldType, lookup) -> indexFieldDataService.apply(fieldType, fullyQualifiedIndex.getName(), lookup));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063fe1ac17e8deb1f34ae277f48af4ae743955fa"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4MDM5MQ==", "bodyText": "If a field depends on many fields but doesn't have a \"chain\" of dependencies will this trigger? Is that what we want? Maybe it is, but I think a limit of 5 is pretty low in that case. Maybe fine, but I dunno.", "url": "https://github.com/elastic/elasticsearch/pull/61430#discussion_r475780391", "createdAt": "2020-08-24T17:30:29Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/lookup/SearchLookup.java", "diffHunk": "@@ -54,4 +94,20 @@ public DocLookup doc() {\n     public SourceLookup source() {\n         return sourceLookup;\n     }\n+\n+    private static Function<MappedFieldType, IndexFieldData<?>> wrapAndTrackFieldReferences(String field,\n+            Function<MappedFieldType, IndexFieldData<?>> fieldDataLookup) {\n+        final Set<String> fields = new LinkedHashSet<>();\n+        fields.add(field);\n+        return fieldType -> {\n+            if (fields.add(fieldType.name()) == false) {\n+                String message = String.join(\" -> \", fields) + \" -> \" + fieldType.name();\n+                throw new IllegalArgumentException(\"Cyclic dependency detected while resolving runtime fields: \" + message);\n+            }\n+            if (fields.size() > MAX_FIELD_CHAIN) {\n+                throw new IllegalArgumentException(\"Field requires resolving too many dependent fields: \" + String.join(\" -> \", fields));\n+            }\n+            return fieldDataLookup.apply(fieldType);\n+        };\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc5NTM1Mg=="}, "originalCommit": {"oid": "09c2ed9130ae7f997ed6638ecafb1d8b7c5ff26f"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9608906c8a18799cd0d3d6e0d6a10750ba2ea049", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/9608906c8a18799cd0d3d6e0d6a10750ba2ea049", "committedDate": "2020-08-26T12:56:34Z", "message": "review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38c9fcfd8a9f0f23c3a12ec6b8292d3880d0f6a0", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/38c9fcfd8a9f0f23c3a12ec6b8292d3880d0f6a0", "committedDate": "2020-08-26T13:04:11Z", "message": "Merge branch 'master' into enhancement/search_lookup_fielddata_builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NTE0NTUw", "url": "https://github.com/elastic/elasticsearch/pull/61430#pullrequestreview-475514550", "createdAt": "2020-08-26T13:55:55Z", "commit": {"oid": "38c9fcfd8a9f0f23c3a12ec6b8292d3880d0f6a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19c298b098852ceb9fc26ed58e2588519dcf5740", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/19c298b098852ceb9fc26ed58e2588519dcf5740", "committedDate": "2020-08-26T15:24:29Z", "message": "remove getForField(MappedFieldType)\n\nalso remove the notion of runtime field from mapped field type, it was needed only for index sorting, but it already throws a good error \"no doc values for field\" when trying to config index sorting on a runtime field. It needs no special handling."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NjM2OTE1", "url": "https://github.com/elastic/elasticsearch/pull/61430#pullrequestreview-475636915", "createdAt": "2020-08-26T16:02:02Z", "commit": {"oid": "19c298b098852ceb9fc26ed58e2588519dcf5740"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4645, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}