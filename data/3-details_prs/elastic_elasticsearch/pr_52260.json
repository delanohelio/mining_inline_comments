{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MjY0NTY3", "number": 52260, "title": "[ML] Add _cat/ml/data_frame/analytics API", "bodyText": "Adds new _cat/ml/data_frame/analytics and _cat/ml/data_frame/analytics/{id} endpoints.\nExample output for single job:\nGET _cat/ml/data_frame/analytics/classifier_job_3\n\nclassifier_job_3 2020-02-12T11:49:16.928Z classification stopped\n\nExample output for multiple jobs:\nGET _cat/ml/data_frame/analytics?v\n\nid               create_time              type             state\nclassifier_job_1 2020-02-12T11:49:09.594Z classification stopped\nclassifier_job_2 2020-02-12T11:49:14.479Z classification stopped\nclassifier_job_3 2020-02-12T11:49:16.928Z classification stopped\nclassifier_job_4 2020-02-12T11:49:19.127Z classification stopped\nclassifier_job_5 2020-02-12T11:49:21.349Z classification stopped\n\nHelp output:\nGET _cat/ml/data_frame/analytics?help\n\nid                     |                          | the id                                                     \ntype                   | t                        | analysis type                                              \ncreate_time            | ct,createTime            | job creation time                                          \nversion                | v                        | the version of Elasticsearch when the analytics was created\nsource_index           | si,sourceIndex           | source index                                               \ndest_index             | di,destIndex             | destination index                                          \ndescription            | d                        | description                                                \nmodel_memory_limit     | mml,modelMemoryLimit     | model memory limit                                         \nstate                  | s                        | job state                                                  \nfailure_reason         | fr,failureReason         | failure reason                                             \nprogress               | p                        | progress                                                   \nassignment_explanation | ae,assignmentExplanation | why the job is or is not assigned to a node                \nnode.id                | ni,nodeId                | id of the assigned node                                    \nnode.name              | nn,nodeName              | name of the assigned node                                  \nnode.ephemeral_id      | ne,nodeEphemeralId       | ephemeral id of the assigned node                          \nnode.address           | na,nodeAddress           | network address of the assigned node  \n\nRelates #51413", "createdAt": "2020-02-12T11:50:04Z", "url": "https://github.com/elastic/elasticsearch/pull/52260", "merged": true, "mergeCommit": {"oid": "30d8fa4bf3071497fd5fe9a5e5bf3defcfa9a104"}, "closed": true, "closedAt": "2020-02-13T12:29:29Z", "author": {"login": "przemekwitek"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDlc8_AFqTM1NzQwNjYwNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcD6FDUAFqTM1ODE3NjczNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NDA2NjA2", "url": "https://github.com/elastic/elasticsearch/pull/52260#pullrequestreview-357406606", "createdAt": "2020-02-12T12:17:50Z", "commit": {"oid": "6c4987a482f77c4d3bb8ade3df143419ab9f1a7d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMjoxNzo1MFrOFoscxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMjoxNzo1MFrOFoscxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIxNTYyMQ==", "bodyText": "This should probably default to true, especially since the expansion coverage is already checked in the get configs request. There might be a race condition between getting the configs and the stats.", "url": "https://github.com/elastic/elasticsearch/pull/52260#discussion_r378215621", "createdAt": "2020-02-12T12:17:50Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/rest/cat/RestCatDataFrameAnalyticsAction.java", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ml.rest.cat;\n+\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.cluster.metadata.MetaData;\n+import org.elasticsearch.cluster.node.DiscoveryNode;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.Table;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.RestResponse;\n+import org.elasticsearch.rest.action.RestActionListener;\n+import org.elasticsearch.rest.action.RestResponseListener;\n+import org.elasticsearch.rest.action.cat.AbstractCatAction;\n+import org.elasticsearch.rest.action.cat.RestTable;\n+import org.elasticsearch.xpack.core.ml.action.GetDataFrameAnalyticsAction;\n+import org.elasticsearch.xpack.core.ml.action.GetDataFrameAnalyticsStatsAction;\n+import org.elasticsearch.xpack.core.ml.action.GetDataFrameAnalyticsStatsAction.Response.Stats;\n+import org.elasticsearch.xpack.core.ml.dataframe.DataFrameAnalyticsConfig;\n+import org.elasticsearch.xpack.core.ml.utils.PhaseProgress;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+import static java.util.Arrays.asList;\n+import static java.util.Collections.unmodifiableList;\n+import static java.util.stream.Collectors.joining;\n+import static java.util.stream.Collectors.toMap;\n+import static org.elasticsearch.rest.RestRequest.Method.GET;\n+\n+public class RestCatDataFrameAnalyticsAction extends AbstractCatAction {\n+\n+    @Override\n+    public List<Route> routes() {\n+        return unmodifiableList(asList(\n+            new Route(GET, \"_cat/ml/data_frame/analytics/{\" + DataFrameAnalyticsConfig.ID.getPreferredName() + \"}\"),\n+            new Route(GET, \"_cat/ml/data_frame/analytics\")));\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"cat_ml_get_data_frame_analytics_action\";\n+    }\n+\n+    @Override\n+    protected RestChannelConsumer doCatRequest(RestRequest restRequest, NodeClient client) {\n+        String dataFrameAnalyticsId = restRequest.param(DataFrameAnalyticsConfig.ID.getPreferredName());\n+        if (Strings.isNullOrEmpty(dataFrameAnalyticsId)) {\n+            dataFrameAnalyticsId = MetaData.ALL;\n+        }\n+\n+        GetDataFrameAnalyticsAction.Request getRequest = new GetDataFrameAnalyticsAction.Request(dataFrameAnalyticsId);\n+        getRequest.setAllowNoResources(\n+            restRequest.paramAsBoolean(\n+                GetDataFrameAnalyticsAction.Request.ALLOW_NO_MATCH.getPreferredName(), getRequest.isAllowNoResources()));\n+\n+        GetDataFrameAnalyticsStatsAction.Request getStatsRequest = new GetDataFrameAnalyticsStatsAction.Request(dataFrameAnalyticsId);\n+        getStatsRequest.setAllowNoMatch(\n+            restRequest.paramAsBoolean(\n+                GetDataFrameAnalyticsStatsAction.Request.ALLOW_NO_MATCH.getPreferredName(), getStatsRequest.isAllowNoMatch()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c4987a482f77c4d3bb8ade3df143419ab9f1a7d"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NDE5MzAz", "url": "https://github.com/elastic/elasticsearch/pull/52260#pullrequestreview-357419303", "createdAt": "2020-02-12T12:40:17Z", "commit": {"oid": "6c4987a482f77c4d3bb8ade3df143419ab9f1a7d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMjo0MDoxN1rOFotD-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMjo0MDoxN1rOFotD-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyNTY1OA==", "bodyText": "The initial value of the field underlying getStatsRequest.isAllowNoMatch() is already true.\nDo you think I should make the default value an explicit true literal here?", "url": "https://github.com/elastic/elasticsearch/pull/52260#discussion_r378225658", "createdAt": "2020-02-12T12:40:17Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/rest/cat/RestCatDataFrameAnalyticsAction.java", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ml.rest.cat;\n+\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.cluster.metadata.MetaData;\n+import org.elasticsearch.cluster.node.DiscoveryNode;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.Table;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.RestResponse;\n+import org.elasticsearch.rest.action.RestActionListener;\n+import org.elasticsearch.rest.action.RestResponseListener;\n+import org.elasticsearch.rest.action.cat.AbstractCatAction;\n+import org.elasticsearch.rest.action.cat.RestTable;\n+import org.elasticsearch.xpack.core.ml.action.GetDataFrameAnalyticsAction;\n+import org.elasticsearch.xpack.core.ml.action.GetDataFrameAnalyticsStatsAction;\n+import org.elasticsearch.xpack.core.ml.action.GetDataFrameAnalyticsStatsAction.Response.Stats;\n+import org.elasticsearch.xpack.core.ml.dataframe.DataFrameAnalyticsConfig;\n+import org.elasticsearch.xpack.core.ml.utils.PhaseProgress;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+import static java.util.Arrays.asList;\n+import static java.util.Collections.unmodifiableList;\n+import static java.util.stream.Collectors.joining;\n+import static java.util.stream.Collectors.toMap;\n+import static org.elasticsearch.rest.RestRequest.Method.GET;\n+\n+public class RestCatDataFrameAnalyticsAction extends AbstractCatAction {\n+\n+    @Override\n+    public List<Route> routes() {\n+        return unmodifiableList(asList(\n+            new Route(GET, \"_cat/ml/data_frame/analytics/{\" + DataFrameAnalyticsConfig.ID.getPreferredName() + \"}\"),\n+            new Route(GET, \"_cat/ml/data_frame/analytics\")));\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"cat_ml_get_data_frame_analytics_action\";\n+    }\n+\n+    @Override\n+    protected RestChannelConsumer doCatRequest(RestRequest restRequest, NodeClient client) {\n+        String dataFrameAnalyticsId = restRequest.param(DataFrameAnalyticsConfig.ID.getPreferredName());\n+        if (Strings.isNullOrEmpty(dataFrameAnalyticsId)) {\n+            dataFrameAnalyticsId = MetaData.ALL;\n+        }\n+\n+        GetDataFrameAnalyticsAction.Request getRequest = new GetDataFrameAnalyticsAction.Request(dataFrameAnalyticsId);\n+        getRequest.setAllowNoResources(\n+            restRequest.paramAsBoolean(\n+                GetDataFrameAnalyticsAction.Request.ALLOW_NO_MATCH.getPreferredName(), getRequest.isAllowNoResources()));\n+\n+        GetDataFrameAnalyticsStatsAction.Request getStatsRequest = new GetDataFrameAnalyticsStatsAction.Request(dataFrameAnalyticsId);\n+        getStatsRequest.setAllowNoMatch(\n+            restRequest.paramAsBoolean(\n+                GetDataFrameAnalyticsStatsAction.Request.ALLOW_NO_MATCH.getPreferredName(), getStatsRequest.isAllowNoMatch()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIxNTYyMQ=="}, "originalCommit": {"oid": "6c4987a482f77c4d3bb8ade3df143419ab9f1a7d"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fa69df8644fb965fe7ca5f450d31fe9c3df6740", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/7fa69df8644fb965fe7ca5f450d31fe9c3df6740", "committedDate": "2020-02-12T13:07:26Z", "message": "[ML] Add _cat/ml/data_frame/analytics API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84bdb12f62bd8f6cf401014cf74ab60a497db5bf", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/84bdb12f62bd8f6cf401014cf74ab60a497db5bf", "committedDate": "2020-02-12T13:07:26Z", "message": "Apply review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "081c9a557ade63767d198cde5f91bbd5d752d552", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/081c9a557ade63767d198cde5f91bbd5d752d552", "committedDate": "2020-02-12T12:49:51Z", "message": "Apply review comments"}, "afterCommit": {"oid": "84bdb12f62bd8f6cf401014cf74ab60a497db5bf", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/84bdb12f62bd8f6cf401014cf74ab60a497db5bf", "committedDate": "2020-02-12T13:07:26Z", "message": "Apply review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff103567470d69d08b0741b6fa22e7b652a624b2", "author": {"user": {"login": "przemekwitek", "name": "Przemys\u0142aw Witek"}}, "url": "https://github.com/elastic/elasticsearch/commit/ff103567470d69d08b0741b6fa22e7b652a624b2", "committedDate": "2020-02-13T08:32:39Z", "message": "Apply review comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MTc2NzM0", "url": "https://github.com/elastic/elasticsearch/pull/52260#pullrequestreview-358176734", "createdAt": "2020-02-13T12:27:52Z", "commit": {"oid": "ff103567470d69d08b0741b6fa22e7b652a624b2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2614, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}