{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMDkzMzg2", "number": 61516, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxODo0OToyOVrOEcMxhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNDoxMToxNlrOEhEtFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MDA0ODY5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/interceptor/BulkShardRequestInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxODo0OToyOVrOHGlUOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxODo0OToyOVrOHGlUOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NDg4OQ==", "bodyText": "This if must go away and be replaced with an assert, but the assert currently trips for enrich policies which make use of reindex.", "url": "https://github.com/elastic/elasticsearch/pull/61516#discussion_r476664889", "createdAt": "2020-08-25T18:49:29Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/interceptor/BulkShardRequestInterceptor.java", "diffHunk": "@@ -43,32 +43,33 @@ public BulkShardRequestInterceptor(ThreadPool threadPool, XPackLicenseState lice\n     public void intercept(RequestInfo requestInfo, AuthorizationEngine authzEngine, AuthorizationInfo authorizationInfo,\n                           ActionListener<Void> listener) {\n         boolean shouldIntercept = licenseState.isSecurityEnabled();\n-        var licenseChecker = new MemoizedSupplier<>(() -> licenseState.checkFeature(Feature.SECURITY_DLS_FLS));\n+        var featureUsageChecker = new MemoizedSupplier<>(() -> licenseState.checkFeature(Feature.SECURITY_DLS_FLS));\n         if (requestInfo.getRequest() instanceof BulkShardRequest && shouldIntercept) {\n             IndicesAccessControl indicesAccessControl = threadContext.getTransient(AuthorizationServiceField.INDICES_PERMISSIONS_KEY);\n-\n-            final BulkShardRequest bulkShardRequest = (BulkShardRequest) requestInfo.getRequest();\n-            for (BulkItemRequest bulkItemRequest : bulkShardRequest.items()) {\n-                IndicesAccessControl.IndexAccessControl indexAccessControl =\n-                    indicesAccessControl.getIndexPermissions(bulkItemRequest.index());\n-                boolean found = false;\n-                if (indexAccessControl != null) {\n-                    boolean fls = indexAccessControl.getFieldPermissions().hasFieldLevelSecurity();\n-                    boolean dls = indexAccessControl.getDocumentPermissions().hasDocumentLevelPermissions();\n-                    if (fls || dls) {\n-                        if (licenseChecker.get() && bulkItemRequest.request() instanceof UpdateRequest) {\n+            BulkShardRequest bulkShardRequest = (BulkShardRequest) requestInfo.getRequest();\n+            // this uses the {@code BulkShardRequest#index()} because the {@code bulkItemRequest#index()}\n+            // can still be an unresolved date math expression\n+            IndicesAccessControl.IndexAccessControl indexAccessControl = indicesAccessControl.getIndexPermissions(bulkShardRequest.index());\n+            // TODO replace if condition with assertion\n+            if (indexAccessControl != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "223f4326386521fe341adb99ec855fe9e6aa4932"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTI1OTU3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/interceptor/UpdateRequestInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNjozMzowNVrOHIB6uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNjozMzowNVrOHIB6uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE4MjA3NQ==", "bodyText": "Nit: redundant parenthesis around (UpdateRequest) indicesRequest", "url": "https://github.com/elastic/elasticsearch/pull/61516#discussion_r478182075", "createdAt": "2020-08-27T06:33:05Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/interceptor/UpdateRequestInterceptor.java", "diffHunk": "@@ -33,6 +33,17 @@ protected void disableFeatures(IndicesRequest updateRequest, boolean fieldLevelS\n             \"is enabled\", RestStatus.BAD_REQUEST));\n     }\n \n+    @Override\n+    String[] requestIndices(IndicesRequest indicesRequest) {\n+        if (indicesRequest instanceof UpdateRequest) {\n+            UpdateRequest updateRequest = ((UpdateRequest) indicesRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "223f4326386521fe341adb99ec855fe9e6aa4932"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTE1MjQyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/integration/DocumentAndFieldLevelSecurityTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNDowOToxMlrOHOMBPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjoxMToyN1rOHOZ8UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzOTAzNg==", "bodyText": "Why would we randomise on this rather than just have 2 tests?\nIt feels like having a permanent test with datemath would be a good thing.", "url": "https://github.com/elastic/elasticsearch/pull/61516#discussion_r484639036", "createdAt": "2020-09-08T04:09:12Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/integration/DocumentAndFieldLevelSecurityTests.java", "diffHunk": "@@ -144,6 +149,38 @@ public void testSimpleQuery() {\n         assertThat(response.getHits().getAt(1).getSourceAsMap().get(\"field2\").toString(), equalTo(\"value2\"));\n     }\n \n+    public void testUpdatesAreRejected() {\n+        String indexName = randomFrom(\"<test-{2015.05.05||+1d}>\", \"test\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f5f690c2f92e371f3c30a7e14c3b48e8bf6575"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg2NzE1Mw==", "bodyText": "I've made it a for-each to replace the randomisation.\nI would've opted for a separate test myself, but since this is an integration test, I've accommodated the requirement to not have exhaustive ITs by using randomisation.", "url": "https://github.com/elastic/elasticsearch/pull/61516#discussion_r484867153", "createdAt": "2020-09-08T12:11:27Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/integration/DocumentAndFieldLevelSecurityTests.java", "diffHunk": "@@ -144,6 +149,38 @@ public void testSimpleQuery() {\n         assertThat(response.getHits().getAt(1).getSourceAsMap().get(\"field2\").toString(), equalTo(\"value2\"));\n     }\n \n+    public void testUpdatesAreRejected() {\n+        String indexName = randomFrom(\"<test-{2015.05.05||+1d}>\", \"test\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzOTAzNg=="}, "originalCommit": {"oid": "02f5f690c2f92e371f3c30a7e14c3b48e8bf6575"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTE1NTQwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/interceptor/BulkShardRequestInterceptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNDoxMToxNlrOHOMC-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjowNTo0MlrOHOZwyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzOTQ4MA==", "bodyText": "The previous name seems more appropriate to me. The purpose is to check the license allows the feature, not to track usage.", "url": "https://github.com/elastic/elasticsearch/pull/61516#discussion_r484639480", "createdAt": "2020-09-08T04:11:16Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/interceptor/BulkShardRequestInterceptor.java", "diffHunk": "@@ -43,32 +43,33 @@ public BulkShardRequestInterceptor(ThreadPool threadPool, XPackLicenseState lice\n     public void intercept(RequestInfo requestInfo, AuthorizationEngine authzEngine, AuthorizationInfo authorizationInfo,\n                           ActionListener<Void> listener) {\n         boolean shouldIntercept = licenseState.isSecurityEnabled();\n-        var licenseChecker = new MemoizedSupplier<>(() -> licenseState.checkFeature(Feature.SECURITY_DLS_FLS));\n+        var featureUsageChecker = new MemoizedSupplier<>(() -> licenseState.checkFeature(Feature.SECURITY_DLS_FLS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f5f690c2f92e371f3c30a7e14c3b48e8bf6575"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg2NDIwMQ==", "bodyText": "I've reverted the name change.", "url": "https://github.com/elastic/elasticsearch/pull/61516#discussion_r484864201", "createdAt": "2020-09-08T12:05:42Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/interceptor/BulkShardRequestInterceptor.java", "diffHunk": "@@ -43,32 +43,33 @@ public BulkShardRequestInterceptor(ThreadPool threadPool, XPackLicenseState lice\n     public void intercept(RequestInfo requestInfo, AuthorizationEngine authzEngine, AuthorizationInfo authorizationInfo,\n                           ActionListener<Void> listener) {\n         boolean shouldIntercept = licenseState.isSecurityEnabled();\n-        var licenseChecker = new MemoizedSupplier<>(() -> licenseState.checkFeature(Feature.SECURITY_DLS_FLS));\n+        var featureUsageChecker = new MemoizedSupplier<>(() -> licenseState.checkFeature(Feature.SECURITY_DLS_FLS));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzOTQ4MA=="}, "originalCommit": {"oid": "02f5f690c2f92e371f3c30a7e14c3b48e8bf6575"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 823, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}