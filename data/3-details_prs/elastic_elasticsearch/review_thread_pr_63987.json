{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NDY2NTYy", "number": 63987, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDoyMTo0MVrOEx1fSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDoxODozOFrOEyvfNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjkyMDQwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDoyMTo0MVrOHoJFOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMDo0OTo1NFrOHo13zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1Mzg4MA==", "bodyText": "I feel that reusing the index.hidden setting is adding ambiguity to the setting, since it will then be controlling whether an index is hidden or data stream depending on the context how it is being used.\nI would prefer that a data stream can be made hidden via the data_stream section of a composable index template. I think this way it is clearer what is being made hidden. Currently DataStreamTemplate is empty, but I think we will be adding more configuration options that are data stream specific later (e.g. timestamp field name).\nNote that aliases are also made hidden via a property on an alias instead of reusing the index.hidden setting. So making data stream hidden via a parameter on DataStreamTemplate is inline how aliases\ncan be made hidden.\nLet me know what you think. I think this change would be a minor change to this PR.", "url": "https://github.com/elastic/elasticsearch/pull/63987#discussion_r511853880", "createdAt": "2020-10-26T10:21:41Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamService.java", "diffHunk": "@@ -156,9 +157,11 @@ static ClusterState createDataStream(MetadataCreateIndexService metadataCreateIn\n         assert firstBackingIndex != null;\n         assert firstBackingIndex.mapping() != null : \"no mapping found for backing index [\" + firstBackingIndexName + \"]\";\n \n-        String fieldName = template.getDataStreamTemplate().getTimestampField();\n+        String fieldName = composableTemplate.getDataStreamTemplate().getTimestampField();\n         DataStream.TimestampField timestampField = new DataStream.TimestampField(fieldName);\n-        DataStream newDataStream = new DataStream(request.name, timestampField, List.of(firstBackingIndex.getIndex()));\n+        Template template = composableTemplate.template();\n+        boolean hidden = template != null && template.settings() != null && IndexMetadata.INDEX_HIDDEN_SETTING.get(template.settings());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54dddc4c27590407e731c7cfade5427e33d9fdcb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3Mzk4NA==", "bodyText": "That makes sense, I'll change it", "url": "https://github.com/elastic/elasticsearch/pull/63987#discussion_r511873984", "createdAt": "2020-10-26T10:55:46Z", "author": {"login": "probakowski"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamService.java", "diffHunk": "@@ -156,9 +157,11 @@ static ClusterState createDataStream(MetadataCreateIndexService metadataCreateIn\n         assert firstBackingIndex != null;\n         assert firstBackingIndex.mapping() != null : \"no mapping found for backing index [\" + firstBackingIndexName + \"]\";\n \n-        String fieldName = template.getDataStreamTemplate().getTimestampField();\n+        String fieldName = composableTemplate.getDataStreamTemplate().getTimestampField();\n         DataStream.TimestampField timestampField = new DataStream.TimestampField(fieldName);\n-        DataStream newDataStream = new DataStream(request.name, timestampField, List.of(firstBackingIndex.getIndex()));\n+        Template template = composableTemplate.template();\n+        boolean hidden = template != null && template.settings() != null && IndexMetadata.INDEX_HIDDEN_SETTING.get(template.settings());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1Mzg4MA=="}, "originalCommit": {"oid": "54dddc4c27590407e731c7cfade5427e33d9fdcb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU4NzcyNA==", "bodyText": "It's done, now it uses data_stream part of a template\n\"data_stream\": {\n    \"hidden\": true\n}", "url": "https://github.com/elastic/elasticsearch/pull/63987#discussion_r512587724", "createdAt": "2020-10-27T10:49:54Z", "author": {"login": "probakowski"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamService.java", "diffHunk": "@@ -156,9 +157,11 @@ static ClusterState createDataStream(MetadataCreateIndexService metadataCreateIn\n         assert firstBackingIndex != null;\n         assert firstBackingIndex.mapping() != null : \"no mapping found for backing index [\" + firstBackingIndexName + \"]\";\n \n-        String fieldName = template.getDataStreamTemplate().getTimestampField();\n+        String fieldName = composableTemplate.getDataStreamTemplate().getTimestampField();\n         DataStream.TimestampField timestampField = new DataStream.TimestampField(fieldName);\n-        DataStream newDataStream = new DataStream(request.name, timestampField, List.of(firstBackingIndex.getIndex()));\n+        Template template = composableTemplate.template();\n+        boolean hidden = template != null && template.settings() != null && IndexMetadata.INDEX_HIDDEN_SETTING.get(template.settings());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1Mzg4MA=="}, "originalCommit": {"oid": "54dddc4c27590407e731c7cfade5427e33d9fdcb"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjQyMjk1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/data-streams/src/main/java/org/elasticsearch/xpack/datastreams/action/DeleteDataStreamTransportAction.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDoxODozOFrOHpjDnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwOTo1NDozNlrOHrIDxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMyODAzMQ==", "bodyText": "I don't fully understand the purpose of this logic here. It always ensures that expressions get expanded to open data streams / indices. Why is this needed?\nAlso the rest spec for this and get data stream api only indicates that expand_wildcards is supported, but I think the way the corresponding request class and with this logic also the other indices options rest parameters are supported as well? Is the intention of this logic to only support expand_wildcards in get and delete data streams apis?", "url": "https://github.com/elastic/elasticsearch/pull/63987#discussion_r513328031", "createdAt": "2020-10-28T10:18:38Z", "author": {"login": "martijnvg"}, "path": "x-pack/plugin/data-streams/src/main/java/org/elasticsearch/xpack/datastreams/action/DeleteDataStreamTransportAction.java", "diffHunk": "@@ -106,9 +108,11 @@ static ClusterState removeDataStream(\n         ClusterState currentState,\n         DeleteDataStreamAction.Request request\n     ) {\n-        Set<String> dataStreams = new HashSet<>(\n-            indexNameExpressionResolver.dataStreamNames(currentState, request.indicesOptions(), request.getNames())\n-        );\n+        IndicesOptions options = request.indicesOptions();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247524445b67923d0f4ce629a10b09fc73a5e7bb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIyNjg5MA==", "bodyText": "Yes, the intention was to only support expand_wildcards but to avoid duplicating parsing parameters code.\nopen/closed has no meaning in terms of data stream (we can't close data stream, right?), but if we specify only hidden no data stream will be returned (that's the way IndexNameExpressionResolver works). This is just convenience for a user.\nOther options should be ignored as well by the get/delete data stream APIs so no harm with parsing them.", "url": "https://github.com/elastic/elasticsearch/pull/63987#discussion_r514226890", "createdAt": "2020-10-29T12:40:46Z", "author": {"login": "probakowski"}, "path": "x-pack/plugin/data-streams/src/main/java/org/elasticsearch/xpack/datastreams/action/DeleteDataStreamTransportAction.java", "diffHunk": "@@ -106,9 +108,11 @@ static ClusterState removeDataStream(\n         ClusterState currentState,\n         DeleteDataStreamAction.Request request\n     ) {\n-        Set<String> dataStreams = new HashSet<>(\n-            indexNameExpressionResolver.dataStreamNames(currentState, request.indicesOptions(), request.getNames())\n-        );\n+        IndicesOptions options = request.indicesOptions();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMyODAzMQ=="}, "originalCommit": {"oid": "247524445b67923d0f4ce629a10b09fc73a5e7bb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIyODg1OQ==", "bodyText": "Ok, I see. Can the logic that rewrites the indices options be extracted in a static helper method with a comment describing what you just explained?", "url": "https://github.com/elastic/elasticsearch/pull/63987#discussion_r514228859", "createdAt": "2020-10-29T12:44:10Z", "author": {"login": "martijnvg"}, "path": "x-pack/plugin/data-streams/src/main/java/org/elasticsearch/xpack/datastreams/action/DeleteDataStreamTransportAction.java", "diffHunk": "@@ -106,9 +108,11 @@ static ClusterState removeDataStream(\n         ClusterState currentState,\n         DeleteDataStreamAction.Request request\n     ) {\n-        Set<String> dataStreams = new HashSet<>(\n-            indexNameExpressionResolver.dataStreamNames(currentState, request.indicesOptions(), request.getNames())\n-        );\n+        IndicesOptions options = request.indicesOptions();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMyODAzMQ=="}, "originalCommit": {"oid": "247524445b67923d0f4ce629a10b09fc73a5e7bb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk4Mjg1Mg==", "bodyText": "Yes, added", "url": "https://github.com/elastic/elasticsearch/pull/63987#discussion_r514982852", "createdAt": "2020-10-30T09:54:36Z", "author": {"login": "probakowski"}, "path": "x-pack/plugin/data-streams/src/main/java/org/elasticsearch/xpack/datastreams/action/DeleteDataStreamTransportAction.java", "diffHunk": "@@ -106,9 +108,11 @@ static ClusterState removeDataStream(\n         ClusterState currentState,\n         DeleteDataStreamAction.Request request\n     ) {\n-        Set<String> dataStreams = new HashSet<>(\n-            indexNameExpressionResolver.dataStreamNames(currentState, request.indicesOptions(), request.getNames())\n-        );\n+        IndicesOptions options = request.indicesOptions();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMyODAzMQ=="}, "originalCommit": {"oid": "247524445b67923d0f4ce629a10b09fc73a5e7bb"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4363, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}