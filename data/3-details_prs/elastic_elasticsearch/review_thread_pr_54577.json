{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2OTc2MTA5", "number": 54577, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNzowODoyNVrODtoCgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNzowODoyNVrODtoCgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTY4NTE0OnYy", "diffSide": "LEFT", "path": "x-pack/plugin/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNzowODoyNVrOF_KVgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxNDowNDowN1rOGHrQvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc3Mzk1NQ==", "bodyText": "Should we keep this in here set to the latest compatible version anyhow? We are just going to likely have to put it back once we start testing with JDK 15 EA releases.", "url": "https://github.com/elastic/elasticsearch/pull/54577#discussion_r401773955", "createdAt": "2020-04-01T17:08:25Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/build.gradle", "diffHunk": "@@ -40,14 +40,6 @@ subprojects {\n         // filter out non-existent classes directories from empty source sets\n         final FileCollection classDirectories = project.files(files).filter { it.exists() }\n \n-        onlyIf {\n-          /*\n-           * The latest version of ASM does not understand JDK 14. However, Gradle can not distinguish between JDK 13 and JDK 14 (treating\n-           * anything above JDK 12 as JDK 13). So, to exclude JDK 14 until a newer version of ASM is available, we also have to exclude JDK\n-           * 13. See https://github.com/elastic/elasticsearch/issues/45927.\n-           */\n-          Integer.parseInt(BuildParams.runtimeJavaVersion.majorVersion) < 13", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aafac13bea40e50ffeeaa25cf5b90693288a75a8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc3ODEyNQ==", "bodyText": "Oh, one more thing, why do we seem to insist on using the runtime JDK for this stuff? I've already ripped this out of a bunch of places because this is a build time check. I should not be using some old JDK for doing precommit checks just because I happen to have RUNTIME_JAVA_HOME set. I think this could cause wacky behavior for folks.\nI'd prefer we use the compilerJavaHome here instead. I think it makes the most sense for these use cases.", "url": "https://github.com/elastic/elasticsearch/pull/54577#discussion_r401778125", "createdAt": "2020-04-01T17:14:46Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/build.gradle", "diffHunk": "@@ -40,14 +40,6 @@ subprojects {\n         // filter out non-existent classes directories from empty source sets\n         final FileCollection classDirectories = project.files(files).filter { it.exists() }\n \n-        onlyIf {\n-          /*\n-           * The latest version of ASM does not understand JDK 14. However, Gradle can not distinguish between JDK 13 and JDK 14 (treating\n-           * anything above JDK 12 as JDK 13). So, to exclude JDK 14 until a newer version of ASM is available, we also have to exclude JDK\n-           * 13. See https://github.com/elastic/elasticsearch/issues/45927.\n-           */\n-          Integer.parseInt(BuildParams.runtimeJavaVersion.majorVersion) < 13", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc3Mzk1NQ=="}, "originalCommit": {"oid": "aafac13bea40e50ffeeaa25cf5b90693288a75a8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcwMjAxNQ==", "bodyText": "I pushed 90dd3ae. This means that we don't need to keep the onlyIf, since we'll always be using a compatible compiler.", "url": "https://github.com/elastic/elasticsearch/pull/54577#discussion_r410702015", "createdAt": "2020-04-18T14:04:07Z", "author": {"login": "jasontedor"}, "path": "x-pack/plugin/build.gradle", "diffHunk": "@@ -40,14 +40,6 @@ subprojects {\n         // filter out non-existent classes directories from empty source sets\n         final FileCollection classDirectories = project.files(files).filter { it.exists() }\n \n-        onlyIf {\n-          /*\n-           * The latest version of ASM does not understand JDK 14. However, Gradle can not distinguish between JDK 13 and JDK 14 (treating\n-           * anything above JDK 12 as JDK 13). So, to exclude JDK 14 until a newer version of ASM is available, we also have to exclude JDK\n-           * 13. See https://github.com/elastic/elasticsearch/issues/45927.\n-           */\n-          Integer.parseInt(BuildParams.runtimeJavaVersion.majorVersion) < 13", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc3Mzk1NQ=="}, "originalCommit": {"oid": "aafac13bea40e50ffeeaa25cf5b90693288a75a8"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3936, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}