{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODM3ODE2", "number": 53317, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMjo0NDowM1rODnDx9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxODoxODowN1rODnMbUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjgyOTk4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/DeprecationChecks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMjo0NDowM1rOF01Tow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMjo0NDowM1rOF01Tow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk0MzY1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static List<BiFunction<Settings, PluginsAndModules, DeprecationIssue>> NODE_SETTINGS_CHECKS = List.of();\n          \n          \n            \n                static List<BiFunction<Settings, PluginsAndModules, DeprecationIssue>> NODE_SETTINGS_CHECKS = Collections.emptyList();", "url": "https://github.com/elastic/elasticsearch/pull/53317#discussion_r390943651", "createdAt": "2020-03-11T12:44:03Z", "author": {"login": "jasontedor"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/DeprecationChecks.java", "diffHunk": "@@ -33,7 +33,7 @@ private DeprecationChecks() {\n     static List<Function<ClusterState, DeprecationIssue>> CLUSTER_SETTINGS_CHECKS =\n         Collections.emptyList();\n \n-    static List<BiFunction<Settings, PluginsAndModules, DeprecationIssue>> NODE_SETTINGS_CHECKS = Collections.emptyList();\n+    static List<BiFunction<Settings, PluginsAndModules, DeprecationIssue>> NODE_SETTINGS_CHECKS = List.of();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b5aadae1e857a09d734569ba9af1417cd9c7fc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDI0NjU2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxODoxODowN1rOF1DQ4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTo0NTo1MVrOF1GIcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE3MjMyMA==", "bodyText": "should this be WARNING instead of CRITICAL ?\nIf the setting is removed, won't it be be \"archived\" allowing the server to continue to function ? I think we are trying to reserve CRITICAL for things items that will prevent the server from running.", "url": "https://github.com/elastic/elasticsearch/pull/53317#discussion_r391172320", "createdAt": "2020-03-11T18:18:07Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.deprecation;\n+\n+import org.elasticsearch.common.settings.Setting;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.xpack.core.deprecation.DeprecationIssue;\n+\n+import java.util.Locale;\n+\n+public class NodeDeprecationChecks {\n+\n+    static DeprecationIssue checkRemovedSetting(final Settings settings, final Setting<?> removedSetting, final String url) {\n+        if (removedSetting.exists(settings) == false) {\n+            return null;\n+        }\n+        final String removedSettingKey = removedSetting.getKey();\n+        final String value = removedSetting.get(settings).toString();\n+        final String message =\n+            String.format(Locale.ROOT, \"setting [%s] is deprecated and will be removed in the next major version\", removedSettingKey);\n+        final String details =\n+            String.format(Locale.ROOT, \"the setting [%s] is currently set to [%s], remove this setting\", removedSettingKey, value);\n+        return new DeprecationIssue(DeprecationIssue.Level.CRITICAL, message, url, details);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9a24da88caea12d0d272806051cc7a8aec5d74d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE4ODEwMQ==", "bodyText": "Not necessarily, because these could be node level settings, which we don't archive, which do prevent startup if they are unrecognized. Also, we have discussing removing the archiving of settings, so this behavior could change for cluster-level settings too.", "url": "https://github.com/elastic/elasticsearch/pull/53317#discussion_r391188101", "createdAt": "2020-03-11T18:45:55Z", "author": {"login": "jasontedor"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.deprecation;\n+\n+import org.elasticsearch.common.settings.Setting;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.xpack.core.deprecation.DeprecationIssue;\n+\n+import java.util.Locale;\n+\n+public class NodeDeprecationChecks {\n+\n+    static DeprecationIssue checkRemovedSetting(final Settings settings, final Setting<?> removedSetting, final String url) {\n+        if (removedSetting.exists(settings) == false) {\n+            return null;\n+        }\n+        final String removedSettingKey = removedSetting.getKey();\n+        final String value = removedSetting.get(settings).toString();\n+        final String message =\n+            String.format(Locale.ROOT, \"setting [%s] is deprecated and will be removed in the next major version\", removedSettingKey);\n+        final String details =\n+            String.format(Locale.ROOT, \"the setting [%s] is currently set to [%s], remove this setting\", removedSettingKey, value);\n+        return new DeprecationIssue(DeprecationIssue.Level.CRITICAL, message, url, details);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE3MjMyMA=="}, "originalCommit": {"oid": "e9a24da88caea12d0d272806051cc7a8aec5d74d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIxNDQ1MQ==", "bodyText": "In that case, should we flex WARNING or CRITICAL based if the setting has node scope ?\nAlso, should we check that that value is not the default value here so we don't issue an issue a deprecation issue for settings that user never changed ?", "url": "https://github.com/elastic/elasticsearch/pull/53317#discussion_r391214451", "createdAt": "2020-03-11T19:36:23Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.deprecation;\n+\n+import org.elasticsearch.common.settings.Setting;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.xpack.core.deprecation.DeprecationIssue;\n+\n+import java.util.Locale;\n+\n+public class NodeDeprecationChecks {\n+\n+    static DeprecationIssue checkRemovedSetting(final Settings settings, final Setting<?> removedSetting, final String url) {\n+        if (removedSetting.exists(settings) == false) {\n+            return null;\n+        }\n+        final String removedSettingKey = removedSetting.getKey();\n+        final String value = removedSetting.get(settings).toString();\n+        final String message =\n+            String.format(Locale.ROOT, \"setting [%s] is deprecated and will be removed in the next major version\", removedSettingKey);\n+        final String details =\n+            String.format(Locale.ROOT, \"the setting [%s] is currently set to [%s], remove this setting\", removedSettingKey, value);\n+        return new DeprecationIssue(DeprecationIssue.Level.CRITICAL, message, url, details);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE3MjMyMA=="}, "originalCommit": {"oid": "e9a24da88caea12d0d272806051cc7a8aec5d74d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIxNjE0MA==", "bodyText": "There is a check that the setting is not set on line 18?", "url": "https://github.com/elastic/elasticsearch/pull/53317#discussion_r391216140", "createdAt": "2020-03-11T19:39:40Z", "author": {"login": "jasontedor"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.deprecation;\n+\n+import org.elasticsearch.common.settings.Setting;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.xpack.core.deprecation.DeprecationIssue;\n+\n+import java.util.Locale;\n+\n+public class NodeDeprecationChecks {\n+\n+    static DeprecationIssue checkRemovedSetting(final Settings settings, final Setting<?> removedSetting, final String url) {\n+        if (removedSetting.exists(settings) == false) {\n+            return null;\n+        }\n+        final String removedSettingKey = removedSetting.getKey();\n+        final String value = removedSetting.get(settings).toString();\n+        final String message =\n+            String.format(Locale.ROOT, \"setting [%s] is deprecated and will be removed in the next major version\", removedSettingKey);\n+        final String details =\n+            String.format(Locale.ROOT, \"the setting [%s] is currently set to [%s], remove this setting\", removedSettingKey, value);\n+        return new DeprecationIssue(DeprecationIssue.Level.CRITICAL, message, url, details);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE3MjMyMA=="}, "originalCommit": {"oid": "e9a24da88caea12d0d272806051cc7a8aec5d74d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIxODQ3NA==", "bodyText": "ah .. i missed \"Note that fallback settings are excluded.\" in the exists method.", "url": "https://github.com/elastic/elasticsearch/pull/53317#discussion_r391218474", "createdAt": "2020-03-11T19:44:10Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.deprecation;\n+\n+import org.elasticsearch.common.settings.Setting;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.xpack.core.deprecation.DeprecationIssue;\n+\n+import java.util.Locale;\n+\n+public class NodeDeprecationChecks {\n+\n+    static DeprecationIssue checkRemovedSetting(final Settings settings, final Setting<?> removedSetting, final String url) {\n+        if (removedSetting.exists(settings) == false) {\n+            return null;\n+        }\n+        final String removedSettingKey = removedSetting.getKey();\n+        final String value = removedSetting.get(settings).toString();\n+        final String message =\n+            String.format(Locale.ROOT, \"setting [%s] is deprecated and will be removed in the next major version\", removedSettingKey);\n+        final String details =\n+            String.format(Locale.ROOT, \"the setting [%s] is currently set to [%s], remove this setting\", removedSettingKey, value);\n+        return new DeprecationIssue(DeprecationIssue.Level.CRITICAL, message, url, details);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE3MjMyMA=="}, "originalCommit": {"oid": "e9a24da88caea12d0d272806051cc7a8aec5d74d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIxOTMxNQ==", "bodyText": "Yeah, that's why we have Setting#existsOrFallbackExists.", "url": "https://github.com/elastic/elasticsearch/pull/53317#discussion_r391219315", "createdAt": "2020-03-11T19:45:51Z", "author": {"login": "jasontedor"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.deprecation;\n+\n+import org.elasticsearch.common.settings.Setting;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.xpack.core.deprecation.DeprecationIssue;\n+\n+import java.util.Locale;\n+\n+public class NodeDeprecationChecks {\n+\n+    static DeprecationIssue checkRemovedSetting(final Settings settings, final Setting<?> removedSetting, final String url) {\n+        if (removedSetting.exists(settings) == false) {\n+            return null;\n+        }\n+        final String removedSettingKey = removedSetting.getKey();\n+        final String value = removedSetting.get(settings).toString();\n+        final String message =\n+            String.format(Locale.ROOT, \"setting [%s] is deprecated and will be removed in the next major version\", removedSettingKey);\n+        final String details =\n+            String.format(Locale.ROOT, \"the setting [%s] is currently set to [%s], remove this setting\", removedSettingKey, value);\n+        return new DeprecationIssue(DeprecationIssue.Level.CRITICAL, message, url, details);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE3MjMyMA=="}, "originalCommit": {"oid": "e9a24da88caea12d0d272806051cc7a8aec5d74d"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3380, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}