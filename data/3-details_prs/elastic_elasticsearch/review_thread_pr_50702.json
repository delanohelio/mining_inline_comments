{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMDAzNTYy", "number": 50702, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoxMzoxOFrODWYolw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoxMzoxOFrODWYolw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Nzk4ODcxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoxMzoxOFrOFbHZ9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoxMzoxOFrOFbHZ9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk3NzIwNg==", "bodyText": "Should this be 1 instead of 2?", "url": "https://github.com/elastic/elasticsearch/pull/50702#discussion_r363977206", "createdAt": "2020-01-07T22:13:18Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "diffHunk": "@@ -1078,6 +1079,67 @@ public void testRolloverStepRetriesUntilRolledOverIndexIsDeleted() throws Except\n         assertBusy(() -> assertThat(getStepKeyForIndex(index), equalTo(TerminalPolicyStep.KEY)));\n     }\n \n+    public void testUpdateRolloverLifecycleDateStepRetriesWhenRolloverInfoIsMissing() throws Exception {\n+        String index = this.index + \"-000001\";\n+\n+        createNewSingletonPolicy(\"hot\", new RolloverAction(null, null, 1L));\n+\n+        createIndexWithSettings(\n+            index,\n+            Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 1)\n+                .put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, 0)\n+                .put(LifecycleSettings.LIFECYCLE_NAME, policy)\n+                .put(RolloverAction.LIFECYCLE_ROLLOVER_ALIAS, \"alias\"),\n+            true\n+        );\n+\n+        assertBusy(() -> assertThat(getStepKeyForIndex(index).getName(), is(WaitForRolloverReadyStep.NAME)));\n+\n+        // moving ILM to the \"update-rollover-lifecycle-date\" without having gone through the actual rollover step\n+        // the \"update-rollover-lifecycle-date\" step will fail as the index has no rollover information\n+        Request moveToStepRequest = new Request(\"POST\", \"_ilm/move/\" + index);\n+        moveToStepRequest.setJsonEntity(\"{\\n\" +\n+            \"  \\\"current_step\\\": {\\n\" +\n+            \"    \\\"phase\\\": \\\"hot\\\",\\n\" +\n+            \"    \\\"action\\\": \\\"rollover\\\",\\n\" +\n+            \"    \\\"name\\\": \\\"check-rollover-ready\\\"\\n\" +\n+            \"  },\\n\" +\n+            \"  \\\"next_step\\\": {\\n\" +\n+            \"    \\\"phase\\\": \\\"hot\\\",\\n\" +\n+            \"    \\\"action\\\": \\\"rollover\\\",\\n\" +\n+            \"    \\\"name\\\": \\\"update-rollover-lifecycle-date\\\"\\n\" +\n+            \"  }\\n\" +\n+            \"}\");\n+        client().performRequest(moveToStepRequest);\n+\n+        waitUntil(() -> {\n+            try {\n+                Map<String, Object> explainIndexResponse = explainIndex(index);\n+                String step = (String) explainIndexResponse.get(\"step\");\n+                Integer retryCount = (Integer) explainIndexResponse.get(FAILED_STEP_RETRY_COUNT_FIELD);\n+                return step != null && step.equals(UpdateRolloverLifecycleDateStep.NAME) && retryCount != null && retryCount >= 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "802b563d2871c15c74c402643efa9442301c5e71"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4905, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}