{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjgyNjA5", "number": 53770, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMTozNDowMlrODpeGBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjozNDo1M1rODqW4nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODExMjY5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformIndexerStats.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMTozNDowMlrOF4qieg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMDowNToxNFrOF5Ntlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk2MTUzMA==", "bodyText": "The new long values need to be Long since they won't exist in older stats files. This will throw an NPE if it tries to parse XContent where these new values don't exist.", "url": "https://github.com/elastic/elasticsearch/pull/53770#discussion_r394961530", "createdAt": "2020-03-19T11:34:02Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformIndexerStats.java", "diffHunk": "@@ -73,8 +77,10 @@\n         LENIENT_PARSER.declareLong(constructorArg(), NUM_INVOCATIONS);\n         LENIENT_PARSER.declareLong(constructorArg(), INDEX_TIME_IN_MS);\n         LENIENT_PARSER.declareLong(constructorArg(), SEARCH_TIME_IN_MS);\n+        LENIENT_PARSER.declareLong(constructorArg(), PROCESSING_TIME_IN_MS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d12725668995cae626f3572b8187f8fbbadcbb"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAyMjU5OA==", "bodyText": "Thanks for pointing this out. I actually wonder why all variables are mandatory in the 1st place, especially as its supposed to be a LENIENT_PARSER, the exponential stats are optional.\nLet me know if you have an idea why mandatory, if there is no good reason, I suggest to switch them all to optional.", "url": "https://github.com/elastic/elasticsearch/pull/53770#discussion_r395022598", "createdAt": "2020-03-19T13:26:37Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformIndexerStats.java", "diffHunk": "@@ -73,8 +77,10 @@\n         LENIENT_PARSER.declareLong(constructorArg(), NUM_INVOCATIONS);\n         LENIENT_PARSER.declareLong(constructorArg(), INDEX_TIME_IN_MS);\n         LENIENT_PARSER.declareLong(constructorArg(), SEARCH_TIME_IN_MS);\n+        LENIENT_PARSER.declareLong(constructorArg(), PROCESSING_TIME_IN_MS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk2MTUzMA=="}, "originalCommit": {"oid": "75d12725668995cae626f3572b8187f8fbbadcbb"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAyNjAzOA==", "bodyText": "Will also make parsing more robust w.r.t. non existing fields (NPE)", "url": "https://github.com/elastic/elasticsearch/pull/53770#discussion_r395026038", "createdAt": "2020-03-19T13:31:51Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformIndexerStats.java", "diffHunk": "@@ -73,8 +77,10 @@\n         LENIENT_PARSER.declareLong(constructorArg(), NUM_INVOCATIONS);\n         LENIENT_PARSER.declareLong(constructorArg(), INDEX_TIME_IN_MS);\n         LENIENT_PARSER.declareLong(constructorArg(), SEARCH_TIME_IN_MS);\n+        LENIENT_PARSER.declareLong(constructorArg(), PROCESSING_TIME_IN_MS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk2MTUzMA=="}, "originalCommit": {"oid": "75d12725668995cae626f3572b8187f8fbbadcbb"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1MDUzNA==", "bodyText": "Switching them all to optional makes sense to me. The ctor should handling the Long. But I do think that the final stats object should just be unboxed long where 0L is an unboxed null.", "url": "https://github.com/elastic/elasticsearch/pull/53770#discussion_r395050534", "createdAt": "2020-03-19T14:06:15Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformIndexerStats.java", "diffHunk": "@@ -73,8 +77,10 @@\n         LENIENT_PARSER.declareLong(constructorArg(), NUM_INVOCATIONS);\n         LENIENT_PARSER.declareLong(constructorArg(), INDEX_TIME_IN_MS);\n         LENIENT_PARSER.declareLong(constructorArg(), SEARCH_TIME_IN_MS);\n+        LENIENT_PARSER.declareLong(constructorArg(), PROCESSING_TIME_IN_MS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk2MTUzMA=="}, "originalCommit": {"oid": "75d12725668995cae626f3572b8187f8fbbadcbb"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzNzgxNQ==", "bodyText": "I decided for a slightly different approach. I wanted to avoid massive re-factorings, too. In a nutshell I use a \"take default if Null\" helper method. I am  surprised that I could not find an existing method for this.", "url": "https://github.com/elastic/elasticsearch/pull/53770#discussion_r395537815", "createdAt": "2020-03-20T10:05:14Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformIndexerStats.java", "diffHunk": "@@ -73,8 +77,10 @@\n         LENIENT_PARSER.declareLong(constructorArg(), NUM_INVOCATIONS);\n         LENIENT_PARSER.declareLong(constructorArg(), INDEX_TIME_IN_MS);\n         LENIENT_PARSER.declareLong(constructorArg(), SEARCH_TIME_IN_MS);\n+        LENIENT_PARSER.declareLong(constructorArg(), PROCESSING_TIME_IN_MS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk2MTUzMA=="}, "originalCommit": {"oid": "75d12725668995cae626f3572b8187f8fbbadcbb"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODExNjU0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/transform/transforms/TransformStatsTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMTozNToxNlrOF4qk2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMDowMToxM1rOF5NmmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk2MjEzOA==", "bodyText": "We also need to be BWC with de-serializing an old stats document via XContent.", "url": "https://github.com/elastic/elasticsearch/pull/53770#discussion_r394962138", "createdAt": "2020-03-19T11:35:16Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/transform/transforms/TransformStatsTests.java", "diffHunk": "@@ -89,4 +89,32 @@ public void testBwcWith73() throws IOException {\n             }\n         }\n     }\n+\n+    public void testBwcWith76() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d12725668995cae626f3572b8187f8fbbadcbb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzNjAyNA==", "bodyText": "with true lenient parsing this is not necessary anymore", "url": "https://github.com/elastic/elasticsearch/pull/53770#discussion_r395536024", "createdAt": "2020-03-20T10:01:13Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/transform/transforms/TransformStatsTests.java", "diffHunk": "@@ -89,4 +89,32 @@ public void testBwcWith73() throws IOException {\n             }\n         }\n     }\n+\n+    public void testBwcWith76() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk2MjEzOA=="}, "originalCommit": {"oid": "75d12725668995cae626f3572b8187f8fbbadcbb"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzQxNzI3OnYy", "diffSide": "RIGHT", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/transform/transforms/TransformIndexerStats.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjozNDo1M1rOF6DYmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjozNDo1M1rOF6DYmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxNzE3OA==", "bodyText": "\u2764\ufe0f", "url": "https://github.com/elastic/elasticsearch/pull/53770#discussion_r396417178", "createdAt": "2020-03-23T12:34:53Z", "author": {"login": "benwtrent"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/transform/transforms/TransformIndexerStats.java", "diffHunk": "@@ -109,19 +149,44 @@ public boolean equals(Object other) {\n             && Objects.equals(this.numInvocations, that.numInvocations)\n             && Objects.equals(this.indexTime, that.indexTime)\n             && Objects.equals(this.searchTime, that.searchTime)\n+            && Objects.equals(this.processingTime, that.processingTime)\n             && Objects.equals(this.indexFailures, that.indexFailures)\n             && Objects.equals(this.searchFailures, that.searchFailures)\n             && Objects.equals(this.indexTotal, that.indexTotal)\n             && Objects.equals(this.searchTotal, that.searchTotal)\n+            && Objects.equals(this.processingTotal, that.processingTotal)\n             && Objects.equals(this.expAvgCheckpointDurationMs, that.expAvgCheckpointDurationMs)\n             && Objects.equals(this.expAvgDocumentsIndexed, that.expAvgDocumentsIndexed)\n             && Objects.equals(this.expAvgDocumentsProcessed, that.expAvgDocumentsProcessed);\n     }\n \n     @Override\n     public int hashCode() {\n-        return Objects.hash(numPages, numInputDocuments, numOuputDocuments, numInvocations,\n-            indexTime, searchTime, indexFailures, searchFailures, indexTotal, searchTotal,\n-            expAvgCheckpointDurationMs, expAvgDocumentsIndexed, expAvgDocumentsProcessed);\n+        return Objects.hash(\n+            numPages,\n+            numInputDocuments,\n+            numOuputDocuments,\n+            numInvocations,\n+            indexTime,\n+            searchTime,\n+            processingTime,\n+            indexFailures,\n+            searchFailures,\n+            indexTotal,\n+            searchTotal,\n+            processingTotal,\n+            expAvgCheckpointDurationMs,\n+            expAvgDocumentsIndexed,\n+            expAvgDocumentsProcessed\n+        );\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static <T> T unboxSafe(Object l, T default_value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c7cca7e41652ffe44b90d748d383931eb15b4d6"}, "originalPosition": 151}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4342, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}