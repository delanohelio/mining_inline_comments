{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MDI5NTUx", "number": 55683, "title": "Save memory in on aggs in async search", "bodyText": "This replaces a reference to the result of partially reducing\naggregations that async search keeps with a reference to the serialized\nform of the result of the partial reduction which we need to keep\nanyway.", "createdAt": "2020-04-23T16:21:38Z", "url": "https://github.com/elastic/elasticsearch/pull/55683", "merged": true, "mergeCommit": {"oid": "55874c94e47ed12d066cfeb03af761411e235b2b"}, "closed": true, "closedAt": "2020-04-28T16:54:30Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcafVSGgH2gAyNDA4MDI5NTUxOmI3ODk3NmJiYjc5NjNiNjMzYTlmYjZiZDZiOWViZDQwZjc0ODI0YTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccE1qqAH2gAyNDA4MDI5NTUxOjMxODRlM2Q0ZDcyOWJhZGNjMGRlOTVmOWJiOWNjNjZjZTBiMzQ5ZDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b78976bbb7963b633a9fb6bd6b9ebd40f74824a6", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/b78976bbb7963b633a9fb6bd6b9ebd40f74824a6", "committedDate": "2020-04-23T16:18:25Z", "message": "Save memory in on aggs in async search\n\nThis replaces a reference to the result of partially reducing\naggregations that async search keeps with a reference to the serialized\nform of the result of the partial reduction which we need to keep\nanyway."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01e583414fd37528f5037c7574bc390a48a6cb11", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/01e583414fd37528f5037c7574bc390a48a6cb11", "committedDate": "2020-04-23T16:59:35Z", "message": "Merge branch 'master' into delay_async_aggs_take_two"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8314fc8c766cf03fd0b70d6a5a476723587092d3", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/8314fc8c766cf03fd0b70d6a5a476723587092d3", "committedDate": "2020-04-23T17:38:28Z", "message": "Sneaky"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMjQ4NzIy", "url": "https://github.com/elastic/elasticsearch/pull/55683#pullrequestreview-400248722", "createdAt": "2020-04-24T20:26:36Z", "commit": {"oid": "8314fc8c766cf03fd0b70d6a5a476723587092d3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDoyNjozNlrOGLn_wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDoyODozMFrOGLoDbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg0MjgxOA==", "bodyText": "Why do we apply a top level reduce here ? We want it to be applied on demand (when the user gets a partial response) in order to avoid doing work when it's not needed. We should keep the pointer to the serialized aggs so that we don't double the memory in async search ?", "url": "https://github.com/elastic/elasticsearch/pull/55683#discussion_r414842818", "createdAt": "2020-04-24T20:26:36Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/AsyncSearchTask.java", "diffHunk": "@@ -354,32 +355,30 @@ protected void onListShards(List<SearchShard> shards, List<SearchShard> skipped,\n             // best effort to cancel expired tasks\n             checkCancellation();\n             searchResponse.compareAndSet(null,\n-                new MutableSearchResponse(shards.size() + skipped.size(), skipped.size(), clusters,\n-                    aggReduceContextSupplier, threadPool.getThreadContext()));\n+                new MutableSearchResponse(shards.size() + skipped.size(), skipped.size(), clusters, threadPool.getThreadContext()));\n             executeInitListeners();\n         }\n \n         @Override\n-        public void onPartialReduce(List<SearchShard> shards, TotalHits totalHits, InternalAggregations aggs, int reducePhase) {\n+        public void onPartialReduce(List<SearchShard> shards, TotalHits totalHits,\n+                DelayableWriteable.Serialized<InternalAggregations> aggregations, int reducePhase) {\n             // best effort to cancel expired tasks\n             checkCancellation();\n-            searchResponse.get().updatePartialResponse(shards.size(),\n-                new InternalSearchResponse(new SearchHits(SearchHits.EMPTY, totalHits, Float.NaN), aggs,\n-                    null, null, false, null, reducePhase), aggs == null);\n+            Supplier<InternalAggregations> reducedAggs = () -> aggregations == null ?\n+                    null : InternalAggregations.topLevelReduce(singletonList(aggregations.get()), aggReduceContextSupplier.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8314fc8c766cf03fd0b70d6a5a476723587092d3"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg0MzM3MQ==", "bodyText": "We should still apply the final reduce here.", "url": "https://github.com/elastic/elasticsearch/pull/55683#discussion_r414843371", "createdAt": "2020-04-24T20:27:44Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "diffHunk": "@@ -141,23 +130,35 @@ void addShardFailure(int shardIndex, ShardSearchFailure failure) {\n      * This method is synchronized to ensure that we don't perform final reduces concurrently.\n      */\n     synchronized AsyncSearchResponse toAsyncSearchResponse(AsyncSearchTask task, long expirationTime) {\n-        final SearchResponse resp;\n-        if (totalShards != -1) {\n-            if (sections.aggregations() != null && isFinalReduce == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8314fc8c766cf03fd0b70d6a5a476723587092d3"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg0Mzc1OQ==", "bodyText": "Where are we reducing the aggs ?", "url": "https://github.com/elastic/elasticsearch/pull/55683#discussion_r414843759", "createdAt": "2020-04-24T20:28:30Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/MutableSearchResponse.java", "diffHunk": "@@ -141,23 +130,35 @@ void addShardFailure(int shardIndex, ShardSearchFailure failure) {\n      * This method is synchronized to ensure that we don't perform final reduces concurrently.\n      */\n     synchronized AsyncSearchResponse toAsyncSearchResponse(AsyncSearchTask task, long expirationTime) {\n-        final SearchResponse resp;\n-        if (totalShards != -1) {\n-            if (sections.aggregations() != null && isFinalReduce == false) {\n-                InternalAggregations oldAggs = (InternalAggregations) sections.aggregations();\n-                InternalAggregations newAggs = topLevelReduce(singletonList(oldAggs), aggReduceContextSupplier.get());\n-                sections = new InternalSearchResponse(sections.hits(), newAggs, sections.suggest(),\n-                    null, sections.timedOut(), sections.terminatedEarly(), sections.getNumReducePhases());\n-                isFinalReduce = true;\n-            }\n-            long tookInMillis = TimeValue.timeValueNanos(System.nanoTime() - task.getStartTimeNanos()).getMillis();\n-            resp = new SearchResponse(sections, null, totalShards, successfulShards,\n-                skippedShards, tookInMillis, buildShardFailures(), clusters);\n-        } else {\n-            resp = null;\n+        SearchResponse response = findOrBuildResponse(task);\n+        return new AsyncSearchResponse(task.getSearchId().getEncoded(), response,\n+                failure, isPartial, frozen == false, task.getStartTime(), expirationTime);\n+    }\n+\n+    private SearchResponse findOrBuildResponse(AsyncSearchTask task) {\n+        if (finalResponse != null) {\n+            // We have a final response, use it.\n+            return finalResponse;\n+        }\n+        if (clusters == null) {\n+            // An error occurred before we got the shard list \n+            return null;\n         }\n-        return new AsyncSearchResponse(task.getSearchId().getEncoded(), resp, failure, isPartial,\n-            frozen == false, task.getStartTime(), expirationTime);\n+        /*\n+         * Build the response, reducing aggs if we haven't already and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8314fc8c766cf03fd0b70d6a5a476723587092d3"}, "originalPosition": 138}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMjU5ODkx", "url": "https://github.com/elastic/elasticsearch/pull/55683#pullrequestreview-400259891", "createdAt": "2020-04-24T20:46:29Z", "commit": {"oid": "8314fc8c766cf03fd0b70d6a5a476723587092d3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bec12053ec4ea827780874a78bde33ac06da4f64", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/bec12053ec4ea827780874a78bde33ac06da4f64", "committedDate": "2020-04-24T21:01:44Z", "message": "Merge branch 'master' into delay_async_aggs_take_two"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b32dd2edc573a8fad12a2d1fb97e0de320735662", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/b32dd2edc573a8fad12a2d1fb97e0de320735662", "committedDate": "2020-04-24T21:07:54Z", "message": "Protip: don't commit diff markers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ef2cc096b83ba3056596c6cd8ac796bf0720de5", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/3ef2cc096b83ba3056596c6cd8ac796bf0720de5", "committedDate": "2020-04-28T12:56:46Z", "message": "Fixup test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a5405684d7fcb67e8ce217444e7ff63b4ce5320", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/0a5405684d7fcb67e8ce217444e7ff63b4ce5320", "committedDate": "2020-04-28T13:45:28Z", "message": "I mean it this time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3184e3d4d729badcc0de95f9bb9cc66ce0b349d9", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/3184e3d4d729badcc0de95f9bb9cc66ce0b349d9", "committedDate": "2020-04-28T14:34:12Z", "message": "Merge branch 'master' into delay_async_aggs_take_two"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 530, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}