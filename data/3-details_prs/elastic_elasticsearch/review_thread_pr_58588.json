{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNTMxMTk2", "number": 58588, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMTozOTo1NFrOEJGgsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMTo0Njo0NFrOEJGnng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTc5MzE0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsResultProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMTozOTo1NFrOGpdu2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjozNDoxNVrOGpfMBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzMTkzMQ==", "bodyText": "Could you make the code more consistent by either:\n\ninlining this method again\n\nor\n\nmaking other result types (e.g.: OutlierDetectionStats) also have similar private methods\n\n?", "url": "https://github.com/elastic/elasticsearch/pull/58588#discussion_r446131931", "createdAt": "2020-06-26T11:39:54Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsResultProcessor.java", "diffHunk": "@@ -273,4 +272,9 @@ private void setAndReportFailure(Exception e) {\n         failure = \"error processing results; \" + e.getMessage();\n         auditor.error(analytics.getId(), \"Error processing results; \" + e.getMessage());\n     }\n+\n+    private void processMemoryUsage(MemoryUsage memoryUsage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92501581bd46fe96ee8f175e5c5dec3464ebf9ce"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1MDQyMA==", "bodyText": "Right, I extracted this so that I also add the audit message but then left it for a follow up PR. I don't think it's worth extracting methods when it's a single liner but it makes sense to do so when there are more lines. Would it be fine to do this in the follow up PR I'll do anyway? Just so we don't lose CI cycles on this one.", "url": "https://github.com/elastic/elasticsearch/pull/58588#discussion_r446150420", "createdAt": "2020-06-26T12:22:49Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsResultProcessor.java", "diffHunk": "@@ -273,4 +272,9 @@ private void setAndReportFailure(Exception e) {\n         failure = \"error processing results; \" + e.getMessage();\n         auditor.error(analytics.getId(), \"Error processing results; \" + e.getMessage());\n     }\n+\n+    private void processMemoryUsage(MemoryUsage memoryUsage) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzMTkzMQ=="}, "originalCommit": {"oid": "92501581bd46fe96ee8f175e5c5dec3464ebf9ce"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1NTc4Mw==", "bodyText": "SGTM", "url": "https://github.com/elastic/elasticsearch/pull/58588#discussion_r446155783", "createdAt": "2020-06-26T12:34:15Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsResultProcessor.java", "diffHunk": "@@ -273,4 +272,9 @@ private void setAndReportFailure(Exception e) {\n         failure = \"error processing results; \" + e.getMessage();\n         auditor.error(analytics.getId(), \"Error processing results; \" + e.getMessage());\n     }\n+\n+    private void processMemoryUsage(MemoryUsage memoryUsage) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzMTkzMQ=="}, "originalCommit": {"oid": "92501581bd46fe96ee8f175e5c5dec3464ebf9ce"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTgxMDg2OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-dfanalytics-stats.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMTo0Njo0NFrOGpd5xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoyMzoxOVrOGpe4Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzNDcyNQ==", "bodyText": "Is there an appropriate place in HLRC docs to be updated as well?\nI did not find any concrete fields in docs/java-rest/high-level/ml/get-data-frame-analytics-stats.asciidoc...", "url": "https://github.com/elastic/elasticsearch/pull/58588#discussion_r446134725", "createdAt": "2020-06-26T11:46:44Z", "author": {"login": "przemekwitek"}, "path": "docs/reference/ml/df-analytics/apis/get-dfanalytics-stats.asciidoc", "diffHunk": "@@ -435,6 +435,15 @@ job is started and memory usage is reported.\n (long)\n The number of bytes used at the highest peak of memory usage.\n \n+`status`::::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92501581bd46fe96ee8f175e5c5dec3464ebf9ce"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1MDY3OQ==", "bodyText": "Indeed, we don't list the properties of the objects that are returned in the stats response for HLRC. I'd leave it as is for now.", "url": "https://github.com/elastic/elasticsearch/pull/58588#discussion_r446150679", "createdAt": "2020-06-26T12:23:19Z", "author": {"login": "dimitris-athanasiou"}, "path": "docs/reference/ml/df-analytics/apis/get-dfanalytics-stats.asciidoc", "diffHunk": "@@ -435,6 +435,15 @@ job is started and memory usage is reported.\n (long)\n The number of bytes used at the highest peak of memory usage.\n \n+`status`::::", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzNDcyNQ=="}, "originalCommit": {"oid": "92501581bd46fe96ee8f175e5c5dec3464ebf9ce"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2330, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}