{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjc3NTM1", "number": 57869, "title": "Split internal distribution handling into separate internal plugin", "bodyText": "This PR was originally named \"Extract distribution definition from dist-download plugin\" but changed after the discussions and feedback I got on this below.\nThis PR extracts the internal distribution resolving logic out of the distribution download plugin. In general I think that for plugins used by external builds we should aim to not mix their logic with additional requirements of our internal builds and instead follow that pattern potentially with other plugins too.\nOne potential follow up might be to not even package internal only plugins and logic with build tools.\nThe motivation behind this is:\n\nMakes plugins used by external builds easier\nDoesn't mix internal logic only into general purpose plugins.\nThis makes testing different concerns of distribution resolution simpler.\nMake further improvements in handling distributions easier. I think there's potential for further improvements of the distribution handling (e.g. see #57730) or revisit the distribution type per project approach as the reason this was introduced (see \n  \n    \n      elasticsearch/distribution/packages/build.gradle\n    \n    \n        Lines 429 to 430\n      in\n      2899e03\n    \n    \n    \n    \n\n        \n          \n           // subprojects. We have subprojects because Gradle project substitutions \n        \n\n        \n          \n           // can only bind to the default configuration of a project \n        \n    \n  \n\n) seems not valid anymore as dependency substitution is not in use anymore.", "createdAt": "2020-06-09T09:58:44Z", "url": "https://github.com/elastic/elasticsearch/pull/57869", "merged": true, "mergeCommit": {"oid": "e289e7c4e75305785939ad448dd8a264484bfdb0"}, "closed": true, "closedAt": "2020-07-27T14:37:13Z", "author": {"login": "breskeby"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpn2HZgFqTQyNzM0OTkwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc47_utgH2gAyNDMxNjc3NTM1OmQwODJlMjFiYTUxMWE1YjZjOGYyMjgyZDFkMjM4ZjNkZGI3MTk4MTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzQ5OTAx", "url": "https://github.com/elastic/elasticsearch/pull/57869#pullrequestreview-427349901", "createdAt": "2020-06-09T16:42:23Z", "commit": {"oid": "b6f2ee0aac5548183f22802016721a17e2b7a8ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0MjoyM1rOGhTPcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0MjoyM1rOGhTPcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3MTQ0Mw==", "bodyText": "not used before this PR already", "url": "https://github.com/elastic/elasticsearch/pull/57869#discussion_r437571443", "createdAt": "2020-06-09T16:42:23Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/integTest/java/org/elasticsearch/gradle/DistributionDownloadPluginIT.java", "diffHunk": "@@ -164,14 +164,6 @@ private void checkService(\n         }\n     }\n \n-    private void assertFileDistro(String version, String type, String platform, String flavor, Boolean bundledJdk, String... sysProps)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f2ee0aac5548183f22802016721a17e2b7a8ad"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6f2ee0aac5548183f22802016721a17e2b7a8ad", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/b6f2ee0aac5548183f22802016721a17e2b7a8ad", "committedDate": "2020-06-09T10:26:34Z", "message": "Fix distribution download unit tests"}, "afterCommit": {"oid": "e00d2fdf0d01322cb9c8511c17101f42f2c3c07b", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/e00d2fdf0d01322cb9c8511c17101f42f2c3c07b", "committedDate": "2020-06-09T16:48:12Z", "message": "Fix distribution download unit tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e00d2fdf0d01322cb9c8511c17101f42f2c3c07b", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/e00d2fdf0d01322cb9c8511c17101f42f2c3c07b", "committedDate": "2020-06-09T16:48:12Z", "message": "Fix distribution download unit tests"}, "afterCommit": {"oid": "9a0279c9cd891085339cb61279553e805780108e", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/9a0279c9cd891085339cb61279553e805780108e", "committedDate": "2020-07-15T07:52:22Z", "message": "Split internal distribution logic into separate plugin"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb6663662d7e85b612f780069e73e480630e6b46", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/cb6663662d7e85b612f780069e73e480630e6b46", "committedDate": "2020-07-15T16:37:21Z", "message": "Assert internal plugin is only appied on internal build"}, "afterCommit": {"oid": "c8b77ef1e7007fb00a055619a3ee9f1d22022037", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/c8b77ef1e7007fb00a055619a3ee9f1d22022037", "committedDate": "2020-07-16T06:20:36Z", "message": "Assert internal plugin is only appied on internal build"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b13c2331c7e71aff8dbc9e1ba59d10047ac991f8", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/b13c2331c7e71aff8dbc9e1ba59d10047ac991f8", "committedDate": "2020-07-17T07:58:53Z", "message": "Polishing\n\n- extract common abstract test specification for plugin func tests\n- update javadocs"}, "afterCommit": {"oid": "b378d1f45d97a822e7c406dd4502be8733b68589", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/b378d1f45d97a822e7c406dd4502be8733b68589", "committedDate": "2020-07-17T08:38:42Z", "message": "Polishing\n\n- extract common abstract test specification for plugin func tests\n- update javadocs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNTQyMzgw", "url": "https://github.com/elastic/elasticsearch/pull/57869#pullrequestreview-450542380", "createdAt": "2020-07-17T10:16:57Z", "commit": {"oid": "b378d1f45d97a822e7c406dd4502be8733b68589"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMDoxNjo1OFrOGzNo6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMDoxNjo1OFrOGzNo6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM1NDAyNg==", "bodyText": "We kicked the can of differentiating between internal and external builds further to here for now.\nIs this plugin even considered to be used externally. Otherwise we can remove this differentiation here and just apply the internal plugin", "url": "https://github.com/elastic/elasticsearch/pull/57869#discussion_r456354026", "createdAt": "2020-07-17T10:16:58Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java", "diffHunk": "@@ -89,7 +90,11 @@\n     @Override\n     public void apply(Project project) {\n         project.getRootProject().getPluginManager().apply(DockerSupportPlugin.class);\n-        project.getPluginManager().apply(DistributionDownloadPlugin.class);\n+        if (BuildParams.isInternal()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b378d1f45d97a822e7c406dd4502be8733b68589"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNTQyNzg2", "url": "https://github.com/elastic/elasticsearch/pull/57869#pullrequestreview-450542786", "createdAt": "2020-07-17T10:17:44Z", "commit": {"oid": "b378d1f45d97a822e7c406dd4502be8733b68589"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMDoxNzo0NFrOGzNqNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMDoxNzo0NFrOGzNqNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM1NDM1OQ==", "bodyText": "We kicked the can of differentiating between internal and external builds further to here for now. We might want to apply similar internal / external plugin distinction later for that plugin too", "url": "https://github.com/elastic/elasticsearch/pull/57869#discussion_r456354359", "createdAt": "2020-07-17T10:17:44Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java", "diffHunk": "@@ -49,7 +52,13 @@\n \n     @Override\n     public void apply(Project project) {\n-        project.getPlugins().apply(DistributionDownloadPlugin.class);\n+        project.getRootProject().getPluginManager().apply(GlobalBuildInfoPlugin.class);\n+        if (BuildParams.isInternal()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b378d1f45d97a822e7c406dd4502be8733b68589"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b378d1f45d97a822e7c406dd4502be8733b68589", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/b378d1f45d97a822e7c406dd4502be8733b68589", "committedDate": "2020-07-17T08:38:42Z", "message": "Polishing\n\n- extract common abstract test specification for plugin func tests\n- update javadocs"}, "afterCommit": {"oid": "65ec3870558c9f021a39cfbeeaedbee137a5f63e", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/65ec3870558c9f021a39cfbeeaedbee137a5f63e", "committedDate": "2020-07-21T11:51:43Z", "message": "DistroTestPlugin is used internal only"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b26ba2d58d44d7db1d61591d5afb41979d92b2a5", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/b26ba2d58d44d7db1d61591d5afb41979d92b2a5", "committedDate": "2020-07-22T07:18:28Z", "message": "Split internal distribution logic into separate plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "066c68cbe09f8ea11507c9f154339e99e46b8da7", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/066c68cbe09f8ea11507c9f154339e99e46b8da7", "committedDate": "2020-07-22T07:18:28Z", "message": "Remove moved func test from DistributionDownloadPluginIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78b77ae82ef40adc8b1b2f046d35990a76634f11", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/78b77ae82ef40adc8b1b2f046d35990a76634f11", "committedDate": "2020-07-22T07:18:28Z", "message": "Ensure ordering is reproducible for registered distribution resolutions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "139b9c47981872069720b3fc974ae5c356bc039f", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/139b9c47981872069720b3fc974ae5c356bc039f", "committedDate": "2020-07-22T07:18:29Z", "message": "Fix ordering of dist resolution regisrations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d53e709f27982d71af32ebb6c1d31f5ead68db2b", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/d53e709f27982d71af32ebb6c1d31f5ead68db2b", "committedDate": "2020-07-22T07:18:29Z", "message": "Some cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54c5417e6b6183d1db709b181c0e5c07bd0469c5", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/54c5417e6b6183d1db709b181c0e5c07bd0469c5", "committedDate": "2020-07-22T07:18:29Z", "message": "Assert internal plugin is only appied on internal build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aa58bcf98d81ba56fc3218286175b2f77d702e1", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/8aa58bcf98d81ba56fc3218286175b2f77d702e1", "committedDate": "2020-07-22T07:18:29Z", "message": "Polishing\n\n- extract common abstract test specification for plugin func tests\n- update javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeb25536f48e35502d45ec9dc85dcbd66e2774d7", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/aeb25536f48e35502d45ec9dc85dcbd66e2774d7", "committedDate": "2020-07-22T07:18:30Z", "message": "DistroTestPlugin is used internal only"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65ec3870558c9f021a39cfbeeaedbee137a5f63e", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/65ec3870558c9f021a39cfbeeaedbee137a5f63e", "committedDate": "2020-07-21T11:51:43Z", "message": "DistroTestPlugin is used internal only"}, "afterCommit": {"oid": "aeb25536f48e35502d45ec9dc85dcbd66e2774d7", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/aeb25536f48e35502d45ec9dc85dcbd66e2774d7", "committedDate": "2020-07-22T07:18:30Z", "message": "DistroTestPlugin is used internal only"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTQ4Njcx", "url": "https://github.com/elastic/elasticsearch/pull/57869#pullrequestreview-454548671", "createdAt": "2020-07-23T22:56:09Z", "commit": {"oid": "aeb25536f48e35502d45ec9dc85dcbd66e2774d7"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo1NjowOVrOG2eSQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzowNDoxNVrOG2ecZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MjQ4Mw==", "bodyText": "This mixed snake-case/kebab-case naming is making my brain hurt. I think I originally made an objection to using snake-case when this plugin was introduced but didn't make much of a fuss. Alternatively could we make the resolutions configuration a config item under the elasticsearch_distributions extension rather than have two separate extensions?", "url": "https://github.com/elastic/elasticsearch/pull/57869#discussion_r459772483", "createdAt": "2020-07-23T22:56:09Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/DistributionDownloadPlugin.java", "diffHunk": "@@ -45,71 +41,83 @@\n import org.gradle.authentication.http.HttpHeaderAuthentication;\n \n import java.io.File;\n-import java.util.HashMap;\n+import java.util.Comparator;\n import java.util.Locale;\n-import java.util.Map;\n import java.util.concurrent.Callable;\n import java.util.function.Supplier;\n \n+import static org.elasticsearch.gradle.util.GradleUtils.projectDependency;\n import static org.elasticsearch.gradle.util.Util.capitalize;\n \n /**\n  * A plugin to manage getting and extracting distributions of Elasticsearch.\n  *\n- * The source of the distribution could be from a local snapshot, a locally built\n- * bwc snapshot, or the Elastic downloads service.\n+ * The plugin provides hooks to register custom distribution resolutions.\n+ * This plugin resolves distributions from the Elastic downloads service if\n+ * no registered resolution strategy can resolve to a distribution.\n  */\n public class DistributionDownloadPlugin implements Plugin<Project> {\n \n+    static final String RESOLUTION_CONTAINER_NAME = \"elasticsearch_distributions-resolutions\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb25536f48e35502d45ec9dc85dcbd66e2774d7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MzAyMg==", "bodyText": "Should this be \"bwc\"?", "url": "https://github.com/elastic/elasticsearch/pull/57869#discussion_r459773022", "createdAt": "2020-07-23T22:57:48Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionDownloadPlugin.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.internal;\n+\n+import org.elasticsearch.gradle.Architecture;\n+import org.elasticsearch.gradle.BwcVersions;\n+import org.elasticsearch.gradle.DistributionDownloadPlugin;\n+import org.elasticsearch.gradle.DistributionResolution;\n+import org.elasticsearch.gradle.ElasticsearchDistribution;\n+import org.elasticsearch.gradle.Version;\n+import org.elasticsearch.gradle.VersionProperties;\n+import org.elasticsearch.gradle.info.BuildParams;\n+import org.elasticsearch.gradle.info.GlobalBuildInfoPlugin;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+\n+import static org.elasticsearch.gradle.util.GradleUtils.projectDependency;\n+\n+/**\n+ * An internal elasticsearch build plugin that registers additional\n+ * distribution resolution strategies to the 'elasticsearch.download-distribution' plugin\n+ * to resolve distributions from a local snapshot or a locally built bwc snapshot.\n+ */\n+public class InternalDistributionDownloadPlugin implements Plugin<Project> {\n+\n+    private BwcVersions bwcVersions = null;\n+\n+    @Override\n+    public void apply(Project project) {\n+        // this is needed for isInternal\n+        project.getRootProject().getPluginManager().apply(GlobalBuildInfoPlugin.class);\n+        if (!BuildParams.isInternal()) {\n+            throw new GradleException(\n+                \"Plugin 'elasticsearch.internal-distribution-download' is not supported. \"\n+                    + \"Use 'elasticsearch.distribution-download' plugin instead.\"\n+            );\n+        }\n+        project.getPluginManager().apply(DistributionDownloadPlugin.class);\n+        this.bwcVersions = BuildParams.getBwcVersions();\n+        registerInternalDistributionResolutions(DistributionDownloadPlugin.getRegistrationsContainer(project));\n+    }\n+\n+    /**\n+     * Registers internal distribution resolutions.\n+     *\n+     * Elasticsearch distributions are resolved as project dependencies either representing\n+     * the current version pointing to a project either under `:distribution:archives` or :distribution:packages`.\n+     *\n+     * BWC versions are resolved as project to projects under `:distribution:bwc`.\n+     * */\n+    private void registerInternalDistributionResolutions(NamedDomainObjectContainer<DistributionResolution> resolutions) {\n+\n+        resolutions.register(\"localBuild\", distributionResolution -> distributionResolution.setResolver((project, distribution) -> {\n+            if (VersionProperties.getElasticsearch().equals(distribution.getVersion())) {\n+                // non-external project, so depend on local build\n+                return projectDependency(project, distributionProjectPath(distribution), \"default\");\n+            }\n+            return null;\n+        }));\n+\n+        resolutions.register(\"bwb\", distributionResolution -> distributionResolution.setResolver((project, distribution) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb25536f48e35502d45ec9dc85dcbd66e2774d7"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MzgzOA==", "bodyText": "Should we add a message here so that if folks incorrectly configure a snapshot bwc distribution w/o bundled JDK that we return an error as such?", "url": "https://github.com/elastic/elasticsearch/pull/57869#discussion_r459773838", "createdAt": "2020-07-23T23:00:15Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionDownloadPlugin.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.internal;\n+\n+import org.elasticsearch.gradle.Architecture;\n+import org.elasticsearch.gradle.BwcVersions;\n+import org.elasticsearch.gradle.DistributionDownloadPlugin;\n+import org.elasticsearch.gradle.DistributionResolution;\n+import org.elasticsearch.gradle.ElasticsearchDistribution;\n+import org.elasticsearch.gradle.Version;\n+import org.elasticsearch.gradle.VersionProperties;\n+import org.elasticsearch.gradle.info.BuildParams;\n+import org.elasticsearch.gradle.info.GlobalBuildInfoPlugin;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+\n+import static org.elasticsearch.gradle.util.GradleUtils.projectDependency;\n+\n+/**\n+ * An internal elasticsearch build plugin that registers additional\n+ * distribution resolution strategies to the 'elasticsearch.download-distribution' plugin\n+ * to resolve distributions from a local snapshot or a locally built bwc snapshot.\n+ */\n+public class InternalDistributionDownloadPlugin implements Plugin<Project> {\n+\n+    private BwcVersions bwcVersions = null;\n+\n+    @Override\n+    public void apply(Project project) {\n+        // this is needed for isInternal\n+        project.getRootProject().getPluginManager().apply(GlobalBuildInfoPlugin.class);\n+        if (!BuildParams.isInternal()) {\n+            throw new GradleException(\n+                \"Plugin 'elasticsearch.internal-distribution-download' is not supported. \"\n+                    + \"Use 'elasticsearch.distribution-download' plugin instead.\"\n+            );\n+        }\n+        project.getPluginManager().apply(DistributionDownloadPlugin.class);\n+        this.bwcVersions = BuildParams.getBwcVersions();\n+        registerInternalDistributionResolutions(DistributionDownloadPlugin.getRegistrationsContainer(project));\n+    }\n+\n+    /**\n+     * Registers internal distribution resolutions.\n+     *\n+     * Elasticsearch distributions are resolved as project dependencies either representing\n+     * the current version pointing to a project either under `:distribution:archives` or :distribution:packages`.\n+     *\n+     * BWC versions are resolved as project to projects under `:distribution:bwc`.\n+     * */\n+    private void registerInternalDistributionResolutions(NamedDomainObjectContainer<DistributionResolution> resolutions) {\n+\n+        resolutions.register(\"localBuild\", distributionResolution -> distributionResolution.setResolver((project, distribution) -> {\n+            if (VersionProperties.getElasticsearch().equals(distribution.getVersion())) {\n+                // non-external project, so depend on local build\n+                return projectDependency(project, distributionProjectPath(distribution), \"default\");\n+            }\n+            return null;\n+        }));\n+\n+        resolutions.register(\"bwb\", distributionResolution -> distributionResolution.setResolver((project, distribution) -> {\n+            BwcVersions.UnreleasedVersionInfo unreleasedInfo = bwcVersions.unreleasedInfo(Version.fromString(distribution.getVersion()));\n+            if (unreleasedInfo != null) {\n+                assert distribution.getBundledJdk();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb25536f48e35502d45ec9dc85dcbd66e2774d7"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3NDYwNw==", "bodyText": "Or perhaps it doesn't really matter since we don't really expect folks to configure this in build scripts?", "url": "https://github.com/elastic/elasticsearch/pull/57869#discussion_r459774607", "createdAt": "2020-07-23T23:02:46Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/DistributionDownloadPlugin.java", "diffHunk": "@@ -45,71 +41,83 @@\n import org.gradle.authentication.http.HttpHeaderAuthentication;\n \n import java.io.File;\n-import java.util.HashMap;\n+import java.util.Comparator;\n import java.util.Locale;\n-import java.util.Map;\n import java.util.concurrent.Callable;\n import java.util.function.Supplier;\n \n+import static org.elasticsearch.gradle.util.GradleUtils.projectDependency;\n import static org.elasticsearch.gradle.util.Util.capitalize;\n \n /**\n  * A plugin to manage getting and extracting distributions of Elasticsearch.\n  *\n- * The source of the distribution could be from a local snapshot, a locally built\n- * bwc snapshot, or the Elastic downloads service.\n+ * The plugin provides hooks to register custom distribution resolutions.\n+ * This plugin resolves distributions from the Elastic downloads service if\n+ * no registered resolution strategy can resolve to a distribution.\n  */\n public class DistributionDownloadPlugin implements Plugin<Project> {\n \n+    static final String RESOLUTION_CONTAINER_NAME = \"elasticsearch_distributions-resolutions\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MjQ4Mw=="}, "originalCommit": {"oid": "aeb25536f48e35502d45ec9dc85dcbd66e2774d7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3NTA3OQ==", "bodyText": "Nice. At least for now until we physically separate this code such that we don't publish internal stuff this seems like a good pattern to ensure that folks don't \"accidentally\" leverage internal plugins.", "url": "https://github.com/elastic/elasticsearch/pull/57869#discussion_r459775079", "createdAt": "2020-07-23T23:04:15Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionDownloadPlugin.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.internal;\n+\n+import org.elasticsearch.gradle.Architecture;\n+import org.elasticsearch.gradle.BwcVersions;\n+import org.elasticsearch.gradle.DistributionDownloadPlugin;\n+import org.elasticsearch.gradle.DistributionResolution;\n+import org.elasticsearch.gradle.ElasticsearchDistribution;\n+import org.elasticsearch.gradle.Version;\n+import org.elasticsearch.gradle.VersionProperties;\n+import org.elasticsearch.gradle.info.BuildParams;\n+import org.elasticsearch.gradle.info.GlobalBuildInfoPlugin;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+\n+import static org.elasticsearch.gradle.util.GradleUtils.projectDependency;\n+\n+/**\n+ * An internal elasticsearch build plugin that registers additional\n+ * distribution resolution strategies to the 'elasticsearch.download-distribution' plugin\n+ * to resolve distributions from a local snapshot or a locally built bwc snapshot.\n+ */\n+public class InternalDistributionDownloadPlugin implements Plugin<Project> {\n+\n+    private BwcVersions bwcVersions = null;\n+\n+    @Override\n+    public void apply(Project project) {\n+        // this is needed for isInternal\n+        project.getRootProject().getPluginManager().apply(GlobalBuildInfoPlugin.class);\n+        if (!BuildParams.isInternal()) {\n+            throw new GradleException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb25536f48e35502d45ec9dc85dcbd66e2774d7"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d082e21ba511a5b6c8f2282d1d238f3ddb719818", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/d082e21ba511a5b6c8f2282d1d238f3ddb719818", "committedDate": "2020-07-27T06:39:51Z", "message": "Apply review feedback\n\n- rename resolve strategy container\n- fix naming of bwc resolving strategy\n- provide proper failure if unexpected non jdk bundled bwc version is requested"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 813, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}