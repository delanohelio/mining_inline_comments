{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NjEzMTU3", "number": 51386, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjowNTo1MlrODaiJLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjowNTo1MlrODaiJLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTQ4OTczOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/slm/SnapshotLifecycleRestIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjowNTo1MlrOFhie8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxODowNjowNFrOFhl4JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxMjMwNA==", "bodyText": "It's very hard for me to understand this, mix of streams, Optional and nested checks with streams doesn't work well for me.\nI'd rather split it into separate calls which is more explicit and it makes this code easier to digest:\nMap<String, Object> snapResponse;\ntry {\n    Map<String, Object> responseMap = ((List<Map<String, Object>>) snapshotResponseMap.get(\"responses\")).get(0);\n    List<Map<String, Object>> snapshots = (List<Map<String, Object>>) responseMap.get(\"snapshots\");\n    assertTrue(snapshots.stream().anyMatch(s -> s.containsKey(\"snapshot\") && s.get(\"snapshot\").toString().startsWith(\"snap-\")));\n    snapResponse = snapshots.get(0);\n} catch (Exception e){\n    throw new AssertionError(\"failed to find snapshot response in \" + snapshotResponseMap, e);\n}\nassertThat(snapResponse.get(\"indices\"), equalTo(Collections.singletonList(indexName)));\nMap<String, Object> metadata = (Map<String, Object>) snapResponse.get(\"metadata\");\nIf you go with above, please check if I got it right, as I said it's hard for me to follow.", "url": "https://github.com/elastic/elasticsearch/pull/51386#discussion_r370712304", "createdAt": "2020-01-24T16:05:52Z", "author": {"login": "probakowski"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/slm/SnapshotLifecycleRestIT.java", "diffHunk": "@@ -108,9 +109,11 @@ public void testFullPolicySnapshot() throws Exception {\n             List<Map<String, Object>> snapResponse = ((List<Map<String, Object>>) snapshotResponseMap.get(\"responses\")).stream()\n                 .findFirst()\n                 .map(m -> (List<Map<String, Object>>) m.get(\"snapshots\"))\n+                .filter(allRepos -> allRepos.stream()\n+                    .anyMatch(snapMap -> Optional.ofNullable((String) snapMap.get(\"snapshot\"))\n+                        .map(snapName -> snapName.startsWith(\"snap-\"))\n+                        .orElse(false)))\n                 .orElseThrow(() -> new AssertionError(\"failed to find snapshot response in \" + snapshotResponseMap));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7db7add948b174d382248eb50a9b3d03a292e70"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NzkwOQ==", "bodyText": "Sure, I went ahead and changed it.", "url": "https://github.com/elastic/elasticsearch/pull/51386#discussion_r370767909", "createdAt": "2020-01-24T18:06:04Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/slm/SnapshotLifecycleRestIT.java", "diffHunk": "@@ -108,9 +109,11 @@ public void testFullPolicySnapshot() throws Exception {\n             List<Map<String, Object>> snapResponse = ((List<Map<String, Object>>) snapshotResponseMap.get(\"responses\")).stream()\n                 .findFirst()\n                 .map(m -> (List<Map<String, Object>>) m.get(\"snapshots\"))\n+                .filter(allRepos -> allRepos.stream()\n+                    .anyMatch(snapMap -> Optional.ofNullable((String) snapMap.get(\"snapshot\"))\n+                        .map(snapName -> snapName.startsWith(\"snap-\"))\n+                        .orElse(false)))\n                 .orElseThrow(() -> new AssertionError(\"failed to find snapshot response in \" + snapshotResponseMap));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxMjMwNA=="}, "originalCommit": {"oid": "c7db7add948b174d382248eb50a9b3d03a292e70"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4360, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}