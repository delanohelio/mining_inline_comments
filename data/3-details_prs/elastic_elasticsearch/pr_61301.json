{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NzM5MzA3", "number": 61301, "title": "Migrate some field mapper tests to ESTestCase", "bodyText": "This switches a few tests for field mappers from ESSingleNodeTestCase\nto ESTestCase because, in general, we prefer to avoid\nESSingleNodeTestCase when we can because it is slow and \"big\". \"Big\"\nhere means that it pulls in an entire node, making it difficult to\nreason about what you are testing.", "createdAt": "2020-08-18T20:48:24Z", "url": "https://github.com/elastic/elasticsearch/pull/61301", "merged": true, "mergeCommit": {"oid": "622ac752979546aac9e1ff6b31e015060e7dbdeb"}, "closed": true, "closedAt": "2020-08-19T15:56:56Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAMaCQAH2gAyNDY5NzM5MzA3Ojg5ZmYzN2JlZGY2MmRkZDFiZmZkZjI5NWE5ZWMxMDhjNDI4MzdkMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAcMA7AH2gAyNDY5NzM5MzA3OmEwZWJjNWYyNTg0NDQwN2Y1MWI5Mzk3NjZjYWU0ZDBiNTVkOGI1NDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "89ff37bedf62ddd1bffdf295a9ec108c42837d09", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/89ff37bedf62ddd1bffdf295a9ec108c42837d09", "committedDate": "2020-08-18T19:44:32Z", "message": "Migrate some field mapper tests to ESTestCase\n\nThis switches a few tests for field mappers from `ESSingleNodeTestCase`\nto `ESTestCase` because, in general, we prefer to avoid\n`ESSingleNodeTestCase` when we can because it is slow and \"big\". \"Big\"\nhere means that it pulls in an entire node, making it difficult to\nreason about what you are testing."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODE5ODgw", "url": "https://github.com/elastic/elasticsearch/pull/61301#pullrequestreview-469819880", "createdAt": "2020-08-18T20:49:01Z", "commit": {"oid": "89ff37bedf62ddd1bffdf295a9ec108c42837d09"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDo0OTowMVrOHCmJuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDo1Mjo0M1rOHCmRRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ4NDI4MA==", "bodyText": "I'm hoping that we'll migrate to this one and remove the 2 in the name.", "url": "https://github.com/elastic/elasticsearch/pull/61301#discussion_r472484280", "createdAt": "2020-08-18T20:49:01Z", "author": {"login": "nik9000"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldMapperTestCase2.java", "diffHunk": "@@ -0,0 +1,227 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.mapper;\n+\n+import org.apache.lucene.analysis.core.KeywordAnalyzer;\n+import org.apache.lucene.analysis.core.WhitespaceAnalyzer;\n+import org.apache.lucene.analysis.standard.StandardAnalyzer;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.index.analysis.AnalyzerScope;\n+import org.elasticsearch.index.analysis.NamedAnalyzer;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.BiConsumer;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+/**\n+ * Base class for testing {@link FieldMapper}s.\n+ * @param <T> builder for the mapper to test\n+ */\n+public abstract class FieldMapperTestCase2<T extends FieldMapper.Builder<?>> extends MapperTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89ff37bedf62ddd1bffdf295a9ec108c42837d09"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ4NDY4MQ==", "bodyText": "Or we'll drop this entirely when we move to ParameterizedFieldMapper. Tests of those depend on MapperTestCase directly.", "url": "https://github.com/elastic/elasticsearch/pull/61301#discussion_r472484681", "createdAt": "2020-08-18T20:49:49Z", "author": {"login": "nik9000"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldMapperTestCase2.java", "diffHunk": "@@ -0,0 +1,227 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.mapper;\n+\n+import org.apache.lucene.analysis.core.KeywordAnalyzer;\n+import org.apache.lucene.analysis.core.WhitespaceAnalyzer;\n+import org.apache.lucene.analysis.standard.StandardAnalyzer;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.index.analysis.AnalyzerScope;\n+import org.elasticsearch.index.analysis.NamedAnalyzer;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.BiConsumer;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+/**\n+ * Base class for testing {@link FieldMapper}s.\n+ * @param <T> builder for the mapper to test\n+ */\n+public abstract class FieldMapperTestCase2<T extends FieldMapper.Builder<?>> extends MapperTestCase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ4NDI4MA=="}, "originalCommit": {"oid": "89ff37bedf62ddd1bffdf295a9ec108c42837d09"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ4NjIxMw==", "bodyText": "MapperService seems good enough for most of the tests. Most tests actually just want DocumentMapper which it contains. MapperService is useful for testing merging mappings though.", "url": "https://github.com/elastic/elasticsearch/pull/61301#discussion_r472486213", "createdAt": "2020-08-18T20:52:43Z", "author": {"login": "nik9000"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/MapperTestCase.java", "diffHunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.mapper;\n+\n+import org.apache.lucene.analysis.standard.StandardAnalyzer;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.CheckedConsumer;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.compress.CompressedXContent;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.elasticsearch.common.xcontent.XContentHelper;\n+import org.elasticsearch.index.IndexSettings;\n+import org.elasticsearch.index.analysis.AnalyzerScope;\n+import org.elasticsearch.index.analysis.IndexAnalyzers;\n+import org.elasticsearch.index.analysis.NamedAnalyzer;\n+import org.elasticsearch.index.mapper.MapperService.MergeReason;\n+import org.elasticsearch.index.similarity.SimilarityService;\n+import org.elasticsearch.indices.IndicesModule;\n+import org.elasticsearch.indices.mapper.MapperRegistry;\n+import org.elasticsearch.plugins.MapperPlugin;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.script.ScriptService;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import static java.util.Collections.emptyList;\n+import static java.util.Collections.emptyMap;\n+import static java.util.stream.Collectors.toList;\n+import static org.hamcrest.Matchers.containsString;\n+\n+/**\n+ * Base class for testing {@link Mapper}s.\n+ */\n+public abstract class MapperTestCase extends ESTestCase {\n+    protected static final Settings SETTINGS = Settings.builder().put(\"index.version.created\", Version.CURRENT).build();\n+\n+    protected Collection<? extends Plugin> getPlugins() {\n+        return emptyList();\n+    }\n+\n+    protected Settings getIndexSettings() {\n+        return Settings.EMPTY;\n+    }\n+\n+    protected final String randomIndexOptions() {\n+        return randomFrom(new String[] { \"docs\", \"freqs\", \"positions\", \"offsets\" });\n+    }\n+\n+    protected final MapperService createIndex(XContentBuilder mappings) throws IOException {\n+        return createIndex(getIndexSettings(), mappings);\n+    }\n+\n+    protected IndexAnalyzers createIndexAnalyzers() {\n+        return new IndexAnalyzers(\n+            Map.of(\"default\", new NamedAnalyzer(\"default\", AnalyzerScope.INDEX, new StandardAnalyzer())),\n+            Map.of(),\n+            Map.of()\n+        );\n+    }\n+\n+    /**\n+     * Create the {@link MapperService} for an index.\n+     */\n+    protected final MapperService createIndex(Settings settings, XContentBuilder mapping) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89ff37bedf62ddd1bffdf295a9ec108c42837d09"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMjY1NzUz", "url": "https://github.com/elastic/elasticsearch/pull/61301#pullrequestreview-470265753", "createdAt": "2020-08-19T09:06:05Z", "commit": {"oid": "89ff37bedf62ddd1bffdf295a9ec108c42837d09"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTowNjowNVrOHC-OaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTowNjowNVrOHC-OaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg3ODY5Ng==", "bodyText": "Can we call this createMapperService instead?  And maybe add a createDocumentMapper sugar method as well, given that the vast majority of callers immediately call documentMapper()?", "url": "https://github.com/elastic/elasticsearch/pull/61301#discussion_r472878696", "createdAt": "2020-08-19T09:06:05Z", "author": {"login": "romseygeek"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/MapperTestCase.java", "diffHunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.mapper;\n+\n+import org.apache.lucene.analysis.standard.StandardAnalyzer;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.CheckedConsumer;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.compress.CompressedXContent;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.elasticsearch.common.xcontent.XContentHelper;\n+import org.elasticsearch.index.IndexSettings;\n+import org.elasticsearch.index.analysis.AnalyzerScope;\n+import org.elasticsearch.index.analysis.IndexAnalyzers;\n+import org.elasticsearch.index.analysis.NamedAnalyzer;\n+import org.elasticsearch.index.mapper.MapperService.MergeReason;\n+import org.elasticsearch.index.similarity.SimilarityService;\n+import org.elasticsearch.indices.IndicesModule;\n+import org.elasticsearch.indices.mapper.MapperRegistry;\n+import org.elasticsearch.plugins.MapperPlugin;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.script.ScriptService;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import static java.util.Collections.emptyList;\n+import static java.util.Collections.emptyMap;\n+import static java.util.stream.Collectors.toList;\n+import static org.hamcrest.Matchers.containsString;\n+\n+/**\n+ * Base class for testing {@link Mapper}s.\n+ */\n+public abstract class MapperTestCase extends ESTestCase {\n+    protected static final Settings SETTINGS = Settings.builder().put(\"index.version.created\", Version.CURRENT).build();\n+\n+    protected Collection<? extends Plugin> getPlugins() {\n+        return emptyList();\n+    }\n+\n+    protected Settings getIndexSettings() {\n+        return Settings.EMPTY;\n+    }\n+\n+    protected final String randomIndexOptions() {\n+        return randomFrom(new String[] { \"docs\", \"freqs\", \"positions\", \"offsets\" });\n+    }\n+\n+    protected final MapperService createIndex(XContentBuilder mappings) throws IOException {\n+        return createIndex(getIndexSettings(), mappings);\n+    }\n+\n+    protected IndexAnalyzers createIndexAnalyzers() {\n+        return new IndexAnalyzers(\n+            Map.of(\"default\", new NamedAnalyzer(\"default\", AnalyzerScope.INDEX, new StandardAnalyzer())),\n+            Map.of(),\n+            Map.of()\n+        );\n+    }\n+\n+    /**\n+     * Create the {@link MapperService} for an index.\n+     */\n+    protected final MapperService createIndex(Settings settings, XContentBuilder mapping) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ4NjIxMw=="}, "originalCommit": {"oid": "89ff37bedf62ddd1bffdf295a9ec108c42837d09"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5035cfd2a295c355c08d58249ad679a9b212aa30", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/5035cfd2a295c355c08d58249ad679a9b212aa30", "committedDate": "2020-08-19T13:44:40Z", "message": "Iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0ebc5f25844407f51b939766cae4d0b55d8b540", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/a0ebc5f25844407f51b939766cae4d0b55d8b540", "committedDate": "2020-08-19T14:07:42Z", "message": "Merge branch 'master' into mapper_test_case"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4748, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}