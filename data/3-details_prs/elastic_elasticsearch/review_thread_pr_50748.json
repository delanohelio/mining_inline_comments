{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNTI0OTY5", "number": 50748, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNTo1MTo0N1rODWlfWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNTo1MTo0N1rODWlfWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDA5NDk3OnYy", "diffSide": "RIGHT", "path": "docs/reference/analysis/tokenfilters/unique-tokenfilter.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNTo1MTo0N1rOFbbQkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwOTowMToyN1rOFidSrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwMjQ4MQ==", "bodyText": "@romseygeek Do you know if there's any reason for users to prefer one of these filters over another? If so, I can note that here.", "url": "https://github.com/elastic/elasticsearch/pull/50748#discussion_r364302481", "createdAt": "2020-01-08T15:51:47Z", "author": {"login": "jrodewig"}, "path": "docs/reference/analysis/tokenfilters/unique-tokenfilter.asciidoc", "diffHunk": "@@ -4,7 +4,147 @@\n <titleabbrev>Unique</titleabbrev>\n ++++\n \n-The `unique` token filter can be used to only index unique tokens during\n-analysis. By default it is applied on all the token stream. If\n-`only_on_same_position` is set to `true`, it will only remove duplicate\n-tokens on the same position.\n+Removes duplicate tokens from a stream. For example, you can use the `unique`\n+filter to change `the lazy lazy dog` to `the lazy dog`.\n+\n+If the `only_on_same_position` parameter is set to `true`, the `unique` filter\n+removes only duplicate tokens _in the same position_.\n+\n+[NOTE]\n+====\n+When `only_on_same_position` is `true`, the `unique` filter works the same as\n+<<analysis-remove-duplicates-tokenfilter,`remove_duplicates`>> filter.\n+====", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44086c42cabc80350b6bc2a27265dfec7c119347"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3NTgyMQ==", "bodyText": "Sorry, missed this! unique has the ability to work over an entire token stream, while remove_duplicates looks only at consecutive tokens, but other than that they are identical.", "url": "https://github.com/elastic/elasticsearch/pull/50748#discussion_r371675821", "createdAt": "2020-01-28T09:01:27Z", "author": {"login": "romseygeek"}, "path": "docs/reference/analysis/tokenfilters/unique-tokenfilter.asciidoc", "diffHunk": "@@ -4,7 +4,147 @@\n <titleabbrev>Unique</titleabbrev>\n ++++\n \n-The `unique` token filter can be used to only index unique tokens during\n-analysis. By default it is applied on all the token stream. If\n-`only_on_same_position` is set to `true`, it will only remove duplicate\n-tokens on the same position.\n+Removes duplicate tokens from a stream. For example, you can use the `unique`\n+filter to change `the lazy lazy dog` to `the lazy dog`.\n+\n+If the `only_on_same_position` parameter is set to `true`, the `unique` filter\n+removes only duplicate tokens _in the same position_.\n+\n+[NOTE]\n+====\n+When `only_on_same_position` is `true`, the `unique` filter works the same as\n+<<analysis-remove-duplicates-tokenfilter,`remove_duplicates`>> filter.\n+====", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwMjQ4MQ=="}, "originalCommit": {"oid": "44086c42cabc80350b6bc2a27265dfec7c119347"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4772, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}