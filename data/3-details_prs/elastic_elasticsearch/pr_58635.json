{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwOTU3MjQw", "number": 58635, "title": "EQL: Introduce support for sequence maxspan", "bodyText": "Still in draft while sorting out the tests situation", "createdAt": "2020-06-27T20:16:51Z", "url": "https://github.com/elastic/elasticsearch/pull/58635", "merged": true, "mergeCommit": {"oid": "747c3592244192a2e25a092f62aec91a899afc83"}, "closed": true, "closedAt": "2020-06-29T18:30:16Z", "author": {"login": "costin"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcvZMIaAH2gAyNDQwOTU3MjQwOmQ4YWI0MjlmZTM3Yzk3ZTc0YTBkZjE0ZDliZGU3M2ZiZTI3MmVkYzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwDyHTAH2gAyNDQwOTU3MjQwOjlkNWFlMzMxOGNkYThkOGEyMTU3MzAzZTk3YmM5OGMzYzM2NmM2MjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d8ab429fe37c97e74a0df14d9bde73fbe272edc6", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/d8ab429fe37c97e74a0df14d9bde73fbe272edc6", "committedDate": "2020-06-27T15:01:24Z", "message": "Encapsulate timestamp and timebreaker into Ordinal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a1593f3752b5e082722fddb49939bec1ef2bc09", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/3a1593f3752b5e082722fddb49939bec1ef2bc09", "committedDate": "2020-06-27T20:08:38Z", "message": "Stop descending from leaking inside the runtime"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1c310a2f1e9f02302225336c67455ebe5ab63eb", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/f1c310a2f1e9f02302225336c67455ebe5ab63eb", "committedDate": "2020-06-27T20:08:39Z", "message": "Add maxspan check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a98bcba2ec62767465577b937980f68e1978265c", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/a98bcba2ec62767465577b937980f68e1978265c", "committedDate": "2020-06-27T20:08:39Z", "message": "Enable integration tests with maxspan"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzIzNTE5", "url": "https://github.com/elastic/elasticsearch/pull/58635#pullrequestreview-438723519", "createdAt": "2020-06-27T20:40:55Z", "commit": {"oid": "a98bcba2ec62767465577b937980f68e1978265c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QyMDo0MDo1NlrOGp4MEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QyMDo0MDo1NlrOGp4MEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU2NTM5NQ==", "bodyText": "@rw-access this test and the rest should not return any results; any maxspan lower than 15h would not match a sequence.\nEntries 67 and 68 have the same timestamp (131509374395921780) but 69 has a timestamp of 131509374446778110 meaning the distance between the beginning of the sequence and the 69 is:\n131509374446778110 - 131509374395921780 = 50856330 millis or ~14h.\nAm I missing something?", "url": "https://github.com/elastic/elasticsearch/pull/58635#discussion_r446565395", "createdAt": "2020-06-27T20:40:56Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/qa/common/src/main/resources/test_queries_unsupported.toml", "diffHunk": "@@ -224,18 +224,6 @@ sequence\n '''\n expected_event_ids  = [1, 2, 2, 3]\n \n-\n-[[queries]]\n-query = '''\n-sequence with maxspan=1d\n-  [file where event_subtype_full == \"file_create_event\"] by file_path\n-  [process where opcode == 1] by process_path\n-  [process where opcode == 2] by process_path\n-  [file where event_subtype_full == \"file_delete_event\"] by file_path\n-| head 4\n-| tail 2'''\n-expected_event_ids  = [67, 68, 69, 70, 72, 73, 74, 75]\n-\n [[queries]]\n query = '''\n sequence with maxspan=1h", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a98bcba2ec62767465577b937980f68e1978265c"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b2a97e07697c147335efaa1b5481401674ddf29", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/5b2a97e07697c147335efaa1b5481401674ddf29", "committedDate": "2020-06-28T10:57:22Z", "message": "Convert windows filetime to unix time"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTA4NjAw", "url": "https://github.com/elastic/elasticsearch/pull/58635#pullrequestreview-439108600", "createdAt": "2020-06-29T12:50:00Z", "commit": {"oid": "5b2a97e07697c147335efaa1b5481401674ddf29"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjo1MDowMVrOGqPXvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzozMDo0NlrOGqRDEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0NTIxNQ==", "bodyText": "Why did you change this?", "url": "https://github.com/elastic/elasticsearch/pull/58635#discussion_r446945215", "createdAt": "2020-06-29T12:50:01Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/qa/common/src/main/resources/mapping-default.json", "diffHunk": "@@ -46,8 +46,7 @@\n             \"type\" : \"date\"\n         },\n         \"@timestamp\" : {\n-            \"type\" : \"alias\",\n-            \"path\" : \"timestamp\"\n+            \"type\" : \"date\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b2a97e07697c147335efaa1b5481401674ddf29"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2NDUyOQ==", "bodyText": "iterable sounds better.", "url": "https://github.com/elastic/elasticsearch/pull/58635#discussion_r446964529", "createdAt": "2020-06-29T13:19:27Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/assembler/Criterion.java", "diffHunk": "@@ -54,54 +62,45 @@ public HitExtractor tiebreakerExtractor() {\n         return tiebreakerExtractor;\n     }\n \n-    public long timestamp(SearchHit hit) {\n+    @SuppressWarnings({ \"unchecked\" })\n+    public Ordinal ordinal(SearchHit hit) {\n+\n         Object ts = timestampExtractor.extract(hit);\n-        if (ts instanceof Number) {\n-            return ((Number) ts).longValue();\n+        if (ts instanceof Number == false) {\n+            throw new EqlIllegalArgumentException(\"Expected timestamp as long but got {}\", ts);\n         }\n-        throw new EqlIllegalArgumentException(\"Expected timestamp as long but got {}\", ts);\n-    }\n \n-    @SuppressWarnings({ \"unchecked\" })\n-    public Comparable<Object> tiebreaker(SearchHit hit) {\n-        if (tiebreakerExtractor == null) {\n-            return null;\n-        }\n-        Object tb = tiebreakerExtractor.extract(hit);\n-        if (tb instanceof Comparable) {\n-            return (Comparable<Object>) tb;\n-        }\n-        throw new EqlIllegalArgumentException(\"Expected tiebreaker to be Comparable but got {}\", tb);\n-    }\n+        long timestamp = ((Number) ts).longValue();\n+        Comparable<Object> tiebreaker = null;\n \n-    public Object[] startMarker() {\n-        return startMarker;\n+        if (tiebreakerExtractor != null) {\n+            Object tb = tiebreakerExtractor.extract(hit);\n+            if (tb instanceof Comparable == false) {\n+                throw new EqlIllegalArgumentException(\"Expected tiebreaker to be Comparable but got {}\", tb);\n+            }\n+            tiebreaker = (Comparable<Object>) tb;\n+        }\n+        return new Ordinal(timestamp, tiebreaker);\n     }\n \n-    public Object[] stopMarker() {\n-        return stopMarker;\n+    public void startMarker(Ordinal ordinal) {\n+        startMarker = ordinal;\n     }\n \n-    private Object[] marker(SearchHit hit) {\n-        long timestamp = timestamp(hit);\n-        Object tiebreaker = null;\n-        if (tiebreakerExtractor() != null) {\n-            tiebreaker = tiebreaker(hit);\n-        }\n-\n-        return tiebreaker != null ? new Object[] { timestamp, tiebreaker } : new Object[] { timestamp };\n+    public void stopMarker(Ordinal ordinal) {\n+        stopMarker = ordinal;\n     }\n \n-    public void startMarker(SearchHit hit) {\n-        startMarker = marker(hit);\n+    public Ordinal nextMarker() {\n+        return startMarker.compareTo(stopMarker) < 1 ? startMarker : stopMarker;\n     }\n \n-    public void stopMarker(SearchHit hit) {\n-        stopMarker = marker(hit);\n+    public Criterion useMarker(Ordinal marker) {\n+        searchSource.searchAfter(marker.toArray());\n+        return this;\n     }\n \n-    public Criterion useMarker(Object[] marker) {\n-        searchSource.searchAfter(marker);\n-        return this;\n+    public Iterable<SearchHit> iterateable(List<SearchHit> hits) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b2a97e07697c147335efaa1b5481401674ddf29"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3MjY5MQ==", "bodyText": "before and after have almost the same code. Could you reuse it in a common method?", "url": "https://github.com/elastic/elasticsearch/pull/58635#discussion_r446972691", "createdAt": "2020-06-29T13:30:46Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/SequenceFrame.java", "diffHunk": "@@ -78,24 +63,15 @@ else if (tiebreaker != null && sequence.currentTimestamp() == timestamp) {\n      * Returns the first Sequence from the group that has its timestamp\n      * greater than the given argument alongside its position in the list.\n      */\n-    public Tuple<Sequence, Integer> after(long timestamp, Comparable<Object> tiebreaker) {\n+    public Tuple<Sequence, Integer> after(Ordinal ordinal) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b2a97e07697c147335efaa1b5481401674ddf29"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4c19d528bffc0a3b7d327e0866560de220dea77", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/b4c19d528bffc0a3b7d327e0866560de220dea77", "committedDate": "2020-06-29T15:34:10Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf69b597eda3e0002a105cac59cd3075a8e39ae7", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/bf69b597eda3e0002a105cac59cd3075a8e39ae7", "committedDate": "2020-06-29T15:59:37Z", "message": "Merge remote-tracking branch 'remotes/upstream/master' into eql/span-until"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d5ae3318cda8d8a2157303e97bc98c3c366c624", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/9d5ae3318cda8d8a2157303e97bc98c3c366c624", "committedDate": "2020-06-29T16:38:54Z", "message": "Disable unsupported tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2514, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}