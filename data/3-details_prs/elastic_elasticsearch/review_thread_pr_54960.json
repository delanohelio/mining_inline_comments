{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTA1MTA4", "number": 54960, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzozODozNVrODwgEpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxODowMTozNVrODwgk_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTgzNzE5OnYy", "diffSide": "RIGHT", "path": "docs/reference/sql/functions/date-time.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzozODozNVrOGDitoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzozOToxM1rOGDiu-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2NzY0OQ==", "bodyText": "If not timezone doesn't sound natural", "url": "https://github.com/elastic/elasticsearch/pull/54960#discussion_r406367649", "createdAt": "2020-04-09T17:38:35Z", "author": {"login": "astefan"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -446,6 +446,46 @@ include-tagged::{sql-specs}/docs/docs.csv-spec[dateTimeFormatDateTime]\n include-tagged::{sql-specs}/docs/docs.csv-spec[dateTimeFormatTime]\n --------------------------------------------------\n \n+[[sql-functions-datetime-datetimeparse]]\n+==== `DATETIME_PARSE`\n+\n+.Synopsis:\n+[source, sql]\n+--------------------------------------------------\n+DATETIME_PARSE(\n+    string_exp, <1>\n+    string_exp) <2>\n+--------------------------------------------------\n+\n+*Input*:\n+\n+<1> datetime expression as a string\n+<2> parsing pattern\n+\n+*Output*: datetime\n+\n+*Description*: Returns a datetime by parsing the 1st argument using the format specified in the 2nd argument. The parsing\n+format pattern used is the one from\n+https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/time/format/DateTimeFormatter.html[`java.time.format.DateTimeFormatter`].\n+If any of the two arguments is `null` or an empty string `null` is returned.\n+\n+[NOTE]\n+If not timezone is specified in the datetime string expression and the parsing pattern `UTC` will be used.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b0f8c9e3ce7dbcfd02431022a6ba69414d6467"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2Nzk5Mg==", "bodyText": "If..... and the parsing pattern.... sounds strange as well.", "url": "https://github.com/elastic/elasticsearch/pull/54960#discussion_r406367992", "createdAt": "2020-04-09T17:39:13Z", "author": {"login": "astefan"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -446,6 +446,46 @@ include-tagged::{sql-specs}/docs/docs.csv-spec[dateTimeFormatDateTime]\n include-tagged::{sql-specs}/docs/docs.csv-spec[dateTimeFormatTime]\n --------------------------------------------------\n \n+[[sql-functions-datetime-datetimeparse]]\n+==== `DATETIME_PARSE`\n+\n+.Synopsis:\n+[source, sql]\n+--------------------------------------------------\n+DATETIME_PARSE(\n+    string_exp, <1>\n+    string_exp) <2>\n+--------------------------------------------------\n+\n+*Input*:\n+\n+<1> datetime expression as a string\n+<2> parsing pattern\n+\n+*Output*: datetime\n+\n+*Description*: Returns a datetime by parsing the 1st argument using the format specified in the 2nd argument. The parsing\n+format pattern used is the one from\n+https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/time/format/DateTimeFormatter.html[`java.time.format.DateTimeFormatter`].\n+If any of the two arguments is `null` or an empty string `null` is returned.\n+\n+[NOTE]\n+If not timezone is specified in the datetime string expression and the parsing pattern `UTC` will be used.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2NzY0OQ=="}, "originalCommit": {"oid": "e1b0f8c9e3ce7dbcfd02431022a6ba69414d6467"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTkxOTk2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/analysis/analyzer/VerifierErrorMessagesTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxODowMTozNVrOGDjhIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxODowMTozNVrOGDjhIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM4MDgzNA==", "bodyText": "Minor: testDatTime... -> testDateTime....", "url": "https://github.com/elastic/elasticsearch/pull/54960#discussion_r406380834", "createdAt": "2020-04-09T18:01:35Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/analysis/analyzer/VerifierErrorMessagesTests.java", "diffHunk": "@@ -337,6 +337,22 @@ public void testDateTimeFormatInvalidArgs() {\n         );\n     }\n \n+    public void testDatTimeParseValidArgs() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b0f8c9e3ce7dbcfd02431022a6ba69414d6467"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1181, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}