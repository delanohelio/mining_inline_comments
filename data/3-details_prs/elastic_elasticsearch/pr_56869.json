{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MTExOTY3", "number": 56869, "title": "SQL: Fix behaviour of COUNT(DISTINCT <literal>)", "bodyText": "Previously COUNT(DISTINCT <literal>) was returning the same result\nas COUNT(<literal>) which is not correct as it should always return 1\nif there is at least one matching row (bucket if there is a GROUP BY),\nor 0 otherwise.", "createdAt": "2020-05-17T13:16:16Z", "url": "https://github.com/elastic/elasticsearch/pull/56869", "merged": true, "mergeCommit": {"oid": "7f7d7562d43034907f432d39d0d66f490d78f4a8"}, "closed": true, "closedAt": "2020-05-19T08:25:34Z", "author": {"login": "matriv"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciLED_AH2gAyNDE5MTExOTY3OjBmNzg4NzMyODJhNmNlNGNkMjIxNmU1YjQ3ZDM2ZjNjMzZhNmMxMzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABciu7u1gFqTQxNDE1MzEzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0f78873282a6ce4cd2216e5b47d36f3c36a6c138", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/0f78873282a6ce4cd2216e5b47d36f3c36a6c138", "committedDate": "2020-05-17T13:12:54Z", "message": "SQL: Fix behaviour of COUNT(DISTINCT <literal>)\n\nPreviously `COUNT(DISTINCT <literal>)` was returning the same result\nas `COUNT(<literal>)` which is not correct as it should always return 1\nif there is at least one matching row (bucket if there is a GROUP BY),\nor 0 otherwise."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0af6abc38dc1014e855652a68c4b3d08c553f939", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/0af6abc38dc1014e855652a68c4b3d08c553f939", "committedDate": "2020-05-17T13:27:02Z", "message": "fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTE1NDcz", "url": "https://github.com/elastic/elasticsearch/pull/56869#pullrequestreview-413515473", "createdAt": "2020-05-18T11:44:54Z", "commit": {"oid": "0af6abc38dc1014e855652a68c4b3d08c553f939"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTo0NDo1NFrOGWzeyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTo0NDo1NFrOGWzeyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2NTMyMg==", "bodyText": "Considering there's a dedicated Count rule for local relationship, this snippet of code should sit there (ReplaceCountInLocalRelation) not here.", "url": "https://github.com/elastic/elasticsearch/pull/56869#discussion_r426565322", "createdAt": "2020-05-18T11:44:54Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/optimizer/Optimizer.java", "diffHunk": "@@ -790,21 +789,27 @@ private Expression simplify(BinaryComparison bc) {\n         @Override\n         protected LogicalPlan rule(LogicalPlan p) {\n             return p.transformExpressionsDown(e -> {\n-                if (e instanceof Min || e instanceof Max || e instanceof Avg || e instanceof Sum) {\n-                    NumericAggregate a = (NumericAggregate) e;\n+                if (e instanceof Min || e instanceof Max || e instanceof Avg || e instanceof Sum ||\n+                    (e instanceof Count && ((Count) e).distinct())) {\n+\n+                    AggregateFunction a = (AggregateFunction) e;\n \n                     if (a.field().foldable()) {\n                         Expression countOne = new Count(a.source(), new Literal(Source.EMPTY, 1, a.dataType()), false);\n                         Equals countEqZero = new Equals(a.source(), countOne, new Literal(Source.EMPTY, 0, a.dataType()));\n                         Expression argument = a.field();\n                         Literal foldedArgument = new Literal(argument.source(), argument.fold(), a.dataType());\n \n+                        Expression iffResult = Literal.NULL;\n                         Expression iifElseResult = foldedArgument;\n                         if (e instanceof Sum) {\n                             iifElseResult = new Mul(a.source(), countOne, foldedArgument);\n+                        } else if (e instanceof Count) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0af6abc38dc1014e855652a68c4b3d08c553f939"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNzk0MDI4", "url": "https://github.com/elastic/elasticsearch/pull/56869#pullrequestreview-413794028", "createdAt": "2020-05-18T17:22:40Z", "commit": {"oid": "0af6abc38dc1014e855652a68c4b3d08c553f939"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzoyMjo0MFrOGXAsvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzoyNjoxMlrOGXA0kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTg4NQ==", "bodyText": "Or you could have used a randomBoolean()? If true then DESC, if false then ASC.", "url": "https://github.com/elastic/elasticsearch/pull/56869#discussion_r426781885", "createdAt": "2020-05-18T17:22:40Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/SqlTestUtils.java", "diffHunk": "@@ -81,4 +86,40 @@ public static Literal literal(Source source, Object value) {\n         }\n         return new Literal(source, value, SqlDataTypes.fromJava(value));\n     }\n+\n+    public static String randomOrderByAndLimit(int noOfSelectArgs, Random rnd) {\n+        StringBuilder sb = new StringBuilder();\n+        if (randomBoolean()) {\n+            sb.append(\" ORDER BY \");\n+\n+            List<Integer> shuffledArgIndices = IntStream.range(1, noOfSelectArgs + 1).boxed().collect(Collectors.toList());\n+            Collections.shuffle(shuffledArgIndices, rnd);\n+            for (int i = 0; i < noOfSelectArgs; i++) {\n+                sb.append(shuffledArgIndices.get(i));\n+                switch (randomInt(2)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0af6abc38dc1014e855652a68c4b3d08c553f939"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4Mzg5MQ==", "bodyText": "I think you meant to call the variable iifResult.", "url": "https://github.com/elastic/elasticsearch/pull/56869#discussion_r426783891", "createdAt": "2020-05-18T17:26:12Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/optimizer/Optimizer.java", "diffHunk": "@@ -790,21 +789,27 @@ private Expression simplify(BinaryComparison bc) {\n         @Override\n         protected LogicalPlan rule(LogicalPlan p) {\n             return p.transformExpressionsDown(e -> {\n-                if (e instanceof Min || e instanceof Max || e instanceof Avg || e instanceof Sum) {\n-                    NumericAggregate a = (NumericAggregate) e;\n+                if (e instanceof Min || e instanceof Max || e instanceof Avg || e instanceof Sum ||\n+                    (e instanceof Count && ((Count) e).distinct())) {\n+\n+                    AggregateFunction a = (AggregateFunction) e;\n \n                     if (a.field().foldable()) {\n                         Expression countOne = new Count(a.source(), new Literal(Source.EMPTY, 1, a.dataType()), false);\n                         Equals countEqZero = new Equals(a.source(), countOne, new Literal(Source.EMPTY, 0, a.dataType()));\n                         Expression argument = a.field();\n                         Literal foldedArgument = new Literal(argument.source(), argument.fold(), a.dataType());\n \n+                        Expression iffResult = Literal.NULL;\n                         Expression iifElseResult = foldedArgument;\n                         if (e instanceof Sum) {\n                             iifElseResult = new Mul(a.source(), countOne, foldedArgument);\n+                        } else if (e instanceof Count) {\n+                            iffResult =  new Literal(Source.EMPTY, 0, e.dataType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0af6abc38dc1014e855652a68c4b3d08c553f939"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODQ3NTE2", "url": "https://github.com/elastic/elasticsearch/pull/56869#pullrequestreview-413847516", "createdAt": "2020-05-18T18:43:04Z", "commit": {"oid": "0af6abc38dc1014e855652a68c4b3d08c553f939"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04eb175f5e83870fa6137d2b2687f478b427d27c", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/04eb175f5e83870fa6137d2b2687f478b427d27c", "committedDate": "2020-05-18T19:15:04Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MTUzMTM0", "url": "https://github.com/elastic/elasticsearch/pull/56869#pullrequestreview-414153134", "createdAt": "2020-05-19T07:00:23Z", "commit": {"oid": "04eb175f5e83870fa6137d2b2687f478b427d27c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4821, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}