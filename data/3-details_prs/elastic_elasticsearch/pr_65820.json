{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxODI3MzE2", "number": 65820, "title": "Runtime fields that shadow an object shouldn't shadow its children", "bodyText": "If you define a runtime field, and we encounter a field in a document at index-time\nthat shares its name with the runtime field, then that field is 'shadowed' and does\nnot get indexed.  Currently, if that field happens to be an object, we end up not\nconsuming its children correctly in the parser and we can end up with a mapper\nparsing exception.\nThis commit changes the parsing logic so that the shadowing is not applied to\nfields that are defined as objects.  The object children will continue to be indexed,\nbut queries against the object parent will be redirected to the runtime field.", "createdAt": "2020-12-03T14:38:18Z", "url": "https://github.com/elastic/elasticsearch/pull/65820", "merged": true, "mergeCommit": {"oid": "b2c0bd9a33c5418b904e064bd99e39bf7bfe0e5c"}, "closed": true, "closedAt": "2020-12-08T13:13:13Z", "author": {"login": "romseygeek"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdikHTOgH2gAyNTMxODI3MzE2OmQxNDc2YjQwMTkzNDM2ZGEzZGY1Yzg2ZThjYjQyNTU3NDc5MjIzZDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj0zdFgFqTU0NjA5OTkyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d1476b40193436da3df5c86e8cb42557479223d7", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/d1476b40193436da3df5c86e8cb42557479223d7", "committedDate": "2020-12-03T14:35:13Z", "message": "Runtime fields that shadow an object shouldn't shadow the object children"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa4182f1f9d13cfbdf96f32d2eda4c6c28e78bbf", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/aa4182f1f9d13cfbdf96f32d2eda4c6c28e78bbf", "committedDate": "2020-12-03T14:59:06Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec5541f008a82caf0b3d5a993f25621cf7603774", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/ec5541f008a82caf0b3d5a993f25621cf7603774", "committedDate": "2020-12-03T15:36:48Z", "message": "Merge remote-tracking branch 'origin/master' into runtime/object-shadowing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NzUxMTIw", "url": "https://github.com/elastic/elasticsearch/pull/65820#pullrequestreview-544751120", "createdAt": "2020-12-04T08:37:55Z", "commit": {"oid": "ec5541f008a82caf0b3d5a993f25621cf7603774"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODozNzo1NVrOH_GSew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODozOTowMlrOH_GU0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkyNTM3MQ==", "bodyText": "nit: should we instead split the method into two, one for objects and one for leaf fields. The one for leaves applies also runtime fields at the end, while the object variant doesn't?", "url": "https://github.com/elastic/elasticsearch/pull/65820#discussion_r535925371", "createdAt": "2020-12-04T08:37:55Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java", "diffHunk": "@@ -905,7 +909,7 @@ private static Mapper getMapper(final ParseContext context, ObjectMapper objectM\n         }\n         String leafName = subfields[subfields.length - 1];\n         mapper = objectMapper.getMapper(leafName);\n-        if (mapper != null) {\n+        if (mapper != null || isObject) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5541f008a82caf0b3d5a993f25621cf7603774"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkyNTk2OQ==", "bodyText": "Should we expand testing for arrays, both arrays of leaves and arrays of objects?", "url": "https://github.com/elastic/elasticsearch/pull/65820#discussion_r535925969", "createdAt": "2020-12-04T08:39:02Z", "author": {"login": "javanna"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java", "diffHunk": "@@ -138,6 +138,43 @@ public void testParseWithShadowedMultiField() throws Exception {\n         assertNotNull(doc.rootDoc().getField(\"field.keyword\"));\n     }\n \n+    public void testRuntimeFieldDoesNotShadowObjectChildren() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5541f008a82caf0b3d5a993f25621cf7603774"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bc69c239f799d5999b20d549ad39570f11464fe", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/1bc69c239f799d5999b20d549ad39570f11464fe", "committedDate": "2020-12-04T10:08:56Z", "message": "Add tests for arrays in objects and arrays of objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92602985103d26d4d9a9330fcf06765b4355b709", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/92602985103d26d4d9a9330fcf06765b4355b709", "committedDate": "2020-12-04T10:30:34Z", "message": "Merge remote-tracking branch 'origin/master' into runtime/object-shadowing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efcb284e18bae8592d007a36628e2014ae8ae249", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/efcb284e18bae8592d007a36628e2014ae8ae249", "committedDate": "2020-12-04T11:34:15Z", "message": "iter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODg0MDU3", "url": "https://github.com/elastic/elasticsearch/pull/65820#pullrequestreview-544884057", "createdAt": "2020-12-04T11:39:03Z", "commit": {"oid": "efcb284e18bae8592d007a36628e2014ae8ae249"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMTozOTowNFrOH_NJTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMTo0OTo1OVrOH_Nggw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAzNzcwOQ==", "bodyText": "thanks for clarifying this comment, I meant to go back and update it :)", "url": "https://github.com/elastic/elasticsearch/pull/65820#discussion_r536037709", "createdAt": "2020-12-04T11:39:04Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java", "diffHunk": "@@ -904,15 +907,24 @@ private static Mapper getMapper(final ParseContext context, ObjectMapper objectM\n             }\n         }\n         String leafName = subfields[subfields.length - 1];\n-        mapper = objectMapper.getMapper(leafName);\n+        return objectMapper.getMapper(leafName);\n+    }\n+\n+    private static Mapper getLeafMapper(final ParseContext context,\n+                                        ObjectMapper objectMapper,\n+                                        String fieldName,\n+                                        String[] subfields) {\n+        Mapper mapper = getMapper(context, objectMapper, fieldName, subfields);\n         if (mapper != null) {\n             return mapper;\n         }\n-        //concrete fields take the precedence over runtime fields when parsing documents, though when a field is defined as runtime field\n-        //only, and not under properties, it is ignored when it is sent as part of _source\n+        // concrete fields take precedence over runtime fields when parsing documents\n+        // if a leaf field is not mapped, and is defined as a runtime field, then we\n+        // don't create a dynamic mapping for it and don't index it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcb284e18bae8592d007a36628e2014ae8ae249"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0MDAxNQ==", "bodyText": "I can't seem to find a name that clearly explains why we have this new method as opposed to the existing getMapper one. Shall we add a comment to explain what is the difference between the two and why?", "url": "https://github.com/elastic/elasticsearch/pull/65820#discussion_r536040015", "createdAt": "2020-12-04T11:43:18Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java", "diffHunk": "@@ -904,15 +907,24 @@ private static Mapper getMapper(final ParseContext context, ObjectMapper objectM\n             }\n         }\n         String leafName = subfields[subfields.length - 1];\n-        mapper = objectMapper.getMapper(leafName);\n+        return objectMapper.getMapper(leafName);\n+    }\n+\n+    private static Mapper getLeafMapper(final ParseContext context,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcb284e18bae8592d007a36628e2014ae8ae249"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0MDY3MQ==", "bodyText": "are you not checking for location.lon on purpose?", "url": "https://github.com/elastic/elasticsearch/pull/65820#discussion_r536040671", "createdAt": "2020-12-04T11:44:28Z", "author": {"login": "javanna"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java", "diffHunk": "@@ -138,6 +138,85 @@ public void testParseWithShadowedMultiField() throws Exception {\n         assertNotNull(doc.rootDoc().getField(\"field.keyword\"));\n     }\n \n+    public void testRuntimeFieldDoesNotShadowObjectChildren() throws IOException {\n+        DocumentMapper mapper = createDocumentMapper(topMapping(b -> {\n+            b.field(\"dynamic\", \"true\");\n+            b.startObject(\"runtime\");\n+            {\n+                b.startObject(\"location\").field(\"type\", \"test\").endObject();\n+                b.startObject(\"country\").field(\"type\", \"test\").endObject();\n+            }\n+            b.endObject();\n+            b.startObject(\"properties\");\n+            {\n+                b.startObject(\"timestamp\").field(\"type\", \"date\").endObject();\n+                b.startObject(\"concrete\").field(\"type\", \"keyword\").endObject();\n+            }\n+            b.endObject();\n+        }));\n+\n+        {\n+            ParsedDocument doc = mapper.parse(source(b -> {\n+                b.field(\"timestamp\", \"1998-04-30T14:30:17-05:00\");\n+                b.startObject(\"location\");\n+                {\n+                    b.field(\"lat\", 13.5);\n+                    b.field(\"lon\", 34.89);\n+                }\n+                b.endObject();\n+                b.field(\"country\", \"de\");\n+                b.field(\"concrete\", \"foo\");\n+            }));\n+\n+            assertNotNull(doc.rootDoc().getField(\"timestamp\"));\n+            assertNotNull(doc.rootDoc().getField(\"_source\"));\n+            assertNotNull(doc.rootDoc().getField(\"location.lat\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcb284e18bae8592d007a36628e2014ae8ae249"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0MzY1MQ==", "bodyText": "Shall we also have a test for arrays that hold leaf values instead of objects? What I am after is verifying that using getLeafMapper is the right choice in all cases when parsing an array.", "url": "https://github.com/elastic/elasticsearch/pull/65820#discussion_r536043651", "createdAt": "2020-12-04T11:49:59Z", "author": {"login": "javanna"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java", "diffHunk": "@@ -138,6 +138,43 @@ public void testParseWithShadowedMultiField() throws Exception {\n         assertNotNull(doc.rootDoc().getField(\"field.keyword\"));\n     }\n \n+    public void testRuntimeFieldDoesNotShadowObjectChildren() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkyNTk2OQ=="}, "originalCommit": {"oid": "ec5541f008a82caf0b3d5a993f25621cf7603774"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a70e545d7436da99704a2feafcffd544a2851e3", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/9a70e545d7436da99704a2feafcffd544a2851e3", "committedDate": "2020-12-04T14:03:42Z", "message": "iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89016c3106a7f75c0ca13803e7caaf4e9ed3bf19", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/89016c3106a7f75c0ca13803e7caaf4e9ed3bf19", "committedDate": "2020-12-07T09:38:30Z", "message": "Merge remote-tracking branch 'origin/master' into runtime/object-shadowing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb03304206089910fa2ff6e74fe62c58227a420e", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/cb03304206089910fa2ff6e74fe62c58227a420e", "committedDate": "2020-12-07T10:27:49Z", "message": "Add array tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MDk5OTI4", "url": "https://github.com/elastic/elasticsearch/pull/65820#pullrequestreview-546099928", "createdAt": "2020-12-07T12:26:24Z", "commit": {"oid": "cb03304206089910fa2ff6e74fe62c58227a420e"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjoyNjoyNFrOIAkYEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozNTowM1rOIAkr1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ2Njg5Ng==", "bodyText": "nit: maybe DynamicMappingsTests#dynamicMapping should be moved to MapperServiceTestCase? Also, isn't dynamic true the default anyways?", "url": "https://github.com/elastic/elasticsearch/pull/65820#discussion_r537466896", "createdAt": "2020-12-07T12:26:24Z", "author": {"login": "javanna"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java", "diffHunk": "@@ -138,6 +138,123 @@ public void testParseWithShadowedMultiField() throws Exception {\n         assertNotNull(doc.rootDoc().getField(\"field.keyword\"));\n     }\n \n+    public void testRuntimeFieldAndArrayChildren() throws IOException {\n+        DocumentMapper mapper = createDocumentMapper(topMapping(b -> {\n+            b.field(\"dynamic\", \"true\");\n+            b.startObject(\"runtime\");\n+            {\n+                b.startObject(\"object\").field(\"type\", \"test\").endObject();\n+            }\n+            b.endObject();\n+        }));\n+\n+        {\n+            ParsedDocument doc = mapper.parse(source(b -> {\n+                b.startObject(\"object\");\n+                b.array(\"array\", 1, 2, 3);\n+                b.field(\"foo\", \"bar\");\n+                b.endObject();\n+            }));\n+            assertNotNull(doc.rootDoc().getField(\"object.foo\"));\n+            assertNotNull(doc.rootDoc().getField(\"object.array\"));\n+        }\n+\n+        {\n+            ParsedDocument doc = mapper.parse(source(b -> {\n+                b.startArray(\"object\");\n+                {\n+                    b.startObject().array(\"array\", 1, 2, 3).endObject();\n+                    b.startObject().field(\"foo\", \"bar\").endObject();\n+                }\n+                b.endArray();\n+            }));\n+            assertNotNull(doc.rootDoc().getField(\"object.foo\"));\n+            assertNotNull(doc.rootDoc().getField(\"object.array\"));\n+        }\n+    }\n+\n+    public void testRuntimeFieldDoesNotShadowObjectChildren() throws IOException {\n+        DocumentMapper mapper = createDocumentMapper(topMapping(b -> {\n+            b.field(\"dynamic\", \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb03304206089910fa2ff6e74fe62c58227a420e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ2OTMxMg==", "bodyText": "shall we add one scenario where object is an array of e.g. longs?", "url": "https://github.com/elastic/elasticsearch/pull/65820#discussion_r537469312", "createdAt": "2020-12-07T12:30:32Z", "author": {"login": "javanna"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java", "diffHunk": "@@ -138,6 +138,123 @@ public void testParseWithShadowedMultiField() throws Exception {\n         assertNotNull(doc.rootDoc().getField(\"field.keyword\"));\n     }\n \n+    public void testRuntimeFieldAndArrayChildren() throws IOException {\n+        DocumentMapper mapper = createDocumentMapper(topMapping(b -> {\n+            b.field(\"dynamic\", \"true\");\n+            b.startObject(\"runtime\");\n+            {\n+                b.startObject(\"object\").field(\"type\", \"test\").endObject();\n+            }\n+            b.endObject();\n+        }));\n+\n+        {\n+            ParsedDocument doc = mapper.parse(source(b -> {\n+                b.startObject(\"object\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb03304206089910fa2ff6e74fe62c58227a420e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MDA0Mw==", "bodyText": "maybe calling object is misleading given that it can end up being an array in the docs?", "url": "https://github.com/elastic/elasticsearch/pull/65820#discussion_r537470043", "createdAt": "2020-12-07T12:31:48Z", "author": {"login": "javanna"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java", "diffHunk": "@@ -138,6 +138,123 @@ public void testParseWithShadowedMultiField() throws Exception {\n         assertNotNull(doc.rootDoc().getField(\"field.keyword\"));\n     }\n \n+    public void testRuntimeFieldAndArrayChildren() throws IOException {\n+        DocumentMapper mapper = createDocumentMapper(topMapping(b -> {\n+            b.field(\"dynamic\", \"true\");\n+            b.startObject(\"runtime\");\n+            {\n+                b.startObject(\"object\").field(\"type\", \"test\").endObject();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb03304206089910fa2ff6e74fe62c58227a420e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MTYyOQ==", "bodyText": "make this javadoc?", "url": "https://github.com/elastic/elasticsearch/pull/65820#discussion_r537471629", "createdAt": "2020-12-07T12:34:31Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java", "diffHunk": "@@ -904,15 +910,27 @@ private static Mapper getMapper(final ParseContext context, ObjectMapper objectM\n             }\n         }\n         String leafName = subfields[subfields.length - 1];\n-        mapper = objectMapper.getMapper(leafName);\n+        return objectMapper.getMapper(leafName);\n+    }\n+\n+    // looks up a child mapper, taking into account field names that expand to objects\n+    // if no mapper is found, checks to see if a runtime field with the specified\n+    // field name exists and if so returns a no-op mapper to prevent indexing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb03304206089910fa2ff6e74fe62c58227a420e"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MTk1Nw==", "bodyText": "javadoc?", "url": "https://github.com/elastic/elasticsearch/pull/65820#discussion_r537471957", "createdAt": "2020-12-07T12:35:03Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java", "diffHunk": "@@ -883,7 +883,13 @@ private static void parseCopy(String field, ParseContext context) throws IOExcep\n     }\n \n     // looks up a child mapper, but takes into account field names that expand to objects\n-    private static Mapper getMapper(final ParseContext context, ObjectMapper objectMapper, String fieldName, String[] subfields) {\n+    // returns null if no such child mapper exists - note that unlike getLeafMapper,\n+    // we do not check for shadowing runtime fields because they only apply to leaf\n+    // fields", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb03304206089910fa2ff6e74fe62c58227a420e"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4157, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}