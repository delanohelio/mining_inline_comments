{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxNjM2MDQ3", "number": 59821, "title": "Support spatial fields in field retrieval API.", "bodyText": "Although we accept a variety of formats during indexing, spatial data is\nreturned in a single consistent format. This is GeoJSON by default, but\nwell-known text is also supported by passing the option format: wkt.\nNote that points (in addition to shapes) are returned in GeoJSON by default. The\nreasoning is that this gives better consistency, and is the most convenient\nformat for most REST API users.", "createdAt": "2020-07-18T02:24:20Z", "url": "https://github.com/elastic/elasticsearch/pull/59821", "merged": true, "mergeCommit": {"oid": "796f721aba3f90c630176f58a7bbc02c0b780fb0"}, "closed": true, "closedAt": "2020-07-22T22:07:11Z", "author": {"login": "jtibshirani"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1_C6SAFqTQ1MTAyNDI1Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3hDAWAH2gAyNDUxNjM2MDQ3OjljMTU1Y2Y3OGUyNGIyYjRmNDFjMTNhYzBkMzYzZDk3MzhmY2M2M2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMDI0MjU3", "url": "https://github.com/elastic/elasticsearch/pull/59821#pullrequestreview-451024257", "createdAt": "2020-07-18T02:31:16Z", "commit": {"oid": "28ddcc3614fce0f5501bf1b44f5f4895a158b2a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMjozMToxNlrOGzlFCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMjozMToxNlrOGzlFCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczODA1OQ==", "bodyText": "Without this change, coordinates could change unexpectedly in a roundtrip like WKT -> CartesianPoint -> WKT. It seems common to represent points using doubles even though they're indexed as floats -- for example the Point geometry uses doubles.", "url": "https://github.com/elastic/elasticsearch/pull/59821#discussion_r456738059", "createdAt": "2020-07-18T02:31:16Z", "author": {"login": "jtibshirani"}, "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/common/CartesianPoint.java", "diffHunk": "@@ -36,18 +37,18 @@\n     private static final ParseField Y_FIELD = new ParseField(\"y\");\n     private static final ParseField Z_FIELD = new ParseField(\"z\");\n \n-    protected float x;\n-    protected float y;\n+    protected double x;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ddcc3614fce0f5501bf1b44f5f4895a158b2a7"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMDI0OTAy", "url": "https://github.com/elastic/elasticsearch/pull/59821#pullrequestreview-451024902", "createdAt": "2020-07-18T02:42:22Z", "commit": {"oid": "28ddcc3614fce0f5501bf1b44f5f4895a158b2a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMjo0MjoyMlrOGzlItg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMjo0MjoyMlrOGzlItg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczODk5OA==", "bodyText": "This seemed like the easiest way to integrate with the existing logic but is far from ideal:\n\nWe perform parsing even when it's not necessary: even when the geometry is already in the right format, we still parse it to an object re-serialize it.\nWe also awkwardly translate between maps and xContent.\n\nLet me know if you have suggestions around a better approach. Overall I was hoping to keep this PR reasonably scoped, since it is part of a large 'field retrieval' change that already has a few moving parts. But we could plan a larger refactor in a separate/ follow-up change.", "url": "https://github.com/elastic/elasticsearch/pull/59821#discussion_r456738998", "createdAt": "2020-07-18T02:42:22Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java", "diffHunk": "@@ -143,7 +153,31 @@ public Builder ignoreZValue(final boolean ignoreZValue) {\n \n     @Override\n     protected Object parseSourceValue(Object value, String format) {\n-        throw new UnsupportedOperationException();\n+        AbstractGeometryFieldType<Parsed, Processed> mappedFieldType = fieldType();\n+        Parser<Parsed> geometryParser = mappedFieldType.geometryParser();\n+        Formatter<Parsed> geometryFormatter = mappedFieldType.geometryFormatter();\n+\n+        Parsed geometry;\n+        try (XContentParser parser = new MapXContentParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ddcc3614fce0f5501bf1b44f5f4895a158b2a7"}, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28ddcc3614fce0f5501bf1b44f5f4895a158b2a7", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/28ddcc3614fce0f5501bf1b44f5f4895a158b2a7", "committedDate": "2020-07-18T02:20:39Z", "message": "In CartesianPoint, store coordinates as doubles.\n\nThis gives more predictable values when parsing and formatting a point. It\nmatches the behavior for GeoPoint and the Point geometry."}, "afterCommit": {"oid": "58c5a260b52ee83866c0bd2974dcfec364325171", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/58c5a260b52ee83866c0bd2974dcfec364325171", "committedDate": "2020-07-18T04:51:26Z", "message": "In CartesianPoint, store coordinates as doubles.\n\nThis gives more predictable values when parsing and formatting a point. It\nmatches the behavior for GeoPoint and the Point geometry."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTg3NjQ5", "url": "https://github.com/elastic/elasticsearch/pull/59821#pullrequestreview-451587649", "createdAt": "2020-07-20T13:08:00Z", "commit": {"oid": "58c5a260b52ee83866c0bd2974dcfec364325171"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMzowODowMFrOG0LZ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMzoxODoxMFrOG0L3sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM2NTk3Mg==", "bodyText": "The leading _ is usually an indicator that this was an automatically generated anchor id. Unless you are replacing one that is auto-generated I'd avoid it.", "url": "https://github.com/elastic/elasticsearch/pull/59821#discussion_r457365972", "createdAt": "2020-07-20T13:08:00Z", "author": {"login": "nik9000"}, "path": "docs/reference/mapping/types.asciidoc", "diffHunk": "@@ -22,6 +22,7 @@ string::         <<text,`text`>>, <<keyword,`keyword`>> and <<wildcard,`wildcard\n <<nested>>::    `nested` for arrays of JSON objects\n \n [float]\n+[[_spatial_datatypes]]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58c5a260b52ee83866c0bd2974dcfec364325171"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM3MTU5OA==", "bodyText": "This is pretty yikes, but I do like the idea of keeping the work contained on the branch and doing a larger refactoring after merging. Maybe it'd be cleaner to push the ability to parse these fields into SourceLookup. That way we don't need to do the xcontent -> map -> xcontent dance.", "url": "https://github.com/elastic/elasticsearch/pull/59821#discussion_r457371598", "createdAt": "2020-07-20T13:15:25Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java", "diffHunk": "@@ -143,7 +153,31 @@ public Builder ignoreZValue(final boolean ignoreZValue) {\n \n     @Override\n     protected Object parseSourceValue(Object value, String format) {\n-        throw new UnsupportedOperationException();\n+        AbstractGeometryFieldType<Parsed, Processed> mappedFieldType = fieldType();\n+        Parser<Parsed> geometryParser = mappedFieldType.geometryParser();\n+        Formatter<Parsed> geometryFormatter = mappedFieldType.geometryFormatter();\n+\n+        Parsed geometry;\n+        try (XContentParser parser = new MapXContentParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczODk5OA=="}, "originalCommit": {"oid": "28ddcc3614fce0f5501bf1b44f5f4895a158b2a7"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM3MzYxOQ==", "bodyText": "Probably worth javadoc. I was confused by the method name because I usually think of map and xcontent as mutually exclusive representations.", "url": "https://github.com/elastic/elasticsearch/pull/59821#discussion_r457373619", "createdAt": "2020-07-20T13:18:10Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/common/geo/GeoJson.java", "diffHunk": "@@ -610,4 +617,14 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         }\n     }\n \n+    public static Map<?, ?> toXContentMap(Geometry geometry) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58c5a260b52ee83866c0bd2974dcfec364325171"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDAyMDM5", "url": "https://github.com/elastic/elasticsearch/pull/59821#pullrequestreview-452002039", "createdAt": "2020-07-20T22:26:59Z", "commit": {"oid": "3bb216a749fae997593685c15513d4c4c2f79e1c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMjoyNjo1OVrOG0ha3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMjozODoxNVrOG0hrCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcyNjY4NQ==", "bodyText": "should we add some javadoc for this?", "url": "https://github.com/elastic/elasticsearch/pull/59821#discussion_r457726685", "createdAt": "2020-07-20T22:26:59Z", "author": {"login": "talevy"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java", "diffHunk": "@@ -82,6 +87,11 @@\n         Parsed parse(XContentParser parser, AbstractGeometryFieldMapper mapper) throws IOException, ParseException;\n     }\n \n+    public interface Formatter<Parsed> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bb216a749fae997593685c15513d4c4c2f79e1c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcyNzQ2NA==", "bodyText": "good Point. I do not see a problem with this. maybe @nknize has an opinion here", "url": "https://github.com/elastic/elasticsearch/pull/59821#discussion_r457727464", "createdAt": "2020-07-20T22:29:10Z", "author": {"login": "talevy"}, "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/common/CartesianPoint.java", "diffHunk": "@@ -36,18 +37,18 @@\n     private static final ParseField Y_FIELD = new ParseField(\"y\");\n     private static final ParseField Z_FIELD = new ParseField(\"z\");\n \n-    protected float x;\n-    protected float y;\n+    protected double x;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczODA1OQ=="}, "originalCommit": {"oid": "28ddcc3614fce0f5501bf1b44f5f4895a158b2a7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczMDgyNg==", "bodyText": "also, XContent here is just an implementation detail. it is a normal Map, right?", "url": "https://github.com/elastic/elasticsearch/pull/59821#discussion_r457730826", "createdAt": "2020-07-20T22:38:15Z", "author": {"login": "talevy"}, "path": "server/src/main/java/org/elasticsearch/common/geo/GeoJson.java", "diffHunk": "@@ -610,4 +617,14 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         }\n     }\n \n+    public static Map<?, ?> toXContentMap(Geometry geometry) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM3MzYxOQ=="}, "originalCommit": {"oid": "58c5a260b52ee83866c0bd2974dcfec364325171"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNTMwNjYw", "url": "https://github.com/elastic/elasticsearch/pull/59821#pullrequestreview-452530660", "createdAt": "2020-07-21T14:43:36Z", "commit": {"oid": "3bb216a749fae997593685c15513d4c4c2f79e1c"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "156d741e3da42e87c64f251d39fa9f18e4d67d3a", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/156d741e3da42e87c64f251d39fa9f18e4d67d3a", "committedDate": "2020-07-21T18:08:46Z", "message": "Support spatial fields in field retrieval API.\n\nAlthough we accept a variety of formats during indexing, spatial data is\nreturned in a single consistent format. This is GeoJSON by default, but\nwell-known text is also supported by passing the option 'format: wkt'.\n\nNote that points (in addition to shapes) are returned in GeoJSON by default. The\nreasoning is that this gives better consistency, and is the most convenient\nformat for most REST API users."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d50fa6ff30216c66c8a38fea34bc30bffc1b117f", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/d50fa6ff30216c66c8a38fea34bc30bffc1b117f", "committedDate": "2020-07-21T18:08:50Z", "message": "In CartesianPoint, store coordinates as doubles.\n\nThis gives more predictable values when parsing and formatting a point. It\nmatches the behavior for GeoPoint and the Point geometry."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "804a2956cf50b9e9bf7aba61cb71aa9072927181", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/804a2956cf50b9e9bf7aba61cb71aa9072927181", "committedDate": "2020-07-21T18:09:33Z", "message": "Fix naming of 'spatial datatypes' anchor."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bb216a749fae997593685c15513d4c4c2f79e1c", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/3bb216a749fae997593685c15513d4c4c2f79e1c", "committedDate": "2020-07-20T20:54:52Z", "message": "Fix naming of 'spatial datatypes' anchor."}, "afterCommit": {"oid": "804a2956cf50b9e9bf7aba61cb71aa9072927181", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/804a2956cf50b9e9bf7aba61cb71aa9072927181", "committedDate": "2020-07-21T18:09:33Z", "message": "Fix naming of 'spatial datatypes' anchor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f9e82a7dca40673e8acd767d99812e6e5d5a7a3", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/6f9e82a7dca40673e8acd767d99812e6e5d5a7a3", "committedDate": "2020-07-21T21:53:38Z", "message": "Better formalize the types of geometry formats."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "926993dd932cb6a756ab77eae2f06d6c4c1f9afb", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/926993dd932cb6a756ab77eae2f06d6c4c1f9afb", "committedDate": "2020-07-21T21:54:00Z", "message": "Rely on GeometryFormat for all value formatting."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bf9bd1fddeab8e401ba5c5252cde422dea1add1", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/4bf9bd1fddeab8e401ba5c5252cde422dea1add1", "committedDate": "2020-07-21T21:54:51Z", "message": "Avoid parsing shapes if they're already in the right format."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3d62820221c7c0c65f2aad2eca705de26d50a91", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/d3d62820221c7c0c65f2aad2eca705de26d50a91", "committedDate": "2020-07-21T22:24:04Z", "message": "Fix checkstyle violation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTc5NjE3", "url": "https://github.com/elastic/elasticsearch/pull/59821#pullrequestreview-453579617", "createdAt": "2020-07-22T18:31:28Z", "commit": {"oid": "d3d62820221c7c0c65f2aad2eca705de26d50a91"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODozMToyOFrOG1vFCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODozNTo0M1rOG1vPTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk5OTA0OQ==", "bodyText": "Maybe return Object here as well for consistency. I don't think the fact that it returns Map is significant here.", "url": "https://github.com/elastic/elasticsearch/pull/59821#discussion_r458999049", "createdAt": "2020-07-22T18:31:28Z", "author": {"login": "imotov"}, "path": "server/src/main/java/org/elasticsearch/common/geo/GeoJsonGeometryFormat.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.common.geo;\n+\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.xcontent.LoggingDeprecationHandler;\n+import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.geometry.Geometry;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.util.Map;\n+\n+public class GeoJsonGeometryFormat implements GeometryFormat<Geometry> {\n+    public static final String NAME = \"geojson\";\n+\n+    private final GeoJson geoJsonParser;\n+\n+    public GeoJsonGeometryFormat(GeoJson geoJsonParser) {\n+        this.geoJsonParser = geoJsonParser;\n+    }\n+\n+    @Override\n+    public String name() {\n+        return NAME;\n+    }\n+\n+    @Override\n+    public Geometry fromXContent(XContentParser parser) throws IOException {\n+        if (parser.currentToken() == XContentParser.Token.VALUE_NULL) {\n+            return null;\n+        }\n+        return geoJsonParser.fromXContent(parser);\n+    }\n+\n+    @Override\n+    public XContentBuilder toXContent(Geometry geometry, XContentBuilder builder, ToXContent.Params params) throws IOException {\n+        if (geometry != null) {\n+            return GeoJson.toXContent(geometry, builder, params);\n+        } else {\n+            return builder.nullValue();\n+        }\n+    }\n+\n+    @Override\n+    public Map<?, ?> toObject(Geometry geometry) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d62820221c7c0c65f2aad2eca705de26d50a91"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwMTY3OQ==", "bodyText": "I wonder if somebody can come up with a better name here :) maybe to toXContentObject() or toXConentValue() or something like this. I feel like toObject is misleadingly generic here.", "url": "https://github.com/elastic/elasticsearch/pull/59821#discussion_r459001679", "createdAt": "2020-07-22T18:35:43Z", "author": {"login": "imotov"}, "path": "server/src/main/java/org/elasticsearch/common/geo/GeometryFormat.java", "diffHunk": "@@ -41,4 +46,10 @@\n      */\n     XContentBuilder toXContent(ParsedFormat geometry, XContentBuilder builder, ToXContent.Params params) throws IOException;\n \n+    /**\n+     * Serializes the geometry into a standard Java object.\n+     *\n+     * For example, the GeoJson format returns the geometry as a map, while WKT returns a string.\n+     */\n+    Object toObject(ParsedFormat geometry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d62820221c7c0c65f2aad2eca705de26d50a91"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTk5NTEx", "url": "https://github.com/elastic/elasticsearch/pull/59821#pullrequestreview-453599511", "createdAt": "2020-07-22T18:58:47Z", "commit": {"oid": "d3d62820221c7c0c65f2aad2eca705de26d50a91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b7dad391666afceaf9e56daf54b1e788e42ca10", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/1b7dad391666afceaf9e56daf54b1e788e42ca10", "committedDate": "2020-07-22T20:41:25Z", "message": "Rename GeometryFormat#toObject -> toXContentAsObject."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c155cf78e24b2b4f41c13ac0d363d9738fcc63d", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/9c155cf78e24b2b4f41c13ac0d363d9738fcc63d", "committedDate": "2020-07-22T20:42:04Z", "message": "Always return Object from toXContentAsObject."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4224, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}