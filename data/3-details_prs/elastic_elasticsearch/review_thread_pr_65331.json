{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0OTU2MTg1", "number": 65331, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMToxMDoyNFrOE8Kzsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTozOTo0MFrOE8yRpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTI3MDkwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/planner/QueryTranslatorTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMToxMDoyNFrOH4IySw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDoyNDozNFrOH5DM0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyNjI1MQ==", "bodyText": "I'd add a simple numeric test in x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java to replicate and check the fix, as well as more accurately inspect the translation.\nIn that respect, not sure if this particular test would still be needed, but if you decide to keep it, I'd also add a comment on the condition that the value of negatedText fulfils as it's not obvious.\nAlso, the \"Bug\" in the title is not explanatory: either rename the test or add a reference.", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r528626251", "createdAt": "2020-11-23T11:10:24Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/planner/QueryTranslatorTests.java", "diffHunk": "@@ -2338,4 +2338,12 @@ public void testInInRangeValues() {\n         PhysicalPlan p = testContext.optimizeAndPlan(\"SELECT long FROM test WHERE long IN (1, 2, 3, \" + Long.MAX_VALUE + \", 5, 6, 7)\");\n         assertEquals(EsQueryExec.class, p.getClass());\n     }\n+    \n+    public void testCombineBinaryComparisonsBugKeyword() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4629af6732aec5c5e86f3e7d87a34f3dbb86fe9b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU4MzMxMw==", "bodyText": "Thanks for the comment. Cleaned up the draft, added additional test cases that were discovered by randomized tests (will add randomized tests in separate PR), added an integration test for this particular bug.", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r529583313", "createdAt": "2020-11-24T14:24:34Z", "author": {"login": "palesz"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/planner/QueryTranslatorTests.java", "diffHunk": "@@ -2338,4 +2338,12 @@ public void testInInRangeValues() {\n         PhysicalPlan p = testContext.optimizeAndPlan(\"SELECT long FROM test WHERE long IN (1, 2, 3, \" + Long.MAX_VALUE + \", 5, 6, 7)\");\n         assertEquals(EsQueryExec.class, p.getClass());\n     }\n+    \n+    public void testCombineBinaryComparisonsBugKeyword() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyNjI1MQ=="}, "originalCommit": {"oid": "4629af6732aec5c5e86f3e7d87a34f3dbb86fe9b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTMxMjcwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDoyNDowNFrOH5DLWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDoyNDowNFrOH5DLWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU4MjkzOA==", "bodyText": "Use the method in TestUtils.", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r529582938", "createdAt": "2020-11-24T14:24:04Z", "author": {"login": "costin"}, "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "diffHunk": "@@ -135,7 +137,11 @@ private static FieldAttribute getFieldAttribute() {\n     }\n \n     private static FieldAttribute getFieldAttribute(String name) {\n-        return new FieldAttribute(EMPTY, name, new EsField(name + \"f\", INTEGER, emptyMap(), true));\n+        return getFieldAttribute(name, INTEGER);\n+    }\n+\n+    private static FieldAttribute getFieldAttribute(String name, DataType dataType) {\n+        return new FieldAttribute(EMPTY, name, new EsField(name + \"f\", dataType, emptyMap(), true));\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b75a8b0b2926c400e0bfbab3f75d7604f1eb7a8"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTMxODMyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDoyNToxM1rOH5DOzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDoyNToxM1rOH5DOzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU4MzgyMA==", "bodyText": "Better naming - doubleOne, doubleTwo - oneDouble, anotherDouble, etc..", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r529583820", "createdAt": "2020-11-24T14:25:13Z", "author": {"login": "costin"}, "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "diffHunk": "@@ -1015,7 +1021,32 @@ public void testRangesOverlappingNoLowerBoundary() {\n         Expression exp = rule.rule(or);\n         assertEquals(r2, exp);\n     }\n+    \n+    public void testBinaryComparisonAndOutOfRangeNotEqualsDifferentFields() {\n+        FieldAttribute fDouble = getFieldAttribute(\"double\", DOUBLE);\n+        FieldAttribute fDouble2 = getFieldAttribute(\"double2\", DOUBLE);\n+        FieldAttribute fInteger = getFieldAttribute(\"int\", INTEGER);\n+        FieldAttribute fDatetime = getFieldAttribute(\"datetime\", INTEGER);\n+        FieldAttribute fKeyword = getFieldAttribute(\"keyword\", KEYWORD);\n+        FieldAttribute fKeyword2 = getFieldAttribute(\"keyword2\", KEYWORD);\n+        ZoneId zoneId = randomZone();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b75a8b0b2926c400e0bfbab3f75d7604f1eb7a8"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTMyMjUwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDoyNjowMVrOH5DRSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDoyNjowMVrOH5DRSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU4NDQ1Nw==", "bodyText": "Extract the list outside the for.\nAlso use the methods in TestUtils to increase readability.", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r529584457", "createdAt": "2020-11-24T14:26:01Z", "author": {"login": "costin"}, "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "diffHunk": "@@ -1015,7 +1021,32 @@ public void testRangesOverlappingNoLowerBoundary() {\n         Expression exp = rule.rule(or);\n         assertEquals(r2, exp);\n     }\n+    \n+    public void testBinaryComparisonAndOutOfRangeNotEqualsDifferentFields() {\n+        FieldAttribute fDouble = getFieldAttribute(\"double\", DOUBLE);\n+        FieldAttribute fDouble2 = getFieldAttribute(\"double2\", DOUBLE);\n+        FieldAttribute fInteger = getFieldAttribute(\"int\", INTEGER);\n+        FieldAttribute fDatetime = getFieldAttribute(\"datetime\", INTEGER);\n+        FieldAttribute fKeyword = getFieldAttribute(\"keyword\", KEYWORD);\n+        FieldAttribute fKeyword2 = getFieldAttribute(\"keyword2\", KEYWORD);\n+        ZoneId zoneId = randomZone();\n \n+        for (And and : Arrays.asList(\n+            // double > 10 AND integer != -10\n+            new And(EMPTY, new GreaterThan(EMPTY, fDouble, L(10), zoneId), new NotEquals(EMPTY, fInteger, L(-10), zoneId)),\n+            // keyword > '5' AND keyword2 != '48'\n+            new And(EMPTY, new GreaterThan(EMPTY, fKeyword, L(\"5\"), zoneId), new NotEquals(EMPTY, fKeyword2, L(\"48\"), zoneId)),\n+            // keyword != '2021' AND datetime <= '2020-12-04T17:48:22.954240Z'\n+            new And(EMPTY, new NotEquals(EMPTY, fKeyword, L(\"2021\"), zoneId), \n+                new LessThanOrEqual(EMPTY, fDatetime, L(\"2020-12-04T17:48:22.954240Z\"), zoneId)),\n+            // double > 10.1 AND double2 != -10.1\n+            new And(EMPTY, new GreaterThan(EMPTY, fDouble, L(10.1d), zoneId), new NotEquals(EMPTY, fDouble2, L(-10.1d), zoneId))\n+        )) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b75a8b0b2926c400e0bfbab3f75d7604f1eb7a8"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTMyNzAwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/qa/server/src/main/resources/filter.sql-spec", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDoyNjo1MVrOH5DT6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDoyNjo1MVrOH5DT6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU4NTEyOQ==", "bodyText": "tag is used for documentation purposes. Unless you consume it into the docs, there's no point to add it.", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r529585129", "createdAt": "2020-11-24T14:26:51Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/qa/server/src/main/resources/filter.sql-spec", "diffHunk": "@@ -22,6 +22,10 @@ whereFieldAndComparison\n // tag::whereFieldAndComparison\n SELECT last_name l FROM \"test_emp\" WHERE emp_no > 10000 AND emp_no < 10005 ORDER BY emp_no LIMIT 5;\n // end::whereFieldAndComparison\n+whereGreaterThanAndNotEqualityOnDifferentFields\n+// tag::whereGreaterThanAndNotEqualityOnDifferentFields\n+SELECT last_name l FROM \"test_emp\" WHERE salary >= 50000 AND emp_no != 10002 ORDER BY emp_no LIMIT 5;\n+// end::whereGreaterThanAndNotEqualityOnDifferentFields", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b75a8b0b2926c400e0bfbab3f75d7604f1eb7a8"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTczNzMyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTozOTo0MFrOH5HWnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTozOTo0MFrOH5HWnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1MTM1Nw==", "bodyText": "Use TestUtils.fieldAttribute()", "url": "https://github.com/elastic/elasticsearch/pull/65331#discussion_r529651357", "createdAt": "2020-11-24T15:39:40Z", "author": {"login": "costin"}, "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/optimizer/OptimizerRulesTests.java", "diffHunk": "@@ -140,7 +143,11 @@ private static FieldAttribute getFieldAttribute() {\n     }\n \n     private static FieldAttribute getFieldAttribute(String name) {\n-        return new FieldAttribute(EMPTY, name, new EsField(name + \"f\", INTEGER, emptyMap(), true));\n+        return getFieldAttribute(name, INTEGER);\n+    }\n+\n+    private static FieldAttribute getFieldAttribute(String name, DataType dataType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b31bcde88072d1bc3523b4f403f21eca0177c3"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2907, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}