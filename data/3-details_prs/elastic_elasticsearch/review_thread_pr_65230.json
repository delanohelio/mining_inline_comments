{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzc4NzMy", "number": 65230, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNTowMlrOE6s-3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwOTowMjozOVrOE68LXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTg5ODU0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNTowMlrOH171Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMTo0NDo1OVrOH2ZkVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxNjg2Mw==", "bodyText": "thanks for the fast turnaround on this.\nquick nit/question -- does SEQ still make sense as a token name? I think the : has evolved into something beyond insensitive string equality", "url": "https://github.com/elastic/elasticsearch/pull/65230#discussion_r526316863", "createdAt": "2020-11-18T18:15:02Z", "author": {"login": "rw-access"}, "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -100,7 +100,8 @@ operatorExpression\n //   https://github.com/antlr/antlr4/issues/781\n predicate\n     : NOT? kind=IN LP expression (COMMA expression)* RP\n-    | seqPredicate\n+    | kind=SEQ constant", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e53c380b54b73ea8f0d9a5cda892219bfabac588"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgwNDA1Mg==", "bodyText": "Yes, it does; it's a pattern used for all strings/tokens including , above. We could declare it line but that doesn't offer any advantages quite the opposite, makes parsing trickier due to lack of constants.", "url": "https://github.com/elastic/elasticsearch/pull/65230#discussion_r526804052", "createdAt": "2020-11-19T11:44:59Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -100,7 +100,8 @@ operatorExpression\n //   https://github.com/antlr/antlr4/issues/781\n predicate\n     : NOT? kind=IN LP expression (COMMA expression)* RP\n-    | seqPredicate\n+    | kind=SEQ constant", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxNjg2Mw=="}, "originalCommit": {"oid": "e53c380b54b73ea8f0d9a5cda892219bfabac588"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjM4ODE0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/parser/ExpressionBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwOTowMjozOVrOH2S_xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwOTowMjozOVrOH2S_xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY5NjM5MQ==", "bodyText": "Nice!", "url": "https://github.com/elastic/elasticsearch/pull/65230#discussion_r526696391", "createdAt": "2020-11-19T09:02:39Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/parser/ExpressionBuilder.java", "diffHunk": "@@ -160,20 +162,18 @@ public Object visitOperatorExpressionDefault(EqlBaseParser.OperatorExpressionDef\n             return expr;\n         }\n \n-        EqlBaseParser.SeqPredicateContext seq = predicate.seqPredicate();\n-        if (seq != null) {\n-            Expression literal = expression(seq);\n-            return new InsensitiveEquals(source, expr, literal, zoneId);\n+        switch (predicate.kind.getType()) {\n+            case EqlBaseParser.SEQ:\n+                return Predicates.combineOr(expressions(predicate.constant()).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e53c380b54b73ea8f0d9a5cda892219bfabac588"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2856, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}