{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMzE0NjI2", "number": 60730, "title": "Improve some BytesStreamOutput Usage", "bodyText": "Stop redundantly creating a 0 length ByteArray that is never used\nAdd efficient way to get a minimal size copy of the bytes in a BytesStreamOutput\nAvoid multiple redundant byte[] copies in search cache key creation", "createdAt": "2020-08-05T11:10:52Z", "url": "https://github.com/elastic/elasticsearch/pull/60730", "merged": true, "mergeCommit": {"oid": "ec175d16537d461dd07e425cf90dc7dd16b053a9"}, "closed": true, "closedAt": "2020-08-05T12:54:18Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc75NPgAH2gAyNDYzMzE0NjI2OmNlMWY2NWFjYmU3ZGVjNDE4ZjFkZjNlNWFkMDZhNTA4NjkxMDUzYTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc76hn5AFqTQ2MTYyMjE2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ce1f65acbe7dec418f1df3e5ad06a508691053a5", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/ce1f65acbe7dec418f1df3e5ad06a508691053a5", "committedDate": "2020-08-05T11:06:40Z", "message": "Improve some BytesStreamOutput Usage\n\n* Stop redundantly creating a `0` length `ByteArray` that is never used\n* Add efficient way to get a minimal size copy of the bytes in a `BytesStreamOutput`\n* Avoid multiple redundant `byte[]` copies in search cache key creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ca8e09523977c53e14b26908fc64330b450392d", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/5ca8e09523977c53e14b26908fc64330b450392d", "committedDate": "2020-08-05T11:14:38Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a09622477de3abb27edfa3ee07ba84416fd4a57", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/1a09622477de3abb27edfa3ee07ba84416fd4a57", "committedDate": "2020-08-05T11:15:27Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/c237272e321c933e1a1382949196f60fc32a76ea", "committedDate": "2020-08-05T11:16:03Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNTY5MDM4", "url": "https://github.com/elastic/elasticsearch/pull/60730#pullrequestreview-461569038", "createdAt": "2020-08-05T11:16:47Z", "commit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMToxNjo0N1rOG8FRlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMToxNjo0N1rOG8FRlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY1NDE2NQ==", "bodyText": "Same optimization already added to IOUtils for a single Releasable since we now use that heavily in closing the releasable stream.", "url": "https://github.com/elastic/elasticsearch/pull/60730#discussion_r465654165", "createdAt": "2020-08-05T11:16:47Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/common/lease/Releasables.java", "diffHunk": "@@ -46,6 +47,15 @@ public static void close(Iterable<? extends Releasable> releasables) {\n         close(releasables, false);\n     }\n \n+    /** Release the provided {@link Releasable}. */\n+    public static void close(@Nullable Releasable releasable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNTcwMTQy", "url": "https://github.com/elastic/elasticsearch/pull/60730#pullrequestreview-461570142", "createdAt": "2020-08-05T11:18:42Z", "commit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMToxODo0M1rOG8FU3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMToxODo0M1rOG8FU3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY1NTAwNA==", "bodyText": "This was really inefficient before. The cache key would usually be ~100b but be written with buffers of sizes 8, 56 and then 1xx, then copied again below.", "url": "https://github.com/elastic/elasticsearch/pull/60730#discussion_r465655004", "createdAt": "2020-08-05T11:18:43Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java", "diffHunk": "@@ -342,15 +341,20 @@ public void canReturnNullResponseIfMatchNoDocs(boolean value) {\n         this.canReturnNullResponseIfMatchNoDocs = value;\n     }\n \n+    private static final ThreadLocal<BytesStreamOutput> scratch = ThreadLocal.withInitial(BytesStreamOutput::new);\n+\n     /**\n      * Returns the cache key for this shard search request, based on its content\n      */\n     public BytesReference cacheKey() throws IOException {\n-        BytesStreamOutput out = new BytesStreamOutput();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNTcwNDAw", "url": "https://github.com/elastic/elasticsearch/pull/60730#pullrequestreview-461570400", "createdAt": "2020-08-05T11:19:10Z", "commit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMToxOToxMFrOG8FVrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMToxOToxMFrOG8FVrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY1NTIxNQ==", "bodyText": "Obviously somewhat trivial but why not save some bounds checks.", "url": "https://github.com/elastic/elasticsearch/pull/60730#discussion_r465655215", "createdAt": "2020-08-05T11:19:10Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/TcpHeader.java", "diffHunk": "@@ -60,10 +60,11 @@ public static int headerSize(Version version) {\n         }\n     }\n \n+    private static final byte[] PREFIX = {(byte) 'E', (byte) 'S'};\n+\n     public static void writeHeader(StreamOutput output, long requestId, byte status, Version version, int contentSize,\n                                    int variableHeaderSize) throws IOException {\n-        output.writeByte((byte)'E');\n-        output.writeByte((byte)'S');\n+        output.writeBytes(PREFIX);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNTc0OTA3", "url": "https://github.com/elastic/elasticsearch/pull/60730#pullrequestreview-461574907", "createdAt": "2020-08-05T11:26:29Z", "commit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMToyNjoyOVrOG8FjGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMToyNjoyOVrOG8FjGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY1ODY1MQ==", "bodyText": "Tiny nit - this could be declared inside the try.", "url": "https://github.com/elastic/elasticsearch/pull/60730#discussion_r465658651", "createdAt": "2020-08-05T11:26:29Z", "author": {"login": "pugnascotia"}, "path": "server/src/main/java/org/elasticsearch/common/io/stream/BytesStreamOutput.java", "diffHunk": "@@ -143,6 +150,27 @@ public BytesReference bytes() {\n         return new PagedBytesReference(bytes, count);\n     }\n \n+    /**\n+     * Like {@link #bytes()} but copies the bytes to a freshly allocated buffer.\n+     *\n+     * @return copy of the bytes in this instances\n+     */\n+    public BytesReference copyBytes() {\n+        final byte[] keyBytes = new byte[count];\n+        int offset = 0;\n+        final BytesRefIterator iterator = bytes().iterator();\n+        BytesRef slice;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87ee451eea1d1b9baa207cd112a8271da0eed54c", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/87ee451eea1d1b9baa207cd112a8271da0eed54c", "committedDate": "2020-08-05T11:27:12Z", "message": "nits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNTc2Njk2", "url": "https://github.com/elastic/elasticsearch/pull/60730#pullrequestreview-461576696", "createdAt": "2020-08-05T11:29:24Z", "commit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMToyOToyNFrOG8FoaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMToyOToyNFrOG8FoaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MDAwOA==", "bodyText": "Is this comment supposed to be here?", "url": "https://github.com/elastic/elasticsearch/pull/60730#discussion_r465660008", "createdAt": "2020-08-05T11:29:24Z", "author": {"login": "pugnascotia"}, "path": "server/src/main/java/org/elasticsearch/common/io/stream/BytesStreamOutput.java", "diffHunk": "@@ -143,6 +150,27 @@ public BytesReference bytes() {\n         return new PagedBytesReference(bytes, count);\n     }\n \n+    /**\n+     * Like {@link #bytes()} but copies the bytes to a freshly allocated buffer.\n+     *\n+     * @return copy of the bytes in this instances\n+     */\n+    public BytesReference copyBytes() {\n+        final byte[] keyBytes = new byte[count];\n+        int offset = 0;\n+        final BytesRefIterator iterator = bytes().iterator();\n+        BytesRef slice;\n+        try {\n+            while ((slice = iterator.next()) != null) {\n+                System.arraycopy(slice.bytes, slice.offset, keyBytes, offset, slice.length);\n+                offset += slice.length;\n+            }\n+        } catch (IOException e) {\n+            throw new AssertionError(e);\n+        }\n+        return new BytesArray(keyBytes);// do a deep copy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39a6cc4314c2927557fd8a50f504f4b6b64ffcae", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/39a6cc4314c2927557fd8a50f504f4b6b64ffcae", "committedDate": "2020-08-05T11:30:25Z", "message": "no :)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNTgwNDU0", "url": "https://github.com/elastic/elasticsearch/pull/60730#pullrequestreview-461580454", "createdAt": "2020-08-05T11:35:22Z", "commit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMTozNToyMlrOG8Fz7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMTozNToyMlrOG8Fz7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2Mjk1OA==", "bodyText": "What is the purpose of this block? Is it just to generate a BytesReference containing \"ES\"? If so, could we not just do:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final BytesReference PING_MESSAGE;\n          \n          \n            \n            \n          \n          \n            \n                static {\n          \n          \n            \n                    try (BytesStreamOutput out = new BytesStreamOutput()) {\n          \n          \n            \n                        out.writeByte((byte) 'E');\n          \n          \n            \n                        out.writeByte((byte) 'S');\n          \n          \n            \n                        out.writeInt(PING_DATA_SIZE);\n          \n          \n            \n                        PING_MESSAGE = out.copyBytes();\n          \n          \n            \n                    } catch (IOException e) {\n          \n          \n            \n                        throw new AssertionError(e.getMessage(), e); // won't happen\n          \n          \n            \n                    }\n          \n          \n            \n                }\n          \n          \n            \n                private static final BytesReference PING_MESSAGE = new BytesArray(\"ES\");", "url": "https://github.com/elastic/elasticsearch/pull/60730#discussion_r465662958", "createdAt": "2020-08-05T11:35:22Z", "author": {"login": "pugnascotia"}, "path": "server/src/main/java/org/elasticsearch/transport/TransportKeepAlive.java", "diffHunk": "@@ -48,28 +48,31 @@\n \n     static final int PING_DATA_SIZE = -1;\n \n+    private static final BytesReference PING_MESSAGE;\n+\n+    static {\n+        try (BytesStreamOutput out = new BytesStreamOutput()) {\n+            out.writeByte((byte) 'E');\n+            out.writeByte((byte) 'S');\n+            out.writeInt(PING_DATA_SIZE);\n+            PING_MESSAGE = out.copyBytes();\n+        } catch (IOException e) {\n+            throw new AssertionError(e.getMessage(), e); // won't happen\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c237272e321c933e1a1382949196f60fc32a76ea"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNjIyMTY1", "url": "https://github.com/elastic/elasticsearch/pull/60730#pullrequestreview-461622165", "createdAt": "2020-08-05T12:38:50Z", "commit": {"oid": "39a6cc4314c2927557fd8a50f504f4b6b64ffcae"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3408, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}