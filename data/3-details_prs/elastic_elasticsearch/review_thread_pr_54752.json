{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MzYyMzY2", "number": 54752, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzozODo0MVrODxPpBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzo0OTowN1rODxP1cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTYzMDc3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzozODo0MVrOGEmveQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzo0MjoyNFrOGEm1wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ4MjIzMw==", "bodyText": "Is it possible for timestamp to be an invalid number here?", "url": "https://github.com/elastic/elasticsearch/pull/54752#discussion_r407482233", "createdAt": "2020-04-13T13:38:41Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -550,7 +551,9 @@ private InferenceStats handleMultiNodeStatsResponse(SearchResponse response, Str\n             failures == null ? 0L : Double.valueOf(failures.getValue()).longValue(),\n             modelId,\n             null,\n-            timeStamp == null ? Instant.now() : Instant.ofEpochMilli(Double.valueOf(timeStamp.getValue()).longValue())\n+            timeStamp == null || (Numbers.isValidDouble(timeStamp.getValue()) == false) ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1933bf9a0f7e1582cf68275083ff1926f2f21f7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ4Mzg0MA==", "bodyText": "Yes, it is. The agg could have not found any values, or the values they found were changed somehow. This type of check is effectively what aggs do under the hood when they serialize to JSON to protect against goofy doubles. The difference here is that we write out now() instead of null", "url": "https://github.com/elastic/elasticsearch/pull/54752#discussion_r407483840", "createdAt": "2020-04-13T13:42:24Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -550,7 +551,9 @@ private InferenceStats handleMultiNodeStatsResponse(SearchResponse response, Str\n             failures == null ? 0L : Double.valueOf(failures.getValue()).longValue(),\n             modelId,\n             null,\n-            timeStamp == null ? Instant.now() : Instant.ofEpochMilli(Double.valueOf(timeStamp.getValue()).longValue())\n+            timeStamp == null || (Numbers.isValidDouble(timeStamp.getValue()) == false) ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ4MjIzMw=="}, "originalCommit": {"oid": "c1933bf9a0f7e1582cf68275083ff1926f2f21f7"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTY2MjU5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/TrainedModelStatsService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzo0OTowN1rOGEnCnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzo1MjoxOFrOGEnIYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ4NzEzMw==", "bodyText": "Are we missing InferenceStats.MISSING_ALL_FIELDS_COUNT here?", "url": "https://github.com/elastic/elasticsearch/pull/54752#discussion_r407487133", "createdAt": "2020-04-13T13:49:07Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/TrainedModelStatsService.java", "diffHunk": "@@ -47,12 +48,16 @@\n     private static final Logger logger = LogManager.getLogger(TrainedModelStatsService.class);\n     private static final TimeValue PERSISTENCE_INTERVAL = TimeValue.timeValueSeconds(1);\n \n+    private static final String STATS_UPDATE_SCRIPT_TEMPLATE = \"\" +\n+        \"    ctx._source.{0} += params.{0};\\n\" +\n+        \"    ctx._source.{1} += params.{1};\\n\" +\n+        \"    ctx._source.{2} += params.{2};\\n\" +\n+        \"    ctx._source.{3} = params.{3};\";\n     // Script to only update if stats have increased since last persistence\n-    private static final String STATS_UPDATE_SCRIPT = \"\" +\n-        \"    ctx._source.missing_all_fields_count += params.missing_all_fields_count;\\n\" +\n-        \"    ctx._source.inference_count += params.inference_count;\\n\" +\n-        \"    ctx._source.failure_count += params.failure_count;\\n\" +\n-        \"    ctx._source.time_stamp = params.time_stamp;\";\n+    private static final String STATS_UPDATE_SCRIPT = Messages.getMessage(STATS_UPDATE_SCRIPT_TEMPLATE,\n+        InferenceStats.INFERENCE_COUNT.getPreferredName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1933bf9a0f7e1582cf68275083ff1926f2f21f7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ4ODYwOA==", "bodyText": "yep, I am :/", "url": "https://github.com/elastic/elasticsearch/pull/54752#discussion_r407488608", "createdAt": "2020-04-13T13:52:18Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/TrainedModelStatsService.java", "diffHunk": "@@ -47,12 +48,16 @@\n     private static final Logger logger = LogManager.getLogger(TrainedModelStatsService.class);\n     private static final TimeValue PERSISTENCE_INTERVAL = TimeValue.timeValueSeconds(1);\n \n+    private static final String STATS_UPDATE_SCRIPT_TEMPLATE = \"\" +\n+        \"    ctx._source.{0} += params.{0};\\n\" +\n+        \"    ctx._source.{1} += params.{1};\\n\" +\n+        \"    ctx._source.{2} += params.{2};\\n\" +\n+        \"    ctx._source.{3} = params.{3};\";\n     // Script to only update if stats have increased since last persistence\n-    private static final String STATS_UPDATE_SCRIPT = \"\" +\n-        \"    ctx._source.missing_all_fields_count += params.missing_all_fields_count;\\n\" +\n-        \"    ctx._source.inference_count += params.inference_count;\\n\" +\n-        \"    ctx._source.failure_count += params.failure_count;\\n\" +\n-        \"    ctx._source.time_stamp = params.time_stamp;\";\n+    private static final String STATS_UPDATE_SCRIPT = Messages.getMessage(STATS_UPDATE_SCRIPT_TEMPLATE,\n+        InferenceStats.INFERENCE_COUNT.getPreferredName(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ4NzEzMw=="}, "originalCommit": {"oid": "c1933bf9a0f7e1582cf68275083ff1926f2f21f7"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1333, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}