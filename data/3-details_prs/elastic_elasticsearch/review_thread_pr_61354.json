{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNjczMzkz", "number": 61354, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTowMzo1M1rOEaa9YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTowMzo1M1rOEaa9YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTQwMTI4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ApiKeyServiceTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTowMzo1M1rOHD15gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTo0OTowNlrOHD4PAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc5MDg0OQ==", "bodyText": "nit: use Bruce Baner, or anything else for that matter so that it's easier to spot it's different from the principal, in the eventual case of troubleshooting a test failure", "url": "https://github.com/elastic/elasticsearch/pull/61354#discussion_r473790849", "createdAt": "2020-08-20T09:03:53Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ApiKeyServiceTests.java", "diffHunk": "@@ -196,16 +196,18 @@ public void testAuthenticateWithApiKey() throws Exception {\n \n         final User user;\n         if (randomBoolean()) {\n-            user = new User(\"hulk\", new String[] { \"superuser\" }, new User(\"authenticated_user\", new String[] { \"other\" }));\n+            user = new User(new User(\"hulk\", new String[]{\"superuser\"}, \"hulk\", \"hulk@test.com\", Map.of(), true), new User(\"authenticated_user\", new String[]{\"other\"}));\n         } else {\n-            user = new User(\"hulk\", new String[] { \"superuser\" });\n+            user = new User(\"hulk\", new String[]{\"superuser\"}, \"hulk\", \"hulk@test.com\", Map.of(), true);\n         }\n         mockKeyDocument(service, id, key, user);\n \n         final AuthenticationResult auth = tryAuthenticate(service, id, key);\n         assertThat(auth.getStatus(), is(AuthenticationResult.Status.SUCCESS));\n         assertThat(auth.getUser(), notNullValue());\n         assertThat(auth.getUser().principal(), is(\"hulk\"));\n+        assertThat(auth.getUser().fullName(), is(\"hulk\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18fa022b200ecdde9e405134ecf78a7659c024fb"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgyOTEyMw==", "bodyText": "++ nice one, fixed.", "url": "https://github.com/elastic/elasticsearch/pull/61354#discussion_r473829123", "createdAt": "2020-08-20T09:49:06Z", "author": {"login": "lloydmeta"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ApiKeyServiceTests.java", "diffHunk": "@@ -196,16 +196,18 @@ public void testAuthenticateWithApiKey() throws Exception {\n \n         final User user;\n         if (randomBoolean()) {\n-            user = new User(\"hulk\", new String[] { \"superuser\" }, new User(\"authenticated_user\", new String[] { \"other\" }));\n+            user = new User(new User(\"hulk\", new String[]{\"superuser\"}, \"hulk\", \"hulk@test.com\", Map.of(), true), new User(\"authenticated_user\", new String[]{\"other\"}));\n         } else {\n-            user = new User(\"hulk\", new String[] { \"superuser\" });\n+            user = new User(\"hulk\", new String[]{\"superuser\"}, \"hulk\", \"hulk@test.com\", Map.of(), true);\n         }\n         mockKeyDocument(service, id, key, user);\n \n         final AuthenticationResult auth = tryAuthenticate(service, id, key);\n         assertThat(auth.getStatus(), is(AuthenticationResult.Status.SUCCESS));\n         assertThat(auth.getUser(), notNullValue());\n         assertThat(auth.getUser().principal(), is(\"hulk\"));\n+        assertThat(auth.getUser().fullName(), is(\"hulk\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc5MDg0OQ=="}, "originalCommit": {"oid": "18fa022b200ecdde9e405134ecf78a7659c024fb"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 864, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}