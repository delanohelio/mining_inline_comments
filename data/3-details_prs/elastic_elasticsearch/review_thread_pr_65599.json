{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NTM1NDA3", "number": 65599, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoxNTo0NlrOE-pfvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjo0Njo1OVrOE_InLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTI3MDM4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/qa/src/main/java/org/elasticsearch/xpack/runtimefields/test/CoreTestTranslater.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoxNTo0NlrOH76l5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoxNTo0NlrOH76l5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU4ODAwNQ==", "bodyText": "this seems wrong but it's irrelevant because the tests that use it are disabled. I plan on replacing the dynamic template with dynamic:runtime", "url": "https://github.com/elastic/elasticsearch/pull/65599#discussion_r532588005", "createdAt": "2020-11-30T13:15:46Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/qa/src/main/java/org/elasticsearch/xpack/runtimefields/test/CoreTestTranslater.java", "diffHunk": "@@ -118,15 +90,11 @@ private static String painlessToLoadFromSource(String name, String type) {\n \n     // TODO there isn't yet a way to create fields in the runtime section from a dynamic template\n     protected static Map<String, Object> dynamicTemplateToAddRuntimeFields(String type) {\n-        return Map.ofEntries(\n-            Map.entry(\"type\", \"runtime\"),\n-            Map.entry(\"runtime_type\", type),\n-            Map.entry(\"script\", painlessToLoadFromSource(\"{name}\", type))\n-        );\n+        return Map.ofEntries(Map.entry(\"type\", \"runtime\"), Map.entry(\"runtime_type\", type));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffcd53b7ec7e5b0324ee3279f82508dfcecf40b6"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTM3MDExOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/qa/core-with-search/src/yamlRestTest/java/org/elasticsearch/xpack/runtimefields/test/search/CoreTestsWithSearchRuntimeFieldsIT.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzo0MDowNVrOH77hLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzowMzozNlrOH8EuKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYwMzE4Mw==", "bodyText": "This is a tricksy bit - it's breaking one test, search/30_limits/Regexp length limit, I think because it's looking for the source value of name.keyword which of course doesn't exist.", "url": "https://github.com/elastic/elasticsearch/pull/65599#discussion_r532603183", "createdAt": "2020-11-30T13:40:05Z", "author": {"login": "romseygeek"}, "path": "x-pack/plugin/runtime-fields/qa/core-with-search/src/yamlRestTest/java/org/elasticsearch/xpack/runtimefields/test/search/CoreTestsWithSearchRuntimeFieldsIT.java", "diffHunk": "@@ -173,43 +173,43 @@ protected boolean handleIndex(IndexRequest index) {\n                             continue;\n                         }\n                         if (value instanceof Boolean) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"boolean\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"boolean\"));\n                             continue;\n                         }\n                         if (value instanceof Long || value instanceof Integer) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"long\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"long\"));\n                             continue;\n                         }\n                         if (value instanceof Double) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"double\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"double\"));\n                             continue;\n                         }\n                         if (false == value instanceof String) {\n                             continue;\n                         }\n                         try {\n                             Long.parseLong(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"long\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"long\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         try {\n                             Double.parseDouble(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"double\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"double\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         try {\n                             DateFieldMapper.DEFAULT_DATE_TIME_FORMATTER.parse(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"date\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"date\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         // Strings are funny, the regular dynamic mapping puts them in \"name.keyword\" so we follow along.\n-                        indexRuntimeMappings.put(name + \".keyword\", runtimeFieldLoadingFromSource(name, \"keyword\"));\n+                        indexRuntimeMappings.put(name + \".keyword\", runtimeFieldLoadingFromSource(\"keyword\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffcd53b7ec7e5b0324ee3279f82508dfcecf40b6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzODIyOA==", "bodyText": "Field names doesn't seem to be the problem.\nwas \"{root_cause=[{type=too_long_frame_exception, reason=An HTTP line is larger than 4096 bytes.}], type=too_long_frame_exception, reason=An HTTP line is larger than 4096 bytes.}\"", "url": "https://github.com/elastic/elasticsearch/pull/65599#discussion_r532638228", "createdAt": "2020-11-30T14:30:55Z", "author": {"login": "romseygeek"}, "path": "x-pack/plugin/runtime-fields/qa/core-with-search/src/yamlRestTest/java/org/elasticsearch/xpack/runtimefields/test/search/CoreTestsWithSearchRuntimeFieldsIT.java", "diffHunk": "@@ -173,43 +173,43 @@ protected boolean handleIndex(IndexRequest index) {\n                             continue;\n                         }\n                         if (value instanceof Boolean) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"boolean\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"boolean\"));\n                             continue;\n                         }\n                         if (value instanceof Long || value instanceof Integer) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"long\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"long\"));\n                             continue;\n                         }\n                         if (value instanceof Double) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"double\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"double\"));\n                             continue;\n                         }\n                         if (false == value instanceof String) {\n                             continue;\n                         }\n                         try {\n                             Long.parseLong(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"long\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"long\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         try {\n                             Double.parseDouble(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"double\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"double\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         try {\n                             DateFieldMapper.DEFAULT_DATE_TIME_FORMATTER.parse(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"date\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"date\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         // Strings are funny, the regular dynamic mapping puts them in \"name.keyword\" so we follow along.\n-                        indexRuntimeMappings.put(name + \".keyword\", runtimeFieldLoadingFromSource(name, \"keyword\"));\n+                        indexRuntimeMappings.put(name + \".keyword\", runtimeFieldLoadingFromSource(\"keyword\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYwMzE4Mw=="}, "originalCommit": {"oid": "ffcd53b7ec7e5b0324ee3279f82508dfcecf40b6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1MzQzNA==", "bodyText": "you can get that exception if you make a stack overflow.", "url": "https://github.com/elastic/elasticsearch/pull/65599#discussion_r532753434", "createdAt": "2020-11-30T17:02:49Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/qa/core-with-search/src/yamlRestTest/java/org/elasticsearch/xpack/runtimefields/test/search/CoreTestsWithSearchRuntimeFieldsIT.java", "diffHunk": "@@ -173,43 +173,43 @@ protected boolean handleIndex(IndexRequest index) {\n                             continue;\n                         }\n                         if (value instanceof Boolean) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"boolean\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"boolean\"));\n                             continue;\n                         }\n                         if (value instanceof Long || value instanceof Integer) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"long\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"long\"));\n                             continue;\n                         }\n                         if (value instanceof Double) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"double\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"double\"));\n                             continue;\n                         }\n                         if (false == value instanceof String) {\n                             continue;\n                         }\n                         try {\n                             Long.parseLong(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"long\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"long\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         try {\n                             Double.parseDouble(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"double\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"double\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         try {\n                             DateFieldMapper.DEFAULT_DATE_TIME_FORMATTER.parse(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"date\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"date\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         // Strings are funny, the regular dynamic mapping puts them in \"name.keyword\" so we follow along.\n-                        indexRuntimeMappings.put(name + \".keyword\", runtimeFieldLoadingFromSource(name, \"keyword\"));\n+                        indexRuntimeMappings.put(name + \".keyword\", runtimeFieldLoadingFromSource(\"keyword\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYwMzE4Mw=="}, "originalCommit": {"oid": "ffcd53b7ec7e5b0324ee3279f82508dfcecf40b6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1Mzk2MQ==", "bodyText": "Generating the error for the stack overflow blows out something else.", "url": "https://github.com/elastic/elasticsearch/pull/65599#discussion_r532753961", "createdAt": "2020-11-30T17:03:36Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/qa/core-with-search/src/yamlRestTest/java/org/elasticsearch/xpack/runtimefields/test/search/CoreTestsWithSearchRuntimeFieldsIT.java", "diffHunk": "@@ -173,43 +173,43 @@ protected boolean handleIndex(IndexRequest index) {\n                             continue;\n                         }\n                         if (value instanceof Boolean) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"boolean\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"boolean\"));\n                             continue;\n                         }\n                         if (value instanceof Long || value instanceof Integer) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"long\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"long\"));\n                             continue;\n                         }\n                         if (value instanceof Double) {\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"double\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"double\"));\n                             continue;\n                         }\n                         if (false == value instanceof String) {\n                             continue;\n                         }\n                         try {\n                             Long.parseLong(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"long\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"long\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         try {\n                             Double.parseDouble(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"double\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"double\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         try {\n                             DateFieldMapper.DEFAULT_DATE_TIME_FORMATTER.parse(value.toString());\n-                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(name, \"date\"));\n+                            indexRuntimeMappings.put(name, runtimeFieldLoadingFromSource(\"date\"));\n                             continue;\n                         } catch (IllegalArgumentException iae) {\n                             // Try the next one\n                         }\n                         // Strings are funny, the regular dynamic mapping puts them in \"name.keyword\" so we follow along.\n-                        indexRuntimeMappings.put(name + \".keyword\", runtimeFieldLoadingFromSource(name, \"keyword\"));\n+                        indexRuntimeMappings.put(name + \".keyword\", runtimeFieldLoadingFromSource(\"keyword\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYwMzE4Mw=="}, "originalCommit": {"oid": "ffcd53b7ec7e5b0324ee3279f82508dfcecf40b6"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjM2ODQ3OnYy", "diffSide": "RIGHT", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/search/30_limits.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjo0Njo1OVrOH8rCSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjo0Njo1OVrOH8rCSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM4MTcwNw==", "bodyText": "Splitting this test into two makes it work \ud83e\udd37", "url": "https://github.com/elastic/elasticsearch/pull/65599#discussion_r533381707", "createdAt": "2020-12-01T12:46:59Z", "author": {"login": "romseygeek"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/search/30_limits.yml", "diffHunk": "@@ -140,6 +140,9 @@ setup:\n                    \\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[\\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:( |\n                    \\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[\\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[\\\\t\"\n \n+---\n+\"Regexp length limit - query_string\":\n+\n   - do:\n       catch: /The length of regex \\[1110\\]/\n       search:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92f7675dec158bbd7684ae1a1852b50b59fa0e3b"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1987, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}