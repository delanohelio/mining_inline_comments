{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1OTQyNzAy", "number": 66167, "title": "[ML] Report cause when datafeed extraction encounters error", "bodyText": "When a datafeed encounters errors extracting data, often\nthe error is an instance of SearchPhaseExecutionException.\nIn that case the top level error message is Partial shards failure\nwhich is not very informative.\nThis commit refactors a transform util method from\nExceptionRootCauseFinder, which unwraps exceptions with special\nhandling for SearchPhaseExecutionException, and makes use of\nit from datafeed ProblemTracker in order to provide a more\nuseful error message.", "createdAt": "2020-12-10T13:37:25Z", "url": "https://github.com/elastic/elasticsearch/pull/66167", "merged": true, "mergeCommit": {"oid": "f8bda89c03efc77cd20829766b1acb152480ac53"}, "closed": true, "closedAt": "2020-12-14T17:24:37Z", "author": {"login": "dimitris-athanasiou"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdky6QyAH2gAyNTM1OTQyNzAyOmM3MmE4ZGQ0OTBiNTk0OTk3Y2VlMDViMDUyNWY4NmNlNzdhMDQ4NDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmV52UgFqTU1MjE5OTUwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c72a8dd490b594997cee05b0525f86ce77a04843", "author": {"user": {"login": "dimitris-athanasiou", "name": "Dimitris Athanasiou"}}, "url": "https://github.com/elastic/elasticsearch/commit/c72a8dd490b594997cee05b0525f86ce77a04843", "committedDate": "2020-12-10T12:57:24Z", "message": "[ML] Report cause when datafeed extraction encounters error\n\nWhen a datafeed encounters errors extracting data, often\nthe error is an instance of `SearchPhaseExecutionException`.\nIn that case the top level error message is `Partial shards failure`\nwhich is not very informative.\n\nThis commit refactors a transform util method from\n`ExceptionRootCauseFinder`, which unwraps exceptions with special\nhandling for `SearchPhaseExecutionException`, and makes use of\nit from datafeed `ProblemTracker` in order to provide a more\nuseful error message."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MjIwMDU5", "url": "https://github.com/elastic/elasticsearch/pull/66167#pullrequestreview-549220059", "createdAt": "2020-12-10T13:57:36Z", "commit": {"oid": "c72a8dd490b594997cee05b0525f86ce77a04843"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMzo1NzozNlrOIDKgSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMzo1OTozNVrOIDKmCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE4ODc0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOGGER.error(\"[\" + jobId + \"] error while extracting data\", e);\n          \n          \n            \n                            LOGGER.error(new ParameterizedMessage(\"[{}] error while extracting data\", jobId), e);\n          \n      \n    \n    \n  \n\nGreat to log the full trace now!!!", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540188744", "createdAt": "2020-12-10T13:57:36Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java", "diffHunk": "@@ -318,7 +320,7 @@ private void run(long start, long end, FlushJobAction.Request flushRequest) thro\n             try {\n                 extractedData = dataExtractor.next();\n             } catch (Exception e) {\n-                LOGGER.debug(\"[\" + jobId + \"] error while extracting data\", e);\n+                LOGGER.error(\"[\" + jobId + \"] error while extracting data\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c72a8dd490b594997cee05b0525f86ce77a04843"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE4ODg5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                LOGGER.error(\"[\" + jobId + \"] error while posting data\", e);\n          \n          \n            \n                            LOGGER.error(new ParameterizedMessage(\"[{}] error while posting data\", jobId), e);", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540188898", "createdAt": "2020-12-10T13:57:50Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java", "diffHunk": "@@ -350,7 +352,7 @@ private void run(long start, long end, FlushJobAction.Request flushRequest) thro\n                     if (isIsolated) {\n                         return;\n                     }\n-                    LOGGER.debug(\"[\" + jobId + \"] error while posting data\", e);\n+                    LOGGER.error(\"[\" + jobId + \"] error while posting data\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c72a8dd490b594997cee05b0525f86ce77a04843"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5MDIxOQ==", "bodyText": "Anyway to add the rest of the shard failures as suppressed?", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540190219", "createdAt": "2020-12-10T13:59:35Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/ExceptionsHelper.java", "diffHunk": "@@ -112,7 +113,29 @@ public static String shardFailuresToErrorMsg(String jobId, ShardSearchFailure[]\n         return requireNonNull(obj, paramName.getPreferredName());\n     }\n \n+    /**\n+     * Unwrap the exception stack and return the most likely cause.\n+     * This method has special handling for {@link SearchPhaseExecutionException}\n+     * where it returns the cause of the first shard failure.\n+     *\n+     * @param t raw Throwable\n+     * @return unwrapped throwable if possible\n+     */\n     public static Throwable unwrapCause(Throwable t) {\n-       return org.elasticsearch.ExceptionsHelper.unwrapCause(t);\n+        // circuit breaking exceptions are at the bottom\n+        Throwable unwrappedThrowable = org.elasticsearch.ExceptionsHelper.unwrapCause(t);\n+\n+        if (unwrappedThrowable instanceof SearchPhaseExecutionException) {\n+            SearchPhaseExecutionException searchPhaseException = (SearchPhaseExecutionException) unwrappedThrowable;\n+            for (ShardSearchFailure shardFailure : searchPhaseException.shardFailures()) {\n+                Throwable unwrappedShardFailure = org.elasticsearch.ExceptionsHelper.unwrapCause(shardFailure.getCause());\n+\n+                if (unwrappedShardFailure instanceof ElasticsearchException) {\n+                    return unwrappedShardFailure;\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c72a8dd490b594997cee05b0525f86ce77a04843"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a28233a3ff5b8ae1c610bbed2eb4f15986778ac7", "author": {"user": {"login": "dimitris-athanasiou", "name": "Dimitris Athanasiou"}}, "url": "https://github.com/elastic/elasticsearch/commit/a28233a3ff5b8ae1c610bbed2eb4f15986778ac7", "committedDate": "2020-12-10T14:02:06Z", "message": "Update x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java\n\nCo-authored-by: Benjamin Trent <ben.w.trent@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0df275d681dd7222ad6c827178879efa1cc753bb", "author": {"user": {"login": "dimitris-athanasiou", "name": "Dimitris Athanasiou"}}, "url": "https://github.com/elastic/elasticsearch/commit/0df275d681dd7222ad6c827178879efa1cc753bb", "committedDate": "2020-12-10T14:02:12Z", "message": "Update x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java\n\nCo-authored-by: Benjamin Trent <ben.w.trent@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "944d19cf230c78f5b3b59efed86de3a4bad9abc5", "author": {"user": {"login": "dimitris-athanasiou", "name": "Dimitris Athanasiou"}}, "url": "https://github.com/elastic/elasticsearch/commit/944d19cf230c78f5b3b59efed86de3a4bad9abc5", "committedDate": "2020-12-10T14:08:48Z", "message": "Add missing import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MjQ3NDgz", "url": "https://github.com/elastic/elasticsearch/pull/66167#pullrequestreview-549247483", "createdAt": "2020-12-10T14:25:58Z", "commit": {"oid": "944d19cf230c78f5b3b59efed86de3a4bad9abc5"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDoyNTo1OFrOIDLz1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDozMTowOVrOIDMD2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxMDEzNA==", "bodyText": "I think this is a bad name as it collides with org.elasticsearch.ExceptionsHelper.unwrapCause\nNot saying getRootCauseException is a good one, maybe something that indicates the intent: unwrapping search responses, e.g. unwrapSearchException or findSearchExceptionRootCause.\nI think this method should not become a general exception handling method, but only for handling search errors. Otherwise the chances are high that code sharing lead to undesired bugs.\nFor that reason I think it would be good to move it out of the ml subpackage (despite this is just a logical but not technically limiting) into a more common area.\nTransform should use this without indirection.", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540210134", "createdAt": "2020-12-10T14:25:58Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/ExceptionsHelper.java", "diffHunk": "@@ -112,7 +113,29 @@ public static String shardFailuresToErrorMsg(String jobId, ShardSearchFailure[]\n         return requireNonNull(obj, paramName.getPreferredName());\n     }\n \n+    /**\n+     * Unwrap the exception stack and return the most likely cause.\n+     * This method has special handling for {@link SearchPhaseExecutionException}\n+     * where it returns the cause of the first shard failure.\n+     *\n+     * @param t raw Throwable\n+     * @return unwrapped throwable if possible\n+     */\n     public static Throwable unwrapCause(Throwable t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944d19cf230c78f5b3b59efed86de3a4bad9abc5"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxMjEwOA==", "bodyText": "see my 1st comment, this makes no sense to me", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540212108", "createdAt": "2020-12-10T14:28:27Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/utils/ExceptionsHelper.java", "diffHunk": "@@ -19,4 +19,11 @@\n         }\n         return obj;\n     }\n+\n+    /**\n+     * @see org.elasticsearch.xpack.core.ml.utils.ExceptionsHelper#unwrapCause(Throwable)\n+     */\n+    public static Throwable unwrapCause(Throwable t) {\n+        return org.elasticsearch.xpack.core.ml.utils.ExceptionsHelper.unwrapCause(t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944d19cf230c78f5b3b59efed86de3a4bad9abc5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNDA3OA==", "bodyText": "now that you made it an error: should it be audited as well?", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540214078", "createdAt": "2020-12-10T14:30:57Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java", "diffHunk": "@@ -318,7 +321,7 @@ private void run(long start, long end, FlushJobAction.Request flushRequest) thro\n             try {\n                 extractedData = dataExtractor.next();\n             } catch (Exception e) {\n-                LOGGER.debug(\"[\" + jobId + \"] error while extracting data\", e);\n+                LOGGER.error(new ParameterizedMessage(\"[{}] error while extracting data\", jobId), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944d19cf230c78f5b3b59efed86de3a4bad9abc5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNDIzNA==", "bodyText": "audit, too?", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540214234", "createdAt": "2020-12-10T14:31:09Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java", "diffHunk": "@@ -350,7 +353,7 @@ private void run(long start, long end, FlushJobAction.Request flushRequest) thro\n                     if (isIsolated) {\n                         return;\n                     }\n-                    LOGGER.debug(\"[\" + jobId + \"] error while posting data\", e);\n+                LOGGER.error(new ParameterizedMessage(\"[{}] error while posting data\", jobId), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944d19cf230c78f5b3b59efed86de3a4bad9abc5"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3894a4951e84aa837beba089463174b3fa28b30d", "author": {"user": {"login": "dimitris-athanasiou", "name": "Dimitris Athanasiou"}}, "url": "https://github.com/elastic/elasticsearch/commit/3894a4951e84aa837beba089463174b3fa28b30d", "committedDate": "2020-12-14T15:26:17Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2ed15141dbd38acce6bcb6737b05130acf78e78", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/d2ed15141dbd38acce6bcb6737b05130acf78e78", "committedDate": "2020-12-14T15:38:06Z", "message": "Merge branch 'master' into report-cause-when-datafeed-extraction-encounters-error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33c8a7806a75d7a5cae4855b8a4a259f341f5e60", "author": {"user": {"login": "dimitris-athanasiou", "name": "Dimitris Athanasiou"}}, "url": "https://github.com/elastic/elasticsearch/commit/33c8a7806a75d7a5cae4855b8a4a259f341f5e60", "committedDate": "2020-12-14T16:25:52Z", "message": "Fix failing tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNTg4MzAz", "url": "https://github.com/elastic/elasticsearch/pull/66167#pullrequestreview-551588303", "createdAt": "2020-12-14T16:44:16Z", "commit": {"oid": "33c8a7806a75d7a5cae4855b8a4a259f341f5e60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMTk5NTAy", "url": "https://github.com/elastic/elasticsearch/pull/66167#pullrequestreview-552199502", "createdAt": "2020-12-15T08:17:24Z", "commit": {"oid": "33c8a7806a75d7a5cae4855b8a4a259f341f5e60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODoxNzoyNFrOIF-RYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODoxNzoyNFrOIF-RYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzNDA1MQ==", "bodyText": "Is this cross-package dependency ok?\nI'd consider introducing ExceptionsHelper class under org.elasticsearch.xpack.core.common instead.", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r543134051", "createdAt": "2020-12-15T08:17:24Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/utils/ExceptionsHelper.java", "diffHunk": "@@ -19,4 +19,11 @@\n         }\n         return obj;\n     }\n+\n+    /**\n+     * @see org.elasticsearch.xpack.core.ml.utils.ExceptionsHelper#findSearchExceptionRootCause(Throwable)\n+     */\n+    public static Throwable findSearchExceptionRootCause(Throwable t) {\n+        return org.elasticsearch.xpack.core.ml.utils.ExceptionsHelper.findSearchExceptionRootCause(t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33c8a7806a75d7a5cae4855b8a4a259f341f5e60"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4712, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}