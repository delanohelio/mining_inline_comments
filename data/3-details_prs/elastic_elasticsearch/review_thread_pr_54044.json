{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNzE2MjUy", "number": 54044, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTowNDoxOVrODq7ksQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTowNDoxOVrODq7ksQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzQyODMzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTowNDoxOVrOF6_Avg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMToyNDo0MFrOF7DqYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NDExMA==", "bodyText": "maybe add a test to ShardSearchRequestTests that makes sure that this copy ctor doesn't forget any fields? (e.g. by creating a random instance, calling this ctor and comparing them for equality?)", "url": "https://github.com/elastic/elasticsearch/pull/54044#discussion_r397394110", "createdAt": "2020-03-24T19:04:19Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java", "diffHunk": "@@ -187,6 +187,25 @@ public ShardSearchRequest(StreamInput in) throws IOException {\n         originalIndices = OriginalIndices.readOriginalIndices(in);\n     }\n \n+    public ShardSearchRequest(ShardSearchRequest clone) {\n+        this.shardId = clone.shardId;\n+        this.searchType = clone.searchType;\n+        this.numberOfShards = clone.numberOfShards;\n+        this.scroll = clone.scroll;\n+        this.source = clone.source;\n+        this.aliasFilter = clone.aliasFilter;\n+        this.indexBoost = clone.indexBoost;\n+        this.nowInMillis = clone.nowInMillis;\n+        this.requestCache = clone.requestCache;\n+        this.clusterAlias = clone.clusterAlias;\n+        this.allowPartialSearchResults = clone.allowPartialSearchResults;\n+        this.indexRoutings = clone.indexRoutings;\n+        this.preference = clone.preference;\n+        this.canReturnNullResponseIfMatchNoDocs = clone.canReturnNullResponseIfMatchNoDocs;\n+        this.bottomSortValues = clone.bottomSortValues;\n+        this.originalIndices = clone.originalIndices;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e63a2025065fb7ac4b9be1e8786b5f5f3c9cc0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ3MDMwNg==", "bodyText": "++, I pushed a1706be", "url": "https://github.com/elastic/elasticsearch/pull/54044#discussion_r397470306", "createdAt": "2020-03-24T21:24:40Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java", "diffHunk": "@@ -187,6 +187,25 @@ public ShardSearchRequest(StreamInput in) throws IOException {\n         originalIndices = OriginalIndices.readOriginalIndices(in);\n     }\n \n+    public ShardSearchRequest(ShardSearchRequest clone) {\n+        this.shardId = clone.shardId;\n+        this.searchType = clone.searchType;\n+        this.numberOfShards = clone.numberOfShards;\n+        this.scroll = clone.scroll;\n+        this.source = clone.source;\n+        this.aliasFilter = clone.aliasFilter;\n+        this.indexBoost = clone.indexBoost;\n+        this.nowInMillis = clone.nowInMillis;\n+        this.requestCache = clone.requestCache;\n+        this.clusterAlias = clone.clusterAlias;\n+        this.allowPartialSearchResults = clone.allowPartialSearchResults;\n+        this.indexRoutings = clone.indexRoutings;\n+        this.preference = clone.preference;\n+        this.canReturnNullResponseIfMatchNoDocs = clone.canReturnNullResponseIfMatchNoDocs;\n+        this.bottomSortValues = clone.bottomSortValues;\n+        this.originalIndices = clone.originalIndices;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NDExMA=="}, "originalCommit": {"oid": "c9e63a2025065fb7ac4b9be1e8786b5f5f3c9cc0"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4146, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}