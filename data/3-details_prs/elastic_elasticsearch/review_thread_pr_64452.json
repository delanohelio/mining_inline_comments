{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMzMwOTk5", "number": 64452, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMjozOToxOFrOE1Abaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzowNTo1MFrOE1A2Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDE3MDAzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/slm/SnapshotLifecyclePolicy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMjozOToxOFrOHtC_1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzoxODoyNFrOHtiBfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5NzA3Ng==", "bodyText": "Since this is public, can you add javadocs and perhaps rather than returning a long we could take this opportunity and return a TimeValue so that we never have unit mismatch issues?", "url": "https://github.com/elastic/elasticsearch/pull/64452#discussion_r516997076", "createdAt": "2020-11-03T22:39:18Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/slm/SnapshotLifecyclePolicy.java", "diffHunk": "@@ -133,6 +133,17 @@ public long calculateNextExecution() {\n         return schedule.getNextValidTimeAfter(System.currentTimeMillis());\n     }\n \n+    public long calculateNextInterval() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a931f11d2e01deb2d5e43e36da0a1290dd73dd2d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUwNTQwNQ==", "bodyText": "\u2705, f766e94", "url": "https://github.com/elastic/elasticsearch/pull/64452#discussion_r517505405", "createdAt": "2020-11-04T17:18:24Z", "author": {"login": "joegallo"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/slm/SnapshotLifecyclePolicy.java", "diffHunk": "@@ -133,6 +133,17 @@ public long calculateNextExecution() {\n         return schedule.getNextValidTimeAfter(System.currentTimeMillis());\n     }\n \n+    public long calculateNextInterval() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5NzA3Ng=="}, "originalCommit": {"oid": "a931f11d2e01deb2d5e43e36da0a1290dd73dd2d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDE3NDY0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/slm/SnapshotLifecycleService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMjo0MDo1OFrOHtDCkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo1MToxMFrOHteSPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5Nzc3Ng==", "bodyText": "We should include what the limit for frequency is in the error message, and perhaps something like:\ninvalid schedule [*/1 * * * ?]: schedule would be too frequent, executing more frequently than [15m] interval\n\n(the wording doesn't have to be exactly that, just an example)", "url": "https://github.com/elastic/elasticsearch/pull/64452#discussion_r516997776", "createdAt": "2020-11-03T22:40:58Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/slm/SnapshotLifecycleService.java", "diffHunk": "@@ -234,6 +236,20 @@ public static void validateRepositoryExists(final String repository, final Clust\n             .orElseThrow(() -> new IllegalArgumentException(\"no such repository [\" + repository + \"]\"));\n     }\n \n+    /**\n+     * Validates that the interval between snapshots is not smaller than the minimum interval\n+     * (see {@link LifecycleSettings#SLM_MINIMUM_INTERVAL_SETTING})\n+     * @throws IllegalArgumentException if the interval is less than the minimum\n+     */\n+    public static void validateMinimumInterval(final SnapshotLifecyclePolicy lifecycle, final ClusterState state) {\n+        TimeValue minimumInterval = LifecycleSettings.SLM_MINIMUM_INTERVAL_SETTING.get(state.metadata().settings());\n+        long minimumIntervalMillis = minimumInterval.getMillis();\n+        long nextInterval = lifecycle.calculateNextInterval();\n+        if (nextInterval >= 0 && minimumIntervalMillis > 0 && nextInterval < minimumIntervalMillis) {\n+            throw new IllegalArgumentException(\"invalid schedule [\" + lifecycle.getSchedule() + \"]: too frequent\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a931f11d2e01deb2d5e43e36da0a1290dd73dd2d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ0NDE1Ng==", "bodyText": "\ud83d\udc4d, how about 2798b78?", "url": "https://github.com/elastic/elasticsearch/pull/64452#discussion_r517444156", "createdAt": "2020-11-04T15:51:10Z", "author": {"login": "joegallo"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/slm/SnapshotLifecycleService.java", "diffHunk": "@@ -234,6 +236,20 @@ public static void validateRepositoryExists(final String repository, final Clust\n             .orElseThrow(() -> new IllegalArgumentException(\"no such repository [\" + repository + \"]\"));\n     }\n \n+    /**\n+     * Validates that the interval between snapshots is not smaller than the minimum interval\n+     * (see {@link LifecycleSettings#SLM_MINIMUM_INTERVAL_SETTING})\n+     * @throws IllegalArgumentException if the interval is less than the minimum\n+     */\n+    public static void validateMinimumInterval(final SnapshotLifecyclePolicy lifecycle, final ClusterState state) {\n+        TimeValue minimumInterval = LifecycleSettings.SLM_MINIMUM_INTERVAL_SETTING.get(state.metadata().settings());\n+        long minimumIntervalMillis = minimumInterval.getMillis();\n+        long nextInterval = lifecycle.calculateNextInterval();\n+        if (nextInterval >= 0 && minimumIntervalMillis > 0 && nextInterval < minimumIntervalMillis) {\n+            throw new IllegalArgumentException(\"invalid schedule [\" + lifecycle.getSchedule() + \"]: too frequent\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5Nzc3Ng=="}, "originalCommit": {"oid": "a931f11d2e01deb2d5e43e36da0a1290dd73dd2d"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDIzMjE4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/slm/SnapshotLifecycleService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzowMzowNFrOHtDkVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo1MjoxNlrOHteVfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNjQyMA==", "bodyText": "Since it's static (yay), can you add a unit test for this method to SnapshotLifecycleServiceTests?", "url": "https://github.com/elastic/elasticsearch/pull/64452#discussion_r517006420", "createdAt": "2020-11-03T23:03:04Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/slm/SnapshotLifecycleService.java", "diffHunk": "@@ -234,6 +236,20 @@ public static void validateRepositoryExists(final String repository, final Clust\n             .orElseThrow(() -> new IllegalArgumentException(\"no such repository [\" + repository + \"]\"));\n     }\n \n+    /**\n+     * Validates that the interval between snapshots is not smaller than the minimum interval\n+     * (see {@link LifecycleSettings#SLM_MINIMUM_INTERVAL_SETTING})\n+     * @throws IllegalArgumentException if the interval is less than the minimum\n+     */\n+    public static void validateMinimumInterval(final SnapshotLifecyclePolicy lifecycle, final ClusterState state) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a931f11d2e01deb2d5e43e36da0a1290dd73dd2d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ0NDk4OA==", "bodyText": "\u2705, 4526dc7", "url": "https://github.com/elastic/elasticsearch/pull/64452#discussion_r517444988", "createdAt": "2020-11-04T15:52:16Z", "author": {"login": "joegallo"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/slm/SnapshotLifecycleService.java", "diffHunk": "@@ -234,6 +236,20 @@ public static void validateRepositoryExists(final String repository, final Clust\n             .orElseThrow(() -> new IllegalArgumentException(\"no such repository [\" + repository + \"]\"));\n     }\n \n+    /**\n+     * Validates that the interval between snapshots is not smaller than the minimum interval\n+     * (see {@link LifecycleSettings#SLM_MINIMUM_INTERVAL_SETTING})\n+     * @throws IllegalArgumentException if the interval is less than the minimum\n+     */\n+    public static void validateMinimumInterval(final SnapshotLifecyclePolicy lifecycle, final ClusterState state) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNjQyMA=="}, "originalCommit": {"oid": "a931f11d2e01deb2d5e43e36da0a1290dd73dd2d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDIzODg2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/qa/rest/src/yamlRestTest/resources/rest-api-spec/test/ilm/11_basic_slm.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzowNTo1MFrOHtDoGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo1MjowMFrOHteUqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzM4NA==", "bodyText": "We should catch the actual exception here with something like:\ncatch: /invalid schedule \\[0 * * * * ?\\]: too frequent/\n\n(with whatever the final message ends up being)", "url": "https://github.com/elastic/elasticsearch/pull/64452#discussion_r517007384", "createdAt": "2020-11-03T23:05:50Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/qa/rest/src/yamlRestTest/resources/rest-api-spec/test/ilm/11_basic_slm.yml", "diffHunk": "@@ -24,6 +24,20 @@ setup:\n           settings:\n             location: \"my-snaps\"\n \n+  - do:\n+      catch: bad_request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a931f11d2e01deb2d5e43e36da0a1290dd73dd2d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ0NDc3Nw==", "bodyText": "\u2705, 2798b78.", "url": "https://github.com/elastic/elasticsearch/pull/64452#discussion_r517444777", "createdAt": "2020-11-04T15:52:00Z", "author": {"login": "joegallo"}, "path": "x-pack/plugin/ilm/qa/rest/src/yamlRestTest/resources/rest-api-spec/test/ilm/11_basic_slm.yml", "diffHunk": "@@ -24,6 +24,20 @@ setup:\n           settings:\n             location: \"my-snaps\"\n \n+  - do:\n+      catch: bad_request", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzM4NA=="}, "originalCommit": {"oid": "a931f11d2e01deb2d5e43e36da0a1290dd73dd2d"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4131, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}