{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2ODYyMTc2", "number": 56620, "title": "Cancel task and descendants on channel disconnects", "bodyText": "If a channel gets disconnected, then we should cancel the tasks associated with that channel as their results won't be retrieved.\nI opened this PR to provide more background for the discussion in #56327.\nCloses #56327\nRelates #56619", "createdAt": "2020-05-12T17:19:38Z", "url": "https://github.com/elastic/elasticsearch/pull/56620", "merged": true, "mergeCommit": {"oid": "595ce8b5e3719cad977a501cd39bd2c3fa720771"}, "closed": true, "closedAt": "2020-05-13T23:06:37Z", "author": {"login": "dnhatn"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgnPMSgH2gAyNDE2ODYyMTc2OjU5ZjUwYTAyMGUwNzJmODgxM2I3MzY3ZWQ2ZTlmZDAyODRkZThlMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchAFgkAH2gAyNDE2ODYyMTc2OmZkOTRiOTc5OGUwMjFkYmJkYmEzYjA3NDYzMTE2MzQ2OWRiYmU0NGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59f50a020e072f8813b7367ed6e9fd0284de8e22", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/59f50a020e072f8813b7367ed6e9fd0284de8e22", "committedDate": "2020-05-12T16:54:33Z", "message": "Cancel task and descendants on channel disconnects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d92ef102c68b753266218518de777c02d15d1cf9", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/d92ef102c68b753266218518de777c02d15d1cf9", "committedDate": "2020-05-12T18:08:15Z", "message": "Merge branch 'master' into cancel-on-disconnect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22b28fa81d4dae04cb1c44a38296a9cea8c58490", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/22b28fa81d4dae04cb1c44a38296a9cea8c58490", "committedDate": "2020-05-12T18:09:16Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzUxMzg0", "url": "https://github.com/elastic/elasticsearch/pull/56620#pullrequestreview-410351384", "createdAt": "2020-05-12T19:22:01Z", "commit": {"oid": "22b28fa81d4dae04cb1c44a38296a9cea8c58490"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToyMjowMVrOGUVebQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTo0MTo1MVrOGUWLxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3NjU1Nw==", "bodyText": "I think we need to clean these up when the channel closes. Maybe slightly tricky, we might close the channel concurrently with calling this method too.", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r423976557", "createdAt": "2020-05-12T19:22:01Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -607,4 +602,41 @@ void unregisterChildNode(DiscoveryNode node) {\n         }\n     }\n \n+    /**\n+     * Start tracking a cancellable task with its tcp channel, so if the channel gets closed we can get a set of\n+     * pending tasks associated that channel and cancel them as these results won't be retrieved by the parent task.\n+     *\n+     * @return a releasable that should be called when this pending task is completed\n+     */\n+    public Releasable startTrackingCancellableChannelTask(TcpChannel channel, CancellableTask task) {\n+        assert cancellableTasks.containsKey(task.getId()) : \"task [\" + task.getId() + \"] is not registered yet\";\n+        final ChannelPendingTaskTracker tracker = channelPendingTaskTrackers.computeIfAbsent(channel, k -> new ChannelPendingTaskTracker());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b28fa81d4dae04cb1c44a38296a9cea8c58490"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3NjkyMw==", "bodyText": "Can we assert it was removed?", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r423976923", "createdAt": "2020-05-12T19:22:42Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -607,4 +602,41 @@ void unregisterChildNode(DiscoveryNode node) {\n         }\n     }\n \n+    /**\n+     * Start tracking a cancellable task with its tcp channel, so if the channel gets closed we can get a set of\n+     * pending tasks associated that channel and cancel them as these results won't be retrieved by the parent task.\n+     *\n+     * @return a releasable that should be called when this pending task is completed\n+     */\n+    public Releasable startTrackingCancellableChannelTask(TcpChannel channel, CancellableTask task) {\n+        assert cancellableTasks.containsKey(task.getId()) : \"task [\" + task.getId() + \"] is not registered yet\";\n+        final ChannelPendingTaskTracker tracker = channelPendingTaskTrackers.computeIfAbsent(channel, k -> new ChannelPendingTaskTracker());\n+        tracker.pendingTasks.add(task);\n+        if (tracker.registered.compareAndSet(false, true)) {\n+            channel.addCloseListener(ActionListener.wrap(\n+                r -> {\n+                    final Set<CancellableTask> pendingTasks = Collections.unmodifiableSet(tracker.pendingTasks);\n+                    for (Consumer<Set<CancellableTask>> listener : onChannelCloseListeners) {\n+                        listener.accept(pendingTasks);\n+                    }\n+                },\n+                e -> {\n+                    assert false : new AssertionError(\"must not be here\", e);\n+                }));\n+        }\n+        return () -> tracker.pendingTasks.remove(task);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b28fa81d4dae04cb1c44a38296a9cea8c58490"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4NzU2OQ==", "bodyText": "I wasn't expecting this to be included here, although perhaps it makes sense as a separate change. It's reasonable if the node is shut down but today we also cancel these tasks if the node is temporarily partitioned from the master, and perhaps we want to keep that behaviour.\nThe issue is that we don't tell the partitioned node that it has been dropped from the cluster so it won't close its outgoing channels, which means we won't cancel those tasks any more if we remove this.\nAlso looks like the tests around this are quite weak, since this change doesn't seem to have a corresponding change to the tests.", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r423987569", "createdAt": "2020-05-12T19:40:42Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -442,17 +448,6 @@ public void applyClusterState(ClusterChangedEvent event) {\n                     }\n                 }\n             }\n-            // Cancel cancellable tasks for the nodes that are gone", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b28fa81d4dae04cb1c44a38296a9cea8c58490"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4ODE2NA==", "bodyText": "Maybe log a warning here?", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r423988164", "createdAt": "2020-05-12T19:41:51Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java", "diffHunk": "@@ -276,4 +279,23 @@ public void messageReceived(final BanParentTaskRequest request, final TransportC\n         }\n     }\n \n+    void cancelOrphanedTasks(Set<CancellableTask> orphanedTasks) {\n+        if (orphanedTasks.isEmpty() == false) {\n+            transportService.getThreadPool().generic().execute(new AbstractRunnable() {\n+                @Override\n+                public void onFailure(Exception e) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b28fa81d4dae04cb1c44a38296a9cea8c58490"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92bbcf2227e6efb9fe5d501dac2850bb8c2e75d8", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/92bbcf2227e6efb9fe5d501dac2850bb8c2e75d8", "committedDate": "2020-05-12T20:38:12Z", "message": "Merge branch 'master' into cancel-on-disconnect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4f7586c16d83ffea09b3f080e3a3d0a418ffeb3", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/d4f7586c16d83ffea09b3f080e3a3d0a418ffeb3", "committedDate": "2020-05-12T20:44:45Z", "message": "warning log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbe02c7eae5f3aa58f1a6757ac7697da7e95242f", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/cbe02c7eae5f3aa58f1a6757ac7697da7e95242f", "committedDate": "2020-05-12T20:50:54Z", "message": "remove tracker on close"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09a612eb067c2173fa060e3e2bea3bbedabfde8e", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/09a612eb067c2173fa060e3e2bea3bbedabfde8e", "committedDate": "2020-05-12T20:52:02Z", "message": "assertion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b4e3bef9e1d36b9188b5b5451c8b643e648ba23", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/3b4e3bef9e1d36b9188b5b5451c8b643e648ba23", "committedDate": "2020-05-12T20:59:48Z", "message": "wording"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDMyMjIy", "url": "https://github.com/elastic/elasticsearch/pull/56620#pullrequestreview-410432222", "createdAt": "2020-05-12T21:22:32Z", "commit": {"oid": "3b4e3bef9e1d36b9188b5b5451c8b643e648ba23"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyMjozMlrOGUZcCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyNTowNVrOGUZg3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0MTQ4MA==", "bodyText": "What if the channel is closed (and the close listener executes completely) just before this line executes? I think that means we never cancel the task added in this line.\nCould we have a test with some concurrency to pick this up?", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r424041480", "createdAt": "2020-05-12T21:22:32Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -607,4 +602,53 @@ void unregisterChildNode(DiscoveryNode node) {\n         }\n     }\n \n+    /**\n+     * Start tracking a cancellable task with its tcp channel, so if the channel gets closed we can get a set of\n+     * pending tasks associated that channel and cancel them as these results won't be retrieved by the parent task.\n+     *\n+     * @return a releasable that should be called when this pending task is completed\n+     */\n+    public Releasable startTrackingCancellableChannelTask(TcpChannel channel, CancellableTask task) {\n+        assert cancellableTasks.containsKey(task.getId()) : \"task [\" + task.getId() + \"] is not registered yet\";\n+        final ChannelPendingTaskTracker tracker = channelPendingTaskTrackers.computeIfAbsent(channel, k -> new ChannelPendingTaskTracker());\n+        tracker.addTask(task);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4e3bef9e1d36b9188b5b5451c8b643e648ba23"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0MjcxOA==", "bodyText": "I see, in which case this change is ok with me. Could we make that test stronger? It seems very artificial that the tasks are only cancelled on testNodes[0].close();.", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r424042718", "createdAt": "2020-05-12T21:25:05Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -442,17 +448,6 @@ public void applyClusterState(ClusterChangedEvent event) {\n                     }\n                 }\n             }\n-            // Cancel cancellable tasks for the nodes that are gone", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4NzU2OQ=="}, "originalCommit": {"oid": "22b28fa81d4dae04cb1c44a38296a9cea8c58490"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDQ4NjQ2", "url": "https://github.com/elastic/elasticsearch/pull/56620#pullrequestreview-410448646", "createdAt": "2020-05-12T21:51:03Z", "commit": {"oid": "3b4e3bef9e1d36b9188b5b5451c8b643e648ba23"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1MTowM1rOGUaP2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1NTozMlrOGUaXsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1NDc0NA==", "bodyText": "The issue is that we don't tell the partitioned node that it has been dropped from the cluster so it won't close its outgoing channels, which means we won't cancel those tasks any more if we remove this.\n\nThat looks like an enhancement to me. If the channel is still active we should give a chance for the task to finish ?", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r424054744", "createdAt": "2020-05-12T21:51:03Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -442,17 +448,6 @@ public void applyClusterState(ClusterChangedEvent event) {\n                     }\n                 }\n             }\n-            // Cancel cancellable tasks for the nodes that are gone", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4NzU2OQ=="}, "originalCommit": {"oid": "22b28fa81d4dae04cb1c44a38296a9cea8c58490"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1Njc1Mw==", "bodyText": "Do we need to add multiple listeners ? I think  it would be cleaner to move the logic to cancel a task directly in the TaskManager and call it from TransportCancelTasksAction ?", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r424056753", "createdAt": "2020-05-12T21:55:32Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -607,4 +602,53 @@ void unregisterChildNode(DiscoveryNode node) {\n         }\n     }\n \n+    /**\n+     * Start tracking a cancellable task with its tcp channel, so if the channel gets closed we can get a set of\n+     * pending tasks associated that channel and cancel them as these results won't be retrieved by the parent task.\n+     *\n+     * @return a releasable that should be called when this pending task is completed\n+     */\n+    public Releasable startTrackingCancellableChannelTask(TcpChannel channel, CancellableTask task) {\n+        assert cancellableTasks.containsKey(task.getId()) : \"task [\" + task.getId() + \"] is not registered yet\";\n+        final ChannelPendingTaskTracker tracker = channelPendingTaskTrackers.computeIfAbsent(channel, k -> new ChannelPendingTaskTracker());\n+        tracker.addTask(task);\n+        if (tracker.registered.compareAndSet(false, true)) {\n+            channel.addCloseListener(ActionListener.wrap(\n+                r -> {\n+                    final ChannelPendingTaskTracker removedTracker = channelPendingTaskTrackers.remove(channel);\n+                    assert removedTracker == tracker;\n+                    final Set<CancellableTask> pendingTasks = Collections.unmodifiableSet(tracker.pendingTasks);\n+                    for (Consumer<Set<CancellableTask>> listener : onChannelCloseListeners) {\n+                        listener.accept(pendingTasks);\n+                    }\n+                },\n+                e -> {\n+                    assert false : new AssertionError(\"must not be here\", e);\n+                }));\n+        }\n+        return () -> tracker.removeTask(task);\n+    }\n+\n+    /**\n+     * Register a callback which will be called when a transport channel is closed and there're some pending orphaned\n+     * tasks associate with that transport channel.\n+     */\n+    public void registerOrphanedTasksOnChannelCloseListener(Consumer<Set<CancellableTask>> listener) {\n+        onChannelCloseListeners.add(listener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4e3bef9e1d36b9188b5b5451c8b643e648ba23"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d2de32dde9b1ab7b73c483670a45b9666878cb7", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/1d2de32dde9b1ab7b73c483670a45b9666878cb7", "committedDate": "2020-05-13T00:16:21Z", "message": "single listener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdfa4f24a4fd99a819ada8db4580e84bbdd12a22", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/bdfa4f24a4fd99a819ada8db4580e84bbdd12a22", "committedDate": "2020-05-13T02:17:41Z", "message": "track and close concurrently"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ae70421eaffc6fc67f4fcaf74030099c9c01668", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/8ae70421eaffc6fc67f4fcaf74030099c9c01668", "committedDate": "2020-05-13T02:34:04Z", "message": "simulate other condition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebcd4fabf1696a086bf9ac63ce6b19574598a962", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/ebcd4fabf1696a086bf9ac63ce6b19574598a962", "committedDate": "2020-05-13T02:47:42Z", "message": "Merge branch 'master' into cancel-on-disconnect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37a77d618ec2ca3e2661dd21363a6eadeec9c958", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/37a77d618ec2ca3e2661dd21363a6eadeec9c958", "committedDate": "2020-05-13T03:30:15Z", "message": "stylecheck"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjcxNDUy", "url": "https://github.com/elastic/elasticsearch/pull/56620#pullrequestreview-410671452", "createdAt": "2020-05-13T07:50:11Z", "commit": {"oid": "37a77d618ec2ca3e2661dd21363a6eadeec9c958"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzo1MDoxMVrOGUli2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzo1NDo1N1rOGUluMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzOTgzNA==", "bodyText": "I think we should move this code (cancelTaskAndDescendants) in the TaskManager and expose a simple TaskManager#cancel method that this action can call. That would remove the need to have public methods in  the TaskManager around bans and orphaned tasks. They should be private and solely used by the TaskManager to cancel a task internally ?", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r424239834", "createdAt": "2020-05-13T07:50:11Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java", "diffHunk": "@@ -276,4 +279,23 @@ public void messageReceived(final BanParentTaskRequest request, final TransportC\n         }\n     }\n \n+    void cancelOrphanedTasks(Set<CancellableTask> orphanedTasks) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37a77d618ec2ca3e2661dd21363a6eadeec9c958"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI0MjczNw==", "bodyText": "Looks like there is a race condition that leads to an AssertionError. See my comment below, I think the logic to cancel a task and its children/descendants should be entirely in the TaskManager.", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r424242737", "createdAt": "2020-05-13T07:54:57Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java", "diffHunk": "@@ -70,6 +72,7 @@ public TransportCancelTasksAction(ClusterService clusterService, TransportServic\n             CancelTasksRequest::new, CancelTasksResponse::new, TaskInfo::new, ThreadPool.Names.MANAGEMENT);\n         transportService.registerRequestHandler(BAN_PARENT_ACTION_NAME, ThreadPool.Names.SAME, BanParentTaskRequest::new,\n             new BanParentRequestHandler());\n+        taskManager.setOrphanedTasksOnChannelCloseListener(this::cancelOrphanedTasks);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37a77d618ec2ca3e2661dd21363a6eadeec9c958"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd2950455daec1e115a0cbbdafb986c51bc77585", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/bd2950455daec1e115a0cbbdafb986c51bc77585", "committedDate": "2020-05-13T15:30:51Z", "message": "Move cancellation descendants to cancellation service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e78fadb8de84a805b6499f1b8c06c71456cd042", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/8e78fadb8de84a805b6499f1b8c06c71456cd042", "committedDate": "2020-05-13T15:34:39Z", "message": "Merge branch 'master' into cancel-on-disconnect"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjk0OTI3", "url": "https://github.com/elastic/elasticsearch/pull/56620#pullrequestreview-411294927", "createdAt": "2020-05-13T20:59:15Z", "commit": {"oid": "8e78fadb8de84a805b6499f1b8c06c71456cd042"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo1OToxNlrOGVDTsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTowMzoxN1rOGVDbuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyNzQ3NQ==", "bodyText": "\ud83d\udcaf", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r424727475", "createdAt": "2020-05-13T20:59:16Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -607,4 +608,98 @@ void unregisterChildNode(DiscoveryNode node) {\n         }\n     }\n \n+    /**\n+     * Start tracking a cancellable task with its tcp channel, so if the channel gets closed we can get a set of\n+     * pending tasks associated that channel and cancel them as these results won't be retrieved by the parent task.\n+     *\n+     * @return a releasable that should be called when this pending task is completed\n+     */\n+    public Releasable startTrackingCancellableChannelTask(TcpChannel channel, CancellableTask task) {\n+        assert cancellableTasks.containsKey(task.getId()) : \"task [\" + task.getId() + \"] is not registered yet\";\n+        final ChannelPendingTaskTracker tracker = channelPendingTaskTrackers.compute(channel, (k, curr) -> {\n+            if (curr == null) {\n+                curr = new ChannelPendingTaskTracker();\n+            }\n+            curr.addTask(task);\n+            return curr;\n+        });\n+        if (tracker.registered.compareAndSet(false, true)) {\n+            channel.addCloseListener(ActionListener.wrap(\n+                r -> {\n+                    final ChannelPendingTaskTracker removedTracker = channelPendingTaskTrackers.remove(channel);\n+                    assert removedTracker == tracker;\n+                    cancelTasksOnChannelClosed(tracker.drainTasks());\n+                },\n+                e -> {\n+                    assert false : new AssertionError(\"must not be here\", e);\n+                }));\n+        }\n+        return () -> tracker.removeTask(task);\n+    }\n+\n+    // for testing\n+    final int numberOfChannelPendingTaskTrackers() {\n+        return channelPendingTaskTrackers.size();\n+    }\n+\n+    private static class ChannelPendingTaskTracker {\n+        final AtomicBoolean registered = new AtomicBoolean();\n+        final Semaphore permits = Assertions.ENABLED ? new Semaphore(Integer.MAX_VALUE) : null;\n+        final Set<CancellableTask> pendingTasks = ConcurrentCollections.newConcurrentSet();\n+\n+        void addTask(CancellableTask task) {\n+            assert permits.tryAcquire() : \"tracker was drained\";\n+            final boolean added = pendingTasks.add(task);\n+            assert added : \"task \" + task.getId() + \" is in the pending list already\";\n+            assert releasePermit();\n+        }\n+\n+        boolean acquireAllPermits() {\n+            permits.acquireUninterruptibly(Integer.MAX_VALUE);\n+            return true;\n+        }\n+\n+        boolean releasePermit() {\n+            permits.release();\n+            return true;\n+        }\n+\n+        Set<CancellableTask> drainTasks() {\n+            assert acquireAllPermits(); // do not release permits so we can't add tasks to this tracker after draining\n+            return Collections.unmodifiableSet(pendingTasks);\n+        }\n+\n+        void removeTask(CancellableTask task) {\n+            final boolean removed = pendingTasks.remove(task);\n+            assert removed : \"task \" + task.getId() + \" is not in the pending list\";\n+        }\n+    }\n+\n+    private void cancelTasksOnChannelClosed(Set<CancellableTask> tasks) {\n+        if (tasks.isEmpty() == false) {\n+            threadPool.generic().execute(new AbstractRunnable() {\n+                @Override\n+                public void onFailure(Exception e) {\n+                    logger.warn(\"failed to cancel tasks on channel closed\", e);\n+                }\n+\n+                @Override\n+                protected void doRun() {\n+                    for (CancellableTask task : tasks) {\n+                        cancelTaskAndDescendants(task, \"channel was closed\", false, ActionListener.wrap(() -> {}));\n+                    }\n+                }\n+            });\n+        }\n+    }\n+\n+    public void cancelTaskAndDescendants(CancellableTask task, String reason, boolean waitForCompletion, ActionListener<Void> listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e78fadb8de84a805b6499f1b8c06c71456cd042"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyOTUzMQ==", "bodyText": "why isn't it instantiated when we create the TaskManager (TransportService#createTaskManager) ?", "url": "https://github.com/elastic/elasticsearch/pull/56620#discussion_r424729531", "createdAt": "2020-05-13T21:03:17Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/node/Node.java", "diffHunk": "@@ -717,6 +718,7 @@ public Node start() throws NodeValidationException {\n         // Start the transport service now so the publish address will be added to the local disco node in ClusterService\n         TransportService transportService = injector.getInstance(TransportService.class);\n         transportService.getTaskManager().setTaskResultsService(injector.getInstance(TaskResultsService.class));\n+        transportService.getTaskManager().setTaskCancellationService(new TaskCancellationService(transportService));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e78fadb8de84a805b6499f1b8c06c71456cd042"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9329a105a9c77bb155218a1cd1d6a984b6e941b3", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/9329a105a9c77bb155218a1cd1d6a984b6e941b3", "committedDate": "2020-05-13T21:08:56Z", "message": "Merge branch 'master' into cancel-on-disconnect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "956859c5033377cd44393907832c688fed98228c", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/956859c5033377cd44393907832c688fed98228c", "committedDate": "2020-05-13T21:48:04Z", "message": "assign earlier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd94b9798e021dbbdba3b074631163469dbbe44c", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/fd94b9798e021dbbdba3b074631163469dbbe44c", "committedDate": "2020-05-13T21:51:36Z", "message": "Revert \"assign earlier\"\n\nThis reverts commit 956859c5033377cd44393907832c688fed98228c."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 39, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}