{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5ODQyMTE2", "number": 62004, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjoyMTowMFrOEgcr-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjoyMTo1OVrOEgctGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNDU5ODk5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjoyMTowMFrOHNUJew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjoyMTowMFrOHNUJew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyMzY0Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/62004#discussion_r483723643", "createdAt": "2020-09-04T16:21:00Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java", "diffHunk": "@@ -187,6 +187,9 @@ protected void toXContent(XContentBuilder builder, boolean includeDefaults) thro\n                 this.contexts.getValue().toXContent(builder, ToXContent.EMPTY_PARAMS);\n                 builder.endArray();\n             }\n+            if (this.meta.getValue().isEmpty() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57756c3273a901167170250bbe19d504e40776ce"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNDYwMTg0OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/index/mapper/BooleanFieldMapperTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjoyMTo1OVrOHNULSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjoyMTo1OVrOHNULSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyNDEwNA==", "bodyText": "Hit this one with the formatter please!", "url": "https://github.com/elastic/elasticsearch/pull/62004#discussion_r483724104", "createdAt": "2020-09-04T16:21:59Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/BooleanFieldMapperTests.java", "diffHunk": "@@ -137,109 +88,67 @@ public void testSerialization() throws IOException {\n     }\n \n     public void testParsesBooleansStrict() throws IOException {\n-        String mapping = Strings.toString(XContentFactory.jsonBuilder()\n-            .startObject()\n-                .startObject(\"type\")\n-                    .startObject(\"properties\")\n-                        .startObject(\"field\")\n-                            .field(\"type\", \"boolean\")\n-                        .endObject()\n-                    .endObject()\n-                .endObject()\n-            .endObject());\n-        DocumentMapper defaultMapper = parser.parse(\"type\", new CompressedXContent(mapping));\n+        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n         // omit \"false\"/\"true\" here as they should still be parsed correctly\n-        String randomValue = randomFrom(\"off\", \"no\", \"0\", \"on\", \"yes\", \"1\");\n-        BytesReference source = BytesReference.bytes(XContentFactory.jsonBuilder()\n-                .startObject()\n-                    .field(\"field\", randomValue)\n-                .endObject());\n-        MapperParsingException ex = expectThrows(MapperParsingException.class,\n-                () -> defaultMapper.parse(new SourceToParse(\"test\", \"1\", source, XContentType.JSON)));\n-        assertEquals(\"failed to parse field [field] of type [boolean] in document with id '1'. \" +\n-            \"Preview of field's value: '\" + randomValue + \"'\", ex.getMessage());\n+        for (String value: new String[]{\"off\", \"no\", \"0\", \"on\", \"yes\", \"1\"}) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57756c3273a901167170250bbe19d504e40776ce"}, "originalPosition": 165}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1766, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}