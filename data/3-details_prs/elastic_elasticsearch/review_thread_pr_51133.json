{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzOTMzOTg5", "number": 51133, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjoxMjo1NVrODY84hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjoxMjo1NVrODY84hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDg5OTI1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/anomaly-detection/categories.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjoxMjo1NVrOFfGkrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjoxMjo1NVrOFfGkrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1Nzg2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In {kib}, there is categorization wizard to help you create this type of \n          \n          \n            \n            In {kib}, there is a categorization wizard to help you create this type of", "url": "https://github.com/elastic/elasticsearch/pull/51133#discussion_r368157868", "createdAt": "2020-01-17T22:12:55Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/anomaly-detection/categories.asciidoc", "diffHunk": "@@ -1,174 +1,131 @@\n [role=\"xpack\"]\n [[ml-configuring-categories]]\n-=== Categorizing data\n+=== Detecting anomalous categories of data\n \n-Categorization is a {ml} process that considers a tokenization of a field, \n-clusters similar data together, and classifies them into categories. However, \n-categorization doesn't work equally well on different data types. It works \n-best on machine-written messages and application outputs, typically on data that \n-consists of repeated elements, for example log messages for the purpose of \n-system troubleshooting. Log categorization groups unstructured log messages into \n-categories, then you can use {anomaly-detect} to model and identify rare or \n-unusual counts of log message categories.\n+Categorization is a {ml} process that tokenizes a text field, clusters similar\n+data together, and classifies it into categories. It works best on\n+machine-written messages and application output that typically consist of\n+repeated elements. For example, it works well on logs that contain a finite set\n+of possible messages:\n \n-Categorization is tuned to work best on data like log messages by taking token\n-order into account, not considering synonyms, and including stop words in its \n-analysis. Complete sentences in human communication or literary text (for \n-example emails, wiki pages, prose, or other human generated content) can be \n-extremely diverse in structure.  Since categorization is tuned for machine data \n-it will give poor results on such human generated data. For example, the \n-categorization job would create so many categories that couldn't be handled \n-effectively.  Categorization is _not_ natural language processing (NLP).\n-\n-[float]\n-[[ml-categorization-log-messages]]\n-==== Categorizing log messages\n-\n-Application log events are often unstructured and contain variable data. For\n-example:\n //Obtained from it_ops_new_app_logs.json\n [source,js]\n ----------------------------------\n-{\"time\":1454516381000,\"message\":\"org.jdbi.v2.exceptions.UnableToExecuteStatementException: com.mysql.jdbc.exceptions.MySQLTimeoutException: Statement cancelled due to timeout or client request [statement:\\\"SELECT id, customer_id, name, force_disabled, enabled FROM customers\\\"]\",\"type\":\"logs\"}\n+{\"@timestamp\":1549596476000,\n+\"message\":\"org.jdbi.v2.exceptions.UnableToExecuteStatementException: com.mysql.jdbc.exceptions.MySQLTimeoutException: Statement cancelled due to timeout or client request [statement:\\\"SELECT id, customer_id, name, force_disabled, enabled FROM customers\\\"]\",\n+\"type\":\"logs\"}\n ----------------------------------\n //NOTCONSOLE\n \n-You can use {ml} to observe the static parts of the message, cluster similar\n-messages together, and classify them into message categories.\n+Categorization is tuned to work best on data like log messages by taking token\n+order into account, including stop words, and not considering synonyms in its\n+analysis. Complete sentences in human communication or literary text (for\n+example email, wiki pages, prose, or other human-generated content) can be \n+extremely diverse in structure. Since categorization is tuned for machine data, \n+it gives poor results for human-generated data. It would create so many\n+categories that they couldn't be handled effectively. Categorization is _not_\n+natural language processing (NLP).\n+\n+When you create a categorization {anomaly-job}, the {ml} model learns what\n+volume and pattern is normal for each category over time. You can then detect\n+anomalies and surface rare events or unusual types of messages by using\n+<<ml-count-functions,count>> or <<ml-rare-functions,rare>> functions.\n+\n+In {kib}, there is categorization wizard to help you create this type of ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a4d46cf90d466c5be6f770866ae0724ae9d6ece"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4513, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}