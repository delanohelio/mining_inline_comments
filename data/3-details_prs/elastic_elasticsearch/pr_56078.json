{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNDY0NjE3", "number": 56078, "title": "Unify Stream Copy Buffer Usage", "bodyText": "We have various ways of copying between two streams and handling thread-local\nbuffers and stream copying throughout the code-base. This commit unifies a number of spots and\nremoves buffer allocations in many spots.\nI do not think that increasing the thread local buffer size from 1k to 8k is a problem in the affected spots:\nFirst off, we almost always will do string reading and writing on the same thread\nif we do one of the two operations on it so in most cases it's only a 6k increase to begin with.\nSecond, with an Xss of 1M we are increasing the per thread allocation by less than a percent at worst only while saving a lot of temporary byte array allocations in all kinds of common spots (raw xcontent fields, (de-)compressing and so on). Plus, having these thread-local buffers occupy a little space instead of having lots of uncollected 8k buffers on heap makes the circuit breaker a little more accurate as well.", "createdAt": "2020-05-02T15:10:21Z", "url": "https://github.com/elastic/elasticsearch/pull/56078", "merged": true, "mergeCommit": {"oid": "e28dbde289ea7e7fbe6a81f89873d716ade33bd8"}, "closed": true, "closedAt": "2020-08-03T16:21:25Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdXXa4gH2gAyNDEyNDY0NjE3OjY0OGU5MWRjNDE4OGU2MzE0ZGVlZWY0ZDg5YWRlMjQxODQxNGU2ZmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7TF_MgFqTQ2MDA4NTUxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "648e91dc4188e6314deeef4d89ade2418414e6fe", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/648e91dc4188e6314deeef4d89ade2418414e6fe", "committedDate": "2020-05-02T14:43:17Z", "message": "Unify Stream Copy Buffer Usage\n\nWe have various ways of copying between two streams and handling thread-local\nbuffers throughout the codebase. This commit unifies a number of them and\nremoves buffer allocations in many spots.\nI do not think that increasing the thread local buffer size from 1k to 8k is\na problem in the affected spots:\nFirst off, we almost always will do string reading and writing on the same thread\nif we do one of the two operations on it so in most cases it's a 2k to 8k\nincrease to begin with.\nSecond, with an Xss of 1M we are increasing the per thread allocation by .6% to .8%\nonly while saving a lot of temporary byte array allocations in spots where we are\noften just copying from memory to memory anyway (XContent raw fields, (de)-compressing, ...).\nPlus, the larger thread local buffers for string operations will cause fewer allocations when\nreading large strings as well and make writing large strings a little faster also."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "076239d999b45dd7e474a2f50a261d952b4c4c8b", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/076239d999b45dd7e474a2f50a261d952b4c4c8b", "committedDate": "2020-05-08T05:29:48Z", "message": "Merge remote-tracking branch 'elastic/master' into share-buffer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d955bae7d0720db6b4f79a427b27eca1b8479c8", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/6d955bae7d0720db6b4f79a427b27eca1b8479c8", "committedDate": "2020-07-30T09:48:15Z", "message": "Merge remote-tracking branch 'elastic/master' into share-buffer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a61a093c6c76b5cb0ad41cc0a8c8c5de77102fb", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/5a61a093c6c76b5cb0ad41cc0a8c8c5de77102fb", "committedDate": "2020-07-30T10:17:43Z", "message": "Merge remote-tracking branch 'elastic/master' into share-buffer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1eb30d7fcd9e966f986621ab1ec40784b05ff9f9", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/1eb30d7fcd9e966f986621ab1ec40784b05ff9f9", "committedDate": "2020-07-30T11:44:34Z", "message": "fix closing behavior"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e65ca6ef79a6a8a0f3ba9d9fac73fe0db80e9cb", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/8e65ca6ef79a6a8a0f3ba9d9fac73fe0db80e9cb", "committedDate": "2020-07-30T18:22:11Z", "message": "Merge remote-tracking branch 'elastic/master' into share-buffer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69fd331b2e99fd97cde716ccd7d9be77c4a2baf9", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/69fd331b2e99fd97cde716ccd7d9be77c4a2baf9", "committedDate": "2020-07-30T19:13:54Z", "message": "revert controversial pieces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NjY4ODkx", "url": "https://github.com/elastic/elasticsearch/pull/56078#pullrequestreview-458668891", "createdAt": "2020-07-30T18:51:24Z", "commit": {"oid": "1eb30d7fcd9e966f986621ab1ec40784b05ff9f9"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODo1MToyNFrOG5vp4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxOTo0MDowMVrOG5xLKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIwMjc4Nw==", "bodyText": "Can we name this method copy and also move the try/catch/finally logic here? I guess we can add a flag about whether to close the streams and you can various methods like:\npublic static long copy(final InputStream in, final OutputStream out) throws IOException {\n    copy(in, out, buffer.get(), true);\n}\n\npublic static long copy(final InputStream in, final OutputStream out, boolean close) throws IOException {\n    copy(in, out, buffer.get(), close);\n}\n\npublic static long copy(final InputStream in, final OutputStream out, byte[] buffer) {\n    copy(in, out, buffer, true);\n}\n\npublic static long copy(final InputStream in, final OutputStream out, byte[] buffer, boolean close) throws IOException {\n    Exception err = null;\n    try {\n        long byteCount = 0;\n        int bytesRead;\n        while ((bytesRead = in.read(buffer)) != -1) {\n            out.write(buffer, 0, bytesRead);\n            byteCount += bytesRead;\n        }\n        out.flush();\n        return byteCount;\n    } catch (Exception e) {\n        err = e;\n        throw e;\n    } finally {\n        if (close) {\n            IOUtils.close(err, in, out);\n        }\n    }\n}", "url": "https://github.com/elastic/elasticsearch/pull/56078#discussion_r463202787", "createdAt": "2020-07-30T18:51:24Z", "author": {"login": "jaymode"}, "path": "libs/core/src/main/java/org/elasticsearch/core/internal/io/Streams.java", "diffHunk": "@@ -56,4 +56,21 @@ public static long copy(final InputStream in, final OutputStream out) throws IOE\n         }\n     }\n \n+    /**\n+     * Returns a temporary thread local buffer.\n+     */\n+    public static byte[] getTemporaryBuffer() {\n+        return tempBuffer.get();\n+    }\n+\n+    public static long doCopy(InputStream in, OutputStream out, byte[] buffer) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eb30d7fcd9e966f986621ab1ec40784b05ff9f9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxMzc5OA==", "bodyText": "Can we do without this method? I think exposing a buffer from this class could be error prone", "url": "https://github.com/elastic/elasticsearch/pull/56078#discussion_r463213798", "createdAt": "2020-07-30T19:12:48Z", "author": {"login": "jaymode"}, "path": "libs/core/src/main/java/org/elasticsearch/core/internal/io/Streams.java", "diffHunk": "@@ -56,4 +56,21 @@ public static long copy(final InputStream in, final OutputStream out) throws IOE\n         }\n     }\n \n+    /**\n+     * Returns a temporary thread local buffer.\n+     */\n+    public static byte[] getTemporaryBuffer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eb30d7fcd9e966f986621ab1ec40784b05ff9f9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMDI2Ng==", "bodyText": "I think we should just be able to remove this method and use Streams#copy?", "url": "https://github.com/elastic/elasticsearch/pull/56078#discussion_r463220266", "createdAt": "2020-07-30T19:25:27Z", "author": {"login": "jaymode"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentGenerator.java", "diffHunk": "@@ -487,24 +475,15 @@ public boolean isClosed() {\n      *\n      * @param in  the stream to copy from\n      * @param out the stream to copy to\n-     * @return the number of bytes copied\n      * @throws IOException in case of I/O errors\n      */\n-    private static long copyStream(InputStream in, OutputStream out) throws IOException {\n+    private static void copyStream(InputStream in, OutputStream out) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69fd331b2e99fd97cde716ccd7d9be77c4a2baf9"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMjA3OQ==", "bodyText": "With my suggestion, we can just let Streams.copy handle the closing here?", "url": "https://github.com/elastic/elasticsearch/pull/56078#discussion_r463222079", "createdAt": "2020-07-30T19:28:56Z", "author": {"login": "jaymode"}, "path": "plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStore.java", "diffHunk": "@@ -309,7 +309,9 @@ public boolean isOpen() {\n                     public void close() throws IOException {\n                         SocketAccess.doPrivilegedVoidIOException(writeChannel::close);\n                     }\n-                }), buffer);\n+                })) {\n+                    org.elasticsearch.core.internal.io.Streams.doCopy(inputStream, out, buffer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69fd331b2e99fd97cde716ccd7d9be77c4a2baf9"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyNzY4OQ==", "bodyText": "I think we should consolidate the two Streams classes since the internal class was added for splitting the method out for a MR jar to take advantage of JDK9's transferTo method in #29322, but we don't use transferTo anymore for copying and on master we are already at JDK11 for a minimum.", "url": "https://github.com/elastic/elasticsearch/pull/56078#discussion_r463227689", "createdAt": "2020-07-30T19:40:01Z", "author": {"login": "jaymode"}, "path": "server/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java", "diffHunk": "@@ -212,7 +212,8 @@ public void writeBlobAtomic(final String blobName, final InputStream inputStream\n     private void writeToPath(InputStream inputStream, Path tempBlobPath, long blobSize) throws IOException {\n         try (OutputStream outputStream = Files.newOutputStream(tempBlobPath, StandardOpenOption.CREATE_NEW)) {\n             final int bufferSize = blobStore.bufferSizeInBytes();\n-            Streams.copy(inputStream, outputStream, new byte[blobSize < bufferSize ? Math.toIntExact(blobSize) : bufferSize]);\n+            org.elasticsearch.core.internal.io.Streams.doCopy(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69fd331b2e99fd97cde716ccd7d9be77c4a2baf9"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f78471108c9cae2d89dbed78be06ba4c7d8777e1", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/f78471108c9cae2d89dbed78be06ba4c7d8777e1", "committedDate": "2020-07-31T05:03:06Z", "message": "Merge remote-tracking branch 'elastic/master' into share-buffer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8ae807661151d97d0e5111646755222f9c86004", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/f8ae807661151d97d0e5111646755222f9c86004", "committedDate": "2020-07-31T05:35:38Z", "message": "one copy method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMDg1NTE0", "url": "https://github.com/elastic/elasticsearch/pull/56078#pullrequestreview-460085514", "createdAt": "2020-08-03T14:42:21Z", "commit": {"oid": "f8ae807661151d97d0e5111646755222f9c86004"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 191, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}