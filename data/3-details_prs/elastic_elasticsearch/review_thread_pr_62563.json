{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4Nzc4NDg1", "number": 62563, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoyNToyMlrOEk6MCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDo0ODoxOVrOEk6pFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTM3NTQ2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/QueryBuilderHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoyNToyMlrOHUHNsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoyNToyMlrOHUHNsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1MTc2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This adds a new filter to the passed `boolQueryBuilder`.", "url": "https://github.com/elastic/elasticsearch/pull/62563#discussion_r490851761", "createdAt": "2020-09-18T10:25:22Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/QueryBuilderHelper.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.ml.utils;\n+\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.regex.Regex;\n+import org.elasticsearch.index.query.BoolQueryBuilder;\n+import org.elasticsearch.index.query.QueryBuilder;\n+import org.elasticsearch.index.query.TermsQueryBuilder;\n+import org.elasticsearch.index.query.WildcardQueryBuilder;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+public final class QueryBuilderHelper {\n+\n+    private QueryBuilderHelper() { }\n+\n+    /**\n+     * Helper function for adding OR type queries for a given identity field.\n+     *\n+     * This adds a new filter to the passed `boolQueryBuilder`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afd70dea349f18ee81d0c41aa35b5fc75d911b58"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTQyNzg2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/ResultsFilterBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDo0MTowMFrOHUHr2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDo0MTowMFrOHUHr2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1OTQ4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ResultsFilterBuilder resourceTokenFilers(String fieldName, String[] tokens) {\n          \n          \n            \n                public ResultsFilterBuilder resourceTokenFilters(String fieldName, String[] tokens) {", "url": "https://github.com/elastic/elasticsearch/pull/62563#discussion_r490859480", "createdAt": "2020-09-18T10:41:00Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/ResultsFilterBuilder.java", "diffHunk": "@@ -88,6 +89,11 @@ public ResultsFilterBuilder term(String fieldName, String fieldValue) {\n         return this;\n     }\n \n+    public ResultsFilterBuilder resourceTokenFilers(String fieldName, String[] tokens) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afd70dea349f18ee81d0c41aa35b5fc75d911b58"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTQ0OTgyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetCalendarsAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDo0ODoxOVrOHUH4_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDo0ODoxOVrOHUH4_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg2Mjg0NQ==", "bodyText": "The GET request docs will need updating to add the standard description of a wildcard-able ID parameter\n\"comma-separated list of calendar Ids and wildcard expressions. You can get all by using _all, or * or by omitting the ID\"", "url": "https://github.com/elastic/elasticsearch/pull/62563#discussion_r490862845", "createdAt": "2020-09-18T10:48:19Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetCalendarsAction.java", "diffHunk": "@@ -34,35 +31,18 @@ public TransportGetCalendarsAction(TransportService transportService, ActionFilt\n \n     @Override\n     protected void doExecute(Task task, GetCalendarsAction.Request request, ActionListener<GetCalendarsAction.Response> listener) {\n-        final String calendarId = request.getCalendarId();\n-        if (request.getCalendarId() != null && Strings.isAllOrWildcard(request.getCalendarId()) == false) {\n-            getCalendar(calendarId, listener);\n-        } else {\n-            PageParams pageParams = request.getPageParams();\n-            if (pageParams == null) {\n-                pageParams = PageParams.defaultParams();\n-            }\n-            getCalendars(pageParams, listener);\n+        final String[] calendarIds = Strings.splitStringByCommaToArray(request.getCalendarId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afd70dea349f18ee81d0c41aa35b5fc75d911b58"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3561, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}