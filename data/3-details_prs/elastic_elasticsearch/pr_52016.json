{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMTI0Mjgx", "number": 52016, "title": "Fix a DST error in date_histogram", "bodyText": "When date_histogram attempts to optimize itself it for a particular\ntime zone it checks to see if the entire shard is within the same\n\"transition\". Most time zone transition once every size months or\nthereabouts so the optimization can usually kicks in.\nBut it crashes when you attempt feed it a time zone who's last DST\ntransition was before epoch. The reason for this is a little twisted:\nbefore this patch it'd find the next and previous transitions in\nmilliseconds since epoch. Then it'd cast them to Longs and pass them\ninto the DateFieldType to check if the shard's contents were within\nthe range. The trouble is they are then converted to Strings which are\nthen parsed back to Instants which are then convertd to longs. And\nthe parser doesn't like most negative numbers. And everything before\nepoch is negative.\nThis change removes the\nlong -> Long -> String -> Instant -> long chain in favor of\npassing the longs directly into the DateFieldType. Sadly, this means\nthat MappedFieldType gets a long specialized implementation of\nisFieldWithinQuery which is a little lame, but given that we always\ncall it with a long in this context it feels like the lesser of two\nevils. Not because it is more efficient. It is a little. No. This is the\nless evil way to solve this problem because it is less confusing to\ntrace the execution. The parsing code is fairly complex and we can just\nskip it entirely because we already have longs.\nCloses #50265", "createdAt": "2020-02-06T21:37:03Z", "url": "https://github.com/elastic/elasticsearch/pull/52016", "merged": true, "mergeCommit": {"oid": "da2b67d6e5b61a3b11680ed71bb8dfb04e27dd1f"}, "closed": true, "closedAt": "2020-02-11T21:04:37Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBxmmbgH2gAyMzcyMTI0MjgxOmI2ZmQ5YmUyZWRiYzZkNDFlMGE0NTkwYWFlNDk3MGQyM2YxNWNiNWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDX1FLgFqTM1Njk3Mzg1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b6fd9be2edbc6d41e0a4590aae4970d23f15cb5d", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/b6fd9be2edbc6d41e0a4590aae4970d23f15cb5d", "committedDate": "2020-02-06T21:27:31Z", "message": "Fix a DST error in date_histogram\n\nWhen `date_histogram` attempts to optimize itself it for a particular\ntime zone it checks to see if the entire shard is within the same\n\"transition\". Most time zone transition once every size months or\nthereabouts so the optimization can usually kicks in.\n\n*But* it crashes when you attempt feed it a time zone who's last DST\ntransition was before epoch. The reason for this is a little twisted:\nbefore this patch it'd find the next and previous transitions in\nmilliseconds since epoch. Then it'd cast them to `Long`s and pass them\ninto the `DateFieldType` to check if the shard's contents were within\nthe range. The trouble is they are then converted to `String`s which are\n*then* parsed back to `Instant`s which are then convertd to `long`s. And\nthe parser doesn't like most negative numbers. And everything before\nepoch is negative.\n\nThis change removes the\n`long` -> `Long` -> `String` -> `Instant` -> `long` chain in favor of\npassing the `long`s directly into the `DateFieldType`. Sadly, this means\nthat `MappedFieldType` gets a `long` specialized implementation of\n`isFieldWithinQuery` which is a little lame, but given that we always\ncall it with a long in this context it feels like the lesser of two\nevils. Not because it is more efficient. It is a little. No. This is the\nless evil way to solve this problem because it is less confusing to\ntrace the execution. The parsing code is fairly complex and we can just\nskip it entirely because we already *have* longs.\n\nCloses #50265"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NzkzMjMw", "url": "https://github.com/elastic/elasticsearch/pull/52016#pullrequestreview-354793230", "createdAt": "2020-02-06T21:43:33Z", "commit": {"oid": "b6fd9be2edbc6d41e0a4590aae4970d23f15cb5d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTo0MzozM1rOFmrPFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTo0MzozM1rOFmrPFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5ODU4Mg==", "bodyText": "I think you mean they're always longs?", "url": "https://github.com/elastic/elasticsearch/pull/52016#discussion_r376098582", "createdAt": "2020-02-06T21:43:33Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java", "diffHunk": "@@ -419,10 +419,27 @@ public IntervalsSource intervals(String query, int max_gaps, boolean ordered,\n      *  {@link Relation#INTERSECTS}, which is always fine to return when there is\n      *  no way to check whether values are actually within bounds. */\n     public Relation isFieldWithinQuery(\n-        IndexReader reader,\n-        Object from, Object to,\n-        boolean includeLower, boolean includeUpper,\n-        ZoneId timeZone, DateMathParser dateMathParser, QueryRewriteContext context) throws IOException {\n+            IndexReader reader,\n+            Object from, Object to,\n+            boolean includeLower, boolean includeUpper,\n+            ZoneId timeZone, DateMathParser dateMathParser, QueryRewriteContext context) throws IOException {\n+        return Relation.INTERSECTS;\n+    }\n+\n+    /**\n+     * Return whether all values of the given {@link IndexReader} are within the range,\n+     * outside the range or cross the range. The default implementation returns\n+     * {@link Relation#INTERSECTS}, which is always fine to return when there is\n+     * no way to check whether values are actually within bounds.\n+     *\n+     * Use this instead of\n+     * {@link #isFieldWithinQuery(IndexReader, Object, Object, boolean, boolean, ZoneId, DateMathParser, QueryRewriteContext)}\n+     * when you *know* the {@code fromInclusive} and {@code toInclusive} are always\n+     * floats.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6fd9be2edbc6d41e0a4590aae4970d23f15cb5d"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab6fb90198d44cd0515ca462b502615ac9266e96", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/ab6fb90198d44cd0515ca462b502615ac9266e96", "committedDate": "2020-02-06T21:49:17Z", "message": "Can't keep my types strait"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MzUyNTkz", "url": "https://github.com/elastic/elasticsearch/pull/52016#pullrequestreview-355352593", "createdAt": "2020-02-07T18:32:46Z", "commit": {"oid": "ab6fb90198d44cd0515ca462b502615ac9266e96"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8cc224045aad93c1da4083d0ece84a906437630", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/b8cc224045aad93c1da4083d0ece84a906437630", "committedDate": "2020-02-10T19:31:29Z", "message": "Merge branch 'master' into no_dst"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74e9463674530223a03c6e7bb15197f6a8ad7cdc", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/74e9463674530223a03c6e7bb15197f6a8ad7cdc", "committedDate": "2020-02-10T20:00:19Z", "message": "Update from feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53355f00d1db8e322685484bf3f40101843be7af", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/53355f00d1db8e322685484bf3f40101843be7af", "committedDate": "2020-02-11T14:38:36Z", "message": "Handle nanos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a1c96356aa02a0788dbf4f1f3b11e9dd4c32619", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/5a1c96356aa02a0788dbf4f1f3b11e9dd4c32619", "committedDate": "2020-02-11T16:06:55Z", "message": "Merge branch 'master' into no_dst"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2OTczODU3", "url": "https://github.com/elastic/elasticsearch/pull/52016#pullrequestreview-356973857", "createdAt": "2020-02-11T20:33:39Z", "commit": {"oid": "5a1c96356aa02a0788dbf4f1f3b11e9dd4c32619"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2898, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}