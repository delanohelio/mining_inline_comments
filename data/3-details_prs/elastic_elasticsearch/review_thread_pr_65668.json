{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwMjI1MTIw", "number": 65668, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDoxNjo0OVrOE_K5Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo1NzoxMFrOE_MRiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Njc0MTgzOnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDoxNjo0OVrOH8ukhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMzoxOTowOFrOIAmXBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQzOTYyMg==", "bodyText": "I think exceed and overage are clearer than breach.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The disk-based shard allocator ensures that all nodes have enough disk space\n          \n          \n            \n            without performing more shard movements than necessary. It allocates shards\n          \n          \n            \n            based on a pair of thresholds known as the _low watermark_ and the _high\n          \n          \n            \n            watermark_. Its primary goal is to ensure that no node breaches the high\n          \n          \n            \n            watermark, or at least that any such breach is only temporary. If a node\n          \n          \n            \n            breaches the high watermark then {es} will solve this by moving some of its\n          \n          \n            \n            shards onto other nodes in the cluster.\n          \n          \n            \n            The disk-based shard allocator ensures that all nodes have enough disk space\n          \n          \n            \n            without performing more shard movements than necessary. It allocates shards\n          \n          \n            \n            based on a pair of thresholds known as the _low watermark_ and the _high\n          \n          \n            \n            watermark_. Its primary goal is to ensure that no node exceeds the high\n          \n          \n            \n            watermark, or at least that any such overage is only temporary. If a node\n          \n          \n            \n            exceeds the high watermark then {es} will solve this by moving some of its\n          \n          \n            \n            shards onto other nodes in the cluster.", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533439622", "createdAt": "2020-12-01T14:16:49Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:\n+\n+* Disk usage changes over time. Balancing the disk usage of individual nodes\n+would require a lot more shard movements, perhaps even wastefully undoing\n+earlier movements. Moving a shard consumes resources such as I/O and network\n+bandwidth and may evict data from the filesystem cache. These resources are\n+better spent handling your searches and indexing where possible.\n+\n+* A cluster with accurately-balanced disk usage typically performs no better\n+than one that has unequal disk usage across its nodes, as long as no disk is\n+too full.\n+\n+The disk-based shard allocator ensures that all nodes have enough disk space\n+without performing more shard movements than necessary. It allocates shards\n+based on a pair of thresholds known as the _low watermark_ and the _high\n+watermark_. Its primary goal is to ensure that no node breaches the high\n+watermark, or at least that any such breach is only temporary. If a node\n+breaches the high watermark then {es} will solve this by moving some of its\n+shards onto other nodes in the cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ5OTM5OQ==", "bodyText": "overage yes that's the word I was looking for.", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r537499399", "createdAt": "2020-12-07T13:19:08Z", "author": {"login": "DaveCTurner"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:\n+\n+* Disk usage changes over time. Balancing the disk usage of individual nodes\n+would require a lot more shard movements, perhaps even wastefully undoing\n+earlier movements. Moving a shard consumes resources such as I/O and network\n+bandwidth and may evict data from the filesystem cache. These resources are\n+better spent handling your searches and indexing where possible.\n+\n+* A cluster with accurately-balanced disk usage typically performs no better\n+than one that has unequal disk usage across its nodes, as long as no disk is\n+too full.\n+\n+The disk-based shard allocator ensures that all nodes have enough disk space\n+without performing more shard movements than necessary. It allocates shards\n+based on a pair of thresholds known as the _low watermark_ and the _high\n+watermark_. Its primary goal is to ensure that no node breaches the high\n+watermark, or at least that any such breach is only temporary. If a node\n+breaches the high watermark then {es} will solve this by moving some of its\n+shards onto other nodes in the cluster.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQzOTYyMg=="}, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Njc2MDA2OnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDoyMDo0MlrOH8uvww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDoyMDo0MlrOH8uvww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ0MjQ5OQ==", "bodyText": "Clears up some language around breach.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [[disk-based-shard-allocation-does-not-balance]]\n          \n          \n            \n            IMPORTANT: It is completely normal for the nodes in your cluster to be using\n          \n          \n            \n            very different amounts of disk space. As long as any breaches of the high\n          \n          \n            \n            watermark are only temporary, {es} is working as expected.\n          \n          \n            \n            [[disk-based-shard-allocation-does-not-balance]]\n          \n          \n            \n            IMPORTANT: It is normal for a cluster's nodes to use different amounts of disk\n          \n          \n            \n            space. As long as any high watermark overages are temporary, {es} is\n          \n          \n            \n            working as expected.", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533442499", "createdAt": "2020-12-01T14:20:42Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:\n+\n+* Disk usage changes over time. Balancing the disk usage of individual nodes\n+would require a lot more shard movements, perhaps even wastefully undoing\n+earlier movements. Moving a shard consumes resources such as I/O and network\n+bandwidth and may evict data from the filesystem cache. These resources are\n+better spent handling your searches and indexing where possible.\n+\n+* A cluster with accurately-balanced disk usage typically performs no better\n+than one that has unequal disk usage across its nodes, as long as no disk is\n+too full.\n+\n+The disk-based shard allocator ensures that all nodes have enough disk space\n+without performing more shard movements than necessary. It allocates shards\n+based on a pair of thresholds known as the _low watermark_ and the _high\n+watermark_. Its primary goal is to ensure that no node breaches the high\n+watermark, or at least that any such breach is only temporary. If a node\n+breaches the high watermark then {es} will solve this by moving some of its\n+shards onto other nodes in the cluster.\n+\n+NOTE: It is normal for nodes to temporarily exceed the high watermark from time\n+to time.\n+\n+The allocator also tries to keep nodes clear of the high watermark by\n+forbidding the allocation of more shards on a node that exceeds the low\n+watermark. Importantly, if all of your nodes have exceeded the low watermark\n+then no new shards can be allocated and {es} will not be able to move any\n+shards between nodes in order to keep the disk usage below the high watermark.\n+You must ensure that your cluster has enough disk space in total and that that\n+there are always some nodes that are below the low watermark.\n+\n+Shard movements triggered by the disk-based shard allocator must also satisfy\n+all other shard allocation rules such as\n+<<cluster-shard-allocation-filtering,allocation filtering>> and\n+<<forced-awareness,forced awareness>>. If these rules are too strict then they\n+can also prevent the shard movements needed to keep the nodes' disk usage under\n+control.\n+\n+If a node is filling up its disk faster than {es} can move shards elsewhere\n+then there is a risk that the disk will completely fill up. To prevent this, as\n+a last resort, once the disk usage reaches the _flood-stage_ watermark {es}\n+will block further writes to the indices which have a shard on the affected\n+node. It will also continue to move shards onto the other nodes in the cluster.\n+Once the disk usage on the affected node has dropped below the high watermark,\n+the write block will be removed automatically.\n+\n+[[disk-based-shard-allocation-does-not-balance]]\n+IMPORTANT: It is completely normal for the nodes in your cluster to be using\n+very different amounts of disk space. As long as any breaches of the high\n+watermark are only temporary, {es} is working as expected.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjgwMTgwOnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDoyOToyNFrOH8vJGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMzoyNDoyN1rOIAmkcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ0ODk4NQ==", "bodyText": "I wonder if mixing in the concept of balance here is more confusing. We may want to just start with your The disk-based shard allocator... paragraph. The gist of this text seems adequately covered there and in the later admon about unequal disk usage.", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533448985", "createdAt": "2020-12-01T14:29:24Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUwMjgzNA==", "bodyText": "Hmm, good point about leading with the later paragraph. I'll think about removing this vs moving it elsewhere. It's a common source of confusion that \"balanced\" doesn't mean \"equal disk usage\", I think we need to spell out why that isn't the case. But there's no need to lead with this.", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r537502834", "createdAt": "2020-12-07T13:24:27Z", "author": {"login": "DaveCTurner"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ0ODk4NQ=="}, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Njg1ODc5OnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/shards_allocation.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0MDozNlrOH8vs7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0MDozNlrOH8vs7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ1ODE1OA==", "bodyText": "Feels like we should mention data tiers here. In many cases, I imagine the tiers, rather than the cluster, will be balanced.", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533458158", "createdAt": "2020-12-01T14:40:36Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/shards_allocation.asciidoc", "diffHunk": "@@ -97,9 +97,22 @@ Specify when shard rebalancing is allowed:\n [[shards-rebalancing-heuristics]]\n ==== Shard balancing heuristics settings\n \n-The following settings are used together to determine where to place each\n-shard.  The cluster is balanced when no allowed rebalancing operation can bring the weight\n-of any node closer to the weight of any other node by more than the `balance.threshold`.\n+A cluster is _balanced_ when it has an equal number of shards on each node\n+without having a concentration of shards from any index on any node. {es} runs\n+an automatic process called _rebalancing_ which moves shards between the nodes\n+in your cluster in order to improve its balance. Rebalancing obeys all other\n+shard allocation rules such as <<cluster-shard-allocation-filtering,allocation\n+filtering>> and <<forced-awareness,forced awareness>> which may prevent it from\n+completely balancing the cluster. In that case, rebalancing strives to acheve\n+the most balanced cluster possible within the rules you have configured.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Njg3OTQ2OnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0MzoxNFrOH8v61w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0MzoxNFrOH8v61w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2MTcxOQ==", "bodyText": "Typo\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You must ensure that your cluster has enough disk space in total and that that\n          \n          \n            \n            You must ensure that your cluster has enough disk space in total and that", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533461719", "createdAt": "2020-12-01T14:43:14Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:\n+\n+* Disk usage changes over time. Balancing the disk usage of individual nodes\n+would require a lot more shard movements, perhaps even wastefully undoing\n+earlier movements. Moving a shard consumes resources such as I/O and network\n+bandwidth and may evict data from the filesystem cache. These resources are\n+better spent handling your searches and indexing where possible.\n+\n+* A cluster with accurately-balanced disk usage typically performs no better\n+than one that has unequal disk usage across its nodes, as long as no disk is\n+too full.\n+\n+The disk-based shard allocator ensures that all nodes have enough disk space\n+without performing more shard movements than necessary. It allocates shards\n+based on a pair of thresholds known as the _low watermark_ and the _high\n+watermark_. Its primary goal is to ensure that no node breaches the high\n+watermark, or at least that any such breach is only temporary. If a node\n+breaches the high watermark then {es} will solve this by moving some of its\n+shards onto other nodes in the cluster.\n+\n+NOTE: It is normal for nodes to temporarily exceed the high watermark from time\n+to time.\n+\n+The allocator also tries to keep nodes clear of the high watermark by\n+forbidding the allocation of more shards on a node that exceeds the low\n+watermark. Importantly, if all of your nodes have exceeded the low watermark\n+then no new shards can be allocated and {es} will not be able to move any\n+shards between nodes in order to keep the disk usage below the high watermark.\n+You must ensure that your cluster has enough disk space in total and that that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Njg4MDUyOnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0MzoyM1rOH8v7mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0MzoyM1rOH8v7mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2MTkxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            there are always some nodes that are below the low watermark.\n          \n          \n            \n            there are always some nodes below the low watermark.", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533461914", "createdAt": "2020-12-01T14:43:23Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:\n+\n+* Disk usage changes over time. Balancing the disk usage of individual nodes\n+would require a lot more shard movements, perhaps even wastefully undoing\n+earlier movements. Moving a shard consumes resources such as I/O and network\n+bandwidth and may evict data from the filesystem cache. These resources are\n+better spent handling your searches and indexing where possible.\n+\n+* A cluster with accurately-balanced disk usage typically performs no better\n+than one that has unequal disk usage across its nodes, as long as no disk is\n+too full.\n+\n+The disk-based shard allocator ensures that all nodes have enough disk space\n+without performing more shard movements than necessary. It allocates shards\n+based on a pair of thresholds known as the _low watermark_ and the _high\n+watermark_. Its primary goal is to ensure that no node breaches the high\n+watermark, or at least that any such breach is only temporary. If a node\n+breaches the high watermark then {es} will solve this by moving some of its\n+shards onto other nodes in the cluster.\n+\n+NOTE: It is normal for nodes to temporarily exceed the high watermark from time\n+to time.\n+\n+The allocator also tries to keep nodes clear of the high watermark by\n+forbidding the allocation of more shards on a node that exceeds the low\n+watermark. Importantly, if all of your nodes have exceeded the low watermark\n+then no new shards can be allocated and {es} will not be able to move any\n+shards between nodes in order to keep the disk usage below the high watermark.\n+You must ensure that your cluster has enough disk space in total and that that\n+there are always some nodes that are below the low watermark.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Njg5MzQxOnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0NDo1OVrOH8wENw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0NDo1OVrOH8wENw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2NDExOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            will block further writes to the indices which have a shard on the affected\n          \n          \n            \n            will block writes to indices with a shard on the affected", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533464119", "createdAt": "2020-12-01T14:44:59Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:\n+\n+* Disk usage changes over time. Balancing the disk usage of individual nodes\n+would require a lot more shard movements, perhaps even wastefully undoing\n+earlier movements. Moving a shard consumes resources such as I/O and network\n+bandwidth and may evict data from the filesystem cache. These resources are\n+better spent handling your searches and indexing where possible.\n+\n+* A cluster with accurately-balanced disk usage typically performs no better\n+than one that has unequal disk usage across its nodes, as long as no disk is\n+too full.\n+\n+The disk-based shard allocator ensures that all nodes have enough disk space\n+without performing more shard movements than necessary. It allocates shards\n+based on a pair of thresholds known as the _low watermark_ and the _high\n+watermark_. Its primary goal is to ensure that no node breaches the high\n+watermark, or at least that any such breach is only temporary. If a node\n+breaches the high watermark then {es} will solve this by moving some of its\n+shards onto other nodes in the cluster.\n+\n+NOTE: It is normal for nodes to temporarily exceed the high watermark from time\n+to time.\n+\n+The allocator also tries to keep nodes clear of the high watermark by\n+forbidding the allocation of more shards on a node that exceeds the low\n+watermark. Importantly, if all of your nodes have exceeded the low watermark\n+then no new shards can be allocated and {es} will not be able to move any\n+shards between nodes in order to keep the disk usage below the high watermark.\n+You must ensure that your cluster has enough disk space in total and that that\n+there are always some nodes that are below the low watermark.\n+\n+Shard movements triggered by the disk-based shard allocator must also satisfy\n+all other shard allocation rules such as\n+<<cluster-shard-allocation-filtering,allocation filtering>> and\n+<<forced-awareness,forced awareness>>. If these rules are too strict then they\n+can also prevent the shard movements needed to keep the nodes' disk usage under\n+control.\n+\n+If a node is filling up its disk faster than {es} can move shards elsewhere\n+then there is a risk that the disk will completely fill up. To prevent this, as\n+a last resort, once the disk usage reaches the _flood-stage_ watermark {es}\n+will block further writes to the indices which have a shard on the affected", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Njg5NjI0OnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0NToyMFrOH8wGEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0NToyMFrOH8wGEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2NDU5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            the write block will be removed automatically.\n          \n          \n            \n            {es} automatically removes the write block.", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533464593", "createdAt": "2020-12-01T14:45:20Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:\n+\n+* Disk usage changes over time. Balancing the disk usage of individual nodes\n+would require a lot more shard movements, perhaps even wastefully undoing\n+earlier movements. Moving a shard consumes resources such as I/O and network\n+bandwidth and may evict data from the filesystem cache. These resources are\n+better spent handling your searches and indexing where possible.\n+\n+* A cluster with accurately-balanced disk usage typically performs no better\n+than one that has unequal disk usage across its nodes, as long as no disk is\n+too full.\n+\n+The disk-based shard allocator ensures that all nodes have enough disk space\n+without performing more shard movements than necessary. It allocates shards\n+based on a pair of thresholds known as the _low watermark_ and the _high\n+watermark_. Its primary goal is to ensure that no node breaches the high\n+watermark, or at least that any such breach is only temporary. If a node\n+breaches the high watermark then {es} will solve this by moving some of its\n+shards onto other nodes in the cluster.\n+\n+NOTE: It is normal for nodes to temporarily exceed the high watermark from time\n+to time.\n+\n+The allocator also tries to keep nodes clear of the high watermark by\n+forbidding the allocation of more shards on a node that exceeds the low\n+watermark. Importantly, if all of your nodes have exceeded the low watermark\n+then no new shards can be allocated and {es} will not be able to move any\n+shards between nodes in order to keep the disk usage below the high watermark.\n+You must ensure that your cluster has enough disk space in total and that that\n+there are always some nodes that are below the low watermark.\n+\n+Shard movements triggered by the disk-based shard allocator must also satisfy\n+all other shard allocation rules such as\n+<<cluster-shard-allocation-filtering,allocation filtering>> and\n+<<forced-awareness,forced awareness>>. If these rules are too strict then they\n+can also prevent the shard movements needed to keep the nodes' disk usage under\n+control.\n+\n+If a node is filling up its disk faster than {es} can move shards elsewhere\n+then there is a risk that the disk will completely fill up. To prevent this, as\n+a last resort, once the disk usage reaches the _flood-stage_ watermark {es}\n+will block further writes to the indices which have a shard on the affected\n+node. It will also continue to move shards onto the other nodes in the cluster.\n+Once the disk usage on the affected node has dropped below the high watermark,\n+the write block will be removed automatically.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjkwNzY5OnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0Njo0OVrOH8wN6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMzoyMToxN1rOIAmcbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2NjYwMg==", "bodyText": "shards onto other nodes in the cluster.\n\nShould we replace cluster with data tier here?", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533466602", "createdAt": "2020-12-01T14:46:49Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:\n+\n+* Disk usage changes over time. Balancing the disk usage of individual nodes\n+would require a lot more shard movements, perhaps even wastefully undoing\n+earlier movements. Moving a shard consumes resources such as I/O and network\n+bandwidth and may evict data from the filesystem cache. These resources are\n+better spent handling your searches and indexing where possible.\n+\n+* A cluster with accurately-balanced disk usage typically performs no better\n+than one that has unequal disk usage across its nodes, as long as no disk is\n+too full.\n+\n+The disk-based shard allocator ensures that all nodes have enough disk space\n+without performing more shard movements than necessary. It allocates shards\n+based on a pair of thresholds known as the _low watermark_ and the _high\n+watermark_. Its primary goal is to ensure that no node breaches the high\n+watermark, or at least that any such breach is only temporary. If a node\n+breaches the high watermark then {es} will solve this by moving some of its\n+shards onto other nodes in the cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUwMDc4Mw==", "bodyText": "This all applies whether you're using data tiers or not (e.g. you're running an OSS build). However I agree that we can mention data tiers somewhere, and IMO it fits better into the section lower down about allocation filtering rules.", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r537500783", "createdAt": "2020-12-07T13:21:17Z", "author": {"login": "DaveCTurner"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:\n+\n+* Disk usage changes over time. Balancing the disk usage of individual nodes\n+would require a lot more shard movements, perhaps even wastefully undoing\n+earlier movements. Moving a shard consumes resources such as I/O and network\n+bandwidth and may evict data from the filesystem cache. These resources are\n+better spent handling your searches and indexing where possible.\n+\n+* A cluster with accurately-balanced disk usage typically performs no better\n+than one that has unequal disk usage across its nodes, as long as no disk is\n+too full.\n+\n+The disk-based shard allocator ensures that all nodes have enough disk space\n+without performing more shard movements than necessary. It allocates shards\n+based on a pair of thresholds known as the _low watermark_ and the _high\n+watermark_. Its primary goal is to ensure that no node breaches the high\n+watermark, or at least that any such breach is only temporary. If a node\n+breaches the high watermark then {es} will solve this by moving some of its\n+shards onto other nodes in the cluster.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2NjYwMg=="}, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjkxMjYyOnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0NzoyNlrOH8wRGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0NzoyNlrOH8wRGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2NzQxNg==", "bodyText": "Another opportunity to mention data tiers.", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533467416", "createdAt": "2020-12-01T14:47:26Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:\n+\n+* Disk usage changes over time. Balancing the disk usage of individual nodes\n+would require a lot more shard movements, perhaps even wastefully undoing\n+earlier movements. Moving a shard consumes resources such as I/O and network\n+bandwidth and may evict data from the filesystem cache. These resources are\n+better spent handling your searches and indexing where possible.\n+\n+* A cluster with accurately-balanced disk usage typically performs no better\n+than one that has unequal disk usage across its nodes, as long as no disk is\n+too full.\n+\n+The disk-based shard allocator ensures that all nodes have enough disk space\n+without performing more shard movements than necessary. It allocates shards\n+based on a pair of thresholds known as the _low watermark_ and the _high\n+watermark_. Its primary goal is to ensure that no node breaches the high\n+watermark, or at least that any such breach is only temporary. If a node\n+breaches the high watermark then {es} will solve this by moving some of its\n+shards onto other nodes in the cluster.\n+\n+NOTE: It is normal for nodes to temporarily exceed the high watermark from time\n+to time.\n+\n+The allocator also tries to keep nodes clear of the high watermark by\n+forbidding the allocation of more shards on a node that exceeds the low\n+watermark. Importantly, if all of your nodes have exceeded the low watermark\n+then no new shards can be allocated and {es} will not be able to move any\n+shards between nodes in order to keep the disk usage below the high watermark.\n+You must ensure that your cluster has enough disk space in total and that that\n+there are always some nodes that are below the low watermark.\n+\n+Shard movements triggered by the disk-based shard allocator must also satisfy\n+all other shard allocation rules such as\n+<<cluster-shard-allocation-filtering,allocation filtering>> and\n+<<forced-awareness,forced awareness>>. If these rules are too strict then they\n+can also prevent the shard movements needed to keep the nodes' disk usage under\n+control.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjkxNzgxOnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/shards_allocation.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0ODowN1rOH8wUgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0ODowN1rOH8wUgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2ODI4OA==", "bodyText": "Nit\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            in your cluster in order to improve its balance. Rebalancing obeys all other\n          \n          \n            \n            in your cluster to improve its balance. Rebalancing obeys all other", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533468288", "createdAt": "2020-12-01T14:48:07Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/shards_allocation.asciidoc", "diffHunk": "@@ -97,9 +97,22 @@ Specify when shard rebalancing is allowed:\n [[shards-rebalancing-heuristics]]\n ==== Shard balancing heuristics settings\n \n-The following settings are used together to determine where to place each\n-shard.  The cluster is balanced when no allowed rebalancing operation can bring the weight\n-of any node closer to the weight of any other node by more than the `balance.threshold`.\n+A cluster is _balanced_ when it has an equal number of shards on each node\n+without having a concentration of shards from any index on any node. {es} runs\n+an automatic process called _rebalancing_ which moves shards between the nodes\n+in your cluster in order to improve its balance. Rebalancing obeys all other", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Njk2ODQxOnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo1NzoxMFrOH8wz5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo1NzoxMFrOH8wz5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ3NjMyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Once the disk usage on the affected node has dropped below the high watermark,\n          \n          \n            \n            When disk usage on the affected node drops below the high watermark,", "url": "https://github.com/elastic/elasticsearch/pull/65668#discussion_r533476327", "createdAt": "2020-12-01T14:57:10Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -2,9 +2,60 @@\n ==== Disk-based shard allocation settings\n [[disk-based-shard-allocation-description]]\n // tag::disk-based-shard-allocation-description-tag[]\n-{es} considers the available disk space on a node before deciding\n-whether to allocate new shards to that node or to actively relocate shards away\n-from that node.\n+\n+The <<shards-rebalancing-settings,balance>> of the cluster depends only on the\n+number of shards on each node and the indices to which those shards belong. It\n+considers neither the sizes of these shards nor the available disk space on\n+each node, for the following reasons:\n+\n+* Disk usage changes over time. Balancing the disk usage of individual nodes\n+would require a lot more shard movements, perhaps even wastefully undoing\n+earlier movements. Moving a shard consumes resources such as I/O and network\n+bandwidth and may evict data from the filesystem cache. These resources are\n+better spent handling your searches and indexing where possible.\n+\n+* A cluster with accurately-balanced disk usage typically performs no better\n+than one that has unequal disk usage across its nodes, as long as no disk is\n+too full.\n+\n+The disk-based shard allocator ensures that all nodes have enough disk space\n+without performing more shard movements than necessary. It allocates shards\n+based on a pair of thresholds known as the _low watermark_ and the _high\n+watermark_. Its primary goal is to ensure that no node breaches the high\n+watermark, or at least that any such breach is only temporary. If a node\n+breaches the high watermark then {es} will solve this by moving some of its\n+shards onto other nodes in the cluster.\n+\n+NOTE: It is normal for nodes to temporarily exceed the high watermark from time\n+to time.\n+\n+The allocator also tries to keep nodes clear of the high watermark by\n+forbidding the allocation of more shards on a node that exceeds the low\n+watermark. Importantly, if all of your nodes have exceeded the low watermark\n+then no new shards can be allocated and {es} will not be able to move any\n+shards between nodes in order to keep the disk usage below the high watermark.\n+You must ensure that your cluster has enough disk space in total and that that\n+there are always some nodes that are below the low watermark.\n+\n+Shard movements triggered by the disk-based shard allocator must also satisfy\n+all other shard allocation rules such as\n+<<cluster-shard-allocation-filtering,allocation filtering>> and\n+<<forced-awareness,forced awareness>>. If these rules are too strict then they\n+can also prevent the shard movements needed to keep the nodes' disk usage under\n+control.\n+\n+If a node is filling up its disk faster than {es} can move shards elsewhere\n+then there is a risk that the disk will completely fill up. To prevent this, as\n+a last resort, once the disk usage reaches the _flood-stage_ watermark {es}\n+will block further writes to the indices which have a shard on the affected\n+node. It will also continue to move shards onto the other nodes in the cluster.\n+Once the disk usage on the affected node has dropped below the high watermark,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8985fa1e32e8afd00e030a4e65a80020a47f44e2"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1868, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}