{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwODk5NzU5", "number": 64235, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xN1QwMjo0NjozMVrOF-zSxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xN1QwMzoxMDoxMFrOF-zhXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDAxMzk2NDIxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ssl/SSLConfigurationReloaderTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xN1QwMjo0NjozMVrOJb24mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xN1QwMjo0NjozMVrOJb24mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzE5MDU1NA==", "bodyText": "This sentence is not finished.", "url": "https://github.com/elastic/elasticsearch/pull/64235#discussion_r633190554", "createdAt": "2021-05-17T02:46:31Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ssl/SSLConfigurationReloaderTests.java", "diffHunk": "@@ -503,6 +506,27 @@ public void testPEMTrustReloadException() throws Exception {\n         assertThat(sslService.sslContextHolder(config).sslContext(), sameInstance(context));\n     }\n \n+    /**\n+     * Tests that the reloader doesn't throw an exception if a file is configured to be outside of the config/ directory.\n+     * These errors are handled correctly by the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f133580267cb0ddfdc97641da93d1f4e5e2c18c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDAxMzk5MDg5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ssl/SSLConfigurationReloader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xN1QwMzowMjo0MVrOJb3HbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNFQwODowNjoxN1rOJnemkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzE5NDM0OA==", "bodyText": "I don't think it's really necessary, but corresponding error messages during SSL Context building are finer grained, e.g. different error messages are logged for different subtypes of IOException, security permission failure is explicitly called out.", "url": "https://github.com/elastic/elasticsearch/pull/64235#discussion_r633194348", "createdAt": "2021-05-17T03:02:41Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ssl/SSLConfigurationReloader.java", "diffHunk": "@@ -94,16 +96,16 @@ private static void startWatching(Environment environment, Consumer<SSLConfigura\n             }\n         }\n \n-        for (Entry<Path, List<SSLConfiguration>> entry : pathToConfigurationsMap.entrySet()) {\n-            ChangeListener changeListener = new ChangeListener(environment, List.copyOf(entry.getValue()), reloadConsumer);\n-            FileWatcher fileWatcher = new FileWatcher(entry.getKey());\n+        pathToConfigurationsMap.forEach((path, configurations) -> {\n+            ChangeListener changeListener = new ChangeListener(environment, List.copyOf(configurations), reloadConsumer);\n+            FileWatcher fileWatcher = new FileWatcher(path);\n             fileWatcher.addListener(changeListener);\n             try {\n                 resourceWatcherService.add(fileWatcher, Frequency.HIGH);\n-            } catch (IOException e) {\n-                logger.error(\"failed to start watching directory [{}] for ssl configurations [{}]\", entry.getKey(), sslConfigurations);\n+            } catch (IOException | AccessControlException e) {\n+                logger.error(\"failed to start watching directory [{}] for ssl configurations [{}] - {}\", path, configurations, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f133580267cb0ddfdc97641da93d1f4e5e2c18c"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTM3NTYzMg==", "bodyText": "Yes, and those messages will still be printed.\nThe net effect of this PR is to catch+log the exception and then get out the way so that the more fine grained error handling can do its job.", "url": "https://github.com/elastic/elasticsearch/pull/64235#discussion_r645375632", "createdAt": "2021-06-04T08:06:17Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ssl/SSLConfigurationReloader.java", "diffHunk": "@@ -94,16 +96,16 @@ private static void startWatching(Environment environment, Consumer<SSLConfigura\n             }\n         }\n \n-        for (Entry<Path, List<SSLConfiguration>> entry : pathToConfigurationsMap.entrySet()) {\n-            ChangeListener changeListener = new ChangeListener(environment, List.copyOf(entry.getValue()), reloadConsumer);\n-            FileWatcher fileWatcher = new FileWatcher(entry.getKey());\n+        pathToConfigurationsMap.forEach((path, configurations) -> {\n+            ChangeListener changeListener = new ChangeListener(environment, List.copyOf(configurations), reloadConsumer);\n+            FileWatcher fileWatcher = new FileWatcher(path);\n             fileWatcher.addListener(changeListener);\n             try {\n                 resourceWatcherService.add(fileWatcher, Frequency.HIGH);\n-            } catch (IOException e) {\n-                logger.error(\"failed to start watching directory [{}] for ssl configurations [{}]\", entry.getKey(), sslConfigurations);\n+            } catch (IOException | AccessControlException e) {\n+                logger.error(\"failed to start watching directory [{}] for ssl configurations [{}] - {}\", path, configurations, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzE5NDM0OA=="}, "originalCommit": {"oid": "7f133580267cb0ddfdc97641da93d1f4e5e2c18c"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDAxMzk5NDg5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ssl/SSLConfigurationReloaderTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xN1QwMzowNToyM1rOJb3Jvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xN1QwMzowNToyM1rOJb3Jvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzE5NDk0Mw==", "bodyText": "Nit: isn't this redundant since the above constructor would have failed already if the object does not get created?", "url": "https://github.com/elastic/elasticsearch/pull/64235#discussion_r633194943", "createdAt": "2021-05-17T03:05:23Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ssl/SSLConfigurationReloaderTests.java", "diffHunk": "@@ -503,6 +506,27 @@ public void testPEMTrustReloadException() throws Exception {\n         assertThat(sslService.sslContextHolder(config).sslContext(), sameInstance(context));\n     }\n \n+    /**\n+     * Tests that the reloader doesn't throw an exception if a file is configured to be outside of the config/ directory.\n+     * These errors are handled correctly by the\n+     */\n+    public void testReadingOutsideConfigDirectoryDoesntFail() throws Exception {\n+        Path tempDir = createTempDir();\n+        Path clientCertPath = tempDir.resolve(\"testclient.crt\");\n+        Settings settings = baseKeystoreSettings(tempDir, null)\n+            .putList(\"xpack.security.transport.ssl.certificate_authorities\", clientCertPath.toString())\n+            .put(\"path.home\", createTempDir())\n+            .build();\n+        Environment env = TestEnvironment.newEnvironment(settings);\n+        final AtomicReference<Exception> exceptionRef = new AtomicReference<>();\n+\n+        final ResourceWatcherService mockResourceWatcher = Mockito.mock(ResourceWatcherService.class);\n+        Mockito.when(mockResourceWatcher.add(Mockito.any(), Mockito.any())).thenThrow(new AccessControlException(\"access denied in test\"));\n+        final Collection<SSLConfiguration> configurations = SSLService.getSSLConfigurations(settings).values();\n+        final SSLConfigurationReloader reloader = new SSLConfigurationReloader(env, null, mockResourceWatcher, configurations);\n+        assertNotNull(reloader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f133580267cb0ddfdc97641da93d1f4e5e2c18c"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDAxMzk5NzcyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ssl/SSLConfigurationReloaderTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xN1QwMzowNzo0NlrOJb3LeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xN1QwMzowNzo0NlrOJb3LeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzE5NTM4NA==", "bodyText": "I think these are no longer needed given the new change of reporting error instead of throwing.", "url": "https://github.com/elastic/elasticsearch/pull/64235#discussion_r633195384", "createdAt": "2021-05-17T03:07:46Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ssl/SSLConfigurationReloaderTests.java", "diffHunk": "@@ -503,6 +506,27 @@ public void testPEMTrustReloadException() throws Exception {\n         assertThat(sslService.sslContextHolder(config).sslContext(), sameInstance(context));\n     }\n \n+    /**\n+     * Tests that the reloader doesn't throw an exception if a file is configured to be outside of the config/ directory.\n+     * These errors are handled correctly by the\n+     */\n+    public void testReadingOutsideConfigDirectoryDoesntFail() throws Exception {\n+        Path tempDir = createTempDir();\n+        Path clientCertPath = tempDir.resolve(\"testclient.crt\");\n+        Settings settings = baseKeystoreSettings(tempDir, null)\n+            .putList(\"xpack.security.transport.ssl.certificate_authorities\", clientCertPath.toString())\n+            .put(\"path.home\", createTempDir())\n+            .build();\n+        Environment env = TestEnvironment.newEnvironment(settings);\n+        final AtomicReference<Exception> exceptionRef = new AtomicReference<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f133580267cb0ddfdc97641da93d1f4e5e2c18c"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDAxNDAwMTU4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ssl/SSLConfigurationReloaderTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xN1QwMzoxMDoxMFrOJb3Nkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xN1QwMzoxMDoxMFrOJb3Nkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzE5NTkyMw==", "bodyText": "Based on the exceptions that get caught in startWatching, do we need another method for testing IOException? I suggest we modify this method to be more generic to cover both scenarios and randomize the exception.", "url": "https://github.com/elastic/elasticsearch/pull/64235#discussion_r633195923", "createdAt": "2021-05-17T03:10:10Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ssl/SSLConfigurationReloaderTests.java", "diffHunk": "@@ -503,6 +506,27 @@ public void testPEMTrustReloadException() throws Exception {\n         assertThat(sslService.sslContextHolder(config).sslContext(), sameInstance(context));\n     }\n \n+    /**\n+     * Tests that the reloader doesn't throw an exception if a file is configured to be outside of the config/ directory.\n+     * These errors are handled correctly by the\n+     */\n+    public void testReadingOutsideConfigDirectoryDoesntFail() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f133580267cb0ddfdc97641da93d1f4e5e2c18c"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4228, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}