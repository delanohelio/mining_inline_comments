{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MDQ2MzEz", "number": 57350, "title": "Fix Local Translog Recovery not Updating Safe Commit in Edge Case", "bodyText": "In case the local checkpoint in the latest commit is less\nthan the last processed local checkpoint we would recover\n0 ops and hence not commit again.\nThis would lead to the logic in IndexShard#recoverLocallyUpToGlobalCheckpoint\nnot seeing the latest local checkpoint when it reload the safe commit from the store\nand thus cause inefficient recoveries because the recoveries would work from a\nlower than possible local checkpoint.\nCloses #57010", "createdAt": "2020-05-29T11:23:56Z", "url": "https://github.com/elastic/elasticsearch/pull/57350", "merged": true, "mergeCommit": {"oid": "2ef82cd7f954cc5edc19a74d662923ed2156a2ff"}, "closed": true, "closedAt": "2020-05-29T19:09:25Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmAncKgH2gAyNDI1MDQ2MzEzOjM0MGI1MWI5NzY4NTYzMGI1OTFkZDVmYzJjYjAzMjdhYWRlZDg2ZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmEYGggH2gAyNDI1MDQ2MzEzOjBlOWM1ZjUyZWJjZmUxODA2ZWU4ZmE1ZjY1MjE3YjY3ZTQxYTliMzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "340b51b97685630b591dd5fc2cb0327aaded86f0", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/340b51b97685630b591dd5fc2cb0327aaded86f0", "committedDate": "2020-05-29T11:18:17Z", "message": "Fix Local Translog Recovery not Updating Safe Commit\n\nIn case the local checkpoint in the latest commit is less\nthan the last processed local checkpoint we would recover\n0 ops and hence not commit again.\nThis would lead to the logic in `IndexShard#recoverLocallyUpToGlobalCheckpoint`\nnot seeing the latest local checkpoint when it reload the safe commit from the store\nand thus cause inefficient recoveries because the recoveries would work from a\nlower than possible local checkpoint.\n\nCloses #57010"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODY2OTU0", "url": "https://github.com/elastic/elasticsearch/pull/57350#pullrequestreview-420866954", "createdAt": "2020-05-29T11:24:59Z", "commit": {"oid": "340b51b97685630b591dd5fc2cb0327aaded86f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMToyNDo1OVrOGcY4iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMToyNDo1OVrOGcY4iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyMTAwMw==", "bodyText": "Adjusted this because it's called more often now and translog.currentFileGeneration() actually does lock and create a ReleaseableLock instance", "url": "https://github.com/elastic/elasticsearch/pull/57350#discussion_r432421003", "createdAt": "2020-05-29T11:24:59Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java", "diffHunk": "@@ -485,11 +486,11 @@ private void recoverFromTranslogInternal(TranslogRecoveryRunner translogRecovery\n         // note: if opsRecovered == 0 and we have older translogs it means they are corrupted or 0 length.\n         assert pendingTranslogRecovery.get() : \"translogRecovery is not pending but should be\";\n         pendingTranslogRecovery.set(false); // we are good - now we can commit\n+        logger.trace(() -> new ParameterizedMessage(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "340b51b97685630b591dd5fc2cb0327aaded86f0"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODY4MDI5", "url": "https://github.com/elastic/elasticsearch/pull/57350#pullrequestreview-420868029", "createdAt": "2020-05-29T11:26:55Z", "commit": {"oid": "340b51b97685630b591dd5fc2cb0327aaded86f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMToyNjo1NVrOGcY73g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMToyNjo1NVrOGcY73g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyMTg1NA==", "bodyText": "I kept this condition around the external refresh triggered here. Not sure if that optimization is necessary now to be honest, but removing it breaks a large number of unit tests that would now see two refreshes instead of one (since the flush also refreshes)", "url": "https://github.com/elastic/elasticsearch/pull/57350#discussion_r432421854", "createdAt": "2020-05-29T11:26:55Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java", "diffHunk": "@@ -485,11 +486,11 @@ private void recoverFromTranslogInternal(TranslogRecoveryRunner translogRecovery\n         // note: if opsRecovered == 0 and we have older translogs it means they are corrupted or 0 length.\n         assert pendingTranslogRecovery.get() : \"translogRecovery is not pending but should be\";\n         pendingTranslogRecovery.set(false); // we are good - now we can commit\n+        logger.trace(() -> new ParameterizedMessage(\n+                \"flushing post recovery from translog: ops recovered [{}], current translog generation [{}]\",\n+                opsRecovered, translog.currentFileGeneration()));\n+        flush(false, true);\n         if (opsRecovered > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "340b51b97685630b591dd5fc2cb0327aaded86f0"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODY4NDk3", "url": "https://github.com/elastic/elasticsearch/pull/57350#pullrequestreview-420868497", "createdAt": "2020-05-29T11:27:47Z", "commit": {"oid": "340b51b97685630b591dd5fc2cb0327aaded86f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMToyNzo0N1rOGcY9Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMToyNzo0N1rOGcY9Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyMjIwMg==", "bodyText": "We discussed this on AoN, we're now potentially rolling the translog redundantly one additional time during flush.", "url": "https://github.com/elastic/elasticsearch/pull/57350#discussion_r432422202", "createdAt": "2020-05-29T11:27:47Z", "author": {"login": "original-brownbear"}, "path": "server/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java", "diffHunk": "@@ -1021,8 +1021,8 @@ private void finish() {\n                     assertNull(onFailure.get());\n                     assertThat(getTranslog(indexShard).getGeneration().translogFileGeneration,\n                         // if rollback happens we roll translog twice: one when we flush a commit before opening a read-only engine\n-                        // and one after replaying translog (upto the global checkpoint); otherwise we roll translog once.\n-                        either(equalTo(translogGen + 1)).or(equalTo(translogGen + 2)));\n+                        // and two or three times after replaying translog (upto the global checkpoint); otherwise we roll translog once.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "340b51b97685630b591dd5fc2cb0327aaded86f0"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODg3MzUy", "url": "https://github.com/elastic/elasticsearch/pull/57350#pullrequestreview-420887352", "createdAt": "2020-05-29T12:00:31Z", "commit": {"oid": "340b51b97685630b591dd5fc2cb0327aaded86f0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjowMDozMlrOGcZ0Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjoxNjowMVrOGcaPDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQzNjI1NQ==", "bodyText": "This is very subtle, as the persisted local checkpoint is driven mainly by Translog fsyncing (even though both local checkpoints are initialized from what's in the safe commit), i.e. getPersistedLocalCheckpoint() means the local checkpoint last persisted by the translog, not Lucene. I'm inclined to instead use lastCommittedSegmentInfos.getUserData()... here and look at the actually last Lucene-persisted local checkpoint.", "url": "https://github.com/elastic/elasticsearch/pull/57350#discussion_r432436255", "createdAt": "2020-05-29T12:00:32Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java", "diffHunk": "@@ -1654,10 +1655,12 @@ public void flush(boolean force, boolean waitIfOngoing) throws EngineException {\n             }\n             try {\n                 // Only flush if (1) Lucene has uncommitted docs, or (2) forced by caller, or (3) the\n-                // newly created commit points to a different translog generation (can free translog)\n+                // newly created commit points to a different translog generation (can free translog),\n+                // or (4) the processed local checkpoint is ahead of the local checkpoint tracked in the safe commit\n                 boolean hasUncommittedChanges = indexWriter.hasUncommittedChanges();\n                 boolean shouldPeriodicallyFlush = shouldPeriodicallyFlush();\n-                if (hasUncommittedChanges || force || shouldPeriodicallyFlush) {\n+                if (hasUncommittedChanges || force || shouldPeriodicallyFlush\n+                        || getProcessedLocalCheckpoint() > getPersistedLocalCheckpoint()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "340b51b97685630b591dd5fc2cb0327aaded86f0"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQzNzMxNQ==", "bodyText": "It's unclear what the safe commit is in the case of calling this method. Instead I would say something along the lines of:\n// or (4) the local checkpoint information in the last commit is stale, which slows down future recoveries.", "url": "https://github.com/elastic/elasticsearch/pull/57350#discussion_r432437315", "createdAt": "2020-05-29T12:03:05Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java", "diffHunk": "@@ -1654,10 +1655,12 @@ public void flush(boolean force, boolean waitIfOngoing) throws EngineException {\n             }\n             try {\n                 // Only flush if (1) Lucene has uncommitted docs, or (2) forced by caller, or (3) the\n-                // newly created commit points to a different translog generation (can free translog)\n+                // newly created commit points to a different translog generation (can free translog),\n+                // or (4) the processed local checkpoint is ahead of the local checkpoint tracked in the safe commit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "340b51b97685630b591dd5fc2cb0327aaded86f0"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ0MzE0OQ==", "bodyText": "The refresh in the flush method is an internal refresh, not an external one. I don't think that the external refresh is actually necessary (we do the relevant refresh in IndexShard.postRecovery, which is called before moving the shard to started). What happens if you just remove the refresh call here?", "url": "https://github.com/elastic/elasticsearch/pull/57350#discussion_r432443149", "createdAt": "2020-05-29T12:16:01Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java", "diffHunk": "@@ -485,11 +486,11 @@ private void recoverFromTranslogInternal(TranslogRecoveryRunner translogRecovery\n         // note: if opsRecovered == 0 and we have older translogs it means they are corrupted or 0 length.\n         assert pendingTranslogRecovery.get() : \"translogRecovery is not pending but should be\";\n         pendingTranslogRecovery.set(false); // we are good - now we can commit\n+        logger.trace(() -> new ParameterizedMessage(\n+                \"flushing post recovery from translog: ops recovered [{}], current translog generation [{}]\",\n+                opsRecovered, translog.currentFileGeneration()));\n+        flush(false, true);\n         if (opsRecovered > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyMTg1NA=="}, "originalCommit": {"oid": "340b51b97685630b591dd5fc2cb0327aaded86f0"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "689a392977d91ce94a49a935e09fbc648d898901", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/689a392977d91ce94a49a935e09fbc648d898901", "committedDate": "2020-05-29T12:52:44Z", "message": "CR: comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDA5NjEy", "url": "https://github.com/elastic/elasticsearch/pull/57350#pullrequestreview-421009612", "createdAt": "2020-05-29T14:30:26Z", "commit": {"oid": "689a392977d91ce94a49a935e09fbc648d898901"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDQ5NTM5", "url": "https://github.com/elastic/elasticsearch/pull/57350#pullrequestreview-421049539", "createdAt": "2020-05-29T15:16:42Z", "commit": {"oid": "689a392977d91ce94a49a935e09fbc648d898901"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNToxNjo0MlrOGchH0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNToxNjo0MlrOGchH0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1NTk4NA==", "bodyText": "I am a bit concerned about the locking order inflush (readLock -> flushLock) and recoverFromTranslog (flushLock -> readLock). I think we can remove the flushLock in recoverFromTranslog as it's safe to flush during recovery.", "url": "https://github.com/elastic/elasticsearch/pull/57350#discussion_r432555984", "createdAt": "2020-05-29T15:16:42Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java", "diffHunk": "@@ -485,13 +486,10 @@ private void recoverFromTranslogInternal(TranslogRecoveryRunner translogRecovery\n         // note: if opsRecovered == 0 and we have older translogs it means they are corrupted or 0 length.\n         assert pendingTranslogRecovery.get() : \"translogRecovery is not pending but should be\";\n         pendingTranslogRecovery.set(false); // we are good - now we can commit\n-        if (opsRecovered > 0) {\n-            logger.trace(\"flushing post recovery from translog: ops recovered [{}], current translog generation [{}]\",\n-                opsRecovered, translog.currentFileGeneration());\n-            commitIndexWriter(indexWriter, translog);\n-            refreshLastCommittedSegmentInfos();\n-            refresh(\"translog_recovery\");\n-        }\n+        logger.trace(() -> new ParameterizedMessage(\n+                \"flushing post recovery from translog: ops recovered [{}], current translog generation [{}]\",\n+                opsRecovered, translog.currentFileGeneration()));\n+        flush(false, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "689a392977d91ce94a49a935e09fbc648d898901"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78282fc39b6de8ba45f5a9fe0f21ff6c81421aea", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/78282fc39b6de8ba45f5a9fe0f21ff6c81421aea", "committedDate": "2020-05-29T15:21:26Z", "message": "Merge remote-tracking branch 'elastic/master' into 57010"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1172d114264c483d39702fb177dcca49017e68d", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/a1172d114264c483d39702fb177dcca49017e68d", "committedDate": "2020-05-29T15:24:32Z", "message": "CR: remove flushlog from translog recovery"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDYwOTUz", "url": "https://github.com/elastic/elasticsearch/pull/57350#pullrequestreview-421060953", "createdAt": "2020-05-29T15:30:41Z", "commit": {"oid": "a1172d114264c483d39702fb177dcca49017e68d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e9c5f52ebcfe1806ee8fa5f65217b67e41a9b35", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/0e9c5f52ebcfe1806ee8fa5f65217b67e41a9b35", "committedDate": "2020-05-29T15:41:09Z", "message": "CR: drop outdated comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4171, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}