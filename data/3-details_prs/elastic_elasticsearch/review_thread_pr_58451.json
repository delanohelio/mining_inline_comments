{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NjMyODQ0", "number": 58451, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTowNTowN1rOEIAwbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo0ODo1OFrOEIy4Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODM2NDYzOnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTowNTowN1rOGntsog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTowNTowN1rOGntsog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5NjM1NA==", "bodyText": "required to use the api configuration. Another benefit is that with the java library plugin the compile dependencies will not require jar tasks to be build but rely on classes instead. runtime will still use jars. This could probably make some build job scenarios faster / utilise parallelisation better", "url": "https://github.com/elastic/elasticsearch/pull/58451#discussion_r444296354", "createdAt": "2020-06-23T15:05:07Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -83,7 +84,7 @@ public void apply(Project project) {\n         // apply global test task failure listener\n         project.getRootProject().getPluginManager().apply(TestFailureReportingPlugin.class);\n \n-        project.getPluginManager().apply(JavaPlugin.class);\n+        project.getPluginManager().apply(JavaLibraryPlugin.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a399d7139fe5cf636d9e9ce018e61086a05c39f2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjQ3NDU2OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/TestingConventionsTasks.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoyNzoxMFrOGo9SJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoyNzoxMFrOGo9SJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYwMDI5NQ==", "bodyText": "with compile tasks only depending on dependent projects compile tasks, the task input here needs to be explicit as it depends on jars that could not have been build before.", "url": "https://github.com/elastic/elasticsearch/pull/58451#discussion_r445600295", "createdAt": "2020-06-25T14:27:10Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/TestingConventionsTasks.java", "diffHunk": "@@ -348,7 +349,8 @@ private boolean isAnnotated(Method method, Class<?> annotation) {\n         return false;\n     }\n \n-    private FileCollection getTestsClassPath() {\n+    @Classpath\n+    public FileCollection getTestsClassPath() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "306c263245b8f5b6c9982c7f696357857853f4f9"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjU1MjIzOnYy", "diffSide": "LEFT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/EnforceDeprecationFailuresPlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo0Mzo0NlrOGo-CzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo0Mzo0NlrOGo-CzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxMjc0OA==", "bodyText": "We should always fail on resolution. no matter if the configuration actually contains a dependency or not.", "url": "https://github.com/elastic/elasticsearch/pull/58451#discussion_r445612748", "createdAt": "2020-06-25T14:43:46Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/EnforceDeprecationFailuresPlugin.java", "diffHunk": "@@ -78,15 +78,13 @@ private void failOnCompileConfigurationResolution(SourceSet sourceSet) {\n             .getByName(sourceSet.getCompileConfigurationName())\n             .getIncoming()\n             .beforeResolve(resolvableDependencies -> {\n-                if (resolvableDependencies.getDependencies().size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b297965bf141004a7bb6384a425b9dd75faea35b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjU2MTYzOnYy", "diffSide": "LEFT", "path": "distribution/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo0NTo1MFrOGo-Izg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo0NTo1MFrOGo-Izg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxNDI4Ng==", "bodyText": "This is actually necessary as the previously used runtime configuration extends compile and is therefore now empty. Using the correct runtimeClasspath configuration here has also the nice effect of removing another deprecated behaviour (of using \"runtime\")", "url": "https://github.com/elastic/elasticsearch/pull/58451#discussion_r445614286", "createdAt": "2020-06-25T14:45:50Z", "author": {"login": "breskeby"}, "path": "distribution/build.gradle", "diffHunk": "@@ -287,21 +287,21 @@ configure(subprojects.findAll { ['archives', 'packages'].contains(it.name) }) {\n       copySpec {\n         // delay by using closures, since they have not yet been configured, so no jar task exists yet\n         from { project(':server').jar }\n-        from { project(':server').configurations.runtime }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b297965bf141004a7bb6384a425b9dd75faea35b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjU3NjE0OnYy", "diffSide": "RIGHT", "path": "modules/kibana/build.gradle", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo0ODo1OFrOGo-SBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMjo0ODoyMVrOGpOWQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxNjY0NQ==", "bodyText": "we need to use runtimeElements as runtime is a) empty because it extends compile and is therefore empty now and 2) runtime is deprecated for consumption by other projects (see https://docs.gradle.org/6.5/userguide/java_library_plugin.html#sec:java_library_configurations_graph for details)", "url": "https://github.com/elastic/elasticsearch/pull/58451#discussion_r445616645", "createdAt": "2020-06-25T14:48:58Z", "author": {"login": "breskeby"}, "path": "modules/kibana/build.gradle", "diffHunk": "@@ -23,7 +23,7 @@ esplugin {\n }\n \n dependencies {\n-  compile project(path: ':modules:reindex', configuration: 'runtime')\n+  api project(path: ':modules:reindex', configuration: 'runtimeElements')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b297965bf141004a7bb6384a425b9dd75faea35b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcxNDczMQ==", "bodyText": "Why are we even specifying this? Why can't we use the default configuration here?", "url": "https://github.com/elastic/elasticsearch/pull/58451#discussion_r445714731", "createdAt": "2020-06-25T17:16:52Z", "author": {"login": "mark-vieira"}, "path": "modules/kibana/build.gradle", "diffHunk": "@@ -23,7 +23,7 @@ esplugin {\n }\n \n dependencies {\n-  compile project(path: ':modules:reindex', configuration: 'runtime')\n+  api project(path: ':modules:reindex', configuration: 'runtimeElements')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxNjY0NQ=="}, "originalCommit": {"oid": "b297965bf141004a7bb6384a425b9dd75faea35b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5MDcxMw==", "bodyText": "I don't know yet and I have that on my todo list to double check. But for the sake of keeping things simple and focussed in this PR I just did straight forward replacement for now", "url": "https://github.com/elastic/elasticsearch/pull/58451#discussion_r445790713", "createdAt": "2020-06-25T19:31:07Z", "author": {"login": "breskeby"}, "path": "modules/kibana/build.gradle", "diffHunk": "@@ -23,7 +23,7 @@ esplugin {\n }\n \n dependencies {\n-  compile project(path: ':modules:reindex', configuration: 'runtime')\n+  api project(path: ':modules:reindex', configuration: 'runtimeElements')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxNjY0NQ=="}, "originalCommit": {"oid": "b297965bf141004a7bb6384a425b9dd75faea35b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg3OTg3Mw==", "bodyText": "I looked into this closer. I assumed there was a subtile difference between default but since we ported all dependencies from compile to api we ensured actually that they are the same here. I'll remove this", "url": "https://github.com/elastic/elasticsearch/pull/58451#discussion_r445879873", "createdAt": "2020-06-25T22:48:21Z", "author": {"login": "breskeby"}, "path": "modules/kibana/build.gradle", "diffHunk": "@@ -23,7 +23,7 @@ esplugin {\n }\n \n dependencies {\n-  compile project(path: ':modules:reindex', configuration: 'runtime')\n+  api project(path: ':modules:reindex', configuration: 'runtimeElements')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxNjY0NQ=="}, "originalCommit": {"oid": "b297965bf141004a7bb6384a425b9dd75faea35b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1383, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}