{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MzMyMjYy", "number": 53492, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTozODoyMVrODnxMxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTo1MDowNFrODnxaWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDI3MTQwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTozODoyMVrOF19Hjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDoxNTozNFrOF1-QkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyMDIwNg==", "bodyText": "I don't think we need to pass all the index settings here, maybe just the black list?", "url": "https://github.com/elastic/elasticsearch/pull/53492#discussion_r392120206", "createdAt": "2020-03-13T09:38:21Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java", "diffHunk": "@@ -170,7 +174,7 @@ public static Directory create(RepositoriesService repositories,\n         if (SNAPSHOT_CACHE_ENABLED_SETTING.get(indexSettings.getSettings())) {\n             final Path cacheDir = shardPath.getDataPath().resolve(\"snapshots\").resolve(snapshotId.getUUID());\n             directory = new CacheDirectory(directory, cache, cacheDir, snapshotId, indexId, shardPath.getShardId(),\n-                currentTimeNanosSupplier);\n+                indexSettings.getSettings(), currentTimeNanosSupplier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fe97a41fd86852492c52f664186accc13015bdc"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzODg5Ng==", "bodyText": "I was expecting other properties to be configured in the same way in the future, so found it easier to just pass the setting.", "url": "https://github.com/elastic/elasticsearch/pull/53492#discussion_r392138896", "createdAt": "2020-03-13T10:15:34Z", "author": {"login": "ywelsch"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java", "diffHunk": "@@ -170,7 +174,7 @@ public static Directory create(RepositoriesService repositories,\n         if (SNAPSHOT_CACHE_ENABLED_SETTING.get(indexSettings.getSettings())) {\n             final Path cacheDir = shardPath.getDataPath().resolve(\"snapshots\").resolve(snapshotId.getUUID());\n             directory = new CacheDirectory(directory, cache, cacheDir, snapshotId, indexId, shardPath.getShardId(),\n-                currentTimeNanosSupplier);\n+                indexSettings.getSettings(), currentTimeNanosSupplier);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyMDIwNg=="}, "originalCommit": {"oid": "6fe97a41fd86852492c52f664186accc13015bdc"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDMwMDU5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheDirectory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTo0ODowOFrOF19aQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDoyODo1MVrOF1-qxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNDk5NA==", "bodyText": "Let's just use IndexFileNames.getExtension() and in case of no extension always cache if name.startsWith(IndexFileNames.SEGMENTS) || name.equals(IndexFileNames.OLD_SEGMENTS_GEN) ?", "url": "https://github.com/elastic/elasticsearch/pull/53492#discussion_r392124994", "createdAt": "2020-03-13T09:48:08Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheDirectory.java", "diffHunk": "@@ -383,4 +396,17 @@ private static boolean assertFileChannelOpen(FileChannel fileChannel) {\n         assert fileChannel.isOpen();\n         return true;\n     }\n+\n+    private static String getExtension(String name) {\n+        int i = name.lastIndexOf('.');\n+        if (i == -1) {\n+            return \"\";\n+        }\n+        return name.substring(i + 1);\n+    }\n+\n+    private boolean isBlackListedFromCache(String name) {\n+        String ext = getExtension(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fe97a41fd86852492c52f664186accc13015bdc"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0NTYwNQ==", "bodyText": "fixed in a2c5489", "url": "https://github.com/elastic/elasticsearch/pull/53492#discussion_r392145605", "createdAt": "2020-03-13T10:28:51Z", "author": {"login": "ywelsch"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheDirectory.java", "diffHunk": "@@ -383,4 +396,17 @@ private static boolean assertFileChannelOpen(FileChannel fileChannel) {\n         assert fileChannel.isOpen();\n         return true;\n     }\n+\n+    private static String getExtension(String name) {\n+        int i = name.lastIndexOf('.');\n+        if (i == -1) {\n+            return \"\";\n+        }\n+        return name.substring(i + 1);\n+    }\n+\n+    private boolean isBlackListedFromCache(String name) {\n+        String ext = getExtension(name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNDk5NA=="}, "originalCommit": {"oid": "6fe97a41fd86852492c52f664186accc13015bdc"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDMwMjUwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTo0ODo0N1rOF19bgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDoyNTowMlrOF1-izA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNTMxNA==", "bodyText": "Can we remove .cfs from this list?", "url": "https://github.com/elastic/elasticsearch/pull/53492#discussion_r392125314", "createdAt": "2020-03-13T09:48:47Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -122,12 +123,19 @@ public void testCreateAndRestoreSearchableSnapshot() throws Exception {\n         final boolean cacheEnabled = randomBoolean();\n         logger.info(\"--> restoring index [{}] with cache [{}]\", restoredIndexName, cacheEnabled ? \"enabled\" : \"disabled\");\n \n+        Settings.Builder indexSettingsBuilder = Settings.builder()\n+            .put(SearchableSnapshots.SNAPSHOT_CACHE_ENABLED_SETTING.getKey(), cacheEnabled)\n+            .put(IndexSettings.INDEX_CHECK_ON_STARTUP.getKey(), Boolean.FALSE.toString());\n+        final List<String> nonCachedExtensions;\n+        if (randomBoolean()) {\n+            nonCachedExtensions = randomSubsetOf(Arrays.asList(\"fdt\", \"fdx\", \"nvd\", \"dvd\", \"tip\", \"cfs\", \"dim\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fe97a41fd86852492c52f664186accc13015bdc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzODA5MQ==", "bodyText": "why?\nThis is just a random list to test this functionality on. What's in there is not so important. And I don't think that we are force-merging in this test, so .cfs could be a reality here.", "url": "https://github.com/elastic/elasticsearch/pull/53492#discussion_r392138091", "createdAt": "2020-03-13T10:13:54Z", "author": {"login": "ywelsch"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -122,12 +123,19 @@ public void testCreateAndRestoreSearchableSnapshot() throws Exception {\n         final boolean cacheEnabled = randomBoolean();\n         logger.info(\"--> restoring index [{}] with cache [{}]\", restoredIndexName, cacheEnabled ? \"enabled\" : \"disabled\");\n \n+        Settings.Builder indexSettingsBuilder = Settings.builder()\n+            .put(SearchableSnapshots.SNAPSHOT_CACHE_ENABLED_SETTING.getKey(), cacheEnabled)\n+            .put(IndexSettings.INDEX_CHECK_ON_STARTUP.getKey(), Boolean.FALSE.toString());\n+        final List<String> nonCachedExtensions;\n+        if (randomBoolean()) {\n+            nonCachedExtensions = randomSubsetOf(Arrays.asList(\"fdt\", \"fdx\", \"nvd\", \"dvd\", \"tip\", \"cfs\", \"dim\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNTMxNA=="}, "originalCommit": {"oid": "6fe97a41fd86852492c52f664186accc13015bdc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0MzU2NA==", "bodyText": "why?\n\nMy request was mostly motivated by reducing the number of small requests executed to the fixtures as it makes debug a lot more difficult, but this test does not run on fixture so you can just forget my comment. Sorry for the noise.", "url": "https://github.com/elastic/elasticsearch/pull/53492#discussion_r392143564", "createdAt": "2020-03-13T10:25:02Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -122,12 +123,19 @@ public void testCreateAndRestoreSearchableSnapshot() throws Exception {\n         final boolean cacheEnabled = randomBoolean();\n         logger.info(\"--> restoring index [{}] with cache [{}]\", restoredIndexName, cacheEnabled ? \"enabled\" : \"disabled\");\n \n+        Settings.Builder indexSettingsBuilder = Settings.builder()\n+            .put(SearchableSnapshots.SNAPSHOT_CACHE_ENABLED_SETTING.getKey(), cacheEnabled)\n+            .put(IndexSettings.INDEX_CHECK_ON_STARTUP.getKey(), Boolean.FALSE.toString());\n+        final List<String> nonCachedExtensions;\n+        if (randomBoolean()) {\n+            nonCachedExtensions = randomSubsetOf(Arrays.asList(\"fdt\", \"fdx\", \"nvd\", \"dvd\", \"tip\", \"cfs\", \"dim\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNTMxNA=="}, "originalCommit": {"oid": "6fe97a41fd86852492c52f664186accc13015bdc"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDMwNjE2OnYy", "diffSide": "RIGHT", "path": "plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3BlobContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTo1MDowNFrOF19eCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTo1MDowNFrOF19eCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNTk2MA==", "bodyText": "@DaveCTurner might have an opinion on this value", "url": "https://github.com/elastic/elasticsearch/pull/53492#discussion_r392125960", "createdAt": "2020-03-13T09:50:04Z", "author": {"login": "tlrx"}, "path": "plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3BlobContainer.java", "diffHunk": "@@ -105,9 +105,13 @@ public InputStream readBlob(String blobName, long position, long length) throws\n     }\n \n     @Override\n-    public long readBlobPreferredLength() {\n+    public long readBlobPreferredLength(boolean cachedRead) {\n         // This container returns streams that must be fully consumed, so we tell consumers to make bounded requests.\n-        return new ByteSizeValue(32, ByteSizeUnit.MB).getBytes();\n+        if (cachedRead) {\n+            return new ByteSizeValue(32, ByteSizeUnit.MB).getBytes();\n+        } else {\n+            return new ByteSizeValue(512, ByteSizeUnit.KB).getBytes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fe97a41fd86852492c52f664186accc13015bdc"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3333, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}