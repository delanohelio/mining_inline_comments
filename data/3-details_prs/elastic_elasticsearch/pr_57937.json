{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTM4MTM1", "number": 57937, "title": "Serialize Get Mappings Response on Generic ThreadPool", "bodyText": "Solves/mitigates the issue observed in #57284\nFor large responses to the get mappings request, the serialization\nto XContent can be extremely slow (serializing mappings is expensive since\nwe have to decompress and deserialize the mapping source).\nTo not introduce instability on the IO thread handling the get mappings response\nwe should move the serialization to the generic pool.\nThe trade-off of introducing one or two new context switches for responses that are\nsmall enough to not cause trouble on the transport thread to prevent instability\nin case of a large number of mappings in the cluster seems worth it.\nMarking this team discuss for now, since we had the larger discussion of where REST actions should execute before and didn't come to a conclusion here yet. While this is a special case, we have a number of other potentially slow REST actions like this one where a very large response gets serialized.", "createdAt": "2020-06-10T15:34:35Z", "url": "https://github.com/elastic/elasticsearch/pull/57937", "merged": true, "mergeCommit": {"oid": "e5eca6a0b87416f27211721c4a5fa499deba65d0"}, "closed": true, "closedAt": "2020-08-21T05:12:20Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp7WjygH2gAyNDMyNTM4MTM1OmI0Zjg3YmFmMjE5N2MzODRhMmUzYjZlMGVkNjZmOTk3ZmRkNTNjMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAx2y1AFqTQ3MTcyNDI0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b4f87baf2197c384a2e3b6e0ed66f997fdd53c33", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/b4f87baf2197c384a2e3b6e0ed66f997fdd53c33", "committedDate": "2020-06-10T15:26:01Z", "message": "Serialize Get Mappings Response on Generic ThreadPool\n\nFor large responses to the get mappings request, the serialization\nto XContent can be extremely slow (serializing mappings is expensive since\nwe have to decompress and deserialize the mapping source).\nTo not introduce instability on the IO thread handling the get mappings response\nwe should move the serialization to the generic pool.\nThe trade-off of introducing one or two new context switches for responses that are\nsmall enough to not cause trouble on the transport thread to prevent instability\nin case of a large number of mappings in the cluster seems worth it."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNTQ3NTUy", "url": "https://github.com/elastic/elasticsearch/pull/57937#pullrequestreview-471547552", "createdAt": "2020-08-20T12:32:49Z", "commit": {"oid": "b4f87baf2197c384a2e3b6e0ed66f997fdd53c33"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMjozMjo0OVrOHD-qnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMjozMjo0OVrOHD-qnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkzNDQ5Mw==", "bodyText": "WDYT about checking for a timeout again here before we do all the serialisation work? If we use a bounded threadpool then these things might pile up, so aborting early might be a helpful way to push back.", "url": "https://github.com/elastic/elasticsearch/pull/57937#discussion_r473934493", "createdAt": "2020-08-20T12:32:49Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java", "diffHunk": "@@ -62,13 +71,21 @@ public RestChannelConsumer prepareRequest(final RestRequest request, final NodeC\n         getMappingsRequest.indicesOptions(IndicesOptions.fromRequest(request, getMappingsRequest.indicesOptions()));\n         getMappingsRequest.masterNodeTimeout(request.paramAsTime(\"master_timeout\", getMappingsRequest.masterNodeTimeout()));\n         getMappingsRequest.local(request.paramAsBoolean(\"local\", getMappingsRequest.local()));\n-        return channel -> client.admin().indices().getMappings(getMappingsRequest, new RestBuilderListener<>(channel) {\n+        return channel -> client.admin().indices().getMappings(getMappingsRequest, new RestActionListener<>(channel) {\n+\n             @Override\n-            public RestResponse buildResponse(final GetMappingsResponse response, final XContentBuilder builder) throws Exception {\n-                builder.startObject();\n-                response.toXContent(builder, request);\n-                builder.endObject();\n-                return new BytesRestResponse(RestStatus.OK, builder);\n+            protected void processResponse(GetMappingsResponse getMappingsResponse) {\n+                // Process serialization on GENERIC pool since the serialization of the raw mappings to XContent can be too slow to execute\n+                // on an IO thread\n+                threadPool.generic().execute(ActionRunnable.wrap(this, l -> new RestBuilderListener<GetMappingsResponse>(channel) {\n+                    @Override\n+                    public RestResponse buildResponse(final GetMappingsResponse response, final XContentBuilder builder) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4f87baf2197c384a2e3b6e0ed66f997fdd53c33"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bd68d4d6be52152133889a5504bf1ff96874906", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/0bd68d4d6be52152133889a5504bf1ff96874906", "committedDate": "2020-08-20T13:32:47Z", "message": "timeout"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzI0MjQ2", "url": "https://github.com/elastic/elasticsearch/pull/57937#pullrequestreview-471724246", "createdAt": "2020-08-20T15:22:26Z", "commit": {"oid": "0bd68d4d6be52152133889a5504bf1ff96874906"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 751, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}