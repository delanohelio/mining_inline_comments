{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNjU0ODE3", "number": 53038, "title": "Add a VSConfig resolver for aggregations not using the registry", "bodyText": "Relates to #42949\nSince for now we are scoping the ValuesSourceRegistry to only apply to aggregations that inherit from ValuesSourceAggregationBuilder, we need some place to preserve the pre-registry logic for resolving a ValuesSourceConfig based on the IndexFieldData.  We have a fallback route for this in ValuesSourceRegistry#getValuesSourceType, but once all the VSAB aggregations are wired up we'd like to get rid of that fallback.  This PR provides an alternative that we can call explicitly on the aggregations that should be using it.", "createdAt": "2020-03-02T23:06:06Z", "url": "https://github.com/elastic/elasticsearch/pull/53038", "merged": true, "mergeCommit": {"oid": "33fc002e4160e6849430e5a5ac38338094bf721b"}, "closed": true, "closedAt": "2020-03-04T20:06:04Z", "author": {"login": "not-napoleon"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJ1ItegH2gAyMzgyNjU0ODE3OmU0NjBjYjI0MGI1MjRmODQ4MmMwMDhkOTU1ZjkzN2JjODY5ZWZmMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKYYmbgH2gAyMzgyNjU0ODE3OmJkNjI0ZGNkMWI3ZGJhOTQ5ZmVmOWNkZWVhM2E3MDc1YzdjMDI1ZTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e460cb240b524f8482c008d955f937bc869eff37", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/e460cb240b524f8482c008d955f937bc869eff37", "committedDate": "2020-03-02T22:05:53Z", "message": "make field to VST function a parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcf649a16033e4cd4a9cd90e7eedcb3c37dd719e", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/fcf649a16033e4cd4a9cd90e7eedcb3c37dd719e", "committedDate": "2020-03-02T22:56:35Z", "message": "Put aggs we don't intend to wire up on the legacy resolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11f2ce6adc9a0e093e938683e6692cf1277f1d3a", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/11f2ce6adc9a0e093e938683e6692cf1277f1d3a", "committedDate": "2020-03-03T19:54:05Z", "message": "Merge branch 'feature/extensible-values-source' into vs-refactor-legacy-resolve"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzY2OTgx", "url": "https://github.com/elastic/elasticsearch/pull/53038#pullrequestreview-368366981", "createdAt": "2020-03-03T22:16:59Z", "commit": {"oid": "11f2ce6adc9a0e093e938683e6692cf1277f1d3a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjoxNzowMFrOFxYoZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjoxNzowMFrOFxYoZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyODEwMg==", "bodyText": "Should this be private, since it uses a private interface (FieldResolver) and looks to be an internal thing anyway?", "url": "https://github.com/elastic/elasticsearch/pull/53038#discussion_r387328102", "createdAt": "2020-03-03T22:17:00Z", "author": {"login": "polyfractal"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java", "diffHunk": "@@ -61,6 +65,50 @@ public static ValuesSourceConfig resolve(QueryShardContext context,\n                                              String format,\n                                              ValuesSourceType defaultValueSourceType,\n                                              String aggregationName) {\n+\n+        return internalResolve(context, userValueTypeHint, field, script, missing, timeZone, format, defaultValueSourceType,\n+            aggregationName, ValuesSourceConfig::getMappingFromRegistry);\n+    }\n+\n+    /**\n+     * AKA legacy resolve.  This method should be called by aggregations not supported by the {@link ValuesSourceRegistry}, to use the\n+     * pre-registry logic to decide on the {@link ValuesSourceType}.  New aggregations which extend from\n+     * {@link ValuesSourceAggregationBuilder} should not use this method, preferring {@link ValuesSourceConfig#resolve} instead.\n+     *\n+     * @param context - the query context\n+     * @param userValueTypeHint - User specified value type; used for missing values and scripts\n+     * @param field - The field being aggregated over.  At least one of field and script must not be null\n+     * @param script - The script the user specified.  At least one of field and script must not be null\n+     * @param missing - A user specified value to apply when the field is missing.  Should be of type userValueTypeHint\n+     * @param timeZone - Used to generate a format for dates\n+     * @param format - The format string to apply to this field.  Confusingly, this is used for input parsing as well as output formatting\n+     *               See https://github.com/elastic/elasticsearch/issues/47469\n+     * @param defaultValueSourceType - per-aggregation {@link ValuesSource} of last resort.\n+     * @return - An initialized {@link ValuesSourceConfig} that will yield the appropriate {@link ValuesSourceType}\n+     */\n+    public static ValuesSourceConfig resolveUnregistered(QueryShardContext context,\n+                                                         ValueType userValueTypeHint,\n+                                                         String field,\n+                                                         Script script,\n+                                                         Object missing,\n+                                                         ZoneId timeZone,\n+                                                         String format,\n+                                                         ValuesSourceType defaultValueSourceType) {\n+        return internalResolve(context, userValueTypeHint, field, script, missing, timeZone, format, defaultValueSourceType, null,\n+            ValuesSourceConfig::getLegacyMapping);\n+    }\n+\n+    public static ValuesSourceConfig internalResolve(QueryShardContext context,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11f2ce6adc9a0e093e938683e6692cf1277f1d3a"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd624dcd1b7dba949fef9cdeea3a7075c7c025e1", "author": {"user": {"login": "not-napoleon", "name": "Mark Tozzi"}}, "url": "https://github.com/elastic/elasticsearch/commit/bd624dcd1b7dba949fef9cdeea3a7075c7c025e1", "committedDate": "2020-03-04T15:09:55Z", "message": "public -> private for the internal constructor"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1926, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}