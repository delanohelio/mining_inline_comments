{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNjExNTMz", "number": 61415, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNToxNjo0NlrOEbnrrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNToxNjo0NlrOEbnrrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3Mzk3MTY3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNToxNjo0NlrOHFp8iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODo1NzowM1rOHFyQCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5MjE2OA==", "bodyText": "We should probably catch and handle IllegalArgumentException in case the stream input doesn't support marking", "url": "https://github.com/elastic/elasticsearch/pull/61415#discussion_r475692168", "createdAt": "2020-08-24T15:16:46Z", "author": {"login": "jaymode"}, "path": "server/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java", "diffHunk": "@@ -380,8 +380,13 @@ public static BytesReference toXContent(ToXContent toXContent, XContentType xCon\n      */\n     @Deprecated\n     public static XContentType xContentType(BytesReference bytes) {\n-        BytesRef br = bytes.toBytesRef();\n-        return XContentFactory.xContentType(br.bytes, br.offset, br.length);\n+        try {\n+            final InputStream inputStream = bytes.streamInput();\n+            return XContentFactory.xContentType(inputStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542d288af95c905b9fb15ceeba4fe3d3a3a1a520"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgyNjk0MA==", "bodyText": "Right that's quite subtle, how about this: added an assertion for this explicitly since we rely on the fact that the BytesReference returns a stream that supports marking elsewhere as well and on second look also added the BytesArray fast-path to speed things up.\nwdyt?", "url": "https://github.com/elastic/elasticsearch/pull/61415#discussion_r475826940", "createdAt": "2020-08-24T18:54:46Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java", "diffHunk": "@@ -380,8 +380,13 @@ public static BytesReference toXContent(ToXContent toXContent, XContentType xCon\n      */\n     @Deprecated\n     public static XContentType xContentType(BytesReference bytes) {\n-        BytesRef br = bytes.toBytesRef();\n-        return XContentFactory.xContentType(br.bytes, br.offset, br.length);\n+        try {\n+            final InputStream inputStream = bytes.streamInput();\n+            return XContentFactory.xContentType(inputStream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5MjE2OA=="}, "originalCommit": {"oid": "542d288af95c905b9fb15ceeba4fe3d3a3a1a520"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgyODIzNA==", "bodyText": "Works for me. I do wonder if we should consider a separate change to BytesReference and add a hasArray method so we can stop using instanceof BytesArray", "url": "https://github.com/elastic/elasticsearch/pull/61415#discussion_r475828234", "createdAt": "2020-08-24T18:57:03Z", "author": {"login": "jaymode"}, "path": "server/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java", "diffHunk": "@@ -380,8 +380,13 @@ public static BytesReference toXContent(ToXContent toXContent, XContentType xCon\n      */\n     @Deprecated\n     public static XContentType xContentType(BytesReference bytes) {\n-        BytesRef br = bytes.toBytesRef();\n-        return XContentFactory.xContentType(br.bytes, br.offset, br.length);\n+        try {\n+            final InputStream inputStream = bytes.streamInput();\n+            return XContentFactory.xContentType(inputStream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5MjE2OA=="}, "originalCommit": {"oid": "542d288af95c905b9fb15ceeba4fe3d3a3a1a520"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 769, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}