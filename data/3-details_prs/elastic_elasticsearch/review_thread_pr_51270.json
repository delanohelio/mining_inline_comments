{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NDg5ODk1", "number": 51270, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDoxNzowN1rODZn6lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDoyMTozMlrODZx5Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTk0OTY2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/transport/TransportRequestDeduplicator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDoxNzowN1rOFgHeqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDoxNzowN1rOFgHeqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIyMTI5MQ==", "bodyText": "I know there's just one use case for this now, but just dropping all deduplication seems to be the right approach to master failovers in general if we ever want to  reuse this for e.g. put mapping calls or so.", "url": "https://github.com/elastic/elasticsearch/pull/51270#discussion_r369221291", "createdAt": "2020-01-21T20:17:07Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/TransportRequestDeduplicator.java", "diffHunk": "@@ -53,6 +53,14 @@ public void executeOnce(T request, ActionListener<Void> listener, BiConsumer<T,\n         }\n     }\n \n+    /**\n+     * Remove all tracked requests from this instance so that the first time {@link #executeOnce} is invoked with any request it triggers\n+     * an actual request execution. Use this e.g. for requests to master that need to be sent again on master failover.\n+     */\n+    public void clear() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2c7a31d97cc3713025562492948aecdc2ae7516"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzU4NDM5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDoyMTozMlrOFgXCeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMzoxMDoxMVrOFgbfLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NjIxNg==", "bodyText": "I don't understand why this is needed. UpdateSnapshotStatusAction is a TransportMasterNodeAction and should resend the request in case of master failover.", "url": "https://github.com/elastic/elasticsearch/pull/51270#discussion_r369476216", "createdAt": "2020-01-22T10:21:32Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java", "diffHunk": "@@ -358,6 +358,9 @@ private void syncShardStatsOnNewMaster(ClusterChangedEvent event) {\n             return;\n         }\n \n+        // Clear request deduplicator since we need to send all requests that were potentially not handled by the previous\n+        // master again\n+        remoteFailedRequestDeduplicator.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "700184e526c3af77725bfecc7465b7a57d794ae5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3OTU2Ng==", "bodyText": "I think currently we're only retrying on FailedToCommitClusterStateException and NotMasterException but not on things like the node closed exception. That's why we have the manual retry/re-send of these messages in SnapshotShardsService in the first place don't we?", "url": "https://github.com/elastic/elasticsearch/pull/51270#discussion_r369479566", "createdAt": "2020-01-22T10:28:12Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java", "diffHunk": "@@ -358,6 +358,9 @@ private void syncShardStatsOnNewMaster(ClusterChangedEvent event) {\n             return;\n         }\n \n+        // Clear request deduplicator since we need to send all requests that were potentially not handled by the previous\n+        // master again\n+        remoteFailedRequestDeduplicator.clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NjIxNg=="}, "originalCommit": {"oid": "700184e526c3af77725bfecc7465b7a57d794ae5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4ODI1Ng==", "bodyText": "I'm confused by this stack trace. It shows that the node that's sending the request is closed, no? Why would we want to retry sending a request from a node that's shut down?", "url": "https://github.com/elastic/elasticsearch/pull/51270#discussion_r369488256", "createdAt": "2020-01-22T10:46:07Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java", "diffHunk": "@@ -358,6 +358,9 @@ private void syncShardStatsOnNewMaster(ClusterChangedEvent event) {\n             return;\n         }\n \n+        // Clear request deduplicator since we need to send all requests that were potentially not handled by the previous\n+        // master again\n+        remoteFailedRequestDeduplicator.clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NjIxNg=="}, "originalCommit": {"oid": "700184e526c3af77725bfecc7465b7a57d794ae5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ5Mzk4OA==", "bodyText": "Sorry pasted the wrong trace:\n  1> [2020-01-21T11:49:53,151][WARN ][o.e.s.SnapshotShardsService] [node_td3] [test-repo:test-snap/v_2yOVZsQHu6gk_aFsmkKg] [ShardSnapshotStatus[state=SUCCESS, nodeId=8MquPimwRTCtgnobCaxJlw, reason=null, generation=T-25oH4kSg62xXEtINmviQ]] failed to update snapshot state\n  1> org.elasticsearch.transport.RemoteTransportException: [node_tm0][127.0.0.1:41909][internal:cluster/snapshot/update_snapshot_status]\n  1> Caused by: org.elasticsearch.node.NodeClosedException: node closed {node_tm0}{VGisb-JmTiOkIc_vJP8FhA}{Ucpv57LoTEy1J_cuDT1L8A}{127.0.0.1}{127.0.0.1:41909}{im}\n  1> \tat org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$2.onClusterServiceClose(TransportMasterNodeAction.java:213) ~[main/:?]\n  1> \tat org.elasticsearch.cluster.ClusterStateObserver$ContextPreservingListener.onClusterServiceClose(ClusterStateObserver.java:318) ~[main/:?]\n  1> \tat org.elasticsearch.cluster.ClusterStateObserver$ObserverClusterStateListener.onClose(ClusterStateObserver.java:237) ~[main/:?]\n  1> \tat org.elasticsearch.cluster.service.ClusterApplierService.doStop(ClusterApplierService.java:186) ~[main/:?]\n  1> \tat org.elasticsearch.common.component.AbstractLifecycleComponent.stop(AbstractLifecycleComponent.java:79) ~[main/:?]\n  1> \tat org.elasticsearch.cluster.service.ClusterService.doStop(ClusterService.java:96) ~[main/:?]\n  1> \tat org.elasticsearch.common.component.AbstractLifecycleComponent.stop(AbstractLifecycleComponent.java:79) ~[main/:?]\n  1> \tat org.elasticsearch.node.Node.stop(Node.java:805) ~[main/:?]\n  1> \tat org.elasticsearch.node.Node.close(Node.java:829) ~[main/:?]\n  1> \tat org.elasticsearch.test.InternalTestCluster$NodeAndClient.close(InternalTestCluster.java:954) ~[framework-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\n  1> \tat org.elasticsearch.test.InternalTestCluster.stopNodesAndClients(InternalTestCluster.java:1573) ~[framework-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\n  1> \tat org.elasticsearch.test.InternalTestCluster.stopNodesAndClient(InternalTestCluster.java:1563) ~[framework-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\n  1> \tat org.elasticsearch.test.InternalTestCluster.stopCurrentMasterNode(InternalTestCluster.java:1493) ~[framework-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT]\n  1> \tat org.elasticsearch.snapshots.DedicatedClusterSnapshotRestoreIT.testMasterShutdownDuringSnapshot(DedicatedClusterSnapshotRestoreIT.java:849) ~[test/:?]\n  1> \tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n  1> \tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]\n  1> \tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n  1> \tat java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]\n  1> \tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1750) ~[randomizedtesting-runner-2.7.4.jar:?]\n  1> \tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:938) ~[randomizedtesting-runner-2.7.4.jar:?]\n  1> \tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:974) ~[randomizedtesting-runner-2.7.4.jar:?]\n  1> \tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:988) ~[randomizedtesting-runner-2.7.4.jar:?]\n\nWe have the same for the remote end as well. I'm not 100% sure we can get that exception outside of a test (because of the shut down order, but as you can see at least in the test requests are clearly not retried on the master node restart tm_0 and just go to the listener's onFailure). We could improve the master action to retry this case as well, but as long as we have the fail-safe retry on master failover in the snapshot shard's service already, we should make that actually work?", "url": "https://github.com/elastic/elasticsearch/pull/51270#discussion_r369493988", "createdAt": "2020-01-22T10:58:33Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java", "diffHunk": "@@ -358,6 +358,9 @@ private void syncShardStatsOnNewMaster(ClusterChangedEvent event) {\n             return;\n         }\n \n+        // Clear request deduplicator since we need to send all requests that were potentially not handled by the previous\n+        // master again\n+        remoteFailedRequestDeduplicator.clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NjIxNg=="}, "originalCommit": {"oid": "700184e526c3af77725bfecc7465b7a57d794ae5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NjU1MA==", "bodyText": "This looks like a bug in TransportMasterNodeAction, then. In case where a node is shut down, we first shut down the cluster service, and only then do we shut down the transport service. This means that a node that has sent a MasterNodeRequest to a master node that is in the process of shutting down can receive a TransportException with the cause being a NodeClosedException, for which we don't trigger a retry (we only do that for a ConnectTransportException). Can we fix that instead of this hack here (which also fixes this situation for any other master-level request)? Long term, the logic in syncShardStatsOnNewMaster can go away. I think it's mainly still here because the ShardSnapshotStatus action was not a TransportMasterNodeAction in some older versions.", "url": "https://github.com/elastic/elasticsearch/pull/51270#discussion_r369546550", "createdAt": "2020-01-22T13:04:25Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java", "diffHunk": "@@ -358,6 +358,9 @@ private void syncShardStatsOnNewMaster(ClusterChangedEvent event) {\n             return;\n         }\n \n+        // Clear request deduplicator since we need to send all requests that were potentially not handled by the previous\n+        // master again\n+        remoteFailedRequestDeduplicator.clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NjIxNg=="}, "originalCommit": {"oid": "700184e526c3af77725bfecc7465b7a57d794ae5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0OTEwMA==", "bodyText": "@ywelsch sounds good, I'll look into fixing the TransportMasterNodeAction and removing the retry in the snapshot shards service then shortly :)\nStill, so long as we have syncShardStatsOnNewMaster I feel like we should have this hack in place as without it that method doesn't really make sense?", "url": "https://github.com/elastic/elasticsearch/pull/51270#discussion_r369549100", "createdAt": "2020-01-22T13:10:11Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java", "diffHunk": "@@ -358,6 +358,9 @@ private void syncShardStatsOnNewMaster(ClusterChangedEvent event) {\n             return;\n         }\n \n+        // Clear request deduplicator since we need to send all requests that were potentially not handled by the previous\n+        // master again\n+        remoteFailedRequestDeduplicator.clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NjIxNg=="}, "originalCommit": {"oid": "700184e526c3af77725bfecc7465b7a57d794ae5"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4414, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}