{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MzkwMzU5", "number": 53504, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoxNTowNlrODnnQrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo1MToyOVrODnyj3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODY0MzAzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/ParseContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoxNTowNlrOF1t4FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToxOToyNVrOF1vpSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg3MDQ4NQ==", "bodyText": "We cannot use the binary value without checking the type of the field. It could be a real binary field that doesn't store utf8 bytes. Since this function is only used in the terms vector service, can you move it there and adds a check to extract binary values only if the field is of type keyword ?", "url": "https://github.com/elastic/elasticsearch/pull/53504#discussion_r391870485", "createdAt": "2020-03-12T20:15:06Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/ParseContext.java", "diffHunk": "@@ -131,8 +131,12 @@ public IndexableField getByKey(Object key) {\n         public final String[] getValues(String name) {\n             List<String> result = new ArrayList<>();\n             for (IndexableField field : fields) {\n-                if (field.name().equals(name) && field.stringValue() != null) {\n-                    result.add(field.stringValue());\n+                if (field.name().equals(name)) {\n+                    if (field.stringValue() != null) {\n+                        result.add(field.stringValue());\n+                    } else if (field.binaryValue() != null) { // KeywordFieldType", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb058c6dd8c6c73d7a4bb67905d8405f675d6aeb"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5OTQ2NQ==", "bodyText": "The method is called as you said only by TermVectorService and it's guarded by isValidField:\nhttps://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java#L304 but I agree, it makes sense to move the method close to this so it's visible.", "url": "https://github.com/elastic/elasticsearch/pull/53504#discussion_r391899465", "createdAt": "2020-03-12T21:19:25Z", "author": {"login": "matriv"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/ParseContext.java", "diffHunk": "@@ -131,8 +131,12 @@ public IndexableField getByKey(Object key) {\n         public final String[] getValues(String name) {\n             List<String> result = new ArrayList<>();\n             for (IndexableField field : fields) {\n-                if (field.name().equals(name) && field.stringValue() != null) {\n-                    result.add(field.stringValue());\n+                if (field.name().equals(name)) {\n+                    if (field.stringValue() != null) {\n+                        result.add(field.stringValue());\n+                    } else if (field.binaryValue() != null) { // KeywordFieldType", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg3MDQ4NQ=="}, "originalCommit": {"oid": "fb058c6dd8c6c73d7a4bb67905d8405f675d6aeb"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDQ5NDM3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo1MToyOVrOF1_UTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo1MToyOVrOF1_UTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1NjIzOA==", "bodyText": "I think that this will create duplicates due to doc values field that also use a binary value (SortedSetDocValuesField). You should change this to something like:\nif (field.fieldType() instanceof KeywordFieldMapper.KeywordFieldType) {\n  result.add(field.binaryValue().utf8ToString());\n} else if (field.fieldType() instanceof StringFieldType) {\n  result.add(field.stringValue());\n}", "url": "https://github.com/elastic/elasticsearch/pull/53504#discussion_r392156238", "createdAt": "2020-03-13T10:51:29Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java", "diffHunk": "@@ -313,14 +314,33 @@ private static Fields generateTermVectorsFromDoc(IndexShard indexShard, TermVect\n             else {\n                 seenFields.add(field.name());\n             }\n-            String[] values = doc.getValues(field.name());\n+            String[] values = getValues(doc.getFields(field.name()));\n             documentFields.add(new DocumentField(field.name(), Arrays.asList((Object[]) values)));\n         }\n         return generateTermVectors(indexShard,\n             XContentHelper.convertToMap(parsedDocument.source(), true, request.xContentType()).v2(), documentFields,\n                 request.offsets(), request.perFieldAnalyzer(), seenFields);\n     }\n \n+    /**\n+     * Returns an array of values of the field specified as the method parameter.\n+     * This method returns an empty array when there are no\n+     * matching fields.  It never returns null.\n+     * @param fields The <code>IndexableField</code> to get the values from\n+     * @return a <code>String[]</code> of field values\n+     */\n+    public static String[] getValues(IndexableField[] fields) {\n+        List<String> result = new ArrayList<>();\n+        for (IndexableField field : fields) {\n+            if (field.stringValue() != null) {\n+                result.add(field.stringValue());\n+            } else if (field.binaryValue() != null) { // KeywordFieldType", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd234c03ef48167b7e45914f4e72de8c95631ce"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3211, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}