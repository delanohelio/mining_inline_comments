{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMjExNjIx", "number": 65205, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNTo0NjoyNVrOE9SXmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNDo0NFrOFFFsIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjk5NTQ1OnYy", "diffSide": "RIGHT", "path": "docs/reference/data-streams/change-mappings-and-settings.asciidoc", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNTo0NjoyNVrOH55XbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo0NjoyMFrOH8NL_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3MDc2NQ==", "bodyText": "Now that a backing index's name contains its creation date, we probably don't need to point out the oldest backing index.", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r530470765", "createdAt": "2020-11-25T15:46:25Z", "author": {"login": "jrodewig"}, "path": "docs/reference/data-streams/change-mappings-and-settings.asciidoc", "diffHunk": "@@ -546,10 +546,8 @@ The following get data stream API request retrieves information about\n GET /_data_stream/my-data-stream\n ----\n \n-The API returns the following response. Note the `indices` property contains an\n-array of the stream's current backing indices. The first item in the array\n-contains information about the stream's oldest backing index,\n-`.ds-my-data-stream-000001`.\n+The response's `indices` property contains an array of the stream's current\n+backing indices.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d61e908f84540d7497b87b9ee4537792ea5d8e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4OTc0Mg==", "bodyText": "Now that we also have an API to migrate existing indices into data streams, there's no guarantee that all of a data stream's backing indices contain dates, so it's probably still useful to mention that the indices property contains an ordered list of backing indices.", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r532889742", "createdAt": "2020-11-30T20:40:35Z", "author": {"login": "danhermann"}, "path": "docs/reference/data-streams/change-mappings-and-settings.asciidoc", "diffHunk": "@@ -546,10 +546,8 @@ The following get data stream API request retrieves information about\n GET /_data_stream/my-data-stream\n ----\n \n-The API returns the following response. Note the `indices` property contains an\n-array of the stream's current backing indices. The first item in the array\n-contains information about the stream's oldest backing index,\n-`.ds-my-data-stream-000001`.\n+The response's `indices` property contains an array of the stream's current\n+backing indices.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3MDc2NQ=="}, "originalCommit": {"oid": "20d61e908f84540d7497b87b9ee4537792ea5d8e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5MjY3MQ==", "bodyText": "Good point. I re-added this info with 18d9cc6.", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r532892671", "createdAt": "2020-11-30T20:46:20Z", "author": {"login": "jrodewig"}, "path": "docs/reference/data-streams/change-mappings-and-settings.asciidoc", "diffHunk": "@@ -546,10 +546,8 @@ The following get data stream API request retrieves information about\n GET /_data_stream/my-data-stream\n ----\n \n-The API returns the following response. Note the `indices` property contains an\n-array of the stream's current backing indices. The first item in the array\n-contains information about the stream's oldest backing index,\n-`.ds-my-data-stream-000001`.\n+The response's `indices` property contains an array of the stream's current\n+backing indices.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3MDc2NQ=="}, "originalCommit": {"oid": "20d61e908f84540d7497b87b9ee4537792ea5d8e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzAwMDg2OnYy", "diffSide": "RIGHT", "path": "docs/reference/data-streams/data-streams.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNTo0NzozMVrOH55aug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo0ODo1MVrOH8NRIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3MTYxMA==", "bodyText": "Let me know if you feel <yyyy-MM-dd> isn't clear here. We could also go with <YYYY-MM-DD> or <yyyy-mm-dd>.", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r530471610", "createdAt": "2020-11-25T15:47:31Z", "author": {"login": "jrodewig"}, "path": "docs/reference/data-streams/data-streams.asciidoc", "diffHunk": "@@ -97,12 +97,13 @@ convention:\n \n [source,text]\n ----\n-.ds-<data-stream>-<generation>\n+.ds-<data-stream>-<yyyy-MM-dd>-<generation>\n ----\n \n-Backing indices with a higher generation contain more recent data. For example,\n-the `web-server-logs` data stream has a generation of `34`. The stream's most\n-recent backing index is named `.ds-web-server-logs-000034`.\n+`<yyyy-MM-dd>` is the backing index's creation date. Backing indices with a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d61e908f84540d7497b87b9ee4537792ea5d8e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5MDUyNw==", "bodyText": "Whatever you think is best is fine with me. I used the mixed casing of <yyyy-MM-dd> reflexively because it matters in Java, but that probably doesn't apply to user documentation.", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r532890527", "createdAt": "2020-11-30T20:42:11Z", "author": {"login": "danhermann"}, "path": "docs/reference/data-streams/data-streams.asciidoc", "diffHunk": "@@ -97,12 +97,13 @@ convention:\n \n [source,text]\n ----\n-.ds-<data-stream>-<generation>\n+.ds-<data-stream>-<yyyy-MM-dd>-<generation>\n ----\n \n-Backing indices with a higher generation contain more recent data. For example,\n-the `web-server-logs` data stream has a generation of `34`. The stream's most\n-recent backing index is named `.ds-web-server-logs-000034`.\n+`<yyyy-MM-dd>` is the backing index's creation date. Backing indices with a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3MTYxMA=="}, "originalCommit": {"oid": "20d61e908f84540d7497b87b9ee4537792ea5d8e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5Mzk4NA==", "bodyText": "I'll stick with the current capitalization as it also fits with our standard date formatting: https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-date-format.html", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r532893984", "createdAt": "2020-11-30T20:48:51Z", "author": {"login": "jrodewig"}, "path": "docs/reference/data-streams/data-streams.asciidoc", "diffHunk": "@@ -97,12 +97,13 @@ convention:\n \n [source,text]\n ----\n-.ds-<data-stream>-<generation>\n+.ds-<data-stream>-<yyyy-MM-dd>-<generation>\n ----\n \n-Backing indices with a higher generation contain more recent data. For example,\n-the `web-server-logs` data stream has a generation of `34`. The stream's most\n-recent backing index is named `.ds-web-server-logs-000034`.\n+`<yyyy-MM-dd>` is the backing index's creation date. Backing indices with a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3MTYxMA=="}, "originalCommit": {"oid": "20d61e908f84540d7497b87b9ee4537792ea5d8e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzYyNDEyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/data_stream/10_basic.yml", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODoxOTozMVrOICi25g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzoyMjo1NVrOIFQLqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzOTE3NA==", "bodyText": "I'm not sure why the test fails on this line when the near-identical line below succeeds:\nhttps://github.com/elastic/elasticsearch/pull/65205/files#diff-bb60a4ca6d613aa0f52c15e7278930763876d350d28af32297f2dac488316798R112", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r539539174", "createdAt": "2020-12-09T18:19:31Z", "author": {"login": "danhermann"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/data_stream/10_basic.yml", "diffHunk": "@@ -50,29 +50,33 @@ setup:\n   - match: { data_streams.0.timestamp_field.name: '@timestamp' }\n   - match: { data_streams.0.generation: 1 }\n   - length: { data_streams.0.indices: 1 }\n-  - match: { data_streams.0.indices.0.index_name: '.ds-simple-data-stream1-000001' }\n+  - match: { data_streams.0.indices.0.index_name: '/\\.ds-simple-data-stream1-(\\d{4}-\\d{2}-\\d{2}-)?000001/' }\n   - match: { data_streams.0.status: 'GREEN' }\n   - match: { data_streams.0.template: 'my-template1' }\n   - match: { data_streams.0.hidden: false }\n   - match: { data_streams.1.name: simple-data-stream2 }\n   - match: { data_streams.1.timestamp_field.name: '@timestamp' }\n   - match: { data_streams.0.generation: 1 }\n   - length: { data_streams.1.indices: 1 }\n-  - match: { data_streams.1.indices.0.index_name: '.ds-simple-data-stream2-000001' }\n+  - match: { data_streams.1.indices.0.index_name: '/\\.ds-simple-data-stream2-(\\d{4}-\\d{2}-\\d{2}-)?000001/' }\n   - match: { data_streams.1.template: 'my-template2' }\n   - match: { data_streams.0.hidden: false }\n \n+  # save the backing index names for later use\n+  - set: { data_streams.0.indices.0.index_name: idx0name }\n+  - set: { data_streams.1.indices.0.index_name: idx1name }\n+\n   - do:\n       indices.get_mapping:\n-        index: .ds-simple-data-stream1-000001\n+        index: .ds-simple-data-stream1-*000001\n         expand_wildcards: hidden\n-  - match: { \\.ds-simple-data-stream1-000001.mappings.properties.@timestamp.type: 'date' }\n+  - match: { $idx0name.mappings.properties.@timestamp.type: 'date' }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50b90e2b385a82420b8faf24ae69b3b8781eb3f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMzODM0OQ==", "bodyText": "iirc index: .ds-simple-data-stream1-*000001 doesn't work, because wildcard has to be at the end,\nthis index: $idx0name should work.", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r542338349", "createdAt": "2020-12-14T12:14:51Z", "author": {"login": "martijnvg"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/data_stream/10_basic.yml", "diffHunk": "@@ -50,29 +50,33 @@ setup:\n   - match: { data_streams.0.timestamp_field.name: '@timestamp' }\n   - match: { data_streams.0.generation: 1 }\n   - length: { data_streams.0.indices: 1 }\n-  - match: { data_streams.0.indices.0.index_name: '.ds-simple-data-stream1-000001' }\n+  - match: { data_streams.0.indices.0.index_name: '/\\.ds-simple-data-stream1-(\\d{4}-\\d{2}-\\d{2}-)?000001/' }\n   - match: { data_streams.0.status: 'GREEN' }\n   - match: { data_streams.0.template: 'my-template1' }\n   - match: { data_streams.0.hidden: false }\n   - match: { data_streams.1.name: simple-data-stream2 }\n   - match: { data_streams.1.timestamp_field.name: '@timestamp' }\n   - match: { data_streams.0.generation: 1 }\n   - length: { data_streams.1.indices: 1 }\n-  - match: { data_streams.1.indices.0.index_name: '.ds-simple-data-stream2-000001' }\n+  - match: { data_streams.1.indices.0.index_name: '/\\.ds-simple-data-stream2-(\\d{4}-\\d{2}-\\d{2}-)?000001/' }\n   - match: { data_streams.1.template: 'my-template2' }\n   - match: { data_streams.0.hidden: false }\n \n+  # save the backing index names for later use\n+  - set: { data_streams.0.indices.0.index_name: idx0name }\n+  - set: { data_streams.1.indices.0.index_name: idx1name }\n+\n   - do:\n       indices.get_mapping:\n-        index: .ds-simple-data-stream1-000001\n+        index: .ds-simple-data-stream1-*000001\n         expand_wildcards: hidden\n-  - match: { \\.ds-simple-data-stream1-000001.mappings.properties.@timestamp.type: 'date' }\n+  - match: { $idx0name.mappings.properties.@timestamp.type: 'date' }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzOTE3NA=="}, "originalCommit": {"oid": "d50b90e2b385a82420b8faf24ae69b3b8781eb3f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0MzU2Nw==", "bodyText": "Making this change and then it fails with: no object found for [mappings] within object of class [class java.lang.String] at line 73. I think it can't select the right json field in the response body, because the $idx0name variable contains dots in its name.", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r542343567", "createdAt": "2020-12-14T12:24:25Z", "author": {"login": "martijnvg"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/data_stream/10_basic.yml", "diffHunk": "@@ -50,29 +50,33 @@ setup:\n   - match: { data_streams.0.timestamp_field.name: '@timestamp' }\n   - match: { data_streams.0.generation: 1 }\n   - length: { data_streams.0.indices: 1 }\n-  - match: { data_streams.0.indices.0.index_name: '.ds-simple-data-stream1-000001' }\n+  - match: { data_streams.0.indices.0.index_name: '/\\.ds-simple-data-stream1-(\\d{4}-\\d{2}-\\d{2}-)?000001/' }\n   - match: { data_streams.0.status: 'GREEN' }\n   - match: { data_streams.0.template: 'my-template1' }\n   - match: { data_streams.0.hidden: false }\n   - match: { data_streams.1.name: simple-data-stream2 }\n   - match: { data_streams.1.timestamp_field.name: '@timestamp' }\n   - match: { data_streams.0.generation: 1 }\n   - length: { data_streams.1.indices: 1 }\n-  - match: { data_streams.1.indices.0.index_name: '.ds-simple-data-stream2-000001' }\n+  - match: { data_streams.1.indices.0.index_name: '/\\.ds-simple-data-stream2-(\\d{4}-\\d{2}-\\d{2}-)?000001/' }\n   - match: { data_streams.1.template: 'my-template2' }\n   - match: { data_streams.0.hidden: false }\n \n+  # save the backing index names for later use\n+  - set: { data_streams.0.indices.0.index_name: idx0name }\n+  - set: { data_streams.1.indices.0.index_name: idx1name }\n+\n   - do:\n       indices.get_mapping:\n-        index: .ds-simple-data-stream1-000001\n+        index: .ds-simple-data-stream1-*000001\n         expand_wildcards: hidden\n-  - match: { \\.ds-simple-data-stream1-000001.mappings.properties.@timestamp.type: 'date' }\n+  - match: { $idx0name.mappings.properties.@timestamp.type: 'date' }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzOTE3NA=="}, "originalCommit": {"oid": "d50b90e2b385a82420b8faf24ae69b3b8781eb3f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NzM4NQ==", "bodyText": "I don't think variables like $idx0name can be used as field name, because it contains dot, which the yaml testing code interprets as a nested json field. I don't think there is escaping logic?", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r542347385", "createdAt": "2020-12-14T12:31:40Z", "author": {"login": "martijnvg"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/data_stream/10_basic.yml", "diffHunk": "@@ -50,29 +50,33 @@ setup:\n   - match: { data_streams.0.timestamp_field.name: '@timestamp' }\n   - match: { data_streams.0.generation: 1 }\n   - length: { data_streams.0.indices: 1 }\n-  - match: { data_streams.0.indices.0.index_name: '.ds-simple-data-stream1-000001' }\n+  - match: { data_streams.0.indices.0.index_name: '/\\.ds-simple-data-stream1-(\\d{4}-\\d{2}-\\d{2}-)?000001/' }\n   - match: { data_streams.0.status: 'GREEN' }\n   - match: { data_streams.0.template: 'my-template1' }\n   - match: { data_streams.0.hidden: false }\n   - match: { data_streams.1.name: simple-data-stream2 }\n   - match: { data_streams.1.timestamp_field.name: '@timestamp' }\n   - match: { data_streams.0.generation: 1 }\n   - length: { data_streams.1.indices: 1 }\n-  - match: { data_streams.1.indices.0.index_name: '.ds-simple-data-stream2-000001' }\n+  - match: { data_streams.1.indices.0.index_name: '/\\.ds-simple-data-stream2-(\\d{4}-\\d{2}-\\d{2}-)?000001/' }\n   - match: { data_streams.1.template: 'my-template2' }\n   - match: { data_streams.0.hidden: false }\n \n+  # save the backing index names for later use\n+  - set: { data_streams.0.indices.0.index_name: idx0name }\n+  - set: { data_streams.1.indices.0.index_name: idx1name }\n+\n   - do:\n       indices.get_mapping:\n-        index: .ds-simple-data-stream1-000001\n+        index: .ds-simple-data-stream1-*000001\n         expand_wildcards: hidden\n-  - match: { \\.ds-simple-data-stream1-000001.mappings.properties.@timestamp.type: 'date' }\n+  - match: { $idx0name.mappings.properties.@timestamp.type: 'date' }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzOTE3NA=="}, "originalCommit": {"oid": "d50b90e2b385a82420b8faf24ae69b3b8781eb3f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM3ODkyMQ==", "bodyText": "I don't think variables like $idx0name can be used as field name, because it contains dot, which the yaml testing code interprets as a nested json field. I don't think there is escaping logic?\n\nUsing variables as part of a field name in match clauses appears to work in other places such as the link above. The only difference I saw between the linked example and what I tried here is that here the variable is at the beginning of the field name rather than somewhere in the middle. I don't know if that matters, but I don't think that it should matter.", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r542378921", "createdAt": "2020-12-14T13:22:55Z", "author": {"login": "danhermann"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/data_stream/10_basic.yml", "diffHunk": "@@ -50,29 +50,33 @@ setup:\n   - match: { data_streams.0.timestamp_field.name: '@timestamp' }\n   - match: { data_streams.0.generation: 1 }\n   - length: { data_streams.0.indices: 1 }\n-  - match: { data_streams.0.indices.0.index_name: '.ds-simple-data-stream1-000001' }\n+  - match: { data_streams.0.indices.0.index_name: '/\\.ds-simple-data-stream1-(\\d{4}-\\d{2}-\\d{2}-)?000001/' }\n   - match: { data_streams.0.status: 'GREEN' }\n   - match: { data_streams.0.template: 'my-template1' }\n   - match: { data_streams.0.hidden: false }\n   - match: { data_streams.1.name: simple-data-stream2 }\n   - match: { data_streams.1.timestamp_field.name: '@timestamp' }\n   - match: { data_streams.0.generation: 1 }\n   - length: { data_streams.1.indices: 1 }\n-  - match: { data_streams.1.indices.0.index_name: '.ds-simple-data-stream2-000001' }\n+  - match: { data_streams.1.indices.0.index_name: '/\\.ds-simple-data-stream2-(\\d{4}-\\d{2}-\\d{2}-)?000001/' }\n   - match: { data_streams.1.template: 'my-template2' }\n   - match: { data_streams.0.hidden: false }\n \n+  # save the backing index names for later use\n+  - set: { data_streams.0.indices.0.index_name: idx0name }\n+  - set: { data_streams.1.indices.0.index_name: idx1name }\n+\n   - do:\n       indices.get_mapping:\n-        index: .ds-simple-data-stream1-000001\n+        index: .ds-simple-data-stream1-*000001\n         expand_wildcards: hidden\n-  - match: { \\.ds-simple-data-stream1-000001.mappings.properties.@timestamp.type: 'date' }\n+  - match: { $idx0name.mappings.properties.@timestamp.type: 'date' }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzOTE3NA=="}, "originalCommit": {"oid": "d50b90e2b385a82420b8faf24ae69b3b8781eb3f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzYzNDEyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/data_stream/10_data_stream_resolvability.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODoyMTo0OFrOICi87g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODoyMTo0OFrOICi87g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU0MDcxOA==", "bodyText": "I'm not sure why a test fails on this line when a very similar line below succeeds:\nhttps://github.com/elastic/elasticsearch/pull/65205/files#diff-bb60a4ca6d613aa0f52c15e7278930763876d350d28af32297f2dac488316798R57", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r539540718", "createdAt": "2020-12-09T18:21:48Z", "author": {"login": "danhermann"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/data_stream/10_data_stream_resolvability.yml", "diffHunk": "@@ -230,8 +243,8 @@\n       indices.get_settings:\n         index: \".ds-simple-data-stream1-*\"\n \n-  - is_false: \\.ds-simple-data-stream1-000001.settings.index.lifecycle\n-  - is_false: \\.ds-simple-data-stream1-000002.settings.index.lifecycle\n+  - is_false: ${idx0name}.settings.index.lifecycle", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50b90e2b385a82420b8faf24ae69b3b8781eb3f"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODgwNDE3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/cluster/metadata/WildcardExpressionResolverTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNDo0NFrOIFaqWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNDo0NFrOIFaqWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1MDYxOQ==", "bodyText": "maybe use the getDefaultBackingIndexName(...) method that accepts a timestamp?", "url": "https://github.com/elastic/elasticsearch/pull/65205#discussion_r542550619", "createdAt": "2020-12-14T17:04:44Z", "author": {"login": "martijnvg"}, "path": "server/src/test/java/org/elasticsearch/cluster/metadata/WildcardExpressionResolverTests.java", "diffHunk": "@@ -215,8 +215,10 @@ public void testResolveAliases() {\n \n     public void testResolveDataStreams() {\n         String dataStreamName = \"foo_logs\";\n-        IndexMetadata firstBackingIndexMetadata = createBackingIndex(dataStreamName, 1).build();\n-        IndexMetadata secondBackingIndexMetadata = createBackingIndex(dataStreamName, 2).build();\n+        long epochMillis = randomLongBetween(1580536800000L, 1583042400000L);\n+        String dateString = DataStream.DATE_FORMATTER.formatMillis(epochMillis);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c891630a96e9c018ca19d3e5d940288bf32567"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2852, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}