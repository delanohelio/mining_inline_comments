{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMzA3NTEw", "number": 57159, "title": "SQL: Fix unecessary evaluation for CASE/IIF", "bodyText": "Previously, CASE and IIF when translated to painless scripts\n(used in GROUP BY, HAVING, WHERE) a custom caseFunction registered\nin the InternalSqlScriptUtils was used. This function received and\narray of arbitrary length:\n[condition1, result1, condition2, result2, ... elseResult]\n\nPainless doesn't know of the context and therefore is evaluating\nall conditions and results before invoking the caseFunction on them.\nAs a consequence erroneous results (i.e. division by 0) where always\nevaluated despite of the guarding condition.\nReplace the caseFunction with painless <cond> ? <res1> : <res2>\nexpressions to properly guard the result expressions and only evaluate\nthe one for which its guarding condition evaluates to true (or of course\nthe elseResult).\nAs a bonus, this approach includes performance benefits since we avoid\nunnecessary evaluations of both conditions and result expressions.\nFixes: #49672", "createdAt": "2020-05-26T16:14:36Z", "url": "https://github.com/elastic/elasticsearch/pull/57159", "merged": true, "mergeCommit": {"oid": "9584b345d89f797bfb658212b928b9812804f02f"}, "closed": true, "closedAt": "2020-05-27T23:55:56Z", "author": {"login": "matriv"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclGwvggH2gAyNDIzMzA3NTEwOjI3NmQ3NTcyYWE2M2JlZTFjNmY3NDkyMTAyM2FiYjI0YTc2M2NlNTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclhaegAH2gAyNDIzMzA3NTEwOmZlNjdjNzg0ZWY1OGI2MmZkYjY5MzFhNmNhODI4Y2U3ZmJiNzQyYjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "276d7572aa63bee1c6f74921023abb24a763ce54", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/276d7572aa63bee1c6f74921023abb24a763ce54", "committedDate": "2020-05-26T15:53:57Z", "message": "SQL: Fix unecessary evaluation for CASE/IIF\n\nPreviously, CASE and IIF when translated to painless scripts\n(used in GROUP BY, HAVING, WHERE) a custom `caseFunction` registered\nin the `InternalSqlScriptUtils` was used. This function received and\narray of arbitrary length:\n```\n[condition1, result1, condition2, result2, ... elseResult]\n```\nPainless doesn't know of the context and therefore is evaluating\nall conditions and results before invoking the `caseFunction` on them.\nAs a consequence erroneous results (i.e. division by 0) where always\nevaluated despite of the guarding condition.\n\nReplace the `caseFunction` with painless if/else if/else expressions\nto properly guard the result expressions and only evaluate the one\nits guarding condition evaluates to true (or of course the elseResult).\n\nFixes: #49672"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NjYwODE0", "url": "https://github.com/elastic/elasticsearch/pull/57159#pullrequestreview-418660814", "createdAt": "2020-05-26T20:37:16Z", "commit": {"oid": "276d7572aa63bee1c6f74921023abb24a763ce54"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDozNzoxNlrOGavdZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDozNzoxNlrOGavdZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MzczNQ==", "bodyText": "...is guarded by evaluation to...?", "url": "https://github.com/elastic/elasticsearch/pull/57159#discussion_r430693735", "createdAt": "2020-05-26T20:37:16Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/predicate/conditional/Case.java", "diffHunk": "@@ -161,14 +161,24 @@ public ScriptTemplate asScript() {\n         }\n         templates.add(asScript(elseResult));\n \n-        StringJoiner template = new StringJoiner(\",\", \"{sql}.caseFunction([\", \"])\");\n+        // Use painless if-else expressions to prevent evaluation of return expression\n+        // if the condition is guarded by evaluates to false (e.g. division by 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "276d7572aa63bee1c6f74921023abb24a763ce54"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NjYxMTI5", "url": "https://github.com/elastic/elasticsearch/pull/57159#pullrequestreview-418661129", "createdAt": "2020-05-26T20:37:46Z", "commit": {"oid": "276d7572aa63bee1c6f74921023abb24a763ce54"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4OTI3Mjc2", "url": "https://github.com/elastic/elasticsearch/pull/57159#pullrequestreview-418927276", "createdAt": "2020-05-27T07:32:34Z", "commit": {"oid": "276d7572aa63bee1c6f74921023abb24a763ce54"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzozMjozNFrOGa828Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzozMjozNFrOGa828Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxMzI2NQ==", "bodyText": "Why is nullSafeFilter added at this level  - we already add it (or should do so) on the top-level (ScriptQuery), why does this has to happen inside Case?", "url": "https://github.com/elastic/elasticsearch/pull/57159#discussion_r430913265", "createdAt": "2020-05-27T07:32:34Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/predicate/conditional/Case.java", "diffHunk": "@@ -161,14 +161,24 @@ public ScriptTemplate asScript() {\n         }\n         templates.add(asScript(elseResult));\n \n-        StringJoiner template = new StringJoiner(\",\", \"{sql}.caseFunction([\", \"])\");\n+        // Use painless if-else expressions to prevent evaluation of return expression\n+        // if the condition is guarded by evaluates to false (e.g. division by 0)\n+        StringBuilder sb = new StringBuilder();\n         ParamsBuilder params = paramsBuilder();\n-\n-        for (ScriptTemplate scriptTemplate : templates) {\n-            template.add(scriptTemplate.template());\n+        for (int i = 0; i < templates.size(); i++) {\n+            ScriptTemplate scriptTemplate = templates.get(i);\n+            if (i < templates.size() - 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "276d7572aa63bee1c6f74921023abb24a763ce54"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5ea5161a1afeb335f312afb606467bc9338c4fa", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/e5ea5161a1afeb335f312afb606467bc9338c4fa", "committedDate": "2020-05-27T07:59:41Z", "message": "rephrase comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MDk3NDU4", "url": "https://github.com/elastic/elasticsearch/pull/57159#pullrequestreview-419097458", "createdAt": "2020-05-27T11:24:39Z", "commit": {"oid": "e5ea5161a1afeb335f312afb606467bc9338c4fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe67c784ef58b62fdb6931a6ca828ce7fbb742b1", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/fe67c784ef58b62fdb6931a6ca828ce7fbb742b1", "committedDate": "2020-05-27T22:57:04Z", "message": "address comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4197, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}