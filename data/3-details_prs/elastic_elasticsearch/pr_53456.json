{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MTA5Mjg2", "number": 53456, "title": "Use boolean methods for allowed realm types in license state", "bodyText": "In xpack the license state contains methods to determine whether a\nparticular feature is allowed to be used. The one exception is\nallowsRealmTypes() which returns an enum of the types of realms allowed.\nThis change converts the enum values to boolean methods. There are 2\nnotable changes: NONE is removed as we always fall back to basic license\nbehavior, and NATIVE is not needed because it would always return true\nsince we should always have a basic license.", "createdAt": "2020-03-12T08:38:30Z", "url": "https://github.com/elastic/elasticsearch/pull/53456", "merged": true, "mergeCommit": {"oid": "c593c8b9a2ec78d0037d8e3b4153fc8b1ed3ff8c"}, "closed": true, "closedAt": "2020-03-19T21:39:51Z", "author": {"login": "rjernst"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM3iycgH2gAyMzg3MTA5Mjg2OjhhMmMwMDUzZTYwNTk1ZTJmOTMwZTM2ODZlMTVmMGQxNjU3ODg5MzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO8xiXAH2gAyMzg3MTA5Mjg2OmMxYzgxNWJmMjA2YzZhZTc1ZGEyYmVkNzZiMTljNTZiMjJjNGFkNWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a2c0053e60595e2f930e3686e15f0d165788932", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/8a2c0053e60595e2f930e3686e15f0d165788932", "committedDate": "2020-03-12T08:35:57Z", "message": "Use boolean methods for allowed realm types in license state\n\nIn xpack the license state contains methods to determine whether a\nparticular feature is allowed to be used. The one exception is\nallowsRealmTypes() which returns an enum of the types of realms allowed.\nThis change converts the enum values to boolean methods. There are 2\nnotable changes: NONE is removed as we always fall back to basic license\nbehavior, and NATIVE is not needed because it would always return true\nsince we should always have a basic license."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2851d18d999ef387d05bf3a6160b512d83f29886", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/2851d18d999ef387d05bf3a6160b512d83f29886", "committedDate": "2020-03-12T08:56:27Z", "message": "Merge branch 'master' into refactor_license4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6bf13f5365fa710403e15611a8150418c64528e", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/d6bf13f5365fa710403e15611a8150418c64528e", "committedDate": "2020-03-12T18:46:58Z", "message": "fix reversed logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "357035f94b7483545a2a3e0fd4e4fccd380b770c", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/357035f94b7483545a2a3e0fd4e4fccd380b770c", "committedDate": "2020-03-12T19:08:39Z", "message": "Merge branch 'master' into refactor_license4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e38f8c85ca7be63edd74b4d66210bbe1bf93ec2", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/9e38f8c85ca7be63edd74b4d66210bbe1bf93ec2", "committedDate": "2020-03-12T22:51:06Z", "message": "revert saml check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTMyMzM5", "url": "https://github.com/elastic/elasticsearch/pull/53456#pullrequestreview-374532339", "createdAt": "2020-03-13T18:42:04Z", "commit": {"oid": "9e38f8c85ca7be63edd74b4d66210bbe1bf93ec2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxODo0MjowNFrOF2OpMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxODo0OToxNlrOF2O2Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQwNzM0Nw==", "bodyText": "While this may never happen in practice, we need to have a consistent view of the license state for correctness here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (licenseState.isAuthAllowed() == false) {\n          \n          \n            \n                        return Collections.emptyList();\n          \n          \n            \n                    }\n          \n          \n            \n                    final XPackLicenseState licenseStateSnapshot = copyCurrentLicenseState();\n          \n          \n            \n                    if (licenseStateSnapshot.isAuthAllowed() == false) {\n          \n          \n            \n                        return Collections.emptyList();\n          \n          \n            \n                    }", "url": "https://github.com/elastic/elasticsearch/pull/53456#discussion_r392407347", "createdAt": "2020-03-13T18:42:04Z", "author": {"login": "jaymode"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java", "diffHunk": "@@ -153,17 +137,13 @@ public Realms(Settings settings, Environment env, Map<String, Realm.Factory> fac\n         if (licenseState.isAuthAllowed() == false) {\n             return Collections.emptyList();\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e38f8c85ca7be63edd74b4d66210bbe1bf93ec2"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQwNzY4OQ==", "bodyText": "Continuation of the previous comment.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (licenseState.areAllRealmsAllowed()) {\n          \n          \n            \n                        return realms;\n          \n          \n            \n                    } else if (licenseState.areStandardRealmsAllowed()) {\n          \n          \n            \n                        return standardRealmsOnly;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        // native realms are basic licensed, and always allowed, even for an expired license\n          \n          \n            \n                        return nativeRealmsOnly;\n          \n          \n            \n                    if (licenseStateSnapshot.areAllRealmsAllowed()) {\n          \n          \n            \n                        return realms;\n          \n          \n            \n                    } else if (licenseStateSnapshot.areStandardRealmsAllowed()) {\n          \n          \n            \n                        return standardRealmsOnly;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        // native realms are basic licensed, and always allowed, even for an expired license\n          \n          \n            \n                        return nativeRealmsOnly;", "url": "https://github.com/elastic/elasticsearch/pull/53456#discussion_r392407689", "createdAt": "2020-03-13T18:42:51Z", "author": {"login": "jaymode"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java", "diffHunk": "@@ -153,17 +137,13 @@ public Realms(Settings settings, Environment env, Map<String, Realm.Factory> fac\n         if (licenseState.isAuthAllowed() == false) {\n             return Collections.emptyList();\n         }\n-\n-        AllowedRealmType allowedRealmType = licenseState.allowedRealmType();\n-        switch (allowedRealmType) {\n-            case ALL:\n-                return Collections.unmodifiableList(realms);\n-            case DEFAULT:\n-                return Collections.unmodifiableList(standardRealmsOnly);\n-            case NATIVE:\n-                return Collections.unmodifiableList(nativeRealmsOnly);\n-            default:\n-                throw new IllegalStateException(\"authentication should not be enabled\");\n+        if (licenseState.areAllRealmsAllowed()) {\n+            return realms;\n+        } else if (licenseState.areStandardRealmsAllowed()) {\n+            return standardRealmsOnly;\n+        } else {\n+            // native realms are basic licensed, and always allowed, even for an expired license\n+            return nativeRealmsOnly;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e38f8c85ca7be63edd74b4d66210bbe1bf93ec2"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQwODM3Mw==", "bodyText": "For correctness, this method should also get a snapshot of the license state and possibly even pass it into an internal version of asList() that accepts the snapshot.", "url": "https://github.com/elastic/elasticsearch/pull/53456#discussion_r392408373", "createdAt": "2020-03-13T18:44:20Z", "author": {"login": "jaymode"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java", "diffHunk": "@@ -128,9 +113,8 @@ public Realms(Settings settings, Environment env, Map<String, Realm.Factory> fac\n             return Collections.unmodifiableList(realms);\n         }\n \n-        AllowedRealmType allowedRealmType = licenseState.allowedRealmType();\n         // If all realms are allowed, then nothing is unlicensed\n-        if (allowedRealmType == AllowedRealmType.ALL) {\n+        if (licenseState.areAllRealmsAllowed()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e38f8c85ca7be63edd74b4d66210bbe1bf93ec2"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQwODkyNQ==", "bodyText": "We'll also want to have a snapshot of the license state here since it can change.", "url": "https://github.com/elastic/elasticsearch/pull/53456#discussion_r392408925", "createdAt": "2020-03-13T18:45:29Z", "author": {"login": "jaymode"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java", "diffHunk": "@@ -250,26 +230,24 @@ public void usageStats(ActionListener<Map<String, Object>> listener) {\n         final List<Realm> realmList = asList().stream()\n             .filter(r -> ReservedRealm.TYPE.equals(r.type()) == false)\n             .collect(Collectors.toList());\n+        final Set<String> realmTypes = realmList.stream().map(Realm::type).collect(Collectors.toSet());\n         final CountDown countDown = new CountDown(realmList.size());\n         final Runnable doCountDown = () -> {\n             if ((realmList.isEmpty() || countDown.countDown()) && failed.get() == false) {\n-                final AllowedRealmType allowedRealmType = licenseState.allowedRealmType();\n                 // iterate over the factories so we can add enabled & available info\n                 for (String type : factories.keySet()) {\n                     assert ReservedRealm.TYPE.equals(type) == false;\n                     realmMap.compute(type, (key, value) -> {\n                         if (value == null) {\n                             return MapBuilder.<String, Object>newMapBuilder()\n                                 .put(\"enabled\", false)\n-                                .put(\"available\", isRealmTypeAvailable(allowedRealmType, type))\n+                                .put(\"available\", isRealmTypeAvailable(licenseState, type))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e38f8c85ca7be63edd74b4d66210bbe1bf93ec2"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxMDcxMA==", "bodyText": "I do not believe OIDC should be allowed in standard realms based on the InternalRealms class. It might be best to have these use Realms.isRealmTypeAvailable to try to keep the logic consolidated?", "url": "https://github.com/elastic/elasticsearch/pull/53456#discussion_r392410710", "createdAt": "2020-03-13T18:49:16Z", "author": {"login": "jaymode"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/rest/action/oidc/OpenIdConnectBaseRestHandler.java", "diffHunk": "@@ -33,7 +32,7 @@ protected Exception checkFeatureAvailable(RestRequest request) {\n         Exception failedFeature = super.checkFeatureAvailable(request);\n         if (failedFeature != null) {\n             return failedFeature;\n-        } else if (Realms.isRealmTypeAvailable(licenseState.allowedRealmType(), OIDC_REALM_TYPE)) {\n+        } else if (licenseState.areStandardRealmsAllowed()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e38f8c85ca7be63edd74b4d66210bbe1bf93ec2"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b43f86ff1c933db37169edab528f4f72c316f608", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/b43f86ff1c933db37169edab528f4f72c316f608", "committedDate": "2020-03-17T16:34:52Z", "message": "Merge branch 'master' into refactor_license4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfecb70fe42d2fc1846c8aa63e03e896687429c5", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/cfecb70fe42d2fc1846c8aa63e03e896687429c5", "committedDate": "2020-03-17T17:13:34Z", "message": "address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38083faace4d0128f8b118e2df37d5795d6a510e", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/38083faace4d0128f8b118e2df37d5795d6a510e", "committedDate": "2020-03-18T03:00:45Z", "message": "test fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MDEyOTA0", "url": "https://github.com/elastic/elasticsearch/pull/53456#pullrequestreview-377012904", "createdAt": "2020-03-18T16:05:08Z", "commit": {"oid": "38083faace4d0128f8b118e2df37d5795d6a510e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1c815bf206c6ae75da2bed76b19c56b22c4ad5c", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/c1c815bf206c6ae75da2bed76b19c56b22c4ad5c", "committedDate": "2020-03-18T19:49:26Z", "message": "Merge branch 'master' into refactor_license4"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1528, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}