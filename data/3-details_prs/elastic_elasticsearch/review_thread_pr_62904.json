{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNzI0Njgz", "number": 62904, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo1Njo0MlrOEng3LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjowMjowNVrOEoKABA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODY4MzMzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/mapper-unsigned-long/src/test/java/org/elasticsearch/xpack/unsignedlong/UnsignedLongFieldMapperTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo1Njo0MlrOHYJc-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo1Njo0MlrOHYJc-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4Mjc0Ng==", "bodyText": "You can use the nice source helper method here:\nmapper.parse(source(b -> b.field(\"field\", malformedalue1)))", "url": "https://github.com/elastic/elasticsearch/pull/62904#discussion_r495082746", "createdAt": "2020-09-25T15:56:42Z", "author": {"login": "romseygeek"}, "path": "x-pack/plugin/mapper-unsigned-long/src/test/java/org/elasticsearch/xpack/unsignedlong/UnsignedLongFieldMapperTests.java", "diffHunk": "@@ -241,7 +241,7 @@ public void testIgnoreMalformed() throws Exception {\n             ThrowingRunnable runnable = () -> mapper.parse(\n                 new SourceToParse(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00579d1081c6e80f5834ced7e2dc5686a49ef0b2"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTQyMzQwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/lucene/Lucene.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjowMjowNVrOHZFVkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMjo0OToyNlrOHab5qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2Mzg4OA==", "bodyText": "I'm a bit nervous that we didn't have any test failures because this was missed - do we have any tests that check sorting via BigInteger?", "url": "https://github.com/elastic/elasticsearch/pull/62904#discussion_r496063888", "createdAt": "2020-09-28T16:02:05Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/common/lucene/Lucene.java", "diffHunk": "@@ -398,6 +398,8 @@ public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n             return in.readBoolean();\n         } else if (type == 9) {\n             return in.readBytesRef();\n+        } else if (type == 10) {\n+            return new BigInteger(in.readString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b127e880757321a310ab96febe3c37bf1f7fa6d5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA2MDg3Nw==", "bodyText": "@romseygeek  Thank you for the review.  We do have tests that sort on BigInteger: UnsignedLongTests, and yml test: unsigned_long/10_basic.yml.  The serialization of SortValues is used in very particular circumstances (when bottomSortValue is involved, with collapseSort and may that's all); I could not come up with easy examples,  I will try to do this for a following PR.\nA usual distributed search on  BigInteger sort doesn't involve serialization of SortValues. SearchHit arrays come from shards with empty sortValues, and  sortValues get filled  on a coordinating node in the last stage before presenting results to a user.\nI am wondering if it is ok to merge this PR for now with a plan to do more test with SortValues in a following PR.", "url": "https://github.com/elastic/elasticsearch/pull/62904#discussion_r497060877", "createdAt": "2020-09-29T21:08:49Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/main/java/org/elasticsearch/common/lucene/Lucene.java", "diffHunk": "@@ -398,6 +398,8 @@ public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n             return in.readBoolean();\n         } else if (type == 9) {\n             return in.readBytesRef();\n+        } else if (type == 10) {\n+            return new BigInteger(in.readString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2Mzg4OA=="}, "originalCommit": {"oid": "b127e880757321a310ab96febe3c37bf1f7fa6d5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ4MjE1Mw==", "bodyText": "That sounds fine, thanks @mayya-sharipova", "url": "https://github.com/elastic/elasticsearch/pull/62904#discussion_r497482153", "createdAt": "2020-09-30T12:49:26Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/common/lucene/Lucene.java", "diffHunk": "@@ -398,6 +398,8 @@ public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n             return in.readBoolean();\n         } else if (type == 9) {\n             return in.readBytesRef();\n+        } else if (type == 10) {\n+            return new BigInteger(in.readString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2Mzg4OA=="}, "originalCommit": {"oid": "b127e880757321a310ab96febe3c37bf1f7fa6d5"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3353, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}