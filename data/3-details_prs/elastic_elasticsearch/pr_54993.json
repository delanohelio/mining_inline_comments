{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMTAyMzU1", "number": 54993, "title": "Start resource watcher service early", "bodyText": "The ResourceWatcherService enables watching of files for modifications\nand deletions. During startup various consumers register the files that\nshould be watched by this service. There is behavior that might be\nunexpected in that the service may not start polling until later in the\nstartup process due to the use of lifecycle states to control when the\nservice actually starts the jobs to monitor resources. This change\nremoves this unexpected behavior so that upon construction the service\nhas already registered its tasks to poll resources for changes. In\nmaking this modification, the service no longer extends\nAbstractLifecycleComponent and instead implements the Closeable\ninterface so that the polling jobs can be terminated when the service\nis no longer required.\nRelates #54867", "createdAt": "2020-04-08T22:00:30Z", "url": "https://github.com/elastic/elasticsearch/pull/54993", "merged": true, "mergeCommit": {"oid": "a219694f8b0338c3488e1d700b68f8d534f5d905"}, "closed": true, "closedAt": "2020-04-16T01:36:44Z", "author": {"login": "jaymode"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVupTFAH2gAyNDAxMTAyMzU1OmUwODA0NTkxYjNhZjZmZDI4YWQ5MTY1ZTkyMWQ3YTY2NWNlNTBhMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX9vZPgH2gAyNDAxMTAyMzU1OjQ1YWFhZmU4Yjc4Nzc5OTY1OTQxMDc5NzZlZTc4MDMxODdlYjZjMjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e0804591b3af6fd28ad9165e921d7a665ce50a36", "author": {"user": {"login": "jaymode", "name": "Jay Modi"}}, "url": "https://github.com/elastic/elasticsearch/commit/e0804591b3af6fd28ad9165e921d7a665ce50a36", "committedDate": "2020-04-08T21:19:14Z", "message": "Start resource watcher service early\n\nThe ResourceWatcherService enables watching of files for modifications\nand deletions. During startup various consumers register the files that\nshould be watched by this service. There is behavior that might be\nunexpected in that the service may not start polling until later in the\nstartup process due to the use of lifecycle states to control when the\nservice actually starts the jobs to monitor resources. This change\nremoves this unexpected behavior so that upon construction the service\nhas already registered its tasks to poll resources for changes. In\nmaking this modification, the service no longer extends\nAbstractLifecycleComponent and instead implements the Closeable\ninterface so that the polling jobs can be terminated when the service\nis no longer required.\n\nRelates #54867"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTY3Njkx", "url": "https://github.com/elastic/elasticsearch/pull/54993#pullrequestreview-390567691", "createdAt": "2020-04-09T07:55:23Z", "commit": {"oid": "e0804591b3af6fd28ad9165e921d7a665ce50a36"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTc1NTY1", "url": "https://github.com/elastic/elasticsearch/pull/54993#pullrequestreview-390575565", "createdAt": "2020-04-09T08:07:18Z", "commit": {"oid": "e0804591b3af6fd28ad9165e921d7a665ce50a36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwODowNzoxOFrOGDN_9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwODowNzoxOFrOGDN_9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAyODI3Ng==", "bodyText": "This schedule will still begin its first poll after the initial delay, which is the \"big\" gap for #54867. Or theoretically, anything added between 2 polls may have a chance to miss an update. You are probably solving it in #54999 (I haven't looked through). Even so, I wonder whether it would be better if this watch service can guarantee no gaps.", "url": "https://github.com/elastic/elasticsearch/pull/54993#discussion_r406028276", "createdAt": "2020-04-09T08:07:18Z", "author": {"login": "ywangd"}, "path": "server/src/main/java/org/elasticsearch/watcher/ResourceWatcherService.java", "diffHunk": "@@ -78,51 +77,42 @@\n         Setting.timeSetting(\"resource.reload.interval.low\", Frequency.LOW.interval, Property.NodeScope);\n \n     private final boolean enabled;\n-    private final ThreadPool threadPool;\n \n     final ResourceMonitor lowMonitor;\n     final ResourceMonitor mediumMonitor;\n     final ResourceMonitor highMonitor;\n \n-    private volatile Cancellable lowFuture;\n-    private volatile Cancellable mediumFuture;\n-    private volatile Cancellable highFuture;\n+    private final Cancellable lowFuture;\n+    private final Cancellable mediumFuture;\n+    private final Cancellable highFuture;\n \n-    @Inject\n     public ResourceWatcherService(Settings settings, ThreadPool threadPool) {\n         this.enabled = ENABLED.get(settings);\n-        this.threadPool = threadPool;\n \n         TimeValue interval = RELOAD_INTERVAL_LOW.get(settings);\n         lowMonitor = new ResourceMonitor(interval, Frequency.LOW);\n         interval = RELOAD_INTERVAL_MEDIUM.get(settings);\n         mediumMonitor = new ResourceMonitor(interval, Frequency.MEDIUM);\n         interval = RELOAD_INTERVAL_HIGH.get(settings);\n         highMonitor = new ResourceMonitor(interval, Frequency.HIGH);\n-    }\n-\n-    @Override\n-    protected void doStart() {\n-        if (!enabled) {\n-            return;\n+        if (enabled) {\n+            lowFuture = threadPool.scheduleWithFixedDelay(lowMonitor, lowMonitor.interval, Names.SAME);\n+            mediumFuture = threadPool.scheduleWithFixedDelay(mediumMonitor, mediumMonitor.interval, Names.SAME);\n+            highFuture = threadPool.scheduleWithFixedDelay(highMonitor, highMonitor.interval, Names.SAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0804591b3af6fd28ad9165e921d7a665ce50a36"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDg5MDIw", "url": "https://github.com/elastic/elasticsearch/pull/54993#pullrequestreview-394089020", "createdAt": "2020-04-15T19:55:31Z", "commit": {"oid": "e0804591b3af6fd28ad9165e921d7a665ce50a36"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45aaafe8b7877996594107976ee7803187eb6c25", "author": {"user": {"login": "jaymode", "name": "Jay Modi"}}, "url": "https://github.com/elastic/elasticsearch/commit/45aaafe8b7877996594107976ee7803187eb6c25", "committedDate": "2020-04-15T20:02:19Z", "message": "Merge branch 'master' into start_resource_watcher_early"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3625, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}