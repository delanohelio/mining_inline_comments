{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4Njk5NTc0", "number": 58458, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODo1MTo1N1rOEIRwJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTowMjowNVrOEIR-QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTE0OTE4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/expression/function/scalar/string/ConcatFunctionPipe.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODo1MTo1N1rOGoJB3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOToxNToyNlrOGoJ3xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc0NDE1OA==", "bodyText": "Is public necessary? can it be package private?", "url": "https://github.com/elastic/elasticsearch/pull/58458#discussion_r444744158", "createdAt": "2020-06-24T08:51:57Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/expression/function/scalar/string/ConcatFunctionPipe.java", "diffHunk": "@@ -85,6 +85,10 @@ public ConcatFunctionProcessor asProcessor() {\n         return new ConcatFunctionProcessor(processors);\n     }\n \n+    public List<Pipe> values() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247caa3236335b1eb1edcfad953ec2d8a8418970"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1Nzk1OA==", "bodyText": "Yes, can be package private.", "url": "https://github.com/elastic/elasticsearch/pull/58458#discussion_r444757958", "createdAt": "2020-06-24T09:15:26Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/expression/function/scalar/string/ConcatFunctionPipe.java", "diffHunk": "@@ -85,6 +85,10 @@ public ConcatFunctionProcessor asProcessor() {\n         return new ConcatFunctionProcessor(processors);\n     }\n \n+    public List<Pipe> values() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc0NDE1OA=="}, "originalCommit": {"oid": "247caa3236335b1eb1edcfad953ec2d8a8418970"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTE4NTI5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/tree/NodeSubclassTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTowMjowNVrOGoJZGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOToxMTo1OVrOGoJv4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1MDEwNQ==", "bodyText": "Why did you reduce this?", "url": "https://github.com/elastic/elasticsearch/pull/58458#discussion_r444750105", "createdAt": "2020-06-24T09:02:05Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/tree/NodeSubclassTests.java", "diffHunk": "@@ -559,7 +559,7 @@ private Object makeMap(Class<? extends Node<?>> toBuildClass, ParameterizedType\n \n     private int randomSizeForCollection(Class<? extends Node<?>> toBuildClass) {\n         int minCollectionLength = 0;\n-        int maxCollectionLength = 10;\n+        int maxCollectionLength = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247caa3236335b1eb1edcfad953ec2d8a8418970"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1NTkzOQ==", "bodyText": "Good catch. That's a leftover from an attempt to add EqlNodeSubclassTests to EQL. Will revert it.", "url": "https://github.com/elastic/elasticsearch/pull/58458#discussion_r444755939", "createdAt": "2020-06-24T09:11:59Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/ql/src/test/java/org/elasticsearch/xpack/ql/tree/NodeSubclassTests.java", "diffHunk": "@@ -559,7 +559,7 @@ private Object makeMap(Class<? extends Node<?>> toBuildClass, ParameterizedType\n \n     private int randomSizeForCollection(Class<? extends Node<?>> toBuildClass) {\n         int minCollectionLength = 0;\n-        int maxCollectionLength = 10;\n+        int maxCollectionLength = 3;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1MDEwNQ=="}, "originalCommit": {"oid": "247caa3236335b1eb1edcfad953ec2d8a8418970"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1387, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}