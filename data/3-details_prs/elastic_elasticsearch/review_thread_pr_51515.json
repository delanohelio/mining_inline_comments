{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3ODMxMzkx", "number": 51515, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDoyNjowOFrODbK0Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzo1Nzo1MFrODcGUaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODE1MzcxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDoyNjowOFrOFif77A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo0MjozNVrOFijk8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxOTE0OA==", "bodyText": "Not sure what url should be used here. The breaking change page will only be available once 8.0 is released?", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r371719148", "createdAt": "2020-01-28T10:26:08Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));\n+\n+        if (false == Strings.hasText(orderNotConfiguredRealms)) {\n+            return null;\n+        }\n+\n+        final String details = String.format(\n+            Locale.ROOT,\n+            \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+            orderNotConfiguredRealms);\n+        return new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3ODgwMA==", "bodyText": "There should be a link to the deprecation snippet, which is still to be added in this PR, seee my other comment #51515 (comment) .", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r371778800", "createdAt": "2020-01-28T12:42:35Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));\n+\n+        if (false == Strings.hasText(orderNotConfiguredRealms)) {\n+            return null;\n+        }\n+\n+        final String details = String.format(\n+            Locale.ROOT,\n+            \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+            orderNotConfiguredRealms);\n+        return new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxOTE0OA=="}, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTA2MjIwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDowNjozOVrOFi8DIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMToxNzozMVrOFjE4gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3OTc0Nw==", "bodyText": "I think you want to use Settings.hasValue instead here.", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372179747", "createdAt": "2020-01-29T04:06:39Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNDQ4MQ==", "bodyText": "Updated", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372324481", "createdAt": "2020-01-29T11:17:31Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3OTc0Nw=="}, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTA3Mjk1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDoxNzo1OFrOFi8Jyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDoxNzo1OFrOFi8Jyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4MTQ1MQ==", "bodyText": "We would typically refer to the whole setting key in these sorts of deprecation warnings.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .map(e -> e.getKey().getName())\n          \n          \n            \n                            .map(e -> RealmSettings.realmSettingPrefix(e.getKey()) + RealmSettings.ORDER_SETTING_KEY)", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372181451", "createdAt": "2020-01-29T04:17:58Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTA4MTQyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDoyNjowNlrOFi8O6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMToyMDoxN1rOFjE9Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4Mjc2Mg==", "bodyText": "I'd prefer to collect them in a Set instead of a String. No signficant reason, it just seems \"cleaner\" to me.", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372182762", "createdAt": "2020-01-29T04:26:06Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNTY1MA==", "bodyText": "Done", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372325650", "createdAt": "2020-01-29T11:20:17Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4Mjc2Mg=="}, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTA4ODA4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDoyOTo0OFrOFi8SeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMjoxODowMVrOFjGbDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4MzY3Mg==", "bodyText": "Per comments on the PR itself, we'll need to provide a URL here.", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372183672", "createdAt": "2020-01-29T04:29:48Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));\n+\n+        if (false == Strings.hasText(orderNotConfiguredRealms)) {\n+            return null;\n+        }\n+\n+        final String details = String.format(\n+            Locale.ROOT,\n+            \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+            orderNotConfiguredRealms);\n+        return new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0OTcwOQ==", "bodyText": "Updated the doc file and added the corresponding URL here.", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372349709", "createdAt": "2020-01-29T12:18:01Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));\n+\n+        if (false == Strings.hasText(orderNotConfiguredRealms)) {\n+            return null;\n+        }\n+\n+        final String details = String.format(\n+            Locale.ROOT,\n+            \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+            orderNotConfiguredRealms);\n+        return new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4MzY3Mg=="}, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTA5MTk4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDozMDo1NVrOFi8Utw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMToyMjoyMVrOFjFAYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDI0Nw==", "bodyText": "I'd like an inverse test as well - that realms with an order don't trigger an issue.", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372184247", "createdAt": "2020-01-29T04:30:55Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java", "diffHunk": "@@ -60,4 +62,48 @@ public void testCheckProcessors() {\n         assertSettingDeprecationsAndWarnings(new Setting<?>[]{EsExecutors.PROCESSORS_SETTING});\n     }\n \n+    public void testCheckMissingRealmOrders() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNjQ5Nw==", "bodyText": "Added one test for correct realm order configs (2 realms of different orders)", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372326497", "createdAt": "2020-01-29T11:22:21Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java", "diffHunk": "@@ -60,4 +62,48 @@ public void testCheckProcessors() {\n         assertSettingDeprecationsAndWarnings(new Setting<?>[]{EsExecutors.PROCESSORS_SETTING});\n     }\n \n+    public void testCheckMissingRealmOrders() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDI0Nw=="}, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTA5MzY1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDozMToyNVrOFi8VfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTozMjoyMlrOFjFQUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDQ0NQ==", "bodyText": "Can we add another realm with order + 1 and verify that it isn't reported.", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372184445", "createdAt": "2020-01-29T04:31:25Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java", "diffHunk": "@@ -60,4 +62,48 @@ public void testCheckProcessors() {\n         assertSettingDeprecationsAndWarnings(new Setting<?>[]{EsExecutors.PROCESSORS_SETTING});\n     }\n \n+    public void testCheckMissingRealmOrders() {\n+        String realmName = randomAlphaOfLengthBetween(4, 12);\n+        String realmType = randomAlphaOfLengthBetween(4, 12);\n+        final Settings settings =\n+            Settings.builder()\n+                .put(\"xpack.security.authc.realms.\" + realmType + \".\" + realmName + \".enabled\", \"true\").build();\n+\n+        final PluginsAndModules pluginsAndModules = new PluginsAndModules(Collections.emptyList(), Collections.emptyList());\n+        final List<DeprecationIssue> deprecationIssues =\n+            DeprecationChecks.filterChecks(DeprecationChecks.NODE_SETTINGS_CHECKS, c -> c.apply(settings, pluginsAndModules));\n+\n+        assertEquals(1, deprecationIssues.size());\n+        assertEquals(new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",\n+            String.format(\n+                Locale.ROOT,\n+                \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+                realmName\n+            )\n+        ), deprecationIssues.get(0));\n+    }\n+\n+    public void testCheckUniqueRealmOrders() {\n+        final int order = randomInt();\n+        final Settings settings = Settings.builder()\n+            .put(\"xpack.security.authc.realms.\"\n+                + randomAlphaOfLengthBetween(4, 12) + \".\" + randomAlphaOfLengthBetween(4, 12) + \".order\", order)\n+            .put(\"xpack.security.authc.realms.\" \n+                + randomAlphaOfLengthBetween(4, 12) + \".\" + randomAlphaOfLengthBetween(4, 12) + \".order\", order)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzMDU3OA==", "bodyText": "Yes we should. The test cases are not exhaustive. I have updated them to have better coverage.", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372330578", "createdAt": "2020-01-29T11:32:22Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java", "diffHunk": "@@ -60,4 +62,48 @@ public void testCheckProcessors() {\n         assertSettingDeprecationsAndWarnings(new Setting<?>[]{EsExecutors.PROCESSORS_SETTING});\n     }\n \n+    public void testCheckMissingRealmOrders() {\n+        String realmName = randomAlphaOfLengthBetween(4, 12);\n+        String realmType = randomAlphaOfLengthBetween(4, 12);\n+        final Settings settings =\n+            Settings.builder()\n+                .put(\"xpack.security.authc.realms.\" + realmType + \".\" + realmName + \".enabled\", \"true\").build();\n+\n+        final PluginsAndModules pluginsAndModules = new PluginsAndModules(Collections.emptyList(), Collections.emptyList());\n+        final List<DeprecationIssue> deprecationIssues =\n+            DeprecationChecks.filterChecks(DeprecationChecks.NODE_SETTINGS_CHECKS, c -> c.apply(settings, pluginsAndModules));\n+\n+        assertEquals(1, deprecationIssues.size());\n+        assertEquals(new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",\n+            String.format(\n+                Locale.ROOT,\n+                \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+                realmName\n+            )\n+        ), deprecationIssues.get(0));\n+    }\n+\n+    public void testCheckUniqueRealmOrders() {\n+        final int order = randomInt();\n+        final Settings settings = Settings.builder()\n+            .put(\"xpack.security.authc.realms.\"\n+                + randomAlphaOfLengthBetween(4, 12) + \".\" + randomAlphaOfLengthBetween(4, 12) + \".order\", order)\n+            .put(\"xpack.security.authc.realms.\" \n+                + randomAlphaOfLengthBetween(4, 12) + \".\" + randomAlphaOfLengthBetween(4, 12) + \".order\", order)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDQ0NQ=="}, "originalCommit": {"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzkwMjQ4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzo1Nzo1MFrOFj9y6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMDozNjozOVrOFj-ZyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1NjkzNw==", "bodyText": "One comment if we keep this: Generally we create one static DeprecationLogger for each class similar to the regular logger. It's not too much overhead to create new ones but it's still creating a few unnecessary objects.", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r373256937", "createdAt": "2020-01-30T23:57:50Z", "author": {"login": "gwbrown"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java", "diffHunk": "@@ -236,6 +247,25 @@ public Realm realm(String name) {\n         if (Strings.hasText(duplicateRealms)) {\n             throw new IllegalArgumentException(\"Found multiple realms configured with the same name: \" + duplicateRealms + \"\");\n         }\n+\n+        if (missingOrderRealmSettingKeys.size() > 0) {\n+            new DeprecationLogger(logger).deprecated(\"Found realms without order config: [{}]. \" +\n+                \"In next major release, node will fail to start with missing realm order.\",\n+                String.join(\"; \", missingOrderRealmSettingKeys)\n+            );\n+        }\n+        final List<String> duplicatedRealmOrderSettingKeys = orderToRealmOrderSettingKeys.entrySet()\n+                .stream()\n+                .filter(e -> e.getValue().size() > 1)\n+                .map(e -> e.getKey() + \": \" + String.join(\",\", e.getValue()))\n+                .sorted()\n+                .collect(Collectors.toList());\n+        if (false == duplicatedRealmOrderSettingKeys.isEmpty()) {\n+            new DeprecationLogger(logger).deprecated(\"Found multiple realms configured with the same order: [{}]. \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc45614884f5310207bd84de22b219745e87481f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI2Njg4OA==", "bodyText": "Updated", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r373266888", "createdAt": "2020-01-31T00:36:39Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java", "diffHunk": "@@ -236,6 +247,25 @@ public Realm realm(String name) {\n         if (Strings.hasText(duplicateRealms)) {\n             throw new IllegalArgumentException(\"Found multiple realms configured with the same name: \" + duplicateRealms + \"\");\n         }\n+\n+        if (missingOrderRealmSettingKeys.size() > 0) {\n+            new DeprecationLogger(logger).deprecated(\"Found realms without order config: [{}]. \" +\n+                \"In next major release, node will fail to start with missing realm order.\",\n+                String.join(\"; \", missingOrderRealmSettingKeys)\n+            );\n+        }\n+        final List<String> duplicatedRealmOrderSettingKeys = orderToRealmOrderSettingKeys.entrySet()\n+                .stream()\n+                .filter(e -> e.getValue().size() > 1)\n+                .map(e -> e.getKey() + \": \" + String.join(\",\", e.getValue()))\n+                .sorted()\n+                .collect(Collectors.toList());\n+        if (false == duplicatedRealmOrderSettingKeys.isEmpty()) {\n+            new DeprecationLogger(logger).deprecated(\"Found multiple realms configured with the same order: [{}]. \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1NjkzNw=="}, "originalCommit": {"oid": "cc45614884f5310207bd84de22b219745e87481f"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 189, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}