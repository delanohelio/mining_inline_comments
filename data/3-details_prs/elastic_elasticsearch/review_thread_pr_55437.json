{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1ODM5MDcw", "number": 55437, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNTo0NzoyOVrODzjg_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDo0MjoyMFrOD0SG0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Mzg1ODUyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/cli/src/test/java/org/elasticsearch/xpack/security/cli/CertificateToolTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNTo0NzoyOVrOGIEEig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNTo0NzoyOVrOGIEEig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwODQ5MA==", "bodyText": "Commands other than http do not have issue with empty password because of the withPassword(...) wrapper. These empty strings are just added here for completeness.\n\n  \n    \n      elasticsearch/x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java\n    \n    \n        Lines 928 to 940\n      in\n      c5b923a\n    \n    \n    \n    \n\n        \n          \n           private static <T, E extends Exception> T withPassword(String description, char[] password, Terminal terminal, \n        \n\n        \n          \n                                                                  CheckedFunction<char[], T, E> body) throws E { \n        \n\n        \n          \n               if (password == null) { \n        \n\n        \n          \n                   char[] promptedValue = terminal.readSecret(\"Enter password for \" + description + \" : \"); \n        \n\n        \n          \n                   try { \n        \n\n        \n          \n                       return body.apply(promptedValue); \n        \n\n        \n          \n                   } finally { \n        \n\n        \n          \n                       Arrays.fill(promptedValue, (char) 0); \n        \n\n        \n          \n                   } \n        \n\n        \n          \n               } else { \n        \n\n        \n          \n                   return body.apply(password); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           }", "url": "https://github.com/elastic/elasticsearch/pull/55437#discussion_r411108490", "createdAt": "2020-04-20T05:47:29Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/cli/src/test/java/org/elasticsearch/xpack/security/cli/CertificateToolTests.java", "diffHunk": "@@ -563,10 +563,10 @@ public void testCreateCaAndMultipleInstances() throws Exception {\n \n         final int days = randomIntBetween(7, 1500);\n \n-        final String caPassword = randomAlphaOfLengthBetween(4, 16);\n-        final String node1Password = randomAlphaOfLengthBetween(4, 16);\n-        final String node2Password = randomAlphaOfLengthBetween(4, 16);\n-        final String node3Password = randomAlphaOfLengthBetween(4, 16);\n+        final String caPassword = randomFrom(\"\", randomAlphaOfLengthBetween(4, 16));\n+        final String node1Password = randomFrom(\"\", randomAlphaOfLengthBetween(4, 16));\n+        final String node2Password = randomFrom(\"\", randomAlphaOfLengthBetween(4, 16));\n+        final String node3Password = randomFrom(\"\", randomAlphaOfLengthBetween(4, 16));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a4431ddc55480d58581bb299bc1c7d9bca342fd"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Mzg3Njk2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNTo1NDozM1rOGIEOYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowOTozMlrOGJHzqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTExMTAxMQ==", "bodyText": "This change is the fix. But is there any reason this was intentionally set to null for empty char array? I wonder whether the change would introduce any subtle side effect. @tvernum", "url": "https://github.com/elastic/elasticsearch/pull/55437#discussion_r411111011", "createdAt": "2020-04-20T05:54:33Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommand.java", "diffHunk": "@@ -864,7 +864,7 @@ private boolean askCertSigningRequest(Terminal terminal) {\n             terminal.println(\"IT IS IMPORTANT THAT YOU REMEMBER THIS PASSWORD AND KEEP IT SECURE\");\n             terminal.println(\"\");\n             final char[] password = readPassword(terminal, \"CA password: \", true);\n-            return new CertificateTool.CAInfo(caCert, keyPair.getPrivate(), true, password.length == 0 ? null : password);\n+            return new CertificateTool.CAInfo(caCert, keyPair.getPrivate(), true, password);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a4431ddc55480d58581bb299bc1c7d9bca342fd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIxODI4MA==", "bodyText": "Inspecting the uses of this returned CAInfo instance, I am pretty sure this change is not impactful.\nHowever, looking at this other use of CAInfo, there seems to be a pattern where a null value is used to signal that a password prompt is further required. I believe the original code here intended for this same behavior.", "url": "https://github.com/elastic/elasticsearch/pull/55437#discussion_r412218280", "createdAt": "2020-04-21T14:09:32Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommand.java", "diffHunk": "@@ -864,7 +864,7 @@ private boolean askCertSigningRequest(Terminal terminal) {\n             terminal.println(\"IT IS IMPORTANT THAT YOU REMEMBER THIS PASSWORD AND KEEP IT SECURE\");\n             terminal.println(\"\");\n             final char[] password = readPassword(terminal, \"CA password: \", true);\n-            return new CertificateTool.CAInfo(caCert, keyPair.getPrivate(), true, password.length == 0 ? null : password);\n+            return new CertificateTool.CAInfo(caCert, keyPair.getPrivate(), true, password);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTExMTAxMQ=="}, "originalCommit": {"oid": "0a4431ddc55480d58581bb299bc1c7d9bca342fd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQ0MTkyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/cli/src/test/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommandTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozMzoyNVrOGJJEmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMDo0MjozMVrOGJeUyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzOTAwMw==", "bodyText": "My preference would have been a simple if in the code.", "url": "https://github.com/elastic/elasticsearch/pull/55437#discussion_r412239003", "createdAt": "2020-04-21T14:33:25Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/cli/src/test/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommandTests.java", "diffHunk": "@@ -589,7 +590,16 @@ private String formatIpAddress(byte[] addr) throws UnknownHostException {\n     private String randomPassword() {\n         // We want to assert that this password doesn't end up in any output files, so we need to make sure we\n         // don't randomly generate a real word.\n-        return randomAlphaOfLength(4) + randomFrom('~', '*', '%', '$', '|') + randomAlphaOfLength(4);\n+        return randomFrom(\n+            \"\",\n+            randomAlphaOfLength(4) + randomFrom('~', '*', '%', '$', '|') + randomAlphaOfLength(4)\n+        );\n+    }\n+\n+    private void runForNonEmptyPattern(String pattern, Runnable runnable) {\n+        if (\"\".equals(pattern) == false) {\n+            runnable.run();\n+        }\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a4431ddc55480d58581bb299bc1c7d9bca342fd"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU4NzIwOA==", "bodyText": "Sure I removed it and replaced with if check in the call sites.", "url": "https://github.com/elastic/elasticsearch/pull/55437#discussion_r412587208", "createdAt": "2020-04-22T00:42:31Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/cli/src/test/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommandTests.java", "diffHunk": "@@ -589,7 +590,16 @@ private String formatIpAddress(byte[] addr) throws UnknownHostException {\n     private String randomPassword() {\n         // We want to assert that this password doesn't end up in any output files, so we need to make sure we\n         // don't randomly generate a real word.\n-        return randomAlphaOfLength(4) + randomFrom('~', '*', '%', '$', '|') + randomAlphaOfLength(4);\n+        return randomFrom(\n+            \"\",\n+            randomAlphaOfLength(4) + randomFrom('~', '*', '%', '$', '|') + randomAlphaOfLength(4)\n+        );\n+    }\n+\n+    private void runForNonEmptyPattern(String pattern, Runnable runnable) {\n+        if (\"\".equals(pattern) == false) {\n+            runnable.run();\n+        }\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzOTAwMw=="}, "originalCommit": {"oid": "0a4431ddc55480d58581bb299bc1c7d9bca342fd"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQ5MjAxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/cli/src/test/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommandTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDo0MjoyMFrOGJJixg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMDo0MzoxMVrOGJeVmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI0NjcyNg==", "bodyText": "I would've not included the empty password in the list of shouldNotContain, but it's just a personal preference.", "url": "https://github.com/elastic/elasticsearch/pull/55437#discussion_r412246726", "createdAt": "2020-04-21T14:42:20Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/cli/src/test/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommandTests.java", "diffHunk": "@@ -699,11 +709,11 @@ private void verifyKibanaDirectory(Path zipRoot, boolean expectCAFile, Iterable<\n         assertThat(kibanaReadme, containsString(\"https://\"));\n         assertThat(kibanaReadme, containsString(\"elasticsearch-ca.pem\"));\n         readmeShouldContain.forEach(s -> assertThat(kibanaReadme, containsString(s)));\n-        shouldNotContain.forEach(s -> assertThat(kibanaReadme, not(containsString(s))));\n+        shouldNotContain.forEach(s -> runForNonEmptyPattern(s, () -> assertThat(kibanaReadme, not(containsString(s)))));\n \n         assertThat(kibanaYml, containsString(\"elasticsearch.ssl.certificateAuthorities: [ \\\"config/elasticsearch-ca.pem\\\" ]\"));\n         assertThat(kibanaYml, containsString(\"https://\"));\n-        shouldNotContain.forEach(s -> assertThat(kibanaYml, not(containsString(s))));\n+        shouldNotContain.forEach(s -> runForNonEmptyPattern(s, () -> assertThat(kibanaYml, not(containsString(s)))));\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a4431ddc55480d58581bb299bc1c7d9bca342fd"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU4NzQxNg==", "bodyText": "Makes sense. The list is not filtered before passed in.", "url": "https://github.com/elastic/elasticsearch/pull/55437#discussion_r412587416", "createdAt": "2020-04-22T00:43:11Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/cli/src/test/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommandTests.java", "diffHunk": "@@ -699,11 +709,11 @@ private void verifyKibanaDirectory(Path zipRoot, boolean expectCAFile, Iterable<\n         assertThat(kibanaReadme, containsString(\"https://\"));\n         assertThat(kibanaReadme, containsString(\"elasticsearch-ca.pem\"));\n         readmeShouldContain.forEach(s -> assertThat(kibanaReadme, containsString(s)));\n-        shouldNotContain.forEach(s -> assertThat(kibanaReadme, not(containsString(s))));\n+        shouldNotContain.forEach(s -> runForNonEmptyPattern(s, () -> assertThat(kibanaReadme, not(containsString(s)))));\n \n         assertThat(kibanaYml, containsString(\"elasticsearch.ssl.certificateAuthorities: [ \\\"config/elasticsearch-ca.pem\\\" ]\"));\n         assertThat(kibanaYml, containsString(\"https://\"));\n-        shouldNotContain.forEach(s -> assertThat(kibanaYml, not(containsString(s))));\n+        shouldNotContain.forEach(s -> runForNonEmptyPattern(s, () -> assertThat(kibanaYml, not(containsString(s)))));\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI0NjcyNg=="}, "originalCommit": {"oid": "0a4431ddc55480d58581bb299bc1c7d9bca342fd"}, "originalPosition": 127}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2821, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}