{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NjY1NTgz", "number": 51500, "title": "[ML] add GET _cat/ml/datafeeds", "bodyText": "This adds GET _cat/ml/datafeeds && _cat/ml/datafeeds/{datafeed_id}\nExample calls\n# GET _cat/ml/datafeeds?v\n#! Deprecation: [interval] on [date_histogram] is deprecated, use [fixed_interval] or [calendar_interval] in the future.\nid                             state bucket.count search.count\ndatafeed-low_request_rate    stopped 1457         3\ndatafeed-response_code_rates stopped 1460         18\ndatafeed-url_scanning        stopped 1460         18\n\n# GET _cat/ml/datafeeds?h=*&v\n#! Deprecation: [interval] on [date_histogram] is deprecated, use [fixed_interval] or [calendar_interval] in the future.\nid                             state assignment_explanation bucket.count search.count search.time search.bucket_avg   search.exp_avg_hour node.id node.name node.ephemeral_id node.address\ndatafeed-low_request_rate    stopped                        1457         3            62ms        0.0425531914893617  20.160978098329824                                      \ndatafeed-response_code_rates stopped                        1460         18           127ms       0.08698630136986302 2.529951653336354                                       \ndatafeed-url_scanning        stopped                        1460         18           173ms       0.1184931506849315  2.8745993097731013                                      \n\n# GET _cat/ml/datafeeds?help\nid                     |                       | the datafeed_id                                           \nstate                  | s                     | the datafeed state                                        \nassignment_explanation | ae                    | why the datafeed is or is not assigned to a node          \nbucket.count           | bc,bucketCount        | bucket count                                              \nsearch.count           | sc,searchCount        | number of searches ran by the datafeed                    \nsearch.time            | st,searchTime         | the total search time                                     \nsearch.bucket_avg      | sba,bucketTimeMin     | the average search time per bucket (millisecond)          \nsearch.exp_avg_hour    | seah,searchExpAvgHour | the exponential average search time per hour (millisecond)\nnode.id                | ni,nodeId             | id of the assigned node                                   \nnode.name              | nn,nodeName           | name of the assigned node                                 \nnode.ephemeral_id      | ne,nodeEphemeralId    | ephemeral id of the assigned node                         \nnode.address           | na,nodeAddress        | network address of the assigned node                      \n\n\n\ncloses #51411", "createdAt": "2020-01-27T19:34:25Z", "url": "https://github.com/elastic/elasticsearch/pull/51500", "merged": true, "mergeCommit": {"oid": "836e64be80060ad2d4def519a90d9aa4a61af9df"}, "closed": true, "closedAt": "2020-02-03T21:06:47Z", "author": {"login": "benwtrent"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-h9-wAH2gAyMzY3NjY1NTgzOmQxY2M5NGZjYTRjZjg2MmQ2NjA1NGM3NzU4ODg4MWEwMDMyMGE1ZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAypDzgH2gAyMzY3NjY1NTgzOjUyOTI1Mzc1M2ZkNzI1Mjk3OTE2NDAwMjNjYzE2NjU2N2ZjZDk1ZWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d1cc94fca4cf862d66054c77588881a00320a5d3", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/d1cc94fca4cf862d66054c77588881a00320a5d3", "committedDate": "2020-01-27T19:32:48Z", "message": "[ML] add GET _cat/ml/datafeeds"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMDE0MDMz", "url": "https://github.com/elastic/elasticsearch/pull/51500#pullrequestreview-350014033", "createdAt": "2020-01-29T10:48:00Z", "commit": {"oid": "d1cc94fca4cf862d66054c77588881a00320a5d3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDo0ODowMVrOFjEE3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDo1Mzo1OVrOFjEP7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxMTI2MQ==", "bodyText": "I thought this was GetDatafeeds not stats but stats makes a lot more sense \ud83d\udc4d. I suppose naming the endpoint _cat/ml/datafeeds_stats isn't great. All good here.", "url": "https://github.com/elastic/elasticsearch/pull/51500#discussion_r372311261", "createdAt": "2020-01-29T10:48:01Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/rest/cat/RestCatDatafeedsAction.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ml.rest.cat;\n+\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.cluster.node.DiscoveryNode;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.Table;\n+import org.elasticsearch.common.unit.TimeValue;\n+import org.elasticsearch.rest.RestController;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.RestResponse;\n+import org.elasticsearch.rest.action.RestResponseListener;\n+import org.elasticsearch.rest.action.cat.AbstractCatAction;\n+import org.elasticsearch.rest.action.cat.RestTable;\n+import org.elasticsearch.xpack.core.ml.action.GetDatafeedsStatsAction;\n+import org.elasticsearch.xpack.core.ml.datafeed.DatafeedConfig;\n+import org.elasticsearch.xpack.core.ml.datafeed.DatafeedTimingStats;\n+\n+import static org.elasticsearch.rest.RestRequest.Method.GET;\n+\n+public class RestCatDatafeedsAction extends AbstractCatAction {\n+\n+    public RestCatDatafeedsAction(RestController controller) {\n+        controller.registerHandler(GET, \"_cat/ml/datafeeds/{\" + DatafeedConfig.ID.getPreferredName() + \"}\", this);\n+        controller.registerHandler(GET, \"_cat/ml/datafeeds\", this);\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"cat_ml_get_datafeeds_action\";\n+    }\n+\n+    @Override\n+    protected RestChannelConsumer doCatRequest(RestRequest restRequest, NodeClient client) {\n+        String datafeedId = restRequest.param(DatafeedConfig.ID.getPreferredName());\n+        if (Strings.isNullOrEmpty(datafeedId)) {\n+            datafeedId = GetDatafeedsStatsAction.ALL;\n+        }\n+        GetDatafeedsStatsAction.Request request = new GetDatafeedsStatsAction.Request(datafeedId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cc94fca4cf862d66054c77588881a00320a5d3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxNDA5NQ==", "bodyText": "Are there any byte units returned?", "url": "https://github.com/elastic/elasticsearch/pull/51500#discussion_r372314095", "createdAt": "2020-01-29T10:53:59Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/api/cat.ml.datafeeds.json", "diffHunk": "@@ -0,0 +1,89 @@\n+{\n+  \"cat.ml.datafeeds\":{\n+    \"documentation\":{\n+      \"url\":\"http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html\"\n+    },\n+    \"stability\":\"stable\",\n+    \"url\":{\n+      \"paths\":[\n+        {\n+          \"path\":\"/_cat/ml/datafeeds\",\n+          \"methods\":[\n+            \"GET\"\n+          ]\n+        },\n+        {\n+          \"path\":\"/_cat/ml/datafeeds/{datafeed_id}\",\n+          \"methods\":[\n+            \"GET\"\n+          ],\n+          \"parts\":{\n+            \"datafeed_id\":{\n+              \"type\":\"string\",\n+              \"description\":\"The ID of the datafeeds stats to fetch\"\n+            }\n+          }\n+        }\n+      ]\n+    },\n+    \"params\":{\n+      \"allow_no_datafeeds\":{\n+        \"type\":\"boolean\",\n+        \"required\":false,\n+        \"description\":\"Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)\"\n+      },\n+      \"bytes\":{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cc94fca4cf862d66054c77588881a00320a5d3"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTAxODA5", "url": "https://github.com/elastic/elasticsearch/pull/51500#pullrequestreview-352501809", "createdAt": "2020-02-03T19:25:18Z", "commit": {"oid": "d1cc94fca4cf862d66054c77588881a00320a5d3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOToyNToxOVrOFk9DOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOToyNToxOVrOFk9DOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MzMwNw==", "bodyText": "There is also a default size parameter https://www.elastic.co/guide/en/elasticsearch/reference/current/cat.html that is only used by cat thread pool\nMy preference would be to remove this but it's not a deal breaker", "url": "https://github.com/elastic/elasticsearch/pull/51500#discussion_r374293307", "createdAt": "2020-02-03T19:25:19Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/api/cat.ml.datafeeds.json", "diffHunk": "@@ -0,0 +1,89 @@\n+{\n+  \"cat.ml.datafeeds\":{\n+    \"documentation\":{\n+      \"url\":\"http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html\"\n+    },\n+    \"stability\":\"stable\",\n+    \"url\":{\n+      \"paths\":[\n+        {\n+          \"path\":\"/_cat/ml/datafeeds\",\n+          \"methods\":[\n+            \"GET\"\n+          ]\n+        },\n+        {\n+          \"path\":\"/_cat/ml/datafeeds/{datafeed_id}\",\n+          \"methods\":[\n+            \"GET\"\n+          ],\n+          \"parts\":{\n+            \"datafeed_id\":{\n+              \"type\":\"string\",\n+              \"description\":\"The ID of the datafeeds stats to fetch\"\n+            }\n+          }\n+        }\n+      ]\n+    },\n+    \"params\":{\n+      \"allow_no_datafeeds\":{\n+        \"type\":\"boolean\",\n+        \"required\":false,\n+        \"description\":\"Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)\"\n+      },\n+      \"bytes\":{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxNDA5NQ=="}, "originalCommit": {"oid": "d1cc94fca4cf862d66054c77588881a00320a5d3"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9706fb0a7047328221e4291650fdcdbe41adb0a7", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/9706fb0a7047328221e4291650fdcdbe41adb0a7", "committedDate": "2020-02-03T19:51:05Z", "message": "removing unused `bytes` param"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "529253753fd72529791640023cc166567fcd95eb", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/529253753fd72529791640023cc166567fcd95eb", "committedDate": "2020-02-03T20:06:11Z", "message": "Merge branch 'master' into feature/ml-_cat-datafeeds-api"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2748, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}