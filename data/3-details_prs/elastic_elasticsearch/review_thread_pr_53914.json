{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNzk4MDgz", "number": 53914, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMjozNjo0NlrODqDeEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMjo0MjowNlrODqOE2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDIzNjM0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/XPackSettings.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMjozNjo0NlrOF5nF7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxOTo1NzoyMFrOF5rYvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk1MzY0Ng==", "bodyText": "Seems if we are running on arm we want this to always be false, not just default to false. Wouldn't this mean folks could enable ML explicitly causing funny result?", "url": "https://github.com/elastic/elasticsearch/pull/53914#discussion_r395953646", "createdAt": "2020-03-21T02:36:46Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/XPackSettings.java", "diffHunk": "@@ -65,8 +65,10 @@ private XPackSettings() {\n     public static final Setting<Boolean> GRAPH_ENABLED = Setting.boolSetting(\"xpack.graph.enabled\", true, Setting.Property.NodeScope);\n \n     /** Setting for enabling or disabling machine learning. Defaults to true. */\n-    public static final Setting<Boolean> MACHINE_LEARNING_ENABLED = Setting.boolSetting(\"xpack.ml.enabled\", true,\n-            Setting.Property.NodeScope);\n+    public static final Setting<Boolean> MACHINE_LEARNING_ENABLED = Setting.boolSetting(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94ce7784809989278e5075804c14d91fa445c4f0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyMzk5OQ==", "bodyText": "I pushed 7b81079.", "url": "https://github.com/elastic/elasticsearch/pull/53914#discussion_r396023999", "createdAt": "2020-03-21T19:57:20Z", "author": {"login": "jasontedor"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/XPackSettings.java", "diffHunk": "@@ -65,8 +65,10 @@ private XPackSettings() {\n     public static final Setting<Boolean> GRAPH_ENABLED = Setting.boolSetting(\"xpack.graph.enabled\", true, Setting.Property.NodeScope);\n \n     /** Setting for enabling or disabling machine learning. Defaults to true. */\n-    public static final Setting<Boolean> MACHINE_LEARNING_ENABLED = Setting.boolSetting(\"xpack.ml.enabled\", true,\n-            Setting.Property.NodeScope);\n+    public static final Setting<Boolean> MACHINE_LEARNING_ENABLED = Setting.boolSetting(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk1MzY0Ng=="}, "originalCommit": {"oid": "94ce7784809989278e5075804c14d91fa445c4f0"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NTk3MDUzOnYy", "diffSide": "RIGHT", "path": "buildSrc/src/testKit/jdk-download/reuse/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMjozOTowNVrOF51Yqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTowODoxN1rOF6UIfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4NzgxOA==", "bodyText": "typo", "url": "https://github.com/elastic/elasticsearch/pull/53914#discussion_r396187818", "createdAt": "2020-03-23T02:39:05Z", "author": {"login": "drewr"}, "path": "buildSrc/src/testKit/jdk-download/reuse/build.gradle", "diffHunk": "@@ -7,5 +7,6 @@ jdks {\n     vendor = fakeJdkVendor\n     version = fakeJdkVersion\n     platform = \"linux\"\n+    architeecture = \"x64\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03b30f10e951f5227faa84931c19527551b4517d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4OTI5Mg==", "bodyText": "Good catch, thanks!", "url": "https://github.com/elastic/elasticsearch/pull/53914#discussion_r396689292", "createdAt": "2020-03-23T19:04:15Z", "author": {"login": "jasontedor"}, "path": "buildSrc/src/testKit/jdk-download/reuse/build.gradle", "diffHunk": "@@ -7,5 +7,6 @@ jdks {\n     vendor = fakeJdkVendor\n     version = fakeJdkVersion\n     platform = \"linux\"\n+    architeecture = \"x64\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4NzgxOA=="}, "originalCommit": {"oid": "03b30f10e951f5227faa84931c19527551b4517d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5MTU4MA==", "bodyText": "I pushed 0d7b4ee directly, thanks for noticing.", "url": "https://github.com/elastic/elasticsearch/pull/53914#discussion_r396691580", "createdAt": "2020-03-23T19:08:17Z", "author": {"login": "jasontedor"}, "path": "buildSrc/src/testKit/jdk-download/reuse/build.gradle", "diffHunk": "@@ -7,5 +7,6 @@ jdks {\n     vendor = fakeJdkVendor\n     version = fakeJdkVersion\n     platform = \"linux\"\n+    architeecture = \"x64\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4NzgxOA=="}, "originalCommit": {"oid": "03b30f10e951f5227faa84931c19527551b4517d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NTk3NDAzOnYy", "diffSide": "RIGHT", "path": "distribution/archives/build.gradle", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMjo0MjowNlrOF51awQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjoyMjowN1rOF6aROg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4ODM1Mw==", "bodyText": "Copy/paste error? I think these should be aarch64.", "url": "https://github.com/elastic/elasticsearch/pull/53914#discussion_r396188353", "createdAt": "2020-03-23T02:42:06Z", "author": {"login": "drewr"}, "path": "distribution/archives/build.gradle", "diffHunk": "@@ -153,49 +153,61 @@ Closure commonTarConfig = {\n task buildDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'darwin-x86_64'\n-  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', false, true)\n+  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', 'x64', false, true)\n }\n \n task buildOssDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'darwin-x86_64'\n-  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', true, true)\n+  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', 'x64', true, true)\n }\n \n task buildNoJdkDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'no-jdk-darwin-x86_64'\n-  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', false, false)\n+  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', 'x64', false, false)\n }\n \n task buildOssNoJdkDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'no-jdk-darwin-x86_64'\n-  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', true, false)\n+  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', 'x64', true, false)\n+}\n+\n+task buildLinuxAarch64Tar(type: SymbolicLinkPreservingTar) {\n+  configure(commonTarConfig)\n+  archiveClassifier = 'linux-aarch64'\n+  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', 'aarch64', false, true)\n }\n \n task buildLinuxTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'linux-x86_64'\n-  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', false, true)\n+  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', 'x64', false, true)\n+}\n+\n+task buildOssLinuxAarch64Tar(type: SymbolicLinkPreservingTar) {\n+  configure(commonTarConfig)\n+  archiveClassifier = 'linux-x86_64'\n+  with archiveFiles(modulesFiles(true, 'linux'), 'tar', 'linux', 'x64', true, true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03b30f10e951f5227faa84931c19527551b4517d"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5MTQyNQ==", "bodyText": "I pushed 80c24a0 directly to address this. Thanks for noticing.", "url": "https://github.com/elastic/elasticsearch/pull/53914#discussion_r396691425", "createdAt": "2020-03-23T19:08:02Z", "author": {"login": "jasontedor"}, "path": "distribution/archives/build.gradle", "diffHunk": "@@ -153,49 +153,61 @@ Closure commonTarConfig = {\n task buildDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'darwin-x86_64'\n-  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', false, true)\n+  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', 'x64', false, true)\n }\n \n task buildOssDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'darwin-x86_64'\n-  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', true, true)\n+  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', 'x64', true, true)\n }\n \n task buildNoJdkDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'no-jdk-darwin-x86_64'\n-  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', false, false)\n+  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', 'x64', false, false)\n }\n \n task buildOssNoJdkDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'no-jdk-darwin-x86_64'\n-  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', true, false)\n+  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', 'x64', true, false)\n+}\n+\n+task buildLinuxAarch64Tar(type: SymbolicLinkPreservingTar) {\n+  configure(commonTarConfig)\n+  archiveClassifier = 'linux-aarch64'\n+  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', 'aarch64', false, true)\n }\n \n task buildLinuxTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'linux-x86_64'\n-  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', false, true)\n+  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', 'x64', false, true)\n+}\n+\n+task buildOssLinuxAarch64Tar(type: SymbolicLinkPreservingTar) {\n+  configure(commonTarConfig)\n+  archiveClassifier = 'linux-x86_64'\n+  with archiveFiles(modulesFiles(true, 'linux'), 'tar', 'linux', 'x64', true, true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4ODM1Mw=="}, "originalCommit": {"oid": "03b30f10e951f5227faa84931c19527551b4517d"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4NTcwNg==", "bodyText": "Does the archiveClassifier also need to be updated? I thought it would be linux-aarch64.", "url": "https://github.com/elastic/elasticsearch/pull/53914#discussion_r396785706", "createdAt": "2020-03-23T22:07:27Z", "author": {"login": "drewr"}, "path": "distribution/archives/build.gradle", "diffHunk": "@@ -153,49 +153,61 @@ Closure commonTarConfig = {\n task buildDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'darwin-x86_64'\n-  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', false, true)\n+  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', 'x64', false, true)\n }\n \n task buildOssDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'darwin-x86_64'\n-  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', true, true)\n+  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', 'x64', true, true)\n }\n \n task buildNoJdkDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'no-jdk-darwin-x86_64'\n-  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', false, false)\n+  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', 'x64', false, false)\n }\n \n task buildOssNoJdkDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'no-jdk-darwin-x86_64'\n-  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', true, false)\n+  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', 'x64', true, false)\n+}\n+\n+task buildLinuxAarch64Tar(type: SymbolicLinkPreservingTar) {\n+  configure(commonTarConfig)\n+  archiveClassifier = 'linux-aarch64'\n+  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', 'aarch64', false, true)\n }\n \n task buildLinuxTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'linux-x86_64'\n-  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', false, true)\n+  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', 'x64', false, true)\n+}\n+\n+task buildOssLinuxAarch64Tar(type: SymbolicLinkPreservingTar) {\n+  configure(commonTarConfig)\n+  archiveClassifier = 'linux-x86_64'\n+  with archiveFiles(modulesFiles(true, 'linux'), 'tar', 'linux', 'x64', true, true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4ODM1Mw=="}, "originalCommit": {"oid": "03b30f10e951f5227faa84931c19527551b4517d"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc5MjEyMg==", "bodyText": "Thanks again. \ud83e\udd26\u200d\u2640\nI pushed ba431a0.", "url": "https://github.com/elastic/elasticsearch/pull/53914#discussion_r396792122", "createdAt": "2020-03-23T22:22:07Z", "author": {"login": "jasontedor"}, "path": "distribution/archives/build.gradle", "diffHunk": "@@ -153,49 +153,61 @@ Closure commonTarConfig = {\n task buildDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'darwin-x86_64'\n-  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', false, true)\n+  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', 'x64', false, true)\n }\n \n task buildOssDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'darwin-x86_64'\n-  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', true, true)\n+  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', 'x64', true, true)\n }\n \n task buildNoJdkDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'no-jdk-darwin-x86_64'\n-  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', false, false)\n+  with archiveFiles(modulesFiles(false, 'darwin'), 'tar', 'darwin', 'x64', false, false)\n }\n \n task buildOssNoJdkDarwinTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'no-jdk-darwin-x86_64'\n-  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', true, false)\n+  with archiveFiles(modulesFiles(true, 'darwin'), 'tar', 'darwin', 'x64', true, false)\n+}\n+\n+task buildLinuxAarch64Tar(type: SymbolicLinkPreservingTar) {\n+  configure(commonTarConfig)\n+  archiveClassifier = 'linux-aarch64'\n+  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', 'aarch64', false, true)\n }\n \n task buildLinuxTar(type: SymbolicLinkPreservingTar) {\n   configure(commonTarConfig)\n   archiveClassifier = 'linux-x86_64'\n-  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', false, true)\n+  with archiveFiles(modulesFiles(false, 'linux'), 'tar', 'linux', 'x64', false, true)\n+}\n+\n+task buildOssLinuxAarch64Tar(type: SymbolicLinkPreservingTar) {\n+  configure(commonTarConfig)\n+  archiveClassifier = 'linux-x86_64'\n+  with archiveFiles(modulesFiles(true, 'linux'), 'tar', 'linux', 'x64', true, true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4ODM1Mw=="}, "originalCommit": {"oid": "03b30f10e951f5227faa84931c19527551b4517d"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4291, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}