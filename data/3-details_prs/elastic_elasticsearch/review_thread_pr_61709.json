{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MjI4ODc2", "number": 61709, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjo1MDo0OFrOEhqEog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjo1MDo0OFrOEhqEog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzI3Nzc4OnYy", "diffSide": "RIGHT", "path": "server/src/internalClusterTest/java/org/elasticsearch/cluster/ClusterHealthIT.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjo1MDo0OFrOHPFw5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzowNjoxMFrOHPGY8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU4NTEyNg==", "bodyText": "I'm confused. How can the cluster ever be green with that many replicas? Should this be number_of_shards?", "url": "https://github.com/elastic/elasticsearch/pull/61709#discussion_r485585126", "createdAt": "2020-09-09T12:50:48Z", "author": {"login": "ywelsch"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/cluster/ClusterHealthIT.java", "diffHunk": "@@ -309,14 +310,26 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n \n     public void testHealthOnMasterFailover() throws Exception {\n         final String node = internalCluster().startDataOnlyNode();\n+        boolean withIndex = randomBoolean();\n+        if (withIndex) {\n+            // create index with many shards to provoke the health request to wait (for green) while master is being shut down.\n+            createIndex(\"test\", Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, randomIntBetween(0, 10)).build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9c96695ddfaee08c7d5d088ea18f0dcbb3c64b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5MzAzNA==", "bodyText": "It ensures that the cluster is yellow when the health request is made, making the health request wait on the observer, triggering the call to onClusterServiceClose when master is shutdown.\nThe number of replicas is cleared to 0 after having fired all the async restarts and done the master restarts. That ensures that all the requests responds with green status.", "url": "https://github.com/elastic/elasticsearch/pull/61709#discussion_r485593034", "createdAt": "2020-09-09T13:02:50Z", "author": {"login": "henningandersen"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/cluster/ClusterHealthIT.java", "diffHunk": "@@ -309,14 +310,26 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n \n     public void testHealthOnMasterFailover() throws Exception {\n         final String node = internalCluster().startDataOnlyNode();\n+        boolean withIndex = randomBoolean();\n+        if (withIndex) {\n+            // create index with many shards to provoke the health request to wait (for green) while master is being shut down.\n+            createIndex(\"test\", Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, randomIntBetween(0, 10)).build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU4NTEyNg=="}, "originalCommit": {"oid": "1d9c96695ddfaee08c7d5d088ea18f0dcbb3c64b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5NTM3OA==", "bodyText": "ah ok, can you add a comment to that effect", "url": "https://github.com/elastic/elasticsearch/pull/61709#discussion_r485595378", "createdAt": "2020-09-09T13:06:10Z", "author": {"login": "ywelsch"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/cluster/ClusterHealthIT.java", "diffHunk": "@@ -309,14 +310,26 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n \n     public void testHealthOnMasterFailover() throws Exception {\n         final String node = internalCluster().startDataOnlyNode();\n+        boolean withIndex = randomBoolean();\n+        if (withIndex) {\n+            // create index with many shards to provoke the health request to wait (for green) while master is being shut down.\n+            createIndex(\"test\", Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, randomIntBetween(0, 10)).build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU4NTEyNg=="}, "originalCommit": {"oid": "1d9c96695ddfaee08c7d5d088ea18f0dcbb3c64b"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1873, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}