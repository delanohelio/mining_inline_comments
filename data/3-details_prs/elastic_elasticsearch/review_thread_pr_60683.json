{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyOTYzNDgy", "number": 60683, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDoyMDoxMFrOEVJ3hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDo1MDoxMlrOEVKcyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjE3MjIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalVariableWidthHistogram.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDoyMDoxMFrOG7wFRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjo1NjoxMVrOG70QIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNjk1MQ==", "bodyText": "Is this an actual bug you found while making this change?", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465306951", "createdAt": "2020-08-04T20:20:10Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalVariableWidthHistogram.java", "diffHunk": "@@ -451,7 +450,8 @@ private void mergeBucketsWithPlan(List<Bucket> buckets, List<BucketRange> plan,\n             }\n             toMerge.add(buckets.get(startIdx)); // Don't remove the startIdx bucket because it will be replaced by the merged bucket\n \n-            reduceContext.consumeBucketsAndMaybeBreak(- (toMerge.size() - 1));\n+            int toRemove = toMerge.stream().mapToInt(b -> countInnerBucket(b)+1).sum();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf2422154faa392b608cd860c5999f090f55b863"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NTI2NA==", "bodyText": "A minor one, yes. The max bucket count is not accurate when buckets are auto-merged.", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465375264", "createdAt": "2020-08-04T22:56:11Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalVariableWidthHistogram.java", "diffHunk": "@@ -451,7 +450,8 @@ private void mergeBucketsWithPlan(List<Bucket> buckets, List<BucketRange> plan,\n             }\n             toMerge.add(buckets.get(startIdx)); // Don't remove the startIdx bucket because it will be replaced by the merged bucket\n \n-            reduceContext.consumeBucketsAndMaybeBreak(- (toMerge.size() - 1));\n+            int toRemove = toMerge.stream().mapToInt(b -> countInnerBucket(b)+1).sum();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNjk1MQ=="}, "originalCommit": {"oid": "cf2422154faa392b608cd860c5999f090f55b863"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjE3NzA1OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDoyMTozNlrOG7wIbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjo1NDozMVrOG70N7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNzc1Nw==", "bodyText": "I think we can remove the entire if block here, and the doReduce for loop.", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465307757", "createdAt": "2020-08-04T20:21:36Z", "author": {"login": "not-napoleon"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java", "diffHunk": "@@ -104,7 +104,7 @@ public void testRandom() throws Exception {\n                     response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder,\n                         fieldType);\n                 } else {\n-                    response = search(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n+                    response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf2422154faa392b608cd860c5999f090f55b863"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NDcwMw==", "bodyText": "thanks, I pushed 1dd98d1", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465374703", "createdAt": "2020-08-04T22:54:31Z", "author": {"login": "jimczi"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java", "diffHunk": "@@ -104,7 +104,7 @@ public void testRandom() throws Exception {\n                     response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder,\n                         fieldType);\n                 } else {\n-                    response = search(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n+                    response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNzc1Nw=="}, "originalCommit": {"oid": "cf2422154faa392b608cd860c5999f090f55b863"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjI2NzYxOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/RangeHistogramAggregatorTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDo1MDoxMlrOG7xA1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjo1NDo0OFrOG70ORA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyMjE5Nw==", "bodyText": "let's either update the comment to match the new range, or just delete the comments.  And in the later tests as well.", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465322197", "createdAt": "2020-08-04T20:50:12Z", "author": {"login": "not-napoleon"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/RangeHistogramAggregatorTests.java", "diffHunk": "@@ -57,7 +57,7 @@ public void testDoubles() throws Exception {\n                 new RangeFieldMapper.Range(rangeType, 1.0D, 5.0D, true, true), // bucket 0 5\n                 new RangeFieldMapper.Range(rangeType, -3.1, 4.2, true, true), // bucket -5, 0\n                 new RangeFieldMapper.Range(rangeType, 4.2, 13.3, true, true), // bucket 0, 5, 10\n-                new RangeFieldMapper.Range(rangeType, 42.5, 49.3, true, true), // bucket 40, 45\n+                new RangeFieldMapper.Range(rangeType, 22.5, 29.3, true, true), // bucket 40, 45", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5453d7e6f9bc722fbeec10e0e427b0895b49198e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NDc4OA==", "bodyText": "++, I pushed 1dd98d1", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465374788", "createdAt": "2020-08-04T22:54:48Z", "author": {"login": "jimczi"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/RangeHistogramAggregatorTests.java", "diffHunk": "@@ -57,7 +57,7 @@ public void testDoubles() throws Exception {\n                 new RangeFieldMapper.Range(rangeType, 1.0D, 5.0D, true, true), // bucket 0 5\n                 new RangeFieldMapper.Range(rangeType, -3.1, 4.2, true, true), // bucket -5, 0\n                 new RangeFieldMapper.Range(rangeType, 4.2, 13.3, true, true), // bucket 0, 5, 10\n-                new RangeFieldMapper.Range(rangeType, 42.5, 49.3, true, true), // bucket 40, 45\n+                new RangeFieldMapper.Range(rangeType, 22.5, 29.3, true, true), // bucket 40, 45", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyMjE5Nw=="}, "originalCommit": {"oid": "5453d7e6f9bc722fbeec10e0e427b0895b49198e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2638, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}