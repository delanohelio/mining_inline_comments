{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MjM5OTA3", "number": 52519, "title": "Use a tiny base image for Docker builds", "bodyText": "Closes #51670, closes #50838.\nIntroduce a tiny base image for Docker builds. It aims to create a basic filesystem with as little as possible, which is mostly glibc, busybox and bash. A statically-built curl is also provided.\nWe still use CentOS 8 as a base. All the fun stuff happens in the Dockerfile.\nNote: The comment history below covers a time period when there was an intermediate base image, and a time when the new parts of the build existed in scripts. The current form of the build is a result of discussions with Docker about how official images should be written.", "createdAt": "2020-02-19T15:57:29Z", "url": "https://github.com/elastic/elasticsearch/pull/52519", "merged": true, "mergeCommit": {"oid": "ec350157ead9d209f80659b93833a05387f0017b"}, "closed": true, "closedAt": "2020-10-12T13:58:02Z", "author": {"login": "pugnascotia"}, "timelineItems": {"totalCount": 70, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD6ibMgH2gAyMzc3MjM5OTA3OjIyZTc4Y2VmNzM2ZGYzMWRlMWFjZmIxOTQxMDdhNWNmZmRlNDY4ZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNjt8vgH2gAyMzc3MjM5OTA3OjY0ZWU5NTc1MDA0OGZjZDA3MTFiOWMzNDZkZmI1YTBjMWMzYTljNTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "22e78cef736df31de1acfb194107a5cffde468f2", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/22e78cef736df31de1acfb194107a5cffde468f2", "committedDate": "2020-02-13T12:59:57Z", "message": "Dump container logs on shell command failure\n\nThe Docker tests framework captures container logs when Elasticsearch\nfails to start. However, it doesn't do this if a later shell command\nfails. Amend the DockerShell wrapper to capture the container logs if\na command fails when it should succeed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c31c7f017ae2abd684ca9152de2c488ad0114ba", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/1c31c7f017ae2abd684ca9152de2c488ad0114ba", "committedDate": "2020-02-14T16:29:13Z", "message": "Throw original exception docker logs capture\n\nWhen DockerShell.run() catches a ShellException, dump out the logs and\nthen rethrow the exception, rather than wrapping the original exception."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "545150b0ed2ff53be3556e660bd54b2632bf641a", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/545150b0ed2ff53be3556e660bd54b2632bf641a", "committedDate": "2020-02-18T15:11:49Z", "message": "First attempt at building and using a tiny base image"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "185f2fd0ee3f98dd1cd3861b01a0aa8ed315061d", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/185f2fd0ee3f98dd1cd3861b01a0aa8ed315061d", "committedDate": "2020-02-19T14:51:23Z", "message": "Build the baseimage in Docker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6a5b9ab7c85dc289e732a0d2e083514e0f2a98c", "author": {"user": {"login": "jasontedor", "name": "Jason Tedor"}}, "url": "https://github.com/elastic/elasticsearch/commit/d6a5b9ab7c85dc289e732a0d2e083514e0f2a98c", "committedDate": "2020-03-11T19:33:28Z", "message": "Merge remote-tracking branch 'elastic/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "032eceab55ff3f235ca5a0b1155701fde6d8fdd4", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/032eceab55ff3f235ca5a0b1155701fde6d8fdd4", "committedDate": "2020-03-30T19:22:17Z", "message": "Add Dockerfile for statically building curl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20563741676ecb7aa97a40a30c4e6aefbf6b103a", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/20563741676ecb7aa97a40a30c4e6aefbf6b103a", "committedDate": "2020-03-30T21:20:21Z", "message": "Merge curl building into tiny image build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06165f840afec8d57141a4821f8497fe95e18127", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/06165f840afec8d57141a4821f8497fe95e18127", "committedDate": "2020-04-07T09:03:50Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5701d917b02bb25c9fac6072078dae3c53a38a2a", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/5701d917b02bb25c9fac6072078dae3c53a38a2a", "committedDate": "2020-04-08T11:06:29Z", "message": "Tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "807f05ca9d158c324123fda113cbd4bd3c8f2bd8", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/807f05ca9d158c324123fda113cbd4bd3c8f2bd8", "committedDate": "2020-04-14T14:31:36Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f47ba97ddcc5c37a0a2d8d77a8ac7fee65b949f1", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/f47ba97ddcc5c37a0a2d8d77a8ac7fee65b949f1", "committedDate": "2020-04-14T14:41:51Z", "message": "Integrate building a base image into the Docker build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95db73f2979b7d8f5458995faef0473857dbdaed", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/95db73f2979b7d8f5458995faef0473857dbdaed", "committedDate": "2020-04-14T20:56:32Z", "message": "Allow a platform to be specified"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ca75f888d5452802eae87a3c238af30af585f50", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/7ca75f888d5452802eae87a3c238af30af585f50", "committedDate": "2020-04-15T11:43:22Z", "message": "More improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5d9aea52b9a66eac8cc517819a887cef1227627", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/c5d9aea52b9a66eac8cc517819a887cef1227627", "committedDate": "2020-04-15T13:49:25Z", "message": "Build a static curl binary during the Docker build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9f652f13c207f0efd82efbdcc7d601ee9876dae", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/b9f652f13c207f0efd82efbdcc7d601ee9876dae", "committedDate": "2020-04-15T15:03:10Z", "message": "Trying to get cross-arch Docker builds to work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cfa2cc9e473d9506e70e7ff87b79e878fe0a8ef", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/0cfa2cc9e473d9506e70e7ff87b79e878fe0a8ef", "committedDate": "2020-04-15T20:01:34Z", "message": "Don't provide curl, and suggest wget instead"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f481789d8bb197d2ceef1e18f87833fb2e99586", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/2f481789d8bb197d2ceef1e18f87833fb2e99586", "committedDate": "2020-04-15T20:20:14Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a54c4cc16dd50d2189f322889602b0f4fabab95", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/8a54c4cc16dd50d2189f322889602b0f4fabab95", "committedDate": "2020-04-16T09:20:38Z", "message": "Revert something"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc3a6a08684349f0e492fba1632eac5c2654d2d8", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/fc3a6a08684349f0e492fba1632eac5c2654d2d8", "committedDate": "2020-04-16T09:21:18Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f90d9d5aaf714a5f0651d62bbd6c87ec1009f87a", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/f90d9d5aaf714a5f0651d62bbd6c87ec1009f87a", "committedDate": "2020-04-16T09:28:16Z", "message": "Tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91557a52967334c3594e31f1852e952d59fe03d8", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/91557a52967334c3594e31f1852e952d59fe03d8", "committedDate": "2020-04-16T13:26:20Z", "message": "Add missing license and javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b40ac52ed5aa0096c8827260891ad9f9794ea7e", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/6b40ac52ed5aa0096c8827260891ad9f9794ea7e", "committedDate": "2020-04-16T15:06:22Z", "message": "Use wget instead of curl for docker-compose heathchecks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b67bb4eebe7e6131c14e3c2c1b79f682599cebe4", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/b67bb4eebe7e6131c14e3c2c1b79f682599cebe4", "committedDate": "2020-04-17T12:51:46Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1ODExOTE5", "url": "https://github.com/elastic/elasticsearch/pull/52519#pullrequestreview-395811919", "createdAt": "2020-04-17T22:41:33Z", "commit": {"oid": "b67bb4eebe7e6131c14e3c2c1b79f682599cebe4"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjo0MTozM1rOGHfGRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjo1OToxN1rOGHfXPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMjcyNg==", "bodyText": "How large is this output? This is going to need to be included in the \"docker context\" that we publish. I suspect it's within a reasonable size.", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r410502726", "createdAt": "2020-04-17T22:41:33Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -174,10 +189,32 @@ task integTest(type: Test) {\n \n check.dependsOn integTest\n \n+void addBuildDockerBaseImage(final String architecture, final boolean oss) {\n+  def installer = \"${projectDir}/src/docker/bin/install-baseimage.sh\"\n+  def outputFile = baseImageFilename(architecture)\n+  def outputPath = \"${projectDir}/build/${outputFile}\"\n+  def platform = \"aarch64\".equals(architecture) ? 'linux/arm64' : 'linux/amd64'\n+  def image = \"aarch64\".equals(architecture) ? 'arm64v8/centos:7' : 'centos:7'\n+\n+  final Task buildDockerBaseImageTask = task(taskName(\"build\", architecture, oss, \"DockerBaseImage\"), type: LoggedExec) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b67bb4eebe7e6131c14e3c2c1b79f682599cebe4"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMzE4Mg==", "bodyText": "We need to track platform and image as inputs to this task as well. Otherwise x86 executions could reuse arm outputs and vice versa.", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r410503182", "createdAt": "2020-04-17T22:43:21Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -174,10 +189,32 @@ task integTest(type: Test) {\n \n check.dependsOn integTest\n \n+void addBuildDockerBaseImage(final String architecture, final boolean oss) {\n+  def installer = \"${projectDir}/src/docker/bin/install-baseimage.sh\"\n+  def outputFile = baseImageFilename(architecture)\n+  def outputPath = \"${projectDir}/build/${outputFile}\"\n+  def platform = \"aarch64\".equals(architecture) ? 'linux/arm64' : 'linux/amd64'\n+  def image = \"aarch64\".equals(architecture) ? 'arm64v8/centos:7' : 'centos:7'\n+\n+  final Task buildDockerBaseImageTask = task(taskName(\"build\", architecture, oss, \"DockerBaseImage\"), type: LoggedExec) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b67bb4eebe7e6131c14e3c2c1b79f682599cebe4"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMzU4MQ==", "bodyText": "For this to have good cache reuse we'll want to add a path sensitivity attribute here. Otherwise the absolute path to this file will be included in the cache key, meaning something as innocuous as a different checkout directory will mean a cache miss. Here's an example usage: \n  \n    \n      elasticsearch/buildSrc/build.gradle\n    \n    \n         Line 237\n      in\n      b2c9d68\n    \n    \n    \n    \n\n        \n          \n           inputs.dir(file(\"src/testKit\")).withPropertyName(\"testkit dir\").withPathSensitivity(PathSensitivity.RELATIVE)", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r410503581", "createdAt": "2020-04-17T22:44:55Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -174,10 +189,32 @@ task integTest(type: Test) {\n \n check.dependsOn integTest\n \n+void addBuildDockerBaseImage(final String architecture, final boolean oss) {\n+  def installer = \"${projectDir}/src/docker/bin/install-baseimage.sh\"\n+  def outputFile = baseImageFilename(architecture)\n+  def outputPath = \"${projectDir}/build/${outputFile}\"\n+  def platform = \"aarch64\".equals(architecture) ? 'linux/arm64' : 'linux/amd64'\n+  def image = \"aarch64\".equals(architecture) ? 'arm64v8/centos:7' : 'centos:7'\n+\n+  final Task buildDockerBaseImageTask = task(taskName(\"build\", architecture, oss, \"DockerBaseImage\"), type: LoggedExec) {\n+    inputs.file(installer)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b67bb4eebe7e6131c14e3c2c1b79f682599cebe4"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMzgwNg==", "bodyText": "Let's just use ${buildDir} instead of ${projectDir}/build.", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r410503806", "createdAt": "2020-04-17T22:45:47Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -174,10 +189,32 @@ task integTest(type: Test) {\n \n check.dependsOn integTest\n \n+void addBuildDockerBaseImage(final String architecture, final boolean oss) {\n+  def installer = \"${projectDir}/src/docker/bin/install-baseimage.sh\"\n+  def outputFile = baseImageFilename(architecture)\n+  def outputPath = \"${projectDir}/build/${outputFile}\"\n+  def platform = \"aarch64\".equals(architecture) ? 'linux/arm64' : 'linux/amd64'\n+  def image = \"aarch64\".equals(architecture) ? 'arm64v8/centos:7' : 'centos:7'\n+\n+  final Task buildDockerBaseImageTask = task(taskName(\"build\", architecture, oss, \"DockerBaseImage\"), type: LoggedExec) {\n+    inputs.file(installer)\n+    outputs.file(outputPath)\n+    outputs.cacheIf({ true })\n+    executable 'docker'\n+    args 'run', '--rm', '-t',\n+      '-v', \"${projectDir}/build:/build\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b67bb4eebe7e6131c14e3c2c1b79f682599cebe4"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMzk2NQ==", "bodyText": "Let's use buildDir here.", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r410503965", "createdAt": "2020-04-17T22:46:32Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -174,10 +189,32 @@ task integTest(type: Test) {\n \n check.dependsOn integTest\n \n+void addBuildDockerBaseImage(final String architecture, final boolean oss) {\n+  def installer = \"${projectDir}/src/docker/bin/install-baseimage.sh\"\n+  def outputFile = baseImageFilename(architecture)\n+  def outputPath = \"${projectDir}/build/${outputFile}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b67bb4eebe7e6131c14e3c2c1b79f682599cebe4"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwNzA3MQ==", "bodyText": "I wonder if this is really strictly required and if it's possible this might throw things off that try and detect the existence of utility via things like hash curl and such.", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r410507071", "createdAt": "2020-04-17T22:59:17Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/src/docker/bin/curl", "diffHunk": "@@ -0,0 +1,14 @@\n+#!/bin/sh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b67bb4eebe7e6131c14e3c2c1b79f682599cebe4"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3815602d494e74a187ae43832d0ae1e9c19f179", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/c3815602d494e74a187ae43832d0ae1e9c19f179", "committedDate": "2020-04-20T09:57:30Z", "message": "Address review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "426b422c7c0f80d5a72af0bdf595f73e378c2cfb", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/426b422c7c0f80d5a72af0bdf595f73e378c2cfb", "committedDate": "2020-04-20T10:13:41Z", "message": "Compress base filesystem tar with gzip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7fcb2db3d22721d3003f576d773e77ee3e8acd4", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/d7fcb2db3d22721d3003f576d773e77ee3e8acd4", "committedDate": "2020-04-20T10:14:30Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e54e83c4a961de801692fafa93d41a4995d7b5ee", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/e54e83c4a961de801692fafa93d41a4995d7b5ee", "committedDate": "2020-04-20T13:51:16Z", "message": "Fix typo that stopped :qa:remote-clusters from logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d826cdf8ac6e4041da4ad17112d9987f2b29d250", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/d826cdf8ac6e4041da4ad17112d9987f2b29d250", "committedDate": "2020-04-20T16:29:30Z", "message": "Fix docker-compose healthchecks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f2348224dfd352fb4028099e1e441f25ba826d3", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/2f2348224dfd352fb4028099e1e441f25ba826d3", "committedDate": "2020-04-20T20:05:44Z", "message": "docker-compose fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56340da276eece963bd79398d5c0adaece3191d6", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/56340da276eece963bd79398d5c0adaece3191d6", "committedDate": "2020-04-20T20:18:25Z", "message": "Remove curl wrapper around wget"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "678c3611c999b6354afe551bbfd10d1286a2e104", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/678c3611c999b6354afe551bbfd10d1286a2e104", "committedDate": "2020-04-21T10:17:37Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18b012835582be461c90762d0588694e49d94a20", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/18b012835582be461c90762d0588694e49d94a20", "committedDate": "2020-04-21T10:56:20Z", "message": "Set GCOS in /etc/password for Docker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22d0035bbd743b5fa575500bf36d28c4eb7a4d48", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/22d0035bbd743b5fa575500bf36d28c4eb7a4d48", "committedDate": "2020-04-21T10:56:43Z", "message": "Add a note about extending the shrunk Docker image"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8a82a7f4b913a5a4d72b8a04561a9ab1ad1f7df", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/c8a82a7f4b913a5a4d72b8a04561a9ab1ad1f7df", "committedDate": "2020-04-22T14:42:59Z", "message": "Reintroduce a static curl build, only much faster"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37a0e7817603a41fe21f5ebd2f77d8528df11ed0", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/37a0e7817603a41fe21f5ebd2f77d8528df11ed0", "committedDate": "2020-04-22T15:05:17Z", "message": "Reuse the docker base filesystem for OSS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02ee7f717f489a3a08b1ee45721a5d50c266f981", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/02ee7f717f489a3a08b1ee45721a5d50c266f981", "committedDate": "2020-04-22T15:18:28Z", "message": "Docs and permissions fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1762bcda4e62f06b0f96a9b5a9af45fb16364bda", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/1762bcda4e62f06b0f96a9b5a9af45fb16364bda", "committedDate": "2020-04-22T15:45:03Z", "message": "Upgrade tini and validate its checksum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d527a69698c62fa3ad90f4a2e00a4a82bc5a4e69", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/d527a69698c62fa3ad90f4a2e00a4a82bc5a4e69", "committedDate": "2020-04-22T15:46:37Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "864e39ef6683bb0fb0dc2834bdea2f0f1f966ae6", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/864e39ef6683bb0fb0dc2834bdea2f0f1f966ae6", "committedDate": "2020-04-23T08:22:00Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d1603735e0ea53c96600e9e1c8d6247c903a84c", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/2d1603735e0ea53c96600e9e1c8d6247c903a84c", "committedDate": "2020-04-24T12:38:50Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NjQ1Mzk4", "url": "https://github.com/elastic/elasticsearch/pull/52519#pullrequestreview-405645398", "createdAt": "2020-05-05T09:57:02Z", "commit": {"oid": "2d1603735e0ea53c96600e9e1c8d6247c903a84c"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOTo1NzowM1rOGQiXCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDoyMDoxOVrOGQjGcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5MzM1NA==", "bodyText": "Is this comment still valid?", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r419993354", "createdAt": "2020-05-05T09:57:03Z", "author": {"login": "dliappis"}, "path": "distribution/docker/src/docker/bin/install-baseimage.sh", "diffHunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env bash\n+#\n+# Create a basic filesystem that can be used to create a Docker images that\n+# don't require a full distro.\n+#\n+# Originally from:\n+#\u00a0\n+# https://github.com/moby/moby/blob/master/contrib/mkimage-yum.sh\n+\n+set -e\n+\n+usage() {\n+    cat <<EOOPTS\n+$(basename $0) <platform> <output_file>\n+EOOPTS\n+    exit 1\n+}\n+\n+platform=\"$1\"\n+output_file=\"$2\"\n+\n+if [[ -z $platform ]]; then\n+    usage\n+fi\n+\n+if [[ -z \"$output_file\" ]]; then\n+    usage\n+fi\n+\n+# Start off with an up-to-date system\n+yum update --setopt=tsflags=nodocs -y\n+\n+# Create a temporary directory into which we will install files\n+target=$(mktemp -d --tmpdir $(basename $0).XXXXXX)\n+\n+set -x\n+\n+#\u00a0Create required devices\n+mkdir -m 755 \"$target\"/dev\n+mknod -m 600 \"$target\"/dev/console c 5 1\n+mknod -m 600 \"$target\"/dev/initctl p\n+mknod -m 666 \"$target\"/dev/full c 1 7\n+mknod -m 666 \"$target\"/dev/null c 1 3\n+mknod -m 666 \"$target\"/dev/ptmx c 5 2\n+mknod -m 666 \"$target\"/dev/random c 1 8\n+mknod -m 666 \"$target\"/dev/tty c 5 0\n+mknod -m 666 \"$target\"/dev/tty0 c 4 0\n+mknod -m 666 \"$target\"/dev/urandom c 1 9\n+mknod -m 666 \"$target\"/dev/zero c 1 5\n+\n+# Install files. We attempt to install a headless Java distro, and exclude a\n+# number of unnecessary dependencies. In so doing, we also filter out Java itself,\n+#\u00a0but since Elasticsearch ships its own JDK, with its own libs, that isn't a problem\n+# and in fact is what we want.\n+#\n+# Note that we also skip coreutils, as it pulls in all kinds of stuff that\n+# we don't want.\n+#\n+# Note that I haven't yet verified that these dependencies are, in fact, unnecessary.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1603735e0ea53c96600e9e1c8d6247c903a84c"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5NDAxMw==", "bodyText": "(extreme) nit: no period at the end of sentence but you have period at the bullets for pigz and tini.", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r419994013", "createdAt": "2020-05-05T09:58:16Z", "author": {"login": "dliappis"}, "path": "distribution/docker/src/docker/bin/install-baseimage.sh", "diffHunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env bash\n+#\n+# Create a basic filesystem that can be used to create a Docker images that\n+# don't require a full distro.\n+#\n+# Originally from:\n+#\u00a0\n+# https://github.com/moby/moby/blob/master/contrib/mkimage-yum.sh\n+\n+set -e\n+\n+usage() {\n+    cat <<EOOPTS\n+$(basename $0) <platform> <output_file>\n+EOOPTS\n+    exit 1\n+}\n+\n+platform=\"$1\"\n+output_file=\"$2\"\n+\n+if [[ -z $platform ]]; then\n+    usage\n+fi\n+\n+if [[ -z \"$output_file\" ]]; then\n+    usage\n+fi\n+\n+# Start off with an up-to-date system\n+yum update --setopt=tsflags=nodocs -y\n+\n+# Create a temporary directory into which we will install files\n+target=$(mktemp -d --tmpdir $(basename $0).XXXXXX)\n+\n+set -x\n+\n+#\u00a0Create required devices\n+mkdir -m 755 \"$target\"/dev\n+mknod -m 600 \"$target\"/dev/console c 5 1\n+mknod -m 600 \"$target\"/dev/initctl p\n+mknod -m 666 \"$target\"/dev/full c 1 7\n+mknod -m 666 \"$target\"/dev/null c 1 3\n+mknod -m 666 \"$target\"/dev/ptmx c 5 2\n+mknod -m 666 \"$target\"/dev/random c 1 8\n+mknod -m 666 \"$target\"/dev/tty c 5 0\n+mknod -m 666 \"$target\"/dev/tty0 c 4 0\n+mknod -m 666 \"$target\"/dev/urandom c 1 9\n+mknod -m 666 \"$target\"/dev/zero c 1 5\n+\n+# Install files. We attempt to install a headless Java distro, and exclude a\n+# number of unnecessary dependencies. In so doing, we also filter out Java itself,\n+#\u00a0but since Elasticsearch ships its own JDK, with its own libs, that isn't a problem\n+# and in fact is what we want.\n+#\n+# Note that we also skip coreutils, as it pulls in all kinds of stuff that\n+# we don't want.\n+#\n+# Note that I haven't yet verified that these dependencies are, in fact, unnecessary.\n+#\n+# We also include some utilities that we ship with the image.\n+#\n+#   * `nc` is useful for checking network issues", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1603735e0ea53c96600e9e1c8d6247c903a84c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5NDI0Nw==", "bodyText": "what is upzip? If it's a typo for unzip it ought to fail due to set -e above.", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r419994247", "createdAt": "2020-05-05T09:58:40Z", "author": {"login": "dliappis"}, "path": "distribution/docker/src/docker/bin/install-baseimage.sh", "diffHunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env bash\n+#\n+# Create a basic filesystem that can be used to create a Docker images that\n+# don't require a full distro.\n+#\n+# Originally from:\n+#\u00a0\n+# https://github.com/moby/moby/blob/master/contrib/mkimage-yum.sh\n+\n+set -e\n+\n+usage() {\n+    cat <<EOOPTS\n+$(basename $0) <platform> <output_file>\n+EOOPTS\n+    exit 1\n+}\n+\n+platform=\"$1\"\n+output_file=\"$2\"\n+\n+if [[ -z $platform ]]; then\n+    usage\n+fi\n+\n+if [[ -z \"$output_file\" ]]; then\n+    usage\n+fi\n+\n+# Start off with an up-to-date system\n+yum update --setopt=tsflags=nodocs -y\n+\n+# Create a temporary directory into which we will install files\n+target=$(mktemp -d --tmpdir $(basename $0).XXXXXX)\n+\n+set -x\n+\n+#\u00a0Create required devices\n+mkdir -m 755 \"$target\"/dev\n+mknod -m 600 \"$target\"/dev/console c 5 1\n+mknod -m 600 \"$target\"/dev/initctl p\n+mknod -m 666 \"$target\"/dev/full c 1 7\n+mknod -m 666 \"$target\"/dev/null c 1 3\n+mknod -m 666 \"$target\"/dev/ptmx c 5 2\n+mknod -m 666 \"$target\"/dev/random c 1 8\n+mknod -m 666 \"$target\"/dev/tty c 5 0\n+mknod -m 666 \"$target\"/dev/tty0 c 4 0\n+mknod -m 666 \"$target\"/dev/urandom c 1 9\n+mknod -m 666 \"$target\"/dev/zero c 1 5\n+\n+# Install files. We attempt to install a headless Java distro, and exclude a\n+# number of unnecessary dependencies. In so doing, we also filter out Java itself,\n+#\u00a0but since Elasticsearch ships its own JDK, with its own libs, that isn't a problem\n+# and in fact is what we want.\n+#\n+# Note that we also skip coreutils, as it pulls in all kinds of stuff that\n+# we don't want.\n+#\n+# Note that I haven't yet verified that these dependencies are, in fact, unnecessary.\n+#\n+# We also include some utilities that we ship with the image.\n+#\n+#   * `nc` is useful for checking network issues\n+#   * `zip` and `unzip` are for working with bundles\n+#   * `pigz` is used for compressing large heaps dumps, and is considerably faster than `gzip` for this task.\n+#   * `tini` is a tiny but valid init for containers. This is used to cleanly control how ES and any child processes are shut down.\n+#\n+yum --installroot=\"$target\" --releasever=/ --setopt=tsflags=nodocs \\\n+  --setopt=group_package_types=mandatory -y  \\\n+  -x copy-jdk-configs -x cups-libs -x javapackages-tools -x alsa-lib -x freetype -x libjpeg -x libjpeg-turbo \\\n+  -x coreutils \\\n+  --skip-broken \\\n+  install \\\n+    java-latest-openjdk-headless \\\n+    bash nc zip upzip pigz", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1603735e0ea53c96600e9e1c8d6247c903a84c"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAwMTIzMA==", "bodyText": "At some point there will be bugs with these utilities (busybox, or tini) as well.\nI think it's hard to keep track of the versions as they are hard coded here.\nWhat if we specify such versions as readonly vars at the top of this shell script so that it's easier to track the versions and do future updates?\nexample after\n#!/usr/bin/env bash\n...\n\nthen\ndeclare -r BUSYBOX_VERSION=\"1.31.0\"\ndeclare -r TINI_VERSION=\"0.19.0\"", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r420001230", "createdAt": "2020-05-05T10:11:49Z", "author": {"login": "dliappis"}, "path": "distribution/docker/src/docker/bin/install-baseimage.sh", "diffHunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env bash\n+#\n+# Create a basic filesystem that can be used to create a Docker images that\n+# don't require a full distro.\n+#\n+# Originally from:\n+#\u00a0\n+# https://github.com/moby/moby/blob/master/contrib/mkimage-yum.sh\n+\n+set -e\n+\n+usage() {\n+    cat <<EOOPTS\n+$(basename $0) <platform> <output_file>\n+EOOPTS\n+    exit 1\n+}\n+\n+platform=\"$1\"\n+output_file=\"$2\"\n+\n+if [[ -z $platform ]]; then\n+    usage\n+fi\n+\n+if [[ -z \"$output_file\" ]]; then\n+    usage\n+fi\n+\n+# Start off with an up-to-date system\n+yum update --setopt=tsflags=nodocs -y\n+\n+# Create a temporary directory into which we will install files\n+target=$(mktemp -d --tmpdir $(basename $0).XXXXXX)\n+\n+set -x\n+\n+#\u00a0Create required devices\n+mkdir -m 755 \"$target\"/dev\n+mknod -m 600 \"$target\"/dev/console c 5 1\n+mknod -m 600 \"$target\"/dev/initctl p\n+mknod -m 666 \"$target\"/dev/full c 1 7\n+mknod -m 666 \"$target\"/dev/null c 1 3\n+mknod -m 666 \"$target\"/dev/ptmx c 5 2\n+mknod -m 666 \"$target\"/dev/random c 1 8\n+mknod -m 666 \"$target\"/dev/tty c 5 0\n+mknod -m 666 \"$target\"/dev/tty0 c 4 0\n+mknod -m 666 \"$target\"/dev/urandom c 1 9\n+mknod -m 666 \"$target\"/dev/zero c 1 5\n+\n+# Install files. We attempt to install a headless Java distro, and exclude a\n+# number of unnecessary dependencies. In so doing, we also filter out Java itself,\n+#\u00a0but since Elasticsearch ships its own JDK, with its own libs, that isn't a problem\n+# and in fact is what we want.\n+#\n+# Note that we also skip coreutils, as it pulls in all kinds of stuff that\n+# we don't want.\n+#\n+# Note that I haven't yet verified that these dependencies are, in fact, unnecessary.\n+#\n+# We also include some utilities that we ship with the image.\n+#\n+#   * `nc` is useful for checking network issues\n+#   * `zip` and `unzip` are for working with bundles\n+#   * `pigz` is used for compressing large heaps dumps, and is considerably faster than `gzip` for this task.\n+#   * `tini` is a tiny but valid init for containers. This is used to cleanly control how ES and any child processes are shut down.\n+#\n+yum --installroot=\"$target\" --releasever=/ --setopt=tsflags=nodocs \\\n+  --setopt=group_package_types=mandatory -y  \\\n+  -x copy-jdk-configs -x cups-libs -x javapackages-tools -x alsa-lib -x freetype -x libjpeg -x libjpeg-turbo \\\n+  -x coreutils \\\n+  --skip-broken \\\n+  install \\\n+    java-latest-openjdk-headless \\\n+    bash nc zip upzip pigz\n+\n+ARCH=\"$(basename $platform)\"\n+curl --retry 10 -L -o \"$target\"/bin/tini-static-$ARCH           \"https://github.com/krallin/tini/releases/download/v0.19.0/tini-static-$ARCH\"\n+curl --retry 10 -L -o \"$target\"/bin/tini-static-$ARCH.sha256sum \"https://github.com/krallin/tini/releases/download/v0.19.0/tini-static-$ARCH.sha256sum\"\n+(cd \"$target/bin\" && sha256sum -c tini-static-$ARCH.sha256sum)\n+rm \"$target\"/bin/tini-static-$ARCH.sha256sum\n+mv \"$target\"/bin/tini-static-$ARCH \"$target\"/bin/tini\n+chmod +x \"$target\"/bin/tini\n+\n+# Use busybox instead of installing more RPMs, which can pull in all kinds of\n+# stuff we don't want. There's no RPM for busybox available for CentOS.\n+BUSYBOX_URL=\"https://busybox.net/downloads/binaries/1.31.0-i686-uclibc/busybox\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1603735e0ea53c96600e9e1c8d6247c903a84c"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAwNTQ5MQ==", "bodyText": "Is there a particular reason for the use of tar here for copying?\nI was thinking something like mkdir -p \"$target\"/etc && cp -a /etc/pki \"$target\"/etc/ is simpler to reason about in the future, or am I missing something?", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r420005491", "createdAt": "2020-05-05T10:20:19Z", "author": {"login": "dliappis"}, "path": "distribution/docker/src/docker/bin/install-baseimage.sh", "diffHunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env bash\n+#\n+# Create a basic filesystem that can be used to create a Docker images that\n+# don't require a full distro.\n+#\n+# Originally from:\n+#\u00a0\n+# https://github.com/moby/moby/blob/master/contrib/mkimage-yum.sh\n+\n+set -e\n+\n+usage() {\n+    cat <<EOOPTS\n+$(basename $0) <platform> <output_file>\n+EOOPTS\n+    exit 1\n+}\n+\n+platform=\"$1\"\n+output_file=\"$2\"\n+\n+if [[ -z $platform ]]; then\n+    usage\n+fi\n+\n+if [[ -z \"$output_file\" ]]; then\n+    usage\n+fi\n+\n+# Start off with an up-to-date system\n+yum update --setopt=tsflags=nodocs -y\n+\n+# Create a temporary directory into which we will install files\n+target=$(mktemp -d --tmpdir $(basename $0).XXXXXX)\n+\n+set -x\n+\n+#\u00a0Create required devices\n+mkdir -m 755 \"$target\"/dev\n+mknod -m 600 \"$target\"/dev/console c 5 1\n+mknod -m 600 \"$target\"/dev/initctl p\n+mknod -m 666 \"$target\"/dev/full c 1 7\n+mknod -m 666 \"$target\"/dev/null c 1 3\n+mknod -m 666 \"$target\"/dev/ptmx c 5 2\n+mknod -m 666 \"$target\"/dev/random c 1 8\n+mknod -m 666 \"$target\"/dev/tty c 5 0\n+mknod -m 666 \"$target\"/dev/tty0 c 4 0\n+mknod -m 666 \"$target\"/dev/urandom c 1 9\n+mknod -m 666 \"$target\"/dev/zero c 1 5\n+\n+# Install files. We attempt to install a headless Java distro, and exclude a\n+# number of unnecessary dependencies. In so doing, we also filter out Java itself,\n+#\u00a0but since Elasticsearch ships its own JDK, with its own libs, that isn't a problem\n+# and in fact is what we want.\n+#\n+# Note that we also skip coreutils, as it pulls in all kinds of stuff that\n+# we don't want.\n+#\n+# Note that I haven't yet verified that these dependencies are, in fact, unnecessary.\n+#\n+# We also include some utilities that we ship with the image.\n+#\n+#   * `nc` is useful for checking network issues\n+#   * `zip` and `unzip` are for working with bundles\n+#   * `pigz` is used for compressing large heaps dumps, and is considerably faster than `gzip` for this task.\n+#   * `tini` is a tiny but valid init for containers. This is used to cleanly control how ES and any child processes are shut down.\n+#\n+yum --installroot=\"$target\" --releasever=/ --setopt=tsflags=nodocs \\\n+  --setopt=group_package_types=mandatory -y  \\\n+  -x copy-jdk-configs -x cups-libs -x javapackages-tools -x alsa-lib -x freetype -x libjpeg -x libjpeg-turbo \\\n+  -x coreutils \\\n+  --skip-broken \\\n+  install \\\n+    java-latest-openjdk-headless \\\n+    bash nc zip upzip pigz\n+\n+ARCH=\"$(basename $platform)\"\n+curl --retry 10 -L -o \"$target\"/bin/tini-static-$ARCH           \"https://github.com/krallin/tini/releases/download/v0.19.0/tini-static-$ARCH\"\n+curl --retry 10 -L -o \"$target\"/bin/tini-static-$ARCH.sha256sum \"https://github.com/krallin/tini/releases/download/v0.19.0/tini-static-$ARCH.sha256sum\"\n+(cd \"$target/bin\" && sha256sum -c tini-static-$ARCH.sha256sum)\n+rm \"$target\"/bin/tini-static-$ARCH.sha256sum\n+mv \"$target\"/bin/tini-static-$ARCH \"$target\"/bin/tini\n+chmod +x \"$target\"/bin/tini\n+\n+# Use busybox instead of installing more RPMs, which can pull in all kinds of\n+# stuff we don't want. There's no RPM for busybox available for CentOS.\n+BUSYBOX_URL=\"https://busybox.net/downloads/binaries/1.31.0-i686-uclibc/busybox\"\n+if [[ \"$platform\" == \"linux/arm64\" ]]; then\n+  BUSYBOX_URL=\"https://www.busybox.net/downloads/binaries/1.31.0-defconfig-multiarch-musl/busybox-armv8l\"\n+fi\n+curl --retry 10 -L -o \"$target\"/bin/busybox \"$BUSYBOX_URL\"\n+chmod +x \"$target\"/bin/busybox\n+\n+set +x\n+# Add links for all the utilities (except sh, as we have bash)\n+for path in $( \"$target\"/bin/busybox --list-full | grep -v bin/sh ); do\n+  ln \"$target\"/bin/busybox \"$target\"/$path\n+done\n+set -x\n+\n+# Copy in our static curl build. This is provided via a Docker bind mount\n+cp /curl \"$target\"/usr/bin/curl\n+\n+# Curl needs files under here. More importantly, we change Elasticsearch's\n+# bundled JDK to use /etc/pki/ca-trust/extracted/java/cacerts instead of\n+# the bundled cacerts.\n+tar cf - /etc/pki | (cd \"$target\" && tar xf -)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1603735e0ea53c96600e9e1c8d6247c903a84c"}, "originalPosition": 107}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b3f62447f2258677505816e4698a662180053a4", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/8b3f62447f2258677505816e4698a662180053a4", "committedDate": "2020-05-12T14:25:43Z", "message": "Address review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f49b8b6eca139e59aa85e7ceafc1b242e72b927a", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/f49b8b6eca139e59aa85e7ceafc1b242e72b927a", "committedDate": "2020-05-12T14:50:34Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02ddf441f395b740c13b6c3688aa89b387667562", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/02ddf441f395b740c13b6c3688aa89b387667562", "committedDate": "2020-05-14T13:11:19Z", "message": "WIP - trying for a cross-arch Docker build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0ODY2MDc3", "url": "https://github.com/elastic/elasticsearch/pull/52519#pullrequestreview-414866077", "createdAt": "2020-05-19T22:24:38Z", "commit": {"oid": "2d1603735e0ea53c96600e9e1c8d6247c903a84c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMjoyNDozOFrOGX0xkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMjoyNDozOFrOGX0xkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYzNTA5MA==", "bodyText": "I believe this javadoc should mention that the code here is targeting Linux, and perhaps mention the specific distro or environment it's intended for. The commands here wouldn't work on a Mac (no /proc directory, for one thing), and certainly wouldn't work on Windows, and someone new to the code might think this is a general class for retrieving process info.", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r427635090", "createdAt": "2020-05-19T22:24:38Z", "author": {"login": "williamrandolph"}, "path": "qa/os/src/test/java/org/elasticsearch/packaging/util/ProcessInfo.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.packaging.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.hasSize;\n+\n+/**\n+ * Encapsulates the fetching of information about a running process.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1603735e0ea53c96600e9e1c8d6247c903a84c"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf322b099f992e09793c80d3fc79e6fa5ba689a9", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf322b099f992e09793c80d3fc79e6fa5ba689a9", "committedDate": "2020-05-21T10:42:26Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11ae944d14b6db59801b7e860188be3f85bed03c", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/11ae944d14b6db59801b7e860188be3f85bed03c", "committedDate": "2020-06-12T16:06:45Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00c3cb88671bb4df2297ad6a43c1dee1bb08f6bd", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/00c3cb88671bb4df2297ad6a43c1dee1bb08f6bd", "committedDate": "2020-06-12T21:02:20Z", "message": "Perform all the build steps via the Dockerfile\n\nThis means that Gradle can't cache any of the intermediate steps, but\nDocker still can. This change makes it easier for the build to be\ncross-architecture."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38557c2478e748b16c61955459b44afee286c4a3", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/38557c2478e748b16c61955459b44afee286c4a3", "committedDate": "2020-06-25T08:58:15Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66bec1b655e4ca1b28a2c015319bc1124a9dcb3c", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/66bec1b655e4ca1b28a2c015319bc1124a9dcb3c", "committedDate": "2020-06-25T11:21:10Z", "message": "Explicitly specify packages to install instead of hacky exclusion fiasco"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a508421ab5b0422519d2ee6c3fef703e53467273", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/a508421ab5b0422519d2ee6c3fef703e53467273", "committedDate": "2020-06-25T11:28:23Z", "message": "Tweak comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9e9e6a7ba623426a5de156777b24d54b66cefbb", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/f9e9e6a7ba623426a5de156777b24d54b66cefbb", "committedDate": "2020-06-25T12:34:09Z", "message": "Add more into to ProcessInfo Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0daa8403c6bfdab8d331d17847902e2ea7bce74a", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/0daa8403c6bfdab8d331d17847902e2ea7bce74a", "committedDate": "2020-06-25T12:53:50Z", "message": "Use musl busybox for both archs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7eedc3f3dc0ca30572066d1a636f55cf2c3a8744", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/7eedc3f3dc0ca30572066d1a636f55cf2c3a8744", "committedDate": "2020-06-25T13:21:59Z", "message": "Update docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccc1209a597cd132b3dc573d7f6074e53719ec3c", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/ccc1209a597cd132b3dc573d7f6074e53719ec3c", "committedDate": "2020-06-25T13:23:54Z", "message": "Test tweak"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6535024c278b01b3e7100b3440b54ea4d5672815", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/6535024c278b01b3e7100b3440b54ea4d5672815", "committedDate": "2020-06-26T14:17:55Z", "message": "Follow Docker guidelines and put script contents into Dockerfile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c75980b20dd7947e56c941fbb2abf42ed800702e", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/c75980b20dd7947e56c941fbb2abf42ed800702e", "committedDate": "2020-06-26T15:00:00Z", "message": "Trim dependencies further"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36836ab6dddd6c1f2f9ec526ead1938590b442db", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/36836ab6dddd6c1f2f9ec526ead1938590b442db", "committedDate": "2020-07-02T14:26:18Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTc4Mzg1", "url": "https://github.com/elastic/elasticsearch/pull/52519#pullrequestreview-441978385", "createdAt": "2020-07-02T19:50:16Z", "commit": {"oid": "36836ab6dddd6c1f2f9ec526ead1938590b442db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bcafbfd575846e4621e83e9a8a3f1c764059293", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/7bcafbfd575846e4621e83e9a8a3f1c764059293", "committedDate": "2020-07-07T09:02:30Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af035fe89e95e7183d21e0616cb60443914ff5d3", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/af035fe89e95e7183d21e0616cb60443914ff5d3", "committedDate": "2020-07-07T09:02:53Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMTM0MjU0", "url": "https://github.com/elastic/elasticsearch/pull/52519#pullrequestreview-453134254", "createdAt": "2020-07-22T09:08:51Z", "commit": {"oid": "af035fe89e95e7183d21e0616cb60443914ff5d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTowODo1MlrOG1ZtzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTowODo1MlrOG1ZtzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY0OTAzNg==", "bodyText": "How about adding pigz?\nIt's very useful for compressing large heap dumps. It's not a must-have from Cloud's perspective (we can fall back to gzip) but since we will be lacking package manager it'd make a lot of sense to add it here.", "url": "https://github.com/elastic/elasticsearch/pull/52519#discussion_r458649036", "createdAt": "2020-07-22T09:08:52Z", "author": {"login": "mieciu"}, "path": "distribution/docker/src/docker/Dockerfile", "diffHunk": "@@ -10,70 +10,174 @@\n \n   https://docs.groovy-lang.org/latest/html/api/groovy/text/SimpleTemplateEngine.html\n */ %>\n+\n ################################################################################\n-# Build stage 0 `builder`:\n-# Extract elasticsearch artifact\n-# Set gid=0 and make group perms==owner perms\n+# Step 1. Build curl statically. Installing it from RPM on CentOS pulls in too\n+# many dependencies.\n ################################################################################\n+FROM alpine:latest AS curl\n \n-FROM centos:7 AS builder\n+ENV VERSION 7.71.0\n+ENV TARBALL_URL https://curl.haxx.se/download/curl-\\${VERSION}.tar.xz\n+ENV TARBALL_PATH curl-\\${VERSION}.tar.xz\n+\n+# Install dependencies\n+RUN apk add gnupg gcc make musl-dev openssl-dev openssl-libs-static file\n+\n+RUN mkdir /work\n+WORKDIR /work\n+\n+# Fetch curl sources and files for validation\n+RUN wget \"https://daniel.haxx.se/mykey.asc\" -O \"curl-gpg.pub\" && \\\\\n+    wget \"\\${TARBALL_URL}.asc\" -O \"\\${TARBALL_PATH}.asc\" && \\\\\n+    wget \"\\${TARBALL_URL}\" -O \"\\${TARBALL_PATH}\"\n+\n+# Validate source\n+RUN gpg --import --always-trust \"curl-gpg.pub\" && \\\\\n+    gpg --verify \"\\${TARBALL_PATH}.asc\" \"\\${TARBALL_PATH}\"\n+\n+# Unpack and build\n+RUN tar xfJ \"\\${TARBALL_PATH}\" && \\\\\n+    cd \"curl-\\${VERSION}\" && \\\\\n+    ./configure --disable-shared --with-ca-fallback --with-ca-bundle=/etc/pki/tls/certs/ca-bundle.crt && \\\\\n+    make curl_LDFLAGS=\"-all-static\" && \\\\\n+    cp src/curl /work/curl && \\\\\n+    strip /work/curl\n+\n+################################################################################\n+# Step 2. Create a minimal root filesystem directory. This will form the basis\n+# for our image.\n+################################################################################\n+FROM centos:7 AS rootfs\n+\n+ENV BUSYBOX_VERSION 1.31.0\n+ENV TINI_VERSION 0.19.0\n+\n+# Start off with an up-to-date system\n+RUN yum update --setopt=tsflags=nodocs -y\n+\n+# Create a directory into which we will install files\n+RUN mkdir /rootfs\n+\n+#\u00a0Create required devices\n+RUN mkdir -m 755 /rootfs/dev && \\\\\n+    mknod -m 600 /rootfs/dev/console c 5 1 && \\\\\n+    mknod -m 600 /rootfs/dev/initctl p && \\\\\n+    mknod -m 666 /rootfs/dev/full c 1 7 && \\\\\n+    mknod -m 666 /rootfs/dev/null c 1 3 && \\\\\n+    mknod -m 666 /rootfs/dev/ptmx c 5 2 && \\\\\n+    mknod -m 666 /rootfs/dev/random c 1 8 && \\\\\n+    mknod -m 666 /rootfs/dev/tty c 5 0 && \\\\\n+    mknod -m 666 /rootfs/dev/tty0 c 4 0 && \\\\\n+    mknod -m 666 /rootfs/dev/urandom c 1 9 && \\\\\n+    mknod -m 666 /rootfs/dev/zero c 1 5\n+\n+# Install a minimal set of dependencies, and some for Elasticsearch\n+RUN yum --installroot=/rootfs --releasever=/ --setopt=tsflags=nodocs \\\\\n+      --setopt=group_package_types=mandatory -y  \\\\\n+      --skip-broken \\\\\n+      install basesystem bash zip zlib", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af035fe89e95e7183d21e0616cb60443914ff5d3"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efa85db39dabfa7459453f2dafc6de5f32f61332", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/efa85db39dabfa7459453f2dafc6de5f32f61332", "committedDate": "2020-08-03T19:48:58Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90a59fe79405be4bc0232b14a9ad173f70b59f3d", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/90a59fe79405be4bc0232b14a9ad173f70b59f3d", "committedDate": "2020-09-10T10:14:30Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b9e929af5b945462f2f69083769431d1e50796e", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/5b9e929af5b945462f2f69083769431d1e50796e", "committedDate": "2020-09-10T11:47:21Z", "message": "Tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afd3ed269732816b18137d341c268519e72f6e3d", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/afd3ed269732816b18137d341c268519e72f6e3d", "committedDate": "2020-09-16T10:30:17Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ea14d7adaa59a746fc36e8af55a6cdb39cebb02", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/4ea14d7adaa59a746fc36e8af55a6cdb39cebb02", "committedDate": "2020-09-28T10:26:41Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NTI1ODAy", "url": "https://github.com/elastic/elasticsearch/pull/52519#pullrequestreview-497525802", "createdAt": "2020-09-28T13:44:06Z", "commit": {"oid": "4ea14d7adaa59a746fc36e8af55a6cdb39cebb02"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64ee95750048fcd0711b9c346dfb5a0c1c3a9c58", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/64ee95750048fcd0711b9c346dfb5a0c1c3a9c58", "committedDate": "2020-09-29T08:15:07Z", "message": "Merge remote-tracking branch 'upstream/master' into tiny-baseimage"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2430, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}