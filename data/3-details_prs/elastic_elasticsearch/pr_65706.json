{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNTg2NDY1", "number": 65706, "title": "Adds a consistent shard index to ShardSearchRequest", "bodyText": "This change ensures that the shard index that is used to tiebreak documents with identical sort\nremains consistent between two requests that target the same shards. The index is now always computed from the\nnatural order of the shards in the search request.\nThis change also adds the consistent shard index to the ShardSearchRequest. That allows the slice builder\nto use this information to build more balanced slice query.\nRelates #56828", "createdAt": "2020-12-01T21:28:34Z", "url": "https://github.com/elastic/elasticsearch/pull/65706", "merged": true, "mergeCommit": {"oid": "9eb9f92b36dd8c28ce6926c94de8d8d886e5ab74"}, "closed": true, "closedAt": "2020-12-07T08:16:37Z", "author": {"login": "jimczi"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiAzeUgH2gAyNTMwNTg2NDY1OmY2NjZmYTcwMjQyZGRhMzdhMTVhYjE1OGRmYmEyN2JlZGRmNWFiYWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiU7IegFqTU0MzIyMTM1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f666fa70242dda37a15ab158dfba27beddf5abae", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/f666fa70242dda37a15ab158dfba27beddf5abae", "committedDate": "2020-12-01T21:26:53Z", "message": "Adds a consistent shard index to ShardSearchRequest\n\nThis change ensures that the shard index that is used to tiebreak documents with identical sort\nremains consistent between two requests that target the same shards. The index is now always computed from the\nnatural order of the shards in the search request.\nThis change also adds the consistent shard index to the ShardSearchRequest. That allows the slice builder\nto use this information to build more balanced slice query.\n\nRelates #56828"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ccc78de9b31b8e145f0083795478afd4746315c", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/0ccc78de9b31b8e145f0083795478afd4746315c", "committedDate": "2020-12-01T22:02:29Z", "message": "fix number of shards in slice builder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a99e113de0c4bf7962e81c9d1b0b0da16f214315", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/a99e113de0c4bf7962e81c9d1b0b0da16f214315", "committedDate": "2020-12-01T23:57:26Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02ae5402bf3bbbaf00492f248a846619d38a3c68", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/02ae5402bf3bbbaf00492f248a846619d38a3c68", "committedDate": "2020-12-02T00:05:47Z", "message": "restore randomization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjIxMzUw", "url": "https://github.com/elastic/elasticsearch/pull/65706#pullrequestreview-543221350", "createdAt": "2020-12-02T20:43:46Z", "commit": {"oid": "02ae5402bf3bbbaf00492f248a846619d38a3c68"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDo0Mzo0NlrOH9tYBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDo0Mzo0NlrOH9tYBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ2ODYxNA==", "bodyText": "I guess a case when shardIdex() = -1 (when a coordinating node is v < 8.0)  and there is a preference or indexRouting present in scroll slice is a very rare case, and we can disregard it.", "url": "https://github.com/elastic/elasticsearch/pull/65706#discussion_r534468614", "createdAt": "2020-12-02T20:43:46Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/main/java/org/elasticsearch/search/slice/SliceBuilder.java", "diffHunk": "@@ -205,40 +197,14 @@ public int hashCode() {\n      * @param context Additional information needed to build the query\n      */\n     @SuppressWarnings(\"rawtypes\")\n-    public Query toFilter(ClusterService clusterService, ShardSearchRequest request, QueryShardContext context) {\n+    public Query toFilter(ShardSearchRequest request, QueryShardContext context) {\n         final MappedFieldType type = context.getFieldType(field);\n         if (type == null) {\n             throw new IllegalArgumentException(\"field \" + field + \" not found\");\n         }\n \n-        int shardId = request.shardId().id();\n-        int numShards = context.getIndexSettings().getNumberOfShards();\n-        if (request.preference() != null || request.indexRoutings().length > 0) {\n-            GroupShardsIterator<ShardIterator> group = buildShardIterator(clusterService, request);\n-            assert group.size() <= numShards : \"index routing shards: \" + group.size() +\n-                \" cannot be greater than total number of shards: \" + numShards;\n-            if (group.size() < numShards) {\n-                /*\n-                 * The routing of this request targets a subset of the shards of this index so we need to we retrieve\n-                 * the original {@link GroupShardsIterator} and compute the request shard id and number of\n-                 * shards from it.\n-                 */\n-                numShards = group.size();\n-                int ord = 0;\n-                shardId = -1;\n-                // remap the original shard id with its index (position) in the sorted shard iterator.\n-                for (ShardIterator it : group) {\n-                    assert it.shardId().getIndex().equals(request.shardId().getIndex());\n-                    if (request.shardId().equals(it.shardId())) {\n-                        shardId = ord;\n-                        break;\n-                    }\n-                    ++ord;\n-                }\n-                assert shardId != -1 : \"shard id: \" + request.shardId().getId() + \" not found in index shard routing\";\n-            }\n-        }\n-\n+        int shardIndex = request.shardIndex() != -1 ? request.shardIndex() : request.shardId().id();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02ae5402bf3bbbaf00492f248a846619d38a3c68"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4224, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}