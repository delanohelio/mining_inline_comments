{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzYxMTk0", "number": 51775, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyNzo1MlrODcXNIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyNzo1MlrODcXNIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDY2OTEzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/HttpExporterIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyNzo1MlrOFkYbgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyNzo1MlrOFkYbgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MzMxNQ==", "bodyText": "This needs to change now with the rename:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .put(\"index.lifecycle.history_index_enabled\", false)\n          \n          \n            \n                        .put(\"indices.lifecycle.history_index_enabled\", false)", "url": "https://github.com/elastic/elasticsearch/pull/51775#discussion_r373693315", "createdAt": "2020-01-31T21:27:52Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/HttpExporterIT.java", "diffHunk": "@@ -93,9 +98,23 @@\n     private final boolean currentLicenseAllowsWatcher = true;\n     private final boolean watcherAlreadyExists = randomBoolean();\n     private final Environment environment = TestEnvironment.newEnvironment(Settings.builder().put(\"path.home\", createTempDir()).build());\n+    private final String userName = \"elasticuser\";\n \n     private MockWebServer webServer;\n \n+    private MockSecureSettings mockSecureSettings  = new MockSecureSettings();\n+    @Override\n+    protected Settings nodeSettings(int nodeOrdinal) {\n+\n+        Settings.Builder builder = Settings.builder()\n+            .put(super.nodeSettings(nodeOrdinal))\n+            .put(MonitoringService.INTERVAL.getKey(), MonitoringService.MIN_INTERVAL)\n+            // we do this by default in core, but for monitoring this isn't needed and only adds noise.\n+            .put(\"index.lifecycle.history_index_enabled\", false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23f00b70edf145cd25cb11075fd7dc8931d7b124"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 24, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}