{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MTMzMzU4", "number": 63289, "title": "Add support for histogram fields to rate aggregation", "bodyText": "The rate aggregation now supports histogram fields. At the moment only sum\nis supported. The value count mode will be added as a follow up.\nCloses #62939", "createdAt": "2020-10-05T21:39:58Z", "url": "https://github.com/elastic/elasticsearch/pull/63289", "merged": true, "mergeCommit": {"oid": "34bff3f776a35221a6eb9aa4e184c334238d97ee"}, "closed": true, "closedAt": "2020-10-08T20:54:26Z", "author": {"login": "imotov"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPqy0OgH2gAyNDk4MTMzMzU4OjI2MDg1YzU4NzhiNWUwNzg0YmUyM2RhY2ZlMTQ4NTMzOTRlMGRlNzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQjlG9AFqTUwNDkxODYxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "26085c5878b5e0784be23dacfe14853394e0de78", "author": {"user": {"login": "imotov", "name": "Igor Motov"}}, "url": "https://github.com/elastic/elasticsearch/commit/26085c5878b5e0784be23dacfe14853394e0de78", "committedDate": "2020-10-05T21:37:37Z", "message": "Add support for histogram fields to rate aggregation\n\nThe rate aggregation now supports histogram fields. At the moment only sum\nis supported. The value count mode will be added as a follow up.\n\nCloses #60674"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMDA3NDY5", "url": "https://github.com/elastic/elasticsearch/pull/63289#pullrequestreview-503007469", "createdAt": "2020-10-06T14:11:09Z", "commit": {"oid": "26085c5878b5e0784be23dacfe14853394e0de78"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDoxMTowOVrOHdI4iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDoxMTowOVrOHdI4iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxNjI5OQ==", "bodyText": "Rather than using an instanceof check and having one aggregator that supports both ValuesSourceTypes, we should create a new aggregator for histogram types, and add a second mapping in the register aggregators method on the factory.", "url": "https://github.com/elastic/elasticsearch/pull/63289#discussion_r500316299", "createdAt": "2020-10-06T14:11:09Z", "author": {"login": "not-napoleon"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/rate/RateAggregator.java", "diffHunk": "@@ -78,33 +81,53 @@ public ScoreMode scoreMode() {\n     @Override\n     public LeafBucketCollector getLeafCollector(LeafReaderContext ctx, final LeafBucketCollector sub) throws IOException {\n         final BigArrays bigArrays = context.bigArrays();\n-        final SortedNumericDoubleValues values = valuesSource.doubleValues(ctx);\n         final CompensatedSum kahanSummation = new CompensatedSum(0, 0);\n-\n-        return new LeafBucketCollectorBase(sub, values) {\n-            @Override\n-            public void collect(int doc, long bucket) throws IOException {\n-                sums = bigArrays.grow(sums, bucket + 1);\n-                compensations = bigArrays.grow(compensations, bucket + 1);\n-\n-                if (values.advanceExact(doc)) {\n-                    final int valuesCount = values.docValueCount();\n-                    // Compute the sum of double values with Kahan summation algorithm which is more\n-                    // accurate than naive summation.\n-                    double sum = sums.get(bucket);\n-                    double compensation = compensations.get(bucket);\n-                    kahanSummation.reset(sum, compensation);\n-\n-                    for (int i = 0; i < valuesCount; i++) {\n-                        double value = values.nextValue();\n-                        kahanSummation.add(value);\n+        if (valuesSource instanceof HistogramValuesSource.Histogram) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26085c5878b5e0784be23dacfe14853394e0de78"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "011b2c9c7f53350d786304c84a6c4793ffded73c", "author": {"user": {"login": "imotov", "name": "Igor Motov"}}, "url": "https://github.com/elastic/elasticsearch/commit/011b2c9c7f53350d786304c84a6c4793ffded73c", "committedDate": "2020-10-07T18:12:56Z", "message": "Merge remote-tracking branch 'elastic/master' into issue-62939-add-rate-support-for-histogram-fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2791eb91d1e2325cd4fd2a6ab70765882d834f09", "author": {"user": {"login": "imotov", "name": "Igor Motov"}}, "url": "https://github.com/elastic/elasticsearch/commit/2791eb91d1e2325cd4fd2a6ab70765882d834f09", "committedDate": "2020-10-07T19:41:27Z", "message": "Split RateAggregator into type specific classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0OTE4NjE1", "url": "https://github.com/elastic/elasticsearch/pull/63289#pullrequestreview-504918615", "createdAt": "2020-10-08T15:41:38Z", "commit": {"oid": "2791eb91d1e2325cd4fd2a6ab70765882d834f09"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNTo0MTozOFrOHekx6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNTo0NTozMFrOHek8zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgyMTkyOQ==", "bodyText": "I think this is fine, but just for the sake of mentioning options, we could push getting the values source into the concrete subclasses and do the cast in the constructor, rather than at access time in the leaf reader.", "url": "https://github.com/elastic/elasticsearch/pull/63289#discussion_r501821929", "createdAt": "2020-10-08T15:41:38Z", "author": {"login": "not-napoleon"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/rate/AbstractRateAggregator.java", "diffHunk": "@@ -46,7 +40,7 @@ public RateAggregator(\n         Map<String, Object> metadata\n     ) throws IOException {\n         super(name, context, parent, metadata);\n-        this.valuesSource = (ValuesSource.Numeric) valuesSourceConfig.getValuesSource();\n+        this.valuesSource = valuesSourceConfig.getValuesSource();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2791eb91d1e2325cd4fd2a6ab70765882d834f09"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgyNDcxOA==", "bodyText": "Is it a BWC break that we're dropping boolean here?", "url": "https://github.com/elastic/elasticsearch/pull/63289#discussion_r501824718", "createdAt": "2020-10-08T15:45:30Z", "author": {"login": "not-napoleon"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/rate/RateAggregatorFactory.java", "diffHunk": "@@ -44,15 +45,21 @@\n     static void registerAggregators(ValuesSourceRegistry.Builder builder) {\n         builder.register(\n             RateAggregationBuilder.REGISTRY_KEY,\n-            List.of(CoreValuesSourceType.NUMERIC, CoreValuesSourceType.BOOLEAN),\n-            RateAggregator::new,\n+            Collections.singletonList(CoreValuesSourceType.NUMERIC),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2791eb91d1e2325cd4fd2a6ab70765882d834f09"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4289, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}