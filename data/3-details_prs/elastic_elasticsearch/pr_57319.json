{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzUyOTYz", "number": 57319, "title": "Remove duplicate ssl setup in sql/qa projects", "bodyText": "This is follow up on #57197 as we run ssl cert certification for each with-ssl subproject with identical parameters. This PR introduces an elasticsearch.test-with-ssl plugin that configures projects to use pregenerated certificates for testing that are shipped with buildSrc.\n\nRemoves duplicate code from with-ssl test projects\nRemoves expensive duplicate dynamic creation of ssl certificate generation during precommit run\nDocuments how the certificates can be recreated\nUsed certs are static and not generated dynamically anymore\n\nHere's a comparison of running precommit locally before(https://gradle-enterprise.elastic.co/s/lhoqf5yix5g24/performance/build) and after(https://gradle-enterprise.elastic.co/s/djogrpm6ci7fs/performance/build)", "createdAt": "2020-05-28T21:45:09Z", "url": "https://github.com/elastic/elasticsearch/pull/57319", "merged": true, "mergeCommit": {"oid": "78cb9fa0e60071b0c4734063f4ecf1ca6b3c1d96"}, "closed": true, "closedAt": "2020-06-04T07:40:22Z", "author": {"login": "breskeby"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl1ROoAFqTQyMDUyMTE4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcns7boAH2gAyNDI0NzUyOTYzOmFhYTI5YWQzNTE2MDJkOWU5NDdjNDIwYjkwNGMyZDkyYTE3ZDJjMTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNTIxMTg5", "url": "https://github.com/elastic/elasticsearch/pull/57319#pullrequestreview-420521189", "createdAt": "2020-05-28T21:56:33Z", "commit": {"oid": "a24883f3aa557ec0d23a2c91d85f1df0f309f6dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMTo1NjozM1rOGcII1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMTo1NjozM1rOGcII1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE0NjY0NA==", "bodyText": "Won't this aggressively realize all tasks? I think we need configureEach?", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r432146644", "createdAt": "2020-05-28T21:56:33Z", "author": {"login": "rjernst"}, "path": "x-pack/plugin/sql/qa/server/security/with-ssl/build.gradle", "diffHunk": "@@ -148,6 +29,29 @@ integTest.runner {\n   }\n }\n \n+\n+// location of generated keystores and certificates\n+File keystoreDir = new File(project.buildDir, 'keystore')\n+\n+// Generate the node's keystore\n+File nodeKeystore = file(\"$keystoreDir/test-node.jks\")\n+\n+// Generate the client's keystore\n+File clientKeyStore = file(\"$keystoreDir/test-client.jks\")\n+\n+tasks.register(\"resolveKeyStores\") {\n+  inputs.files(configurations.nodeKeystores)\n+  inputs.files(configurations.clientKeyStores)\n+  doLast {\n+    Files.copy(nodeKeystores.files.singleFile.toPath(), nodeKeystore.toPath())\n+    Files.copy(clientKeyStores.files.singleFile.toPath(), clientKeyStore.toPath())\n+  }\n+}\n+\n+tasks.withType(org.elasticsearch.gradle.testclusters.TestClustersAware){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a24883f3aa557ec0d23a2c91d85f1df0f309f6dd"}, "originalPosition": 176}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4a77c938d623aa22d04a544e5095f90abd401323", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/4a77c938d623aa22d04a544e5095f90abd401323", "committedDate": "2020-05-29T18:18:33Z", "message": "Some fixing in the ssl setup task plumbing"}, "afterCommit": {"oid": "86c96e61b0adc4885a858c0e2e42d4364771ac72", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/86c96e61b0adc4885a858c0e2e42d4364771ac72", "committedDate": "2020-06-02T08:17:33Z", "message": "Some fixing in the ssl setup task plumbing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97901d3990ab289e8330f639a1374dca88f82030", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/97901d3990ab289e8330f639a1374dca88f82030", "committedDate": "2020-06-02T09:10:02Z", "message": "Remove duplicate ssl setup in sql/qa projects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f0aa8568676a8ac3a7b29adb28bdca665232941", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/2f0aa8568676a8ac3a7b29adb28bdca665232941", "committedDate": "2020-06-02T09:10:39Z", "message": "Fix enforcement of task instances"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce6869f855f219a6f30aeaf74f32fecacc43da01", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/ce6869f855f219a6f30aeaf74f32fecacc43da01", "committedDate": "2020-06-02T09:10:39Z", "message": "Fix imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90d24585d1bf03b0ff3da0152ec04bd73fd992d0", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/90d24585d1bf03b0ff3da0152ec04bd73fd992d0", "committedDate": "2020-06-02T09:10:39Z", "message": "Fix another import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c66d11d8e659c2545885a26af707040abc36e753", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/c66d11d8e659c2545885a26af707040abc36e753", "committedDate": "2020-06-02T09:11:20Z", "message": "Fix configuration refernce"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2cfb33227549852a0c1546d93700b35e1d63e68", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/d2cfb33227549852a0c1546d93700b35e1d63e68", "committedDate": "2020-06-02T09:11:20Z", "message": "Use static data for cert generation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6205f18ba2309fbe555973bbe8c4936a7ece6d1", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/b6205f18ba2309fbe555973bbe8c4936a7ece6d1", "committedDate": "2020-06-02T09:11:21Z", "message": "Some fixing in the ssl setup task plumbing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63aea79fb8a6977e345a83e33b3086e2b98751d9", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/63aea79fb8a6977e345a83e33b3086e2b98751d9", "committedDate": "2020-06-02T09:23:17Z", "message": "Put certs on test runtime classpath"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86c96e61b0adc4885a858c0e2e42d4364771ac72", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/86c96e61b0adc4885a858c0e2e42d4364771ac72", "committedDate": "2020-06-02T08:17:33Z", "message": "Some fixing in the ssl setup task plumbing"}, "afterCommit": {"oid": "63aea79fb8a6977e345a83e33b3086e2b98751d9", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/63aea79fb8a6977e345a83e33b3086e2b98751d9", "committedDate": "2020-06-02T09:23:17Z", "message": "Put certs on test runtime classpath"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1126d89b0b1dcbaf014062287e1b78371baaed37", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/1126d89b0b1dcbaf014062287e1b78371baaed37", "committedDate": "2020-06-02T13:29:30Z", "message": "Resolve certs for testing directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d1779d458950c2d1f84f3f4180382e4d1475538", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/7d1779d458950c2d1f84f3f4180382e4d1475538", "committedDate": "2020-06-02T20:13:28Z", "message": "Move ssl testing logic into a plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d525f1d281a81563a652e5202fd84d3765b11254", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/d525f1d281a81563a652e5202fd84d3765b11254", "committedDate": "2020-06-03T06:18:03Z", "message": "Fix imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "657569eab16da13f9b9febbada95a2f09ee457cb", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/657569eab16da13f9b9febbada95a2f09ee457cb", "committedDate": "2020-06-03T07:32:41Z", "message": "Document test cert creation and cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51d752d5bc77c6b5470ef166891463ed41ade17a", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/51d752d5bc77c6b5470ef166891463ed41ade17a", "committedDate": "2020-06-03T08:38:01Z", "message": "Put more common logic into TestWithSslPlugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMzUzNTMw", "url": "https://github.com/elastic/elasticsearch/pull/57319#pullrequestreview-423353530", "createdAt": "2020-06-03T08:58:03Z", "commit": {"oid": "51d752d5bc77c6b5470ef166891463ed41ade17a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo1ODowM1rOGeSkSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo1ODowM1rOGeSkSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxNDY2NA==", "bodyText": "Alternatively, We could reuse the buildResources task. I have no strong opinion but my thinking of using a new task here is to detangle this logic from other uses of  buildResources within the elasticsearch build logic.", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434414664", "createdAt": "2020-06-03T08:58:03Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.plugins.JavaPlugin;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51d752d5bc77c6b5470ef166891463ed41ade17a"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5b388649fd2a1dfbdffc3c09f77f274a9e5d57d", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/a5b388649fd2a1dfbdffc3c09f77f274a9e5d57d", "committedDate": "2020-06-03T09:00:30Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75db1baafbad9054811f608fa545b640095799a6", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/75db1baafbad9054811f608fa545b640095799a6", "committedDate": "2020-06-03T09:37:01Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNTE0NzAy", "url": "https://github.com/elastic/elasticsearch/pull/57319#pullrequestreview-423514702", "createdAt": "2020-06-03T12:46:03Z", "commit": {"oid": "75db1baafbad9054811f608fa545b640095799a6"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjo0NjowM1rOGeaJsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzowMjo1MFrOGeax5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUzODkzMA==", "bodyText": "nit: It doesn't really matter but can we rename the suffices to crt instead ?", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434538930", "createdAt": "2020-06-03T12:46:03Z", "author": {"login": "jkakavas"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.cert\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75db1baafbad9054811f608fa545b640095799a6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0NDEwNg==", "bodyText": "Can we also get the private keys into test/ssl/test-X.pem ? In general , given the applicability that this plugin has in so many projects in our security and core tests, I wonder if we can do a little more up front:\n\nSetup a CA key and certificate\nGenerate test-node private key and certificate signed by that CA\nGenerate test-client private key and certificate signed by that CA\nMake all the above available as PEM files ( x.crt and x.key ) and in JKS / PKCS12 keystores\nCopy all of them as extra config files", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434544106", "createdAt": "2020-06-03T12:54:40Z", "author": {"login": "jkakavas"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.cert\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.cert\");\n+                t.copy(\"test/ssl/test-node.jks\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75db1baafbad9054811f608fa545b640095799a6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0NDU1MQ==", "bodyText": "Can I override/overwrite this in the build.gradle file of a subproject where I use this new plugin ?", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434544551", "createdAt": "2020-06-03T12:55:19Z", "author": {"login": "jkakavas"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.cert\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.cert\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+            testSourceSet.getResources().srcDir(new File(keyStoreDir, \"test/ssl\"));\n+            testSourceSet.compiledBy(exportKeyStore);\n+\n+            project.getTasks()\n+                .withType(org.elasticsearch.gradle.testclusters.TestClustersAware.class)\n+                .configureEach(clusterAware -> clusterAware.dependsOn(exportKeyStore));\n+\n+            // Tell the tests we're running with ssl enabled\n+            project.getTasks()\n+                .withType(RestIntegTestTask.class)\n+                .configureEach(integTest -> integTest.runner.systemProperty(\"tests.ssl.enabled\", \"true\"));\n+        });\n+\n+        project.getPlugins().withType(TestClustersPlugin.class).configureEach(clustersPlugin -> {\n+            File keystoreDir = new File(project.getBuildDir(), \"keystore/test/ssl\");\n+            File nodeKeystore = new File(keystoreDir, \"test-node.jks\");\n+            File clientKeyStore = new File(keystoreDir, \"test-client.jks\");\n+            NamedDomainObjectContainer<ElasticsearchCluster> clusters = (NamedDomainObjectContainer<ElasticsearchCluster>) project\n+                .getExtensions()\n+                .getByName(TestClustersPlugin.EXTENSION_NAME);\n+            clusters.all(c -> {\n+                // ceremony to set up ssl\n+                c.setting(\"xpack.security.transport.ssl.keystore.path\", \"test-node.jks\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75db1baafbad9054811f608fa545b640095799a6"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0NTk0MQ==", "bodyText": "I think we can go with something closer to 10 years here instead of 2. We don't gain anything by shorter lifetime. Maybe also add a note in the README with the date these certificates expire so that is more probable someone catches this and updates them before they expire and tests start failing?", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434545941", "createdAt": "2020-06-03T12:57:27Z", "author": {"login": "jkakavas"}, "path": "buildSrc/src/main/resources/test/ssl/README.md", "diffHunk": "@@ -0,0 +1,19 @@\n+This directory contains test certificates used for testing ssl handling.\n+\n+These keystores and certificates can be used via applying the `elasticsearch.test-with-ssl` plugin.\n+\n+The certificates are generated using catch-all SAN in the following procedure:\n+\n+1. Generate the node's keystore:\n+   `keytool -genkey -alias test-node -keystore test-node.jks -keyalg RSA -keysize 2048 -validity 712 -dname CN=\"Elasticsearch Build Test Infrastructure\" -keypass keypass -storepass keypass -ext san=dns:localhost,dns:localhost.localdomain,dns:localhost4,dns:localhost4.localdomain4,dns:localhost6,dns:localhost6.localdomain6,ip:127.0.0.1,ip:0:0:0:0:0:0:0:1`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75db1baafbad9054811f608fa545b640095799a6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0OTIyMQ==", "bodyText": "Could we also have a conditional here that if we are inFipsJvm() it would use key and certificate PEM files to set up TLS instead of keystores so that it can work even when the subproject that uses this plugin is running tests in fips mode ? i.e.\n*.ssl.key\n*.ssl.secure_key_passphrase\n*.ssl.certificate\n\ninstead of\n*.ssl.keystore.path\n*.ssl.keystore.secure_password\n\nand\n*.ssl.certificate_authorities\n\ninstead of\n*.ssl.keystore.path\n\nor\n*.ssl.truststore.path", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434549221", "createdAt": "2020-06-03T13:02:50Z", "author": {"login": "jkakavas"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.cert\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.cert\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+            testSourceSet.getResources().srcDir(new File(keyStoreDir, \"test/ssl\"));\n+            testSourceSet.compiledBy(exportKeyStore);\n+\n+            project.getTasks()\n+                .withType(org.elasticsearch.gradle.testclusters.TestClustersAware.class)\n+                .configureEach(clusterAware -> clusterAware.dependsOn(exportKeyStore));\n+\n+            // Tell the tests we're running with ssl enabled\n+            project.getTasks()\n+                .withType(RestIntegTestTask.class)\n+                .configureEach(integTest -> integTest.runner.systemProperty(\"tests.ssl.enabled\", \"true\"));\n+        });\n+\n+        project.getPlugins().withType(TestClustersPlugin.class).configureEach(clustersPlugin -> {\n+            File keystoreDir = new File(project.getBuildDir(), \"keystore/test/ssl\");\n+            File nodeKeystore = new File(keystoreDir, \"test-node.jks\");\n+            File clientKeyStore = new File(keystoreDir, \"test-client.jks\");\n+            NamedDomainObjectContainer<ElasticsearchCluster> clusters = (NamedDomainObjectContainer<ElasticsearchCluster>) project\n+                .getExtensions()\n+                .getByName(TestClustersPlugin.EXTENSION_NAME);\n+            clusters.all(c -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75db1baafbad9054811f608fa545b640095799a6"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5adb44c31066dd14e6af13dd10b9c53e211d401", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/f5adb44c31066dd14e6af13dd10b9c53e211d401", "committedDate": "2020-06-03T14:17:15Z", "message": "Apply feedback: Rename *.cert to *.crt files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a7782b0965f97d11685de3af80cd1673841090d", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/4a7782b0965f97d11685de3af80cd1673841090d", "committedDate": "2020-06-03T14:31:53Z", "message": "Apply feedback regarding generated test certs\n\n- make them valid for 10 years\n- Add note to readme about date of expiration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjI0MjE5", "url": "https://github.com/elastic/elasticsearch/pull/57319#pullrequestreview-423624219", "createdAt": "2020-06-03T14:41:20Z", "commit": {"oid": "4a7782b0965f97d11685de3af80cd1673841090d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDo0MToyMVrOGefILw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDo0MjozOVrOGefL1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYyMDQ2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                exclude '**/*.cert'\n          \n          \n            \n                exclude '**/*.crt'", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434620463", "createdAt": "2020-06-03T14:41:21Z", "author": {"login": "jkakavas"}, "path": "buildSrc/build.gradle", "diffHunk": "@@ -222,6 +222,8 @@ if (project != rootProject) {\n   forbiddenPatterns {\n     exclude '**/*.wav'\n     exclude '**/*.p12'\n+    exclude '**/*.jks'\n+    exclude '**/*.cert'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a7782b0965f97d11685de3af80cd1673841090d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYyMTM5Nw==", "bodyText": "I'm fine with that as long as we don't apply this plugin to any other subproject until we have the fips handling because it will start failing in CI. ( sql is fine because we mute the tests in fips eitherway )", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434621397", "createdAt": "2020-06-03T14:42:39Z", "author": {"login": "jkakavas"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.cert\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.cert\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+            testSourceSet.getResources().srcDir(new File(keyStoreDir, \"test/ssl\"));\n+            testSourceSet.compiledBy(exportKeyStore);\n+\n+            project.getTasks()\n+                .withType(org.elasticsearch.gradle.testclusters.TestClustersAware.class)\n+                .configureEach(clusterAware -> clusterAware.dependsOn(exportKeyStore));\n+\n+            // Tell the tests we're running with ssl enabled\n+            project.getTasks()\n+                .withType(RestIntegTestTask.class)\n+                .configureEach(integTest -> integTest.runner.systemProperty(\"tests.ssl.enabled\", \"true\"));\n+        });\n+\n+        project.getPlugins().withType(TestClustersPlugin.class).configureEach(clustersPlugin -> {\n+            File keystoreDir = new File(project.getBuildDir(), \"keystore/test/ssl\");\n+            File nodeKeystore = new File(keystoreDir, \"test-node.jks\");\n+            File clientKeyStore = new File(keystoreDir, \"test-client.jks\");\n+            NamedDomainObjectContainer<ElasticsearchCluster> clusters = (NamedDomainObjectContainer<ElasticsearchCluster>) project\n+                .getExtensions()\n+                .getByName(TestClustersPlugin.EXTENSION_NAME);\n+            clusters.all(c -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0OTIyMQ=="}, "originalCommit": {"oid": "75db1baafbad9054811f608fa545b640095799a6"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42de63b3c5b43a512ee9569631e02c5a86fd5aa6", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/42de63b3c5b43a512ee9569631e02c5a86fd5aa6", "committedDate": "2020-06-03T14:44:37Z", "message": "Fix forbiddenPattern task after cert -> crt renaming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e7240babaea9e2125c38a8b067e379e8af86bfc", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/3e7240babaea9e2125c38a8b067e379e8af86bfc", "committedDate": "2020-06-03T14:46:20Z", "message": "Another fix after cert -> crt renaming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNzQxMjQ4", "url": "https://github.com/elastic/elasticsearch/pull/57319#pullrequestreview-423741248", "createdAt": "2020-06-03T16:42:39Z", "commit": {"oid": "3e7240babaea9e2125c38a8b067e379e8af86bfc"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo0MjozOVrOGekfVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo0NjoxOVrOGeko7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwODMxMQ==", "bodyText": "How does this compare to project.getPluginManager().withPlugin()?", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434708311", "createdAt": "2020-06-03T16:42:39Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.crt\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.crt\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7240babaea9e2125c38a8b067e379e8af86bfc"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwODg4Nw==", "bodyText": "We can use Util.getJavaTestSourceSet().", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434708887", "createdAt": "2020-06-03T16:43:27Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.crt\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.crt\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7240babaea9e2125c38a8b067e379e8af86bfc"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwOTQ3Ng==", "bodyText": "Do we have to use the fully qualified name here? Can we add an import?", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434709476", "createdAt": "2020-06-03T16:44:23Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.crt\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.crt\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+            testSourceSet.getResources().srcDir(new File(keyStoreDir, \"test/ssl\"));\n+            testSourceSet.compiledBy(exportKeyStore);\n+\n+            project.getTasks()\n+                .withType(org.elasticsearch.gradle.testclusters.TestClustersAware.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7240babaea9e2125c38a8b067e379e8af86bfc"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMDQ0MA==", "bodyText": "We should instead configure all tasks of RestTestRunnerTask type. There can be instances where we create these directly w/o creating a RestIntegTestTask. Also, the latter will hopefully dissapear soon.", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434710440", "createdAt": "2020-06-03T16:45:47Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.crt\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.crt\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+            testSourceSet.getResources().srcDir(new File(keyStoreDir, \"test/ssl\"));\n+            testSourceSet.compiledBy(exportKeyStore);\n+\n+            project.getTasks()\n+                .withType(org.elasticsearch.gradle.testclusters.TestClustersAware.class)\n+                .configureEach(clusterAware -> clusterAware.dependsOn(exportKeyStore));\n+\n+            // Tell the tests we're running with ssl enabled\n+            project.getTasks()\n+                .withType(RestIntegTestTask.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7240babaea9e2125c38a8b067e379e8af86bfc"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMDc2NA==", "bodyText": "Also, would we not want this for unit tests as well? Or is this very specific to integration tests?", "url": "https://github.com/elastic/elasticsearch/pull/57319#discussion_r434710764", "createdAt": "2020-06-03T16:46:19Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/test/TestWithSslPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask;\n+import org.elasticsearch.gradle.precommit.ForbiddenPatternsTask;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.TestClustersPlugin;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+\n+public class TestWithSslPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        File keyStoreDir = new File(project.getBuildDir(), \"keystore\");\n+        TaskProvider<ExportElasticsearchBuildResourcesTask> exportKeyStore = project.getTasks()\n+            .register(\"copyTestCertificates\", ExportElasticsearchBuildResourcesTask.class, (t) -> {\n+                t.copy(\"test/ssl/test-client.crt\");\n+                t.copy(\"test/ssl/test-client.jks\");\n+                t.copy(\"test/ssl/test-node.crt\");\n+                t.copy(\"test/ssl/test-node.jks\");\n+                t.setOutputDir(keyStoreDir);\n+            });\n+\n+        project.getPlugins().withType(StandaloneRestTestPlugin.class).configureEach(restTestPlugin -> {\n+            SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+            SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+            testSourceSet.getResources().srcDir(new File(keyStoreDir, \"test/ssl\"));\n+            testSourceSet.compiledBy(exportKeyStore);\n+\n+            project.getTasks()\n+                .withType(org.elasticsearch.gradle.testclusters.TestClustersAware.class)\n+                .configureEach(clusterAware -> clusterAware.dependsOn(exportKeyStore));\n+\n+            // Tell the tests we're running with ssl enabled\n+            project.getTasks()\n+                .withType(RestIntegTestTask.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMDQ0MA=="}, "originalCommit": {"oid": "3e7240babaea9e2125c38a8b067e379e8af86bfc"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11bbb65f75863cac9197a9dbf9dfe2b98ded7abf", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/11bbb65f75863cac9197a9dbf9dfe2b98ded7abf", "committedDate": "2020-06-03T17:11:29Z", "message": "Fix generated certificates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaa29ad351602d9e947c420b904c2d92a17d2c12", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/aaa29ad351602d9e947c420b904c2d92a17d2c12", "committedDate": "2020-06-03T17:29:52Z", "message": "Apply review feedback\n\n- Minor cleanup"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4140, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}