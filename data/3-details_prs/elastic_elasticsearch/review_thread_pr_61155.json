{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MDQwNjA1", "number": 61155, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTo1Njo0MVrOEYhldA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTo1Njo0MVrOEYhldA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTUxNTQwOnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultStringConcatenationOptimizationPhase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTo1Njo0MVrOHA5_Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNjoxMzozN1rOHA6hNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcxMjE2Mw==", "bodyText": "weirdo", "url": "https://github.com/elastic/elasticsearch/pull/61155#discussion_r470712163", "createdAt": "2020-08-14T15:56:41Z", "author": {"login": "stu-elastic"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultStringConcatenationOptimizationPhase.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.painless.phase;\n+\n+import org.elasticsearch.painless.ir.ExpressionNode;\n+import org.elasticsearch.painless.ir.StringConcatenationNode;\n+\n+public class DefaultStringConcatenationOptimizationPhase extends IRTreeBaseVisitor<Void> {\n+\n+    @Override\n+    public void visitStringConcatenation(StringConcatenationNode irStringConcatenationNode, Void scope) {\n+         int i = 0;\n+\n+        while (i < irStringConcatenationNode.getArgumentNodes().size()) {\n+            ExpressionNode irArgumentNode = irStringConcatenationNode.getArgumentNodes().get(i);\n+\n+            if (irArgumentNode instanceof StringConcatenationNode) {\n+                irStringConcatenationNode.getArgumentNodes().remove(i);\n+                irStringConcatenationNode.getArgumentNodes().addAll(i, ((StringConcatenationNode)irArgumentNode).getArgumentNodes());\n+            } else {\n+                ++i;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04c8e5a8c11cd8f245444eb52d371718fa77db1d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcyMDgyMA==", "bodyText": "Sigh, unweirded.", "url": "https://github.com/elastic/elasticsearch/pull/61155#discussion_r470720820", "createdAt": "2020-08-14T16:13:37Z", "author": {"login": "jdconrad"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultStringConcatenationOptimizationPhase.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.painless.phase;\n+\n+import org.elasticsearch.painless.ir.ExpressionNode;\n+import org.elasticsearch.painless.ir.StringConcatenationNode;\n+\n+public class DefaultStringConcatenationOptimizationPhase extends IRTreeBaseVisitor<Void> {\n+\n+    @Override\n+    public void visitStringConcatenation(StringConcatenationNode irStringConcatenationNode, Void scope) {\n+         int i = 0;\n+\n+        while (i < irStringConcatenationNode.getArgumentNodes().size()) {\n+            ExpressionNode irArgumentNode = irStringConcatenationNode.getArgumentNodes().get(i);\n+\n+            if (irArgumentNode instanceof StringConcatenationNode) {\n+                irStringConcatenationNode.getArgumentNodes().remove(i);\n+                irStringConcatenationNode.getArgumentNodes().addAll(i, ((StringConcatenationNode)irArgumentNode).getArgumentNodes());\n+            } else {\n+                ++i;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcxMjE2Mw=="}, "originalCommit": {"oid": "04c8e5a8c11cd8f245444eb52d371718fa77db1d"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 902, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}