{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NjE2NDk0", "number": 56721, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTozNDoyN1rOD8Pq-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0NToyM1rOD8P3Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDk3OTE1OnYy", "diffSide": "RIGHT", "path": "docs/reference/eql/eql-search-api.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTozNDoyOFrOGVEV8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTozNDoyOFrOGVEV8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NDQzMw==", "bodyText": "nit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  [ file where (file.name == \"cmd.exe\" and agent.id != \"my_user\") ]\n          \n          \n            \n                  [ file where file.name == \"cmd.exe\" and agent.id != \"my_user\" ]", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424744433", "createdAt": "2020-05-13T21:34:28Z", "author": {"login": "rw-access"}, "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -331,4 +388,127 @@ the https://en.wikipedia.org/wiki/Unix_time[Unix epoch], in ascending order.\n   }\n }\n ----\n+// TESTRESPONSE[s/\"took\": 6/\"took\": $body.took/]\n+\n+[[eql-search-api-sequence-ex]]\n+==== Sequence query example\n+\n+The following EQL search request matches a <<eql-sequences,sequence>> of events\n+that:\n+\n+. Start with an event with:\n++\n+--\n+* An `event.category` of `file`\n+* A `file.name` of `cmd.exe`\n+* An `agent.id` other than `my_user`\n+--\n+. Followed by an event with:\n++\n+--\n+* An `event.category` of `process`\n+* A `process.path` of `regsvr32`\n+--\n+\n+These events must also share the same `agent.id` value.\n+\n+[source,console]\n+----\n+GET my_index/_eql/search\n+{\n+  \"query\": \"\"\"\n+    sequence by agent.id\n+      [ file where (file.name == \"cmd.exe\" and agent.id != \"my_user\") ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29d6f726e2fea9d7bddf9445c618fa61d00d977"}, "originalPosition": 179}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDk4MzcwOnYy", "diffSide": "RIGHT", "path": "docs/reference/eql/syntax.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTozNjoxMVrOGVEY4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTozNjoxMVrOGVEY4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NTE4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              [ file where file.name == \"*.exe\" ] by file.path\n          \n          \n            \n              [ file where file.extension == \"exe\" ] by file.path", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424745187", "createdAt": "2020-05-13T21:36:11Z", "author": {"login": "rw-access"}, "path": "docs/reference/eql/syntax.asciidoc", "diffHunk": "@@ -341,6 +341,84 @@ dots (`.`), hyphens (`-`), or spaces, must be escaped using backticks (+++`+++).\n `my field`\n ----\n \n+[discrete]\n+[[eql-sequences]]\n+=== Sequences\n+\n+You can use EQL sequences to describe and match an ordered series of events.\n+Each item in a sequence is an event category and event condition,\n+surrounded by square brackets. Events are listed in ascending chronological\n+order, with the most recent event listed last.\n+\n+[source,eql]\n+----\n+sequence\n+  [ event_category_1 where condition_1 ]\n+  [ event_category_2 where condition_2 ]\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following EQL query matches this series of ordered events:\n+\n+. Start with an event with:\n++\n+--\n+* An event category of `file`\n+* A `file.name` that ends with `.exe`\n+--\n+. Followed by an event with an event category of `process`\n+\n+[source,eql]\n+----\n+sequence\n+  [ file where file.name == \"*.exe\" ]\n+  [ process where true ]\n+----\n+====\n+\n+You can use the `by` keyword with sequences to only match events that share the\n+same field values. If a field value should be shared across all events, you\n+can use `sequence by`.\n+\n+[source,eql]\n+----\n+sequence by field_foo\n+  [ event_category_1 where condition_1 ] by field_baz\n+  [ event_category_2 where condition_2 ] by field_bar\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following sequence uses the `by` keyword to constrain matching events to:\n+\n+* Events with same `user.name` value\n+* `file` events with a `file.path` value equal to the following `process`\n+   event's `process.path` value.\n+\n+[source,eql]\n+----\n+sequence\n+  [ file where file.name == \"*.exe\" ] by user.name, file.path\n+  [ process where true ] by user.name, process.path\n+----\n+\n+Because the `user.name` field is shared across all events in the sequence, it\n+can be included using `sequence by`. The following sequence is equivalent to the\n+prior one.\n+\n+[source,eql]\n+----\n+sequence by user.name\n+  [ file where file.name == \"*.exe\" ] by file.path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29d6f726e2fea9d7bddf9445c618fa61d00d977"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDk4NDQwOnYy", "diffSide": "RIGHT", "path": "docs/reference/eql/syntax.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTozNjozMFrOGVEZXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTozNjozMFrOGVEZXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NTMxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              [ file where file.name == \"*.exe\" ] by user.name, file.path\n          \n          \n            \n              [ file where file.extension == \"exe\" ] by user.name, file.path", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424745310", "createdAt": "2020-05-13T21:36:30Z", "author": {"login": "rw-access"}, "path": "docs/reference/eql/syntax.asciidoc", "diffHunk": "@@ -341,6 +341,84 @@ dots (`.`), hyphens (`-`), or spaces, must be escaped using backticks (+++`+++).\n `my field`\n ----\n \n+[discrete]\n+[[eql-sequences]]\n+=== Sequences\n+\n+You can use EQL sequences to describe and match an ordered series of events.\n+Each item in a sequence is an event category and event condition,\n+surrounded by square brackets. Events are listed in ascending chronological\n+order, with the most recent event listed last.\n+\n+[source,eql]\n+----\n+sequence\n+  [ event_category_1 where condition_1 ]\n+  [ event_category_2 where condition_2 ]\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following EQL query matches this series of ordered events:\n+\n+. Start with an event with:\n++\n+--\n+* An event category of `file`\n+* A `file.name` that ends with `.exe`\n+--\n+. Followed by an event with an event category of `process`\n+\n+[source,eql]\n+----\n+sequence\n+  [ file where file.name == \"*.exe\" ]\n+  [ process where true ]\n+----\n+====\n+\n+You can use the `by` keyword with sequences to only match events that share the\n+same field values. If a field value should be shared across all events, you\n+can use `sequence by`.\n+\n+[source,eql]\n+----\n+sequence by field_foo\n+  [ event_category_1 where condition_1 ] by field_baz\n+  [ event_category_2 where condition_2 ] by field_bar\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following sequence uses the `by` keyword to constrain matching events to:\n+\n+* Events with same `user.name` value\n+* `file` events with a `file.path` value equal to the following `process`\n+   event's `process.path` value.\n+\n+[source,eql]\n+----\n+sequence\n+  [ file where file.name == \"*.exe\" ] by user.name, file.path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29d6f726e2fea9d7bddf9445c618fa61d00d977"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDk5NzAyOnYy", "diffSide": "RIGHT", "path": "docs/reference/eql/eql-search-api.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0MDo1MlrOGVEhQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0MDo1MlrOGVEhQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NzMzMQ==", "bodyText": "Question about this @costin: do we use scoring at all right now? I assumed everything was wrapped in bool/filter so we wouldn't get a scre", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424747331", "createdAt": "2020-05-13T21:40:52Z", "author": {"login": "rw-access"}, "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -199,29 +199,82 @@ Returned values are:\n --\n =====\n \n+`sequences`::\n+(array of objects)\n+Contains event sequences matching the query. Each object represents a\n+matching sequence. This parameter is only returned for EQL queries containing\n+a <<eql-sequences,sequence>>.\n++\n+.Properties of `sequences` objects\n+[%collapsible%open]\n+=====\n+`join_keys`::\n+(array of strings)\n+Shared field values used to constrain matches in the sequence. These are defined\n+using the <<eql-sequences,`by` keyword>> in the EQL query syntax. This\n+parameter is only returned for EQL queries containing a\n+<<eql-sequences,sequence>>.\n+\n `events`::\n (array of objects)\n-Contains returned events matching the query. Each object represents a\n+Contains events matching the query. Each object represents a\n matching event.\n +\n .Properties of `events` objects\n [%collapsible%open]\n+======\n+`_index`::\n+(string)\n+Name of the index containing the event.\n+\n+`_id`::\n+(string)\n+(string)\n+Unique identifier for the event.\n+This ID is only unique within the index.\n+\n+`_score`::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5c2d70c8975563f60a6847e9689b689a5348914"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDk5OTc1OnYy", "diffSide": "RIGHT", "path": "docs/reference/eql/syntax.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0MTo1NVrOGVEjCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0MTo1NVrOGVEjCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0Nzc4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * A `file.name` that ends with `.exe`\n          \n          \n            \n            * A `file.extension` of `exe`", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424747787", "createdAt": "2020-05-13T21:41:55Z", "author": {"login": "rw-access"}, "path": "docs/reference/eql/syntax.asciidoc", "diffHunk": "@@ -341,6 +341,84 @@ dots (`.`), hyphens (`-`), or spaces, must be escaped using backticks (+++`+++).\n `my field`\n ----\n \n+[discrete]\n+[[eql-sequences]]\n+=== Sequences\n+\n+You can use EQL sequences to describe and match an ordered series of events.\n+Each item in a sequence is an event category and event condition,\n+surrounded by square brackets. Events are listed in ascending chronological\n+order, with the most recent event listed last.\n+\n+[source,eql]\n+----\n+sequence\n+  [ event_category_1 where condition_1 ]\n+  [ event_category_2 where condition_2 ]\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following EQL query matches this series of ordered events:\n+\n+. Start with an event with:\n++\n+--\n+* An event category of `file`\n+* A `file.name` that ends with `.exe`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5c2d70c8975563f60a6847e9689b689a5348914"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTAwMTMzOnYy", "diffSide": "RIGHT", "path": "docs/reference/eql/syntax.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0MjoyMlrOGVEj6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0MzowOVrOGVElMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0ODAxMQ==", "bodyText": "Context behind these -- this is better ECS practice and should be more performant since it's not a leading wildcard match.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              [ file where file.name == \"*.exe\" ]\n          \n          \n            \n              [ file where file.extension == \"exe\" ]", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424748011", "createdAt": "2020-05-13T21:42:22Z", "author": {"login": "rw-access"}, "path": "docs/reference/eql/syntax.asciidoc", "diffHunk": "@@ -341,6 +341,84 @@ dots (`.`), hyphens (`-`), or spaces, must be escaped using backticks (+++`+++).\n `my field`\n ----\n \n+[discrete]\n+[[eql-sequences]]\n+=== Sequences\n+\n+You can use EQL sequences to describe and match an ordered series of events.\n+Each item in a sequence is an event category and event condition,\n+surrounded by square brackets. Events are listed in ascending chronological\n+order, with the most recent event listed last.\n+\n+[source,eql]\n+----\n+sequence\n+  [ event_category_1 where condition_1 ]\n+  [ event_category_2 where condition_2 ]\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following EQL query matches this series of ordered events:\n+\n+. Start with an event with:\n++\n+--\n+* An event category of `file`\n+* A `file.name` that ends with `.exe`\n+--\n+. Followed by an event with an event category of `process`\n+\n+[source,eql]\n+----\n+sequence\n+  [ file where file.name == \"*.exe\" ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5c2d70c8975563f60a6847e9689b689a5348914"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0ODMzNg==", "bodyText": "That makes sense. Thanks for catching.", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424748336", "createdAt": "2020-05-13T21:43:09Z", "author": {"login": "jrodewig"}, "path": "docs/reference/eql/syntax.asciidoc", "diffHunk": "@@ -341,6 +341,84 @@ dots (`.`), hyphens (`-`), or spaces, must be escaped using backticks (+++`+++).\n `my field`\n ----\n \n+[discrete]\n+[[eql-sequences]]\n+=== Sequences\n+\n+You can use EQL sequences to describe and match an ordered series of events.\n+Each item in a sequence is an event category and event condition,\n+surrounded by square brackets. Events are listed in ascending chronological\n+order, with the most recent event listed last.\n+\n+[source,eql]\n+----\n+sequence\n+  [ event_category_1 where condition_1 ]\n+  [ event_category_2 where condition_2 ]\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following EQL query matches this series of ordered events:\n+\n+. Start with an event with:\n++\n+--\n+* An event category of `file`\n+* A `file.name` that ends with `.exe`\n+--\n+. Followed by an event with an event category of `process`\n+\n+[source,eql]\n+----\n+sequence\n+  [ file where file.name == \"*.exe\" ]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0ODAxMQ=="}, "originalCommit": {"oid": "a5c2d70c8975563f60a6847e9689b689a5348914"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTAwOTk1OnYy", "diffSide": "RIGHT", "path": "docs/reference/eql/eql-search-api.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0NToyM1rOGVEpHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0NToyM1rOGVEpHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0OTM0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * A `process.path` of `regsvr32`\n          \n          \n            \n            * A `process.path` that contains the substring `regsvr32`", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424749343", "createdAt": "2020-05-13T21:45:23Z", "author": {"login": "rw-access"}, "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -331,4 +388,127 @@ the https://en.wikipedia.org/wiki/Unix_time[Unix epoch], in ascending order.\n   }\n }\n ----\n-// TESTRESPONSE[s/\"took\": 6/\"took\": $body.took/]\n\\ No newline at end of file\n+// TESTRESPONSE[s/\"took\": 6/\"took\": $body.took/]\n+\n+[[eql-search-api-sequence-ex]]\n+==== Sequence query example\n+\n+The following EQL search request matches a <<eql-sequences,sequence>> of events\n+that:\n+\n+. Start with an event with:\n++\n+--\n+* An `event.category` of `file`\n+* A `file.name` of `cmd.exe`\n+* An `agent.id` other than `my_user`\n+--\n+. Followed by an event with:\n++\n+--\n+* An `event.category` of `process`\n+* A `process.path` of `regsvr32`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa174ccc068b0f907b4d62b8a86eb083250908de"}, "originalPosition": 170}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 397, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}