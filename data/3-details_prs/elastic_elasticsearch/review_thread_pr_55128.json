{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNzkxNjM1", "number": 55128, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjozOTo0MFrODxoBrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMzozNlrODx7YNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzYyNjA0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjozOTo0MFrOGFMnpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjozOTo0MFrOGFMnpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwMjgyMw==", "bodyText": "Could you add class-level comment?", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408102823", "createdAt": "2020-04-14T12:39:40Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+public enum PredictedFieldType implements Writeable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54bac3378fcce7a7777b25b8c5e5e0ace8439b8e"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzYyNzEzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjozOTo1MlrOGFMoTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjozOTo1MlrOGFMoTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwMjk5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final double EPS = 1.0E-9;\n          \n          \n            \n                private static final double EPS = 1.0E-9;", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408102990", "createdAt": "2020-04-14T12:39:52Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+public enum PredictedFieldType implements Writeable {\n+\n+    STRING,\n+    NUMBER,\n+    BOOLEAN;\n+\n+    private static final double EPS = 1.0E-9;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54bac3378fcce7a7777b25b8c5e5e0ace8439b8e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzYzMDYwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjo0MDo0MlrOGFMqeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTowMTozMVrOGFTB8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwMzU0NQ==", "bodyText": "Could fromString and toString methods be next to each other so that it's easier to examine whether they are compatible?", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408103545", "createdAt": "2020-04-14T12:40:42Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+public enum PredictedFieldType implements Writeable {\n+\n+    STRING,\n+    NUMBER,\n+    BOOLEAN;\n+\n+    private static final double EPS = 1.0E-9;\n+    public static PredictedFieldType fromString(String name) {\n+        return valueOf(name.trim().toUpperCase(Locale.ROOT));\n+    }\n+\n+    public static PredictedFieldType fromStream(StreamInput in) throws IOException {\n+        return in.readEnum(PredictedFieldType.class);\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        out.writeEnum(this);\n+    }\n+\n+    @Override\n+    public String toString() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54bac3378fcce7a7777b25b8c5e5e0ace8439b8e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwNzg1Ng==", "bodyText": "I prefer to keep public static methods near the top and member methods together.\nThe class is small enough that you don't have to scroll as it is to look at both methods", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408207856", "createdAt": "2020-04-14T15:01:31Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+public enum PredictedFieldType implements Writeable {\n+\n+    STRING,\n+    NUMBER,\n+    BOOLEAN;\n+\n+    private static final double EPS = 1.0E-9;\n+    public static PredictedFieldType fromString(String name) {\n+        return valueOf(name.trim().toUpperCase(Locale.ROOT));\n+    }\n+\n+    public static PredictedFieldType fromStream(StreamInput in) throws IOException {\n+        return in.readEnum(PredictedFieldType.class);\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        out.writeEnum(this);\n+    }\n+\n+    @Override\n+    public String toString() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwMzU0NQ=="}, "originalCommit": {"oid": "54bac3378fcce7a7777b25b8c5e5e0ace8439b8e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzYzOTA3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjo0Mjo0NlrOGFMvvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjo0Mjo0NlrOGFMvvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwNDg5Mg==", "bodyText": "IMO switch(this) would result in more readable code here.", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408104892", "createdAt": "2020-04-14T12:42:46Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+public enum PredictedFieldType implements Writeable {\n+\n+    STRING,\n+    NUMBER,\n+    BOOLEAN;\n+\n+    private static final double EPS = 1.0E-9;\n+    public static PredictedFieldType fromString(String name) {\n+        return valueOf(name.trim().toUpperCase(Locale.ROOT));\n+    }\n+\n+    public static PredictedFieldType fromStream(StreamInput in) throws IOException {\n+        return in.readEnum(PredictedFieldType.class);\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        out.writeEnum(this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return name().toLowerCase(Locale.ROOT);\n+    }\n+\n+    public Object transformPredictedValue(Double value, String stringRep) {\n+        if (value == null) {\n+            return null;\n+        }\n+        if(this == STRING) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54bac3378fcce7a7777b25b8c5e5e0ace8439b8e"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzY0NzgxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjo0NDo0M1rOGFM0_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTo1NDo1M1rOGFVgUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwNjIzOQ==", "bodyText": "Can it be the case the value is greater than 1.0?", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408106239", "createdAt": "2020-04-14T12:44:43Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+public enum PredictedFieldType implements Writeable {\n+\n+    STRING,\n+    NUMBER,\n+    BOOLEAN;\n+\n+    private static final double EPS = 1.0E-9;\n+    public static PredictedFieldType fromString(String name) {\n+        return valueOf(name.trim().toUpperCase(Locale.ROOT));\n+    }\n+\n+    public static PredictedFieldType fromStream(StreamInput in) throws IOException {\n+        return in.readEnum(PredictedFieldType.class);\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        out.writeEnum(this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return name().toLowerCase(Locale.ROOT);\n+    }\n+\n+    public Object transformPredictedValue(Double value, String stringRep) {\n+        if (value == null) {\n+            return null;\n+        }\n+        if(this == STRING) {\n+            return stringRep == null ? value.toString() : stringRep;\n+        }\n+        if(this == BOOLEAN) {\n+            return (1.0 - value) < EPS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54bac3378fcce7a7777b25b8c5e5e0ace8439b8e"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI0ODQwMw==", "bodyText": "added boundary checks and an exception if it is out of bounds.", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408248403", "createdAt": "2020-04-14T15:54:53Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictedFieldType.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+public enum PredictedFieldType implements Writeable {\n+\n+    STRING,\n+    NUMBER,\n+    BOOLEAN;\n+\n+    private static final double EPS = 1.0E-9;\n+    public static PredictedFieldType fromString(String name) {\n+        return valueOf(name.trim().toUpperCase(Locale.ROOT));\n+    }\n+\n+    public static PredictedFieldType fromStream(StreamInput in) throws IOException {\n+        return in.readEnum(PredictedFieldType.class);\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        out.writeEnum(this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return name().toLowerCase(Locale.ROOT);\n+    }\n+\n+    public Object transformPredictedValue(Double value, String stringRep) {\n+        if (value == null) {\n+            return null;\n+        }\n+        if(this == STRING) {\n+            return stringRep == null ? value.toString() : stringRep;\n+        }\n+        if(this == BOOLEAN) {\n+            return (1.0 - value) < EPS;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwNjIzOQ=="}, "originalCommit": {"oid": "54bac3378fcce7a7777b25b8c5e5e0ace8439b8e"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzY1Mjg1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/ClassificationConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjo0NTo1NVrOGFM34w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjo0NTo1NVrOGFM34w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwNjk3OQ==", "bodyText": "Is it possible to unify and use predictedFieldType or predictionFieldType throughout the codebase?", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408106979", "createdAt": "2020-04-14T12:45:55Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/ClassificationConfig.java", "diffHunk": "@@ -27,15 +27,17 @@\n     public static final ParseField NUM_TOP_CLASSES = new ParseField(\"num_top_classes\");\n     public static final ParseField TOP_CLASSES_RESULTS_FIELD = new ParseField(\"top_classes_results_field\");\n     public static final ParseField NUM_TOP_FEATURE_IMPORTANCE_VALUES = new ParseField(\"num_top_feature_importance_values\");\n+    public static final ParseField PREDICTION_FIELD_TYPE = new ParseField(\"prediction_field_type\");\n     private static final Version MIN_SUPPORTED_VERSION = Version.V_7_6_0;\n \n     public static ClassificationConfig EMPTY_PARAMS =\n-        new ClassificationConfig(0, DEFAULT_RESULTS_FIELD, DEFAULT_TOP_CLASSES_RESULTS_FIELD, null);\n+        new ClassificationConfig(0, DEFAULT_RESULTS_FIELD, DEFAULT_TOP_CLASSES_RESULTS_FIELD, null, null);\n \n     private final int numTopClasses;\n     private final String topClassesResultsField;\n     private final String resultsField;\n     private final int numTopFeatureImportanceValues;\n+    private final PredictedFieldType predictedFieldType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54bac3378fcce7a7777b25b8c5e5e0ace8439b8e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzcxNzU3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsResultProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzowMTo0N1rOGFNgWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzowMTo0N1rOGFNgWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODExNzMzNg==", "bodyText": "One suggestion that would help keeping the strings \"string\", \"int\", \"bool\" in one class would be as follows:\n\nMake Classification.getPredictionFieldType method return the new PredictedFieldType enum.\nHere (i.e. in AnalyticsResultProcessor) remove the translation in lines 277-285 (maybe keep the null -> STRING translation)\nThere (i.e. in Classification) in getParams method translate the enum to appropriate string (\"string\", \"int\", \"bool\").", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408117336", "createdAt": "2020-04-14T13:01:47Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/AnalyticsResultProcessor.java", "diffHunk": "@@ -255,14 +259,36 @@ private InferenceConfig buildInferenceConfig(TargetType targetType) {\n                     .setNumTopFeatureImportanceValues(regression.getBoostedTreeParams().getNumTopFeatureImportanceValues())\n                     .build();\n             default:\n-                setAndReportFailure(ExceptionsHelper.serverError(\n+                throw ExceptionsHelper.serverError(\n                     \"process created a model with an unsupported target type [{}]\",\n                     null,\n-                    targetType));\n-                return null;\n+                    targetType);\n         }\n     }\n \n+    PredictedFieldType getPredictedFieldType(Classification classification) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54bac3378fcce7a7777b25b8c5e5e0ace8439b8e"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDcyMzA1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/put-inference.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjozOToxN1rOGFXZaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjozOToxN1rOGFXZaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI3OTQwMw==", "bodyText": "prediction_field_type\n\nNot a big deal, but these properties are typically sorted alphabetically, and this seems to fall out of that sort order.", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408279403", "createdAt": "2020-04-14T16:39:17Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/put-inference.asciidoc", "diffHunk": "@@ -382,6 +382,10 @@ include::{docdir}/ml/ml-shared.asciidoc[tag=inference-config-results-field]\n `top_classes_results_field`::::\n (Optional, string)\n include::{docdir}/ml/ml-shared.asciidoc[tag=inference-config-classification-top-classes-results-field]\n+\n+`prediction_field_type`::::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e327c18689364543e580c0ce5ec2894846938352"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5MTc4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMToyMFrOGFrGwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMToyMFrOGFrGwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjMwNA==", "bodyText": "Could areClose be used here as well for clarity?", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408602304", "createdAt": "2020-04-15T06:11:20Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+/**\n+ * The type of the predicted field.\n+ * This modifies how the predicted class values are written for classification models\n+ */\n+public enum PredictionFieldType implements Writeable {\n+\n+    STRING,\n+    NUMBER,\n+    BOOLEAN;\n+\n+    private static final double EPS = 1.0E-9;\n+\n+    public static PredictionFieldType fromString(String name) {\n+        return valueOf(name.trim().toUpperCase(Locale.ROOT));\n+    }\n+\n+    public static PredictionFieldType fromStream(StreamInput in) throws IOException {\n+        return in.readEnum(PredictionFieldType.class);\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        out.writeEnum(this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return name().toLowerCase(Locale.ROOT);\n+    }\n+\n+    public Object transformPredictedValue(Double value, String stringRep) {\n+        if (value == null) {\n+            return null;\n+        }\n+        switch(this) {\n+            case STRING:\n+                return stringRep == null ? value.toString() : stringRep;\n+            case BOOLEAN:\n+                if ((areClose(value, 1.0D) || areClose(value, 0.0D)) == false) {\n+                    throw new IllegalArgumentException(\n+                        \"Cannot transform numbers other than 0.0 or 1.0 to boolean. Provided number [\" + value + \"]\");\n+                }\n+                return (1.0D - value) <= EPS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e327c18689364543e580c0ce5ec2894846938352"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5NjcwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMzozNlrOGFrJmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMzozNlrOGFrJmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzAzNQ==", "bodyText": "s/predicted/prediction/\n?", "url": "https://github.com/elastic/elasticsearch/pull/55128#discussion_r408603035", "createdAt": "2020-04-15T06:13:36Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+/**\n+ * The type of the predicted field.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e327c18689364543e580c0ce5ec2894846938352"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1139, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}