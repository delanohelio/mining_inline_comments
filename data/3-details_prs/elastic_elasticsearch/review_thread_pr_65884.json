{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNTQ3MjY0", "number": 65884, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0NzozMFrOFA9BOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0NzozMFrOFA9BOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTQ0MDU2OnYy", "diffSide": "RIGHT", "path": "x-pack/qa/full-cluster-restart/src/test/java/org/elasticsearch/xpack/restart/FullClusterRestartIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0NzozMFrOH_fn4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0NzozMFrOH_fn4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM0MDQ0OA==", "bodyText": "nit: GET /_cluster/state/metadata/.watches would be tiny bit more efficient.", "url": "https://github.com/elastic/elasticsearch/pull/65884#discussion_r536340448", "createdAt": "2020-12-04T19:47:30Z", "author": {"login": "jakelandis"}, "path": "x-pack/qa/full-cluster-restart/src/test/java/org/elasticsearch/xpack/restart/FullClusterRestartIT.java", "diffHunk": "@@ -179,25 +179,12 @@ public void testWatcher() throws Exception {\n \n             logger.info(\"checking that the Watches index is the correct version\");\n \n-            final Request getSettingsRequest = new Request(\"GET\", \"/.watches/_settings/index.format\");\n-            getSettingsRequest.setOptions(expectWarnings(\"this request accesses system indices: [.watches], but in a future major \" +\n-                \"version, direct access to system indices will be prevented by default\"));\n-            Response settingsResponse = client().performRequest(getSettingsRequest);\n-            Map<String, Object> settingsResponseMap = entityAsMap(settingsResponse);\n-            logger.info(\"settings response map {}\", settingsResponseMap);\n-            final String concreteWatchesIndex;\n-            if (settingsResponseMap.isEmpty()) {\n-                fail(\"The security index does not have the expected setting [index.format]\");\n-            } else {\n-                concreteWatchesIndex = settingsResponseMap.keySet().iterator().next();\n-                Map<?, ?> indexSettingsMap = (Map<?, ?>) settingsResponseMap.get(concreteWatchesIndex);\n-                Map<?, ?> settingsMap = (Map<?, ?>) indexSettingsMap.get(\"settings\");\n-                logger.info(\"settings map {}\", settingsMap);\n-                if (settingsMap.containsKey(\"index\")) {\n-                    int format = Integer.parseInt(String.valueOf(((Map<?, ?>)settingsMap.get(\"index\")).get(\"format\")));\n-                    assertEquals(\"The watches index needs to be upgraded\", UPGRADE_FIELD_EXPECTED_INDEX_FORMAT_VERSION, format);\n-                }\n-            }\n+            // Verify .watches index format:\n+            var getClusterStateResponse = entityAsMap(client().performRequest(new Request(\"GET\", \"/_cluster/state\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3c185aa650a4698d8b92bf5f1bd09118544c60e"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1747, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}