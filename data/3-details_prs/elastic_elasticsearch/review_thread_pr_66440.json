{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMTM3Mjcy", "number": 66440, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzo0Nzo1NVrOFGM3Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTowMDozNFrOFGWWWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMDQ2NTE4OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzo0Nzo1NVrOIHGHeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzo1Mjo1NVrOIHGVBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMxMTE2Mg==", "bodyText": "Do we need this property, since it's final and initialised to DEFAULT_RANGE_SIZE?", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544311162", "createdAt": "2020-12-16T13:47:55Z", "author": {"login": "pugnascotia"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.util.ports;\n+\n+import org.gradle.internal.Pair;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class AvailablePortAllocator implements PortAllocator {\n+    public static final int MIN_PRIVATE_PORT = 49152;\n+    public static final int MAX_PRIVATE_PORT = 65535;\n+    public static final int DEFAULT_RANGE_SIZE = 100;\n+\n+    private final List<ReservedPortRange> reservations = new ArrayList<ReservedPortRange>();\n+    private final int rangeSize = DEFAULT_RANGE_SIZE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a6e1a3bf0a39a3c5026a8a2864531550ed5ab77"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMxNDYyOA==", "bodyText": "not at the moment. going to remove it", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544314628", "createdAt": "2020-12-16T13:52:55Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.util.ports;\n+\n+import org.gradle.internal.Pair;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class AvailablePortAllocator implements PortAllocator {\n+    public static final int MIN_PRIVATE_PORT = 49152;\n+    public static final int MAX_PRIVATE_PORT = 65535;\n+    public static final int DEFAULT_RANGE_SIZE = 100;\n+\n+    private final List<ReservedPortRange> reservations = new ArrayList<ReservedPortRange>();\n+    private final int rangeSize = DEFAULT_RANGE_SIZE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMxMTE2Mg=="}, "originalCommit": {"oid": "2a6e1a3bf0a39a3c5026a8a2864531550ed5ab77"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjAxMTU4OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxODo1ODo0OVrOIHUepA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo0MDo1MVrOIHWEGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NjQ2OA==", "bodyText": "What's the motivation for having these port ranges per-project? Why not just allocate a single big block for the entire build?", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544546468", "createdAt": "2020-12-16T18:58:49Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.util.ports;\n+\n+import org.gradle.internal.Pair;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class AvailablePortAllocator implements PortAllocator {\n+    public static final int MIN_PRIVATE_PORT = 49152;\n+    public static final int MAX_PRIVATE_PORT = 65535;\n+    public static final int DEFAULT_RANGE_SIZE = 100;\n+\n+    private final List<ReservedPortRange> reservations = new ArrayList<ReservedPortRange>();\n+\n+    private final Lock lock = new ReentrantLock();\n+\n+    private ReservedPortRangeFactory portRangeFactory = new DefaultReservedPortRangeFactory();\n+\n+    @Override\n+    public int assignPort() {\n+        try {\n+            lock.lock();\n+            return reservePort();\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n+\n+    protected Pair<Integer, Integer> getNextPortRange(int rangeNumber) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5dc49c211b48c235e25ffb65fbe8a3e4037f791"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3MjQ0Mg==", "bodyText": "I remember we introduced these ranges in gradle too, to make debugging this a bit easier. I don't have hard feelings or strong opinions here. I like the separation between projects though.", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544572442", "createdAt": "2020-12-16T19:40:51Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.util.ports;\n+\n+import org.gradle.internal.Pair;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class AvailablePortAllocator implements PortAllocator {\n+    public static final int MIN_PRIVATE_PORT = 49152;\n+    public static final int MAX_PRIVATE_PORT = 65535;\n+    public static final int DEFAULT_RANGE_SIZE = 100;\n+\n+    private final List<ReservedPortRange> reservations = new ArrayList<ReservedPortRange>();\n+\n+    private final Lock lock = new ReentrantLock();\n+\n+    private ReservedPortRangeFactory portRangeFactory = new DefaultReservedPortRangeFactory();\n+\n+    @Override\n+    public int assignPort() {\n+        try {\n+            lock.lock();\n+            return reservePort();\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n+\n+    protected Pair<Integer, Integer> getNextPortRange(int rangeNumber) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NjQ2OA=="}, "originalCommit": {"oid": "b5dc49c211b48c235e25ffb65fbe8a3e4037f791"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjAxOTQ0OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTowMDozNFrOIHUjOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTozODowOFrOIHV9aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NzY0Mg==", "bodyText": "From what I can tell assignePort and releasePort are never used. Is there something that needs to be still wired up?", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544547642", "createdAt": "2020-12-16T19:00:34Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.util.ports;\n+\n+import org.gradle.internal.Pair;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class AvailablePortAllocator implements PortAllocator {\n+    public static final int MIN_PRIVATE_PORT = 49152;\n+    public static final int MAX_PRIVATE_PORT = 65535;\n+    public static final int DEFAULT_RANGE_SIZE = 100;\n+\n+    private final List<ReservedPortRange> reservations = new ArrayList<ReservedPortRange>();\n+\n+    private final Lock lock = new ReentrantLock();\n+\n+    private ReservedPortRangeFactory portRangeFactory = new DefaultReservedPortRangeFactory();\n+\n+    @Override\n+    public int assignPort() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5dc49c211b48c235e25ffb65fbe8a3e4037f791"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3MDcyOA==", "bodyText": "kind of an oversight. I remove this as it's not used at the moment", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544570728", "createdAt": "2020-12-16T19:38:08Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.util.ports;\n+\n+import org.gradle.internal.Pair;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class AvailablePortAllocator implements PortAllocator {\n+    public static final int MIN_PRIVATE_PORT = 49152;\n+    public static final int MAX_PRIVATE_PORT = 65535;\n+    public static final int DEFAULT_RANGE_SIZE = 100;\n+\n+    private final List<ReservedPortRange> reservations = new ArrayList<ReservedPortRange>();\n+\n+    private final Lock lock = new ReentrantLock();\n+\n+    private ReservedPortRangeFactory portRangeFactory = new DefaultReservedPortRangeFactory();\n+\n+    @Override\n+    public int assignPort() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NzY0Mg=="}, "originalCommit": {"oid": "b5dc49c211b48c235e25ffb65fbe8a3e4037f791"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4517, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}