{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NjQ2MjEz", "number": 56827, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNjo1NDowOFrOD88jqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNjo1NzowNlrOD88nYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjMzMzIwOnYy", "diffSide": "RIGHT", "path": "docs/reference/snapshot-restore/apis/put-repo-api.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNjo1NDowOFrOGWMnsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODoyMzoxNFrOGWPXmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkyODYyNg==", "bodyText": "Should we just leave this out of the documentation maybe? This is a really useless setting at this point. Having it documented has led to some confusion in the past and I can't see what a user would get out of setting this to false.\n@DaveCTurner @tlrx any thoughts on this?", "url": "https://github.com/elastic/elasticsearch/pull/56827#discussion_r425928626", "createdAt": "2020-05-15T16:54:08Z", "author": {"login": "original-brownbear"}, "path": "docs/reference/snapshot-restore/apis/put-repo-api.asciidoc", "diffHunk": "@@ -0,0 +1,260 @@\n+[[put-snapshot-repo-api]]\n+=== Put snapshot repository API\n+++++\n+<titleabbrev>Put snapshot repository</titleabbrev>\n+++++\n+\n+Registers or updates a <<snapshots-register-repository,snapshot repository>>.\n+\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+----\n+\n+[[put-snapshot-repo-api-request]]\n+==== {api-request-title}\n+\n+`PUT /_snapshot/<repository>`\n+\n+`POST /_snapshot/<repository>`\n+\n+[[put-snapshot-repo-api-desc]]\n+==== {api-description-title}\n+\n+A snapshot repository must be registered before you can perform\n+<<snapshot-restore,snapshot and restore>> operations. You can use the put\n+snapshot repository API to register new repositories and update existing ones.\n+See <<snapshots-register-repository>>.\n+\n+TIP: Because snapshot formats can change between major versions of\n+{es}, we recommend registering a new snapshot repository for each major version.\n+See <<snapshot-restore-version-compatibility>>.\n+\n+[[create-snapshot-repo-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Name of the snapshot repository to register or update.\n+\n+[[put-snapshot-repo-api-query-params]]\n+==== {api-query-parms-title}\n+\n+`master_timeout`::\n+(Optional, <<time-units, time units>>) Specifies the period of time to wait for\n+a connection to the master node. If no response is received before the timeout\n+expires, the request fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `master_timeout` request\n+body parameter. If both parameters are specified, only the query parameter is\n+used.\n+\n+`timeout`::\n+(Optional, <<time-units, time units>>) Specifies the period of time to wait for\n+a response. If no response is received before the timeout expires, the request\n+fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `timeout` request body\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+`verify`::\n+(Optional, boolean)\n+If `true`, the request verifies the repository is functional on all master and\n+data nodes in the cluster. If `false`, this verification is skipped. Defaults to\n+`true`.\n++\n+You can manually perform this verification using the\n+<<snapshots-repository-verification,verify snapshot repository API>>.\n++\n+IMPORTANT: You can also specify this value using the `verify` request body\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+[role=\"child_attributes\"]\n+[[put-snapshot-repo-api-request-body]]\n+==== {api-request-body-title}\n+\n+`master_timeout`::\n+(Optional, <<time-units, time units>>)\n+Specifies the period of time to wait for\n+a connection to the master node. If no response is received before the timeout\n+expires, the request fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `master_timeout` query\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+`timeout`::\n+(Optional, <<time-units, time units>>)\n+Specifies the period of time to wait for\n+a response. If no response is received before the timeout expires, the request\n+fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `timeout` query\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+[[put-snapshot-repo-api-request-type]]\n+`type`::\n++\n+--\n+(Required, string)\n+Repository type.\n+\n+.Valid values for `type`\n+[%collapsible%open]\n+====\n+`fs`::\n+Shared file system repository. Repositories of this type use a shared file\n+system to store snapshots. This file system must accessible to all master and\n+data nodes in the cluster.\n++\n+IMPORTANT: To register a shared file system repository, you must mount the same\n+shared filesystem to the same location on all master and data nodes. This\n+location must be registered in the `path.repo` setting on all master and data\n+nodes in the cluster.\n++\n+See <<snapshots-filesystem-repository>>.\n+\n+[xpack]#`source`#::\n+Source-only repository. You can use source-only repositories to create minimal,\n+source-only snapshots that take up to 50% less space on disk.\n++\n+Source-only snapshots are only supported if the <<mapping-source-field,`_source`\n+field>> is enabled and no\n+<<request-body-search-source-filtering,source-filtering>> is applied.\n++\n+WARNING: Source-only snapshots contain stored fields and index metadata. They do\n+not include index or doc values structures and are not searchable when restored.\n+After restoring a source-only snapshot, you must <<docs-reindex,reindex>> the\n+data into a new index.\n++\n+See <<snapshots-source-only-repository>>.\n+\n+`url`::\n+URL repository. Repositories of this type are read-only\n+for the cluster. This means the cluster can retrieve or restore snapshots from\n+the repository but cannot write or create snapshots in it.\n++\n+You can use URL repositories as an alternative way to give a cluster read-only\n+access to a shared file system (`fs`) repository.\n++\n+See <<snapshots-read-only-repository>>.\n+====\n+\n+More repository types are available through these official\n+plugins:\n+\n+* {plugins}/repository-s3.html[repository-s3] for S3 repository support\n+* {plugins}/repository-hdfs.html[repository-hdfs] for HDFS repository support in\n+  Hadoop environments\n+* {plugins}/repository-azure.html[repository-azure] for Azure storage\n+  repositories\n+* {plugins}/repository-gcs.html[repository-gcs] for Google Cloud Storage\n+  repositories\n+--\n+\n+`settings`::\n++\n+--\n+(Required, object)\n+Contains settings for the repository. Valid properties for the `settings` object\n+depend on the repository type, set using the\n+<<put-snapshot-repo-api-request-type,`type`>> parameter.\n+\n+.Valid `settings` properties for `fs` repositories\n+[%collapsible%open]\n+====\n+`chunk_size`::\n+(Optional, <<byte-units,byte value>>)\n+Maximum size of files in snapshots. In snapshots, files larger than this are\n+broken down into chunks of this size or smaller. Defaults to `null` (unlimited\n+file size).\n+\n+`compress`::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eccb0d287a04e9d0ec6104b42787a99c60f7f271"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk3MzY1OQ==", "bodyText": "I'll wait for more feedback, but if we remove this, I'll also remove the reference here:\nhttps://www.elastic.co/guide/en/elasticsearch/reference/master/snapshots-register-repository.html#snapshots-filesystem-repository", "url": "https://github.com/elastic/elasticsearch/pull/56827#discussion_r425973659", "createdAt": "2020-05-15T18:23:14Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/put-repo-api.asciidoc", "diffHunk": "@@ -0,0 +1,260 @@\n+[[put-snapshot-repo-api]]\n+=== Put snapshot repository API\n+++++\n+<titleabbrev>Put snapshot repository</titleabbrev>\n+++++\n+\n+Registers or updates a <<snapshots-register-repository,snapshot repository>>.\n+\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+----\n+\n+[[put-snapshot-repo-api-request]]\n+==== {api-request-title}\n+\n+`PUT /_snapshot/<repository>`\n+\n+`POST /_snapshot/<repository>`\n+\n+[[put-snapshot-repo-api-desc]]\n+==== {api-description-title}\n+\n+A snapshot repository must be registered before you can perform\n+<<snapshot-restore,snapshot and restore>> operations. You can use the put\n+snapshot repository API to register new repositories and update existing ones.\n+See <<snapshots-register-repository>>.\n+\n+TIP: Because snapshot formats can change between major versions of\n+{es}, we recommend registering a new snapshot repository for each major version.\n+See <<snapshot-restore-version-compatibility>>.\n+\n+[[create-snapshot-repo-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Name of the snapshot repository to register or update.\n+\n+[[put-snapshot-repo-api-query-params]]\n+==== {api-query-parms-title}\n+\n+`master_timeout`::\n+(Optional, <<time-units, time units>>) Specifies the period of time to wait for\n+a connection to the master node. If no response is received before the timeout\n+expires, the request fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `master_timeout` request\n+body parameter. If both parameters are specified, only the query parameter is\n+used.\n+\n+`timeout`::\n+(Optional, <<time-units, time units>>) Specifies the period of time to wait for\n+a response. If no response is received before the timeout expires, the request\n+fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `timeout` request body\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+`verify`::\n+(Optional, boolean)\n+If `true`, the request verifies the repository is functional on all master and\n+data nodes in the cluster. If `false`, this verification is skipped. Defaults to\n+`true`.\n++\n+You can manually perform this verification using the\n+<<snapshots-repository-verification,verify snapshot repository API>>.\n++\n+IMPORTANT: You can also specify this value using the `verify` request body\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+[role=\"child_attributes\"]\n+[[put-snapshot-repo-api-request-body]]\n+==== {api-request-body-title}\n+\n+`master_timeout`::\n+(Optional, <<time-units, time units>>)\n+Specifies the period of time to wait for\n+a connection to the master node. If no response is received before the timeout\n+expires, the request fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `master_timeout` query\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+`timeout`::\n+(Optional, <<time-units, time units>>)\n+Specifies the period of time to wait for\n+a response. If no response is received before the timeout expires, the request\n+fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `timeout` query\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+[[put-snapshot-repo-api-request-type]]\n+`type`::\n++\n+--\n+(Required, string)\n+Repository type.\n+\n+.Valid values for `type`\n+[%collapsible%open]\n+====\n+`fs`::\n+Shared file system repository. Repositories of this type use a shared file\n+system to store snapshots. This file system must accessible to all master and\n+data nodes in the cluster.\n++\n+IMPORTANT: To register a shared file system repository, you must mount the same\n+shared filesystem to the same location on all master and data nodes. This\n+location must be registered in the `path.repo` setting on all master and data\n+nodes in the cluster.\n++\n+See <<snapshots-filesystem-repository>>.\n+\n+[xpack]#`source`#::\n+Source-only repository. You can use source-only repositories to create minimal,\n+source-only snapshots that take up to 50% less space on disk.\n++\n+Source-only snapshots are only supported if the <<mapping-source-field,`_source`\n+field>> is enabled and no\n+<<request-body-search-source-filtering,source-filtering>> is applied.\n++\n+WARNING: Source-only snapshots contain stored fields and index metadata. They do\n+not include index or doc values structures and are not searchable when restored.\n+After restoring a source-only snapshot, you must <<docs-reindex,reindex>> the\n+data into a new index.\n++\n+See <<snapshots-source-only-repository>>.\n+\n+`url`::\n+URL repository. Repositories of this type are read-only\n+for the cluster. This means the cluster can retrieve or restore snapshots from\n+the repository but cannot write or create snapshots in it.\n++\n+You can use URL repositories as an alternative way to give a cluster read-only\n+access to a shared file system (`fs`) repository.\n++\n+See <<snapshots-read-only-repository>>.\n+====\n+\n+More repository types are available through these official\n+plugins:\n+\n+* {plugins}/repository-s3.html[repository-s3] for S3 repository support\n+* {plugins}/repository-hdfs.html[repository-hdfs] for HDFS repository support in\n+  Hadoop environments\n+* {plugins}/repository-azure.html[repository-azure] for Azure storage\n+  repositories\n+* {plugins}/repository-gcs.html[repository-gcs] for Google Cloud Storage\n+  repositories\n+--\n+\n+`settings`::\n++\n+--\n+(Required, object)\n+Contains settings for the repository. Valid properties for the `settings` object\n+depend on the repository type, set using the\n+<<put-snapshot-repo-api-request-type,`type`>> parameter.\n+\n+.Valid `settings` properties for `fs` repositories\n+[%collapsible%open]\n+====\n+`chunk_size`::\n+(Optional, <<byte-units,byte value>>)\n+Maximum size of files in snapshots. In snapshots, files larger than this are\n+broken down into chunks of this size or smaller. Defaults to `null` (unlimited\n+file size).\n+\n+`compress`::", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkyODYyNg=="}, "originalCommit": {"oid": "eccb0d287a04e9d0ec6104b42787a99c60f7f271"}, "originalPosition": 177}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjM0MjcyOnYy", "diffSide": "RIGHT", "path": "docs/reference/snapshot-restore/apis/put-repo-api.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNjo1NzowNlrOGWMt0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODoyMjowM1rOGWPVQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkzMDE5Mg==", "bodyText": "Maybe add a sentence here, along the lines of \"Having multiple clusters write to the repository at the same time risks corrupting the contents of the repository\".", "url": "https://github.com/elastic/elasticsearch/pull/56827#discussion_r425930192", "createdAt": "2020-05-15T16:57:06Z", "author": {"login": "original-brownbear"}, "path": "docs/reference/snapshot-restore/apis/put-repo-api.asciidoc", "diffHunk": "@@ -0,0 +1,260 @@\n+[[put-snapshot-repo-api]]\n+=== Put snapshot repository API\n+++++\n+<titleabbrev>Put snapshot repository</titleabbrev>\n+++++\n+\n+Registers or updates a <<snapshots-register-repository,snapshot repository>>.\n+\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+----\n+\n+[[put-snapshot-repo-api-request]]\n+==== {api-request-title}\n+\n+`PUT /_snapshot/<repository>`\n+\n+`POST /_snapshot/<repository>`\n+\n+[[put-snapshot-repo-api-desc]]\n+==== {api-description-title}\n+\n+A snapshot repository must be registered before you can perform\n+<<snapshot-restore,snapshot and restore>> operations. You can use the put\n+snapshot repository API to register new repositories and update existing ones.\n+See <<snapshots-register-repository>>.\n+\n+TIP: Because snapshot formats can change between major versions of\n+{es}, we recommend registering a new snapshot repository for each major version.\n+See <<snapshot-restore-version-compatibility>>.\n+\n+[[create-snapshot-repo-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Name of the snapshot repository to register or update.\n+\n+[[put-snapshot-repo-api-query-params]]\n+==== {api-query-parms-title}\n+\n+`master_timeout`::\n+(Optional, <<time-units, time units>>) Specifies the period of time to wait for\n+a connection to the master node. If no response is received before the timeout\n+expires, the request fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `master_timeout` request\n+body parameter. If both parameters are specified, only the query parameter is\n+used.\n+\n+`timeout`::\n+(Optional, <<time-units, time units>>) Specifies the period of time to wait for\n+a response. If no response is received before the timeout expires, the request\n+fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `timeout` request body\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+`verify`::\n+(Optional, boolean)\n+If `true`, the request verifies the repository is functional on all master and\n+data nodes in the cluster. If `false`, this verification is skipped. Defaults to\n+`true`.\n++\n+You can manually perform this verification using the\n+<<snapshots-repository-verification,verify snapshot repository API>>.\n++\n+IMPORTANT: You can also specify this value using the `verify` request body\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+[role=\"child_attributes\"]\n+[[put-snapshot-repo-api-request-body]]\n+==== {api-request-body-title}\n+\n+`master_timeout`::\n+(Optional, <<time-units, time units>>)\n+Specifies the period of time to wait for\n+a connection to the master node. If no response is received before the timeout\n+expires, the request fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `master_timeout` query\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+`timeout`::\n+(Optional, <<time-units, time units>>)\n+Specifies the period of time to wait for\n+a response. If no response is received before the timeout expires, the request\n+fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `timeout` query\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+[[put-snapshot-repo-api-request-type]]\n+`type`::\n++\n+--\n+(Required, string)\n+Repository type.\n+\n+.Valid values for `type`\n+[%collapsible%open]\n+====\n+`fs`::\n+Shared file system repository. Repositories of this type use a shared file\n+system to store snapshots. This file system must accessible to all master and\n+data nodes in the cluster.\n++\n+IMPORTANT: To register a shared file system repository, you must mount the same\n+shared filesystem to the same location on all master and data nodes. This\n+location must be registered in the `path.repo` setting on all master and data\n+nodes in the cluster.\n++\n+See <<snapshots-filesystem-repository>>.\n+\n+[xpack]#`source`#::\n+Source-only repository. You can use source-only repositories to create minimal,\n+source-only snapshots that take up to 50% less space on disk.\n++\n+Source-only snapshots are only supported if the <<mapping-source-field,`_source`\n+field>> is enabled and no\n+<<request-body-search-source-filtering,source-filtering>> is applied.\n++\n+WARNING: Source-only snapshots contain stored fields and index metadata. They do\n+not include index or doc values structures and are not searchable when restored.\n+After restoring a source-only snapshot, you must <<docs-reindex,reindex>> the\n+data into a new index.\n++\n+See <<snapshots-source-only-repository>>.\n+\n+`url`::\n+URL repository. Repositories of this type are read-only\n+for the cluster. This means the cluster can retrieve or restore snapshots from\n+the repository but cannot write or create snapshots in it.\n++\n+You can use URL repositories as an alternative way to give a cluster read-only\n+access to a shared file system (`fs`) repository.\n++\n+See <<snapshots-read-only-repository>>.\n+====\n+\n+More repository types are available through these official\n+plugins:\n+\n+* {plugins}/repository-s3.html[repository-s3] for S3 repository support\n+* {plugins}/repository-hdfs.html[repository-hdfs] for HDFS repository support in\n+  Hadoop environments\n+* {plugins}/repository-azure.html[repository-azure] for Azure storage\n+  repositories\n+* {plugins}/repository-gcs.html[repository-gcs] for Google Cloud Storage\n+  repositories\n+--\n+\n+`settings`::\n++\n+--\n+(Required, object)\n+Contains settings for the repository. Valid properties for the `settings` object\n+depend on the repository type, set using the\n+<<put-snapshot-repo-api-request-type,`type`>> parameter.\n+\n+.Valid `settings` properties for `fs` repositories\n+[%collapsible%open]\n+====\n+`chunk_size`::\n+(Optional, <<byte-units,byte value>>)\n+Maximum size of files in snapshots. In snapshots, files larger than this are\n+broken down into chunks of this size or smaller. Defaults to `null` (unlimited\n+file size).\n+\n+`compress`::\n+(Optional, boolean)\n+If `true`, metadata files, such as index mappings and settings, are compressed\n+in snapshots. Data files are not compressed. Defaults to `true`.\n+\n+`location`::\n+(Required, string)\n+Location of the shared filesystem used to store and retrieve snapshots. This\n+location must be registered in the `path.repo` setting on all master and data\n+nodes in the cluster.\n+\n+`max_restore_bytes_per_sec`::\n+(Optional, <<byte-units,byte value>>)\n+Maximum snapshot restore rate per node. Defaults to `40mb` per second.\n+\n+`max_snapshot_bytes_per_sec`::\n+(Optional, <<byte-units,byte value>>)\n+Maximum snapshot creation rate per node. Defaults to `40mb` per second.\n+\n+`readonly`::\n+(Optional, boolean)\n+If `true`, the repository is read-only. The cluster can retrieve and restore\n+snapshots from the repository but not write to the repository or create\n+snapshots in it.\n++\n+If `false`, the cluster can write to the repository and create snapshots in it.\n+Defaults to `false`.\n++\n+TIP: If you register the same snapshot repository with multiple clusters, only\n+one cluster should have write access to the repository. Only a cluster with\n+write access can create snapshots in the repository. All other clusters\n+connected to the repository should have the `readonly` parameter set to `true`.\n+This means those clusters can retrieve or restore snapshots from the repository\n+but not create snapshots in it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eccb0d287a04e9d0ec6104b42787a99c60f7f271"}, "originalPosition": 210}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk3MzA1Ng==", "bodyText": "Thanks! Addressed with 9cecaff.", "url": "https://github.com/elastic/elasticsearch/pull/56827#discussion_r425973056", "createdAt": "2020-05-15T18:22:03Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/put-repo-api.asciidoc", "diffHunk": "@@ -0,0 +1,260 @@\n+[[put-snapshot-repo-api]]\n+=== Put snapshot repository API\n+++++\n+<titleabbrev>Put snapshot repository</titleabbrev>\n+++++\n+\n+Registers or updates a <<snapshots-register-repository,snapshot repository>>.\n+\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+----\n+\n+[[put-snapshot-repo-api-request]]\n+==== {api-request-title}\n+\n+`PUT /_snapshot/<repository>`\n+\n+`POST /_snapshot/<repository>`\n+\n+[[put-snapshot-repo-api-desc]]\n+==== {api-description-title}\n+\n+A snapshot repository must be registered before you can perform\n+<<snapshot-restore,snapshot and restore>> operations. You can use the put\n+snapshot repository API to register new repositories and update existing ones.\n+See <<snapshots-register-repository>>.\n+\n+TIP: Because snapshot formats can change between major versions of\n+{es}, we recommend registering a new snapshot repository for each major version.\n+See <<snapshot-restore-version-compatibility>>.\n+\n+[[create-snapshot-repo-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Name of the snapshot repository to register or update.\n+\n+[[put-snapshot-repo-api-query-params]]\n+==== {api-query-parms-title}\n+\n+`master_timeout`::\n+(Optional, <<time-units, time units>>) Specifies the period of time to wait for\n+a connection to the master node. If no response is received before the timeout\n+expires, the request fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `master_timeout` request\n+body parameter. If both parameters are specified, only the query parameter is\n+used.\n+\n+`timeout`::\n+(Optional, <<time-units, time units>>) Specifies the period of time to wait for\n+a response. If no response is received before the timeout expires, the request\n+fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `timeout` request body\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+`verify`::\n+(Optional, boolean)\n+If `true`, the request verifies the repository is functional on all master and\n+data nodes in the cluster. If `false`, this verification is skipped. Defaults to\n+`true`.\n++\n+You can manually perform this verification using the\n+<<snapshots-repository-verification,verify snapshot repository API>>.\n++\n+IMPORTANT: You can also specify this value using the `verify` request body\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+[role=\"child_attributes\"]\n+[[put-snapshot-repo-api-request-body]]\n+==== {api-request-body-title}\n+\n+`master_timeout`::\n+(Optional, <<time-units, time units>>)\n+Specifies the period of time to wait for\n+a connection to the master node. If no response is received before the timeout\n+expires, the request fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `master_timeout` query\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+`timeout`::\n+(Optional, <<time-units, time units>>)\n+Specifies the period of time to wait for\n+a response. If no response is received before the timeout expires, the request\n+fails and returns an error. Defaults to `30s`.\n++\n+IMPORTANT: You can also specify this value using the `timeout` query\n+parameter. If both parameters are specified, only the query parameter is used.\n+\n+[[put-snapshot-repo-api-request-type]]\n+`type`::\n++\n+--\n+(Required, string)\n+Repository type.\n+\n+.Valid values for `type`\n+[%collapsible%open]\n+====\n+`fs`::\n+Shared file system repository. Repositories of this type use a shared file\n+system to store snapshots. This file system must accessible to all master and\n+data nodes in the cluster.\n++\n+IMPORTANT: To register a shared file system repository, you must mount the same\n+shared filesystem to the same location on all master and data nodes. This\n+location must be registered in the `path.repo` setting on all master and data\n+nodes in the cluster.\n++\n+See <<snapshots-filesystem-repository>>.\n+\n+[xpack]#`source`#::\n+Source-only repository. You can use source-only repositories to create minimal,\n+source-only snapshots that take up to 50% less space on disk.\n++\n+Source-only snapshots are only supported if the <<mapping-source-field,`_source`\n+field>> is enabled and no\n+<<request-body-search-source-filtering,source-filtering>> is applied.\n++\n+WARNING: Source-only snapshots contain stored fields and index metadata. They do\n+not include index or doc values structures and are not searchable when restored.\n+After restoring a source-only snapshot, you must <<docs-reindex,reindex>> the\n+data into a new index.\n++\n+See <<snapshots-source-only-repository>>.\n+\n+`url`::\n+URL repository. Repositories of this type are read-only\n+for the cluster. This means the cluster can retrieve or restore snapshots from\n+the repository but cannot write or create snapshots in it.\n++\n+You can use URL repositories as an alternative way to give a cluster read-only\n+access to a shared file system (`fs`) repository.\n++\n+See <<snapshots-read-only-repository>>.\n+====\n+\n+More repository types are available through these official\n+plugins:\n+\n+* {plugins}/repository-s3.html[repository-s3] for S3 repository support\n+* {plugins}/repository-hdfs.html[repository-hdfs] for HDFS repository support in\n+  Hadoop environments\n+* {plugins}/repository-azure.html[repository-azure] for Azure storage\n+  repositories\n+* {plugins}/repository-gcs.html[repository-gcs] for Google Cloud Storage\n+  repositories\n+--\n+\n+`settings`::\n++\n+--\n+(Required, object)\n+Contains settings for the repository. Valid properties for the `settings` object\n+depend on the repository type, set using the\n+<<put-snapshot-repo-api-request-type,`type`>> parameter.\n+\n+.Valid `settings` properties for `fs` repositories\n+[%collapsible%open]\n+====\n+`chunk_size`::\n+(Optional, <<byte-units,byte value>>)\n+Maximum size of files in snapshots. In snapshots, files larger than this are\n+broken down into chunks of this size or smaller. Defaults to `null` (unlimited\n+file size).\n+\n+`compress`::\n+(Optional, boolean)\n+If `true`, metadata files, such as index mappings and settings, are compressed\n+in snapshots. Data files are not compressed. Defaults to `true`.\n+\n+`location`::\n+(Required, string)\n+Location of the shared filesystem used to store and retrieve snapshots. This\n+location must be registered in the `path.repo` setting on all master and data\n+nodes in the cluster.\n+\n+`max_restore_bytes_per_sec`::\n+(Optional, <<byte-units,byte value>>)\n+Maximum snapshot restore rate per node. Defaults to `40mb` per second.\n+\n+`max_snapshot_bytes_per_sec`::\n+(Optional, <<byte-units,byte value>>)\n+Maximum snapshot creation rate per node. Defaults to `40mb` per second.\n+\n+`readonly`::\n+(Optional, boolean)\n+If `true`, the repository is read-only. The cluster can retrieve and restore\n+snapshots from the repository but not write to the repository or create\n+snapshots in it.\n++\n+If `false`, the cluster can write to the repository and create snapshots in it.\n+Defaults to `false`.\n++\n+TIP: If you register the same snapshot repository with multiple clusters, only\n+one cluster should have write access to the repository. Only a cluster with\n+write access can create snapshots in the repository. All other clusters\n+connected to the repository should have the `readonly` parameter set to `true`.\n+This means those clusters can retrieve or restore snapshots from the repository\n+but not create snapshots in it.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkzMDE5Mg=="}, "originalCommit": {"oid": "eccb0d287a04e9d0ec6104b42787a99c60f7f271"}, "originalPosition": 210}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 298, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}