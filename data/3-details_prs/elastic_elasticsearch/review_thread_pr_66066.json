{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NzMzMDA5", "number": 66066, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzowNzo0OFrOFC6j_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzoxODowNlrOFGTlHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjAwOTU5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzowNzo0OFrOICTukw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoxMDo1MlrOICcxuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI5MTI4Mw==", "bodyText": "I've been meaning to fix that typo for ages, thanks :)\nMissed one:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // computing the hash code of the parent taskId as most of the time banedParents is empty.\n          \n          \n            \n                    // computing the hash code of the parent taskId as most of the time bannedParents is empty.", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r539291283", "createdAt": "2020-12-09T13:07:48Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -196,12 +202,12 @@ private void registerCancellableTask(Task task) {\n         assert oldHolder == null;\n         // Check if this task was banned before we start it. The empty check is used to avoid\n         // computing the hash code of the parent taskId as most of the time banedParents is empty.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0980d128567fb5224259e6c08fed9a6f55b17baa"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQzOTU0NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r539439544", "createdAt": "2020-12-09T16:10:52Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -196,12 +202,12 @@ private void registerCancellableTask(Task task) {\n         assert oldHolder == null;\n         // Check if this task was banned before we start it. The empty check is used to avoid\n         // computing the hash code of the parent taskId as most of the time banedParents is empty.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI5MTI4Mw=="}, "originalCommit": {"oid": "0980d128567fb5224259e6c08fed9a6f55b17baa"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjA3MjE2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzoyMTo1MlrOICUS3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoxMDoxNFrOICcvwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwMDU3Mw==", "bodyText": "Can we receive a ban for the same task on a different channel after checking that registeredChannels() == 0 but before removing the ban from the iterator (i.e. just before this line executes)? If so, that ban would be lost from bannedParents here.", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r539300573", "createdAt": "2020-12-09T13:21:52Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -692,6 +753,18 @@ protected void doRun() {\n                 }\n             });\n         }\n+\n+        // Unregister the closing channel and remove bans whose has no registered channels\n+        final Iterator<Map.Entry<TaskId, Ban>> iterator = bannedParents.entrySet().iterator();\n+        while (iterator.hasNext()) {\n+            final Map.Entry<TaskId, Ban> entry = iterator.next();\n+            final Ban ban = entry.getValue();\n+            if (ban.perChannel) {\n+                if (ban.unregisterChannel(channel) && entry.getValue().registeredChannels() == 0) {\n+                    iterator.remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0980d128567fb5224259e6c08fed9a6f55b17baa"}, "originalPosition": 235}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQzOTA0Mg==", "bodyText": "This can happen. I've tightened the synchronization in 76950a6.", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r539439042", "createdAt": "2020-12-09T16:10:14Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -692,6 +753,18 @@ protected void doRun() {\n                 }\n             });\n         }\n+\n+        // Unregister the closing channel and remove bans whose has no registered channels\n+        final Iterator<Map.Entry<TaskId, Ban>> iterator = bannedParents.entrySet().iterator();\n+        while (iterator.hasNext()) {\n+            final Map.Entry<TaskId, Ban> entry = iterator.next();\n+            final Ban ban = entry.getValue();\n+            if (ban.perChannel) {\n+                if (ban.unregisterChannel(channel) && entry.getValue().registeredChannels() == 0) {\n+                    iterator.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwMDU3Mw=="}, "originalCommit": {"oid": "0980d128567fb5224259e6c08fed9a6f55b17baa"}, "originalPosition": 235}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjEyMjIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzozMjoxMVrOICUv7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjowOTozOFrOICctqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwODAxNA==", "bodyText": "Can we assert that it's a DirectResponseChannel? Other channels do exist (in tests) so let's be strict about which ones work with this mechanism.", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r539308014", "createdAt": "2020-12-09T13:32:11Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -390,14 +396,27 @@ public int getBanCount() {\n      * This method is called when a parent task that has children is cancelled.\n      * @return a list of pending cancellable child tasks\n      */\n-    public List<CancellableTask> setBan(TaskId parentTaskId, String reason) {\n+    public List<CancellableTask> setBan(TaskId parentTaskId, String reason, TransportChannel channel) {\n         logger.trace(\"setting ban for the parent task {} {}\", parentTaskId, reason);\n-\n-        // Set the ban first, so the newly created tasks cannot be registered\n-        synchronized (banedParents) {\n-            if (lastDiscoveryNodes.nodeExists(parentTaskId.getNodeId())) {\n-                // Only set the ban if the node is the part of the cluster\n-                banedParents.put(parentTaskId, reason);\n+        if (channel.getVersion().onOrAfter(Version.V_8_0_0)) {\n+            final Ban ban = bannedParents.computeIfAbsent(parentTaskId, k -> new Ban(reason, true));\n+            assert ban.perChannel : \"not a ban per channel\";\n+            while (channel instanceof TaskTransportChannel) {\n+                channel = ((TaskTransportChannel) channel).getChannel();\n+            }\n+            if (channel instanceof TcpTransportChannel) {\n+                startTrackingChannel(((TcpTransportChannel) channel).getChannel(), ban::registerChannel);\n+            } else {\n+                // Local channel, register with a dummy tracker", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0980d128567fb5224259e6c08fed9a6f55b17baa"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQzODUwNQ==", "bodyText": "Good point, adjusted in 0f9fbee", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r539438505", "createdAt": "2020-12-09T16:09:38Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -390,14 +396,27 @@ public int getBanCount() {\n      * This method is called when a parent task that has children is cancelled.\n      * @return a list of pending cancellable child tasks\n      */\n-    public List<CancellableTask> setBan(TaskId parentTaskId, String reason) {\n+    public List<CancellableTask> setBan(TaskId parentTaskId, String reason, TransportChannel channel) {\n         logger.trace(\"setting ban for the parent task {} {}\", parentTaskId, reason);\n-\n-        // Set the ban first, so the newly created tasks cannot be registered\n-        synchronized (banedParents) {\n-            if (lastDiscoveryNodes.nodeExists(parentTaskId.getNodeId())) {\n-                // Only set the ban if the node is the part of the cluster\n-                banedParents.put(parentTaskId, reason);\n+        if (channel.getVersion().onOrAfter(Version.V_8_0_0)) {\n+            final Ban ban = bannedParents.computeIfAbsent(parentTaskId, k -> new Ban(reason, true));\n+            assert ban.perChannel : \"not a ban per channel\";\n+            while (channel instanceof TaskTransportChannel) {\n+                channel = ((TaskTransportChannel) channel).getChannel();\n+            }\n+            if (channel instanceof TcpTransportChannel) {\n+                startTrackingChannel(((TcpTransportChannel) channel).getChannel(), ban::registerChannel);\n+            } else {\n+                // Local channel, register with a dummy tracker", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwODAxNA=="}, "originalCommit": {"oid": "0980d128567fb5224259e6c08fed9a6f55b17baa"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjEzMDIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzozNDowMFrOICU0pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoxMDoyN1rOICcwbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwOTIyMw==", "bodyText": "Rather than making a new ChannelPendingTaskTracker for every banned local task, can we use the same instance each time? Also local channels can't be closed so there's no point in tracking their tasks at all: once we receive a ban on a local channel we know that it will definitely be explicitly removed, even if we also somehow receive the same ban on a remote channel too.", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r539309223", "createdAt": "2020-12-09T13:34:00Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -390,14 +396,27 @@ public int getBanCount() {\n      * This method is called when a parent task that has children is cancelled.\n      * @return a list of pending cancellable child tasks\n      */\n-    public List<CancellableTask> setBan(TaskId parentTaskId, String reason) {\n+    public List<CancellableTask> setBan(TaskId parentTaskId, String reason, TransportChannel channel) {\n         logger.trace(\"setting ban for the parent task {} {}\", parentTaskId, reason);\n-\n-        // Set the ban first, so the newly created tasks cannot be registered\n-        synchronized (banedParents) {\n-            if (lastDiscoveryNodes.nodeExists(parentTaskId.getNodeId())) {\n-                // Only set the ban if the node is the part of the cluster\n-                banedParents.put(parentTaskId, reason);\n+        if (channel.getVersion().onOrAfter(Version.V_8_0_0)) {\n+            final Ban ban = bannedParents.computeIfAbsent(parentTaskId, k -> new Ban(reason, true));\n+            assert ban.perChannel : \"not a ban per channel\";\n+            while (channel instanceof TaskTransportChannel) {\n+                channel = ((TaskTransportChannel) channel).getChannel();\n+            }\n+            if (channel instanceof TcpTransportChannel) {\n+                startTrackingChannel(((TcpTransportChannel) channel).getChannel(), ban::registerChannel);\n+            } else {\n+                // Local channel, register with a dummy tracker\n+                ban.registerChannel(new ChannelPendingTaskTracker());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0980d128567fb5224259e6c08fed9a6f55b17baa"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQzOTIxMg==", "bodyText": "see 0f9fbee", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r539439212", "createdAt": "2020-12-09T16:10:27Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -390,14 +396,27 @@ public int getBanCount() {\n      * This method is called when a parent task that has children is cancelled.\n      * @return a list of pending cancellable child tasks\n      */\n-    public List<CancellableTask> setBan(TaskId parentTaskId, String reason) {\n+    public List<CancellableTask> setBan(TaskId parentTaskId, String reason, TransportChannel channel) {\n         logger.trace(\"setting ban for the parent task {} {}\", parentTaskId, reason);\n-\n-        // Set the ban first, so the newly created tasks cannot be registered\n-        synchronized (banedParents) {\n-            if (lastDiscoveryNodes.nodeExists(parentTaskId.getNodeId())) {\n-                // Only set the ban if the node is the part of the cluster\n-                banedParents.put(parentTaskId, reason);\n+        if (channel.getVersion().onOrAfter(Version.V_8_0_0)) {\n+            final Ban ban = bannedParents.computeIfAbsent(parentTaskId, k -> new Ban(reason, true));\n+            assert ban.perChannel : \"not a ban per channel\";\n+            while (channel instanceof TaskTransportChannel) {\n+                channel = ((TaskTransportChannel) channel).getChannel();\n+            }\n+            if (channel instanceof TcpTransportChannel) {\n+                startTrackingChannel(((TcpTransportChannel) channel).getChannel(), ban::registerChannel);\n+            } else {\n+                // Local channel, register with a dummy tracker\n+                ban.registerChannel(new ChannelPendingTaskTracker());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwOTIyMw=="}, "originalCommit": {"oid": "0980d128567fb5224259e6c08fed9a6f55b17baa"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjIxNzk4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzo1MTo1OFrOICVodw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzo1MTo1OFrOICVodw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMjQ4Nw==", "bodyText": "The mismatch between tracking the Transport.Connection on the parent node and the individual TcpChannel on this node is tricksy. It's all fine I think, neither can remain open forever if the other one closes, I'm just noting for posterity that this isn't obvious and took a bit of thought.", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r539322487", "createdAt": "2020-12-09T13:51:58Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -413,12 +432,48 @@ public int getBanCount() {\n      */\n     public void removeBan(TaskId parentTaskId) {\n         logger.trace(\"removing ban for the parent task {}\", parentTaskId);\n-        banedParents.remove(parentTaskId);\n+        bannedParents.remove(parentTaskId);\n     }\n \n     // for testing\n     public Set<TaskId> getBannedTaskIds() {\n-        return Collections.unmodifiableSet(banedParents.keySet());\n+        return Collections.unmodifiableSet(bannedParents.keySet());\n+    }\n+\n+    private static class Ban {\n+        final String reason;\n+        final boolean perChannel; // TODO: Remove this in 8.0\n+        final Set<ChannelPendingTaskTracker> channels;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0980d128567fb5224259e6c08fed9a6f55b17baa"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjIyMjg1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzo1Mjo1OFrOICVrZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzo1Mjo1OFrOICVrZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMzIzOQ==", "bodyText": "Can be void, I think, we don't check the return value.", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r539323239", "createdAt": "2020-12-09T13:52:58Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -413,12 +432,48 @@ public int getBanCount() {\n      */\n     public void removeBan(TaskId parentTaskId) {\n         logger.trace(\"removing ban for the parent task {}\", parentTaskId);\n-        banedParents.remove(parentTaskId);\n+        bannedParents.remove(parentTaskId);\n     }\n \n     // for testing\n     public Set<TaskId> getBannedTaskIds() {\n-        return Collections.unmodifiableSet(banedParents.keySet());\n+        return Collections.unmodifiableSet(bannedParents.keySet());\n+    }\n+\n+    private static class Ban {\n+        final String reason;\n+        final boolean perChannel; // TODO: Remove this in 8.0\n+        final Set<ChannelPendingTaskTracker> channels;\n+\n+        Ban(String reason, boolean perChannel) {\n+            this.reason = reason;\n+            this.perChannel = perChannel;\n+            if (perChannel) {\n+                this.channels = new HashSet<>();\n+            } else {\n+                this.channels = Set.of();\n+            }\n+        }\n+\n+        synchronized boolean registerChannel(ChannelPendingTaskTracker channel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0980d128567fb5224259e6c08fed9a6f55b17baa"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMTU2NTcyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzoxODowNlrOIHQVaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxODoyMjoxNFrOIHTBMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ3ODU2OQ==", "bodyText": "I think we can move to drop this now and rely entirely on the channel-closing trigger. I don't think this logic ever completely worked, we could receive a task from a departing node after it had left the cluster but while it was still connected to us; moreover it might rejoin the cluster without disconnecting from us and then we'd keep on processing the task it thought it had cancelled.\n(it's still needed for BWC, it's better than nothing, but should only apply to bans that aren't tracking their own channels)", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r544478569", "createdAt": "2020-12-16T17:18:06Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -444,15 +503,15 @@ public void removeBan(TaskId parentTaskId) {\n     public void applyClusterState(ClusterChangedEvent event) {\n         lastDiscoveryNodes = event.state().getNodes();\n         if (event.nodesRemoved()) {\n-            synchronized (banedParents) {\n+            synchronized (bannedParents) {\n                 lastDiscoveryNodes = event.state().getNodes();\n                 // Remove all bans that were registered by nodes that are no longer in the cluster state", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "336a05f79b73f1877c12704277d5a8607756ca83"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUxMzExNQ==", "bodyText": "Yes, this applies to bans that are not tracked by channels (see line 512 where we check ban.getValue().perChannel == false).", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r544513115", "createdAt": "2020-12-16T18:07:57Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -444,15 +503,15 @@ public void removeBan(TaskId parentTaskId) {\n     public void applyClusterState(ClusterChangedEvent event) {\n         lastDiscoveryNodes = event.state().getNodes();\n         if (event.nodesRemoved()) {\n-            synchronized (banedParents) {\n+            synchronized (bannedParents) {\n                 lastDiscoveryNodes = event.state().getNodes();\n                 // Remove all bans that were registered by nodes that are no longer in the cluster state", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ3ODU2OQ=="}, "originalCommit": {"oid": "336a05f79b73f1877c12704277d5a8607756ca83"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUxMzU0NA==", "bodyText": "I will remove this on 8.0 once we backported this change to 7.x.", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r544513544", "createdAt": "2020-12-16T18:08:42Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -444,15 +503,15 @@ public void removeBan(TaskId parentTaskId) {\n     public void applyClusterState(ClusterChangedEvent event) {\n         lastDiscoveryNodes = event.state().getNodes();\n         if (event.nodesRemoved()) {\n-            synchronized (banedParents) {\n+            synchronized (bannedParents) {\n                 lastDiscoveryNodes = event.state().getNodes();\n                 // Remove all bans that were registered by nodes that are no longer in the cluster state", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ3ODU2OQ=="}, "originalCommit": {"oid": "336a05f79b73f1877c12704277d5a8607756ca83"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyMjU0Ng==", "bodyText": "Ah yes, you're right again.", "url": "https://github.com/elastic/elasticsearch/pull/66066#discussion_r544522546", "createdAt": "2020-12-16T18:22:14Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -444,15 +503,15 @@ public void removeBan(TaskId parentTaskId) {\n     public void applyClusterState(ClusterChangedEvent event) {\n         lastDiscoveryNodes = event.state().getNodes();\n         if (event.nodesRemoved()) {\n-            synchronized (banedParents) {\n+            synchronized (bannedParents) {\n                 lastDiscoveryNodes = event.state().getNodes();\n                 // Remove all bans that were registered by nodes that are no longer in the cluster state", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ3ODU2OQ=="}, "originalCommit": {"oid": "336a05f79b73f1877c12704277d5a8607756ca83"}, "originalPosition": 171}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4698, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}