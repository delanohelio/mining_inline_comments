{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NzYyNjA0", "number": 59676, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowMjowNVrOEO4saw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowNDoxNVrOEO4ujw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDQ0Mzk1OnYy", "diffSide": "RIGHT", "path": "docs/painless/painless-api-reference/painless-api-reference-string-sort/packages.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowMjowNVrOGyS2WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjoxODowMVrOGyTPHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MDgwOA==", "bodyText": "Please add this to the exclusions list. Check out isInternalClass as part of ContextDocGenerator. We try to exclude other internal methods here. There isn't currently a better way to do this.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455390808", "createdAt": "2020-07-15T22:02:05Z", "author": {"login": "jdconrad"}, "path": "docs/painless/painless-api-reference/painless-api-reference-string-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-ql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.ql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalQlScriptUtils]]\n+==== InternalQlScriptUtils\n+* static Number add(Number, Number)\n+* static Boolean and(Boolean, Boolean)\n+* static Number div(Number, Number)\n+* static def docValue(Map, String)\n+* static Boolean eq(Object, Object)\n+* static Boolean gt(Object, Object)\n+* static Boolean gte(Object, Object)\n+* static Boolean in(Object, List)\n+* static Boolean isNotNull(Object)\n+* static Boolean isNull(Object)\n+* static Boolean lt(Object, Object)\n+* static Boolean lte(Object, Object)\n+* static Number mod(Number, Number)\n+* static Number mul(Number, Number)\n+* static Number neg(Number)\n+* static Boolean neq(Object, Object)\n+* static Boolean not(Boolean)\n+* static boolean nullSafeFilter(Boolean)\n+* static double nullSafeSortNumeric(Number)\n+* static String nullSafeSortString(Object)\n+* static Boolean nulleq(Object, Object)\n+* static Boolean or(Boolean, Boolean)\n+* static Boolean regex(String, String)\n+* static Boolean startsWith(String, String, Boolean)\n+* static Number sub(Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5NzE0OA==", "bodyText": "Excluded.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455397148", "createdAt": "2020-07-15T22:18:01Z", "author": {"login": "stu-elastic"}, "path": "docs/painless/painless-api-reference/painless-api-reference-string-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-ql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.ql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalQlScriptUtils]]\n+==== InternalQlScriptUtils\n+* static Number add(Number, Number)\n+* static Boolean and(Boolean, Boolean)\n+* static Number div(Number, Number)\n+* static def docValue(Map, String)\n+* static Boolean eq(Object, Object)\n+* static Boolean gt(Object, Object)\n+* static Boolean gte(Object, Object)\n+* static Boolean in(Object, List)\n+* static Boolean isNotNull(Object)\n+* static Boolean isNull(Object)\n+* static Boolean lt(Object, Object)\n+* static Boolean lte(Object, Object)\n+* static Number mod(Number, Number)\n+* static Number mul(Number, Number)\n+* static Number neg(Number)\n+* static Boolean neq(Object, Object)\n+* static Boolean not(Boolean)\n+* static boolean nullSafeFilter(Boolean)\n+* static double nullSafeSortNumeric(Number)\n+* static String nullSafeSortString(Object)\n+* static Boolean nulleq(Object, Object)\n+* static Boolean or(Boolean, Boolean)\n+* static Boolean regex(String, String)\n+* static Boolean startsWith(String, String, Boolean)\n+* static Number sub(Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MDgwOA=="}, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDQ0NTQzOnYy", "diffSide": "RIGHT", "path": "docs/painless/painless-api-reference/painless-api-reference-string-sort/packages.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowMjo0M1rOGyS3RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjoxODowOFrOGyTPUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTA0NA==", "bodyText": "Please exclude these as well. These really are only meant to be used internally.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455391044", "createdAt": "2020-07-15T22:02:43Z", "author": {"login": "jdconrad"}, "path": "docs/painless/painless-api-reference/painless-api-reference-string-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5NzIwMA==", "bodyText": "Excluded.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455397200", "createdAt": "2020-07-15T22:18:08Z", "author": {"login": "stu-elastic"}, "path": "docs/painless/painless-api-reference/painless-api-reference-string-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTA0NA=="}, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDQ0Nzg4OnYy", "diffSide": "RIGHT", "path": "docs/painless/painless-api-reference/painless-api-reference-shared/packages.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowMzozN1rOGyS4ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjoxODoxNVrOGyTPjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTQyNw==", "bodyText": "More to exclude.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455391427", "createdAt": "2020-07-15T22:03:37Z", "author": {"login": "jdconrad"}, "path": "docs/painless/painless-api-reference/painless-api-reference-shared/packages.asciidoc", "diffHunk": "@@ -8642,6 +8655,14 @@ See the <<painless-api-reference-shared, Shared API>> for a high-level overview\n * ZonedDateTime withZoneSameLocal(ZoneId)\n \n \n+[[painless-api-reference-shared-ScoreScript-ExplanationHolder]]\n+==== ScoreScript.ExplanationHolder\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* void set(String)\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5NzI2Mg==", "bodyText": "Excluded.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455397262", "createdAt": "2020-07-15T22:18:15Z", "author": {"login": "stu-elastic"}, "path": "docs/painless/painless-api-reference/painless-api-reference-shared/packages.asciidoc", "diffHunk": "@@ -8642,6 +8655,14 @@ See the <<painless-api-reference-shared, Shared API>> for a high-level overview\n * ZonedDateTime withZoneSameLocal(ZoneId)\n \n \n+[[painless-api-reference-shared-ScoreScript-ExplanationHolder]]\n+==== ScoreScript.ExplanationHolder\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* void set(String)\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTQyNw=="}, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDQ0OTQzOnYy", "diffSide": "RIGHT", "path": "docs/painless/painless-api-reference/painless-api-reference-number-sort/packages.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowNDoxNVrOGyS5sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjoxODoyMVrOGyTPwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTY2NA==", "bodyText": "More to exclude.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455391664", "createdAt": "2020-07-15T22:04:15Z", "author": {"login": "jdconrad"}, "path": "docs/painless/painless-api-reference/painless-api-reference-number-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-number-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== Number Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-number-sort, Number Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-number-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-number-sort-org-elasticsearch-xpack-ql-expression-function-scalar-whitelist\"]\n+=== Number Sort API for package org.elasticsearch.xpack.ql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-number-sort, Number Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-number-sort-InternalQlScriptUtils]]\n+==== InternalQlScriptUtils\n+* static Number add(Number, Number)\n+* static Boolean and(Boolean, Boolean)\n+* static Number div(Number, Number)\n+* static def docValue(Map, String)\n+* static Boolean eq(Object, Object)\n+* static Boolean gt(Object, Object)\n+* static Boolean gte(Object, Object)\n+* static Boolean in(Object, List)\n+* static Boolean isNotNull(Object)\n+* static Boolean isNull(Object)\n+* static Boolean lt(Object, Object)\n+* static Boolean lte(Object, Object)\n+* static Number mod(Number, Number)\n+* static Number mul(Number, Number)\n+* static Number neg(Number)\n+* static Boolean neq(Object, Object)\n+* static Boolean not(Boolean)\n+* static boolean nullSafeFilter(Boolean)\n+* static double nullSafeSortNumeric(Number)\n+* static String nullSafeSortString(Object)\n+* static Boolean nulleq(Object, Object)\n+* static Boolean or(Boolean, Boolean)\n+* static Boolean regex(String, String)\n+* static Boolean startsWith(String, String, Boolean)\n+* static Number sub(Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5NzMxMg==", "bodyText": "Excluded.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455397312", "createdAt": "2020-07-15T22:18:21Z", "author": {"login": "stu-elastic"}, "path": "docs/painless/painless-api-reference/painless-api-reference-number-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-number-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== Number Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-number-sort, Number Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-number-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-number-sort-org-elasticsearch-xpack-ql-expression-function-scalar-whitelist\"]\n+=== Number Sort API for package org.elasticsearch.xpack.ql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-number-sort, Number Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-number-sort-InternalQlScriptUtils]]\n+==== InternalQlScriptUtils\n+* static Number add(Number, Number)\n+* static Boolean and(Boolean, Boolean)\n+* static Number div(Number, Number)\n+* static def docValue(Map, String)\n+* static Boolean eq(Object, Object)\n+* static Boolean gt(Object, Object)\n+* static Boolean gte(Object, Object)\n+* static Boolean in(Object, List)\n+* static Boolean isNotNull(Object)\n+* static Boolean isNull(Object)\n+* static Boolean lt(Object, Object)\n+* static Boolean lte(Object, Object)\n+* static Number mod(Number, Number)\n+* static Number mul(Number, Number)\n+* static Number neg(Number)\n+* static Boolean neq(Object, Object)\n+* static Boolean not(Boolean)\n+* static boolean nullSafeFilter(Boolean)\n+* static double nullSafeSortNumeric(Number)\n+* static String nullSafeSortString(Object)\n+* static Boolean nulleq(Object, Object)\n+* static Boolean or(Boolean, Boolean)\n+* static Boolean regex(String, String)\n+* static Boolean startsWith(String, String, Boolean)\n+* static Number sub(Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTY2NA=="}, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2246, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}