{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTc2NjI5", "number": 55474, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNjo0NDo0NVrOD0EtHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODo0MzozMVrOD0o0mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTI5NjI5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/client/ClusterAdminClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNjo0NDo0NVrOGI1OLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNjo0NDo0NVrOGI1OLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkxMzc3Mw==", "bodyText": "String, String... is really dirty I know, but it's a massive change-set to adjust this API since we use it in so many places in tests so I figured I'd keep it this way for now.", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r411913773", "createdAt": "2020-04-21T06:44:45Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/client/ClusterAdminClient.java", "diffHunk": "@@ -529,7 +529,7 @@\n     /**\n      * Delete snapshot.\n      */\n-    DeleteSnapshotRequestBuilder prepareDeleteSnapshot(String repository, String snapshot);\n+    DeleteSnapshotRequestBuilder prepareDeleteSnapshot(String repository, String... snapshot);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "151ae507f758c434ad731158542413bef4436800"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTA3MDk4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/DeleteSnapshotRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxMzozN1rOGJpaqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTozNDowMlrOGJs8-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc2ODkzNw==", "bodyText": "Can you make this use varargs instead?", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412768937", "createdAt": "2020-04-22T08:13:37Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/DeleteSnapshotRequest.java", "diffHunk": "@@ -54,8 +54,18 @@ public DeleteSnapshotRequest() {\n      * @param snapshot   snapshot name\n      */\n     public DeleteSnapshotRequest(String repository, String snapshot) {\n+        this(repository, new String[]{snapshot});\n+    }\n+\n+        /**\n+         * Constructs a new delete snapshots request with repository and snapshot name\n+         *\n+         * @param repository repository name\n+         * @param snapshots  snapshot names\n+         */\n+    public DeleteSnapshotRequest(String repository, String[] snapshots) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgyNjg3Mg==", "bodyText": "Jup done :)", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412826872", "createdAt": "2020-04-22T09:34:02Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/DeleteSnapshotRequest.java", "diffHunk": "@@ -54,8 +54,18 @@ public DeleteSnapshotRequest() {\n      * @param snapshot   snapshot name\n      */\n     public DeleteSnapshotRequest(String repository, String snapshot) {\n+        this(repository, new String[]{snapshot});\n+    }\n+\n+        /**\n+         * Constructs a new delete snapshots request with repository and snapshot name\n+         *\n+         * @param repository repository name\n+         * @param snapshots  snapshot names\n+         */\n+    public DeleteSnapshotRequest(String repository, String[] snapshots) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc2ODkzNw=="}, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTA4NTc2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/DeleteSnapshotRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxNjo0M1rOGJpjkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTozNDowOFrOGJs9PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc3MTIxOQ==", "bodyText": "use varargs here as well in case clients are using this directly (transportt client in 7.x)", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412771219", "createdAt": "2020-04-22T08:16:43Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/DeleteSnapshotRequestBuilder.java", "diffHunk": "@@ -39,8 +39,8 @@ public DeleteSnapshotRequestBuilder(ElasticsearchClient client, DeleteSnapshotAc\n     /**\n      * Constructs delete snapshot request builder with specified repository and snapshot names\n      */\n-    public DeleteSnapshotRequestBuilder(ElasticsearchClient client, DeleteSnapshotAction action, String repository, String snapshot) {\n-        super(client, action, new DeleteSnapshotRequest(repository, snapshot));\n+    public DeleteSnapshotRequestBuilder(ElasticsearchClient client, DeleteSnapshotAction action, String repository, String[] snapshots) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgyNjk0MA==", "bodyText": "done", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412826940", "createdAt": "2020-04-22T09:34:08Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/DeleteSnapshotRequestBuilder.java", "diffHunk": "@@ -39,8 +39,8 @@ public DeleteSnapshotRequestBuilder(ElasticsearchClient client, DeleteSnapshotAc\n     /**\n      * Constructs delete snapshot request builder with specified repository and snapshot names\n      */\n-    public DeleteSnapshotRequestBuilder(ElasticsearchClient client, DeleteSnapshotAction action, String repository, String snapshot) {\n-        super(client, action, new DeleteSnapshotRequest(repository, snapshot));\n+    public DeleteSnapshotRequestBuilder(ElasticsearchClient client, DeleteSnapshotAction action, String repository, String[] snapshots) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc3MTIxOQ=="}, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTEwMTMwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/client/Requests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoyMDowN1rOGJps9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTozNDoxM1rOGJs9cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc3MzYyMA==", "bodyText": "varargs", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412773620", "createdAt": "2020-04-22T08:20:07Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/client/Requests.java", "diffHunk": "@@ -502,14 +502,14 @@ public static RestoreSnapshotRequest restoreSnapshotRequest(String repository, S\n     }\n \n     /**\n-     * Deletes a snapshot\n+     * Deletes snapshots\n      *\n-     * @param snapshot   snapshot name\n+     * @param snapshots  snapshot names\n      * @param repository repository name\n      * @return delete snapshot request\n      */\n-    public static DeleteSnapshotRequest deleteSnapshotRequest(String repository, String snapshot) {\n-        return new DeleteSnapshotRequest(repository, snapshot);\n+    public static DeleteSnapshotRequest deleteSnapshotRequest(String repository, String[] snapshots) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgyNjk5Mw==", "bodyText": "done", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412826993", "createdAt": "2020-04-22T09:34:13Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/client/Requests.java", "diffHunk": "@@ -502,14 +502,14 @@ public static RestoreSnapshotRequest restoreSnapshotRequest(String repository, S\n     }\n \n     /**\n-     * Deletes a snapshot\n+     * Deletes snapshots\n      *\n-     * @param snapshot   snapshot name\n+     * @param snapshots  snapshot names\n      * @param repository repository name\n      * @return delete snapshot request\n      */\n-    public static DeleteSnapshotRequest deleteSnapshotRequest(String repository, String snapshot) {\n-        return new DeleteSnapshotRequest(repository, snapshot);\n+    public static DeleteSnapshotRequest deleteSnapshotRequest(String repository, String[] snapshots) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc3MzYyMA=="}, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTEyMjQwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/SnapshotDeletionsInProgress.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoyNDoyOVrOGJp5Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwOToyNDozNlrOGKfp8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc3NjgwNw==", "bodyText": "why did you opt for having one entry for multiple snapshots? Should we rather have one entry per snapshot that is to be deleted?\nIf we build it that way, could it allow us to queue up multiple deletes in the future?", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412776807", "createdAt": "2020-04-22T08:24:29Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/cluster/SnapshotDeletionsInProgress.java", "diffHunk": "@@ -167,29 +173,35 @@ public String toString() {\n      * A class representing a snapshot deletion request entry in the cluster state.\n      */\n     public static final class Entry implements Writeable, RepositoryOperation {\n-        private final Snapshot snapshot;\n+        private final List<SnapshotId> snapshots;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxOTE1NQ==", "bodyText": "why did you opt for having one entry for multiple snapshots?\n\nI thought about that actually. What I didn't like about it, was that it introduced quite a bit of duplication in what is stored in the cluster state. We'd be adding a bunch of deletes with the same start time, repository and generation to then batch them up again when it comes to running the actual delete.\n\nIf we build it that way, could it allow us to queue up multiple deletes in the future?\n\nI don't think that makes things easier for queuing up deletes. My thinking is this:\nA delete will always move us from a set of snapshots to another set of snapshots and move the repository generation ahead by 1. It has a defined point in time where it starts (delete entry is processed in the cluster state) and a defined repository state from which it starts. We cannot add to the delete while it is running against the repo as that's an atomic operation also.\nSo if we were to add deletes by just adding entries, then we'll have to queue up new deletes at a generation higher than the lowest generation of existing deletes (the lowest generation is already processing in the repository so we can't add to it).\n=> I figured I'd rather be explicit about how deletes get batched together than do some implicit magic around the repository generations here.\nWith the way it is now, we can queue up deletes very nicely IMO: If there is only a single delete entry in the CS, we add a new entry because that one is already processing on the repo. If there are multiple delete entries we can add the additional snapshots we want to delete to the second one (that we know isn't processing yet).", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412819155", "createdAt": "2020-04-22T09:22:53Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/cluster/SnapshotDeletionsInProgress.java", "diffHunk": "@@ -167,29 +173,35 @@ public String toString() {\n      * A class representing a snapshot deletion request entry in the cluster state.\n      */\n     public static final class Entry implements Writeable, RepositoryOperation {\n-        private final Snapshot snapshot;\n+        private final List<SnapshotId> snapshots;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc3NjgwNw=="}, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY1NzU4NQ==", "bodyText": "ok, makes sense", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r413657585", "createdAt": "2020-04-23T09:24:36Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/cluster/SnapshotDeletionsInProgress.java", "diffHunk": "@@ -167,29 +173,35 @@ public String toString() {\n      * A class representing a snapshot deletion request entry in the cluster state.\n      */\n     public static final class Entry implements Writeable, RepositoryOperation {\n-        private final Snapshot snapshot;\n+        private final List<SnapshotId> snapshots;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc3NjgwNw=="}, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTE5NzMxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODo0MDowMlrOGJql4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODo1OTo0MlrOGJresw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc4ODE5NA==", "bodyText": "do we need to throw a Concurrent...Exception in case where there is SnapshotsInProgress.Entry but we did not look at aborting it?", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412788194", "createdAt": "2020-04-22T08:40:02Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -993,8 +999,23 @@ public void deleteSnapshot(final String repositoryName, final String snapshotNam\n \n             @Override\n             public ClusterState execute(ClusterState currentState) {\n+                if (snapshotNames.size() > 1 && currentState.nodes().getMinNodeVersion().before(MULTI_DELETE_VERSION)) {\n+                    throw new IllegalArgumentException(\"Deleting multiple snapshots in a single request is only supported in version [ \"\n+                            + MULTI_DELETE_VERSION + \"] but cluster contained node of version [\" + currentState.nodes().getMinNodeVersion()\n+                            + \"]\");\n+                }\n                 final SnapshotsInProgress snapshots = currentState.custom(SnapshotsInProgress.TYPE);\n-                final SnapshotsInProgress.Entry snapshotEntry = findInProgressSnapshot(snapshots, snapshotName, repositoryName);\n+                final SnapshotsInProgress.Entry snapshotEntry;\n+                if (snapshotNames.size() == 1) {\n+                    final String snapshotName = snapshotNames.iterator().next();\n+                    if (Regex.isSimpleMatchPattern(snapshotName)) {\n+                        snapshotEntry = null;\n+                    } else {\n+                        snapshotEntry = findInProgressSnapshot(snapshots, snapshotName, repositoryName);\n+                    }\n+                } else {\n+                    snapshotEntry = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgwMjczOQ==", "bodyText": "We do that check in deleteCompletedSnapshots so we don't need it here.\nTechnically we could add it here as well, but now that we cache RepositoryData it wouldn't do much to duplicate it here (we have to run it again before putting the delete entry into the CS anyway) except for saving a noop CS update task in case of a concurrent snapshot. -> I figured I'd not duplicate logic.", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412802739", "createdAt": "2020-04-22T08:59:42Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -993,8 +999,23 @@ public void deleteSnapshot(final String repositoryName, final String snapshotNam\n \n             @Override\n             public ClusterState execute(ClusterState currentState) {\n+                if (snapshotNames.size() > 1 && currentState.nodes().getMinNodeVersion().before(MULTI_DELETE_VERSION)) {\n+                    throw new IllegalArgumentException(\"Deleting multiple snapshots in a single request is only supported in version [ \"\n+                            + MULTI_DELETE_VERSION + \"] but cluster contained node of version [\" + currentState.nodes().getMinNodeVersion()\n+                            + \"]\");\n+                }\n                 final SnapshotsInProgress snapshots = currentState.custom(SnapshotsInProgress.TYPE);\n-                final SnapshotsInProgress.Entry snapshotEntry = findInProgressSnapshot(snapshots, snapshotName, repositoryName);\n+                final SnapshotsInProgress.Entry snapshotEntry;\n+                if (snapshotNames.size() == 1) {\n+                    final String snapshotName = snapshotNames.iterator().next();\n+                    if (Regex.isSimpleMatchPattern(snapshotName)) {\n+                        snapshotEntry = null;\n+                    } else {\n+                        snapshotEntry = findInProgressSnapshot(snapshots, snapshotName, repositoryName);\n+                    }\n+                } else {\n+                    snapshotEntry = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc4ODE5NA=="}, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTIwNTUzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODo0MTo0NVrOGJqqtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTozMzozN1rOGJs7yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc4OTQzMQ==", "bodyText": "do we need a set? Isn't there a risk that we're adding the same item multiple times if there are overlapping wildcards?", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412789431", "createdAt": "2020-04-22T08:41:45Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1109,6 +1118,30 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n         });\n     }\n \n+    private static List<SnapshotId> matchingSnapshotIds(RepositoryData repositoryData, Collection<String> snapshotsOrPatterns,\n+                                                        String repositoryName) {\n+        final Map<String, SnapshotId> allSnapshotIds = repositoryData.getSnapshotIds().stream().collect(\n+                Collectors.toMap(SnapshotId::getName, Function.identity()));\n+        final List<SnapshotId> foundSnapshots = new ArrayList<>();\n+        for (String snapshotOrPattern : snapshotsOrPatterns) {\n+            if (Regex.isSimpleMatchPattern(snapshotOrPattern) == false) {\n+                final SnapshotId foundId = allSnapshotIds.get(snapshotOrPattern);\n+                if (foundId == null) {\n+                    throw new SnapshotMissingException(repositoryName, snapshotOrPattern);\n+                } else {\n+                    foundSnapshots.add(allSnapshotIds.get(snapshotOrPattern));\n+                }\n+            } else {\n+                for (Map.Entry<String, SnapshotId> entry : allSnapshotIds.entrySet()) {\n+                    if (Regex.simpleMatch(snapshotOrPattern, entry.getKey())) {\n+                        foundSnapshots.add(entry.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgyNjU3MA==", "bodyText": "Right ... my bad fixed + added an assertion and test that would've tripped it to cover this.", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412826570", "createdAt": "2020-04-22T09:33:37Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1109,6 +1118,30 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n         });\n     }\n \n+    private static List<SnapshotId> matchingSnapshotIds(RepositoryData repositoryData, Collection<String> snapshotsOrPatterns,\n+                                                        String repositoryName) {\n+        final Map<String, SnapshotId> allSnapshotIds = repositoryData.getSnapshotIds().stream().collect(\n+                Collectors.toMap(SnapshotId::getName, Function.identity()));\n+        final List<SnapshotId> foundSnapshots = new ArrayList<>();\n+        for (String snapshotOrPattern : snapshotsOrPatterns) {\n+            if (Regex.isSimpleMatchPattern(snapshotOrPattern) == false) {\n+                final SnapshotId foundId = allSnapshotIds.get(snapshotOrPattern);\n+                if (foundId == null) {\n+                    throw new SnapshotMissingException(repositoryName, snapshotOrPattern);\n+                } else {\n+                    foundSnapshots.add(allSnapshotIds.get(snapshotOrPattern));\n+                }\n+            } else {\n+                for (Map.Entry<String, SnapshotId> entry : allSnapshotIds.entrySet()) {\n+                    if (Regex.simpleMatch(snapshotOrPattern, entry.getKey())) {\n+                        foundSnapshots.add(entry.getValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc4OTQzMQ=="}, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTIxMzcwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/slm/SnapshotRetentionTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODo0MzozMVrOGJqvnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODo0MzozMVrOGJqvnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc5MDY4NQ==", "bodyText": "add a note that this should only be done once all nodes are on >= minVersion.", "url": "https://github.com/elastic/elasticsearch/pull/55474#discussion_r412790685", "createdAt": "2020-04-22T08:43:31Z", "author": {"login": "ywelsch"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/slm/SnapshotRetentionTask.java", "diffHunk": "@@ -362,6 +362,7 @@ void deleteSnapshots(Map<String, List<SnapshotInfo>> snapshotsToDelete,\n             for (SnapshotInfo info : snapshots) {\n                 final String policyId = getPolicyId(info);\n                 final long deleteStartTime = nowNanoSupplier.getAsLong();\n+                // TODO: Use snapshot multi-delete instead of this loop", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c413dd983b5b316bdaf6daf0bc9cfb19714c90f1"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2846, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}