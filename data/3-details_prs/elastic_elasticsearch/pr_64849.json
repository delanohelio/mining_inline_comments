{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MzYxOTk2", "number": 64849, "title": "[ML] Truncate long audit messages", "bodyText": "ML notification indices that do not have the ignore_above parameter added in #64570 are susceptible to an issue where the keyword field can be longer than the 32766 bytes allowed by Lucene. This change limits the length of the message so that bug is never triggered.\nFor discussion\nThis approach isn't the only way to fix the problem -the existing index mappings could be updated- and is not required for new indices with the ignore_above parameter so is truncating the best solution?\nI argue that an audit message probably isn't worth reading past 8191 chars as the useful information is at the start of the message and the remainder will be computer generated.\nFor context english words contain on average 4.7 characters so 8191 chars ~ 1742 words, longer than most of the reports I wrote at university and you wouldn't want to read them to the end.", "createdAt": "2020-11-10T09:51:34Z", "url": "https://github.com/elastic/elasticsearch/pull/64849", "merged": true, "mergeCommit": {"oid": "26b04c1ab9b3f106dcac5ecaadc7917d9f111207"}, "closed": true, "closedAt": "2020-11-18T10:34:49Z", "author": {"login": "davidkyle"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbGhMwgBqjM5NzgwODAxMDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddq8yhgBqjQwMDk3MTY2ODU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2bd139aca29ebdca9237d220fd4ef8964f39f6fb", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/2bd139aca29ebdca9237d220fd4ef8964f39f6fb", "committedDate": "2020-11-10T09:36:47Z", "message": "Truncate audit messages at 8191 characters"}, "afterCommit": {"oid": "0298f8e2ee5a41cbe8af801a89e6c056cd0ebe54", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/0298f8e2ee5a41cbe8af801a89e6c056cd0ebe54", "committedDate": "2020-11-10T10:08:26Z", "message": "Truncate audit messages at 8191 characters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MDc5NzU1", "url": "https://github.com/elastic/elasticsearch/pull/64849#pullrequestreview-529079755", "createdAt": "2020-11-12T13:22:49Z", "commit": {"oid": "011a97019852f919bd8bd1afd231a009ec7dd4b5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMTMyNjU3", "url": "https://github.com/elastic/elasticsearch/pull/64849#pullrequestreview-531132657", "createdAt": "2020-11-16T09:11:42Z", "commit": {"oid": "011a97019852f919bd8bd1afd231a009ec7dd4b5"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOToxMTo0M1rOHzulLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOToxNTo0MlrOHzu1Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwMjYwNQ==", "bodyText": "Could you explain what is the value of this assertion given that you check this condition in the line above?", "url": "https://github.com/elastic/elasticsearch/pull/64849#discussion_r524002605", "createdAt": "2020-11-16T09:11:43Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditMessage.java", "diffHunk": "@@ -95,7 +96,13 @@ public XContentBuilder toXContent(XContentBuilder builder, ToXContent.Params par\n         if (resourceId != null) {\n             builder.field(getResourceField(), resourceId);\n         }\n-        builder.field(MESSAGE.getPreferredName(), message.substring(0, Math.min(message.length(), MAX_AUDIT_MESSAGE_CHARS)));\n+\n+        if (message.length() > MAX_AUDIT_MESSAGE_CHARS) {\n+            assert message.length() > MAX_AUDIT_MESSAGE_CHARS : \"Audit message is unexpectedly large\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "011a97019852f919bd8bd1afd231a009ec7dd4b5"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwNTI0Nw==", "bodyText": "Let's put a blank line before each example to be able to visually tell them apart.", "url": "https://github.com/elastic/elasticsearch/pull/64849#discussion_r524005247", "createdAt": "2020-11-16T09:14:20Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditMessageTests.java", "diffHunk": "@@ -79,6 +86,67 @@ public void testNewError() {\n         assertThat(message.getNodeName(), equalTo(NODE_NAME));\n     }\n \n+    public void testLongMessageIsTruncated() throws IOException {\n+        AbstractAuditMessage longMessage = new AbstractAuditMessage(\n+            randomBoolean() ? null : randomAlphaOfLength(10),\n+            \"thisis17charslong\".repeat(490),\n+            randomFrom(Level.values()),\n+            new Date(),\n+            randomBoolean() ? null : randomAlphaOfLengthBetween(1, 20)\n+        ) {\n+            @Override\n+            public String getJobType() {\n+                return \"unused\";\n+            }\n+\n+            @Override\n+            protected String getResourceField() {\n+                return \"unused\";\n+            }\n+        };\n+\n+        assertThat(longMessage.getMessage().length(), greaterThan(AbstractAuditMessage.MAX_AUDIT_MESSAGE_CHARS));\n+\n+        // serialise the message and check the new message is truncated\n+        XContentType xContentType = randomFrom(XContentType.values());\n+        BytesReference originalXContent = XContentHelper.toXContent(longMessage, xContentType, randomBoolean());\n+        XContentParser parser = createParser(XContentFactory.xContent(xContentType), originalXContent);\n+        AbstractAuditMessage parsed = doParseInstance(parser);\n+        assertThat(parsed.getMessage().length(), equalTo(AbstractAuditMessage.MAX_AUDIT_MESSAGE_CHARS));\n+    }\n+\n+    public void testTruncateString() {\n+        String message = \"a short message short message short message short message short message\";\n+        String truncated = AbstractAuditMessage.truncateMessage(message, 20);\n+        assertEquals(\"a ... (truncated)\", truncated);\n+        assertThat(truncated.length(), lessThanOrEqualTo(20));\n+        truncated = AbstractAuditMessage.truncateMessage(message, 23);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "011a97019852f919bd8bd1afd231a009ec7dd4b5"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwNjc1NA==", "bodyText": "assertThat(..., equalTo(...)) could be used instead of assertEquals for consistency as you're already using assertThat with lessThanOrEqualTo below.", "url": "https://github.com/elastic/elasticsearch/pull/64849#discussion_r524006754", "createdAt": "2020-11-16T09:15:42Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditMessageTests.java", "diffHunk": "@@ -79,6 +86,67 @@ public void testNewError() {\n         assertThat(message.getNodeName(), equalTo(NODE_NAME));\n     }\n \n+    public void testLongMessageIsTruncated() throws IOException {\n+        AbstractAuditMessage longMessage = new AbstractAuditMessage(\n+            randomBoolean() ? null : randomAlphaOfLength(10),\n+            \"thisis17charslong\".repeat(490),\n+            randomFrom(Level.values()),\n+            new Date(),\n+            randomBoolean() ? null : randomAlphaOfLengthBetween(1, 20)\n+        ) {\n+            @Override\n+            public String getJobType() {\n+                return \"unused\";\n+            }\n+\n+            @Override\n+            protected String getResourceField() {\n+                return \"unused\";\n+            }\n+        };\n+\n+        assertThat(longMessage.getMessage().length(), greaterThan(AbstractAuditMessage.MAX_AUDIT_MESSAGE_CHARS));\n+\n+        // serialise the message and check the new message is truncated\n+        XContentType xContentType = randomFrom(XContentType.values());\n+        BytesReference originalXContent = XContentHelper.toXContent(longMessage, xContentType, randomBoolean());\n+        XContentParser parser = createParser(XContentFactory.xContent(xContentType), originalXContent);\n+        AbstractAuditMessage parsed = doParseInstance(parser);\n+        assertThat(parsed.getMessage().length(), equalTo(AbstractAuditMessage.MAX_AUDIT_MESSAGE_CHARS));\n+    }\n+\n+    public void testTruncateString() {\n+        String message = \"a short message short message short message short message short message\";\n+        String truncated = AbstractAuditMessage.truncateMessage(message, 20);\n+        assertEquals(\"a ... (truncated)\", truncated);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "011a97019852f919bd8bd1afd231a009ec7dd4b5"}, "originalPosition": 57}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "011a97019852f919bd8bd1afd231a009ec7dd4b5", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/011a97019852f919bd8bd1afd231a009ec7dd4b5", "committedDate": "2020-11-10T15:45:06Z", "message": "Append ... (truncated) when the messages is truncated\n\nAnd add assertion that the message is not over the max length"}, "afterCommit": {"oid": "e4716d65e4fa8d6018119b59bb46bcbb44496bc1", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/e4716d65e4fa8d6018119b59bb46bcbb44496bc1", "committedDate": "2020-11-16T09:49:58Z", "message": "Make test easier to read"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMTY3Nzg3", "url": "https://github.com/elastic/elasticsearch/pull/64849#pullrequestreview-531167787", "createdAt": "2020-11-16T09:56:44Z", "commit": {"oid": "e4716d65e4fa8d6018119b59bb46bcbb44496bc1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4716d65e4fa8d6018119b59bb46bcbb44496bc1", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/e4716d65e4fa8d6018119b59bb46bcbb44496bc1", "committedDate": "2020-11-16T09:49:58Z", "message": "Make test easier to read"}, "afterCommit": {"oid": "363eb46088e28040909c1837adcd2b4c034a296f", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/363eb46088e28040909c1837adcd2b4c034a296f", "committedDate": "2020-11-18T08:52:03Z", "message": "Make test easier to read"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dacc726b3aced3b5a872e56271863f5e5d057ac1", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/dacc726b3aced3b5a872e56271863f5e5d057ac1", "committedDate": "2020-11-18T09:43:14Z", "message": "Truncate audit messages at 8191 characters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb6b5b013da723e9abbf1a53919944f0fd27a16e", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/fb6b5b013da723e9abbf1a53919944f0fd27a16e", "committedDate": "2020-11-18T09:43:14Z", "message": "Append ... (truncated) when the messages is truncated\n\nAnd add assertion that the message is not over the max length"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47908c35adcd3121e4ccd3de5c0b3308dea5447e", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/47908c35adcd3121e4ccd3de5c0b3308dea5447e", "committedDate": "2020-11-18T09:43:14Z", "message": "Make test easier to read"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "363eb46088e28040909c1837adcd2b4c034a296f", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/363eb46088e28040909c1837adcd2b4c034a296f", "committedDate": "2020-11-18T08:52:03Z", "message": "Make test easier to read"}, "afterCommit": {"oid": "47908c35adcd3121e4ccd3de5c0b3308dea5447e", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/47908c35adcd3121e4ccd3de5c0b3308dea5447e", "committedDate": "2020-11-18T09:43:14Z", "message": "Make test easier to read"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1131, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}