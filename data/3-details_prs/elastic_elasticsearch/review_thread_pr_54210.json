{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzEyMjg4", "number": 54210, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzoxOTozMlrODrUTsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToyNDoxN1rODrso9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzQ4MDgwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzoxOTozMlrOF7l72g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzoxOTozMlrOF7l72g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAzMTgzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, DataFrameAnalyticsConfig> configById = new HashMap<>();\n          \n          \n            \n                    for (DataFrameAnalyticsConfig config : configs) {\n          \n          \n            \n                        configById.put(config.getId(), config);\n          \n          \n            \n                    }\n          \n          \n            \n                    Map<String, DataFrameAnalyticsConfig> configById = configs.stream().collect(Collectors.toMap(DataFrameAnalyticsConfig::getId, Function.identity()));", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398031834", "createdAt": "2020-03-25T17:19:32Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java", "diffHunk": "@@ -310,6 +318,31 @@ private static void parseHit(SearchHit hit, String configId, RetrievedStatsHolde\n         );\n     }\n \n+    private List<Stats> buildStatsWithDefaults(List<DataFrameAnalyticsConfig> configs, List<Stats> stats) {\n+        Map<String, DataFrameAnalyticsConfig> configById = new HashMap<>();\n+        for (DataFrameAnalyticsConfig config : configs) {\n+            configById.put(config.getId(), config);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef956fba8d1f59f9207b97d33ceec0f96ac6ebd3"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzUwNDEzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzoyNDo1N1rOF7mKuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDo1NjoxMlrOF8K7Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAzNTY0MQ==", "bodyText": "Why can't this and the memory usage be initialized in the stats ctor?\nthis.memoryUsage = memoryUsage == null ? new MemoryUsage(config.getId(), Instant.now(), 0) : memoryUsage;\nthis.dataCounts = dataCounts == null ? new DataCounts(config.getId()) : dataCounts;\n\nWhy do we need to set memory_usage create time to the config's create time? Is that adding value for the added complexity?\nOr maybe I am misunderstanding the Stats#getId() value...", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398035641", "createdAt": "2020-03-25T17:24:57Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java", "diffHunk": "@@ -310,6 +318,31 @@ private static void parseHit(SearchHit hit, String configId, RetrievedStatsHolde\n         );\n     }\n \n+    private List<Stats> buildStatsWithDefaults(List<DataFrameAnalyticsConfig> configs, List<Stats> stats) {\n+        Map<String, DataFrameAnalyticsConfig> configById = new HashMap<>();\n+        for (DataFrameAnalyticsConfig config : configs) {\n+            configById.put(config.getId(), config);\n+        }\n+\n+        List<Stats> statsWithDefaults = new ArrayList<>(stats.size());\n+        for (Stats statsItem : stats) {\n+            DataFrameAnalyticsConfig config = configById.get(statsItem.getId());\n+            statsWithDefaults.add(new Stats(\n+                statsItem.getId(),\n+                statsItem.getState(),\n+                statsItem.getFailureReason(),\n+                statsItem.getProgress(),\n+                statsItem.getDataCounts() == null ? new DataCounts(config.getId()) : statsItem.getDataCounts(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef956fba8d1f59f9207b97d33ceec0f96ac6ebd3"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzNzkxOQ==", "bodyText": "I agree that's too much complexity for the gain. I'll make MemoryUsage.timestamp nullable.", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398637919", "createdAt": "2020-03-26T14:56:12Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java", "diffHunk": "@@ -310,6 +318,31 @@ private static void parseHit(SearchHit hit, String configId, RetrievedStatsHolde\n         );\n     }\n \n+    private List<Stats> buildStatsWithDefaults(List<DataFrameAnalyticsConfig> configs, List<Stats> stats) {\n+        Map<String, DataFrameAnalyticsConfig> configById = new HashMap<>();\n+        for (DataFrameAnalyticsConfig config : configs) {\n+            configById.put(config.getId(), config);\n+        }\n+\n+        List<Stats> statsWithDefaults = new ArrayList<>(stats.size());\n+        for (Stats statsItem : stats) {\n+            DataFrameAnalyticsConfig config = configById.get(statsItem.getId());\n+            statsWithDefaults.add(new Stats(\n+                statsItem.getId(),\n+                statsItem.getState(),\n+                statsItem.getFailureReason(),\n+                statsItem.getProgress(),\n+                statsItem.getDataCounts() == null ? new DataCounts(config.getId()) : statsItem.getDataCounts(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAzNTY0MQ=="}, "originalCommit": {"oid": "ef956fba8d1f59f9207b97d33ceec0f96ac6ebd3"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTQ0ODg2OnYy", "diffSide": "RIGHT", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToyMDoyOVrOF8MIBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToyNjozMVrOF8Mapg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1NzU0Mw==", "bodyText": "Is this variable ever used?", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398657543", "createdAt": "2020-03-26T15:20:29Z", "author": {"login": "przemekwitek"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningIT.java", "diffHunk": "@@ -1507,7 +1508,7 @@ public void testGetDataFrameAnalyticsStats() throws Exception {\n             .setAnalysis(OutlierDetection.createDefault())\n             .build();\n \n-        execute(\n+        PutDataFrameAnalyticsResponse putConfigResponse = execute(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c80c1d76d448b51762054ebcb4816bc58d4b587c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MjMxMA==", "bodyText": "Well spotted. I ended up not using it and forgot to clean it up.", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398662310", "createdAt": "2020-03-26T15:26:31Z", "author": {"login": "dimitris-athanasiou"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningIT.java", "diffHunk": "@@ -1507,7 +1508,7 @@ public void testGetDataFrameAnalyticsStats() throws Exception {\n             .setAnalysis(OutlierDetection.createDefault())\n             .build();\n \n-        execute(\n+        PutDataFrameAnalyticsResponse putConfigResponse = execute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1NzU0Mw=="}, "originalCommit": {"oid": "c80c1d76d448b51762054ebcb4816bc58d4b587c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTQ2MjUxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/stats/MemoryUsage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToyMzoyM1rOF8MQxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToyNzowMlrOF8McXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1OTc4Mw==", "bodyText": "What prevents timestamp from being null here?", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398659783", "createdAt": "2020-03-26T15:23:23Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/stats/MemoryUsage.java", "diffHunk": "@@ -105,6 +119,7 @@ public String toString() {\n     }\n \n     public String documentId(String jobId) {\n+        assert timestamp != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c80c1d76d448b51762054ebcb4816bc58d4b587c"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2Mjc1MQ==", "bodyText": "We should only persist a MemoryUsage object we read from AnalyticsResultProcessor and those should always have a non-null timestamp.", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398662751", "createdAt": "2020-03-26T15:27:02Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/stats/MemoryUsage.java", "diffHunk": "@@ -105,6 +119,7 @@ public String toString() {\n     }\n \n     public String documentId(String jobId) {\n+        assert timestamp != null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1OTc4Mw=="}, "originalCommit": {"oid": "c80c1d76d448b51762054ebcb4816bc58d4b587c"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTQ2NzQxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToyNDoxN1rOF8MTyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToyNzo0M1rOF8Mehw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MDU1NA==", "bodyText": "Unused import?", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398660554", "createdAt": "2020-03-26T15:24:17Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java", "diffHunk": "@@ -42,10 +42,10 @@\n import org.elasticsearch.xpack.core.ml.dataframe.DataFrameAnalyticsState;\n import org.elasticsearch.xpack.core.ml.dataframe.DataFrameAnalyticsTaskState;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.AnalysisStats;\n-import org.elasticsearch.xpack.core.ml.dataframe.stats.common.DataCounts;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.Fields;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.MemoryUsage;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.classification.ClassificationStats;\n+import org.elasticsearch.xpack.core.ml.dataframe.stats.common.DataCounts;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c80c1d76d448b51762054ebcb4816bc58d4b587c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MzMwMw==", "bodyText": "It's used in line 206", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398663303", "createdAt": "2020-03-26T15:27:43Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java", "diffHunk": "@@ -42,10 +42,10 @@\n import org.elasticsearch.xpack.core.ml.dataframe.DataFrameAnalyticsState;\n import org.elasticsearch.xpack.core.ml.dataframe.DataFrameAnalyticsTaskState;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.AnalysisStats;\n-import org.elasticsearch.xpack.core.ml.dataframe.stats.common.DataCounts;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.Fields;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.MemoryUsage;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.classification.ClassificationStats;\n+import org.elasticsearch.xpack.core.ml.dataframe.stats.common.DataCounts;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MDU1NA=="}, "originalCommit": {"oid": "c80c1d76d448b51762054ebcb4816bc58d4b587c"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4098, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}