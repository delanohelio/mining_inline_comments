{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNjg3NzQ0", "number": 63708, "title": "Add new audit handler method for action responses", "bodyText": "This adds a new method to the AuditTrail that intercepts the responses of transport actions. This new method is unlike all the other existing audit methods because it is called after the action has been run (so that it has access to the response).\nIn order to facilitate the \"linking\" of the new audit event with the other existing events, the audit method receives the requestId and the authentication as arguments (in addition to the request itself and the response).\nThis is labeled non-issue because it is only the foundation upon which later features that actually print out (some) responses can be built upon.\nRelated #63221", "createdAt": "2020-10-14T22:26:40Z", "url": "https://github.com/elastic/elasticsearch/pull/63708", "merged": true, "mergeCommit": {"oid": "d967c75eb06cbc76f43232e5c5e297f9e7903213"}, "closed": true, "closedAt": "2020-12-17T19:52:14Z", "author": {"login": "albertzaharovits"}, "timelineItems": {"totalCount": 49, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSazQDgH2gAyNTAzNjg3NzQ0OmM3MTA3MjZhOWUxNWU1MWEzNTI1YTUyZTVjMDFmOGQ3ODkxMTgzYzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmsOJdAH2gAyNTAzNjg3NzQ0OmI4MWY2NDQ1NjA4NTJhNGE2ZGU2ZmFlNDE5M2FkOWU4ZDY2MmU5MTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c710726a9e15e51a3525a52e5c01f8d7891183c9", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/c710726a9e15e51a3525a52e5c01f8d7891183c9", "committedDate": "2020-10-14T10:41:23Z", "message": "Remove redundant IOException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9f2866f26767e9a520a6a3af4dc922d92b497bc", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/e9f2866f26767e9a520a6a3af4dc922d92b497bc", "committedDate": "2020-10-14T11:45:37Z", "message": "Merge branch 'master' into post_authz_audit_event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48d647eee633e193a6f2059dbee18188606039f4", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/48d647eee633e193a6f2059dbee18188606039f4", "committedDate": "2020-10-14T22:20:59Z", "message": "WIP"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MDg2Njk5", "url": "https://github.com/elastic/elasticsearch/pull/63708#pullrequestreview-509086699", "createdAt": "2020-10-15T07:23:03Z", "commit": {"oid": "48d647eee633e193a6f2059dbee18188606039f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzoyMzowM1rOHh2eeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzoyMzowM1rOHh2eeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI1NzU5Mw==", "bodyText": "the new audit method.", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r505257593", "createdAt": "2020-10-15T07:23:03Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/AuditTrail.java", "diffHunk": "@@ -47,6 +48,10 @@ void accessGranted(String requestId, Authentication authentication, String actio\n     void accessDenied(String requestId, Authentication authentication, String action, TransportRequest transportRequest,\n                       AuthorizationInfo authorizationInfo);\n \n+    // this is the only audit method that is called *after* the action executed, when the response is available\n+    void actionResponse(String requestId, Authentication authentication, String action, TransportRequest transportRequest,\n+                        TransportResponse transportResponse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d647eee633e193a6f2059dbee18188606039f4"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTQwNTQ5", "url": "https://github.com/elastic/elasticsearch/pull/63708#pullrequestreview-509140549", "createdAt": "2020-10-15T08:31:08Z", "commit": {"oid": "48d647eee633e193a6f2059dbee18188606039f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODozMTowOFrOHh7ZgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODozMTowOFrOHh7ZgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMzODI0MA==", "bodyText": "This intercepts the response for the action that is executed inside the rest handler (that do NOT go to other cluster nodes).", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r505338240", "createdAt": "2020-10-15T08:31:08Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/filter/SecurityActionFilter.java", "diffHunk": "@@ -83,25 +86,24 @@ public SecurityActionFilter(AuthenticationService authcService, AuthorizationSer\n         if (licenseState.isSecurityEnabled()) {\n             final ActionListener<Response> contextPreservingListener =\n                     ContextPreservingActionListener.wrapPreservingContext(listener, threadContext);\n+            final ActionListener<Response> postActionExecutionListener = ActionListener.delegateFailure(contextPreservingListener,\n+                    (ignore, response) -> {\n+                        String requestId = AuditUtil.extractRequestId(threadContext);\n+                        Authentication authentication = securityContext.getAuthentication();\n+                        auditTrailService.get().actionResponse(requestId, authentication, action, request, response);\n+                        contextPreservingListener.onResponse(response);\n+                    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d647eee633e193a6f2059dbee18188606039f4"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTQzNjk1", "url": "https://github.com/elastic/elasticsearch/pull/63708#pullrequestreview-509143695", "createdAt": "2020-10-15T08:34:56Z", "commit": {"oid": "48d647eee633e193a6f2059dbee18188606039f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODozNDo1NlrOHh7mpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODozNDo1NlrOHh7mpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM0MTYwNw==", "bodyText": "This intercepts the response for actions executed on other cluster nodes (when an action on the coordinating node submits requests to other nodes - or even the same node)", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r505341607", "createdAt": "2020-10-15T08:34:56Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/transport/SecurityServerTransportInterceptor.java", "diffHunk": "@@ -225,7 +237,36 @@ public void onFailure(Exception e) {\n \n                 @Override\n                 protected void doRun() throws Exception {\n-                    handler.messageReceived(request, channel, task);\n+                    handler.messageReceived(request, new TransportChannel() {\n+\n+                        @Override\n+                        public String getProfileName() {\n+                            return channel.getProfileName();\n+                        }\n+\n+                        @Override\n+                        public String getChannelType() {\n+                            return channel.getChannelType();\n+                        }\n+\n+                        @Override\n+                        public Version getVersion() {\n+                            return channel.getVersion();\n+                        }\n+\n+                        @Override\n+                        public void sendResponse(TransportResponse response) throws IOException {\n+                            String requestId = AuditUtil.extractRequestId(threadContext);\n+                            Authentication authentication = securityContext.getAuthentication();\n+                            auditTrailService.get().actionResponse(requestId, authentication, action, request, response);\n+                            channel.sendResponse(response);\n+                        }\n+\n+                        @Override\n+                        public void sendResponse(Exception exception) throws IOException {\n+                            channel.sendResponse(exception);\n+                        }\n+                    }, task);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d647eee633e193a6f2059dbee18188606039f4"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjczMzA1", "url": "https://github.com/elastic/elasticsearch/pull/63708#pullrequestreview-509273305", "createdAt": "2020-10-15T11:21:16Z", "commit": {"oid": "48d647eee633e193a6f2059dbee18188606039f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMToyMToxNlrOHiDAtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMToyMToxNlrOHiDAtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ2Mjk2NA==", "bodyText": "I haven't mentioned this as a drawback when we discussed it. I think I wasn't fully confident in my ability to clearly explain it. But this is part of the complexity and maintenance burden that I've mentioned, so I'll try to explain it here:\nIn order to pass the requestId and authentication as arguments to the new audit method, they need to be pulled from the thread context. Currently the requestId and authentication ARE present in the thread context when the listener is called with the response. But to ensure this forward we'll have to introduce an assertion (probably at this very place in the code). Even then, we cannot guarantee it because tests don't cover all the paths in an action handler: it could be that some handler stashes the thread context and calls the listener with a response (without calling another transport action, which is the usual course of action when stashing the context).\nAlternatively, we could enforce it more stringently. Instead of an assert we could hard fail (reroute the call to listener.onResponse to listener.onFailure) if we detect that the thread context has been altered.\nI favour the latter, but maybe this is overdoing it since the \"danger\" is inaccurate (missing requestId and authentication) audit logging for action responses (for which there is not concrete use case atm, but think of auditing creating API keys as an example).\nWe could also opt for assets in the minor and hard fail in the major release, similar to what we've discussed for indices privileges.\nThis is no longer true because the requestId and the authentication are now pulled from the threadContext after authorization, but before action execution, and are stored to be used as arguments to the new audit method, after the action executes.", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r505462964", "createdAt": "2020-10-15T11:21:16Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/filter/SecurityActionFilter.java", "diffHunk": "@@ -83,25 +86,24 @@ public SecurityActionFilter(AuthenticationService authcService, AuthorizationSer\n         if (licenseState.isSecurityEnabled()) {\n             final ActionListener<Response> contextPreservingListener =\n                     ContextPreservingActionListener.wrapPreservingContext(listener, threadContext);\n+            final ActionListener<Response> postActionExecutionListener = ActionListener.delegateFailure(contextPreservingListener,\n+                    (ignore, response) -> {\n+                        String requestId = AuditUtil.extractRequestId(threadContext);\n+                        Authentication authentication = securityContext.getAuthentication();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d647eee633e193a6f2059dbee18188606039f4"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3c5c3f1ff6e3f3d8cdd43d9255f12fc461cc169", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/e3c5c3f1ff6e3f3d8cdd43d9255f12fc461cc169", "committedDate": "2020-10-15T12:16:46Z", "message": "Merge branch 'master' into post_authz_audit_event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "946912741446d0017d52b7392c87a1063a29e211", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/946912741446d0017d52b7392c87a1063a29e211", "committedDate": "2020-10-15T12:30:30Z", "message": "SecurityActionFilterTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f5e54682ab7abfb8f8e4c47d9b1dd5f70ab8503", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/2f5e54682ab7abfb8f8e4c47d9b1dd5f70ab8503", "committedDate": "2020-10-15T12:40:46Z", "message": "Strict!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d88969b0c2e0454b987a5479c9080c343a289c30", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/d88969b0c2e0454b987a5479c9080c343a289c30", "committedDate": "2020-10-26T16:13:28Z", "message": "Merge branch 'master' into post_authz_audit_event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ebadb9c29daf47abdbd77a2427376037286607c", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/0ebadb9c29daf47abdbd77a2427376037286607c", "committedDate": "2020-10-26T18:25:54Z", "message": "Trash test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6ff433397a48346da425cd55fa9d08f656aea87", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/f6ff433397a48346da425cd55fa9d08f656aea87", "committedDate": "2020-10-26T21:26:35Z", "message": "SecurityActionFilter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f5623880cb6eb786b70949822e67182209b6ca9", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/9f5623880cb6eb786b70949822e67182209b6ca9", "committedDate": "2020-10-26T22:48:53Z", "message": "extract requestId and authentication before running the action"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "765493f319444bb477fd9d089361a3407524656a", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/765493f319444bb477fd9d089361a3407524656a", "committedDate": "2020-10-26T22:52:04Z", "message": "remove thrash"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf172b8f62bf93613f6848b92c4c97b78dcf5c94", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf172b8f62bf93613f6848b92c4c97b78dcf5c94", "committedDate": "2020-10-26T22:52:34Z", "message": "Merge branch 'master' into post_authz_audit_event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71790f9d14cd74bc461c4fa46b822541f7d37478", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/71790f9d14cd74bc461c4fa46b822541f7d37478", "committedDate": "2020-10-26T23:11:45Z", "message": "Security enabled guard in SecurityServerTransport"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e25903e8670d157e6bfb7fd979a5f8e703d8e9d9", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/e25903e8670d157e6bfb7fd979a5f8e703d8e9d9", "committedDate": "2020-10-27T16:22:41Z", "message": "AuthenticationServiceTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e229a88512026dcc802a6576b4ae87ede9f2369", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/6e229a88512026dcc802a6576b4ae87ede9f2369", "committedDate": "2020-10-29T12:24:09Z", "message": "AuthorizationServiceTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43f3644da4020c794f202ddfb5df74bfd6c1a99b", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/43f3644da4020c794f202ddfb5df74bfd6c1a99b", "committedDate": "2020-10-29T12:52:20Z", "message": "ServerTransportFilterTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a922aa862bd70eb0137e2e2eabc375f5dfb066ce", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/a922aa862bd70eb0137e2e2eabc375f5dfb066ce", "committedDate": "2020-10-29T14:38:35Z", "message": "SecurityActionFilterTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aada0ae266c3d2f893b581395d528e39ac1d109c", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/aada0ae266c3d2f893b581395d528e39ac1d109c", "committedDate": "2020-10-29T14:39:09Z", "message": "Merge branch 'master' into post_authz_audit_event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "655bba92ee760cdd9878808c15ef4062e91aca1f", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/655bba92ee760cdd9878808c15ef4062e91aca1f", "committedDate": "2020-10-29T23:09:59Z", "message": "More tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c031671e2aeb5fcd0fc3870792bfe120faeb845", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/8c031671e2aeb5fcd0fc3870792bfe120faeb845", "committedDate": "2020-10-29T23:23:17Z", "message": "Checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMTU3NjQ3", "url": "https://github.com/elastic/elasticsearch/pull/63708#pullrequestreview-520157647", "createdAt": "2020-10-29T23:28:23Z", "commit": {"oid": "8c031671e2aeb5fcd0fc3870792bfe120faeb845"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzoyODoyM1rOHqyMEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzoyODoyM1rOHqyMEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYyNDUyOA==", "bodyText": "Tests in this class have been modified to ensure that a requestId is set when done.", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r514624528", "createdAt": "2020-10-29T23:28:23Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/AuthenticationServiceTests.java", "diffHunk": "@@ -297,17 +299,26 @@ public void testTokenMissing() throws Exception {\n \n             Mockito.doReturn(List.of(secondRealm)).when(realms).getUnlicensedRealms();\n             Mockito.doReturn(List.of(firstRealm)).when(realms).asList();\n-            final String reqId = AuditUtil.getOrGenerateRequestId(threadContext);\n+            boolean requestIdAlreadyPresent = randomBoolean();\n+            SetOnce<String> reqId = new SetOnce<>();\n+            if (requestIdAlreadyPresent) {\n+                reqId.set(AuditUtil.getOrGenerateRequestId(threadContext));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c031671e2aeb5fcd0fc3870792bfe120faeb845"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMTU4MjMw", "url": "https://github.com/elastic/elasticsearch/pull/63708#pullrequestreview-520158230", "createdAt": "2020-10-29T23:29:59Z", "commit": {"oid": "8c031671e2aeb5fcd0fc3870792bfe120faeb845"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzozMDowMFrOHqyN_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzozMDowMFrOHqyN_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYyNTAyMQ==", "bodyText": "Similarly to the changes in the AuthenticationServiceTests, the tests in this class have been modified to assert that the requestId is set following a successful authz.", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r514625021", "createdAt": "2020-10-29T23:30:00Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java", "diffHunk": "@@ -274,7 +276,8 @@ public void setup() {\n             null, Collections.emptySet(), licenseState, new IndexNameExpressionResolver(new ThreadContext(Settings.EMPTY)));\n     }\n \n-    private void authorize(Authentication authentication, String action, TransportRequest request) {\n+    private void authorize(Authentication authentication, String action, TransportRequest request,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c031671e2aeb5fcd0fc3870792bfe120faeb845"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzAxMDA1", "url": "https://github.com/elastic/elasticsearch/pull/63708#pullrequestreview-521301005", "createdAt": "2020-11-02T02:35:30Z", "commit": {"oid": "8c031671e2aeb5fcd0fc3870792bfe120faeb845"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwMjo0NjowNFrOHr0yrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwMzowMTo1M1rOHr0-tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxNTc1Nw==", "bodyText": "Nit (kinda of): By the contract of ActionListener#delegateFailure, I'd prefer to not ignore the delegated listener. For this particular usage, it does not make any functional difference, but it feels abit strange to have (ignore, aVoid). I am also not entirely sure (this could be nothing) whether there could be any low level optimisation concerns, e.g. code compliation/rewriting, JIT, inlining etc (because one is captured in the form of method argument and the other is captured as scope variable)\nAlternatively, we could just use ActionListener#wrap if we do wanna ignore the delegated listener.", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r515715757", "createdAt": "2020-11-02T02:46:04Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/filter/SecurityActionFilter.java", "diffHunk": "@@ -83,29 +88,38 @@ public SecurityActionFilter(AuthenticationService authcService, AuthorizationSer\n         if (licenseState.isSecurityEnabled()) {\n             final ActionListener<Response> contextPreservingListener =\n                     ContextPreservingActionListener.wrapPreservingContext(listener, threadContext);\n-            ActionListener<Void> authenticatedListener = ActionListener.wrap(\n-                    (aVoid) -> chain.proceed(task, action, request, contextPreservingListener), contextPreservingListener::onFailure);\n+            final ActionListener<Void> postAuthzListener = ActionListener.delegateFailure(contextPreservingListener,\n+                    (ignore, aVoid) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c031671e2aeb5fcd0fc3870792bfe120faeb845"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxNjI2OA==", "bodyText": "Similar ignored delegate listener here. See above also.", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r515716268", "createdAt": "2020-11-02T02:49:05Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/filter/SecurityActionFilter.java", "diffHunk": "@@ -83,29 +88,38 @@ public SecurityActionFilter(AuthenticationService authcService, AuthorizationSer\n         if (licenseState.isSecurityEnabled()) {\n             final ActionListener<Response> contextPreservingListener =\n                     ContextPreservingActionListener.wrapPreservingContext(listener, threadContext);\n-            ActionListener<Void> authenticatedListener = ActionListener.wrap(\n-                    (aVoid) -> chain.proceed(task, action, request, contextPreservingListener), contextPreservingListener::onFailure);\n+            final ActionListener<Void> postAuthzListener = ActionListener.delegateFailure(contextPreservingListener,\n+                    (ignore, aVoid) -> {\n+                        // extract the requestId and the authentication from the threadContext before executing the action\n+                        final String requestId = AuditUtil.extractRequestId(threadContext);\n+                        if (requestId == null) {\n+                            contextPreservingListener.onFailure(new ElasticsearchSecurityException(\"requestId is unexpectedly missing\"));\n+                            return;\n+                        }\n+                        final Authentication authentication = securityContext.getAuthentication();\n+                        if (authentication == null) {\n+                            contextPreservingListener.onFailure(new ElasticsearchSecurityException(\"authn is unexpectedly missing\"));\n+                            return;\n+                        }\n+                        chain.proceed(task, action, request, ActionListener.delegateFailure(contextPreservingListener,\n+                                (ignore2, response) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c031671e2aeb5fcd0fc3870792bfe120faeb845"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxODQzOA==", "bodyText": "Good catch! Is this technically a bug?", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r515718438", "createdAt": "2020-11-02T02:59:51Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java", "diffHunk": "@@ -188,14 +188,15 @@ public void authorize(final Authentication authentication, final String action,\n             if (auditId == null) {\n                 // We would like to assert that there is an existing request-id, but if this is a system action, then that might not be\n                 // true because the request-id is generated during authentication\n-                if (isInternalUser(authentication.getUser()) != false) {\n+                if (isInternalUser(authentication.getUser())) {\n                     auditId = AuditUtil.getOrGenerateRequestId(threadContext);\n                 } else {\n                     auditTrailService.get().tamperedRequest(null, authentication, action, originalRequest);\n                     final String message = \"Attempt to authorize action [\" + action + \"] for [\" + authentication.getUser().principal()\n                             + \"] without an existing request-id\";\n                     assert false : message;\n                     listener.onFailure(new ElasticsearchSecurityException(message));\n+                    return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c031671e2aeb5fcd0fc3870792bfe120faeb845"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxODQ4MA==", "bodyText": "Why do we flip the logic here?", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r515718480", "createdAt": "2020-11-02T03:00:02Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java", "diffHunk": "@@ -188,14 +188,15 @@ public void authorize(final Authentication authentication, final String action,\n             if (auditId == null) {\n                 // We would like to assert that there is an existing request-id, but if this is a system action, then that might not be\n                 // true because the request-id is generated during authentication\n-                if (isInternalUser(authentication.getUser()) != false) {\n+                if (isInternalUser(authentication.getUser())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c031671e2aeb5fcd0fc3870792bfe120faeb845"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxODgzOQ==", "bodyText": "We have User#isInternal which does the same and I think this method here can be dropped.", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r515718839", "createdAt": "2020-11-02T03:01:53Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java", "diffHunk": "@@ -436,7 +437,8 @@ private TransportRequest maybeUnwrapRequest(Authentication authentication, Trans\n         return request;\n     }\n \n-    private boolean isInternalUser(User user) {\n+    // protected for tests\n+    protected static boolean isInternalUser(User user) {\n         return SystemUser.is(user) || XPackUser.is(user) || XPackSecurityUser.is(user) || AsyncSearchUser.is(user);\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c031671e2aeb5fcd0fc3870792bfe120faeb845"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b514c0c9f048fc1a886748a57ffdc741f02e4584", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/b514c0c9f048fc1a886748a57ffdc741f02e4584", "committedDate": "2020-11-04T09:17:35Z", "message": "Merge branch 'master' into post_authz_audit_event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67069934306f5de51924eb1eff4bf6877b191247", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/67069934306f5de51924eb1eff4bf6877b191247", "committedDate": "2020-11-04T12:19:16Z", "message": "Reuse the `User#isInternal` method in the authorization service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec226116a40c9daaab98bb8746b0c0bc6fbe3ded", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/ec226116a40c9daaab98bb8746b0c0bc6fbe3ded", "committedDate": "2020-12-07T21:43:37Z", "message": "Merge branch 'master' into post_authz_audit_event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b5b65ebc207be85640024017564e01c4e9ba9b6", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/1b5b65ebc207be85640024017564e01c4e9ba9b6", "committedDate": "2020-12-07T22:04:48Z", "message": "tests afte merge conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7383c50698e949ca1ac92b603b85220f864776a", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/e7383c50698e949ca1ac92b603b85220f864776a", "committedDate": "2020-12-07T22:27:48Z", "message": "wrong merge choice"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14425d56c999750b2ef08942af4532dc459c154c", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/14425d56c999750b2ef08942af4532dc459c154c", "committedDate": "2020-12-07T22:35:09Z", "message": "Good merge choice"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a730658647ddcaaad3f3159f127e9b37312be40d", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/a730658647ddcaaad3f3159f127e9b37312be40d", "committedDate": "2020-12-07T23:14:56Z", "message": "Move chain.proceed down"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODI3MjI1", "url": "https://github.com/elastic/elasticsearch/pull/63708#pullrequestreview-546827225", "createdAt": "2020-12-08T07:51:55Z", "commit": {"oid": "a730658647ddcaaad3f3159f127e9b37312be40d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzo1MTo1NVrOIBLsOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzo1MTo1NVrOIBLsOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODExMTAzMw==", "bodyText": "I wonder whether it would be better to create a different Runnable depending on whether security is enabled instead of testing securityEnabled inside the Runnable.", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r538111033", "createdAt": "2020-12-08T07:51:55Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/transport/SecurityServerTransportInterceptor.java", "diffHunk": "@@ -241,9 +296,10 @@ public String toString() {\n \n         @Override\n         public void messageReceived(T request, TransportChannel channel, Task task) throws Exception {\n-            final AbstractRunnable receiveMessage = getReceiveRunnable(request, channel, task);\n+            final boolean securityEnabled = licenseState.isSecurityEnabled();\n+            final AbstractRunnable receiveMessage = getReceiveRunnable(request, channel, task, securityEnabled);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a730658647ddcaaad3f3159f127e9b37312be40d"}, "originalPosition": 150}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6d1a74aaab1ab9fc47f930a302fda8f30aae18d", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/c6d1a74aaab1ab9fc47f930a302fda8f30aae18d", "committedDate": "2020-12-08T11:21:11Z", "message": "Remove line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93299a36dd5ddc42feae7ad2a57ef8ea7a27fb33", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/93299a36dd5ddc42feae7ad2a57ef8ea7a27fb33", "committedDate": "2020-12-09T18:35:21Z", "message": "Merge branch 'master' into post_authz_audit_event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3926adac4a1439a728778ae37b9e453f1b7e37f5", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/3926adac4a1439a728778ae37b9e453f1b7e37f5", "committedDate": "2020-12-09T19:01:13Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d579d79a60fabbed21d7ce90d2f3c0e77862584", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/4d579d79a60fabbed21d7ce90d2f3c0e77862584", "committedDate": "2020-12-14T19:07:02Z", "message": "Merge branch 'master' into post_authz_audit_event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5ddb6e2313d840c12e35e1b08ab961bc3049cf1", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/e5ddb6e2313d840c12e35e1b08ab961bc3049cf1", "committedDate": "2020-12-15T09:04:17Z", "message": "Only intercept the action filter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMjQyNTQ5", "url": "https://github.com/elastic/elasticsearch/pull/63708#pullrequestreview-552242549", "createdAt": "2020-12-15T09:12:18Z", "commit": {"oid": "e5ddb6e2313d840c12e35e1b08ab961bc3049cf1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOToxMjoxOVrOIGAesA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOToxMjoxOVrOIGAesA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3MDIyNA==", "bodyText": "This is not technically true, some actions' (TransportMasterNodeAction) responses are intercepted on the coordinating node, as well as on the master node.\nThe naming and descriptions are difficult to write to convey the subset of actions that are covered.\nWe could also bleed some internals in here and mention the SecurityActionFilter.\nOpen to suggestions.", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r543170224", "createdAt": "2020-12-15T09:12:19Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/AuditTrail.java", "diffHunk": "@@ -81,4 +82,9 @@ void runAsDenied(String requestId, Authentication authentication, RestRequest re\n     void explicitIndexAccessEvent(String requestId, AuditLevel eventType, Authentication authentication, String action, String indices,\n                                   String requestName, TransportAddress remoteAddress, AuthorizationInfo authorizationInfo);\n \n+    // this is the only audit method that is called *after* the action executed, when the response is available\n+    // it is however *only called for coordinating actions*, which are the actions that a client invokes as opposed to\n+    // the actions that a node invokes in order to service a client request\n+    void coordinatingActionResponse(String requestId, Authentication authentication, String action, TransportRequest transportRequest,\n+                                    TransportResponse transportResponse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5ddb6e2313d840c12e35e1b08ab961bc3049cf1"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf59a6095a84d0d22732e6ad1437a3b11c03c8eb", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf59a6095a84d0d22732e6ad1437a3b11c03c8eb", "committedDate": "2020-12-15T09:13:57Z", "message": "Checkstyle test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7851883f7bb0b770c3f2b0319c6482f13fda5c38", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/7851883f7bb0b770c3f2b0319c6482f13fda5c38", "committedDate": "2020-12-15T10:47:10Z", "message": "Merge branch 'master' into post_authz_audit_event"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDUyNjU5", "url": "https://github.com/elastic/elasticsearch/pull/63708#pullrequestreview-552452659", "createdAt": "2020-12-15T13:34:28Z", "commit": {"oid": "7851883f7bb0b770c3f2b0319c6482f13fda5c38"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzozNDoyOVrOIGLH5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDowMDo0OVrOIGMUoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0NDYxMw==", "bodyText": "Nit: now there is no actual change to this constructor, probably wanna get rid of the unnecessary format change as well.", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r543344613", "createdAt": "2020-12-15T13:34:29Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/Security.java", "diffHunk": "@@ -519,9 +519,10 @@ protected Clock getClock() {\n         components.add(ipFilter.get());\n         DestructiveOperations destructiveOperations = new DestructiveOperations(settings, clusterService.getClusterSettings());\n         securityInterceptor.set(new SecurityServerTransportInterceptor(settings, threadPool, authcService.get(),\n-                authzService, getLicenseState(), getSslService(), securityContext.get(), destructiveOperations, clusterService));\n+                authzService, getLicenseState(), getSslService(), securityContext.get(), destructiveOperations,\n+                clusterService));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7851883f7bb0b770c3f2b0319c6482f13fda5c38"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM2NDI1Nw==", "bodyText": "Nit: this assertion of reqId.get() being non-null does not exist in other places. Do we need it here?", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r543364257", "createdAt": "2020-12-15T14:00:49Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/AuthenticationServiceTests.java", "diffHunk": "@@ -331,10 +342,20 @@ public void testAuthenticateBothSupportSecondSucceeds() throws Exception {\n         } else {\n             when(secondRealm.token(threadContext)).thenReturn(token);\n         }\n-        final String reqId = AuditUtil.getOrGenerateRequestId(threadContext);\n+        boolean requestIdAlreadyPresent = randomBoolean();\n+        SetOnce<String> reqId = new SetOnce<>();\n+        if (requestIdAlreadyPresent) {\n+            reqId.set(AuditUtil.getOrGenerateRequestId(threadContext));\n+            assertThat(reqId.get(), not(nullValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7851883f7bb0b770c3f2b0319c6482f13fda5c38"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "375377123b15b86896a894625edc72772506ad34", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/375377123b15b86896a894625edc72772506ad34", "committedDate": "2020-12-15T14:44:35Z", "message": "Merge branch 'master' into post_authz_audit_event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49a2852b85fa33da2d36446c6a6d0f859cb73d1a", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/49a2852b85fa33da2d36446c6a6d0f859cb73d1a", "committedDate": "2020-12-15T14:48:42Z", "message": "Nits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzYxMDI5", "url": "https://github.com/elastic/elasticsearch/pull/63708#pullrequestreview-553361029", "createdAt": "2020-12-16T05:10:26Z", "commit": {"oid": "49a2852b85fa33da2d36446c6a6d0f859cb73d1a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNToxMDoyNlrOIGw23A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNToxMDoyNlrOIGw23A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzk2Mjg0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private <Request extends ActionRequest, Response extends ActionResponse> void applyInternal(Task task, ActionFilterChain<Request,\n          \n          \n            \n                        Response> chain, String action, Request request, ActionListener<Response> listener) {\n          \n          \n            \n                private <Request extends ActionRequest, Response extends ActionResponse> void applyInternal(Task task,\n          \n          \n            \n                        ActionFilterChain<Request, Response> chain, String action, Request request, ActionListener<Response> listener) {", "url": "https://github.com/elastic/elasticsearch/pull/63708#discussion_r543962844", "createdAt": "2020-12-16T05:10:26Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/filter/SecurityActionFilter.java", "diffHunk": "@@ -130,13 +124,13 @@ public int order() {\n         return Integer.MIN_VALUE;\n     }\n \n-    private <Request extends ActionRequest> void applyInternal(String action, Request request,\n-                                                               ActionListener<Void> listener) throws IOException {\n+    private <Request extends ActionRequest, Response extends ActionResponse> void applyInternal(Task task, ActionFilterChain<Request,\n+            Response> chain, String action, Request request, ActionListener<Response> listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49a2852b85fa33da2d36446c6a6d0f859cb73d1a"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e2e8829c59242d5b956074abc2a8b3575d74c58", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/6e2e8829c59242d5b956074abc2a8b3575d74c58", "committedDate": "2020-12-16T09:38:16Z", "message": "Update x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/filter/SecurityActionFilter.java\n\nCo-authored-by: Tim Vernum <tim@adjective.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b81f644560852a4a6de6fae4193ad9e8d662e919", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/b81f644560852a4a6de6fae4193ad9e8d662e919", "committedDate": "2020-12-16T10:17:38Z", "message": "Merge branch 'master' into post_authz_audit_event"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3965, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}