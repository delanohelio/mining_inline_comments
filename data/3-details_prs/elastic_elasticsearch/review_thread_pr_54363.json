{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0OTIwOTc0", "number": 54363, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1MTozN1rODsne0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1MTozN1rODsne0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTEwODAxOnYy", "diffSide": "RIGHT", "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1MTozN1rOF9kGdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNTowODo1NFrOF9ubcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5ODkzMg==", "bodyText": "Not that it would save a lot of bytes, but what do you think about adding an override that takes a NodesStatsRequest.Metric?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .addMetric(NodesStatsRequest.Metric.INGEST.metricName())\n          \n          \n            \n                        .addMetric(NodesStatsRequest.Metric.INGEST)\n          \n      \n    \n    \n  \n\nThis would be a bit more type-safe at least?", "url": "https://github.com/elastic/elasticsearch/pull/54363#discussion_r400098932", "createdAt": "2020-03-30T10:51:37Z", "author": {"login": "pugnascotia"}, "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java", "diffHunk": "@@ -95,7 +96,9 @@ public void testFailureInConditionalProcessor() {\n         );\n         assertTrue(e.getMessage().contains(\"this script always fails\"));\n \n-        NodesStatsResponse r = client().admin().cluster().prepareNodesStats(internalCluster().getNodeNames()).setIngest(true).get();\n+        NodesStatsResponse r = client().admin().cluster().prepareNodesStats(internalCluster().getNodeNames())\n+            .addMetric(NodesStatsRequest.Metric.INGEST.metricName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "521a6abe931882bdfca639ecd8ef836c707990a4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwMTUxMA==", "bodyText": "I'd be tempted use some static imports to abbreviate the code a little, too.", "url": "https://github.com/elastic/elasticsearch/pull/54363#discussion_r400101510", "createdAt": "2020-03-30T10:56:01Z", "author": {"login": "pugnascotia"}, "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java", "diffHunk": "@@ -95,7 +96,9 @@ public void testFailureInConditionalProcessor() {\n         );\n         assertTrue(e.getMessage().contains(\"this script always fails\"));\n \n-        NodesStatsResponse r = client().admin().cluster().prepareNodesStats(internalCluster().getNodeNames()).setIngest(true).get();\n+        NodesStatsResponse r = client().admin().cluster().prepareNodesStats(internalCluster().getNodeNames())\n+            .addMetric(NodesStatsRequest.Metric.INGEST.metricName())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5ODkzMg=="}, "originalCommit": {"oid": "521a6abe931882bdfca639ecd8ef836c707990a4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2NTY4Nw==", "bodyText": "The NodesStatsRequest.Metric construct is just temporary and will eventually be replaced with a more pluggable solution. That is to say, the addMetric method will need to accept strings that are defined by plugins. Those strings will have to be validated dynamically, possibly by the NodeService.", "url": "https://github.com/elastic/elasticsearch/pull/54363#discussion_r400265687", "createdAt": "2020-03-30T15:05:49Z", "author": {"login": "williamrandolph"}, "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java", "diffHunk": "@@ -95,7 +96,9 @@ public void testFailureInConditionalProcessor() {\n         );\n         assertTrue(e.getMessage().contains(\"this script always fails\"));\n \n-        NodesStatsResponse r = client().admin().cluster().prepareNodesStats(internalCluster().getNodeNames()).setIngest(true).get();\n+        NodesStatsResponse r = client().admin().cluster().prepareNodesStats(internalCluster().getNodeNames())\n+            .addMetric(NodesStatsRequest.Metric.INGEST.metricName())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5ODkzMg=="}, "originalCommit": {"oid": "521a6abe931882bdfca639ecd8ef836c707990a4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2ODE0NA==", "bodyText": "I agree on static imports improving readability; I'll make that change.", "url": "https://github.com/elastic/elasticsearch/pull/54363#discussion_r400268144", "createdAt": "2020-03-30T15:08:54Z", "author": {"login": "williamrandolph"}, "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java", "diffHunk": "@@ -95,7 +96,9 @@ public void testFailureInConditionalProcessor() {\n         );\n         assertTrue(e.getMessage().contains(\"this script always fails\"));\n \n-        NodesStatsResponse r = client().admin().cluster().prepareNodesStats(internalCluster().getNodeNames()).setIngest(true).get();\n+        NodesStatsResponse r = client().admin().cluster().prepareNodesStats(internalCluster().getNodeNames())\n+            .addMetric(NodesStatsRequest.Metric.INGEST.metricName())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5ODkzMg=="}, "originalCommit": {"oid": "521a6abe931882bdfca639ecd8ef836c707990a4"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4039, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}