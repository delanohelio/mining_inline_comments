{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3ODk5ODc4", "number": 52586, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTozNzowNlrODh0VSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTozODoxN1rODh0W7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Nzg3MDE5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/planner/QueryFolder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTozNzowNlrOFsw4HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTozNzowNlrOFsw4HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4MjQ2MA==", "bodyText": "This is already checked that it's one of the two so mayb an else is enough.", "url": "https://github.com/elastic/elasticsearch/pull/52586#discussion_r382482460", "createdAt": "2020-02-21T09:37:06Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/planner/QueryFolder.java", "diffHunk": "@@ -322,17 +320,30 @@ else if (exp instanceof GroupingFunction) {\n                             // date histogram\n                             if (isDateBased(h.dataType())) {\n                                 Object value = h.interval().value();\n-                                // interval of exactly 1 year\n-                                if (value instanceof IntervalYearMonth\n-                                        && ((IntervalYearMonth) value).interval().equals(Period.ofYears(1))) {\n-                                    String calendarInterval = Year.YEAR_INTERVAL;\n+                                // interval of exactly 1 year or 1 month\n+                                if (value instanceof IntervalYearMonth &&\n+                                        (((IntervalYearMonth) value).interval().equals(Period.ofYears(1)) \n+                                        || ((IntervalYearMonth) value).interval().equals(Period.ofMonths(1)))) {\n+                                    Period yearMonth = ((IntervalYearMonth) value).interval();\n+                                    \n+                                    String calendarInterval = null;\n+                                    if (yearMonth.equals(Period.ofYears(1))) {\n+                                        calendarInterval = Histogram.YEAR_INTERVAL;\n+                                    } else if (yearMonth.equals(Period.ofMonths(1))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72f01a2c85d9d12ab97dfebf4a76cd926a48117a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Nzg3NDM2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/planner/QueryFolder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTozODoxN1rOFsw6lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTo1MDo0NlrOFsxSwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4MzA5Mw==", "bodyText": "Here too, the null check is superfluous as the whole block is guarded by:\n&& (((IntervalYearMonth) value).interval().equals(Period.ofYears(1)) || ((IntervalYearMonth) value).interval().equals(Period.ofMonths(1)))", "url": "https://github.com/elastic/elasticsearch/pull/52586#discussion_r382483093", "createdAt": "2020-02-21T09:38:17Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/planner/QueryFolder.java", "diffHunk": "@@ -322,17 +320,30 @@ else if (exp instanceof GroupingFunction) {\n                             // date histogram\n                             if (isDateBased(h.dataType())) {\n                                 Object value = h.interval().value();\n-                                // interval of exactly 1 year\n-                                if (value instanceof IntervalYearMonth\n-                                        && ((IntervalYearMonth) value).interval().equals(Period.ofYears(1))) {\n-                                    String calendarInterval = Year.YEAR_INTERVAL;\n+                                // interval of exactly 1 year or 1 month\n+                                if (value instanceof IntervalYearMonth &&\n+                                        (((IntervalYearMonth) value).interval().equals(Period.ofYears(1)) \n+                                        || ((IntervalYearMonth) value).interval().equals(Period.ofMonths(1)))) {\n+                                    Period yearMonth = ((IntervalYearMonth) value).interval();\n+                                    \n+                                    String calendarInterval = null;\n+                                    if (yearMonth.equals(Period.ofYears(1))) {\n+                                        calendarInterval = Histogram.YEAR_INTERVAL;\n+                                    } else if (yearMonth.equals(Period.ofMonths(1))) {\n+                                        calendarInterval = Histogram.MONTH_INTERVAL;\n+                                    }\n \n-                                    // When the histogram is `INTERVAL '1' YEAR`, the interval used in the ES date_histogram will be\n-                                    // a calendar_interval with value \"1y\". All other intervals will be fixed_intervals expressed in ms.\n-                                    if (field instanceof FieldAttribute) {\n-                                        key = new GroupByDateHistogram(aggId, QueryTranslator.nameOf(field), calendarInterval, h.zoneId());\n-                                    } else if (field instanceof Function) {\n-                                        key = new GroupByDateHistogram(aggId, ((Function) field).asScript(), calendarInterval, h.zoneId());\n+                                    // When the histogram is `INTERVAL '1' YEAR` or `INTERVAL '1' MONTH`, the interval used in \n+                                    // the ES date_histogram will be a calendar_interval with value \"1y\" or \"1M\" respectively.\n+                                    // All other intervals will be fixed_intervals expressed in ms.\n+                                    if (calendarInterval != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72f01a2c85d9d12ab97dfebf4a76cd926a48117a"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4OTI4Mg==", "bodyText": "Yep, true. It's a leftover from a previous idea.", "url": "https://github.com/elastic/elasticsearch/pull/52586#discussion_r382489282", "createdAt": "2020-02-21T09:50:46Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/planner/QueryFolder.java", "diffHunk": "@@ -322,17 +320,30 @@ else if (exp instanceof GroupingFunction) {\n                             // date histogram\n                             if (isDateBased(h.dataType())) {\n                                 Object value = h.interval().value();\n-                                // interval of exactly 1 year\n-                                if (value instanceof IntervalYearMonth\n-                                        && ((IntervalYearMonth) value).interval().equals(Period.ofYears(1))) {\n-                                    String calendarInterval = Year.YEAR_INTERVAL;\n+                                // interval of exactly 1 year or 1 month\n+                                if (value instanceof IntervalYearMonth &&\n+                                        (((IntervalYearMonth) value).interval().equals(Period.ofYears(1)) \n+                                        || ((IntervalYearMonth) value).interval().equals(Period.ofMonths(1)))) {\n+                                    Period yearMonth = ((IntervalYearMonth) value).interval();\n+                                    \n+                                    String calendarInterval = null;\n+                                    if (yearMonth.equals(Period.ofYears(1))) {\n+                                        calendarInterval = Histogram.YEAR_INTERVAL;\n+                                    } else if (yearMonth.equals(Period.ofMonths(1))) {\n+                                        calendarInterval = Histogram.MONTH_INTERVAL;\n+                                    }\n \n-                                    // When the histogram is `INTERVAL '1' YEAR`, the interval used in the ES date_histogram will be\n-                                    // a calendar_interval with value \"1y\". All other intervals will be fixed_intervals expressed in ms.\n-                                    if (field instanceof FieldAttribute) {\n-                                        key = new GroupByDateHistogram(aggId, QueryTranslator.nameOf(field), calendarInterval, h.zoneId());\n-                                    } else if (field instanceof Function) {\n-                                        key = new GroupByDateHistogram(aggId, ((Function) field).asScript(), calendarInterval, h.zoneId());\n+                                    // When the histogram is `INTERVAL '1' YEAR` or `INTERVAL '1' MONTH`, the interval used in \n+                                    // the ES date_histogram will be a calendar_interval with value \"1y\" or \"1M\" respectively.\n+                                    // All other intervals will be fixed_intervals expressed in ms.\n+                                    if (calendarInterval != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4MzA5Mw=="}, "originalCommit": {"oid": "72f01a2c85d9d12ab97dfebf4a76cd926a48117a"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3858, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}