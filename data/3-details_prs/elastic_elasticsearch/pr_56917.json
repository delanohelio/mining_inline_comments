{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NjM1MzMy", "number": 56917, "title": "SQL: JDBC: fix temporary directory locked test errors in Windows", "bodyText": "The tests involving a temporary directory (containing the JDBC JAR) fail\non Windows because they can't be deleted, due to still being in use.\nThis PR forces an early closing of the JAR file, which mitigates\nthe failure by giving the JVM more time to collect any open FDs.\n(Calling the System.gc() in the tests is another working alternative\nfix.)\nThe stream-based JAR access is taken care by disabling the cache usage\n(which has the same effect of closing the JAR).\nFixes #56882.", "createdAt": "2020-05-18T17:19:36Z", "url": "https://github.com/elastic/elasticsearch/pull/56917", "merged": true, "mergeCommit": {"oid": "04f97333a015404a68e8f19223f33aadeb396687"}, "closed": true, "closedAt": "2020-05-20T16:10:18Z", "author": {"login": "bpintea"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcijDAUAH2gAyNDE5NjM1MzMyOmI2YzVmNzRmYjc2MjY2Njg2OWM0MzBlYTk2NTVhZTBjNmEzNTE3NmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjKrXdgH2gAyNDE5NjM1MzMyOjM5NWY5YWY1ZjgzZWZjNTNlZGM0MDAzZGE4MTJhNTM3NGM1ZjI3ZDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b6c5f74fb762666869c430ea9655ae0c6a35176c", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/b6c5f74fb762666869c430ea9655ae0c6a35176c", "committedDate": "2020-05-18T17:09:28Z", "message": "Fix temp dir locked errors\n\nThe tests involving a temporary directory (containing the JDBC JAR) fail\non Windows because they can't be deleted, due to still being in use.\nThis commit forces a premature closing of the JAR file, which mitigates\nthe failure by giving the JVM more time to collect any open FDs.\n(Calling the System.gc() in the tests is another working alternative\nfix.)\n\nThe stream-based JAR access is taken care by disabling the cache usage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11994c9062733f1365376762d4b3650807000332", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/11994c9062733f1365376762d4b3650807000332", "committedDate": "2020-05-18T18:03:20Z", "message": "Fix style errors\n\n- supress JarFile usage warning\n- remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42", "committedDate": "2020-05-19T07:41:20Z", "message": "Address review comments\n\nWrap closing the JAR into a try-block, ignore any failure caused by\nit: we can continue for as long as we've got the Manifest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjQ5NjE3", "url": "https://github.com/elastic/elasticsearch/pull/56917#pullrequestreview-414249617", "createdAt": "2020-05-19T09:07:33Z", "commit": {"oid": "6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTowNzozNFrOGXXDIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTowODowOVrOGXXEnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODA2NA==", "bodyText": "Maybe we should log here, since this is not only for testing.", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427148064", "createdAt": "2020-05-19T09:07:34Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/sql-client/src/main/java/org/elasticsearch/xpack/sql/client/ClientVersion.java", "diffHunk": "@@ -87,7 +88,11 @@ static Manifest getManifest(URL url) throws IOException {\n             if (url.getProtocol().equals(\"jar\")) {\n                 JarURLConnection jarConn = (JarURLConnection) conn;\n                 if (jarConn.getEntryName() == null) { // the URL points to a JAR file\n-                    return jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    Manifest manifest = jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    try {\n+                        jarConn.getJarFile().close(); // prevent locked file errors in Windows. The Manifest has been read by now\n+                    } catch (IOException e) {/* ignore any closing failure */}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODQ0NQ==", "bodyText": "Shouldn't this be in a finally block to return not only in case of exception?", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427148445", "createdAt": "2020-05-19T09:08:09Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/sql-client/src/main/java/org/elasticsearch/xpack/sql/client/ClientVersion.java", "diffHunk": "@@ -87,7 +88,11 @@ static Manifest getManifest(URL url) throws IOException {\n             if (url.getProtocol().equals(\"jar\")) {\n                 JarURLConnection jarConn = (JarURLConnection) conn;\n                 if (jarConn.getEntryName() == null) { // the URL points to a JAR file\n-                    return jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    Manifest manifest = jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    try {\n+                        jarConn.getJarFile().close(); // prevent locked file errors in Windows. The Manifest has been read by now\n+                    } catch (IOException e) {/* ignore any closing failure */}\n+                    return manifest;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTEzODQ5", "url": "https://github.com/elastic/elasticsearch/pull/56917#pullrequestreview-414513849", "createdAt": "2020-05-19T14:37:49Z", "commit": {"oid": "6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDozNzo0OVrOGXjo3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDozNzo0OVrOGXjo3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1NDMzMg==", "bodyText": "Here both getJarFile() and .close() can throw an IOException. getManifest() call above does use getJarFile() so the danger of an IOException being thrown while calling getJarFile() wouldn't be ignored, is not justified.\nBut, would make sense to call jarConn.getJarFile() and reuse this object in both getManifest() and .close() calls?", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427354332", "createdAt": "2020-05-19T14:37:49Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/sql-client/src/main/java/org/elasticsearch/xpack/sql/client/ClientVersion.java", "diffHunk": "@@ -87,7 +88,11 @@ static Manifest getManifest(URL url) throws IOException {\n             if (url.getProtocol().equals(\"jar\")) {\n                 JarURLConnection jarConn = (JarURLConnection) conn;\n                 if (jarConn.getEntryName() == null) { // the URL points to a JAR file\n-                    return jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    Manifest manifest = jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    try {\n+                        jarConn.getJarFile().close(); // prevent locked file errors in Windows. The Manifest has been read by now", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6025074fd20e1fcb777d7442b9a711291d3673f4", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/6025074fd20e1fcb777d7442b9a711291d3673f4", "committedDate": "2020-05-19T16:37:26Z", "message": "Address review comments\n\nExtract Jar file out of the connection and work directly with it when\nextracting the manifeset and closing it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bb19a0db94a43b2fab6f386644456c5b0ba3f42", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/4bb19a0db94a43b2fab6f386644456c5b0ba3f42", "committedDate": "2020-05-20T08:39:42Z", "message": "Merge branch 'master' into fix/fix_locked_jar_file_tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTk0MTEw", "url": "https://github.com/elastic/elasticsearch/pull/56917#pullrequestreview-415194110", "createdAt": "2020-05-20T10:21:09Z", "commit": {"oid": "4bb19a0db94a43b2fab6f386644456c5b0ba3f42"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyMTowOVrOGYFAPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyMTowOVrOGYFAPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMDk5MA==", "bodyText": "I suggest using the try/close approach - it's similar but more concise:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                JarFile jar = jarConn.getJarFile();\n          \n          \n            \n            if (jarConn.getEntryName() == null) {\n          \n          \n            \n             try (JarFile jar = jarconn.getJarFile()) {\n          \n          \n            \n                  return jar.getManifest();\n          \n          \n            \n              }\n          \n          \n            \n            }", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r427900990", "createdAt": "2020-05-20T10:21:09Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/sql-client/src/main/java/org/elasticsearch/xpack/sql/client/ClientVersion.java", "diffHunk": "@@ -87,7 +89,12 @@ static Manifest getManifest(URL url) throws IOException {\n             if (url.getProtocol().equals(\"jar\")) {\n                 JarURLConnection jarConn = (JarURLConnection) conn;\n                 if (jarConn.getEntryName() == null) { // the URL points to a JAR file\n-                    return jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    JarFile jar = jarConn.getJarFile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bb19a0db94a43b2fab6f386644456c5b0ba3f42"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzU5NDQ5", "url": "https://github.com/elastic/elasticsearch/pull/56917#pullrequestreview-415359449", "createdAt": "2020-05-20T13:54:05Z", "commit": {"oid": "4bb19a0db94a43b2fab6f386644456c5b0ba3f42"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1NDowNVrOGYM5Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1NDowNVrOGYM5Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMDI0Mg==", "bodyText": "Probably not I guess...", "url": "https://github.com/elastic/elasticsearch/pull/56917#discussion_r428030242", "createdAt": "2020-05-20T13:54:05Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/sql-client/src/main/java/org/elasticsearch/xpack/sql/client/ClientVersion.java", "diffHunk": "@@ -87,7 +88,11 @@ static Manifest getManifest(URL url) throws IOException {\n             if (url.getProtocol().equals(\"jar\")) {\n                 JarURLConnection jarConn = (JarURLConnection) conn;\n                 if (jarConn.getEntryName() == null) { // the URL points to a JAR file\n-                    return jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    Manifest manifest = jarConn.getManifest(); // in case of a fat JAR, this would return the outermost JAR's manifest\n+                    try {\n+                        jarConn.getJarFile().close(); // prevent locked file errors in Windows. The Manifest has been read by now\n+                    } catch (IOException e) {/* ignore any closing failure */}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODA2NA=="}, "originalCommit": {"oid": "6d9fe2c0dafd0b6d449645ac7aed68e62bde3a42"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "395f9af5f83efc53edc4003da812a5374c5f27d2", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/395f9af5f83efc53edc4003da812a5374c5f27d2", "committedDate": "2020-05-20T15:19:51Z", "message": "Address review comments\n\n- make use of JarFile AutoCloseable if'ace (try-with-resources)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4874, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}