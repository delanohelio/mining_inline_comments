{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MTI5OTk0", "number": 56872, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowMDoyNlrOD9kQFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDoyMjoxNlrOD-jEJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODgzNjcwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowMDoyNlrOGXI5Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDo0Mjo1MVrOGXj5zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjEyMw==", "bodyText": "Let's use elasticsearch.java here instead. This applies all our compile/test conventions, but doesn't add all these precommit check tasks which are not applicable to this project.", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r426916123", "createdAt": "2020-05-18T22:00:26Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "diffHunk": "@@ -0,0 +1,66 @@\n+description = 'Integration tests for SQL JDBC'\n+apply plugin: 'elasticsearch.build'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35d1f3c1460c579def31fe199f4845146c0a7dcc"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjQzNA==", "bodyText": "Not, we should probably do this for the sql qa project as well. Would simplify that build script a bit since the same applies there.", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r426916434", "createdAt": "2020-05-18T22:01:17Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "diffHunk": "@@ -0,0 +1,66 @@\n+description = 'Integration tests for SQL JDBC'\n+apply plugin: 'elasticsearch.build'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjEyMw=="}, "originalCommit": {"oid": "35d1f3c1460c579def31fe199f4845146c0a7dcc"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEyOTcwNA==", "bodyText": "If I make this change I get:\n* Where:\nBuild file '/home/matriv/elastic/elasticsearch/x-pack/plugin/sql/jdbc/qa/build.gradle' line: 17\n\n* What went wrong:\nA problem occurred evaluating project ':x-pack:plugin:sql:jdbc:qa'.\n> Could not get unknown property 'dependencyLicenses' for project ':x-pack:plugin:sql:jdbc:qa' of type org.gradle.api.Project.", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r427129704", "createdAt": "2020-05-19T08:40:27Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "diffHunk": "@@ -0,0 +1,66 @@\n+description = 'Integration tests for SQL JDBC'\n+apply plugin: 'elasticsearch.build'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjEyMw=="}, "originalCommit": {"oid": "35d1f3c1460c579def31fe199f4845146c0a7dcc"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1ODY2OA==", "bodyText": "Exactly. The java plugin doesn't create a dependenciesLicenses task, therefor we no longer need to explicitly disable it. Remove dependencyLicenses.enabled = false as well as all the others. We shouldn't need to disable any tasks.", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r427358668", "createdAt": "2020-05-19T14:42:51Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "diffHunk": "@@ -0,0 +1,66 @@\n+description = 'Integration tests for SQL JDBC'\n+apply plugin: 'elasticsearch.build'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjEyMw=="}, "originalCommit": {"oid": "35d1f3c1460c579def31fe199f4845146c0a7dcc"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODgzODA5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowMDo1NlrOGXI54Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowMDo1NlrOGXI54Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjMyMQ==", "bodyText": "We shouldn't need to override group or archivesBaseName since we aren't going to publish this module.", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r426916321", "createdAt": "2020-05-18T22:00:56Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "diffHunk": "@@ -0,0 +1,66 @@\n+description = 'Integration tests for SQL JDBC'\n+apply plugin: 'elasticsearch.build'\n+archivesBaseName = 'qa-sql-jdbc'\n+group = \"org.elasticsearch.x-pack.qa.sql.jdbc\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35d1f3c1460c579def31fe199f4845146c0a7dcc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODg0NTM2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowNDowMFrOGXI-Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODo0MDowMVrOGXV6OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNzQzNQ==", "bodyText": "Who uses this task?", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r426917435", "createdAt": "2020-05-18T22:04:00Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "diffHunk": "@@ -0,0 +1,66 @@\n+description = 'Integration tests for SQL JDBC'\n+apply plugin: 'elasticsearch.build'\n+archivesBaseName = 'qa-sql-jdbc'\n+group = \"org.elasticsearch.x-pack.qa.sql.jdbc\"\n+\n+dependencies {\n+    compile project(\":test:framework\")\n+\n+    // JDBC testing dependencies\n+    compile project(path: xpackModule('sql:jdbc'))\n+}\n+\n+/* disable unit tests because these are all integration tests used\n+ * other qa projects. */\n+test.enabled = false\n+\n+dependencyLicenses.enabled = false\n+dependenciesInfo.enabled = false\n+\n+// the main files are actually test files, so use the appropriate forbidden api sigs\n+tasks.named('forbiddenApisMain').configure {\n+    replaceSignatureFiles 'es-all-signatures', 'es-test-signatures'\n+}\n+\n+// just a test fixture: we aren't using this jars in releases and H2GIS requires disabling a lot of checks\n+thirdPartyAudit.enabled = false\n+\n+subprojects {\n+    if (subprojects.isEmpty()) {\n+        // leaf project\n+        apply plugin: 'elasticsearch.standalone-rest-test'\n+    } else {\n+        apply plugin: 'elasticsearch.build'\n+    }\n+\n+    dependencies {\n+        /* Since we're a standalone rest test we actually get transitive\n+         * dependencies but we don't really want them because they cause\n+         * all kinds of trouble with the jar hell checks. So we suppress\n+         * them explicitly for non-es projects. */\n+        testCompile(xpackProject('plugin:sql:jdbc:qa')) {\n+            transitive = false\n+        }\n+        testCompile project(\":test:framework\")\n+\n+        testRuntime project(path: xpackModule('sql:jdbc'))\n+    }\n+\n+    if (project.name != 'security') {\n+        // The security project just configures its subprojects\n+        apply plugin: 'elasticsearch.testclusters'\n+        apply plugin: 'elasticsearch.rest-test'\n+\n+        testClusters.integTest {\n+            testDistribution = 'DEFAULT'\n+            setting 'xpack.ml.enabled', 'false'\n+            setting 'xpack.watcher.enabled', 'false'\n+        }\n+\n+        task runqa {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35d1f3c1460c579def31fe199f4845146c0a7dcc"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEyOTQwMA==", "bodyText": "Noone, removing.", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r427129400", "createdAt": "2020-05-19T08:40:01Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "diffHunk": "@@ -0,0 +1,66 @@\n+description = 'Integration tests for SQL JDBC'\n+apply plugin: 'elasticsearch.build'\n+archivesBaseName = 'qa-sql-jdbc'\n+group = \"org.elasticsearch.x-pack.qa.sql.jdbc\"\n+\n+dependencies {\n+    compile project(\":test:framework\")\n+\n+    // JDBC testing dependencies\n+    compile project(path: xpackModule('sql:jdbc'))\n+}\n+\n+/* disable unit tests because these are all integration tests used\n+ * other qa projects. */\n+test.enabled = false\n+\n+dependencyLicenses.enabled = false\n+dependenciesInfo.enabled = false\n+\n+// the main files are actually test files, so use the appropriate forbidden api sigs\n+tasks.named('forbiddenApisMain').configure {\n+    replaceSignatureFiles 'es-all-signatures', 'es-test-signatures'\n+}\n+\n+// just a test fixture: we aren't using this jars in releases and H2GIS requires disabling a lot of checks\n+thirdPartyAudit.enabled = false\n+\n+subprojects {\n+    if (subprojects.isEmpty()) {\n+        // leaf project\n+        apply plugin: 'elasticsearch.standalone-rest-test'\n+    } else {\n+        apply plugin: 'elasticsearch.build'\n+    }\n+\n+    dependencies {\n+        /* Since we're a standalone rest test we actually get transitive\n+         * dependencies but we don't really want them because they cause\n+         * all kinds of trouble with the jar hell checks. So we suppress\n+         * them explicitly for non-es projects. */\n+        testCompile(xpackProject('plugin:sql:jdbc:qa')) {\n+            transitive = false\n+        }\n+        testCompile project(\":test:framework\")\n+\n+        testRuntime project(path: xpackModule('sql:jdbc'))\n+    }\n+\n+    if (project.name != 'security') {\n+        // The security project just configures its subprojects\n+        apply plugin: 'elasticsearch.testclusters'\n+        apply plugin: 'elasticsearch.rest-test'\n+\n+        testClusters.integTest {\n+            testDistribution = 'DEFAULT'\n+            setting 'xpack.ml.enabled', 'false'\n+            setting 'xpack.watcher.enabled', 'false'\n+        }\n+\n+        task runqa {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNzQzNQ=="}, "originalCommit": {"oid": "35d1f3c1460c579def31fe199f4845146c0a7dcc"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODg0NjgwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowNDozOFrOGXI_Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowNDozOFrOGXI_Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNzY1OQ==", "bodyText": "We should use elasticsearch.java plugin again here. The nested qa projects don't need all that additional precommit stuff.", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r426917659", "createdAt": "2020-05-18T22:04:38Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/sql/jdbc/qa/build.gradle", "diffHunk": "@@ -0,0 +1,66 @@\n+description = 'Integration tests for SQL JDBC'\n+apply plugin: 'elasticsearch.build'\n+archivesBaseName = 'qa-sql-jdbc'\n+group = \"org.elasticsearch.x-pack.qa.sql.jdbc\"\n+\n+dependencies {\n+    compile project(\":test:framework\")\n+\n+    // JDBC testing dependencies\n+    compile project(path: xpackModule('sql:jdbc'))\n+}\n+\n+/* disable unit tests because these are all integration tests used\n+ * other qa projects. */\n+test.enabled = false\n+\n+dependencyLicenses.enabled = false\n+dependenciesInfo.enabled = false\n+\n+// the main files are actually test files, so use the appropriate forbidden api sigs\n+tasks.named('forbiddenApisMain').configure {\n+    replaceSignatureFiles 'es-all-signatures', 'es-test-signatures'\n+}\n+\n+// just a test fixture: we aren't using this jars in releases and H2GIS requires disabling a lot of checks\n+thirdPartyAudit.enabled = false\n+\n+subprojects {\n+    if (subprojects.isEmpty()) {\n+        // leaf project\n+        apply plugin: 'elasticsearch.standalone-rest-test'\n+    } else {\n+        apply plugin: 'elasticsearch.build'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35d1f3c1460c579def31fe199f4845146c0a7dcc"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODg1MzM2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/jdbc/qa/security/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowNzoxNFrOGXJDAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzowNjowOFrOGXqJhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxODY1OQ==", "bodyText": "Let's please not do this anymore. Instead of creating subprojects here, let's just define two separate test clusters. This mess of sharing test artifacts just to run tests two different ways is completely unnecessary. We should refactor the SQL project to ditch this but at least for this PR, let's not copy a bad pattern. Let me know if you need help refactoring this.", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r426918659", "createdAt": "2020-05-18T22:07:14Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/sql/jdbc/qa/security/build.gradle", "diffHunk": "@@ -0,0 +1,63 @@\n+dependencies {\n+    testCompile project(':x-pack:plugin:core')\n+}\n+\n+Project mainProject = project\n+\n+group = \"${group}.x-pack.qa.sql.security\"\n+\n+configurations.create('testArtifacts')\n+\n+TaskProvider testJar = tasks.register(\"testJar\", Jar) {\n+    appendix 'test'\n+    from sourceSets.test.output\n+}\n+\n+artifacts {\n+    testArtifacts testJar\n+}\n+\n+// Tests are pushed down to subprojects and will be checked there.\n+testingConventions.enabled = false\n+\n+subprojects {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35d1f3c1460c579def31fe199f4845146c0a7dcc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ2MDk5Ng==", "bodyText": "As discussed we'd rather keep it like that to have the parallel execution of the single-node/mutli-node etc. cases", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r427460996", "createdAt": "2020-05-19T17:06:08Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/jdbc/qa/security/build.gradle", "diffHunk": "@@ -0,0 +1,63 @@\n+dependencies {\n+    testCompile project(':x-pack:plugin:core')\n+}\n+\n+Project mainProject = project\n+\n+group = \"${group}.x-pack.qa.sql.security\"\n+\n+configurations.create('testArtifacts')\n+\n+TaskProvider testJar = tasks.register(\"testJar\", Jar) {\n+    appendix 'test'\n+    from sourceSets.test.output\n+}\n+\n+artifacts {\n+    testArtifacts testJar\n+}\n+\n+// Tests are pushed down to subprojects and will be checked there.\n+testingConventions.enabled = false\n+\n+subprojects {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxODY1OQ=="}, "originalCommit": {"oid": "35d1f3c1460c579def31fe199f4845146c0a7dcc"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTEyODA3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/qa/jdbc/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDoyMjoxNlrOGYtxdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjoxNDo0NFrOGZEuWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2ODk0OQ==", "bodyText": "@mark-vieira I've been struggling to understand why we end up with circular dependency without this. Any idea?\nDo you have a better suggestion? (I tried renaming the module to jdbc-qa instead of just jdbc which also works).", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r428568949", "createdAt": "2020-05-21T10:22:16Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/qa/jdbc/build.gradle", "diffHunk": "@@ -0,0 +1,61 @@\n+description = 'Integration tests for SQL JDBC driver'\n+apply plugin: 'elasticsearch.build'\n+\n+// Avoid circular dependency", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f12bceb6c5b3d293963f053ed3838245bb7e940e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDk4Ng==", "bodyText": "I'm not completely certain (this is before my time), but I suspect Gradle get's confused if it finds multiple subprojects with identical GAV coordinates, so we make them unique to avoid any dependency resolution conflicts. Again, since this is a QA project that doesn't get published, this value is competely arbitrary.", "url": "https://github.com/elastic/elasticsearch/pull/56872#discussion_r428944986", "createdAt": "2020-05-21T22:14:44Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/sql/qa/jdbc/build.gradle", "diffHunk": "@@ -0,0 +1,61 @@\n+description = 'Integration tests for SQL JDBC driver'\n+apply plugin: 'elasticsearch.build'\n+\n+// Avoid circular dependency", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2ODk0OQ=="}, "originalCommit": {"oid": "f12bceb6c5b3d293963f053ed3838245bb7e940e"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 322, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}