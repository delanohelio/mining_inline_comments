{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNzgxMDM4", "number": 62159, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTo1MTo0NVrOEhosqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTo1MTo0NVrOEhosqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzA1MjU3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/logging/DeprecationIndexingComponent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTo1MTo0NVrOHPDnTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTo1MTo0NVrOHPDnTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU0OTkwMQ==", "bodyText": "nit: we could use\nlogger.trace(\n                    \"indexed [{}] deprecation documents into [{}]\",\n                    request::numberOfActions,\n()->                 Arrays.stream(response.getItems()).map(BulkItemResponse::getIndex).distinct().collect(Collectors.joining(\",\"))\n\npassing parameters suppliers instead of guarding with logger.isTraceEnabled()\nI understand that this pattern is common though - we probably don't have a elasticsearch wide convention for this", "url": "https://github.com/elastic/elasticsearch/pull/62159#discussion_r485549901", "createdAt": "2020-09-09T11:51:45Z", "author": {"login": "pgomulka"}, "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/logging/DeprecationIndexingComponent.java", "diffHunk": "@@ -131,11 +136,27 @@ private BulkProcessor getBulkProcessor(Client client, Settings settings) {\n         public void beforeBulk(long executionId, BulkRequest request) {}\n \n         @Override\n-        public void afterBulk(long executionId, BulkRequest request, BulkResponse response) {}\n+        public void afterBulk(long executionId, BulkRequest request, BulkResponse response) {\n+            long numberOfActions = request.numberOfActions();\n+            if (logger.isTraceEnabled()) {\n+                logger.trace(\n+                    \"indexed [{}] deprecation documents into [{}]\",\n+                    numberOfActions,\n+                    Arrays.stream(response.getItems()).map(BulkItemResponse::getIndex).distinct().collect(Collectors.joining(\",\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e25421695b27cae2ffe69f3f3f3e7f786ebb4d3"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1588, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}