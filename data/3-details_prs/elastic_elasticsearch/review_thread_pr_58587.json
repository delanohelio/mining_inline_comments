{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNTEyOTIx", "number": 58587, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMDoxMTo1MlrOEJmt2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMDoxMTo1NVrOEJmt8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTA2OTY5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/SparseFileTracker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMDoxMTo1MlrOGqLn5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMToxODoyMFrOGqMKYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg4MzgxMg==", "bodyText": "Can we assert existingRange == range? I think it should always be the very same object here.", "url": "https://github.com/elastic/elasticsearch/pull/58587#discussion_r446883812", "createdAt": "2020-06-29T10:11:52Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/SparseFileTracker.java", "diffHunk": "@@ -255,18 +255,21 @@ private long computeLengthOfRanges() {\n         }\n     }\n \n-    private void onGapSuccess(final long start, final long end) {\n+    private boolean assertPendingRangeExists(Range range) {\n+        assert Thread.holdsLock(mutex);\n+        final SortedSet<Range> existingRanges = ranges.tailSet(range);\n+        assert existingRanges.isEmpty() == false;\n+        final Range existingRange = existingRanges.first();\n+        assert existingRange.start == range.start && existingRange.end == range.end && existingRange.isPending();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92cbccdc1ae89f1f6b103968992888fb18cc247"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg5MjY0Mw==", "bodyText": "I think we can, yes", "url": "https://github.com/elastic/elasticsearch/pull/58587#discussion_r446892643", "createdAt": "2020-06-29T11:18:20Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/SparseFileTracker.java", "diffHunk": "@@ -255,18 +255,21 @@ private long computeLengthOfRanges() {\n         }\n     }\n \n-    private void onGapSuccess(final long start, final long end) {\n+    private boolean assertPendingRangeExists(Range range) {\n+        assert Thread.holdsLock(mutex);\n+        final SortedSet<Range> existingRanges = ranges.tailSet(range);\n+        assert existingRanges.isEmpty() == false;\n+        final Range existingRange = existingRanges.first();\n+        assert existingRange.start == range.start && existingRange.end == range.end && existingRange.isPending();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg4MzgxMg=="}, "originalCommit": {"oid": "f92cbccdc1ae89f1f6b103968992888fb18cc247"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTA2OTkzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/SparseFileTracker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMDoxMTo1NVrOGqLoCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMToxOToyNlrOGqMMmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg4Mzg0OQ==", "bodyText": "Naming suggestion (here and elsewhere):\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void onGapSuccess(final Range existingRange) {\n          \n          \n            \n                private void onGapSuccess(final Range gapRange) {", "url": "https://github.com/elastic/elasticsearch/pull/58587#discussion_r446883849", "createdAt": "2020-06-29T10:11:55Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/SparseFileTracker.java", "diffHunk": "@@ -255,18 +255,21 @@ private long computeLengthOfRanges() {\n         }\n     }\n \n-    private void onGapSuccess(final long start, final long end) {\n+    private boolean assertPendingRangeExists(Range range) {\n+        assert Thread.holdsLock(mutex);\n+        final SortedSet<Range> existingRanges = ranges.tailSet(range);\n+        assert existingRanges.isEmpty() == false;\n+        final Range existingRange = existingRanges.first();\n+        assert existingRange.start == range.start && existingRange.end == range.end && existingRange.isPending();\n+        return true;\n+    }\n+\n+    private void onGapSuccess(final Range existingRange) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92cbccdc1ae89f1f6b103968992888fb18cc247"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg5MzIwOA==", "bodyText": "That's better, thanks", "url": "https://github.com/elastic/elasticsearch/pull/58587#discussion_r446893208", "createdAt": "2020-06-29T11:19:26Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/SparseFileTracker.java", "diffHunk": "@@ -255,18 +255,21 @@ private long computeLengthOfRanges() {\n         }\n     }\n \n-    private void onGapSuccess(final long start, final long end) {\n+    private boolean assertPendingRangeExists(Range range) {\n+        assert Thread.holdsLock(mutex);\n+        final SortedSet<Range> existingRanges = ranges.tailSet(range);\n+        assert existingRanges.isEmpty() == false;\n+        final Range existingRange = existingRanges.first();\n+        assert existingRange.start == range.start && existingRange.end == range.end && existingRange.isPending();\n+        return true;\n+    }\n+\n+    private void onGapSuccess(final Range existingRange) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg4Mzg0OQ=="}, "originalCommit": {"oid": "f92cbccdc1ae89f1f6b103968992888fb18cc247"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2327, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}