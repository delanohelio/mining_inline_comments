{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MzE4Mjkw", "number": 66194, "title": "[DOCS] Add dynamic runtime fields to docs", "bodyText": "Adds descriptions and usage of dynamic runtime fields introduced in #65489:\n\nIntroduces the runtime value for the dynamic parameter\nUpdates the Dynamic mapping page to discuss runtime fields\nUpdates the mapping section of the Runtime fields page to explain dynamic mapping\nIncludes related links between these pages", "createdAt": "2020-12-10T22:53:14Z", "url": "https://github.com/elastic/elasticsearch/pull/66194", "merged": true, "mergeCommit": {"oid": "fe54c2ffd25d59ceffa71bfe4db677bf5d676eb9"}, "closed": true, "closedAt": "2020-12-14T21:37:42Z", "author": {"login": "lockewritesdocs"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdk7Y0agH2gAyNTM2MzE4MjkwOjY0Y2MzOTA2MWFmZmI5YzU3N2VjMGMzMmE1NmNiMmYyMzRhYWI1Yjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmrOlGAFqTU1MzQ4MzMyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "64cc39061affb9c577ec0c32a56cb2f234aab5b9", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/64cc39061affb9c577ec0c32a56cb2f234aab5b9", "committedDate": "2020-12-10T22:50:01Z", "message": "[DOCS] Add dynamic runtime fields to docs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00d9880582f353d17fd96fe6cb2049981e720cfe", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/00d9880582f353d17fd96fe6cb2049981e720cfe", "committedDate": "2020-12-14T14:05:11Z", "message": "Clarifying edits and example changes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNjcyMTAz", "url": "https://github.com/elastic/elasticsearch/pull/66194#pullrequestreview-551672103", "createdAt": "2020-12-14T17:26:50Z", "commit": {"oid": "00d9880582f353d17fd96fe6cb2049981e720cfe"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoyNjo1MFrOIFbriw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzozMDo0MFrOIFb3Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU2NzMwNw==", "bodyText": "What d you think about s/throws an exception/rejects the document/ ?  \"throws an exception\" is a very java-implementation level thing. The result of it is to reject the document.", "url": "https://github.com/elastic/elasticsearch/pull/66194#discussion_r542567307", "createdAt": "2020-12-14T17:26:50Z", "author": {"login": "nik9000"}, "path": "docs/reference/mapping/dynamic/field-mapping.asciidoc", "diffHunk": "@@ -1,35 +1,36 @@\n [[dynamic-field-mapping]]\n === Dynamic field mapping\n \n-By default, when a previously unseen field is found in a document,\n-Elasticsearch will add the new field to the type mapping.   This behaviour can\n-be disabled, both at the document and at the <<object,`object`>>  level, by\n-setting the <<dynamic,`dynamic`>> parameter to `false` (to ignore new fields) or to `strict` (to throw\n-an exception if an unknown field is encountered).\n+When {es} detects a new field in a document, it _dynamically_ adds the field to\n+the type mapping. The <<dynamic,`dynamic`>> parameter controls this behavior.\n \n-Assuming `dynamic` field mapping is enabled, some simple rules are used to\n-determine which data type the field should have:\n+You can disable dynamic mapping, both at the document and at the\n+<<object,`object`>> level. Setting the `dynamic` parameter to\n+`false` ignores new fields, and `strict` throws an exception if {es} encounters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9880582f353d17fd96fe6cb2049981e720cfe"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU2OTMxOQ==", "bodyText": "The probably should stay in a funny table format because its an \"if, elsif, else\" thing. Even worse now that we do different things if dynamic: runtime. Maybe this whole thing should turn into a big table with dynamic:true in one heading and dynamic:runtime in another? I dunno.", "url": "https://github.com/elastic/elasticsearch/pull/66194#discussion_r542569319", "createdAt": "2020-12-14T17:29:25Z", "author": {"login": "nik9000"}, "path": "docs/reference/mapping/dynamic/field-mapping.asciidoc", "diffHunk": "@@ -1,35 +1,36 @@\n [[dynamic-field-mapping]]\n === Dynamic field mapping\n \n-By default, when a previously unseen field is found in a document,\n-Elasticsearch will add the new field to the type mapping.   This behaviour can\n-be disabled, both at the document and at the <<object,`object`>>  level, by\n-setting the <<dynamic,`dynamic`>> parameter to `false` (to ignore new fields) or to `strict` (to throw\n-an exception if an unknown field is encountered).\n+When {es} detects a new field in a document, it _dynamically_ adds the field to\n+the type mapping. The <<dynamic,`dynamic`>> parameter controls this behavior.\n \n-Assuming `dynamic` field mapping is enabled, some simple rules are used to\n-determine which data type the field should have:\n+You can disable dynamic mapping, both at the document and at the\n+<<object,`object`>> level. Setting the `dynamic` parameter to\n+`false` ignores new fields, and `strict` throws an exception if {es} encounters\n+an unknown field.\n+\n+When dynamic field mapping is enabled, {es} uses the following rules to\n+determine how to map data types for each field.\n \n [horizontal]\n-*JSON data type*::                   *Elasticsearch data type*\n+*JSON data type*::                  *Elasticsearch data type*\n \n `null`::                            No field is added.\n `true` or `false`::                 <<boolean,`boolean`>> field\n-floating{nbsp}point{nbsp}number::   <<number,`float`>> field\n+floating{nbsp}point{nbsp}number::   <<number,`float`>> indexed field or <<number,`double`>> runtime field\n integer::                           <<number,`long`>> field\n object::                            <<object,`object`>> field\n++\n+NOTE: Objects are always mapped as part of the `properties` section, even when the `dynamic` parameter is set to `runtime`.\n+\n array::                             Depends on the first non-`null` value in the array.\n-string::                            Either a <<date,`date`>> field\n-                                        (if the value passes <<date-detection,date detection>>),\n-                                    a <<number,`double`>> or <<number,`long`>> field\n-                                        (if the value passes <<numeric-detection,numeric detection>>)\n-                                    or a <<text,`text`>> field, with a <<keyword,`keyword`>> sub-field.\n+string::                            Either a <<date,`date`>> field (if the value passes <<date-detection,date detection>>), a <<number,`double`>> or <<number,`long`>> field (if the value passes <<numeric-detection,numeric detection>>), or a <<text,`text`>> field with a <<keyword,`keyword`>> sub-field.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9880582f353d17fd96fe6cb2049981e720cfe"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU3MDI1OQ==", "bodyText": "Does this link to the page in the doc above? It feels like that'd be important.", "url": "https://github.com/elastic/elasticsearch/pull/66194#discussion_r542570259", "createdAt": "2020-12-14T17:30:40Z", "author": {"login": "nik9000"}, "path": "docs/reference/mapping/params/dynamic.asciidoc", "diffHunk": "@@ -1,24 +1,32 @@\n [[dynamic]]\n === `dynamic`\n \n-By default, fields can be added _dynamically_ to a document, or to\n-<<object,inner objects>> within a document, just by indexing a document\n-containing the new field.  For instance:\n+When you index a document containing a new field, {es} adds the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9880582f353d17fd96fe6cb2049981e720cfe"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "217aaee1c46ac08d078aec0db6b68062b74e10ca", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/217aaee1c46ac08d078aec0db6b68062b74e10ca", "committedDate": "2020-12-14T20:25:18Z", "message": "Creating better table and incorporating review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxODg4MDAx", "url": "https://github.com/elastic/elasticsearch/pull/66194#pullrequestreview-551888001", "createdAt": "2020-12-14T20:59:41Z", "commit": {"oid": "217aaee1c46ac08d078aec0db6b68062b74e10ca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fa1d8fd052aa00e7196deca0d7279954d9bc6ae", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/1fa1d8fd052aa00e7196deca0d7279954d9bc6ae", "committedDate": "2020-12-14T21:06:08Z", "message": "Change numeral to superscript."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDgxNzM4", "url": "https://github.com/elastic/elasticsearch/pull/66194#pullrequestreview-553481738", "createdAt": "2020-12-16T09:06:05Z", "commit": {"oid": "1fa1d8fd052aa00e7196deca0d7279954d9bc6ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTowNjowNlrOIG66aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTowNjowNlrOIG66aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyNzU5Mw==", "bodyText": "Is it clear to users that by \"enabled\" we don't only mean \"true\" but also \"runtime\". It becomes clearer with the following table but maybe that could be further clarified?", "url": "https://github.com/elastic/elasticsearch/pull/66194#discussion_r544127593", "createdAt": "2020-12-16T09:06:06Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/dynamic/field-mapping.asciidoc", "diffHunk": "@@ -1,35 +1,37 @@\n [[dynamic-field-mapping]]\n === Dynamic field mapping\n \n-By default, when a previously unseen field is found in a document,\n-Elasticsearch will add the new field to the type mapping.   This behaviour can\n-be disabled, both at the document and at the <<object,`object`>>  level, by\n-setting the <<dynamic,`dynamic`>> parameter to `false` (to ignore new fields) or to `strict` (to throw\n-an exception if an unknown field is encountered).\n-\n-Assuming `dynamic` field mapping is enabled, some simple rules are used to\n-determine which data type the field should have:\n-\n-[horizontal]\n-*JSON data type*::                   *Elasticsearch data type*\n-\n-`null`::                            No field is added.\n-`true` or `false`::                 <<boolean,`boolean`>> field\n-floating{nbsp}point{nbsp}number::   <<number,`float`>> field\n-integer::                           <<number,`long`>> field\n-object::                            <<object,`object`>> field\n-array::                             Depends on the first non-`null` value in the array.\n-string::                            Either a <<date,`date`>> field\n-                                        (if the value passes <<date-detection,date detection>>),\n-                                    a <<number,`double`>> or <<number,`long`>> field\n-                                        (if the value passes <<numeric-detection,numeric detection>>)\n-                                    or a <<text,`text`>> field, with a <<keyword,`keyword`>> sub-field.\n-\n-These are the only <<mapping-types,field data types>> that are dynamically\n-detected.  All other data types must be mapped explicitly.\n-\n-Besides the options listed below, dynamic field mapping rules can be further\n-customised with <<dynamic-templates,`dynamic_templates`>>.\n+When {es} detects a new field in a document, it _dynamically_ adds the field to\n+the type mapping. The <<dynamic,`dynamic`>> parameter controls this behavior.\n+\n+You can disable dynamic mapping, both at the document and at the\n+<<object,`object`>> level. Setting the `dynamic` parameter to\n+`false` ignores new fields, and `strict` rejects the document if {es}\n+encounters an unknown field.\n+\n+When dynamic field mapping is enabled, {es} uses the following rules to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa1d8fd052aa00e7196deca0d7279954d9bc6ae"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDgzMzI1", "url": "https://github.com/elastic/elasticsearch/pull/66194#pullrequestreview-553483325", "createdAt": "2020-12-16T09:08:12Z", "commit": {"oid": "1fa1d8fd052aa00e7196deca0d7279954d9bc6ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTowODoxMlrOIG6_2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTowODoxMlrOIG6_2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyODk4Nw==", "bodyText": "Not directly related to this PR, but I was wondering if it would help users to have the dynamically generated mappings for the above documents in the docs, for both dynamic:true and dynamic:runtime.", "url": "https://github.com/elastic/elasticsearch/pull/66194#discussion_r544128987", "createdAt": "2020-12-16T09:08:12Z", "author": {"login": "javanna"}, "path": "docs/reference/mapping/params/dynamic.asciidoc", "diffHunk": "@@ -68,20 +64,32 @@ PUT my-index-000001\n           \"name\": {\n             \"type\": \"text\"\n           },\n-          \"social_networks\": { <3>\n-            \"dynamic\": true,\n+          \"social_networks\": {\n+            \"dynamic\": true, <3>\n             \"properties\": {}\n           }\n         }\n       }\n     }\n   }\n }\n---------------------------------------------------\n+----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa1d8fd052aa00e7196deca0d7279954d9bc6ae"}, "originalPosition": 104}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4577, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}