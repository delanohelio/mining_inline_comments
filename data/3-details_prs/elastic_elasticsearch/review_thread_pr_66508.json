{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNzg3ODQw", "number": 66508, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMzoyMTo1M1rOFHYPqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMzoyMTo1M1rOFHYPqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjgxNTc3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMzoyMTo1M1rOII17YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMzozMjo0NFrOINxzWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE0MzA3Mg==", "bodyText": "I didn't follow this case where the write index is set? It seems to me like it could incorrectly match the scenario when there is a single index for the alias but the index has not been specified as the write index for the alias.", "url": "https://github.com/elastic/elasticsearch/pull/66508#discussion_r546143072", "createdAt": "2020-12-18T23:21:53Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java", "diffHunk": "@@ -178,14 +176,35 @@ public boolean isSystem() {\n \n         private final String aliasName;\n         private final List<IndexMetadata> referenceIndexMetadatas;\n-        private final SetOnce<IndexMetadata> writeIndex = new SetOnce<>();\n+        private final IndexMetadata writeIndex;\n         private final boolean isHidden;\n \n-        public Alias(AliasMetadata aliasMetadata, IndexMetadata indexMetadata) {\n+        public Alias(AliasMetadata aliasMetadata, List<IndexMetadata> indices) {\n             this.aliasName = aliasMetadata.getAlias();\n-            this.referenceIndexMetadatas = new ArrayList<>();\n-            this.referenceIndexMetadatas.add(indexMetadata);\n+            this.referenceIndexMetadatas = indices;\n+\n+            List<IndexMetadata> writeIndices = indices.stream()\n+                .filter(idxMeta -> Boolean.TRUE.equals(idxMeta.getAliases().get(aliasName).writeIndex()))\n+                .collect(Collectors.toList());\n+\n+            if (writeIndices.isEmpty() && referenceIndexMetadatas.size() == 1\n+                && referenceIndexMetadatas.get(0).getAliases().get(aliasName).writeIndex() == null) {\n+                writeIndices.add(referenceIndexMetadatas.get(0));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4596b4b63f8a02b67476717621aac307751a0e6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE5NTk2MA==", "bodyText": "I was unaware of this logic too, but if an alias points to a single index then that index is always the write index even if it hasn't been marked as write index. I moved this logic from the computeAndValidateAliasProperties() method. I initially also wondered whether this if statement was needed, and didn't move it from the computeAndValidateAliasProperties() method, however many tests failed and after moving the if statement the build completed successfully.", "url": "https://github.com/elastic/elasticsearch/pull/66508#discussion_r551195960", "createdAt": "2021-01-04T09:18:32Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java", "diffHunk": "@@ -178,14 +176,35 @@ public boolean isSystem() {\n \n         private final String aliasName;\n         private final List<IndexMetadata> referenceIndexMetadatas;\n-        private final SetOnce<IndexMetadata> writeIndex = new SetOnce<>();\n+        private final IndexMetadata writeIndex;\n         private final boolean isHidden;\n \n-        public Alias(AliasMetadata aliasMetadata, IndexMetadata indexMetadata) {\n+        public Alias(AliasMetadata aliasMetadata, List<IndexMetadata> indices) {\n             this.aliasName = aliasMetadata.getAlias();\n-            this.referenceIndexMetadatas = new ArrayList<>();\n-            this.referenceIndexMetadatas.add(indexMetadata);\n+            this.referenceIndexMetadatas = indices;\n+\n+            List<IndexMetadata> writeIndices = indices.stream()\n+                .filter(idxMeta -> Boolean.TRUE.equals(idxMeta.getAliases().get(aliasName).writeIndex()))\n+                .collect(Collectors.toList());\n+\n+            if (writeIndices.isEmpty() && referenceIndexMetadatas.size() == 1\n+                && referenceIndexMetadatas.get(0).getAliases().get(aliasName).writeIndex() == null) {\n+                writeIndices.add(referenceIndexMetadatas.get(0));\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE0MzA3Mg=="}, "originalCommit": {"oid": "e4596b4b63f8a02b67476717621aac307751a0e6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMxODM2MA==", "bodyText": "Ah, good to know. In that case, everything else LGTM.", "url": "https://github.com/elastic/elasticsearch/pull/66508#discussion_r551318360", "createdAt": "2021-01-04T13:32:44Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java", "diffHunk": "@@ -178,14 +176,35 @@ public boolean isSystem() {\n \n         private final String aliasName;\n         private final List<IndexMetadata> referenceIndexMetadatas;\n-        private final SetOnce<IndexMetadata> writeIndex = new SetOnce<>();\n+        private final IndexMetadata writeIndex;\n         private final boolean isHidden;\n \n-        public Alias(AliasMetadata aliasMetadata, IndexMetadata indexMetadata) {\n+        public Alias(AliasMetadata aliasMetadata, List<IndexMetadata> indices) {\n             this.aliasName = aliasMetadata.getAlias();\n-            this.referenceIndexMetadatas = new ArrayList<>();\n-            this.referenceIndexMetadatas.add(indexMetadata);\n+            this.referenceIndexMetadatas = indices;\n+\n+            List<IndexMetadata> writeIndices = indices.stream()\n+                .filter(idxMeta -> Boolean.TRUE.equals(idxMeta.getAliases().get(aliasName).writeIndex()))\n+                .collect(Collectors.toList());\n+\n+            if (writeIndices.isEmpty() && referenceIndexMetadatas.size() == 1\n+                && referenceIndexMetadatas.get(0).getAliases().get(aliasName).writeIndex() == null) {\n+                writeIndices.add(referenceIndexMetadatas.get(0));\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE0MzA3Mg=="}, "originalCommit": {"oid": "e4596b4b63f8a02b67476717621aac307751a0e6"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4550, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}