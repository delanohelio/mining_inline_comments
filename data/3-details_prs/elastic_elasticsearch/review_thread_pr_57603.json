{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MjMxMzU0", "number": 57603, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNzo1MTozOVrOECciqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNzo1MTozOVrOECciqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDAwMjMzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/StringFunctionUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNzo1MTozOVrOGe58yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDoyODoyN1rOGe_nJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA1OTkxMg==", "bodyText": "Nit: more compact alternative.\nint i = s.length() - 1;\nwhile (i >= 0 && Character.isWhitespace(s.charAt(i))) {\n    i --;\n}\nreturn s.substring(0, i + 1);\n\nSimilar for treamLeading.", "url": "https://github.com/elastic/elasticsearch/pull/57603#discussion_r435059912", "createdAt": "2020-06-04T07:51:39Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/StringFunctionUtils.java", "diffHunk": "@@ -47,11 +48,16 @@ static String trimTrailingWhitespaces(String s) {\n             return s;\n         }\n \n-        StringBuilder sb = new StringBuilder(s);\n-        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(sb.length() - 1))) {\n-            sb.deleteCharAt(sb.length() - 1);\n+        int endIdx = -1;\n+        for (int i = s.length() - 1; (i >= 0) && (endIdx < 0); i--) {\n+            if (Character.isWhitespace(s.charAt(i)) == false) {\n+                endIdx = i;\n+            }\n         }\n-        return sb.toString();\n+        if (endIdx < 0) {\n+            return EMPTY;\n+        }\n+        return s.substring(0, endIdx + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9efe125139ed8754f49a9289edfb189fd30662c1"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE1MjY3Ng==", "bodyText": "@bpintea cool, thx, with your approach:\nBenchmark                         Mode  Cnt      Score    Error  Units\nStringTrim.testWithJavaStrip      avgt   25   1342.251 \u00b1  7.019  ns/op\nStringTrim.testWithStringBuilder  avgt   25  82599.137 \u00b1 86.073  ns/op\nStringTrim.testWithSubstring      avgt   25   1035.607 \u00b1 15.208  ns/op", "url": "https://github.com/elastic/elasticsearch/pull/57603#discussion_r435152676", "createdAt": "2020-06-04T10:28:27Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/StringFunctionUtils.java", "diffHunk": "@@ -47,11 +48,16 @@ static String trimTrailingWhitespaces(String s) {\n             return s;\n         }\n \n-        StringBuilder sb = new StringBuilder(s);\n-        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(sb.length() - 1))) {\n-            sb.deleteCharAt(sb.length() - 1);\n+        int endIdx = -1;\n+        for (int i = s.length() - 1; (i >= 0) && (endIdx < 0); i--) {\n+            if (Character.isWhitespace(s.charAt(i)) == false) {\n+                endIdx = i;\n+            }\n         }\n-        return sb.toString();\n+        if (endIdx < 0) {\n+            return EMPTY;\n+        }\n+        return s.substring(0, endIdx + 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA1OTkxMg=="}, "originalCommit": {"oid": "9efe125139ed8754f49a9289edfb189fd30662c1"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3642, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}