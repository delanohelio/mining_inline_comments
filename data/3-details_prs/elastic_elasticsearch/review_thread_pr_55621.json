{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NDk2Mzc3", "number": 55621, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODowMTo1OVrOD1Jm_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODowMTo1OVrOD1Jm_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDU4NTU2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODowMTo1OVrOGKcFrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNTo1NDozMFrOGKvg0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5OTE0OQ==", "bodyText": "Ca we use generics here? I think using them will avoid the casting we are doing in the subclasses and it would look cleaner? Something like:\npublic abstract static class TypeParser<T extends Builder> implements Mapper.TypeParser {", "url": "https://github.com/elastic/elasticsearch/pull/55621#discussion_r413599149", "createdAt": "2020-04-23T08:01:59Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java", "diffHunk": "@@ -177,88 +122,50 @@ protected void setupFieldType(BuilderContext context) {\n             if (name().isEmpty()) {\n                 throw new IllegalArgumentException(\"name cannot be empty string\");\n             }\n-\n-            AbstractGeometryFieldType ft = (AbstractGeometryFieldType)fieldType();\n-            ft.setOrientation(orientation().value());\n         }\n     }\n \n-    protected static final String DEPRECATED_PARAMETERS_KEY = \"deprecated_parameters\";\n-\n     public abstract static class TypeParser implements Mapper.TypeParser {\n         protected abstract Builder newBuilder(String name, Map<String, Object> params);\n \n-        protected boolean parseXContentParameters(String name, Map.Entry<String, Object> entry, Map<String, Object> params)\n-                throws MapperParsingException {\n-            if (DeprecatedParameters.parse(name, entry.getKey(), entry.getValue(),\n-                (DeprecatedParameters)params.get(DEPRECATED_PARAMETERS_KEY))) {\n-                return true;\n-            }\n-            return false;\n-        }\n-\n-        @Override\n-        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n-            Map<String, Object> params = new HashMap<>();\n-            boolean parsedDeprecatedParameters = false;\n-            params.put(DEPRECATED_PARAMETERS_KEY, new DeprecatedParameters());\n+        public Builder parse(String name, Map<String, Object> node, Map<String, Object> params, ParserContext parserContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65c92571d5bd0e5d075d1c9d60017fcf7bd9a905"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkxNzM5NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/55621#discussion_r413917394", "createdAt": "2020-04-23T15:54:30Z", "author": {"login": "nknize"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java", "diffHunk": "@@ -177,88 +122,50 @@ protected void setupFieldType(BuilderContext context) {\n             if (name().isEmpty()) {\n                 throw new IllegalArgumentException(\"name cannot be empty string\");\n             }\n-\n-            AbstractGeometryFieldType ft = (AbstractGeometryFieldType)fieldType();\n-            ft.setOrientation(orientation().value());\n         }\n     }\n \n-    protected static final String DEPRECATED_PARAMETERS_KEY = \"deprecated_parameters\";\n-\n     public abstract static class TypeParser implements Mapper.TypeParser {\n         protected abstract Builder newBuilder(String name, Map<String, Object> params);\n \n-        protected boolean parseXContentParameters(String name, Map.Entry<String, Object> entry, Map<String, Object> params)\n-                throws MapperParsingException {\n-            if (DeprecatedParameters.parse(name, entry.getKey(), entry.getValue(),\n-                (DeprecatedParameters)params.get(DEPRECATED_PARAMETERS_KEY))) {\n-                return true;\n-            }\n-            return false;\n-        }\n-\n-        @Override\n-        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n-            Map<String, Object> params = new HashMap<>();\n-            boolean parsedDeprecatedParameters = false;\n-            params.put(DEPRECATED_PARAMETERS_KEY, new DeprecatedParameters());\n+        public Builder parse(String name, Map<String, Object> node, Map<String, Object> params, ParserContext parserContext) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5OTE0OQ=="}, "originalCommit": {"oid": "65c92571d5bd0e5d075d1c9d60017fcf7bd9a905"}, "originalPosition": 200}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2660, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}