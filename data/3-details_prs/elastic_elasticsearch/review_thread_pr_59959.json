{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0Mzg4MzQy", "number": 59959, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMToxODo1NVrOEQzL0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzowMjoyOFrOES56iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDUxMjgzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMToxODo1NVrOG1KKCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzo1OTo0MlrOG1XL9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NDEyMg==", "bodyText": "Since i is typically an integer, maybe use mapIn or something like that?", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r458394122", "createdAt": "2020-07-21T21:18:55Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsResponse.java", "diffHunk": "@@ -61,23 +60,18 @@\n \n     GetFieldMappingsResponse(StreamInput in) throws IOException {\n         super(in);\n-        int size = in.readVInt();\n-        Map<String, Map<String, FieldMappingMetadata>> indexMapBuilder = new HashMap<>(size);\n-        for (int i = 0; i < size; i++) {\n-            String index = in.readString();\n-            if (in.getVersion().before(Version.V_8_0_0)) {\n-                int typesSize = in.readVInt();\n+        mappings = unmodifiableMap(in.readMap(StreamInput::readString, i -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b7ec6d59ce4b0c36120fc8321805dcc4cb4d5e3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNzYwNA==", "bodyText": "Makes sense, renamed :)", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r458607604", "createdAt": "2020-07-22T07:59:42Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsResponse.java", "diffHunk": "@@ -61,23 +60,18 @@\n \n     GetFieldMappingsResponse(StreamInput in) throws IOException {\n         super(in);\n-        int size = in.readVInt();\n-        Map<String, Map<String, FieldMappingMetadata>> indexMapBuilder = new HashMap<>(size);\n-        for (int i = 0; i < size; i++) {\n-            String index = in.readString();\n-            if (in.getVersion().before(Version.V_8_0_0)) {\n-                int typesSize = in.readVInt();\n+        mappings = unmodifiableMap(in.readMap(StreamInput::readString, i -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NDEyMg=="}, "originalCommit": {"oid": "8b7ec6d59ce4b0c36120fc8321805dcc4cb4d5e3"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDUxOTY1OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMToyMTowMlrOG1KOLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODowMDoxM1rOG1XNHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NTE4MA==", "bodyText": "Since this PR is labeled to be backported to 7.10, shouldn't we keep this as is so the backport is easy, and cleanup in a separate change just for master?", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r458395180", "createdAt": "2020-07-21T21:21:02Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java", "diffHunk": "@@ -213,21 +211,16 @@ public int compareTo(StoreStatus other) {\n      * Single node failure while retrieving shard store information\n      */\n     public static class Failure extends DefaultShardOperationFailedException {\n-        private String nodeId;\n+        private final String nodeId;\n \n         public Failure(String nodeId, String index, int shardId, Throwable reason) {\n             super(index, shardId, reason);\n             this.nodeId = nodeId;\n         }\n \n         private Failure(StreamInput in) throws IOException {\n-            if (in.getVersion().before(Version.V_7_4_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b7ec6d59ce4b0c36120fc8321805dcc4cb4d5e3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNzkwMw==", "bodyText": "Makes sense, less noisy I'll batch this with a few other cleanups of outdated version handling in master soon :)", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r458607903", "createdAt": "2020-07-22T08:00:13Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java", "diffHunk": "@@ -213,21 +211,16 @@ public int compareTo(StoreStatus other) {\n      * Single node failure while retrieving shard store information\n      */\n     public static class Failure extends DefaultShardOperationFailedException {\n-        private String nodeId;\n+        private final String nodeId;\n \n         public Failure(String nodeId, String index, int shardId, Throwable reason) {\n             super(index, shardId, reason);\n             this.nodeId = nodeId;\n         }\n \n         private Failure(StreamInput in) throws IOException {\n-            if (in.getVersion().before(Version.V_7_4_0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NTE4MA=="}, "originalCommit": {"oid": "8b7ec6d59ce4b0c36120fc8321805dcc4cb4d5e3"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDUyNDI2OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMToyMjozNVrOG1KRIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMToyMjozNVrOG1KRIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NTkzOA==", "bodyText": "ditto on making this change in a dedicated PR for master only", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r458395938", "createdAt": "2020-07-21T21:22:35Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java", "diffHunk": "@@ -950,9 +950,7 @@ public void writeTo(StreamOutput out) throws IOException {\n         coordinationMetadata.writeTo(out);\n         writeSettingsToStream(transientSettings, out);\n         writeSettingsToStream(persistentSettings, out);\n-        if (out.getVersion().onOrAfter(Version.V_7_3_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b7ec6d59ce4b0c36120fc8321805dcc4cb4d5e3"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjU4Njk5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzowMjoyOFrOG4WD7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozOToxNVrOG4ZkXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczNDg5Mg==", "bodyText": "Maybe this should exist in MappingMetadata, rather than a random response class?", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r461734892", "createdAt": "2020-07-28T17:02:28Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsResponse.java", "diffHunk": "@@ -69,6 +69,10 @@ public GetMappingsResponse(ImmutableOpenMap<String, MappingMetadata> mappings) {\n \n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n+        writeMappingMetadata(out, mappings);\n+    }\n+\n+    public static void writeMappingMetadata(StreamOutput out, ImmutableOpenMap<String, MappingMetadata> mappings) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf77da242db2784b3d592796c250b41bb458489e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MjM1MQ==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r461792351", "createdAt": "2020-07-28T18:39:15Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsResponse.java", "diffHunk": "@@ -69,6 +69,10 @@ public GetMappingsResponse(ImmutableOpenMap<String, MappingMetadata> mappings) {\n \n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n+        writeMappingMetadata(out, mappings);\n+    }\n+\n+    public static void writeMappingMetadata(StreamOutput out, ImmutableOpenMap<String, MappingMetadata> mappings) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczNDg5Mg=="}, "originalCommit": {"oid": "bf77da242db2784b3d592796c250b41bb458489e"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2175, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}