{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMjY1NjM2", "number": 65121, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMTozMTo1OFrOE7AEpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMTozMTo1OFrOE7AEpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzAyNjMxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/translog/Checkpoint.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMTozMTo1OFrOH2ZGZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjowNzoyMlrOH2aazQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc5NjM4OA==", "bodyText": "This is also used by TranslogWriter.writeCheckpoint(), where there is no need to fsync the metadata (and we should not for performance reasons).", "url": "https://github.com/elastic/elasticsearch/pull/65121#discussion_r526796388", "createdAt": "2020-11-19T11:31:58Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/index/translog/Checkpoint.java", "diffHunk": "@@ -172,9 +172,8 @@ public static void write(ChannelFactory factory, Path checkpointFile, Checkpoint\n         // now go and write to the channel, in one go.\n         try (FileChannel channel = factory.open(checkpointFile, options)) {\n             Channels.writeToChannel(bytes, channel);\n-            // no need to force metadata, file size stays the same and we did the full fsync\n-            // when we first created the file, so the directory entry doesn't change as well\n-            channel.force(false);\n+            // fsync with metadata as we use this method when creating the file\n+            channel.force(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0bc9901813e2b4ab4e823a4fd167ff5b2d61652"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgxNzk5Nw==", "bodyText": "I think that uses the other signature with the file channel passed? This method is only used by the 3 production code spots I adjusted in this PR as far as I can tell:", "url": "https://github.com/elastic/elasticsearch/pull/65121#discussion_r526817997", "createdAt": "2020-11-19T12:07:22Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/index/translog/Checkpoint.java", "diffHunk": "@@ -172,9 +172,8 @@ public static void write(ChannelFactory factory, Path checkpointFile, Checkpoint\n         // now go and write to the channel, in one go.\n         try (FileChannel channel = factory.open(checkpointFile, options)) {\n             Channels.writeToChannel(bytes, channel);\n-            // no need to force metadata, file size stays the same and we did the full fsync\n-            // when we first created the file, so the directory entry doesn't change as well\n-            channel.force(false);\n+            // fsync with metadata as we use this method when creating the file\n+            channel.force(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc5NjM4OA=="}, "originalCommit": {"oid": "a0bc9901813e2b4ab4e823a4fd167ff5b2d61652"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2920, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}