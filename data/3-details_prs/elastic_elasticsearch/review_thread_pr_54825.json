{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzU0MzIx", "number": 54825, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDowNDo1MVrODvfWgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoxMDozM1rODvfezg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTIzMzMwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/DeleteAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDowNDo1MVrOGB8VPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDowNDo1MVrOGB8VPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MDIzNg==", "bodyText": "@andreidan Version has been adjusted here", "url": "https://github.com/elastic/elasticsearch/pull/54825#discussion_r404690236", "createdAt": "2020-04-07T10:04:51Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/DeleteAction.java", "diffHunk": "@@ -5,38 +5,63 @@\n  */\n package org.elasticsearch.xpack.core.ilm;\n \n+import org.elasticsearch.Version;\n import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.ParseField;\n import org.elasticsearch.common.Strings;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n-import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.common.xcontent.XContentParser;\n \n import java.io.IOException;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.Objects;\n \n /**\n  * A {@link LifecycleAction} which deletes the index.\n  */\n public class DeleteAction implements LifecycleAction {\n     public static final String NAME = \"delete\";\n \n-    private static final ObjectParser<DeleteAction, Void> PARSER = new ObjectParser<>(NAME, DeleteAction::new);\n+    public static final ParseField DELETE_SEARCHABLE_SNAPSHOT_FIELD = new ParseField(\"delete_searchable_snapshot\");\n+\n+    private static final ConstructingObjectParser<DeleteAction, Void> PARSER = new ConstructingObjectParser<>(NAME,\n+        a -> new DeleteAction(a[0] == null ? true : (boolean) a[0]));\n+\n+    static {\n+        PARSER.declareBoolean(ConstructingObjectParser.optionalConstructorArg(), DELETE_SEARCHABLE_SNAPSHOT_FIELD);\n+    }\n \n     public static DeleteAction parse(XContentParser parser) {\n         return PARSER.apply(parser, null);\n     }\n \n+    private final boolean deleteSearchableSnapshot;\n+\n     public DeleteAction() {\n+        this(true);\n+    }\n+\n+    public DeleteAction(boolean deleteSearchableSnapshot) {\n+        this.deleteSearchableSnapshot = deleteSearchableSnapshot;\n     }\n \n     public DeleteAction(StreamInput in) throws IOException {\n+        if (in.getVersion().onOrAfter(Version.V_7_8_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51955f3b5823b7f8017576b6f1026e2ea149316"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTIzMzk2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/DeleteAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDowNTowMlrOGB8Vnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToyMzo0OVrOGB-_qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MDMzNQ==", "bodyText": "@andreidan Version has been adjusted here", "url": "https://github.com/elastic/elasticsearch/pull/54825#discussion_r404690335", "createdAt": "2020-04-07T10:05:02Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/DeleteAction.java", "diffHunk": "@@ -5,38 +5,63 @@\n  */\n package org.elasticsearch.xpack.core.ilm;\n \n+import org.elasticsearch.Version;\n import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.ParseField;\n import org.elasticsearch.common.Strings;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n-import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.common.xcontent.XContentParser;\n \n import java.io.IOException;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.Objects;\n \n /**\n  * A {@link LifecycleAction} which deletes the index.\n  */\n public class DeleteAction implements LifecycleAction {\n     public static final String NAME = \"delete\";\n \n-    private static final ObjectParser<DeleteAction, Void> PARSER = new ObjectParser<>(NAME, DeleteAction::new);\n+    public static final ParseField DELETE_SEARCHABLE_SNAPSHOT_FIELD = new ParseField(\"delete_searchable_snapshot\");\n+\n+    private static final ConstructingObjectParser<DeleteAction, Void> PARSER = new ConstructingObjectParser<>(NAME,\n+        a -> new DeleteAction(a[0] == null ? true : (boolean) a[0]));\n+\n+    static {\n+        PARSER.declareBoolean(ConstructingObjectParser.optionalConstructorArg(), DELETE_SEARCHABLE_SNAPSHOT_FIELD);\n+    }\n \n     public static DeleteAction parse(XContentParser parser) {\n         return PARSER.apply(parser, null);\n     }\n \n+    private final boolean deleteSearchableSnapshot;\n+\n     public DeleteAction() {\n+        this(true);\n+    }\n+\n+    public DeleteAction(boolean deleteSearchableSnapshot) {\n+        this.deleteSearchableSnapshot = deleteSearchableSnapshot;\n     }\n \n     public DeleteAction(StreamInput in) throws IOException {\n+        if (in.getVersion().onOrAfter(Version.V_7_8_0)) {\n+            this.deleteSearchableSnapshot = in.readBoolean();\n+        } else {\n+            this.deleteSearchableSnapshot = true;\n+        }\n     }\n \n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n+        if (out.getVersion().onOrAfter(Version.V_7_8_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51955f3b5823b7f8017576b6f1026e2ea149316"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMzg2NQ==", "bodyText": "Thanks @tlrx", "url": "https://github.com/elastic/elasticsearch/pull/54825#discussion_r404733865", "createdAt": "2020-04-07T11:23:49Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/DeleteAction.java", "diffHunk": "@@ -5,38 +5,63 @@\n  */\n package org.elasticsearch.xpack.core.ilm;\n \n+import org.elasticsearch.Version;\n import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.ParseField;\n import org.elasticsearch.common.Strings;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n-import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.common.xcontent.XContentParser;\n \n import java.io.IOException;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.Objects;\n \n /**\n  * A {@link LifecycleAction} which deletes the index.\n  */\n public class DeleteAction implements LifecycleAction {\n     public static final String NAME = \"delete\";\n \n-    private static final ObjectParser<DeleteAction, Void> PARSER = new ObjectParser<>(NAME, DeleteAction::new);\n+    public static final ParseField DELETE_SEARCHABLE_SNAPSHOT_FIELD = new ParseField(\"delete_searchable_snapshot\");\n+\n+    private static final ConstructingObjectParser<DeleteAction, Void> PARSER = new ConstructingObjectParser<>(NAME,\n+        a -> new DeleteAction(a[0] == null ? true : (boolean) a[0]));\n+\n+    static {\n+        PARSER.declareBoolean(ConstructingObjectParser.optionalConstructorArg(), DELETE_SEARCHABLE_SNAPSHOT_FIELD);\n+    }\n \n     public static DeleteAction parse(XContentParser parser) {\n         return PARSER.apply(parser, null);\n     }\n \n+    private final boolean deleteSearchableSnapshot;\n+\n     public DeleteAction() {\n+        this(true);\n+    }\n+\n+    public DeleteAction(boolean deleteSearchableSnapshot) {\n+        this.deleteSearchableSnapshot = deleteSearchableSnapshot;\n     }\n \n     public DeleteAction(StreamInput in) throws IOException {\n+        if (in.getVersion().onOrAfter(Version.V_7_8_0)) {\n+            this.deleteSearchableSnapshot = in.readBoolean();\n+        } else {\n+            this.deleteSearchableSnapshot = true;\n+        }\n     }\n \n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n+        if (out.getVersion().onOrAfter(Version.V_7_8_0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MDMzNQ=="}, "originalCommit": {"oid": "a51955f3b5823b7f8017576b6f1026e2ea149316"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTI1NDU0OnYy", "diffSide": "LEFT", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoxMDozM1rOGB8ilQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDozNjozOVrOGB9cMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MzY1Mw==", "bodyText": "This change means that we register these actions whether the feature flag is enabled or not, which I think we should avoid. Can we revert this?", "url": "https://github.com/elastic/elasticsearch/pull/54825#discussion_r404693653", "createdAt": "2020-04-07T10:10:33Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -237,15 +237,11 @@ public void onIndexModule(IndexModule indexModule) {\n \n     @Override\n     public List<ActionHandler<? extends ActionRequest, ? extends ActionResponse>> getActions() {\n-        if (SEARCHABLE_SNAPSHOTS_FEATURE_ENABLED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51955f3b5823b7f8017576b6f1026e2ea149316"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwODQwMw==", "bodyText": "I've been confused by the TransportClient for which I thought we should not force a system prop to be present to load the appropriate actions.\nBut the feature flag will be removed at some point, so we don't really care. I reverted this.", "url": "https://github.com/elastic/elasticsearch/pull/54825#discussion_r404708403", "createdAt": "2020-04-07T10:36:39Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -237,15 +237,11 @@ public void onIndexModule(IndexModule indexModule) {\n \n     @Override\n     public List<ActionHandler<? extends ActionRequest, ? extends ActionResponse>> getActions() {\n-        if (SEARCHABLE_SNAPSHOTS_FEATURE_ENABLED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MzY1Mw=="}, "originalCommit": {"oid": "a51955f3b5823b7f8017576b6f1026e2ea149316"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1247, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}