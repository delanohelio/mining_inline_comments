{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NzYyNjA0", "number": 59676, "title": "Scripting: fix generateContextDoc path and url", "bodyText": "Add doc runtime class path\nUse getAllHttpSocketURI.get(0) instead of getAllHttpSocketURI to get a single\ntest cluster URL rather than a list", "createdAt": "2020-07-15T21:58:48Z", "url": "https://github.com/elastic/elasticsearch/pull/59676", "merged": true, "mergeCommit": {"oid": "3057e0fbd1f4becb77cd381bc939b5a603d1204d"}, "closed": true, "closedAt": "2020-07-15T22:48:15Z", "author": {"login": "stu-elastic"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1RoWwAH2gAyNDQ5NzYyNjA0OjE0OTYxNTBiZDc1OWQ4NTZjNGUyNjNhZTAzOWEzMDFmMmVhOTBlYTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1SN9AAH2gAyNDQ5NzYyNjA0OmQ5YmM4NjM4MGUxODQyNTA0ZDYxYTBiMjMzMGU3ZjFhODZkNjE5NWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1496150bd759d856c4e263ae039a301f2ea90ea5", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/1496150bd759d856c4e263ae039a301f2ea90ea5", "committedDate": "2020-07-15T21:36:32Z", "message": "Scripting: fix generateContextDoc path and url\n\n* Add doc runtime class path\n* Use `getHttpSocketURI` instead of `getAllHttpSocketURI` to get a single\n  test cluster URL rather than a list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db46123d0e40d0b5fa75222d88201dea9edd7db6", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/db46123d0e40d0b5fa75222d88201dea9edd7db6", "committedDate": "2020-07-15T21:56:05Z", "message": "waitForAllConditions()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/b29a421d584b3df5a2da19846c08688bbbbf66f4", "committedDate": "2020-07-15T21:56:46Z", "message": "Update scripting context docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5Mzc1MTA4", "url": "https://github.com/elastic/elasticsearch/pull/59676#pullrequestreview-449375108", "createdAt": "2020-07-15T22:02:05Z", "commit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowMjowNVrOGyS2WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjowNDoxNVrOGyS5sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MDgwOA==", "bodyText": "Please add this to the exclusions list. Check out isInternalClass as part of ContextDocGenerator. We try to exclude other internal methods here. There isn't currently a better way to do this.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455390808", "createdAt": "2020-07-15T22:02:05Z", "author": {"login": "jdconrad"}, "path": "docs/painless/painless-api-reference/painless-api-reference-string-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-ql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.ql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalQlScriptUtils]]\n+==== InternalQlScriptUtils\n+* static Number add(Number, Number)\n+* static Boolean and(Boolean, Boolean)\n+* static Number div(Number, Number)\n+* static def docValue(Map, String)\n+* static Boolean eq(Object, Object)\n+* static Boolean gt(Object, Object)\n+* static Boolean gte(Object, Object)\n+* static Boolean in(Object, List)\n+* static Boolean isNotNull(Object)\n+* static Boolean isNull(Object)\n+* static Boolean lt(Object, Object)\n+* static Boolean lte(Object, Object)\n+* static Number mod(Number, Number)\n+* static Number mul(Number, Number)\n+* static Number neg(Number)\n+* static Boolean neq(Object, Object)\n+* static Boolean not(Boolean)\n+* static boolean nullSafeFilter(Boolean)\n+* static double nullSafeSortNumeric(Number)\n+* static String nullSafeSortString(Object)\n+* static Boolean nulleq(Object, Object)\n+* static Boolean or(Boolean, Boolean)\n+* static Boolean regex(String, String)\n+* static Boolean startsWith(String, String, Boolean)\n+* static Number sub(Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTA0NA==", "bodyText": "Please exclude these as well. These really are only meant to be used internally.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455391044", "createdAt": "2020-07-15T22:02:43Z", "author": {"login": "jdconrad"}, "path": "docs/painless/painless-api-reference/painless-api-reference-string-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTQyNw==", "bodyText": "More to exclude.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455391427", "createdAt": "2020-07-15T22:03:37Z", "author": {"login": "jdconrad"}, "path": "docs/painless/painless-api-reference/painless-api-reference-shared/packages.asciidoc", "diffHunk": "@@ -8642,6 +8655,14 @@ See the <<painless-api-reference-shared, Shared API>> for a high-level overview\n * ZonedDateTime withZoneSameLocal(ZoneId)\n \n \n+[[painless-api-reference-shared-ScoreScript-ExplanationHolder]]\n+==== ScoreScript.ExplanationHolder\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* void set(String)\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTY2NA==", "bodyText": "More to exclude.", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455391664", "createdAt": "2020-07-15T22:04:15Z", "author": {"login": "jdconrad"}, "path": "docs/painless/painless-api-reference/painless-api-reference-number-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-number-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== Number Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-number-sort, Number Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-number-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-number-sort-org-elasticsearch-xpack-ql-expression-function-scalar-whitelist\"]\n+=== Number Sort API for package org.elasticsearch.xpack.ql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-number-sort, Number Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-number-sort-InternalQlScriptUtils]]\n+==== InternalQlScriptUtils\n+* static Number add(Number, Number)\n+* static Boolean and(Boolean, Boolean)\n+* static Number div(Number, Number)\n+* static def docValue(Map, String)\n+* static Boolean eq(Object, Object)\n+* static Boolean gt(Object, Object)\n+* static Boolean gte(Object, Object)\n+* static Boolean in(Object, List)\n+* static Boolean isNotNull(Object)\n+* static Boolean isNull(Object)\n+* static Boolean lt(Object, Object)\n+* static Boolean lte(Object, Object)\n+* static Number mod(Number, Number)\n+* static Number mul(Number, Number)\n+* static Number neg(Number)\n+* static Boolean neq(Object, Object)\n+* static Boolean not(Boolean)\n+* static boolean nullSafeFilter(Boolean)\n+* static double nullSafeSortNumeric(Number)\n+* static String nullSafeSortString(Object)\n+* static Boolean nulleq(Object, Object)\n+* static Boolean or(Boolean, Boolean)\n+* static Boolean regex(String, String)\n+* static Boolean startsWith(String, String, Boolean)\n+* static Number sub(Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38c40958f1921acf63fae7a09f105382595a8a39", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/38c40958f1921acf63fae7a09f105382595a8a39", "committedDate": "2020-07-15T22:14:37Z", "message": "Additionaly exclude: InternalEqlScriptUtils, InternalQlScriptUtils, InternalQlScriptUtils, ScoreScript.ExplanationHolder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "095511f091f3e179b9bdd35e0f94c573fc4ab3ac", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/095511f091f3e179b9bdd35e0f94c573fc4ab3ac", "committedDate": "2020-07-15T22:14:48Z", "message": "Regen after exclusion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MzgxNTY0", "url": "https://github.com/elastic/elasticsearch/pull/59676#pullrequestreview-449381564", "createdAt": "2020-07-15T22:16:02Z", "commit": {"oid": "095511f091f3e179b9bdd35e0f94c573fc4ab3ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28203f4079f64db327355bb9d94dc917f4f411c0", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/28203f4079f64db327355bb9d94dc917f4f411c0", "committedDate": "2020-07-15T22:17:20Z", "message": "ScoreScript.ExplanationHolder -> ScoreScript$ExplanationHolder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9bc86380e1842504d61a0b2330e7f1a86d6195c", "author": {"user": {"login": "stu-elastic", "name": "Stuart Tettemer"}}, "url": "https://github.com/elastic/elasticsearch/commit/d9bc86380e1842504d61a0b2330e7f1a86d6195c", "committedDate": "2020-07-15T22:17:36Z", "message": "Regen after ScoreScript$ExplanationHolder exclusion"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4269, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}