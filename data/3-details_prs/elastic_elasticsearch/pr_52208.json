{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjk1NzE1", "number": 52208, "title": "Add Bulk stats track the bulk per shard", "bodyText": "Add Bulk stats track the bulk sizes per shard and the time spent on the bulk shard request\nIt might make sense to track the average bulk sizes per shard , since a large bulk request may be chopped down into much smaller shard level bulk operation on an index with high numbers of shards. This makes more sense to me than just tracking at the shard level since most clients are not partitioning by shard already.\nRegarding the statistics of shard bulk size, considering the high cost of re-serialization, only the source field of IndexRequest and the doc field of UpdateRequest are calculated here, while the DeleteRequest in bulk will be counted as 0.\nexample output:\n...\n     \"bulk\": {\n           \"total\": 1,\n           \"total_time_in_millis\": 412,\n           \"total_size_in_bytes\": 83\n      }\n...\n\nRelates (#50536)(#47345)", "createdAt": "2020-02-11T14:39:27Z", "url": "https://github.com/elastic/elasticsearch/pull/52208", "merged": true, "mergeCommit": {"oid": "05066aecf071ef0f66f99d83a1c95e3c8f11025b"}, "closed": true, "closedAt": "2020-04-20T09:09:29Z", "author": {"login": "zhichen"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDPAvBAH2gAyMzczNjk1NzE1OjI3MGU4ZDU0YjI5YmE1YjUwOTIxMjE1YWMwYzViYTA3NzA5NzYwNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYkuOMAH2gAyMzczNjk1NzE1OmY2ZTNmYjVlZmQ5ZWNhMmJmZTA1MGUyYzFkM2FlOTFjOTc1NGVjODQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "270e8d54b29ba5b50921215ac0c5ba0770976070", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/270e8d54b29ba5b50921215ac0c5ba0770976070", "committedDate": "2020-02-11T10:17:14Z", "message": "Add Bulk stats track the bulk sizes per shard and the time spent on the bulk shard request (#50536)(#47345)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MjQxNjg4", "url": "https://github.com/elastic/elasticsearch/pull/52208#pullrequestreview-359241688", "createdAt": "2020-02-14T21:54:35Z", "commit": {"oid": "270e8d54b29ba5b50921215ac0c5ba0770976070"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMTo1NDozNVrOFqEwmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMjowOToxOFrOFqFDmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY2MjQ4OQ==", "bodyText": "This time doesn't take into account rejections, meaning that rejections still increment the stats (since onRejection also calls finishRequest). This brings up a larger question, should rejected bulk operations contribute to the time and size?", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r379662489", "createdAt": "2020-02-14T21:54:35Z", "author": {"login": "dakrone"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java", "diffHunk": "@@ -187,6 +189,7 @@ private void finishRequest() {\n                     () -> new WritePrimaryResult<>(\n                         context.getBulkShardRequest(), context.buildShardResponse(), context.getLocationToSync(), null,\n                         context.getPrimary(), logger));\n+                primary.getBulkOperationListener().afterBulk(request.totalSizeInBytes(), System.nanoTime() - startBulkTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "270e8d54b29ba5b50921215ac0c5ba0770976070"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY2Mzg4OQ==", "bodyText": "Can you rename this to totalOperations to make it clearer what it's the total of?", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r379663889", "createdAt": "2020-02-14T21:58:33Z", "author": {"login": "dakrone"}, "path": "server/src/main/java/org/elasticsearch/index/bulk/stats/BulkStats.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.bulk.stats;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.common.unit.TimeValue;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.ToXContentFragment;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+public class BulkStats implements Writeable, ToXContentFragment {\n+\n+    private long total = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "270e8d54b29ba5b50921215ac0c5ba0770976070"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY2Mzk0Ng==", "bodyText": "Please add some javadocs for this class", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r379663946", "createdAt": "2020-02-14T21:58:43Z", "author": {"login": "dakrone"}, "path": "server/src/main/java/org/elasticsearch/index/bulk/stats/BulkStats.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.bulk.stats;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.common.unit.TimeValue;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.ToXContentFragment;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+public class BulkStats implements Writeable, ToXContentFragment {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "270e8d54b29ba5b50921215ac0c5ba0770976070"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY2NDI2MQ==", "bodyText": "This would be clearer as \"total_operations\" I think", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r379664261", "createdAt": "2020-02-14T21:59:40Z", "author": {"login": "dakrone"}, "path": "server/src/main/java/org/elasticsearch/index/bulk/stats/BulkStats.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.bulk.stats;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.common.unit.TimeValue;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.ToXContentFragment;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+public class BulkStats implements Writeable, ToXContentFragment {\n+\n+    private long total = 0;\n+    private long totalTimeInMillis = 0;\n+    private long totalSizeInBytes = 0;\n+\n+    public BulkStats() {\n+\n+    }\n+\n+    public BulkStats(StreamInput in) throws IOException {\n+        total = in.readVLong();\n+        totalTimeInMillis = in.readVLong();\n+        totalSizeInBytes = in.readVLong();\n+    }\n+\n+    public BulkStats(long total, long totalTimeInMillis, long totalSizeInBytes) {\n+        this.total = total;\n+        this.totalTimeInMillis = totalTimeInMillis;\n+        this.totalSizeInBytes = totalSizeInBytes;\n+    }\n+\n+    public void add(BulkStats bulkStats) {\n+        addTotals(bulkStats);\n+    }\n+\n+    public void addTotals(BulkStats bulkStats) {\n+        if (bulkStats == null) {\n+            return;\n+        }\n+        this.total += bulkStats.total;\n+        this.totalTimeInMillis += bulkStats.totalTimeInMillis;\n+        this.totalSizeInBytes += bulkStats.totalSizeInBytes;\n+    }\n+\n+    public long getTotalSizeInBytes() {\n+        return totalSizeInBytes;\n+    }\n+\n+    public long getTotal() {\n+        return total;\n+    }\n+\n+    public TimeValue getTotalTime() {\n+        return new TimeValue(totalTimeInMillis);\n+    }\n+\n+    public long getTotalTimeInMillis() {\n+        return totalTimeInMillis;\n+    }\n+\n+    @Override public void writeTo(StreamOutput out) throws IOException {\n+        out.writeVLong(total);\n+        out.writeVLong(totalTimeInMillis);\n+        out.writeVLong(totalSizeInBytes);\n+    }\n+\n+    @Override public XContentBuilder toXContent(XContentBuilder builder, ToXContent.Params params) throws IOException {\n+        builder.startObject(Fields.BULK);\n+        builder.field(Fields.TOTAL, total);\n+        builder.humanReadableField(Fields.TOTAL_TIME_IN_MILLIS, Fields.TOTAL_TIME, getTotalTime());\n+        builder.field(Fields.TOTAL_SIZE_IN_BYTES, totalSizeInBytes);\n+        builder.endObject();\n+        return builder;\n+    }\n+\n+    static final class Fields {\n+        static final String BULK = \"bulk\";\n+        static final String TOTAL = \"total\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "270e8d54b29ba5b50921215ac0c5ba0770976070"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY2NTI0NQ==", "bodyText": "Could you add some javadocs for this class please?", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r379665245", "createdAt": "2020-02-14T22:02:27Z", "author": {"login": "dakrone"}, "path": "server/src/main/java/org/elasticsearch/index/bulk/stats/ShardBulkStats.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.bulk.stats;\n+\n+import org.elasticsearch.common.metrics.CounterMetric;\n+import org.elasticsearch.common.metrics.MeanMetric;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+public class ShardBulkStats implements BulkOperationListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "270e8d54b29ba5b50921215ac0c5ba0770976070"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY2NzM1Mw==", "bodyText": "This would be better extending AbstractWireSerializingTestCase<BulkStats> and then implementing the createRandomInstance, mutateInstance, and instanceReader methods. We use that for testing wire serialization, equality, etc so we don't have to write the same tests for each class.", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r379667353", "createdAt": "2020-02-14T22:09:18Z", "author": {"login": "dakrone"}, "path": "server/src/test/java/org/elasticsearch/index/bulk/stats/BulkStatsTests.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.bulk.stats;\n+\n+import org.elasticsearch.common.io.stream.BytesStreamOutput;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.io.IOException;\n+\n+public class BulkStatsTests extends ESTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "270e8d54b29ba5b50921215ac0c5ba0770976070"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d05e87ddcc8f6b784e47e7f49e5aa488ca35db9", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/0d05e87ddcc8f6b784e47e7f49e5aa488ca35db9", "committedDate": "2020-02-15T12:24:12Z", "message": "Refactoring bulk stats test and add some java docs as mentioned in the review."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d988e98fffcfeb5b97be63cef50b5847b1a470a2", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/d988e98fffcfeb5b97be63cef50b5847b1a470a2", "committedDate": "2020-02-15T12:50:22Z", "message": "Adjust the code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc32e4e7aa30f2f2a0ee9c58d15c93a25f3944c0", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/bc32e4e7aa30f2f2a0ee9c58d15c93a25f3944c0", "committedDate": "2020-02-15T14:02:03Z", "message": "fix xpack monitoring test case."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efcff23f0de73ebd568a1d05b112a311c24a0ac6", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/efcff23f0de73ebd568a1d05b112a311c24a0ac6", "committedDate": "2020-02-17T16:13:28Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjc5NzQ0", "url": "https://github.com/elastic/elasticsearch/pull/52208#pullrequestreview-361279744", "createdAt": "2020-02-19T17:15:37Z", "commit": {"oid": "efcff23f0de73ebd568a1d05b112a311c24a0ac6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzoxNTozN1rOFrwFwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzozMzo1NVrOFrwvNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQyMDk5Mw==", "bodyText": "I believe this should be moved to before the finishRequest(), finishing the request entails running a number of things that happen as part of the listener passed in to this method, and while it could be good to capture the time spent doing those things, right now we do not capture them for the replica operation (since they are done after shardOperationOnReplica is called.\nIf we want to stick with tracking only the indexing time (rather than refresh, checkpoint update, etc), we should track the time prior to the finishRequest() call", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r381420993", "createdAt": "2020-02-19T17:15:37Z", "author": {"login": "dakrone"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java", "diffHunk": "@@ -166,6 +168,7 @@ protected void doRun() throws Exception {\n                 }\n                 // We're done, there's no more operations to execute so we resolve the wrapped listener\n                 finishRequest();\n+                primary.getBulkOperationListener().afterBulk(request.totalSizeInBytes(), System.nanoTime() - startBulkTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcff23f0de73ebd568a1d05b112a311c24a0ac6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQyODU0OA==", "bodyText": "This isn't mutating the instance in the right way, here's a better mutation:\nprotected BulkStats mutateInstance(BulkStats instance) {\n  switch (between(0, 2)) {\n    case 0:\n      return new BulkStats(randomValueOtherThan(instance.getTotalOperations(), ESTestCase::randomNonNegativeLong),\n          instance.getTotalTimeInMillis(), instance.getTotalSizeInBytes());\n    case 1:\n      return new BulkStats(instance.getTotalOperations(),\n          randomValueOtherThan(instance.getTotalTimeInMillis(), ESTestCase::randomNonNegativeLong),\n          instance.getTotalSizeInBytes());\n    case 2:\n      return new BulkStats(instance.getTotalOperations(), instance.getTotalTimeInMillis(),\n          randomValueOtherThan(instance.getTotalSizeInBytes(), ESTestCase::randomNonNegativeLong));\n    default:\n      throw new AssertionError(\"Illegal randomisation branch\");\n  }\n}\nWhere each branch mutates only a single value, and we ensure that we don't randomly get the same value by unlucky chance and cause a test failure.\n(I didn't test this code, it might have a syntax error, it's just an example)", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r381428548", "createdAt": "2020-02-19T17:28:31Z", "author": {"login": "dakrone"}, "path": "server/src/test/java/org/elasticsearch/index/bulk/stats/BulkStatsTests.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.bulk.stats;\n+\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.test.AbstractWireSerializingTestCase;\n+\n+public class BulkStatsTests extends AbstractWireSerializingTestCase<BulkStats> {\n+\n+    @Override\n+    protected Writeable.Reader<BulkStats> instanceReader() {\n+        return BulkStats::new;\n+    }\n+\n+    @Override\n+    protected BulkStats createTestInstance() {\n+        return new BulkStats(randomNonNegativeLong(), randomNonNegativeLong(), randomNonNegativeLong());\n+    }\n+\n+    @Override\n+    protected BulkStats mutateInstance(BulkStats instance) {\n+        BulkStats mutateBulkStats = new BulkStats(randomNonNegativeLong(), randomNonNegativeLong(), randomNonNegativeLong());\n+        switch (between(0, 1)) {\n+            case 0:\n+                break;\n+            case 1:\n+                mutateBulkStats.add(instance);\n+                break;\n+            default:\n+                throw new AssertionError(\"Illegal randomisation branch\");\n+        }\n+        return mutateBulkStats;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcff23f0de73ebd568a1d05b112a311c24a0ac6"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQyOTM2Mg==", "bodyText": "I don't think we need to index 500 documents here? We could probably get away with a smaller amount like 20, so that the test doesn't take as long? Was this added to try and ensure that the total time was greater than 0?", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r381429362", "createdAt": "2020-02-19T17:29:58Z", "author": {"login": "dakrone"}, "path": "server/src/test/java/org/elasticsearch/indices/stats/IndexStatsIT.java", "diffHunk": "@@ -1067,6 +1077,33 @@ public void testFilterCacheStats() throws Exception {\n         assertThat(response.getTotal().queryCache.getMemorySizeInBytes(), equalTo(0L));\n     }\n \n+    public void testBulkStats() throws Exception {\n+        final String index = \"test\";\n+        assertAcked(prepareCreate(index).setSettings(settingsBuilder().put(\"index.number_of_shards\", 2)\n+            .put(\"index.number_of_replicas\", 1)));\n+        ensureGreen();\n+        final BulkRequest request1 = new BulkRequest();\n+        for (int i = 0; i < 500; ++i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcff23f0de73ebd568a1d05b112a311c24a0ac6"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzMDU0Ng==", "bodyText": "I believe this should be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    \"total\": {\n          \n          \n            \n                                    \"total_operations\": {", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r381430546", "createdAt": "2020-02-19T17:32:06Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/resources/monitoring-es.json", "diffHunk": "@@ -84,6 +84,19 @@\n                           \"type\": \"long\"\n                         }\n                       }\n+                    },\n+                    \"bulk\": {\n+                      \"properties\": {\n+                        \"total\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcff23f0de73ebd568a1d05b112a311c24a0ac6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzMDgzMQ==", "bodyText": "Same here\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    \"total\": {\n          \n          \n            \n                                    \"total_operations\": {", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r381430831", "createdAt": "2020-02-19T17:32:35Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/resources/monitoring-es.json", "diffHunk": "@@ -115,6 +128,19 @@\n                           \"type\": \"long\"\n                         }\n                       }\n+                    },\n+                    \"bulk\": {\n+                      \"properties\": {\n+                        \"total\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcff23f0de73ebd568a1d05b112a311c24a0ac6"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzMDk1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"total\": {\n          \n          \n            \n                                \"total_operations\": {", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r381430958", "createdAt": "2020-02-19T17:32:49Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/resources/monitoring-es.json", "diffHunk": "@@ -258,6 +284,19 @@\n                       \"type\": \"long\"\n                     }\n                   }\n+                },\n+                \"bulk\": {\n+                  \"properties\": {\n+                    \"total\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcff23f0de73ebd568a1d05b112a311c24a0ac6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzMTI5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"total\": {\n          \n          \n            \n                                \"total_operations\": {", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r381431297", "createdAt": "2020-02-19T17:33:27Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/resources/monitoring-es.json", "diffHunk": "@@ -392,6 +431,19 @@\n                       \"type\": \"long\"\n                     }\n                   }\n+                },\n+                \"bulk\": {\n+                  \"properties\": {\n+                    \"total\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcff23f0de73ebd568a1d05b112a311c24a0ac6"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzMTYwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"total\": {\n          \n          \n            \n                                \"total_operations\": {", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r381431605", "createdAt": "2020-02-19T17:33:55Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/resources/monitoring-es.json", "diffHunk": "@@ -560,6 +612,19 @@\n                       \"type\": \"long\"\n                     }\n                   }\n+                },\n+                \"bulk\": {\n+                  \"properties\": {\n+                    \"total\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcff23f0de73ebd568a1d05b112a311c24a0ac6"}, "originalPosition": 87}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff52c8083d9bdac3a1d1a6dceee8447da856535f", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/ff52c8083d9bdac3a1d1a6dceee8447da856535f", "committedDate": "2020-02-20T06:34:52Z", "message": "Track the exponentially weighted moving average for the time and the size of shard bulk requests and modify bulk stats tests as mentioned in the review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbbd37062b9653c7d555ecf700d269eadce99d1c", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/bbbd37062b9653c7d555ecf700d269eadce99d1c", "committedDate": "2020-02-20T08:31:52Z", "message": "Track the exponentially weighted moving average for the time and the size of shard bulk requests and modify bulk stats tests as mentioned in the review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7419f46da0b351b5240e5e9ff660b15fb0de1dd5", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/7419f46da0b351b5240e5e9ff660b15fb0de1dd5", "committedDate": "2020-02-20T09:35:53Z", "message": "Track the exponentially weighted moving average for the time and the size of shard bulk requests and modify bulk stats tests as mentioned in the review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87fcdd61d478435ed07a1b9647068bfaada29f24", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/87fcdd61d478435ed07a1b9647068bfaada29f24", "committedDate": "2020-02-20T11:03:51Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad28121a1526cb612ce2d37b6a571b12ef212418", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/ad28121a1526cb612ce2d37b6a571b12ef212418", "committedDate": "2020-02-20T15:54:25Z", "message": "fix bwc cat shard case."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b32acaa8b5ee759b26a4e40c799fb4503ed261af", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/b32acaa8b5ee759b26a4e40c799fb4503ed261af", "committedDate": "2020-02-20T16:26:15Z", "message": "fix bwc cat shard case."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e07ed5177ea4ca3d0b74c9899bd3fe993341722", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/5e07ed5177ea4ca3d0b74c9899bd3fe993341722", "committedDate": "2020-02-21T02:13:16Z", "message": "fix bwc cat shard case."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "894331ae375cdb3632e6a35e5bd590565c646b95", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/894331ae375cdb3632e6a35e5bd590565c646b95", "committedDate": "2020-02-21T03:15:07Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a7e06e0bf8275d538f7e06bd74fcba828db9f57", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/2a7e06e0bf8275d538f7e06bd74fcba828db9f57", "committedDate": "2020-02-21T04:25:16Z", "message": "Missing avg time in monitoring-es.json"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODA4NjQ1", "url": "https://github.com/elastic/elasticsearch/pull/52208#pullrequestreview-362808645", "createdAt": "2020-02-21T17:53:55Z", "commit": {"oid": "2a7e06e0bf8275d538f7e06bd74fcba828db9f57"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzo1Mzo1NlrOFs_dXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzo1Mzo1NlrOFs_dXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcyMTM3NQ==", "bodyText": "I think rather than the null check above, it would be better to initialize these to new ExponentiallyWeightedMovingAverage(ALPHA, 0.0). We could then get rid of the null check in afterBulk(...) as well as stats()", "url": "https://github.com/elastic/elasticsearch/pull/52208#discussion_r382721375", "createdAt": "2020-02-21T17:53:56Z", "author": {"login": "dakrone"}, "path": "server/src/main/java/org/elasticsearch/index/bulk/stats/ShardBulkStats.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.bulk.stats;\n+\n+import org.elasticsearch.common.ExponentiallyWeightedMovingAverage;\n+import org.elasticsearch.common.metrics.CounterMetric;\n+import org.elasticsearch.common.metrics.MeanMetric;\n+import org.elasticsearch.index.shard.IndexShard;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/**\n+ * Internal class that maintains relevant shard bulk statistics / metrics.\n+ * @see IndexShard\n+ */\n+public class ShardBulkStats implements BulkOperationListener {\n+\n+    private final StatsHolder totalStats = new StatsHolder();\n+    private static final double ALPHA = 0.1;\n+\n+    public BulkStats stats() {\n+        return totalStats.stats();\n+    }\n+\n+    @Override\n+    public void afterBulk(long shardBulkSizeInBytes, long tookInNanos) {\n+        totalStats.totalSizeInBytes.inc(shardBulkSizeInBytes);\n+        totalStats.shardBulkMetric.inc(tookInNanos);\n+        if (totalStats.timeInMillis == null) {\n+            totalStats.timeInMillis = new ExponentiallyWeightedMovingAverage(ALPHA, tookInNanos);\n+        } else {\n+            totalStats.timeInMillis.addValue(tookInNanos);\n+        }\n+        if (totalStats.sizeInBytes == null) {\n+            totalStats.sizeInBytes = new ExponentiallyWeightedMovingAverage(ALPHA, shardBulkSizeInBytes);\n+        } else {\n+            totalStats.sizeInBytes.addValue(shardBulkSizeInBytes);\n+        }\n+    }\n+\n+    static final class StatsHolder {\n+        final MeanMetric shardBulkMetric = new MeanMetric();\n+        final CounterMetric totalSizeInBytes = new CounterMetric();\n+        ExponentiallyWeightedMovingAverage timeInMillis;\n+        ExponentiallyWeightedMovingAverage sizeInBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7e06e0bf8275d538f7e06bd74fcba828db9f57"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a5e64c48a22bceebd63bffa7f9bbbf670ba56b1", "author": {"user": {"login": "zhichen", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/7a5e64c48a22bceebd63bffa7f9bbbf670ba56b1", "committedDate": "2020-02-24T17:55:31Z", "message": "initialize ewma to new ExponentiallyWeightedMovingAverage(ALPHA, 0.0)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53642f46ba005b9e4500d8a4857d9de2b3cdf585", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/53642f46ba005b9e4500d8a4857d9de2b3cdf585", "committedDate": "2020-02-24T17:57:36Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f2686fab13c2a3a7c6a53acd542c46f38eb73b7", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/9f2686fab13c2a3a7c6a53acd542c46f38eb73b7", "committedDate": "2020-03-16T15:59:52Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTIxNzQ4", "url": "https://github.com/elastic/elasticsearch/pull/52208#pullrequestreview-375521748", "createdAt": "2020-03-16T19:27:11Z", "commit": {"oid": "9f2686fab13c2a3a7c6a53acd542c46f38eb73b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTM4Mjc1", "url": "https://github.com/elastic/elasticsearch/pull/52208#pullrequestreview-375538275", "createdAt": "2020-03-16T19:52:21Z", "commit": {"oid": "9f2686fab13c2a3a7c6a53acd542c46f38eb73b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6e3fb5efd9eca2bfe050e2c1d3ae91c9754ec84", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/f6e3fb5efd9eca2bfe050e2c1d3ae91c9754ec84", "committedDate": "2020-04-17T17:27:20Z", "message": "Merge branch 'master' into master"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2557, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}