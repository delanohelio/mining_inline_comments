{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3Mzc3NDUx", "number": 62391, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoxODo1MFrOEj_SIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoyMDowMVrOEj_T2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTcyNDQ5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/TimeoutChecker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoxODo1MFrOHSqMxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoxODo1MFrOHSqMxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyNzgxNQ==", "bodyText": "Doing this check unsynchronized means there's a chance for the matcher to be interrupted twice.\nI know you have worked around this in the test by using atLeastOnce(), but it leaves the question of what a real Joni Matcher does if interrupted twice.\nSo I think that either you need to investigate what happens if a real Joni Matcher is interrupted twice, or (probably simpler) put this bit in a synchronized block so that it cannot run while interruptLongRunningThreadIfRegistered is part way through.", "url": "https://github.com/elastic/elasticsearch/pull/62391#discussion_r489327815", "createdAt": "2020-09-16T10:18:50Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/TimeoutChecker.java", "diffHunk": "@@ -143,6 +141,9 @@ public void register(Matcher matcher) {\n                 boolean wasFalse = value.registered.compareAndSet(false, true);\n                 assert wasFalse;\n                 value.matchers.add(matcher);\n+                if (value.isTimedOut()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59bb8a111b4be96867d977a5d5ba98a0d14ab4d7"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTcyODg4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/filestructurefinder/TimeoutCheckerTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoyMDowMVrOHSqPZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoyMDowMVrOHSqPZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyODQ4NQ==", "bodyText": "It would be nice to get rid of the atLeastOnce and have the watchdog ensure it's exactly once, because otherwise it opens the question of what happens to a real Joni Matcher.", "url": "https://github.com/elastic/elasticsearch/pull/62391#discussion_r489328485", "createdAt": "2020-09-16T10:20:01Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/filestructurefinder/TimeoutCheckerTests.java", "diffHunk": "@@ -59,21 +60,19 @@ public void testCheckTimeoutExceeded() throws Exception {\n         }\n     }\n \n-    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/48861\")\n     public void testWatchdog() throws Exception {\n-        TimeValue timeout = TimeValue.timeValueMillis(500);\n+        final TimeValue timeout = TimeValue.timeValueMillis(randomIntBetween(10, 500));\n         try (TimeoutChecker timeoutChecker = new TimeoutChecker(\"watchdog test\", timeout, scheduler)) {\n-            TimeoutChecker.TimeoutCheckerWatchdog watchdog = (TimeoutChecker.TimeoutCheckerWatchdog) TimeoutChecker.watchdog;\n-\n+            final TimeoutChecker.TimeoutCheckerWatchdog watchdog = (TimeoutChecker.TimeoutCheckerWatchdog) TimeoutChecker.watchdog;\n             Matcher matcher = mock(Matcher.class);\n-            TimeoutChecker.watchdog.register(matcher);\n+            watchdog.register(matcher);\n             assertThat(watchdog.registry.get(Thread.currentThread()).matchers.size(), equalTo(1));\n             try {\n                 assertBusy(() -> {\n-                    verify(matcher).interrupt();\n+                    verify(matcher, atLeastOnce()).interrupt();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59bb8a111b4be96867d977a5d5ba98a0d14ab4d7"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1453, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}