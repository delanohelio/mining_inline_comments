{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMzY3OTI5", "number": 52039, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMjowMToyMFrODeABPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzozOTo0MVrODeBgWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzg0MTkwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/snapshots/SourceOnlySnapshot.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMjowMToyMFrOFm69cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzozMDowM1rOFm8_9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1NjIxMQ==", "bodyText": "@jpountz I am not sure about this change, and it seems the extension name has been changed. I think there are failures related with this change.", "url": "https://github.com/elastic/elasticsearch/pull/52039#discussion_r376356211", "createdAt": "2020-02-07T12:01:20Z", "author": {"login": "iverase"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/snapshots/SourceOnlySnapshot.java", "diffHunk": "@@ -51,7 +51,7 @@\n import java.util.function.Supplier;\n \n import static org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter.FIELDS_EXTENSION;\n-import static org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter.FIELDS_INDEX_EXTENSION;\n+import static org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter.INDEX_EXTENSION_PREFIX;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f9334de4305c717d7e2af04f5685ed77faf7820"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM4OTYyMQ==", "bodyText": "Can you try this patch?\ndiff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/snapshots/SourceOnlySnapshot.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/snapshots/SourceOnlySnapshot.java\nindex 25f8a73..8959a77 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/snapshots/SourceOnlySnapshot.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/snapshots/SourceOnlySnapshot.java\n@@ -44,15 +44,13 @@ import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.PrintStream;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Supplier;\n \n-import static org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter.FIELDS_EXTENSION;\n-import static org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter.INDEX_EXTENSION_PREFIX;\n-\n public class SourceOnlySnapshot {\n     private final Directory targetDirectory;\n     private final Supplier<Query> deleteByQuerySupplier;\n@@ -206,14 +204,18 @@ public class SourceOnlySnapshot {\n             FieldInfos newFieldInfos = new FieldInfos(fieldInfoCopy.toArray(new FieldInfo[0]));\n             codec.fieldInfosFormat().write(trackingDir, newSegmentInfo, segmentSuffix, newFieldInfos, IOContext.DEFAULT);\n             newInfo.setFieldInfosFiles(trackingDir.getCreatedFiles());\n-            String idxFile = IndexFileNames.segmentFileName(newSegmentInfo.name, segmentSuffix, INDEX_EXTENSION_PREFIX);\n-            String dataFile = IndexFileNames.segmentFileName(newSegmentInfo.name, segmentSuffix, FIELDS_EXTENSION);\n+            String idxFile = IndexFileNames.segmentFileName(newSegmentInfo.name, segmentSuffix, \"fdx\");\n+            String dataFile = IndexFileNames.segmentFileName(newSegmentInfo.name, segmentSuffix, \"fdt\");\n+            String metaFile = IndexFileNames.segmentFileName(newSegmentInfo.name, segmentSuffix, \"fdm\"); // new since Lucene 8.5\n             Directory sourceDir = newSegmentInfo.dir;\n             if (si.getUseCompoundFile()) {\n                 sourceDir = codec.compoundFormat().getCompoundReader(sourceDir, si, IOContext.DEFAULT);\n             }\n             trackingDir.copyFrom(sourceDir, idxFile, idxFile, IOContext.DEFAULT);\n             trackingDir.copyFrom(sourceDir, dataFile, dataFile, IOContext.DEFAULT);\n+            if (Arrays.asList(sourceDir.listAll()).contains(metaFile)) { // only exists for Lucene 8.5+ indices\n+                trackingDir.copyFrom(sourceDir, dataFile, metaFile, IOContext.DEFAULT);\n+            }\n             if (sourceDir != newSegmentInfo.dir) {\n                 sourceDir.close();\n             }", "url": "https://github.com/elastic/elasticsearch/pull/52039#discussion_r376389621", "createdAt": "2020-02-07T13:30:03Z", "author": {"login": "jpountz"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/snapshots/SourceOnlySnapshot.java", "diffHunk": "@@ -51,7 +51,7 @@\n import java.util.function.Supplier;\n \n import static org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter.FIELDS_EXTENSION;\n-import static org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter.FIELDS_INDEX_EXTENSION;\n+import static org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter.INDEX_EXTENSION_PREFIX;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1NjIxMQ=="}, "originalCommit": {"oid": "1f9334de4305c717d7e2af04f5685ed77faf7820"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODA4NDE3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/snapshots/SourceOnlySnapshot.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzozOToyNFrOFm9Quw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzozOToyNFrOFm9Quw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5MzkxNQ==", "bodyText": "I believe it has to be done conditionally in order to support old indices.", "url": "https://github.com/elastic/elasticsearch/pull/52039#discussion_r376393915", "createdAt": "2020-02-07T13:39:24Z", "author": {"login": "jpountz"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/snapshots/SourceOnlySnapshot.java", "diffHunk": "@@ -206,13 +208,15 @@ private SegmentCommitInfo syncSegment(SegmentCommitInfo segmentCommitInfo, LiveD\n             FieldInfos newFieldInfos = new FieldInfos(fieldInfoCopy.toArray(new FieldInfo[0]));\n             codec.fieldInfosFormat().write(trackingDir, newSegmentInfo, segmentSuffix, newFieldInfos, IOContext.DEFAULT);\n             newInfo.setFieldInfosFiles(trackingDir.getCreatedFiles());\n-            String idxFile = IndexFileNames.segmentFileName(newSegmentInfo.name, segmentSuffix, INDEX_EXTENSION_PREFIX);\n+            String idxFile = IndexFileNames.segmentFileName(newSegmentInfo.name, segmentSuffix, INDEX_EXTENSION_PREFIX + FIELDS_INDEX_EXTENSION_SUFFIX);\n+            String metadataFile = IndexFileNames.segmentFileName(newSegmentInfo.name, segmentSuffix, INDEX_EXTENSION_PREFIX + FIELDS_META_EXTENSION_SUFFIX);\n             String dataFile = IndexFileNames.segmentFileName(newSegmentInfo.name, segmentSuffix, FIELDS_EXTENSION);\n             Directory sourceDir = newSegmentInfo.dir;\n             if (si.getUseCompoundFile()) {\n                 sourceDir = codec.compoundFormat().getCompoundReader(sourceDir, si, IOContext.DEFAULT);\n             }\n             trackingDir.copyFrom(sourceDir, idxFile, idxFile, IOContext.DEFAULT);\n+            trackingDir.copyFrom(sourceDir, metadataFile, metadataFile, IOContext.DEFAULT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1663d2648a06c8e882d194ffb5b98c38a5c45b16"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODA4NTM4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/snapshots/SourceOnlySnapshotShardTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzozOTo0MVrOFm9RVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzozOTo0MVrOFm9RVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5NDA2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // we processed the segments_N file plus _1.si, _1.fdx, _1.fnm, _1.fdt, , _1.fdx\n          \n          \n            \n                        // we processed the segments_N file plus _1.si, _1.fdx, _1.fnm, _1.fdt, _1.fdm, _1.fdx", "url": "https://github.com/elastic/elasticsearch/pull/52039#discussion_r376394068", "createdAt": "2020-02-07T13:39:41Z", "author": {"login": "jpountz"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/snapshots/SourceOnlySnapshotShardTests.java", "diffHunk": "@@ -147,10 +147,10 @@ public void testIncrementalSnapshot() throws IOException {\n                 snapshotRef.getIndexCommit(), indexShardSnapshotStatus, true, Collections.emptyMap(), future));\n             shardGeneration = future.actionGet();\n             IndexShardSnapshotStatus.Copy copy = indexShardSnapshotStatus.asCopy();\n-            // we processed the segments_N file plus _1.si, _1.fdx, _1.fnm, _1.fdt\n-            assertEquals(5, copy.getIncrementalFileCount());\n+            // we processed the segments_N file plus _1.si, _1.fdx, _1.fnm, _1.fdt, , _1.fdx", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1663d2648a06c8e882d194ffb5b98c38a5c45b16"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4813, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}