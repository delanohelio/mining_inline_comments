{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NjcxNDQ1", "number": 61016, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDozMzozNVrOEXkaJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMTo0MzowOFrOEXlsdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTQ5MjIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/repositories/RepositoriesService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDozMzozNVrOG_bhnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMjozNTo0NlrOG_fUAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE2NDQ0NA==", "bodyText": "Maybe we could just not add the applier in the first place in the constructor where we check if the node is a master or data node (we should have the information that this is a voting only node there already from the settings?)?", "url": "https://github.com/elastic/elasticsearch/pull/61016#discussion_r469164444", "createdAt": "2020-08-12T10:33:35Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoriesService.java", "diffHunk": "@@ -290,6 +294,9 @@ protected void doRun() {\n     public void applyClusterState(ClusterChangedEvent event) {\n         try {\n             final ClusterState state = event.state();\n+            if (isDedicatedVotingOnlyNode(state.nodes().getLocalNode())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e3127b613cd9bbdabf08036e1c97c9647c6417e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5NjAyMg==", "bodyText": "We need to be able to compute this from a DiscoveryNode since we need to know it for remote nodes too, and we won't have a DiscoveryNode in the constructor so would have to implement it two different ways. I think I prefer this.", "url": "https://github.com/elastic/elasticsearch/pull/61016#discussion_r469196022", "createdAt": "2020-08-12T11:41:06Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoriesService.java", "diffHunk": "@@ -290,6 +294,9 @@ protected void doRun() {\n     public void applyClusterState(ClusterChangedEvent event) {\n         try {\n             final ClusterState state = event.state();\n+            if (isDedicatedVotingOnlyNode(state.nodes().getLocalNode())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE2NDQ0NA=="}, "originalCommit": {"oid": "8e3127b613cd9bbdabf08036e1c97c9647c6417e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwODM0NQ==", "bodyText": "yeah, I went back and forth on this, and prefer to reuse the same logic.\nI have done this in a different way now in 143fc1c: Let me know if you prefer this.", "url": "https://github.com/elastic/elasticsearch/pull/61016#discussion_r469208345", "createdAt": "2020-08-12T12:06:48Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoriesService.java", "diffHunk": "@@ -290,6 +294,9 @@ protected void doRun() {\n     public void applyClusterState(ClusterChangedEvent event) {\n         try {\n             final ClusterState state = event.state();\n+            if (isDedicatedVotingOnlyNode(state.nodes().getLocalNode())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE2NDQ0NA=="}, "originalCommit": {"oid": "8e3127b613cd9bbdabf08036e1c97c9647c6417e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIyNjQ5OQ==", "bodyText": "I like it :)", "url": "https://github.com/elastic/elasticsearch/pull/61016#discussion_r469226499", "createdAt": "2020-08-12T12:35:46Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoriesService.java", "diffHunk": "@@ -290,6 +294,9 @@ protected void doRun() {\n     public void applyClusterState(ClusterChangedEvent event) {\n         try {\n             final ClusterState state = event.state();\n+            if (isDedicatedVotingOnlyNode(state.nodes().getLocalNode())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE2NDQ0NA=="}, "originalCommit": {"oid": "8e3127b613cd9bbdabf08036e1c97c9647c6417e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTcwMjkyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/repositories/RepositoriesService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMTo0MzowOFrOG_dguA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMTo1NDoyOFrOG_d1pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5Njk4NA==", "bodyText": "Can we establish that this is the same string as used in VotingOnlyNodePlugin#VOTING_ONLY_NODE_ROLE by extracting the string as a field and adding an assertion in VotingOnlyNodePlugin saying that they match?", "url": "https://github.com/elastic/elasticsearch/pull/61016#discussion_r469196984", "createdAt": "2020-08-12T11:43:08Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoriesService.java", "diffHunk": "@@ -279,6 +279,10 @@ protected void doRun() {\n         });\n     }\n \n+    static boolean isDedicatedVotingOnlyNode(DiscoveryNode node) {\n+        return node.isMasterNode() && node.isDataNode() == false &&\n+            node.getRoles().stream().anyMatch(role -> role.roleName().equals(\"voting_only\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e3127b613cd9bbdabf08036e1c97c9647c6417e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMjM0MQ==", "bodyText": "This is ensured by the test that was added. It fails when these strings are not matching (as we are then illegally accessing the repo on the voting-only node)? Do you find this too implicit?", "url": "https://github.com/elastic/elasticsearch/pull/61016#discussion_r469202341", "createdAt": "2020-08-12T11:54:28Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoriesService.java", "diffHunk": "@@ -279,6 +279,10 @@ protected void doRun() {\n         });\n     }\n \n+    static boolean isDedicatedVotingOnlyNode(DiscoveryNode node) {\n+        return node.isMasterNode() && node.isDataNode() == false &&\n+            node.getRoles().stream().anyMatch(role -> role.roleName().equals(\"voting_only\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5Njk4NA=="}, "originalCommit": {"oid": "8e3127b613cd9bbdabf08036e1c97c9647c6417e"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2461, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}