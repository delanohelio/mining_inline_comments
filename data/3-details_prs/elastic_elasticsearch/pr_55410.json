{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MjI0NTMz", "number": 55410, "title": "Identify backing indices for data streams", "bodyText": "Adds an IndexAbstraction::getParentDataStream method that is eagerly populated with an index's parent data stream, if any, when building cluster state metadata.\nReplaces #54929\nRelates to #53100", "createdAt": "2020-04-17T16:19:20Z", "url": "https://github.com/elastic/elasticsearch/pull/55410", "merged": true, "mergeCommit": {"oid": "8ef209f11982af4cac0567c19ce76bf4a5b799d8"}, "closed": true, "closedAt": "2020-04-20T17:22:26Z", "author": {"login": "danhermann"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYjGdkAH2gAyNDA1MjI0NTMzOjFlNzRhNTY3MmNkYzRhY2QxYzJmMDI0MjY0Mjg2NzVkNzdkOWRkYzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZhIuPgH2gAyNDA1MjI0NTMzOjkyMDViYmEwZTYxZGRhMjBjOWM3MzQ1MDE2OWVkNTk3YjJlYjIzMGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1e74a5672cdc4acd1c2f02426428675d77d9ddc5", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/1e74a5672cdc4acd1c2f02426428675d77d9ddc5", "committedDate": "2020-04-17T15:34:00Z", "message": "identify back indices with parent data stream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4615dd7e2e898135e679753d4c0fd6756599b680", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/4615dd7e2e898135e679753d4c0fd6756599b680", "committedDate": "2020-04-17T16:15:46Z", "message": "remove commented code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8053209eb05e4d1b058a7b748073ffba57b1926c", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/8053209eb05e4d1b058a7b748073ffba57b1926c", "committedDate": "2020-04-17T16:46:38Z", "message": "Merge branch 'master' into identify_backing_indices"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTgwNDMw", "url": "https://github.com/elastic/elasticsearch/pull/55410#pullrequestreview-396180430", "createdAt": "2020-04-20T06:49:26Z", "commit": {"oid": "8053209eb05e4d1b058a7b748073ffba57b1926c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNjo0OToyN1rOGIFoPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzowMzoxNVrOGIGDsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEzNDAxMw==", "bodyText": "Can the return type be IndexAbstraction instead of DataStream (the data stream impl for IndexAbstraction)?\nCurrently DataStream doesn't have any methods that IndexAbstraction doesn't have and would be good to not rely on anything implementation specific.", "url": "https://github.com/elastic/elasticsearch/pull/55410#discussion_r411134013", "createdAt": "2020-04-20T06:49:27Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java", "diffHunk": "@@ -67,6 +67,12 @@\n     @Nullable\n     IndexMetadata getWriteIndex();\n \n+    /**\n+     * @return the data stream to which this index belongs or <code>null</code> if this is not a concrete index or\n+     * if it is a concrete index that does not belong to a data stream.\n+     */\n+    @Nullable DataStream getParentDataStream();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8053209eb05e4d1b058a7b748073ffba57b1926c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE0MTA0Mg==", "bodyText": "Can we reuse the IndexAbstraction.DataStream created here in the logic below here that adds data streams to the indices lookup? I think it would nice that if a data stream is lookup directly or via a backing index that the same instance is returned.\nI think we can do this if we add the data streams to the indicesLookup map before we add the indices to the indicesLookup map?", "url": "https://github.com/elastic/elasticsearch/pull/55410#discussion_r411141042", "createdAt": "2020-04-20T07:03:15Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java", "diffHunk": "@@ -1349,10 +1349,30 @@ public Metadata build() {\n \n         private SortedMap<String, IndexAbstraction> buildIndicesLookup() {\n             SortedMap<String, IndexAbstraction> indicesLookup = new TreeMap<>();\n+            Map<String, DataStream> indexToDataStreamLookup = new HashMap<>();\n+            DataStreamMetadata dataStreamMetadata = (DataStreamMetadata) this.customs.get(DataStreamMetadata.TYPE);\n+            if (dataStreamMetadata != null) {\n+                for (DataStream ds : dataStreamMetadata.dataStreams().values()) {\n+                    for (Index i : ds.getIndices()) {\n+                        indexToDataStreamLookup.put(i.getName(), ds);\n+                    }\n+                }\n+            }\n+\n             for (ObjectCursor<IndexMetadata> cursor : indices.values()) {\n                 IndexMetadata indexMetadata = cursor.value;\n-                IndexAbstraction existing =\n-                    indicesLookup.put(indexMetadata.getIndex().getName(), new IndexAbstraction.Index(indexMetadata));\n+\n+                IndexAbstraction.Index index;\n+                DataStream parent = indexToDataStreamLookup.get(indexMetadata.getIndex().getName());\n+                if (parent != null) {\n+                    List<IndexMetadata> backingIndices = parent.getIndices().stream()\n+                        .map(imd -> indices.get(imd.getName())).collect(Collectors.toList());\n+                    index = new IndexAbstraction.Index(indexMetadata, new IndexAbstraction.DataStream(parent, backingIndices));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8053209eb05e4d1b058a7b748073ffba57b1926c"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDU2MTkw", "url": "https://github.com/elastic/elasticsearch/pull/55410#pullrequestreview-396456190", "createdAt": "2020-04-20T13:33:24Z", "commit": {"oid": "8053209eb05e4d1b058a7b748073ffba57b1926c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzozMzoyNFrOGIUpzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzozNToyN1rOGIUvrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM4MDE3Mw==", "bodyText": "Can we add:\nassert parent.getIndices().contains(indexMetadata.getIndex())\n\nthat would  validate that uuid and name from data-stream indices is the same as the index we are looking at.", "url": "https://github.com/elastic/elasticsearch/pull/55410#discussion_r411380173", "createdAt": "2020-04-20T13:33:24Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java", "diffHunk": "@@ -1349,10 +1349,30 @@ public Metadata build() {\n \n         private SortedMap<String, IndexAbstraction> buildIndicesLookup() {\n             SortedMap<String, IndexAbstraction> indicesLookup = new TreeMap<>();\n+            Map<String, DataStream> indexToDataStreamLookup = new HashMap<>();\n+            DataStreamMetadata dataStreamMetadata = (DataStreamMetadata) this.customs.get(DataStreamMetadata.TYPE);\n+            if (dataStreamMetadata != null) {\n+                for (DataStream ds : dataStreamMetadata.dataStreams().values()) {\n+                    for (Index i : ds.getIndices()) {\n+                        indexToDataStreamLookup.put(i.getName(), ds);\n+                    }\n+                }\n+            }\n+\n             for (ObjectCursor<IndexMetadata> cursor : indices.values()) {\n                 IndexMetadata indexMetadata = cursor.value;\n-                IndexAbstraction existing =\n-                    indicesLookup.put(indexMetadata.getIndex().getName(), new IndexAbstraction.Index(indexMetadata));\n+\n+                IndexAbstraction.Index index;\n+                DataStream parent = indexToDataStreamLookup.get(indexMetadata.getIndex().getName());\n+                if (parent != null) {\n+                    List<IndexMetadata> backingIndices = parent.getIndices().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8053209eb05e4d1b058a7b748073ffba57b1926c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM4MTY3OQ==", "bodyText": "I think it is a requirement that we reuse the same instances, since equals is not overridden.", "url": "https://github.com/elastic/elasticsearch/pull/55410#discussion_r411381679", "createdAt": "2020-04-20T13:35:27Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java", "diffHunk": "@@ -1349,10 +1349,30 @@ public Metadata build() {\n \n         private SortedMap<String, IndexAbstraction> buildIndicesLookup() {\n             SortedMap<String, IndexAbstraction> indicesLookup = new TreeMap<>();\n+            Map<String, DataStream> indexToDataStreamLookup = new HashMap<>();\n+            DataStreamMetadata dataStreamMetadata = (DataStreamMetadata) this.customs.get(DataStreamMetadata.TYPE);\n+            if (dataStreamMetadata != null) {\n+                for (DataStream ds : dataStreamMetadata.dataStreams().values()) {\n+                    for (Index i : ds.getIndices()) {\n+                        indexToDataStreamLookup.put(i.getName(), ds);\n+                    }\n+                }\n+            }\n+\n             for (ObjectCursor<IndexMetadata> cursor : indices.values()) {\n                 IndexMetadata indexMetadata = cursor.value;\n-                IndexAbstraction existing =\n-                    indicesLookup.put(indexMetadata.getIndex().getName(), new IndexAbstraction.Index(indexMetadata));\n+\n+                IndexAbstraction.Index index;\n+                DataStream parent = indexToDataStreamLookup.get(indexMetadata.getIndex().getName());\n+                if (parent != null) {\n+                    List<IndexMetadata> backingIndices = parent.getIndices().stream()\n+                        .map(imd -> indices.get(imd.getName())).collect(Collectors.toList());\n+                    index = new IndexAbstraction.Index(indexMetadata, new IndexAbstraction.DataStream(parent, backingIndices));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE0MTA0Mg=="}, "originalCommit": {"oid": "8053209eb05e4d1b058a7b748073ffba57b1926c"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f51f8201267d83ef64085124f617f8e690b64332", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/f51f8201267d83ef64085124f617f8e690b64332", "committedDate": "2020-04-20T15:21:47Z", "message": "review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NTcwMzEx", "url": "https://github.com/elastic/elasticsearch/pull/55410#pullrequestreview-396570311", "createdAt": "2020-04-20T15:35:29Z", "commit": {"oid": "f51f8201267d83ef64085124f617f8e690b64332"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9205bba0e61dda20c9c73450169ed597b2eb230a", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/9205bba0e61dda20c9c73450169ed597b2eb230a", "committedDate": "2020-04-20T15:50:35Z", "message": "Merge branch 'master' into identify_backing_indices"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3295, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}