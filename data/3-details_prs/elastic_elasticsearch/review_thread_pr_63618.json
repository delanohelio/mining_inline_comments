{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMzk5NzM5", "number": 63618, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoyNzoxOFrOEtX4fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozOToxMFrOEtYL2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDEyNjY5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/LegacyGeoShapeFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoyNzoxOFrOHhH6Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoyNzoxOFrOHhH6Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ5NDY1NQ==", "bodyText": "Can we share the same parser for the type and the mapper? I think we are doing that in other places.", "url": "https://github.com/elastic/elasticsearch/pull/63618#discussion_r504494655", "createdAt": "2020-10-14T08:27:18Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/LegacyGeoShapeFieldMapper.java", "diffHunk": "@@ -257,11 +257,10 @@ private void setupPrefixTrees(GeoShapeFieldType ft) {\n         }\n \n         private GeoShapeFieldType buildFieldType(BuilderContext context) {\n-            GeoShapeFieldType ft = new GeoShapeFieldType(buildFullName(context), indexed, fieldType.stored(), false, meta);\n+            GeoShapeFieldType ft =\n+                new GeoShapeFieldType(buildFullName(context), indexed, fieldType.stored(), false, new LegacyGeoShapeParser(), meta);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ee10983c1c8fa550fefe8896957b3bbea1d1231"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDEyOTA2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/LegacyGeoShapeFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoyNzo1NFrOHhH7zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoyNzo1NFrOHhH7zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ5NTA1NA==", "bodyText": "Same as above, probably only used by the test.", "url": "https://github.com/elastic/elasticsearch/pull/63618#discussion_r504495054", "createdAt": "2020-10-14T08:27:54Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/LegacyGeoShapeFieldMapper.java", "diffHunk": "@@ -326,13 +326,14 @@ public Object format(ShapeBuilder<?, ?, ?> value, String format) {\n \n         private final LegacyGeoShapeQueryProcessor queryProcessor;\n \n-        private GeoShapeFieldType(String name, boolean indexed, boolean stored, boolean hasDocValues, Map<String, String> meta) {\n-            super(name, indexed, stored, hasDocValues, false, meta);\n+        private GeoShapeFieldType(String name, boolean indexed, boolean stored, boolean hasDocValues,\n+                                  LegacyGeoShapeParser parser, Map<String, String> meta) {\n+            super(name, indexed, stored, hasDocValues, false, parser, meta);\n             this.queryProcessor = new LegacyGeoShapeQueryProcessor(this);\n         }\n \n         public GeoShapeFieldType(String name) {\n-            this(name, true, false, true, Collections.emptyMap());\n+            this(name, true, false, true, null, Collections.emptyMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ee10983c1c8fa550fefe8896957b3bbea1d1231"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDE3NjI2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozOToxMFrOHhIY6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozOToxMFrOHhIY6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwMjUwNw==", "bodyText": "Note to myself: This constructor is public because it used by a test. It should probably be private but let address it in a follow up PR.", "url": "https://github.com/elastic/elasticsearch/pull/63618#discussion_r504502507", "createdAt": "2020-10-14T08:39:10Z", "author": {"login": "iverase"}, "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java", "diffHunk": "@@ -76,13 +76,14 @@ public Builder newBuilder(String name, Map<String, Object> params) {\n         }\n     }\n \n-    public static final class ShapeFieldType extends AbstractShapeGeometryFieldType<Geometry, Geometry>\n+    public static final class ShapeFieldType extends AbstractShapeGeometryFieldType\n         implements ShapeQueryable {\n \n         private final ShapeQueryProcessor queryProcessor;\n \n-        public ShapeFieldType(String name, boolean indexed, boolean stored, boolean hasDocValues, Map<String, String> meta) {\n-            super(name, indexed, stored, hasDocValues, false, meta);\n+        public ShapeFieldType(String name, boolean indexed, boolean stored, boolean hasDocValues,\n+                              Parser<Geometry> parser, Map<String, String> meta) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ee10983c1c8fa550fefe8896957b3bbea1d1231"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2975, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}