{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1Mzg3ODA3", "number": 65342, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNjowODoyM1rOE8FDoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNjowODoyM1rOE8FDoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDMyODY1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/CacheFile.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNjowODoyM1rOH4AOyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNjoyMTozMlrOH4Aakg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ4NjA4OQ==", "bodyText": "We synchronize on listeners whenever we access it, so we might as well just add to the listeners list after opening the file? Seems it could avoid this extra try-finally block.", "url": "https://github.com/elastic/elasticsearch/pull/65342#discussion_r528486089", "createdAt": "2020-11-23T06:08:23Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/CacheFile.java", "diffHunk": "@@ -149,13 +149,19 @@ public void acquire(final EvictionListener listener) throws IOException {\n                 synchronized (listeners) {\n                     ensureOpen();\n                     final boolean added = listeners.add(listener);\n-                    assert added : \"listener already exists \" + listener;\n-                    if (listeners.size() == 1) {\n-                        assert channelRef == null;\n-                        channelRef = new FileChannelReference();\n+                    try {\n+                        assert added : \"listener already exists \" + listener;\n+                        if (listeners.size() == 1) {\n+                            assert channelRef == null;\n+                            channelRef = new FileChannelReference();\n+                        }\n+                        success = true;\n+                    } finally {\n+                        if (success == false && added) {\n+                            listeners.remove(listener);\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56413493a18f4b34a9f8bc85b1dcbbdf159e08f4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ4OTEwNg==", "bodyText": "Sounds good :) I pushed b0570f8", "url": "https://github.com/elastic/elasticsearch/pull/65342#discussion_r528489106", "createdAt": "2020-11-23T06:21:32Z", "author": {"login": "original-brownbear"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/cache/CacheFile.java", "diffHunk": "@@ -149,13 +149,19 @@ public void acquire(final EvictionListener listener) throws IOException {\n                 synchronized (listeners) {\n                     ensureOpen();\n                     final boolean added = listeners.add(listener);\n-                    assert added : \"listener already exists \" + listener;\n-                    if (listeners.size() == 1) {\n-                        assert channelRef == null;\n-                        channelRef = new FileChannelReference();\n+                    try {\n+                        assert added : \"listener already exists \" + listener;\n+                        if (listeners.size() == 1) {\n+                            assert channelRef == null;\n+                            channelRef = new FileChannelReference();\n+                        }\n+                        success = true;\n+                    } finally {\n+                        if (success == false && added) {\n+                            listeners.remove(listener);\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ4NjA4OQ=="}, "originalCommit": {"oid": "56413493a18f4b34a9f8bc85b1dcbbdf159e08f4"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1999, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}