{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MzQ5MzQy", "number": 62258, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMTo0OToyN1rOEiTfKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzo0Njo1MFrOEiVG1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDA2MzEyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/src/test/java/org/elasticsearch/xpack/test/rest/AbstractXPackRestTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMTo0OToyN1rOHQG80w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDo0OTo0NVrOHRYtJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY1MzEzOQ==", "bodyText": "There are not any actual changes to this file...just renamed and moved back to the test source set.\nI think this change this makes sense since independent of any other reason since there are a few runners that extend this... however the real reason i am introducing this is that I could not figure out how to get Intellij to share classes x-project and x-non-standard source set...it works fine from the test sourceset, but when shared from the custom source set (yamlRestTest) Intellij seems to have issues (the command line works fine).", "url": "https://github.com/elastic/elasticsearch/pull/62258#discussion_r486653139", "createdAt": "2020-09-10T21:49:27Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/src/test/java/org/elasticsearch/xpack/test/rest/AbstractXPackRestTest.java", "diffHunk": "@@ -0,0 +1,285 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.test.rest;\n+\n+import com.carrotsearch.randomizedtesting.annotations.ParametersFactory;\n+\n+import com.carrotsearch.randomizedtesting.annotations.TimeoutSuite;\n+import org.apache.http.HttpStatus;\n+import org.apache.lucene.util.TimeUnits;\n+import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.common.CheckedFunction;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n+import org.elasticsearch.common.xcontent.support.XContentMapValues;\n+import org.elasticsearch.plugins.MetadataUpgrader;\n+import org.elasticsearch.test.SecuritySettingsSourceField;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n+import org.elasticsearch.test.rest.yaml.ClientYamlTestCandidate;\n+import org.elasticsearch.test.rest.yaml.ClientYamlTestResponse;\n+import org.elasticsearch.test.rest.yaml.ESClientYamlSuiteTestCase;\n+import org.elasticsearch.xpack.core.ml.MlConfigIndex;\n+import org.elasticsearch.xpack.core.ml.MlMetaIndex;\n+import org.elasticsearch.xpack.core.ml.integration.MlRestTestStateCleaner;\n+import org.elasticsearch.xpack.core.ml.job.persistence.AnomalyDetectorsIndex;\n+import org.elasticsearch.xpack.core.ml.job.persistence.AnomalyDetectorsIndexFields;\n+import org.elasticsearch.xpack.core.ml.notifications.NotificationsIndex;\n+import org.elasticsearch.xpack.core.rollup.job.RollupJob;\n+import org.elasticsearch.xpack.core.transform.transforms.persistence.TransformInternalIndexConstants;\n+import org.junit.After;\n+import org.junit.Before;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Supplier;\n+\n+import static java.util.Collections.emptyList;\n+import static java.util.Collections.emptyMap;\n+import static java.util.Collections.singletonList;\n+import static java.util.Collections.singletonMap;\n+import static org.elasticsearch.common.xcontent.support.XContentMapValues.extractValue;\n+import static org.elasticsearch.rest.action.search.RestSearchAction.TOTAL_HITS_AS_INT_PARAM;\n+import static org.elasticsearch.xpack.core.security.authc.support.UsernamePasswordToken.basicAuthHeaderValue;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.hasSize;\n+\n+/** Runs rest tests against external cluster */\n+// TODO: Remove this timeout increase once this test suite is broken up\n+@TimeoutSuite(millis = 60 * TimeUnits.MINUTE)\n+public class AbstractXPackRestTest extends ESClientYamlSuiteTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6b3090d4521edb21d5dc17d4179d462a29c3164"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY5MjkxNQ==", "bodyText": "I believe that's due to setting up the source sets correctly. This should work, and we do it in other places.", "url": "https://github.com/elastic/elasticsearch/pull/62258#discussion_r486692915", "createdAt": "2020-09-10T23:45:12Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/src/test/java/org/elasticsearch/xpack/test/rest/AbstractXPackRestTest.java", "diffHunk": "@@ -0,0 +1,285 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.test.rest;\n+\n+import com.carrotsearch.randomizedtesting.annotations.ParametersFactory;\n+\n+import com.carrotsearch.randomizedtesting.annotations.TimeoutSuite;\n+import org.apache.http.HttpStatus;\n+import org.apache.lucene.util.TimeUnits;\n+import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.common.CheckedFunction;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n+import org.elasticsearch.common.xcontent.support.XContentMapValues;\n+import org.elasticsearch.plugins.MetadataUpgrader;\n+import org.elasticsearch.test.SecuritySettingsSourceField;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n+import org.elasticsearch.test.rest.yaml.ClientYamlTestCandidate;\n+import org.elasticsearch.test.rest.yaml.ClientYamlTestResponse;\n+import org.elasticsearch.test.rest.yaml.ESClientYamlSuiteTestCase;\n+import org.elasticsearch.xpack.core.ml.MlConfigIndex;\n+import org.elasticsearch.xpack.core.ml.MlMetaIndex;\n+import org.elasticsearch.xpack.core.ml.integration.MlRestTestStateCleaner;\n+import org.elasticsearch.xpack.core.ml.job.persistence.AnomalyDetectorsIndex;\n+import org.elasticsearch.xpack.core.ml.job.persistence.AnomalyDetectorsIndexFields;\n+import org.elasticsearch.xpack.core.ml.notifications.NotificationsIndex;\n+import org.elasticsearch.xpack.core.rollup.job.RollupJob;\n+import org.elasticsearch.xpack.core.transform.transforms.persistence.TransformInternalIndexConstants;\n+import org.junit.After;\n+import org.junit.Before;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Supplier;\n+\n+import static java.util.Collections.emptyList;\n+import static java.util.Collections.emptyMap;\n+import static java.util.Collections.singletonList;\n+import static java.util.Collections.singletonMap;\n+import static org.elasticsearch.common.xcontent.support.XContentMapValues.extractValue;\n+import static org.elasticsearch.rest.action.search.RestSearchAction.TOTAL_HITS_AS_INT_PARAM;\n+import static org.elasticsearch.xpack.core.security.authc.support.UsernamePasswordToken.basicAuthHeaderValue;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.hasSize;\n+\n+/** Runs rest tests against external cluster */\n+// TODO: Remove this timeout increase once this test suite is broken up\n+@TimeoutSuite(millis = 60 * TimeUnits.MINUTE)\n+public class AbstractXPackRestTest extends ESClientYamlSuiteTestCase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY1MzEzOQ=="}, "originalCommit": {"oid": "e6b3090d4521edb21d5dc17d4179d462a29c3164"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk5MjYxNA==", "bodyText": "I believe that's due to setting up the source sets correctly. This should work, and we do it in other places.\n\nI'm not sure I follow the comment... I tried a variety of ways to get Intellij to honor the configuration, it always works when defined in the test sourceset , but fails with identical config with a different sourceset name. I am sure I am missing something (or there is a bug in intellij), but not sure what. I don't believe it is related to the GradleUtils comment below since it is a different failure that addresses. Is there something specific you would like me to try ?  I think this changes as-is actually a net positive change, with the benefit that it does not show red squiggly lines in Intellij.", "url": "https://github.com/elastic/elasticsearch/pull/62258#discussion_r487992614", "createdAt": "2020-09-14T14:49:45Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/src/test/java/org/elasticsearch/xpack/test/rest/AbstractXPackRestTest.java", "diffHunk": "@@ -0,0 +1,285 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.test.rest;\n+\n+import com.carrotsearch.randomizedtesting.annotations.ParametersFactory;\n+\n+import com.carrotsearch.randomizedtesting.annotations.TimeoutSuite;\n+import org.apache.http.HttpStatus;\n+import org.apache.lucene.util.TimeUnits;\n+import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.common.CheckedFunction;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n+import org.elasticsearch.common.xcontent.support.XContentMapValues;\n+import org.elasticsearch.plugins.MetadataUpgrader;\n+import org.elasticsearch.test.SecuritySettingsSourceField;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n+import org.elasticsearch.test.rest.yaml.ClientYamlTestCandidate;\n+import org.elasticsearch.test.rest.yaml.ClientYamlTestResponse;\n+import org.elasticsearch.test.rest.yaml.ESClientYamlSuiteTestCase;\n+import org.elasticsearch.xpack.core.ml.MlConfigIndex;\n+import org.elasticsearch.xpack.core.ml.MlMetaIndex;\n+import org.elasticsearch.xpack.core.ml.integration.MlRestTestStateCleaner;\n+import org.elasticsearch.xpack.core.ml.job.persistence.AnomalyDetectorsIndex;\n+import org.elasticsearch.xpack.core.ml.job.persistence.AnomalyDetectorsIndexFields;\n+import org.elasticsearch.xpack.core.ml.notifications.NotificationsIndex;\n+import org.elasticsearch.xpack.core.rollup.job.RollupJob;\n+import org.elasticsearch.xpack.core.transform.transforms.persistence.TransformInternalIndexConstants;\n+import org.junit.After;\n+import org.junit.Before;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Supplier;\n+\n+import static java.util.Collections.emptyList;\n+import static java.util.Collections.emptyMap;\n+import static java.util.Collections.singletonList;\n+import static java.util.Collections.singletonMap;\n+import static org.elasticsearch.common.xcontent.support.XContentMapValues.extractValue;\n+import static org.elasticsearch.rest.action.search.RestSearchAction.TOTAL_HITS_AS_INT_PARAM;\n+import static org.elasticsearch.xpack.core.security.authc.support.UsernamePasswordToken.basicAuthHeaderValue;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.hasSize;\n+\n+/** Runs rest tests against external cluster */\n+// TODO: Remove this timeout increase once this test suite is broken up\n+@TimeoutSuite(millis = 60 * TimeUnits.MINUTE)\n+public class AbstractXPackRestTest extends ESClientYamlSuiteTestCase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY1MzEzOQ=="}, "originalCommit": {"oid": "e6b3090d4521edb21d5dc17d4179d462a29c3164"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDA2OTIwOnYy", "diffSide": "LEFT", "path": "x-pack/plugin/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMTo1MToyMlrOHQHAEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMTo1MToyMlrOHQHAEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY1Mzk2OA==", "bodyText": "I am pretty sure the only reason we expose this is for the yaml tests and the custom parent runner, both of which are (now) in the test source set...so only expose that in the jar and testArtifact config.", "url": "https://github.com/elastic/elasticsearch/pull/62258#discussion_r486653968", "createdAt": "2020-09-10T21:51:22Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/build.gradle", "diffHunk": "@@ -37,10 +34,8 @@ artifacts {\n \n def testJar = tasks.register(\"testJar\", Jar) {\n   appendix 'test'\n-  duplicatesStrategy = DuplicatesStrategy.INCLUDE\n   from sourceSets.test.output\n-  from sourceSets.yamlRestTest.output\n-  from sourceSets.javaRestTest.output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6b3090d4521edb21d5dc17d4179d462a29c3164"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDA3MzI0OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMTo1Mjo1MFrOHQHCiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMTo1Mjo1MFrOHQHCiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY1NDYwMA==", "bodyText": "this doesn't seem to have any functional impact, just noticed I missed this before and I think it is a bit more correct.", "url": "https://github.com/elastic/elasticsearch/pull/62258#discussion_r486654600", "createdAt": "2020-09-10T21:52:50Z", "author": {"login": "jakelandis"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -155,7 +155,7 @@ public static void setupIdeForTestSourceSet(Project project, SourceSet testSourc\n         project.getPluginManager().withPlugin(\"idea\", p -> {\n             IdeaModel idea = project.getExtensions().getByType(IdeaModel.class);\n             idea.getModule().setTestSourceDirs(testSourceSet.getJava().getSrcDirs());\n-            idea.getModule().getScopes().put(\"TEST\", Map.of(\"plus\", List.of(runtimeClasspathConfiguration)));\n+            idea.getModule().getScopes().put(testSourceSet.getName(), Map.of(\"plus\", List.of(runtimeClasspathConfiguration)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6b3090d4521edb21d5dc17d4179d462a29c3164"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDA4MjA1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/qa/ml-with-security/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMTo1NjoxMFrOHQHH3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMTo1NjoxMFrOHQHH3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY1NTk2Nw==", "bodyText": "wierd dependency ordering thing...likely a subtle in Intellij", "url": "https://github.com/elastic/elasticsearch/pull/62258#discussion_r486655967", "createdAt": "2020-09-10T21:56:10Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/ml/qa/ml-with-security/build.gradle", "diffHunk": "@@ -1,8 +1,8 @@\n apply plugin: 'elasticsearch.yaml-rest-test'\n \n dependencies {\n-  yamlRestTestImplementation project(path: xpackModule('core'), configuration: 'testArtifacts')\n   yamlRestTestImplementation project(path: xpackModule('core'))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6b3090d4521edb21d5dc17d4179d462a29c3164"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDMyODU0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/qa/multi-node/build.gradle", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzo0Njo1MFrOHQJaDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMTowMjo0M1rOHRmd9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY5MzM5MA==", "bodyText": "This might be why intellij gets confused. Instead we should add sourcets.main.runtimeClasspath to sourcesets.javaRestTest.runtimeClasspath rather than wire this up as a filecollection dependency. Basically, we should use GradleUtils.extendSourceSet() here if we need javaRestTest to \"extend from\" main.", "url": "https://github.com/elastic/elasticsearch/pull/62258#discussion_r486693390", "createdAt": "2020-09-10T23:46:50Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/ilm/qa/multi-node/build.gradle", "diffHunk": "@@ -2,6 +2,8 @@ apply plugin: 'elasticsearch.java-rest-test'\n \n dependencies {\n   javaRestTestImplementation project(path: xpackProject('plugin').path, configuration: 'testArtifacts')\n+  // let the javaRestTest see the classpath of main\n+  javaRestTestImplementation project.sourceSets.main.runtimeClasspath", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6b3090d4521edb21d5dc17d4179d462a29c3164"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk4NDczMQ==", "bodyText": "relevant prior comment: https://github.com/elastic/elasticsearch/pull/59444/files/c89b5de16f777a00a7be76280565debd6014728f#diff-3f6ea6fd97c3537cc14d8d9f622aac7b\nAre there any concerns with using GradleUtils here (and about 5 other places) ? Concerns with example project different from rest of the projects?", "url": "https://github.com/elastic/elasticsearch/pull/62258#discussion_r487984731", "createdAt": "2020-09-14T14:39:23Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/ilm/qa/multi-node/build.gradle", "diffHunk": "@@ -2,6 +2,8 @@ apply plugin: 'elasticsearch.java-rest-test'\n \n dependencies {\n   javaRestTestImplementation project(path: xpackProject('plugin').path, configuration: 'testArtifacts')\n+  // let the javaRestTest see the classpath of main\n+  javaRestTestImplementation project.sourceSets.main.runtimeClasspath", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY5MzM5MA=="}, "originalCommit": {"oid": "e6b3090d4521edb21d5dc17d4179d462a29c3164"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA1NTkzOA==", "bodyText": "Yes, since example projects are meant for external plugin authors to use as a baseline for their own projects. Internal use is not so much an issue.", "url": "https://github.com/elastic/elasticsearch/pull/62258#discussion_r488055938", "createdAt": "2020-09-14T16:13:33Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/ilm/qa/multi-node/build.gradle", "diffHunk": "@@ -2,6 +2,8 @@ apply plugin: 'elasticsearch.java-rest-test'\n \n dependencies {\n   javaRestTestImplementation project(path: xpackProject('plugin').path, configuration: 'testArtifacts')\n+  // let the javaRestTest see the classpath of main\n+  javaRestTestImplementation project.sourceSets.main.runtimeClasspath", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY5MzM5MA=="}, "originalCommit": {"oid": "e6b3090d4521edb21d5dc17d4179d462a29c3164"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIxODEwMg==", "bodyText": "done 87c2493", "url": "https://github.com/elastic/elasticsearch/pull/62258#discussion_r488218102", "createdAt": "2020-09-14T21:02:43Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/ilm/qa/multi-node/build.gradle", "diffHunk": "@@ -2,6 +2,8 @@ apply plugin: 'elasticsearch.java-rest-test'\n \n dependencies {\n   javaRestTestImplementation project(path: xpackProject('plugin').path, configuration: 'testArtifacts')\n+  // let the javaRestTest see the classpath of main\n+  javaRestTestImplementation project.sourceSets.main.runtimeClasspath", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY5MzM5MA=="}, "originalCommit": {"oid": "e6b3090d4521edb21d5dc17d4179d462a29c3164"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1633, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}