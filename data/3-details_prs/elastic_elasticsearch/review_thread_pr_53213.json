{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NjMyMTI5", "number": 53213, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowODowMVrODmPhOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowODowMVrODmPhOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDI2NzQ3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/identity-provider/src/main/java/org/elasticsearch/xpack/idp/action/TransportSamlInitiateSingleSignOnAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowODowMVrOFzi6jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowODowMVrOFzi6jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5Mzc0Mg==", "bodyText": "I think we should and it's fine to do in a followup", "url": "https://github.com/elastic/elasticsearch/pull/53213#discussion_r389593742", "createdAt": "2020-03-09T11:08:01Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/identity-provider/src/main/java/org/elasticsearch/xpack/idp/action/TransportSamlInitiateSingleSignOnAction.java", "diffHunk": "@@ -66,14 +67,25 @@ protected void doExecute(Task task, SamlInitiateSingleSignOnRequest request,\n                         listener.onFailure(new IllegalStateException(\"Request is missing secondary authentication\"));\n                         return;\n                     }\n-                    final UserServiceAuthentication user = buildUserFromAuthentication(secondaryAuthentication.getAuthentication(), sp);\n-                    final SuccessfulAuthenticationResponseMessageBuilder builder = new SuccessfulAuthenticationResponseMessageBuilder(\n-                        samlFactory, Clock.systemUTC(), identityProvider);\n-                    final Response response = builder.build(user, null);\n-                    listener.onResponse(new SamlInitiateSingleSignOnResponse(\n-                        user.getServiceProvider().getAssertionConsumerService().toString(),\n-                        samlFactory.getXmlContent(response),\n-                        user.getServiceProvider().getEntityId()));\n+                    buildUserFromAuthentication(secondaryAuthentication, sp, ActionListener.wrap(\n+                        user -> {\n+                            if (user == null) {\n+                                // TODO return SAML failure instead?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "191a935918065d9342eca4acc5ad02533322bc74"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3450, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}