{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MzY3MTQx", "number": 66846, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzozMToyMVrOFJs9iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMDo0Mzo1MlrOFJvc5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzE4MTUyOnYy", "diffSide": "LEFT", "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzozMToyMlrOIMI4kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzozMToyMlrOIMI4kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5OTM3OQ==", "bodyText": "This actually never tested with the password, because it didn't pass --password on the command line.", "url": "https://github.com/elastic/elasticsearch/pull/66846#discussion_r549599379", "createdAt": "2020-12-29T07:31:22Z", "author": {"login": "tvernum"}, "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java", "diffHunk": "@@ -53,48 +53,67 @@ public void testNotMatchingPasswords() throws Exception {\n     }\n \n     public void testDefaultNotPromptForPassword() throws Exception {\n+        assumeFalse(\"Cannot open unprotected keystore on FIPS JVM\", inFipsJvm());\n         execute();\n         Path configDir = env.configFile();\n         assertNotNull(KeyStoreWrapper.load(configDir));\n     }\n \n     public void testPosix() throws Exception {\n-        String password = randomFrom(\"\", \"keystorepassword\");\n-        terminal.addSecretInput(password);\n-        terminal.addSecretInput(password);\n-        execute();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56db35161fb19b68174242aa3ed7ca000d25b1d3"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzQxNzQxOnYy", "diffSide": "RIGHT", "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/ChangeKeyStorePasswordCommandTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwOToyNjowOFrOIMK7Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwMDowNjo1NVrOIMazQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzMjc3MQ==", "bodyText": "Do we need to execute(randomFrom(\"-p\", \"--password\")) here as well?", "url": "https://github.com/elastic/elasticsearch/pull/66846#discussion_r549632771", "createdAt": "2020-12-29T09:26:08Z", "author": {"login": "BigPandaToo"}, "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/ChangeKeyStorePasswordCommandTests.java", "diffHunk": "@@ -54,14 +55,15 @@ public void testChangeKeyStorePassword() throws Exception {\n         createKeystore(\"theoldpassword\");\n         loadKeystore(\"theoldpassword\");\n         terminal.addSecretInput(\"theoldpassword\");\n-        terminal.addSecretInput(\"thepassword\");\n-        terminal.addSecretInput(\"thepassword\");\n+        terminal.addSecretInput(\"the-better-password\");\n+        terminal.addSecretInput(\"the-better-password\");\n         // Prompted thrice: Once for the existing and twice for the new password\n         execute();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a66940e62528232bb4626b4b469eb4301efcc35a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg5MjkzMQ==", "bodyText": "No, it's calling the ChangeKeyStorePasswordCommand (elasticsearch-keystore passwd) which doesn 't have a \"--password\" option (because it always deals with passwords).", "url": "https://github.com/elastic/elasticsearch/pull/66846#discussion_r549892931", "createdAt": "2020-12-30T00:06:55Z", "author": {"login": "tvernum"}, "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/ChangeKeyStorePasswordCommandTests.java", "diffHunk": "@@ -54,14 +55,15 @@ public void testChangeKeyStorePassword() throws Exception {\n         createKeystore(\"theoldpassword\");\n         loadKeystore(\"theoldpassword\");\n         terminal.addSecretInput(\"theoldpassword\");\n-        terminal.addSecretInput(\"thepassword\");\n-        terminal.addSecretInput(\"thepassword\");\n+        terminal.addSecretInput(\"the-better-password\");\n+        terminal.addSecretInput(\"the-better-password\");\n         // Prompted thrice: Once for the existing and twice for the new password\n         execute();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzMjc3MQ=="}, "originalCommit": {"oid": "a66940e62528232bb4626b4b469eb4301efcc35a"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzU4OTUwOnYy", "diffSide": "RIGHT", "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMDo0Mzo1MlrOIMMbbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwMDowNDoxMVrOIMaxUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1NzQ1NQ==", "bodyText": "Ideally, when not firefighting, I think we should assert the behavior from the FIPS JVM in circumstances such as this one. For regular JVMs, the tests assert all kinds of behaviors, but since some are skipped in the FIPS JVM we condone unspecified behavior.\n@jkakavas Is #65464 supposed to handle some/all cases like this one?\nGranted, this assumes the FIPS provider implementation (different ones might fail differently), and maybe the JVMs as well. I see this as an argument for more clearly specifying and documenting the FIPS environments we test (and support).\nShould I open a separate GH issue regarding negative testing in the FIPS JVM?", "url": "https://github.com/elastic/elasticsearch/pull/66846#discussion_r549657455", "createdAt": "2020-12-29T10:43:52Z", "author": {"login": "albertzaharovits"}, "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java", "diffHunk": "@@ -53,48 +53,67 @@ public void testNotMatchingPasswords() throws Exception {\n     }\n \n     public void testDefaultNotPromptForPassword() throws Exception {\n+        assumeFalse(\"Cannot open unprotected keystore on FIPS JVM\", inFipsJvm());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a66940e62528232bb4626b4b469eb4301efcc35a"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY3NTYzNA==", "bodyText": "This is not covered in 65454. We can add tests for certain cases with assumeTrue in fips mode, but only for ones we can anticipate the behavior, i.e. short passwords. As you say its tricky.\n\nI see this as an argument for more clearly specifying and documenting the FIPS environments we test (and support).\n\nAgreed, there is an ongoing separate discussion around this", "url": "https://github.com/elastic/elasticsearch/pull/66846#discussion_r549675634", "createdAt": "2020-12-29T11:49:18Z", "author": {"login": "jkakavas"}, "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java", "diffHunk": "@@ -53,48 +53,67 @@ public void testNotMatchingPasswords() throws Exception {\n     }\n \n     public void testDefaultNotPromptForPassword() throws Exception {\n+        assumeFalse(\"Cannot open unprotected keystore on FIPS JVM\", inFipsJvm());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1NzQ1NQ=="}, "originalCommit": {"oid": "a66940e62528232bb4626b4b469eb4301efcc35a"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg5MjQzNA==", "bodyText": "If there are specific cases in this PR where it feels like we're skipping a test for something that should work on FIPS, then definitely point it out because I tried hard to resolve all of those (which increased coverage on non-FIPS as well, since there were scenarios that we never tested with a password).\nHowever, in this case, this is simply something that is not supported on FIPS. The test is that we don't prompt for a password if there isn't one, and that's not a valid scenario to test of FIPS. We simply cannot read a keystore without a password.\nI could write a test to check that unprotected keystores fail on FIPS, except that's not really a requirement per se, it's just a consequence of the JVM being in FIPS mode.\nOne could make an argument that we should have a test testThatReadingUnprotectedKeystoreInFipsModeFailsWithUsefulMessageAndDoesntCorruptKeystore (maybe a shorter test name) but it's probably not a super high priority.", "url": "https://github.com/elastic/elasticsearch/pull/66846#discussion_r549892434", "createdAt": "2020-12-30T00:04:11Z", "author": {"login": "tvernum"}, "path": "distribution/tools/keystore-cli/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java", "diffHunk": "@@ -53,48 +53,67 @@ public void testNotMatchingPasswords() throws Exception {\n     }\n \n     public void testDefaultNotPromptForPassword() throws Exception {\n+        assumeFalse(\"Cannot open unprotected keystore on FIPS JVM\", inFipsJvm());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1NzQ1NQ=="}, "originalCommit": {"oid": "a66940e62528232bb4626b4b469eb4301efcc35a"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4393, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}