{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4OTIwOTQ4", "number": 51658, "title": "Add Docker-based tests for proxy connection mode", "bodyText": "Adds more tests for the new \"proxy\" remote cluster connection mode, using a Docker-based setup, as well as testing SNI-based routing using HAProxy.\n\nChecks that the new proxy mode can work in situations where the publish host of the nodes in the remote cluster are not routable.\nChecks that the new proxy mode can work with clusters where nodes are hidden behind HAProxy.\nChecks that the new proxy mode can work with clusters where nodes are hidden behind HAProxy, using SNI to identify the nodes/cluster behind HAProxy.\n\nRelates #49067", "createdAt": "2020-01-30T07:13:03Z", "url": "https://github.com/elastic/elasticsearch/pull/51658", "merged": true, "mergeCommit": {"oid": "10b7ffab2f448a5f84b841e4f872f6b4ddf0d3e6"}, "closed": true, "closedAt": "2020-02-03T08:44:56Z", "author": {"login": "ywelsch"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_U0f0AH2gAyMzY4OTIwOTQ4OmJlZGJjOTNlMDliMTY3NmJmYjE5ZTk1NDFiYmM3MjU1MTM4ZGY5NTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_yZD1gFqTM1MTY1MjE1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bedbc93e09b1676bfb19e9541bbc7255138df957", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/bedbc93e09b1676bfb19e9541bbc7255138df957", "committedDate": "2020-01-30T06:47:36Z", "message": "Initial running example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMjExNTYz", "url": "https://github.com/elastic/elasticsearch/pull/51658#pullrequestreview-351211563", "createdAt": "2020-01-30T23:26:16Z", "commit": {"oid": "bedbc93e09b1676bfb19e9541bbc7255138df957"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzoyNjoxN1rOFj9QLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzoyODoxNVrOFj9Slg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI0ODA0Nw==", "bodyText": "We need to explicitly disable the build cache here since we aren't properly tracking the target server (docker image) as an input. It actually turns out we have the same issue with our Docker packaging tests for which I've addressed in #51717. You'll need to add a doNotCacheIf() condition here similar to this one so we don't accidentally skip these tests.", "url": "https://github.com/elastic/elasticsearch/pull/51658#discussion_r373248047", "createdAt": "2020-01-30T23:26:17Z", "author": {"login": "mark-vieira"}, "path": "qa/remote-clusters/build.gradle", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import org.elasticsearch.gradle.testfixtures.TestFixturesPlugin\n+\n+apply plugin: 'elasticsearch.standalone-rest-test'\n+apply plugin: 'elasticsearch.test.fixtures'\n+\n+testFixtures.useFixture()\n+\n+configurations {\n+  restSpec\n+}\n+\n+dependencies {\n+  restSpec project(':rest-api-spec')\n+  testCompile project(':client:rest-high-level')\n+}\n+\n+task copyKeystore(type: Sync) {\n+  from project(':x-pack:plugin:core')\n+    .file('src/test/resources/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testnode.jks')\n+  into \"${buildDir}/certs\"\n+  doLast {\n+    file(\"${buildDir}/certs\").setReadable(true, false)\n+    file(\"${buildDir}/certs/testnode.jks\").setReadable(true, false)\n+  }\n+}\n+\n+preProcessFixture {\n+  if (TestFixturesPlugin.dockerComposeSupported()) {\n+    dependsOn \":distribution:docker:buildDockerImage\"\n+  }\n+  dependsOn copyKeystore\n+  doLast {\n+    // tests expect to have an empty repo\n+    project.delete(\n+      \"${buildDir}/repo\",\n+      \"${buildDir}/oss-repo\"\n+    )\n+    createAndSetWritable(\n+      \"${buildDir}/repo\",\n+      \"${buildDir}/oss-repo\",\n+      \"${buildDir}/logs/default-1\",\n+      \"${buildDir}/logs/default-2\",\n+      \"${buildDir}/logs/oss-1\",\n+      \"${buildDir}/logs/oss-2\"\n+    )\n+  }\n+}\n+\n+if (TestFixturesPlugin.dockerComposeSupported()) {\n+  dockerCompose {\n+    tcpPortsToIgnoreWhenWaiting = [9600, 9601]\n+    if ('default'.equalsIgnoreCase(System.getProperty('tests.distribution', 'default'))) {\n+      useComposeFiles = ['docker-compose.yml']\n+    } else {\n+      useComposeFiles = ['docker-compose-oss.yml']\n+    }\n+  }\n+}\n+\n+def createAndSetWritable(Object... locations) {\n+  locations.each { location ->\n+    File file = file(location)\n+    file.mkdirs()\n+    file.setWritable(true, false)\n+  }\n+}\n+\n+processTestResources {\n+  from({ zipTree(configurations.restSpec.singleFile) }) {\n+    include 'rest-api-spec/api/**'\n+  }\n+  from project(':x-pack:plugin:core')\n+    .file('src/test/resources/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testnode.jks')\n+  dependsOn configurations.restSpec\n+}\n+\n+task integTest(type: Test) {\n+  maxParallelForks = '1'\n+  include '**/*IT.class'\n+  // don't add the tasks to build the docker images if we have no way of testing them", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bedbc93e09b1676bfb19e9541bbc7255138df957"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI0ODM2MQ==", "bodyText": "We need to depend on buildOssDockerImage as well here since we are testing that variant as well.", "url": "https://github.com/elastic/elasticsearch/pull/51658#discussion_r373248361", "createdAt": "2020-01-30T23:27:13Z", "author": {"login": "mark-vieira"}, "path": "qa/remote-clusters/build.gradle", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import org.elasticsearch.gradle.testfixtures.TestFixturesPlugin\n+\n+apply plugin: 'elasticsearch.standalone-rest-test'\n+apply plugin: 'elasticsearch.test.fixtures'\n+\n+testFixtures.useFixture()\n+\n+configurations {\n+  restSpec\n+}\n+\n+dependencies {\n+  restSpec project(':rest-api-spec')\n+  testCompile project(':client:rest-high-level')\n+}\n+\n+task copyKeystore(type: Sync) {\n+  from project(':x-pack:plugin:core')\n+    .file('src/test/resources/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testnode.jks')\n+  into \"${buildDir}/certs\"\n+  doLast {\n+    file(\"${buildDir}/certs\").setReadable(true, false)\n+    file(\"${buildDir}/certs/testnode.jks\").setReadable(true, false)\n+  }\n+}\n+\n+preProcessFixture {\n+  if (TestFixturesPlugin.dockerComposeSupported()) {\n+    dependsOn \":distribution:docker:buildDockerImage\"\n+  }\n+  dependsOn copyKeystore\n+  doLast {\n+    // tests expect to have an empty repo\n+    project.delete(\n+      \"${buildDir}/repo\",\n+      \"${buildDir}/oss-repo\"\n+    )\n+    createAndSetWritable(\n+      \"${buildDir}/repo\",\n+      \"${buildDir}/oss-repo\",\n+      \"${buildDir}/logs/default-1\",\n+      \"${buildDir}/logs/default-2\",\n+      \"${buildDir}/logs/oss-1\",\n+      \"${buildDir}/logs/oss-2\"\n+    )\n+  }\n+}\n+\n+if (TestFixturesPlugin.dockerComposeSupported()) {\n+  dockerCompose {\n+    tcpPortsToIgnoreWhenWaiting = [9600, 9601]\n+    if ('default'.equalsIgnoreCase(System.getProperty('tests.distribution', 'default'))) {\n+      useComposeFiles = ['docker-compose.yml']\n+    } else {\n+      useComposeFiles = ['docker-compose-oss.yml']\n+    }\n+  }\n+}\n+\n+def createAndSetWritable(Object... locations) {\n+  locations.each { location ->\n+    File file = file(location)\n+    file.mkdirs()\n+    file.setWritable(true, false)\n+  }\n+}\n+\n+processTestResources {\n+  from({ zipTree(configurations.restSpec.singleFile) }) {\n+    include 'rest-api-spec/api/**'\n+  }\n+  from project(':x-pack:plugin:core')\n+    .file('src/test/resources/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testnode.jks')\n+  dependsOn configurations.restSpec\n+}\n+\n+task integTest(type: Test) {\n+  maxParallelForks = '1'\n+  include '**/*IT.class'\n+  // don't add the tasks to build the docker images if we have no way of testing them\n+  if (TestFixturesPlugin.dockerComposeSupported()) {\n+    dependsOn \":distribution:docker:buildDockerImage\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bedbc93e09b1676bfb19e9541bbc7255138df957"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI0ODY2Mg==", "bodyText": "Better yet, we should depend on the appropriate task given the value of tests.distribution.", "url": "https://github.com/elastic/elasticsearch/pull/51658#discussion_r373248662", "createdAt": "2020-01-30T23:28:15Z", "author": {"login": "mark-vieira"}, "path": "qa/remote-clusters/build.gradle", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import org.elasticsearch.gradle.testfixtures.TestFixturesPlugin\n+\n+apply plugin: 'elasticsearch.standalone-rest-test'\n+apply plugin: 'elasticsearch.test.fixtures'\n+\n+testFixtures.useFixture()\n+\n+configurations {\n+  restSpec\n+}\n+\n+dependencies {\n+  restSpec project(':rest-api-spec')\n+  testCompile project(':client:rest-high-level')\n+}\n+\n+task copyKeystore(type: Sync) {\n+  from project(':x-pack:plugin:core')\n+    .file('src/test/resources/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testnode.jks')\n+  into \"${buildDir}/certs\"\n+  doLast {\n+    file(\"${buildDir}/certs\").setReadable(true, false)\n+    file(\"${buildDir}/certs/testnode.jks\").setReadable(true, false)\n+  }\n+}\n+\n+preProcessFixture {\n+  if (TestFixturesPlugin.dockerComposeSupported()) {\n+    dependsOn \":distribution:docker:buildDockerImage\"\n+  }\n+  dependsOn copyKeystore\n+  doLast {\n+    // tests expect to have an empty repo\n+    project.delete(\n+      \"${buildDir}/repo\",\n+      \"${buildDir}/oss-repo\"\n+    )\n+    createAndSetWritable(\n+      \"${buildDir}/repo\",\n+      \"${buildDir}/oss-repo\",\n+      \"${buildDir}/logs/default-1\",\n+      \"${buildDir}/logs/default-2\",\n+      \"${buildDir}/logs/oss-1\",\n+      \"${buildDir}/logs/oss-2\"\n+    )\n+  }\n+}\n+\n+if (TestFixturesPlugin.dockerComposeSupported()) {\n+  dockerCompose {\n+    tcpPortsToIgnoreWhenWaiting = [9600, 9601]\n+    if ('default'.equalsIgnoreCase(System.getProperty('tests.distribution', 'default'))) {\n+      useComposeFiles = ['docker-compose.yml']\n+    } else {\n+      useComposeFiles = ['docker-compose-oss.yml']\n+    }\n+  }\n+}\n+\n+def createAndSetWritable(Object... locations) {\n+  locations.each { location ->\n+    File file = file(location)\n+    file.mkdirs()\n+    file.setWritable(true, false)\n+  }\n+}\n+\n+processTestResources {\n+  from({ zipTree(configurations.restSpec.singleFile) }) {\n+    include 'rest-api-spec/api/**'\n+  }\n+  from project(':x-pack:plugin:core')\n+    .file('src/test/resources/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testnode.jks')\n+  dependsOn configurations.restSpec\n+}\n+\n+task integTest(type: Test) {\n+  maxParallelForks = '1'\n+  include '**/*IT.class'\n+  // don't add the tasks to build the docker images if we have no way of testing them\n+  if (TestFixturesPlugin.dockerComposeSupported()) {\n+    dependsOn \":distribution:docker:buildDockerImage\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI0ODM2MQ=="}, "originalCommit": {"oid": "bedbc93e09b1676bfb19e9541bbc7255138df957"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcf9e4772591887d7f15b7cc2c18c24ceb3b38d0", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/bcf9e4772591887d7f15b7cc2c18c24ceb3b38d0", "committedDate": "2020-01-31T09:35:19Z", "message": "review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNjQ5MTk0", "url": "https://github.com/elastic/elasticsearch/pull/51658#pullrequestreview-351649194", "createdAt": "2020-01-31T17:09:23Z", "commit": {"oid": "bcf9e4772591887d7f15b7cc2c18c24ceb3b38d0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNjUyMTU0", "url": "https://github.com/elastic/elasticsearch/pull/51658#pullrequestreview-351652154", "createdAt": "2020-01-31T17:14:47Z", "commit": {"oid": "bcf9e4772591887d7f15b7cc2c18c24ceb3b38d0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3084, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}