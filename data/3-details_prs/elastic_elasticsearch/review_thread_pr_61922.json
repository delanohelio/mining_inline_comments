{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NjgwMzEw", "number": 61922, "reviewThreads": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0MTowMVrOEgfT4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMjo1ODozN1rOEkwRFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTAyODgyOnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0MTowMVrOHNYQhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0MTowMVrOHNYQhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5MDk4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A +{request}+ requires either a Trained Model ID, a comma-separated list of\n          \n          \n            \n            A +{request}+ requires either a trained model ID, a comma-separated list of", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483790981", "createdAt": "2020-09-04T18:41:01Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,45 @@\n+--\n+:api: get-trained-models-metadata\n+:request: GetTrainedModelsMetadataRequest\n+:response: GetTrainedModelsMetadataResponse\n+--\n+[role=\"xpack\"]\n+[id=\"{upid}-{api}\"]\n+=== Get Trained Models Metadata API\n+\n+experimental[]\n+\n+Retrieves training metadata for one or more trained models.\n+The API accepts a +{request}+ object and returns a +{response}+.\n+\n+[id=\"{upid}-{api}-request\"]\n+==== Get Trained Models Metadata request\n+\n+A +{request}+ requires either a Trained Model ID, a comma-separated list of", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTAyOTYzOnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0MToyM1rOHNYREQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0MToyM1rOHNYREQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5MTEyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            === Get Trained Models Metadata API\n          \n          \n            \n            === Get trained models metadata API", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483791121", "createdAt": "2020-09-04T18:41:23Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,45 @@\n+--\n+:api: get-trained-models-metadata\n+:request: GetTrainedModelsMetadataRequest\n+:response: GetTrainedModelsMetadataResponse\n+--\n+[role=\"xpack\"]\n+[id=\"{upid}-{api}\"]\n+=== Get Trained Models Metadata API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTAzMDQxOnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0MTo0NVrOHNYRkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0MTo0NVrOHNYRkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5MTI0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ==== Get Trained Models Metadata request\n          \n          \n            \n            ==== Get trained models metadata request", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483791248", "createdAt": "2020-09-04T18:41:45Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,45 @@\n+--\n+:api: get-trained-models-metadata\n+:request: GetTrainedModelsMetadataRequest\n+:response: GetTrainedModelsMetadataResponse\n+--\n+[role=\"xpack\"]\n+[id=\"{upid}-{api}\"]\n+=== Get Trained Models Metadata API\n+\n+experimental[]\n+\n+Retrieves training metadata for one or more trained models.\n+The API accepts a +{request}+ object and returns a +{response}+.\n+\n+[id=\"{upid}-{api}-request\"]\n+==== Get Trained Models Metadata request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTAzMzU2OnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0MzowMFrOHNYTnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0MzowMFrOHNYTnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5MTc3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            IDs, or the special wildcard `_all` to get metadata for all Trained Models.\n          \n          \n            \n            IDs, or the special wildcard `_all` to get metadata for all trained models.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483791773", "createdAt": "2020-09-04T18:43:00Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,45 @@\n+--\n+:api: get-trained-models-metadata\n+:request: GetTrainedModelsMetadataRequest\n+:response: GetTrainedModelsMetadataResponse\n+--\n+[role=\"xpack\"]\n+[id=\"{upid}-{api}\"]\n+=== Get Trained Models Metadata API\n+\n+experimental[]\n+\n+Retrieves training metadata for one or more trained models.\n+The API accepts a +{request}+ object and returns a +{response}+.\n+\n+[id=\"{upid}-{api}-request\"]\n+==== Get Trained Models Metadata request\n+\n+A +{request}+ requires either a Trained Model ID, a comma-separated list of\n+IDs, or the special wildcard `_all` to get metadata for all Trained Models.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTAzODIzOnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0NDo1MlrOHNYWfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0NDo1MlrOHNYWfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5MjUwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <1> Constructing a new GET request referencing an existing Trained Model\n          \n          \n            \n            <1> Constructing a new GET request referencing an existing trained model", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483792508", "createdAt": "2020-09-04T18:44:52Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,45 @@\n+--\n+:api: get-trained-models-metadata\n+:request: GetTrainedModelsMetadataRequest\n+:response: GetTrainedModelsMetadataResponse\n+--\n+[role=\"xpack\"]\n+[id=\"{upid}-{api}\"]\n+=== Get Trained Models Metadata API\n+\n+experimental[]\n+\n+Retrieves training metadata for one or more trained models.\n+The API accepts a +{request}+ object and returns a +{response}+.\n+\n+[id=\"{upid}-{api}-request\"]\n+==== Get Trained Models Metadata request\n+\n+A +{request}+ requires either a Trained Model ID, a comma-separated list of\n+IDs, or the special wildcard `_all` to get metadata for all Trained Models.\n+\n+[\"source\",\"java\",subs=\"attributes,callouts,macros\"]\n+--------------------------------------------------\n+include-tagged::{doc-tests-file}[{api}-request]\n+--------------------------------------------------\n+<1> Constructing a new GET request referencing an existing Trained Model", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTAzOTAxOnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0NToxMFrOHNYW8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0NToxMFrOHNYW8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5MjYyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <3> Allow empty response if no Trained Models match the provided ID patterns.\n          \n          \n            \n            <3> Allow empty response if no trained models match the provided ID patterns.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483792625", "createdAt": "2020-09-04T18:45:10Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,45 @@\n+--\n+:api: get-trained-models-metadata\n+:request: GetTrainedModelsMetadataRequest\n+:response: GetTrainedModelsMetadataResponse\n+--\n+[role=\"xpack\"]\n+[id=\"{upid}-{api}\"]\n+=== Get Trained Models Metadata API\n+\n+experimental[]\n+\n+Retrieves training metadata for one or more trained models.\n+The API accepts a +{request}+ object and returns a +{response}+.\n+\n+[id=\"{upid}-{api}-request\"]\n+==== Get Trained Models Metadata request\n+\n+A +{request}+ requires either a Trained Model ID, a comma-separated list of\n+IDs, or the special wildcard `_all` to get metadata for all Trained Models.\n+\n+[\"source\",\"java\",subs=\"attributes,callouts,macros\"]\n+--------------------------------------------------\n+include-tagged::{doc-tests-file}[{api}-request]\n+--------------------------------------------------\n+<1> Constructing a new GET request referencing an existing Trained Model\n+<2> Set the paging parameters\n+<3> Allow empty response if no Trained Models match the provided ID patterns.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTA0MDQwOnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0NTo0MVrOHNYXwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0NTo0MVrOHNYXwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5MjgzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                If false, an error will be thrown if no Trained Models match the\n          \n          \n            \n                If false, an error will be thrown if no trained models match the", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483792834", "createdAt": "2020-09-04T18:45:41Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,45 @@\n+--\n+:api: get-trained-models-metadata\n+:request: GetTrainedModelsMetadataRequest\n+:response: GetTrainedModelsMetadataResponse\n+--\n+[role=\"xpack\"]\n+[id=\"{upid}-{api}\"]\n+=== Get Trained Models Metadata API\n+\n+experimental[]\n+\n+Retrieves training metadata for one or more trained models.\n+The API accepts a +{request}+ object and returns a +{response}+.\n+\n+[id=\"{upid}-{api}-request\"]\n+==== Get Trained Models Metadata request\n+\n+A +{request}+ requires either a Trained Model ID, a comma-separated list of\n+IDs, or the special wildcard `_all` to get metadata for all Trained Models.\n+\n+[\"source\",\"java\",subs=\"attributes,callouts,macros\"]\n+--------------------------------------------------\n+include-tagged::{doc-tests-file}[{api}-request]\n+--------------------------------------------------\n+<1> Constructing a new GET request referencing an existing Trained Model\n+<2> Set the paging parameters\n+<3> Allow empty response if no Trained Models match the provided ID patterns.\n+    If false, an error will be thrown if no Trained Models match the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTA0NDY1OnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0NzoyNFrOHNYaVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0NzoyNFrOHNYaVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5MzQ5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            for the requested Trained Model.\n          \n          \n            \n            for the requested trained model.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483793495", "createdAt": "2020-09-04T18:47:24Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,45 @@\n+--\n+:api: get-trained-models-metadata\n+:request: GetTrainedModelsMetadataRequest\n+:response: GetTrainedModelsMetadataResponse\n+--\n+[role=\"xpack\"]\n+[id=\"{upid}-{api}\"]\n+=== Get Trained Models Metadata API\n+\n+experimental[]\n+\n+Retrieves training metadata for one or more trained models.\n+The API accepts a +{request}+ object and returns a +{response}+.\n+\n+[id=\"{upid}-{api}-request\"]\n+==== Get Trained Models Metadata request\n+\n+A +{request}+ requires either a Trained Model ID, a comma-separated list of\n+IDs, or the special wildcard `_all` to get metadata for all Trained Models.\n+\n+[\"source\",\"java\",subs=\"attributes,callouts,macros\"]\n+--------------------------------------------------\n+include-tagged::{doc-tests-file}[{api}-request]\n+--------------------------------------------------\n+<1> Constructing a new GET request referencing an existing Trained Model\n+<2> Set the paging parameters\n+<3> Allow empty response if no Trained Models match the provided ID patterns.\n+    If false, an error will be thrown if no Trained Models match the\n+    ID patterns.\n+\n+include::../execution.asciidoc[]\n+\n+[id=\"{upid}-{api}-response\"]\n+==== Response\n+\n+The returned +{response}+ contains the metadata\n+for the requested Trained Model.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTA1MDYxOnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0OTo0N1rOHNYeBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo0OTo0N1rOHNYeBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5NDQzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: the Trained Model will only have training metadata if\n          \n          \n            \n            NOTE: The trained model has training metadata only if", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483794437", "createdAt": "2020-09-04T18:49:47Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,45 @@\n+--\n+:api: get-trained-models-metadata\n+:request: GetTrainedModelsMetadataRequest\n+:response: GetTrainedModelsMetadataResponse\n+--\n+[role=\"xpack\"]\n+[id=\"{upid}-{api}\"]\n+=== Get Trained Models Metadata API\n+\n+experimental[]\n+\n+Retrieves training metadata for one or more trained models.\n+The API accepts a +{request}+ object and returns a +{response}+.\n+\n+[id=\"{upid}-{api}-request\"]\n+==== Get Trained Models Metadata request\n+\n+A +{request}+ requires either a Trained Model ID, a comma-separated list of\n+IDs, or the special wildcard `_all` to get metadata for all Trained Models.\n+\n+[\"source\",\"java\",subs=\"attributes,callouts,macros\"]\n+--------------------------------------------------\n+include-tagged::{doc-tests-file}[{api}-request]\n+--------------------------------------------------\n+<1> Constructing a new GET request referencing an existing Trained Model\n+<2> Set the paging parameters\n+<3> Allow empty response if no Trained Models match the provided ID patterns.\n+    If false, an error will be thrown if no Trained Models match the\n+    ID patterns.\n+\n+include::../execution.asciidoc[]\n+\n+[id=\"{upid}-{api}-response\"]\n+==== Response\n+\n+The returned +{response}+ contains the metadata\n+for the requested Trained Model.\n+\n+NOTE: the Trained Model will only have training metadata if", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTA1ODgwOnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo1Mjo1NlrOHNYjEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToyNDo1MlrOHOYfVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5NTczMQ==", "bodyText": "in the current cluster by data frame analytics.\n\nIs the point here that (a) the training must have occurred in the same cluster, or/and (b) the training must have been done by us? I think there's a clearer way of saying this, depending on the intention.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483795731", "createdAt": "2020-09-04T18:52:56Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,45 @@\n+--\n+:api: get-trained-models-metadata\n+:request: GetTrainedModelsMetadataRequest\n+:response: GetTrainedModelsMetadataResponse\n+--\n+[role=\"xpack\"]\n+[id=\"{upid}-{api}\"]\n+=== Get Trained Models Metadata API\n+\n+experimental[]\n+\n+Retrieves training metadata for one or more trained models.\n+The API accepts a +{request}+ object and returns a +{response}+.\n+\n+[id=\"{upid}-{api}-request\"]\n+==== Get Trained Models Metadata request\n+\n+A +{request}+ requires either a Trained Model ID, a comma-separated list of\n+IDs, or the special wildcard `_all` to get metadata for all Trained Models.\n+\n+[\"source\",\"java\",subs=\"attributes,callouts,macros\"]\n+--------------------------------------------------\n+include-tagged::{doc-tests-file}[{api}-request]\n+--------------------------------------------------\n+<1> Constructing a new GET request referencing an existing Trained Model\n+<2> Set the paging parameters\n+<3> Allow empty response if no Trained Models match the provided ID patterns.\n+    If false, an error will be thrown if no Trained Models match the\n+    ID patterns.\n+\n+include::../execution.asciidoc[]\n+\n+[id=\"{upid}-{api}-response\"]\n+==== Response\n+\n+The returned +{response}+ contains the metadata\n+for the requested Trained Model.\n+\n+NOTE: the Trained Model will only have training metadata if\n+it was trained in the current cluster by data frame analytics.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MzM0OA==", "bodyText": "The training must have been done by us ON the same cluster.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r484843348", "createdAt": "2020-09-08T11:24:52Z", "author": {"login": "benwtrent"}, "path": "docs/java-rest/high-level/ml/get-trained-models-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,45 @@\n+--\n+:api: get-trained-models-metadata\n+:request: GetTrainedModelsMetadataRequest\n+:response: GetTrainedModelsMetadataResponse\n+--\n+[role=\"xpack\"]\n+[id=\"{upid}-{api}\"]\n+=== Get Trained Models Metadata API\n+\n+experimental[]\n+\n+Retrieves training metadata for one or more trained models.\n+The API accepts a +{request}+ object and returns a +{response}+.\n+\n+[id=\"{upid}-{api}-request\"]\n+==== Get Trained Models Metadata request\n+\n+A +{request}+ requires either a Trained Model ID, a comma-separated list of\n+IDs, or the special wildcard `_all` to get metadata for all Trained Models.\n+\n+[\"source\",\"java\",subs=\"attributes,callouts,macros\"]\n+--------------------------------------------------\n+include-tagged::{doc-tests-file}[{api}-request]\n+--------------------------------------------------\n+<1> Constructing a new GET request referencing an existing Trained Model\n+<2> Set the paging parameters\n+<3> Allow empty response if no Trained Models match the provided ID patterns.\n+    If false, an error will be thrown if no Trained Models match the\n+    ID patterns.\n+\n+include::../execution.asciidoc[]\n+\n+[id=\"{upid}-{api}-response\"]\n+==== Response\n+\n+The returned +{response}+ contains the metadata\n+for the requested Trained Model.\n+\n+NOTE: the Trained Model will only have training metadata if\n+it was trained in the current cluster by data frame analytics.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5NTczMQ=="}, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTA3NTgxOnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo1OToyN1rOHNYtLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODo1OToyN1rOHNYtLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5ODMxOA==", "bodyText": "I don't know the history of why \"inference\" is used here but not in the client doc, but unless there's a strong reason for keeping it here, I'd vote for removing it:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            = Get {infer} trained model metadata API\n          \n          \n            \n            = Get trained model metadata API", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483798318", "createdAt": "2020-09-04T18:59:27Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,736 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[get-inference-metadata]]\n+= Get {infer} trained model metadata API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTEwMzYxOnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxOToxMDoxNVrOHNY9pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxOToxMDoxNVrOHNY9pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwMjUzNA==", "bodyText": "This is another case where I'm not sure why we need \"inference\".\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Retrieves training metadata information for trained {infer} models.\n          \n          \n            \n            Retrieves training metadata information for trained models.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483802534", "createdAt": "2020-09-04T19:10:15Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,736 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[get-inference-metadata]]\n+= Get {infer} trained model metadata API\n+[subs=\"attributes\"]\n+++++\n+<titleabbrev>Get {infer} trained model metadata</titleabbrev>\n+++++\n+\n+Retrieves training metadata information for trained {infer} models.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTExNjU4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxOToxNTo0MVrOHNZFYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxOToxNTo0MVrOHNZFYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwNDUxNQ==", "bodyText": "I think this can be shortened:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can get training metadata information for multiple trained models in a single API\n          \n          \n            \n            You can get metadata for multiple trained models in a single API", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483804515", "createdAt": "2020-09-04T19:15:41Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,736 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[get-inference-metadata]]\n+= Get {infer} trained model metadata API\n+[subs=\"attributes\"]\n+++++\n+<titleabbrev>Get {infer} trained model metadata</titleabbrev>\n+++++\n+\n+Retrieves training metadata information for trained {infer} models.\n+\n+experimental[]\n+\n+\n+[[ml-get-inference-metadata-request]]\n+== {api-request-title}\n+\n+`GET _ml/inference/_metadata` +\n+\n+`GET _ml/inference/_all/_metadata` +\n+\n+`GET _ml/inference/<model_id>/_metadata` +\n+\n+`GET _ml/inference/<model_id>,<model_id_2>/_metadata` +\n+\n+`GET _ml/inference/<model_id_pattern*>,<model_id_2>/_metadata`\n+\n+\n+[[ml-get-inference-metadata-prereq]]\n+== {api-prereq-title}\n+\n+If the {es} {security-features} are enabled, you must have the following\n+privileges:\n+\n+* cluster: `monitor_ml`\n+\n+For more information, see <<security-privileges>> and {ml-docs-setup-privileges}.\n+\n+[[ml-get-inference-metadata-desc]]\n+== {api-description-title}\n+\n+You can get training metadata information for multiple trained models in a single API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTEyNzc4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxOToxOTo1NVrOHNZL7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNDozMjoyM1rOHOgFWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwNjE5MQ==", "bodyText": "allow_no_match ...\n\nI don't think you can use this shared definition, since it's referring to jobs, not models. I notice the same problem in other APIs, so I'll create that missing definition in a separate PR.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483806191", "createdAt": "2020-09-04T19:19:55Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,736 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[get-inference-metadata]]\n+= Get {infer} trained model metadata API\n+[subs=\"attributes\"]\n+++++\n+<titleabbrev>Get {infer} trained model metadata</titleabbrev>\n+++++\n+\n+Retrieves training metadata information for trained {infer} models.\n+\n+experimental[]\n+\n+\n+[[ml-get-inference-metadata-request]]\n+== {api-request-title}\n+\n+`GET _ml/inference/_metadata` +\n+\n+`GET _ml/inference/_all/_metadata` +\n+\n+`GET _ml/inference/<model_id>/_metadata` +\n+\n+`GET _ml/inference/<model_id>,<model_id_2>/_metadata` +\n+\n+`GET _ml/inference/<model_id_pattern*>,<model_id_2>/_metadata`\n+\n+\n+[[ml-get-inference-metadata-prereq]]\n+== {api-prereq-title}\n+\n+If the {es} {security-features} are enabled, you must have the following\n+privileges:\n+\n+* cluster: `monitor_ml`\n+\n+For more information, see <<security-privileges>> and {ml-docs-setup-privileges}.\n+\n+[[ml-get-inference-metadata-desc]]\n+== {api-description-title}\n+\n+You can get training metadata information for multiple trained models in a single API\n+request by using a comma-separated list of model IDs or a wildcard expression.\n+\n+\n+[[ml-get-inference-metadata-path-params]]\n+== {api-path-parms-title}\n+\n+`<model_id>`::\n+(Optional, string)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=model-id]\n+\n+\n+[[ml-get-inference-metadata-query-params]]\n+== {api-query-parms-title}\n+\n+`allow_no_match`::\n+(Optional, boolean)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=allow-no-match]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgyMjc5Mg==", "bodyText": "See the new \"allow-no-match-models\" in #62008", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483822792", "createdAt": "2020-09-04T20:04:03Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,736 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[get-inference-metadata]]\n+= Get {infer} trained model metadata API\n+[subs=\"attributes\"]\n+++++\n+<titleabbrev>Get {infer} trained model metadata</titleabbrev>\n+++++\n+\n+Retrieves training metadata information for trained {infer} models.\n+\n+experimental[]\n+\n+\n+[[ml-get-inference-metadata-request]]\n+== {api-request-title}\n+\n+`GET _ml/inference/_metadata` +\n+\n+`GET _ml/inference/_all/_metadata` +\n+\n+`GET _ml/inference/<model_id>/_metadata` +\n+\n+`GET _ml/inference/<model_id>,<model_id_2>/_metadata` +\n+\n+`GET _ml/inference/<model_id_pattern*>,<model_id_2>/_metadata`\n+\n+\n+[[ml-get-inference-metadata-prereq]]\n+== {api-prereq-title}\n+\n+If the {es} {security-features} are enabled, you must have the following\n+privileges:\n+\n+* cluster: `monitor_ml`\n+\n+For more information, see <<security-privileges>> and {ml-docs-setup-privileges}.\n+\n+[[ml-get-inference-metadata-desc]]\n+== {api-description-title}\n+\n+You can get training metadata information for multiple trained models in a single API\n+request by using a comma-separated list of model IDs or a wildcard expression.\n+\n+\n+[[ml-get-inference-metadata-path-params]]\n+== {api-path-parms-title}\n+\n+`<model_id>`::\n+(Optional, string)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=model-id]\n+\n+\n+[[ml-get-inference-metadata-query-params]]\n+== {api-query-parms-title}\n+\n+`allow_no_match`::\n+(Optional, boolean)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=allow-no-match]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwNjE5MQ=="}, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk2Nzc2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=allow-no-match]\n          \n          \n            \n            include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=allow-no-match-models]", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r484967768", "createdAt": "2020-09-08T14:32:23Z", "author": {"login": "benwtrent"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,736 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[get-inference-metadata]]\n+= Get {infer} trained model metadata API\n+[subs=\"attributes\"]\n+++++\n+<titleabbrev>Get {infer} trained model metadata</titleabbrev>\n+++++\n+\n+Retrieves training metadata information for trained {infer} models.\n+\n+experimental[]\n+\n+\n+[[ml-get-inference-metadata-request]]\n+== {api-request-title}\n+\n+`GET _ml/inference/_metadata` +\n+\n+`GET _ml/inference/_all/_metadata` +\n+\n+`GET _ml/inference/<model_id>/_metadata` +\n+\n+`GET _ml/inference/<model_id>,<model_id_2>/_metadata` +\n+\n+`GET _ml/inference/<model_id_pattern*>,<model_id_2>/_metadata`\n+\n+\n+[[ml-get-inference-metadata-prereq]]\n+== {api-prereq-title}\n+\n+If the {es} {security-features} are enabled, you must have the following\n+privileges:\n+\n+* cluster: `monitor_ml`\n+\n+For more information, see <<security-privileges>> and {ml-docs-setup-privileges}.\n+\n+[[ml-get-inference-metadata-desc]]\n+== {api-description-title}\n+\n+You can get training metadata information for multiple trained models in a single API\n+request by using a comma-separated list of model IDs or a wildcard expression.\n+\n+\n+[[ml-get-inference-metadata-path-params]]\n+== {api-path-parms-title}\n+\n+`<model_id>`::\n+(Optional, string)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=model-id]\n+\n+\n+[[ml-get-inference-metadata-query-params]]\n+== {api-query-parms-title}\n+\n+`allow_no_match`::\n+(Optional, boolean)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=allow-no-match]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwNjE5MQ=="}, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTEzNzE1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxOToyMzowOFrOHNZRIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxOToyMzowOFrOHNZRIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwNzUyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If the trained model is a classification model, feature importance stastics are gathered\n          \n          \n            \n            If the trained model is a classification model, feature importance statistics are gathered", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r483807521", "createdAt": "2020-09-04T19:23:08Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,736 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[get-inference-metadata]]\n+= Get {infer} trained model metadata API\n+[subs=\"attributes\"]\n+++++\n+<titleabbrev>Get {infer} trained model metadata</titleabbrev>\n+++++\n+\n+Retrieves training metadata information for trained {infer} models.\n+\n+experimental[]\n+\n+\n+[[ml-get-inference-metadata-request]]\n+== {api-request-title}\n+\n+`GET _ml/inference/_metadata` +\n+\n+`GET _ml/inference/_all/_metadata` +\n+\n+`GET _ml/inference/<model_id>/_metadata` +\n+\n+`GET _ml/inference/<model_id>,<model_id_2>/_metadata` +\n+\n+`GET _ml/inference/<model_id_pattern*>,<model_id_2>/_metadata`\n+\n+\n+[[ml-get-inference-metadata-prereq]]\n+== {api-prereq-title}\n+\n+If the {es} {security-features} are enabled, you must have the following\n+privileges:\n+\n+* cluster: `monitor_ml`\n+\n+For more information, see <<security-privileges>> and {ml-docs-setup-privileges}.\n+\n+[[ml-get-inference-metadata-desc]]\n+== {api-description-title}\n+\n+You can get training metadata information for multiple trained models in a single API\n+request by using a comma-separated list of model IDs or a wildcard expression.\n+\n+\n+[[ml-get-inference-metadata-path-params]]\n+== {api-path-parms-title}\n+\n+`<model_id>`::\n+(Optional, string)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=model-id]\n+\n+\n+[[ml-get-inference-metadata-query-params]]\n+== {api-query-parms-title}\n+\n+`allow_no_match`::\n+(Optional, boolean)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=allow-no-match]\n+\n+`from`::\n+(Optional, integer)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=from]\n+\n+`size`::\n+(Optional, integer)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=size]\n+\n+[role=\"child_attributes\"]\n+[[ml-get-inference-metadata-results]]\n+== {api-response-body-title}\n+\n+`count`::\n+(integer)\n+The total number of trained model metadata objects that matched the requested ID patterns.\n+Could be higher than the number of items in the `trained_models_metadata` array as the\n+size of the array is restricted by the supplied `size` parameter.\n+\n+`trained_models_metadata`::\n+(array)\n+An array of trained model metadata objects, which are sorted by the `model_id` value in\n+ascending order.\n++\n+.Properties of trained model metadata\n+[%collapsible%open]\n+====\n+`model_id`:::\n+(string)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=model-id]\n+\n+`total_feature_importance`:::\n+(array)\n+An array of the total feature importance for each training feature used from\n+the training data set.\n++\n+.Properties of total feature importance\n+[%collapsible%open]\n+=====\n+\n+`feature_name`:::\n+(string)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-feature-name]\n+\n+`importance`:::\n+(object)\n+A collection of feature importance statistics related to the training data set for this particular feature.\n++\n+.Properties of feature importance\n+[%collapsible%open]\n+======\n+`mean_magnitude`:::\n+(double)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-magnitude]\n+\n+`max`:::\n+(int)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-max]\n+\n+`min`:::\n+(int)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-min]\n+\n+======\n+\n+`classes`:::\n+(array)\n+If the trained model is a classification model, feature importance stastics are gathered", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb390e4e4257c2337c5df0d820f70a50620bbb9"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDQxODQwOnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToyNjo0NlrOHOq_rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToyNjo0NlrOHOq_rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0NjU0Mg==", "bodyText": "Sorry I didn't notice this sooner, but these descriptions have the same problem--they're job-specific.  I've created model-specific descriptions in #62128\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=from]\n          \n          \n            \n            include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=from-models]", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r485146542", "createdAt": "2020-09-08T19:26:46Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,736 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[get-inference-metadata]]\n+= Get trained model metadata API\n+[subs=\"attributes\"]\n+++++\n+<titleabbrev>Get {infer} trained model metadata</titleabbrev>\n+++++\n+\n+Retrieves training metadata information for trained models.\n+\n+experimental[]\n+\n+\n+[[ml-get-inference-metadata-request]]\n+== {api-request-title}\n+\n+`GET _ml/inference/_metadata` +\n+\n+`GET _ml/inference/_all/_metadata` +\n+\n+`GET _ml/inference/<model_id>/_metadata` +\n+\n+`GET _ml/inference/<model_id>,<model_id_2>/_metadata` +\n+\n+`GET _ml/inference/<model_id_pattern*>,<model_id_2>/_metadata`\n+\n+\n+[[ml-get-inference-metadata-prereq]]\n+== {api-prereq-title}\n+\n+If the {es} {security-features} are enabled, you must have the following\n+privileges:\n+\n+* cluster: `monitor_ml`\n+\n+For more information, see <<security-privileges>> and {ml-docs-setup-privileges}.\n+\n+[[ml-get-inference-metadata-desc]]\n+== {api-description-title}\n+\n+You can get metadata for multiple trained models in a single API\n+request by using a comma-separated list of model IDs or a wildcard expression.\n+\n+\n+[[ml-get-inference-metadata-path-params]]\n+== {api-path-parms-title}\n+\n+`<model_id>`::\n+(Optional, string)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=model-id]\n+\n+\n+[[ml-get-inference-metadata-query-params]]\n+== {api-query-parms-title}\n+\n+`allow_no_match`::\n+(Optional, boolean)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=allow-no-match-models]\n+\n+`from`::\n+(Optional, integer)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=from]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b962b523c54a68eeaa7daaa7f7152ca55e806bf"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDQyMDA4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToyNzoxN1rOHOrArQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToyNzoxN1rOHOrArQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0Njc5Nw==", "bodyText": "Ditto re needing a model-specific description:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=size]\n          \n          \n            \n            include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=size-models]", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r485146797", "createdAt": "2020-09-08T19:27:17Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,736 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[get-inference-metadata]]\n+= Get trained model metadata API\n+[subs=\"attributes\"]\n+++++\n+<titleabbrev>Get {infer} trained model metadata</titleabbrev>\n+++++\n+\n+Retrieves training metadata information for trained models.\n+\n+experimental[]\n+\n+\n+[[ml-get-inference-metadata-request]]\n+== {api-request-title}\n+\n+`GET _ml/inference/_metadata` +\n+\n+`GET _ml/inference/_all/_metadata` +\n+\n+`GET _ml/inference/<model_id>/_metadata` +\n+\n+`GET _ml/inference/<model_id>,<model_id_2>/_metadata` +\n+\n+`GET _ml/inference/<model_id_pattern*>,<model_id_2>/_metadata`\n+\n+\n+[[ml-get-inference-metadata-prereq]]\n+== {api-prereq-title}\n+\n+If the {es} {security-features} are enabled, you must have the following\n+privileges:\n+\n+* cluster: `monitor_ml`\n+\n+For more information, see <<security-privileges>> and {ml-docs-setup-privileges}.\n+\n+[[ml-get-inference-metadata-desc]]\n+== {api-description-title}\n+\n+You can get metadata for multiple trained models in a single API\n+request by using a comma-separated list of model IDs or a wildcard expression.\n+\n+\n+[[ml-get-inference-metadata-path-params]]\n+== {api-path-parms-title}\n+\n+`<model_id>`::\n+(Optional, string)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=model-id]\n+\n+\n+[[ml-get-inference-metadata-query-params]]\n+== {api-query-parms-title}\n+\n+`allow_no_match`::\n+(Optional, boolean)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=allow-no-match-models]\n+\n+`from`::\n+(Optional, integer)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=from]\n+\n+`size`::\n+(Optional, integer)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=size]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b962b523c54a68eeaa7daaa7f7152ca55e806bf"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDQyODI4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToyOTozN1rOHOrFag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToyOTozN1rOHOrFag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0ODAxMA==", "bodyText": "This is a very long example, so it's worth considering putting \"...\" in a couple of places where the info is redundant.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r485148010", "createdAt": "2020-09-08T19:29:37Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model-metadata.asciidoc", "diffHunk": "@@ -0,0 +1,736 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[get-inference-metadata]]\n+= Get trained model metadata API\n+[subs=\"attributes\"]\n+++++\n+<titleabbrev>Get {infer} trained model metadata</titleabbrev>\n+++++\n+\n+Retrieves training metadata information for trained models.\n+\n+experimental[]\n+\n+\n+[[ml-get-inference-metadata-request]]\n+== {api-request-title}\n+\n+`GET _ml/inference/_metadata` +\n+\n+`GET _ml/inference/_all/_metadata` +\n+\n+`GET _ml/inference/<model_id>/_metadata` +\n+\n+`GET _ml/inference/<model_id>,<model_id_2>/_metadata` +\n+\n+`GET _ml/inference/<model_id_pattern*>,<model_id_2>/_metadata`\n+\n+\n+[[ml-get-inference-metadata-prereq]]\n+== {api-prereq-title}\n+\n+If the {es} {security-features} are enabled, you must have the following\n+privileges:\n+\n+* cluster: `monitor_ml`\n+\n+For more information, see <<security-privileges>> and {ml-docs-setup-privileges}.\n+\n+[[ml-get-inference-metadata-desc]]\n+== {api-description-title}\n+\n+You can get metadata for multiple trained models in a single API\n+request by using a comma-separated list of model IDs or a wildcard expression.\n+\n+\n+[[ml-get-inference-metadata-path-params]]\n+== {api-path-parms-title}\n+\n+`<model_id>`::\n+(Optional, string)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=model-id]\n+\n+\n+[[ml-get-inference-metadata-query-params]]\n+== {api-query-parms-title}\n+\n+`allow_no_match`::\n+(Optional, boolean)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=allow-no-match-models]\n+\n+`from`::\n+(Optional, integer)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=from]\n+\n+`size`::\n+(Optional, integer)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=size]\n+\n+[role=\"child_attributes\"]\n+[[ml-get-inference-metadata-results]]\n+== {api-response-body-title}\n+\n+`count`::\n+(integer)\n+The total number of trained model metadata objects that matched the requested ID patterns.\n+Could be higher than the number of items in the `trained_models_metadata` array as the\n+size of the array is restricted by the supplied `size` parameter.\n+\n+`trained_models_metadata`::\n+(array)\n+An array of trained model metadata objects, which are sorted by the `model_id` value in\n+ascending order.\n++\n+.Properties of trained model metadata\n+[%collapsible%open]\n+====\n+`model_id`:::\n+(string)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=model-id]\n+\n+`total_feature_importance`:::\n+(array)\n+An array of the total feature importance for each training feature used from\n+the training data set.\n++\n+.Properties of total feature importance\n+[%collapsible%open]\n+=====\n+\n+`feature_name`:::\n+(string)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-feature-name]\n+\n+`importance`:::\n+(object)\n+A collection of feature importance statistics related to the training data set for this particular feature.\n++\n+.Properties of feature importance\n+[%collapsible%open]\n+======\n+`mean_magnitude`:::\n+(double)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-magnitude]\n+\n+`max`:::\n+(int)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-max]\n+\n+`min`:::\n+(int)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-min]\n+\n+======\n+\n+`classes`:::\n+(array)\n+If the trained model is a classification model, feature importance statistics are gathered\n+per target class value.\n++\n+.Properties of class feature importance\n+[%collapsible%open]\n+\n+======\n+\n+`class_name`:::\n+(string)\n+The target class value. Could be a string, boolean, or number.\n+\n+`importance`:::\n+(object)\n+A collection of feature importance statistics related to the training data set for this particular feature.\n++\n+.Properties of feature importance\n+[%collapsible%open]\n+=======\n+`mean_magnitude`:::\n+(double)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-magnitude]\n+\n+`max`:::\n+(int)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-max]\n+\n+`min`:::\n+(int)\n+include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-min]\n+\n+=======\n+\n+======\n+\n+=====\n+\n+====\n+\n+[[ml-get-inference-metadata-response-codes]]\n+== {api-response-codes-title}\n+\n+`404` (Missing resources)::\n+  If `allow_no_match` is `false`, this code indicates that there are no\n+  resources that match the request or only partial matches for the request.\n+\n+[[ml-get-inference-metadata-example]]\n+== {api-examples-title}\n+\n+The following example gets training metadata for all the trained models:\n+\n+[source,console]\n+--------------------------------------------------\n+GET _ml/inference/_metadata\n+--------------------------------------------------\n+// TEST[skip:TBD]\n+\n+\n+The API returns the following results:\n+\n+[source,console-result]\n+----\n+{\n+  \"count\" : 2,\n+  \"trained_models_metadata\" : [\n+    {\n+      \"model_id\" : \"avg_price_prediction-1599149443166\",\n+      \"total_feature_importance\" : [\n+        {\n+          \"feature_name\" : \"Origin\",\n+          \"importance\" : {\n+            \"mean_magnitude\" : 25.862683737654795,\n+            \"min\" : -188.93284143727874,\n+            \"max\" : 162.8783518094679\n+          }\n+        },\n+        {\n+          \"feature_name\" : \"FlightTimeMin\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b962b523c54a68eeaa7daaa7f7152ca55e806bf"}, "originalPosition": 204}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzkyNTgzOnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOTowNzo0NFrOHS_7zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOTowNzo0NFrOHS_7zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY4MzkxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <6> Allow empty response if no Trained Models match the provided ID patterns.\n          \n          \n            \n            <6> Allow empty response if no trained models match the provided ID patterns.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r489683916", "createdAt": "2020-09-16T19:07:44Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models.asciidoc", "diffHunk": "@@ -25,14 +25,16 @@ include-tagged::{doc-tests-file}[{api}-request]\n <1> Constructing a new GET request referencing an existing Trained Model\n <2> Set the paging parameters\n <3> Indicate if the complete model definition should be included\n-<4> Should the definition be fully decompressed on GET\n-<5> Allow empty response if no Trained Models match the provided ID patterns.\n+<4> Indicate if the total feature importance for the features used in training\n+    should be included in the model `metadata` field.\n+<5> Should the definition be fully decompressed on GET\n+<6> Allow empty response if no Trained Models match the provided ID patterns.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzkyNzEyOnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOTowNzo1OFrOHS_8zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOTowNzo1OFrOHS_8zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY4NDE3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <7> An optional list of tags used to narrow the model search. A Trained Model\n          \n          \n            \n            <7> An optional list of tags used to narrow the model search. A trained model", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r489684175", "createdAt": "2020-09-16T19:07:58Z", "author": {"login": "lcawl"}, "path": "docs/java-rest/high-level/ml/get-trained-models.asciidoc", "diffHunk": "@@ -25,14 +25,16 @@ include-tagged::{doc-tests-file}[{api}-request]\n <1> Constructing a new GET request referencing an existing Trained Model\n <2> Set the paging parameters\n <3> Indicate if the complete model definition should be included\n-<4> Should the definition be fully decompressed on GET\n-<5> Allow empty response if no Trained Models match the provided ID patterns.\n+<4> Indicate if the total feature importance for the features used in training\n+    should be included in the model `metadata` field.\n+<5> Should the definition be fully decompressed on GET\n+<6> Allow empty response if no Trained Models match the provided ID patterns.\n     If false, an error will be thrown if no Trained Models match the\n     ID patterns.\n-<6> An optional list of tags used to narrow the model search. A Trained Model\n+<7> An optional list of tags used to narrow the model search. A Trained Model", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Mzk0MTA1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOToxMDowM1rOHTAGVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOToxMDowM1rOHTAGVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY4NjYxNA==", "bodyText": "An array of the total feature importance for each training feature used from\n\nAFAIK we've never defined a \"training feature\".  Can we just say feature? If not, this term needs to be explained.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r489686614", "createdAt": "2020-09-16T19:10:03Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model.asciidoc", "diffHunk": "@@ -133,8 +136,86 @@ The license level of the trained model.\n \n `metadata`:::\n (object)\n-An object containing metadata about the trained model. For example, models \n+An object containing metadata about the trained model. For example, models\n created by {dfanalytics} contain `analysis_config` and `input` objects.\n+.Properties of metadata\n+[%collapsible%open]\n+=====\n+`total_feature_importance`:::\n+(array)\n+An array of the total feature importance for each training feature used from", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Mzk1MTM2OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/ml-shared.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOToxMToyNlrOHTAMsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjoxMjo1MFrOHUTgHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY4ODI0Mw==", "bodyText": "training feature name\n\nDitto earlier comment about \"training feature\".\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The training feature name for which this importance was calculated.\n          \n          \n            \n            The feature for which this importance was calculated.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r489688243", "createdAt": "2020-09-16T19:11:26Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/ml-shared.asciidoc", "diffHunk": "@@ -785,6 +785,23 @@ prediction. Defaults to the `results_field` value of the {dfanalytics-job} that\n used to train the model, which defaults to `<dependent_variable>_prediction`.\n end::inference-config-results-field-processor[]\n \n+tag::inference-metadata-feature-importance-feature-name[]\n+The training feature name for which this importance was calculated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1MzA4NA==", "bodyText": "I'll fix this in #62643 too", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r491053084", "createdAt": "2020-09-18T16:12:50Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/ml-shared.asciidoc", "diffHunk": "@@ -785,6 +785,23 @@ prediction. Defaults to the `results_field` value of the {dfanalytics-job} that\n used to train the model, which defaults to `<dependent_variable>_prediction`.\n end::inference-config-results-field-processor[]\n \n+tag::inference-metadata-feature-importance-feature-name[]\n+The training feature name for which this importance was calculated.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY4ODI0Mw=="}, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Mzk3MDA2OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOToxNDoyOVrOHTAaHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOToxNDoyOVrOHTAaHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5MTY3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             - definition: to include the model definition\n          \n          \n            \n             - `definition`: Includes the model definition", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r489691677", "createdAt": "2020-09-16T19:14:29Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model.asciidoc", "diffHunk": "@@ -72,17 +72,20 @@ retrieval. This allows the model to be in an acceptable format to be retrieved\n and then added to another cluster. Default is false.\n \n `from`::\n-(Optional, integer) \n+(Optional, integer)\n include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=from-models]\n \n-`include_model_definition`::\n-(Optional, boolean)\n-Specifies whether the model definition is returned in the response. Defaults to \n-`false`. When `true`, only a single model must match the ID patterns provided. \n-Otherwise, a bad request is returned.\n+`include`::\n+(Optional, string)\n+A comma delimited string of optional fields to include in the response body.\n+Valid options are:\n+ - definition: to include the model definition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Mzk3MzI4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOToxNDo1M1rOHTAcLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOToxNDo1M1rOHTAcLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5MjIwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             - total_feature_importance: to include the total feature importance for the\n          \n          \n            \n             - `total_feature_importance`: Includes the total feature importance for the", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r489692207", "createdAt": "2020-09-16T19:14:53Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model.asciidoc", "diffHunk": "@@ -72,17 +72,20 @@ retrieval. This allows the model to be in an acceptable format to be retrieved\n and then added to another cluster. Default is false.\n \n `from`::\n-(Optional, integer) \n+(Optional, integer)\n include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=from-models]\n \n-`include_model_definition`::\n-(Optional, boolean)\n-Specifies whether the model definition is returned in the response. Defaults to \n-`false`. When `true`, only a single model must match the ID patterns provided. \n-Otherwise, a bad request is returned.\n+`include`::\n+(Optional, string)\n+A comma delimited string of optional fields to include in the response body.\n+Valid options are:\n+ - definition: to include the model definition\n+ - total_feature_importance: to include the total feature importance for the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Mzk3NTM5OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOToxNToxM1rOHTAdbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOToxNToxM1rOHTAdbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5MjUyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               training feature sets. This field will be available in the `metadata` field.\n          \n          \n            \n               training data sets. This field is available in the `metadata` field in the response body.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r489692526", "createdAt": "2020-09-16T19:15:13Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model.asciidoc", "diffHunk": "@@ -72,17 +72,20 @@ retrieval. This allows the model to be in an acceptable format to be retrieved\n and then added to another cluster. Default is false.\n \n `from`::\n-(Optional, integer) \n+(Optional, integer)\n include::{es-repo-dir}/ml/ml-shared.asciidoc[tag=from-models]\n \n-`include_model_definition`::\n-(Optional, boolean)\n-Specifies whether the model definition is returned in the response. Defaults to \n-`false`. When `true`, only a single model must match the ID patterns provided. \n-Otherwise, a bad request is returned.\n+`include`::\n+(Optional, string)\n+A comma delimited string of optional fields to include in the response body.\n+Valid options are:\n+ - definition: to include the model definition\n+ - total_feature_importance: to include the total feature importance for the\n+   training feature sets. This field will be available in the `metadata` field.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjM3NDg4OnYy", "diffSide": "RIGHT", "path": "docs/java-rest/high-level/ml/get-trained-models.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODo0NzowNlrOHTX5jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODo0NzowNlrOHTX5jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3NjU1OQ==", "bodyText": "Swap these 2 sentences around, the fact that certain fields are removed is the detail\n<8> Optional boolean value for requesting the trained model in a format that can then be put into another cluster. Certain fields that can only be set when the model is imported are removed.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r490076559", "createdAt": "2020-09-17T08:47:06Z", "author": {"login": "davidkyle"}, "path": "docs/java-rest/high-level/ml/get-trained-models.asciidoc", "diffHunk": "@@ -25,14 +25,16 @@ include-tagged::{doc-tests-file}[{api}-request]\n <1> Constructing a new GET request referencing an existing Trained Model\n <2> Set the paging parameters\n <3> Indicate if the complete model definition should be included\n-<4> Should the definition be fully decompressed on GET\n-<5> Allow empty response if no Trained Models match the provided ID patterns.\n+<4> Indicate if the total feature importance for the features used in training\n+    should be included in the model `metadata` field.\n+<5> Should the definition be fully decompressed on GET\n+<6> Allow empty response if no Trained Models match the provided ID patterns.\n     If false, an error will be thrown if no Trained Models match the\n     ID patterns.\n-<6> An optional list of tags used to narrow the model search. A Trained Model\n+<7> An optional list of tags used to narrow the model search. A Trained Model\n     can have many tags or none. The trained models in the response will\n     contain all the provided tags.\n-<7> Optional boolean value indicating if certain fields should be removed on\n+<8> Optional boolean value indicating if certain fields should be removed on", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjQzNTAwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/TrainedModelConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTowMDo0NlrOHTYdlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTowMDo0NlrOHTYdlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA4NTc4Mg==", "bodyText": "The package private ctor also wraps this map in line 151\nthis.metadata = metadata == null ? null : Collections.unmodifiableMap(metadata);\nMake the ctor argument a UnmodifiableMap and getMetadata() return an UnmodifiableMap and I think that simplifies these maps being wrapped in a map in a map etc", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r490085782", "createdAt": "2020-09-17T09:00:46Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/TrainedModelConfig.java", "diffHunk": "@@ -408,7 +412,7 @@ public Builder(TrainedModelConfig config) {\n             this.definition = config.definition == null ? null : new LazyModelDefinition(config.definition);\n             this.description = config.getDescription();\n             this.tags = config.getTags();\n-            this.metadata = config.getMetadata();\n+            this.metadata = config.getMetadata() == null ? null : new HashMap<>(config.getMetadata());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjQ1NjYyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/TrainedModelConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTowNjowMFrOHTYqaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTowNjowMFrOHTYqaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA4OTA2NQ==", "bodyText": "Make a copy of the unmodifiable map here", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r490089065", "createdAt": "2020-09-17T09:06:00Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/TrainedModelConfig.java", "diffHunk": "@@ -460,6 +464,18 @@ public Builder setMetadata(Map<String, Object> metadata) {\n             return this;\n         }\n \n+        public Builder setFeatureImportance(List<TotalFeatureImportance> totalFeatureImportance) {\n+            if (totalFeatureImportance == null) {\n+                return this;\n+            }\n+            if (this.metadata == null) {\n+                this.metadata = new HashMap<>();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjUyMjI5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyMjowOFrOHTZSBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyMjowOFrOHTZSBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA5OTIwNg==", "bodyText": "nit: It is clearer if finalListener is used for these onFailure calls.", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r490099206", "createdAt": "2020-09-17T09:22:08Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -482,11 +518,11 @@ public void getTrainedModel(final String modelId, final boolean includeDefinitio\n                 try {\n                     builder = handleSearchItem(multiSearchResponse.getResponses()[0], modelId, this::parseInferenceDocLenientlyFromSource);\n                 } catch (ResourceNotFoundException ex) {\n-                    listener.onFailure(new ResourceNotFoundException(\n+                    getTrainedModelListener.onFailure(new ResourceNotFoundException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjU0NDQ4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyNzowOFrOHTZe9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyNzowOFrOHTZe9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwMjUxNw==", "bodyText": "Configs are still sorted by the search aren't they? Sorting here shouldn't be necessary", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r490102517", "createdAt": "2020-09-17T09:27:08Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -540,23 +579,65 @@ public void getTrainedModels(Set<String> modelIds, boolean allowNoResources, fin\n             .setQuery(queryBuilder)\n             .setSize(modelIds.size())\n             .request();\n-        List<TrainedModelConfig> configs = new ArrayList<>(modelIds.size());\n+        List<TrainedModelConfig.Builder> configs = new ArrayList<>(modelIds.size());\n         Set<String> modelsInIndex = Sets.difference(modelIds, MODELS_STORED_AS_RESOURCE);\n         Set<String> modelsAsResource = Sets.intersection(MODELS_STORED_AS_RESOURCE, modelIds);\n         for(String modelId : modelsAsResource) {\n             try {\n                 configs.add(loadModelFromResource(modelId, true));\n             } catch (ElasticsearchException ex) {\n-                listener.onFailure(ex);\n+                finalListener.onFailure(ex);\n                 return;\n             }\n         }\n         if (modelsInIndex.isEmpty()) {\n-            configs.sort(Comparator.comparing(TrainedModelConfig::getModelId));\n-            listener.onResponse(configs);\n+            finalListener.onResponse(configs.stream()\n+                .map(TrainedModelConfig.Builder::build)\n+                .sorted(Comparator.comparing(TrainedModelConfig::getModelId))\n+                .collect(Collectors.toList()));\n             return;\n         }\n \n+        ActionListener<List<TrainedModelConfig.Builder>> getTrainedModelListener = ActionListener.wrap(\n+            modelBuilders -> {\n+                if (includeTotalFeatureImportance == false) {\n+                    finalListener.onResponse(modelBuilders.stream()\n+                        .map(TrainedModelConfig.Builder::build)\n+                        .sorted(Comparator.comparing(TrainedModelConfig::getModelId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 206}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjU1MDI1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyODo0MFrOHTZioA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyODo0MFrOHTZioA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwMzQ1Ng==", "bodyText": "nit: delete extra blank line", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r490103456", "createdAt": "2020-09-17T09:28:40Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -540,23 +579,65 @@ public void getTrainedModels(Set<String> modelIds, boolean allowNoResources, fin\n             .setQuery(queryBuilder)\n             .setSize(modelIds.size())\n             .request();\n-        List<TrainedModelConfig> configs = new ArrayList<>(modelIds.size());\n+        List<TrainedModelConfig.Builder> configs = new ArrayList<>(modelIds.size());\n         Set<String> modelsInIndex = Sets.difference(modelIds, MODELS_STORED_AS_RESOURCE);\n         Set<String> modelsAsResource = Sets.intersection(MODELS_STORED_AS_RESOURCE, modelIds);\n         for(String modelId : modelsAsResource) {\n             try {\n                 configs.add(loadModelFromResource(modelId, true));\n             } catch (ElasticsearchException ex) {\n-                listener.onFailure(ex);\n+                finalListener.onFailure(ex);\n                 return;\n             }\n         }\n         if (modelsInIndex.isEmpty()) {\n-            configs.sort(Comparator.comparing(TrainedModelConfig::getModelId));\n-            listener.onResponse(configs);\n+            finalListener.onResponse(configs.stream()\n+                .map(TrainedModelConfig.Builder::build)\n+                .sorted(Comparator.comparing(TrainedModelConfig::getModelId))\n+                .collect(Collectors.toList()));\n             return;\n         }\n \n+        ActionListener<List<TrainedModelConfig.Builder>> getTrainedModelListener = ActionListener.wrap(\n+            modelBuilders -> {\n+                if (includeTotalFeatureImportance == false) {\n+                    finalListener.onResponse(modelBuilders.stream()\n+                        .map(TrainedModelConfig.Builder::build)\n+                        .sorted(Comparator.comparing(TrainedModelConfig::getModelId))\n+                        .collect(Collectors.toList()));\n+                    return;\n+                }\n+                this.getTrainedModelMetadata(modelIds, ActionListener.wrap(\n+                    metadata ->\n+                        finalListener.onResponse(modelBuilders.stream()\n+                            .map(builder -> {\n+                                TrainedModelMetadata modelMetadata = metadata.get(builder.getModelId());\n+                                if (modelMetadata != null) {\n+                                    builder.setFeatureImportance(modelMetadata.getTotalFeatureImportances());\n+                                }\n+                                return builder.build();\n+                            })\n+                            .sorted(Comparator.comparing(TrainedModelConfig::getModelId))\n+                            .collect(Collectors.toList())),\n+                    failure -> {\n+                        // total feature importance is not necessary for a model to be valid\n+                        // we shouldn't fail if it is not found\n+                        if (ExceptionsHelper.unwrapCause(failure) instanceof ResourceNotFoundException) {\n+                            finalListener.onResponse(modelBuilders.stream()\n+                                .map(TrainedModelConfig.Builder::build)\n+                                .sorted(Comparator.comparing(TrainedModelConfig::getModelId))\n+                                .collect(Collectors.toList()));\n+                            return;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 231}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjU1ODY4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozMDo0MVrOHTZnoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozMDo0MVrOHTZnoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwNDczNw==", "bodyText": "\ud83d\udc4d  makes sense\nIs it the case that newer models after version 7.10 will always have the total feature importance?", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r490104737", "createdAt": "2020-09-17T09:30:41Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -540,23 +579,65 @@ public void getTrainedModels(Set<String> modelIds, boolean allowNoResources, fin\n             .setQuery(queryBuilder)\n             .setSize(modelIds.size())\n             .request();\n-        List<TrainedModelConfig> configs = new ArrayList<>(modelIds.size());\n+        List<TrainedModelConfig.Builder> configs = new ArrayList<>(modelIds.size());\n         Set<String> modelsInIndex = Sets.difference(modelIds, MODELS_STORED_AS_RESOURCE);\n         Set<String> modelsAsResource = Sets.intersection(MODELS_STORED_AS_RESOURCE, modelIds);\n         for(String modelId : modelsAsResource) {\n             try {\n                 configs.add(loadModelFromResource(modelId, true));\n             } catch (ElasticsearchException ex) {\n-                listener.onFailure(ex);\n+                finalListener.onFailure(ex);\n                 return;\n             }\n         }\n         if (modelsInIndex.isEmpty()) {\n-            configs.sort(Comparator.comparing(TrainedModelConfig::getModelId));\n-            listener.onResponse(configs);\n+            finalListener.onResponse(configs.stream()\n+                .map(TrainedModelConfig.Builder::build)\n+                .sorted(Comparator.comparing(TrainedModelConfig::getModelId))\n+                .collect(Collectors.toList()));\n             return;\n         }\n \n+        ActionListener<List<TrainedModelConfig.Builder>> getTrainedModelListener = ActionListener.wrap(\n+            modelBuilders -> {\n+                if (includeTotalFeatureImportance == false) {\n+                    finalListener.onResponse(modelBuilders.stream()\n+                        .map(TrainedModelConfig.Builder::build)\n+                        .sorted(Comparator.comparing(TrainedModelConfig::getModelId))\n+                        .collect(Collectors.toList()));\n+                    return;\n+                }\n+                this.getTrainedModelMetadata(modelIds, ActionListener.wrap(\n+                    metadata ->\n+                        finalListener.onResponse(modelBuilders.stream()\n+                            .map(builder -> {\n+                                TrainedModelMetadata modelMetadata = metadata.get(builder.getModelId());\n+                                if (modelMetadata != null) {\n+                                    builder.setFeatureImportance(modelMetadata.getTotalFeatureImportances());\n+                                }\n+                                return builder.build();\n+                            })\n+                            .sorted(Comparator.comparing(TrainedModelConfig::getModelId))\n+                            .collect(Collectors.toList())),\n+                    failure -> {\n+                        // total feature importance is not necessary for a model to be valid\n+                        // we shouldn't fail if it is not found", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 224}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjU3OTY4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/qa/ml-with-security/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozNjoxNVrOHTZ0fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozNjoxNVrOHTZ0fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwODAyOA==", "bodyText": "I can't find a inference_metadata.yml did you forget to add it?", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r490108028", "createdAt": "2020-09-17T09:36:15Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/qa/ml-with-security/build.gradle", "diffHunk": "@@ -142,6 +142,8 @@ yamlRestTest {\n     'ml/inference_crud/Test put ensemble with tree where tree has out of bounds feature_names index',\n     'ml/inference_crud/Test put model with empty input.field_names',\n     'ml/inference_crud/Test PUT model where target type and inference config mismatch',\n+    'ml/inference_metadata/Test get given missing trained model metadata',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed50912feb97d444f9ac153c1f26b2dbc425191c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTc0OTk3OnYy", "diffSide": "RIGHT", "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMjo1ODozN1rOHT4SwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjoxMjoyNVrOHUTfNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYwNzI5Ng==", "bodyText": "This isn't formatting properly, so I think a continuation character is required.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            .Properties of metadata\n          \n          \n            \n            +\n          \n          \n            \n            .Properties of metadata", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r490607296", "createdAt": "2020-09-17T22:58:37Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model.asciidoc", "diffHunk": "@@ -133,8 +137,86 @@ The license level of the trained model.\n \n `metadata`:::\n (object)\n-An object containing metadata about the trained model. For example, models \n+An object containing metadata about the trained model. For example, models\n created by {dfanalytics} contain `analysis_config` and `input` objects.\n+.Properties of metadata", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21bdf09054d7c80b5807f1ceec375cf7ca14beee"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1Mjg1NA==", "bodyText": "I'll fix this in #62643", "url": "https://github.com/elastic/elasticsearch/pull/61922#discussion_r491052854", "createdAt": "2020-09-18T16:12:25Z", "author": {"login": "lcawl"}, "path": "docs/reference/ml/df-analytics/apis/get-inference-trained-model.asciidoc", "diffHunk": "@@ -133,8 +137,86 @@ The license level of the trained model.\n \n `metadata`:::\n (object)\n-An object containing metadata about the trained model. For example, models \n+An object containing metadata about the trained model. For example, models\n created by {dfanalytics} contain `analysis_config` and `input` objects.\n+.Properties of metadata", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYwNzI5Ng=="}, "originalCommit": {"oid": "21bdf09054d7c80b5807f1ceec375cf7ca14beee"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1707, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}