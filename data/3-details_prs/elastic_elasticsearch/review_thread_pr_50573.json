{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4Nzg2ODA3", "number": 50573, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMDozOTozNVrODVii9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMDozOTozNVrODVii9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTEyNjk1OnYy", "diffSide": "RIGHT", "path": "modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteResponseParsers.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMDozOTozNVrOFZ0qlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMzo0OTo0NVrOFZ3umg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYyMTU4OA==", "bodyText": "These two changes are required because we can't pass the context that is required for HITS_PARSER down to the throwable or shards parser.", "url": "https://github.com/elastic/elasticsearch/pull/50573#discussion_r362621588", "createdAt": "2020-01-02T20:39:35Z", "author": {"login": "nik9000"}, "path": "modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteResponseParsers.java", "diffHunk": "@@ -196,20 +196,20 @@ private RemoteResponseParsers() {}\n                 return new Response(timedOut, failures, totalHits, hits, scroll);\n             });\n     static {\n-        RESPONSE_PARSER.declareObject(optionalConstructorArg(), ThrowableBuilder.PARSER::apply, new ParseField(\"error\"));\n+        RESPONSE_PARSER.declareObject(optionalConstructorArg(), (p, c) -> ThrowableBuilder.PARSER.apply(p, null), new ParseField(\"error\"));\n         RESPONSE_PARSER.declareBoolean(optionalConstructorArg(), new ParseField(\"timed_out\"));\n         RESPONSE_PARSER.declareString(optionalConstructorArg(), new ParseField(\"_scroll_id\"));\n         RESPONSE_PARSER.declareObject(optionalConstructorArg(), HITS_PARSER, new ParseField(\"hits\"));\n-        RESPONSE_PARSER.declareObject(optionalConstructorArg(), SHARDS_PARSER, new ParseField(\"_shards\"));\n+        RESPONSE_PARSER.declareObject(optionalConstructorArg(), (p, c) -> SHARDS_PARSER.apply(p, null), new ParseField(\"_shards\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc5ce0a9c95b9efb2bb14f1ae8ed370be6b92d6"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY3MTc3MA==", "bodyText": "thanks for highlighting this", "url": "https://github.com/elastic/elasticsearch/pull/50573#discussion_r362671770", "createdAt": "2020-01-02T23:49:45Z", "author": {"login": "talevy"}, "path": "modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteResponseParsers.java", "diffHunk": "@@ -196,20 +196,20 @@ private RemoteResponseParsers() {}\n                 return new Response(timedOut, failures, totalHits, hits, scroll);\n             });\n     static {\n-        RESPONSE_PARSER.declareObject(optionalConstructorArg(), ThrowableBuilder.PARSER::apply, new ParseField(\"error\"));\n+        RESPONSE_PARSER.declareObject(optionalConstructorArg(), (p, c) -> ThrowableBuilder.PARSER.apply(p, null), new ParseField(\"error\"));\n         RESPONSE_PARSER.declareBoolean(optionalConstructorArg(), new ParseField(\"timed_out\"));\n         RESPONSE_PARSER.declareString(optionalConstructorArg(), new ParseField(\"_scroll_id\"));\n         RESPONSE_PARSER.declareObject(optionalConstructorArg(), HITS_PARSER, new ParseField(\"hits\"));\n-        RESPONSE_PARSER.declareObject(optionalConstructorArg(), SHARDS_PARSER, new ParseField(\"_shards\"));\n+        RESPONSE_PARSER.declareObject(optionalConstructorArg(), (p, c) -> SHARDS_PARSER.apply(p, null), new ParseField(\"_shards\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYyMTU4OA=="}, "originalCommit": {"oid": "adc5ce0a9c95b9efb2bb14f1ae8ed370be6b92d6"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4952, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}