{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MTk3Mjg4", "number": 65561, "title": "[ML] Adding assignment_memory_basis to model_size_stats", "bodyText": "At present the Java code makes a decision on whether to\nuse current model memory or model memory limit to calculate\nhow much memory a job requires to be assigned.\nThe plan is to move this decision to the C++ code, which will\nreport it via a new field in the model size stats.  An\nadditional change will be that once we have made the switch\nfrom using model memory limit to using current model memory\nwe will never switch back, as this causes large fluctuations\nup and down in memory requirement which will be much more\nnoticeable when autoscaling is in use.\nAlthough the only two options at present are model memory\nlimit and current model memory, the new enum includes a\nthird possibility, peak model memory.  To switch to this\nnow would be tricky, as there have been two bugs in the\nimplementation of peak model memory which render its value\nunreliable in 7.x.  However, in 8.x it might make sense to\nswitch to using peak model memory instead of current model\nmemory and it's much easier from a BWC perspective if the\nenum contains all the values from the start.\nRelates #63163", "createdAt": "2020-11-26T17:12:49Z", "url": "https://github.com/elastic/elasticsearch/pull/65561", "merged": true, "mergeCommit": {"oid": "49e492f3133150ce4ff8d8617c3b6134567d0486"}, "closed": true, "closedAt": "2020-12-03T17:18:09Z", "author": {"login": "droberts195"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgWEZ2AH2gAyNTI4MTk3Mjg4OjJlOGU0YzYyOGMxZTRlNjYzNTEwYWM0NjViYTk5NGZkNDk5MTJmNDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdik81AgH2gAyNTI4MTk3Mjg4OmYwODYzYmFhYTE4YjQwNzRkODFmZTBiNTI1MmRhZDE4MTY0MWQyMTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2e8e4c628c1e4e663510ac465ba994fd49912f47", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/2e8e4c628c1e4e663510ac465ba994fd49912f47", "committedDate": "2020-11-26T17:05:32Z", "message": "[ML] Adding assignment_memory_source to model_size_stats\n\nAt present the Java code makes a decision on whether to\nuse current model memory or model memory limit to calculate\nhow much memory a job requires to be assigned.\n\nThe plan is to move this decision to the C++ code, which will\nreport it via a new field in the model size stats.  An\nadditional change will be that once we have made the switch\nfrom using model memory limit to using current model memory\nwe will never switch back, as this causes large fluctuations\nup and down in memory requirement which will be much more\nnoticeable when autoscaling is in use.\n\nAlthough the only two options at present are model memory\nlimit and current model memory, the new enum includes a\nthird possibility, peak model memory.  To switch to this\nnow would be tricky, as there have been two bugs in the\nimplementation of peak model memory which render its value\nunreliable in 7.x.  However, in 8.x it might make sense to\nswitch to using peak model memory instead of current model\nmemory and it's much easier from a BWC perspective if the\nenum contains all the values from the start.\n\nRelates #63163"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6983cf0852479f6fffee439ecf1b6dcd9f50d7c", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/d6983cf0852479f6fffee439ecf1b6dcd9f50d7c", "committedDate": "2020-11-30T10:07:22Z", "message": "string should have been keyword, doh!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb9a4ef7fb23ea142df0276e8ae0052b0e421cd6", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/eb9a4ef7fb23ea142df0276e8ae0052b0e421cd6", "committedDate": "2020-12-03T11:09:50Z", "message": "source -> basis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "198923cc94fa5bac88784a2a5f005d31183fa666", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/198923cc94fa5bac88784a2a5f005d31183fa666", "committedDate": "2020-12-03T11:10:15Z", "message": "Merge branch 'master' into add_assignment_memory_source"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODg3OTkz", "url": "https://github.com/elastic/elasticsearch/pull/65561#pullrequestreview-543887993", "createdAt": "2020-12-03T12:07:41Z", "commit": {"oid": "198923cc94fa5bac88784a2a5f005d31183fa666"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjowNzo0MVrOH-YNyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjoxMjowN1rOH-Yftg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3MDUwNw==", "bodyText": "typo: ASSIGNMENT_MEMORY_BASISE_FIELD -> ASSIGNMENT_MEMORY_BASIS_FIELD", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535170507", "createdAt": "2020-12-03T12:07:41Z", "author": {"login": "dimitris-athanasiou"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/process/ModelSizeStats.java", "diffHunk": "@@ -55,6 +56,7 @@\n     public static final ParseField TOTAL_PARTITION_FIELD_COUNT_FIELD = new ParseField(\"total_partition_field_count\");\n     public static final ParseField BUCKET_ALLOCATION_FAILURES_COUNT_FIELD = new ParseField(\"bucket_allocation_failures_count\");\n     public static final ParseField MEMORY_STATUS_FIELD = new ParseField(\"memory_status\");\n+    public static final ParseField ASSIGNMENT_MEMORY_BASISE_FIELD = new ParseField(\"assignment_memory_basis\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198923cc94fa5bac88784a2a5f005d31183fa666"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3MjcxNw==", "bodyText": "update with new name: assignment_memory_basis", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535172717", "createdAt": "2020-12-03T12:09:54Z", "author": {"login": "dimitris-athanasiou"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java", "diffHunk": "@@ -164,6 +165,19 @@ private void addModelSnapshotIndexRequests(BulkRequest bulkRequest) {\n                 \" \\\"retain\\\":false }\", XContentType.JSON);\n             bulkRequest.add(indexRequest);\n         }\n+        // Also index one that contains 'assignment_memory_source', which was added in 7.11", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198923cc94fa5bac88784a2a5f005d31183fa666"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3MzA5Mg==", "bodyText": "here as well", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535173092", "createdAt": "2020-12-03T12:10:14Z", "author": {"login": "dimitris-athanasiou"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java", "diffHunk": "@@ -164,6 +165,19 @@ private void addModelSnapshotIndexRequests(BulkRequest bulkRequest) {\n                 \" \\\"retain\\\":false }\", XContentType.JSON);\n             bulkRequest.add(indexRequest);\n         }\n+        // Also index one that contains 'assignment_memory_source', which was added in 7.11\n+        {\n+            IndexRequest indexRequest = new IndexRequest(RESULTS_INDEX);\n+            indexRequest.source(\"{\\\"job_id\\\":\\\"\" + JOB_ID + \"\\\", \\\"timestamp\\\":1541587929000, \" +\n+                \"\\\"description\\\":\\\"State persisted due to job close at 2018-11-07T10:52:09+0000\\\", \\\"snapshot_id\\\":\\\"1541587929\\\",\" +\n+                \"\\\"snapshot_doc_count\\\":1, \\\"model_size_stats\\\":{\\\"job_id\\\":\\\"\" + JOB_ID + \"\\\", \\\"result_type\\\":\\\"model_size_stats\\\",\" +\n+                \"\\\"model_bytes\\\":51722, \\\"peak_model_bytes\\\":61322, \\\"model_bytes_exceeded\\\":10762, \\\"model_bytes_memory_limit\\\":40960,\" +\n+                \"\\\"total_by_field_count\\\":3, \\\"total_over_field_count\\\":0, \\\"total_partition_field_count\\\":2,\" +\n+                \"\\\"bucket_allocation_failures_count\\\":0, \\\"memory_status\\\":\\\"ok\\\", \\\"assignment_memory_source\\\":\\\"model_memory_limit\\\",\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198923cc94fa5bac88784a2a5f005d31183fa666"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3NDI0NA==", "bodyText": "why not use the enum value instead of parsing from string?", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535174244", "createdAt": "2020-12-03T12:11:14Z", "author": {"login": "dimitris-athanasiou"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java", "diffHunk": "@@ -236,35 +250,38 @@ public void testGetModelSnapshots() throws IOException {\n             assertThat(response.snapshots().get(0).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(0).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(0).getModelSizeStats().getAssignmentMemoryBasis(), nullValue());\n \n             assertThat(response.snapshots().get(1).getJobId(), equalTo(JOB_ID));\n-            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541588919\"));\n+            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541587929\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n             assertThat(response.snapshots().get(1).getDescription(), equalTo(\"State persisted due to job close at\" +\n-                \" 2018-11-07T11:08:39+0000\"));\n+                \" 2018-11-07T10:52:09+0000\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n-            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541588919000L)));\n+            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541587929000L)));\n             assertThat(response.snapshots().get(1).getLatestRecordTimeStamp(), equalTo(new Date(1519931700000L)));\n             assertThat(response.snapshots().get(1).getLatestResultTimeStamp(), equalTo(new Date(1519930800000L)));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getJobId(), equalTo(JOB_ID));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytes(), equalTo(51722L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getPeakModelBytes(), equalTo(61322L));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(null));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(null));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(10762L));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(40960L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalByFieldCount(), equalTo(3L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalOverFieldCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalPartitionFieldCount(), equalTo(2L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getAssignmentMemoryBasis(),\n+                equalTo(ModelSizeStats.AssignmentMemoryBasis.fromString(\"model_memory_limit\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198923cc94fa5bac88784a2a5f005d31183fa666"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3NDk1NA==", "bodyText": "use enum value?", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535174954", "createdAt": "2020-12-03T12:11:59Z", "author": {"login": "dimitris-athanasiou"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java", "diffHunk": "@@ -513,27 +582,52 @@ public void testGetModelSnapshots() throws IOException {\n             assertThat(response.snapshots().get(0).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(0).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(0).getModelSizeStats().getAssignmentMemoryBasis(), nullValue());\n \n             assertThat(response.snapshots().get(1).getJobId(), equalTo(JOB_ID));\n-            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541588919\"));\n+            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541587929\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n             assertThat(response.snapshots().get(1).getDescription(), equalTo(\"State persisted due to job close at\" +\n-                \" 2018-11-07T11:08:39+0000\"));\n+                \" 2018-11-07T10:52:09+0000\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n-            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541588919000L)));\n+            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541587929000L)));\n             assertThat(response.snapshots().get(1).getLatestRecordTimeStamp(), equalTo(new Date(1519931700000L)));\n             assertThat(response.snapshots().get(1).getLatestResultTimeStamp(), equalTo(new Date(1519930800000L)));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getJobId(), equalTo(JOB_ID));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytes(), equalTo(51722L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getPeakModelBytes(), equalTo(61322L));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(null));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(null));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(10762L));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(40960L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalByFieldCount(), equalTo(3L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalOverFieldCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalPartitionFieldCount(), equalTo(2L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getAssignmentMemoryBasis(),\n+                equalTo(ModelSizeStats.AssignmentMemoryBasis.fromString(\"model_memory_limit\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198923cc94fa5bac88784a2a5f005d31183fa666"}, "originalPosition": 307}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3NTA5NA==", "bodyText": "use enum value?", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535175094", "createdAt": "2020-12-03T12:12:07Z", "author": {"login": "dimitris-athanasiou"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java", "diffHunk": "@@ -513,27 +582,52 @@ public void testGetModelSnapshots() throws IOException {\n             assertThat(response.snapshots().get(0).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(0).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(0).getModelSizeStats().getAssignmentMemoryBasis(), nullValue());\n \n             assertThat(response.snapshots().get(1).getJobId(), equalTo(JOB_ID));\n-            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541588919\"));\n+            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541587929\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n             assertThat(response.snapshots().get(1).getDescription(), equalTo(\"State persisted due to job close at\" +\n-                \" 2018-11-07T11:08:39+0000\"));\n+                \" 2018-11-07T10:52:09+0000\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n-            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541588919000L)));\n+            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541587929000L)));\n             assertThat(response.snapshots().get(1).getLatestRecordTimeStamp(), equalTo(new Date(1519931700000L)));\n             assertThat(response.snapshots().get(1).getLatestResultTimeStamp(), equalTo(new Date(1519930800000L)));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getJobId(), equalTo(JOB_ID));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytes(), equalTo(51722L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getPeakModelBytes(), equalTo(61322L));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(null));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(null));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(10762L));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(40960L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalByFieldCount(), equalTo(3L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalOverFieldCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalPartitionFieldCount(), equalTo(2L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getAssignmentMemoryBasis(),\n+                equalTo(ModelSizeStats.AssignmentMemoryBasis.fromString(\"model_memory_limit\")));\n+\n+            assertThat(response.snapshots().get(2).getJobId(), equalTo(JOB_ID));\n+            assertThat(response.snapshots().get(2).getSnapshotId(), equalTo(\"1541588919\"));\n+            assertThat(response.snapshots().get(2).getSnapshotDocCount(), equalTo(1));\n+            assertThat(response.snapshots().get(2).getDescription(), equalTo(\"State persisted due to job close at\" +\n+                \" 2018-11-07T11:08:39+0000\"));\n+            assertThat(response.snapshots().get(2).getSnapshotDocCount(), equalTo(1));\n+            assertThat(response.snapshots().get(2).getTimestamp(), equalTo(new Date(1541588919000L)));\n+            assertThat(response.snapshots().get(2).getLatestRecordTimeStamp(), equalTo(new Date(1519931700000L)));\n+            assertThat(response.snapshots().get(2).getLatestResultTimeStamp(), equalTo(new Date(1519930800000L)));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getJobId(), equalTo(JOB_ID));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getModelBytes(), equalTo(51722L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getPeakModelBytes(), equalTo(61322L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getModelBytesExceeded(), equalTo(null));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(null));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getTotalByFieldCount(), equalTo(3L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getTotalOverFieldCount(), equalTo(0L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getTotalPartitionFieldCount(), equalTo(2L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getMemoryStatus(),\n+                equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198923cc94fa5bac88784a2a5f005d31183fa666"}, "originalPosition": 328}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "859eb4dae63cefb85547ed97d0d6e6b5d9ad63f9", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/859eb4dae63cefb85547ed97d0d6e6b5d9ad63f9", "committedDate": "2020-12-03T14:55:36Z", "message": "Fixing typos and other code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MDQ3Nzgy", "url": "https://github.com/elastic/elasticsearch/pull/65561#pullrequestreview-544047782", "createdAt": "2020-12-03T15:06:26Z", "commit": {"oid": "859eb4dae63cefb85547ed97d0d6e6b5d9ad63f9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0863baaa18b4074d81fe0b5252dad181641d212", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/f0863baaa18b4074d81fe0b5252dad181641d212", "committedDate": "2020-12-03T15:33:41Z", "message": "Merge branch 'master' into add_assignment_memory_source"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4326, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}