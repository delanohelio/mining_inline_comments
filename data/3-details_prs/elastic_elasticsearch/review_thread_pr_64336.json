{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMjMzODkx", "number": 64336, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTozNDo1MlrOEz7n6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo0NjoxNVrOEz7-Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODg5NzA3OnYy", "diffSide": "RIGHT", "path": "distribution/docker/ironbank-docker-build-context/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTozNDo1MlrOHrdTPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOTozMDowNFrOHt6mQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMzMDg3Ng==", "bodyText": "Should we be wiring this up to the assemble task if we generally don't want to be building this image as part of a \"normal\" build? Since building this for now is going to be a manual process perhaps we should leave this bit out and just run the explicit task when needed.", "url": "https://github.com/elastic/elasticsearch/pull/64336#discussion_r515330876", "createdAt": "2020-10-30T19:34:52Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/ironbank-docker-build-context/build.gradle", "diffHunk": "@@ -0,0 +1,14 @@\n+import org.elasticsearch.gradle.Architecture\n+import org.elasticsearch.gradle.DockerBase\n+\n+apply plugin: 'base'\n+\n+tasks.register(\"buildIronBankDockerBuildContext\", Tar) {\n+  archiveExtension = 'tar.gz'\n+  compression = Compression.GZIP\n+  archiveClassifier = \"docker-build-context\"\n+  archiveBaseName = \"elasticsearch-ironbank\"\n+  with dockerBuildContext(Architecture.X64, false, DockerBase.IRON_BANK, false)\n+}\n+\n+tasks.named(\"assemble\").configure {dependsOn \"buildIronBankDockerBuildContext\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "597108016bd94f57e5a3772cc7687916c7234d26"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwODAzMg==", "bodyText": "That's a fair point. I removed the wiring-up.", "url": "https://github.com/elastic/elasticsearch/pull/64336#discussion_r517908032", "createdAt": "2020-11-05T09:30:04Z", "author": {"login": "pugnascotia"}, "path": "distribution/docker/ironbank-docker-build-context/build.gradle", "diffHunk": "@@ -0,0 +1,14 @@\n+import org.elasticsearch.gradle.Architecture\n+import org.elasticsearch.gradle.DockerBase\n+\n+apply plugin: 'base'\n+\n+tasks.register(\"buildIronBankDockerBuildContext\", Tar) {\n+  archiveExtension = 'tar.gz'\n+  compression = Compression.GZIP\n+  archiveClassifier = \"docker-build-context\"\n+  archiveBaseName = \"elasticsearch-ironbank\"\n+  with dockerBuildContext(Architecture.X64, false, DockerBase.IRON_BANK, false)\n+}\n+\n+tasks.named(\"assemble\").configure {dependsOn \"buildIronBankDockerBuildContext\"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMzMDg3Ng=="}, "originalCommit": {"oid": "597108016bd94f57e5a3772cc7687916c7234d26"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODkwNzM1OnYy", "diffSide": "RIGHT", "path": "distribution/docker/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTozNzoxOFrOHrdZxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOTozMDozMFrOHt6nTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMzMjU0OQ==", "bodyText": "Isn't the iron bank image technically \"local\". Could we not just pass local = true for that build context instead of having this additional condition or does specifying local have other undesired behavior?", "url": "https://github.com/elastic/elasticsearch/pull/64336#discussion_r515332549", "createdAt": "2020-10-30T19:37:18Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -29,7 +32,7 @@ dependencies {\n \n ext.expansions = { Architecture architecture, boolean oss, DockerBase base, boolean local ->\n   String classifier\n-  if (local) {\n+  if (local || base == DockerBase.IRON_BANK) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "597108016bd94f57e5a3772cc7687916c7234d26"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwODMwMg==", "bodyText": "Ah...that's so obvious now you've pointed it out \ud83e\udd26", "url": "https://github.com/elastic/elasticsearch/pull/64336#discussion_r517908302", "createdAt": "2020-11-05T09:30:30Z", "author": {"login": "pugnascotia"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -29,7 +32,7 @@ dependencies {\n \n ext.expansions = { Architecture architecture, boolean oss, DockerBase base, boolean local ->\n   String classifier\n-  if (local) {\n+  if (local || base == DockerBase.IRON_BANK) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMzMjU0OQ=="}, "originalCommit": {"oid": "597108016bd94f57e5a3772cc7687916c7234d26"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODkyODg5OnYy", "diffSide": "RIGHT", "path": "distribution/docker/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo0MToyNFrOHrdnzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOTozMToxOVrOHt6pNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMzNjE0MA==", "bodyText": "Do we want this trailing comma here?", "url": "https://github.com/elastic/elasticsearch/pull/64336#discussion_r515336140", "createdAt": "2020-10-30T19:41:24Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -63,56 +75,82 @@ RUN curl --retry 8 -S -L \\\\\n \n   return [\n     'base_image'          : base.getImage(),\n+    'bin_dir'             : base == DockerBase.IRON_BANK ? 'scripts' : 'bin',\n+    'build_args'          : buildArgs,\n     'build_date'          : BuildParams.buildDate,\n+    'config_dir'          : base == DockerBase.IRON_BANK ? 'scripts' : 'config',\n     'git_revision'        : BuildParams.gitRevision,\n     'license'             : oss ? 'Apache-2.0' : 'Elastic-License',\n     'package_manager'     : base == DockerBase.UBI ? 'microdnf' : 'yum',\n     'source_elasticsearch': sourceElasticsearch,\n     'docker_base'         : base.name().toLowerCase(),\n-    'version'             : VersionProperties.elasticsearch\n+    'version'             : VersionProperties.elasticsearch,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "597108016bd94f57e5a3772cc7687916c7234d26"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwODc5MA==", "bodyText": "I think that crept in because I added then removed some extra variables. Arguably you're more diff-proofed with the comma, but I'm not bothered either way, so I'm removed it again.", "url": "https://github.com/elastic/elasticsearch/pull/64336#discussion_r517908790", "createdAt": "2020-11-05T09:31:19Z", "author": {"login": "pugnascotia"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -63,56 +75,82 @@ RUN curl --retry 8 -S -L \\\\\n \n   return [\n     'base_image'          : base.getImage(),\n+    'bin_dir'             : base == DockerBase.IRON_BANK ? 'scripts' : 'bin',\n+    'build_args'          : buildArgs,\n     'build_date'          : BuildParams.buildDate,\n+    'config_dir'          : base == DockerBase.IRON_BANK ? 'scripts' : 'config',\n     'git_revision'        : BuildParams.gitRevision,\n     'license'             : oss ? 'Apache-2.0' : 'Elastic-License',\n     'package_manager'     : base == DockerBase.UBI ? 'microdnf' : 'yum',\n     'source_elasticsearch': sourceElasticsearch,\n     'docker_base'         : base.name().toLowerCase(),\n-    'version'             : VersionProperties.elasticsearch\n+    'version'             : VersionProperties.elasticsearch,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMzNjE0MA=="}, "originalCommit": {"oid": "597108016bd94f57e5a3772cc7687916c7234d26"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODkzNTMxOnYy", "diffSide": "RIGHT", "path": "distribution/docker/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo0Mjo0M1rOHrdsBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOTozMToyOVrOHt6pqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMzNzIyMA==", "bodyText": "nit: My preference is to wrap nested ternary statements in parens. It just makes it easy to grok IMO.", "url": "https://github.com/elastic/elasticsearch/pull/64336#discussion_r515337220", "createdAt": "2020-10-30T19:42:43Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -63,56 +75,82 @@ RUN curl --retry 8 -S -L \\\\\n \n   return [\n     'base_image'          : base.getImage(),\n+    'bin_dir'             : base == DockerBase.IRON_BANK ? 'scripts' : 'bin',\n+    'build_args'          : buildArgs,\n     'build_date'          : BuildParams.buildDate,\n+    'config_dir'          : base == DockerBase.IRON_BANK ? 'scripts' : 'config',\n     'git_revision'        : BuildParams.gitRevision,\n     'license'             : oss ? 'Apache-2.0' : 'Elastic-License',\n     'package_manager'     : base == DockerBase.UBI ? 'microdnf' : 'yum',\n     'source_elasticsearch': sourceElasticsearch,\n     'docker_base'         : base.name().toLowerCase(),\n-    'version'             : VersionProperties.elasticsearch\n+    'version'             : VersionProperties.elasticsearch,\n   ]\n }\n \n+/**\n+ * This filter squashes long runs of newlines so that the output\n+ * is a little more aesthetically pleasing.\n+ */\n+class SquashNewlinesFilter extends FilterReader {\n+  SquashNewlinesFilter(Reader input) {\n+    super(new StringReader(input.text.replaceAll(\"\\n{2,}\", \"\\n\\n\")))\n+  }\n+}\n+\n private static String buildPath(Architecture architecture, boolean oss, DockerBase base) {\n   return 'build/' +\n     (architecture == Architecture.AARCH64 ? 'aarch64-' : '') +\n     (oss ? 'oss-' : '') +\n     (base == DockerBase.UBI ? 'ubi-' : '') +\n+    (base == DockerBase.UBI ? 'ubi-' : base == DockerBase.IRON_BANK ? 'ironbank-' : '') +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "597108016bd94f57e5a3772cc7687916c7234d26"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwODkwNQ==", "bodyText": "Parens added \ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/64336#discussion_r517908905", "createdAt": "2020-11-05T09:31:29Z", "author": {"login": "pugnascotia"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -63,56 +75,82 @@ RUN curl --retry 8 -S -L \\\\\n \n   return [\n     'base_image'          : base.getImage(),\n+    'bin_dir'             : base == DockerBase.IRON_BANK ? 'scripts' : 'bin',\n+    'build_args'          : buildArgs,\n     'build_date'          : BuildParams.buildDate,\n+    'config_dir'          : base == DockerBase.IRON_BANK ? 'scripts' : 'config',\n     'git_revision'        : BuildParams.gitRevision,\n     'license'             : oss ? 'Apache-2.0' : 'Elastic-License',\n     'package_manager'     : base == DockerBase.UBI ? 'microdnf' : 'yum',\n     'source_elasticsearch': sourceElasticsearch,\n     'docker_base'         : base.name().toLowerCase(),\n-    'version'             : VersionProperties.elasticsearch\n+    'version'             : VersionProperties.elasticsearch,\n   ]\n }\n \n+/**\n+ * This filter squashes long runs of newlines so that the output\n+ * is a little more aesthetically pleasing.\n+ */\n+class SquashNewlinesFilter extends FilterReader {\n+  SquashNewlinesFilter(Reader input) {\n+    super(new StringReader(input.text.replaceAll(\"\\n{2,}\", \"\\n\\n\")))\n+  }\n+}\n+\n private static String buildPath(Architecture architecture, boolean oss, DockerBase base) {\n   return 'build/' +\n     (architecture == Architecture.AARCH64 ? 'aarch64-' : '') +\n     (oss ? 'oss-' : '') +\n     (base == DockerBase.UBI ? 'ubi-' : '') +\n+    (base == DockerBase.UBI ? 'ubi-' : base == DockerBase.IRON_BANK ? 'ironbank-' : '') +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMzNzIyMA=="}, "originalCommit": {"oid": "597108016bd94f57e5a3772cc7687916c7234d26"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODk1MTg1OnYy", "diffSide": "RIGHT", "path": "distribution/docker/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo0NTo1NFrOHrd2sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOTozMjozOFrOHt6shg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMzOTk1NQ==", "bodyText": "Just so I understand, we are effectively not building the iron bank image here becuase we have not added a corresponding \"export' project for it, yes?", "url": "https://github.com/elastic/elasticsearch/pull/64336#discussion_r515339955", "createdAt": "2020-10-30T19:45:54Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -324,6 +362,8 @@ subprojects { Project subProject ->\n \n     final Architecture architecture = subProject.name.contains('aarch64-') ? Architecture.AARCH64 : Architecture.X64\n     final boolean oss = subProject.name.contains('oss-')\n+    // We can ignore Iron Bank at the moment as we don't", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "597108016bd94f57e5a3772cc7687916c7234d26"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwOTYzOA==", "bodyText": "Yes, there's no export task, and there won't be without a way to automatically build the image. That would require simulating the Iron Bank image build process.", "url": "https://github.com/elastic/elasticsearch/pull/64336#discussion_r517909638", "createdAt": "2020-11-05T09:32:38Z", "author": {"login": "pugnascotia"}, "path": "distribution/docker/build.gradle", "diffHunk": "@@ -324,6 +362,8 @@ subprojects { Project subProject ->\n \n     final Architecture architecture = subProject.name.contains('aarch64-') ? Architecture.AARCH64 : Architecture.X64\n     final boolean oss = subProject.name.contains('oss-')\n+    // We can ignore Iron Bank at the moment as we don't", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMzOTk1NQ=="}, "originalCommit": {"oid": "597108016bd94f57e5a3772cc7687916c7234d26"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODk1Mzg2OnYy", "diffSide": "RIGHT", "path": "distribution/docker/ubi-docker-build-context/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo0NjoxNVrOHrd4EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo0NjoxNVrOHrd4EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0MDMwNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/64336#discussion_r515340304", "createdAt": "2020-10-30T19:46:15Z", "author": {"login": "mark-vieira"}, "path": "distribution/docker/ubi-docker-build-context/build.gradle", "diffHunk": "@@ -10,4 +10,4 @@ task buildUbiDockerBuildContext(type: Tar) {\n   with dockerBuildContext(null, false, DockerBase.UBI, false)\n }\n \n-assemble.dependsOn buildUbiDockerBuildContext\n+tasks.named(\"assemble\").configure {dependsOn \"buildUbiDockerBuildContext\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "597108016bd94f57e5a3772cc7687916c7234d26"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4175, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}