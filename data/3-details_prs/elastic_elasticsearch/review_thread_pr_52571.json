{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NzQ4MTU3", "number": 52571, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0MDo0M1rODhjMeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0MDo0M1rODhjMeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTA2MjMzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/SumAggregatorFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0MDo0M1rOFsV5yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowODoxNlrOFsXCYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MDUyMQ==", "bodyText": "Should we support booleans here?  I haven't checked Sum specifically, but I'd bet it accepts a boolean field in master.", "url": "https://github.com/elastic/elasticsearch/pull/52571#discussion_r382040521", "createdAt": "2020-02-20T14:40:43Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/SumAggregatorFactory.java", "diffHunk": "@@ -46,6 +50,22 @@\n         super(name, config, queryShardContext, parent, subFactoriesBuilder, metaData);\n     }\n \n+    static void registerAggregators(ValuesSourceRegistry valuesSourceRegistry) {\n+        valuesSourceRegistry.register(SumAggregationBuilder.NAME,\n+           List.of(CoreValuesSourceType.NUMERIC, CoreValuesSourceType.DATE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fb75bb07044f499c77b2df974240505a67bf7c8"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTEwNg==", "bodyText": "You're right. I am adding booleans too.", "url": "https://github.com/elastic/elasticsearch/pull/52571#discussion_r382059106", "createdAt": "2020-02-20T15:08:16Z", "author": {"login": "csoulios"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/SumAggregatorFactory.java", "diffHunk": "@@ -46,6 +50,22 @@\n         super(name, config, queryShardContext, parent, subFactoriesBuilder, metaData);\n     }\n \n+    static void registerAggregators(ValuesSourceRegistry valuesSourceRegistry) {\n+        valuesSourceRegistry.register(SumAggregationBuilder.NAME,\n+           List.of(CoreValuesSourceType.NUMERIC, CoreValuesSourceType.DATE),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MDUyMQ=="}, "originalCommit": {"oid": "3fb75bb07044f499c77b2df974240505a67bf7c8"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3846, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}