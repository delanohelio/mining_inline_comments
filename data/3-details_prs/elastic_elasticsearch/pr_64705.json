{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NzI1NTg3", "number": 64705, "title": "Use MapperTestCase for cartesian mappers tests", "bodyText": "This commit changes the cartesian mapper tests (point and shape fields) so that they use MapperTestCase. In addition the tests are moved out of InternalclusterTest as they do not need to spin up a cluster any more.", "createdAt": "2020-11-06T12:53:38Z", "url": "https://github.com/elastic/elasticsearch/pull/64705", "merged": true, "mergeCommit": {"oid": "038fc354abe932c3fc7615beb4e3b991f1219533"}, "closed": true, "closedAt": "2020-11-06T15:20:26Z", "author": {"login": "iverase"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ2a3zAH2gAyNTE2NzI1NTg3OmIwYTdjN2Y3MWJkYzQxNTg2YjJlYjY0ZWU5YTAyZDg2NTMwMmE3YWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZ38ORAH2gAyNTE2NzI1NTg3OmYwMWU5MTlkZTM1OTY0YTM5MGQ3OGQ3YWMxYTQ5YzE2ODg4MjYyMDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b0a7c7f71bdc41586b2eb64ee9a02d865302a7aa", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/elastic/elasticsearch/commit/b0a7c7f71bdc41586b2eb64ee9a02d865302a7aa", "committedDate": "2020-11-06T12:49:34Z", "message": "Use MapperTestCase for cartesian mappers tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTI2Njgy", "url": "https://github.com/elastic/elasticsearch/pull/64705#pullrequestreview-525126682", "createdAt": "2020-11-06T12:58:36Z", "commit": {"oid": "b0a7c7f71bdc41586b2eb64ee9a02d865302a7aa"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMjo1ODozNlrOHutEHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMjo1ODozNlrOHutEHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODczNDg3OQ==", "bodyText": "You can also use the source method, which simplifies this a bit:\nSourceToParse sourceToParser = source(b -> {\n    b.startObject(FIELD_NAME).field(\"x\", 2000.1).field(\"y\", 305.6).endObject();\n});", "url": "https://github.com/elastic/elasticsearch/pull/64705#discussion_r518734879", "createdAt": "2020-11-06T12:58:36Z", "author": {"login": "romseygeek"}, "path": "x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldMapperTests.java", "diffHunk": "@@ -0,0 +1,279 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.spatial.index.mapper;\n+\n+import org.apache.lucene.util.BytesRef;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.index.mapper.DocumentMapper;\n+import org.elasticsearch.index.mapper.Mapper;\n+import org.elasticsearch.index.mapper.ParsedDocument;\n+import org.elasticsearch.index.mapper.SourceToParse;\n+import org.elasticsearch.xpack.spatial.common.CartesianPoint;\n+\n+import java.io.IOException;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.not;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+public class PointFieldMapperTests extends CartesianFieldMapperTests {\n+\n+    @Override\n+    protected String getFieldName() {\n+        return \"point\";\n+    }\n+\n+    @Override\n+    protected void registerParameters(ParameterChecker checker) throws IOException {\n+        checker.registerConflictCheck(\"doc_values\", b -> b.field(\"doc_values\", false));\n+        checker.registerConflictCheck(\"index\", b -> b.field(\"index\", false));\n+        checker.registerUpdateCheck(b -> b.field(\"ignore_malformed\", true), m -> {\n+            PointFieldMapper gpfm = (PointFieldMapper) m;\n+            assertTrue(gpfm.ignoreMalformed());\n+        });\n+        checker.registerUpdateCheck(b -> b.field(\"ignore_z_value\", false), m -> {\n+            PointFieldMapper gpfm = (PointFieldMapper) m;\n+            assertFalse(gpfm.ignoreZValue());\n+        });\n+    }\n+\n+    public void testValuesStored() throws Exception {\n+        DocumentMapper mapper = createDocumentMapper(fieldMapping(b -> {\n+            b.field(\"type\", \"point\");\n+            b.field(\"store\", true);\n+        }));\n+\n+        SourceToParse sourceToParse = new SourceToParse(\"test\", \"1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0a7c7f71bdc41586b2eb64ee9a02d865302a7aa"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d68358741cfe87ac3e8f5403de36bbad1abc70ed", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/elastic/elasticsearch/commit/d68358741cfe87ac3e8f5403de36bbad1abc70ed", "committedDate": "2020-11-06T13:44:51Z", "message": "address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2d999cf9db857f3372b7046983300d14ecc4b3b", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/c2d999cf9db857f3372b7046983300d14ecc4b3b", "committedDate": "2020-11-06T14:05:40Z", "message": "Merge branch 'master' into cartesianMapperTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f01e919de35964a390d78d7ac1a49c1688826201", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/f01e919de35964a390d78d7ac1a49c1688826201", "committedDate": "2020-11-06T14:35:54Z", "message": "Merge branch 'master' into cartesianMapperTests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1212, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}