{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MTYxOTE1", "number": 63748, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDo1Mjo1NVrOEuCNmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyNTowN1rOEuir3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzA2MjAxOnYy", "diffSide": "RIGHT", "path": "docs/reference/eql/eql-search-api.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDo1Mjo1NVrOHiL3fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODo0MzowOVrOHiVVuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYwODA2MQ==", "bodyText": "@astefan Let me know if I missed anything here. I'm not sure there is much value in users changing this arg as there will be an error either way.", "url": "https://github.com/elastic/elasticsearch/pull/63748#discussion_r505608061", "createdAt": "2020-10-15T14:52:55Z", "author": {"login": "jrodewig"}, "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -56,9 +56,13 @@ To search all data streams and indices in a cluster, use\n [[eql-search-api-query-params]]\n ==== {api-query-parms-title}\n \n-include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n-+\n-Defaults to `false`.\n+`allow_no_indices`::\n+(Optional, boolean)\n+If `false`, the request returns a `mapping_exception` error when a wildcard\n+expression, <<indices-aliases,index alias>>, or `_all` value targets only\n+missing or closed indices. If `true`, the request returns a\n+`verification_exception` error when targeting only missing or closed indices.\n+Defaults to `true`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2c251be85037ce2871693b5f3c42b43b7b0abd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzNDI4Mw==", "bodyText": "It is correct what you have here, but incomplete. The situation is a bit more complicated and it matters if the cluster is secured or not. With Security enabled and allow_no_indices=false for a inexistent*,existent search there is a index_not_found_exception and this one comes from Security itself if I'm not mistaken.\nWhat we have in eql atm is a variation of allow_no_indices behavior in ES itself. We do obey the default allow_no_indices behavior BUT in case the entire pattern doesn't have any index, no matter the value of allow_no_indices, EQL complains. Elasticsearch, on the other hand, has scenarios where it returns an empty response whereas we return a verification_exception.", "url": "https://github.com/elastic/elasticsearch/pull/63748#discussion_r505634283", "createdAt": "2020-10-15T15:25:23Z", "author": {"login": "astefan"}, "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -56,9 +56,13 @@ To search all data streams and indices in a cluster, use\n [[eql-search-api-query-params]]\n ==== {api-query-parms-title}\n \n-include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n-+\n-Defaults to `false`.\n+`allow_no_indices`::\n+(Optional, boolean)\n+If `false`, the request returns a `mapping_exception` error when a wildcard\n+expression, <<indices-aliases,index alias>>, or `_all` value targets only\n+missing or closed indices. If `true`, the request returns a\n+`verification_exception` error when targeting only missing or closed indices.\n+Defaults to `true`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYwODA2MQ=="}, "originalCommit": {"oid": "3a2c251be85037ce2871693b5f3c42b43b7b0abd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2MzI1OQ==", "bodyText": "Thanks for the clarification @astefan. After doing some testing, I'm not sure that having security enabled is a big differentiator. I also don't think I need to call out the individual exception names. Instead, I focused on scenarios that would generate an error vs. those that would not.", "url": "https://github.com/elastic/elasticsearch/pull/63748#discussion_r505763259", "createdAt": "2020-10-15T18:43:09Z", "author": {"login": "jrodewig"}, "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -56,9 +56,13 @@ To search all data streams and indices in a cluster, use\n [[eql-search-api-query-params]]\n ==== {api-query-parms-title}\n \n-include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n-+\n-Defaults to `false`.\n+`allow_no_indices`::\n+(Optional, boolean)\n+If `false`, the request returns a `mapping_exception` error when a wildcard\n+expression, <<indices-aliases,index alias>>, or `_all` value targets only\n+missing or closed indices. If `true`, the request returns a\n+`verification_exception` error when targeting only missing or closed indices.\n+Defaults to `true`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYwODA2MQ=="}, "originalCommit": {"oid": "3a2c251be85037ce2871693b5f3c42b43b7b0abd"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjMzMDYyOnYy", "diffSide": "RIGHT", "path": "docs/reference/eql/eql-search-api.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoxNDo0N1rOHjApCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyMzoyMFrOHjBEiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3MjcxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If `false`, any wildcard expression, <<indices-aliases,index alias>>, or `_all`\n          \n          \n            \n            value that targets only missing or closed indices returns an error. This applies\n          \n          \n            \n            even if the request targets other open indices. For example, if an index starts\n          \n          \n            \n            with `foo` but no index starts with `bar`, a request targeting `foo*,bar*`\n          \n          \n            \n            returns an error.\n          \n          \n            \n            If `false`, requests return an error if any wildcard expression, <<indices-aliases,index alias>>, or `_all`\n          \n          \n            \n            value targets only missing or closed indices. This behavior applies\n          \n          \n            \n            even if the request targets other open indices. For example, a request\n          \n          \n            \n            targeting `foo*,bar*` returns an error if any index starts with `foo`, but no\n          \n          \n            \n            index starts with `bar`.", "url": "https://github.com/elastic/elasticsearch/pull/63748#discussion_r506472713", "createdAt": "2020-10-16T14:14:47Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -56,9 +56,26 @@ To search all data streams and indices in a cluster, use\n [[eql-search-api-query-params]]\n ==== {api-query-parms-title}\n \n-include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n+`allow_no_indices`::\n+(Optional, boolean)\n++\n+NOTE: This parameter's behavior differs from the `allow_no_indices` parameter\n+used in other <<multi-index,multi-target APIs>>.\n++\n+If `false`, any wildcard expression, <<indices-aliases,index alias>>, or `_all`\n+value that targets only missing or closed indices returns an error. This applies\n+even if the request targets other open indices. For example, if an index starts\n+with `foo` but no index starts with `bar`, a request targeting `foo*,bar*`\n+returns an error.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02e2ab17db0d3bf31a2363b1db420fb2f323902"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3OTc1NQ==", "bodyText": "I moved \"requests return an error\" to the beginning of the first sentence, which I think reads easier. \"You'll get an error if X, Y, or Z\" feels more natural than \"If X, Y, or Z, you'll get an error.\" Apologies for such subjective logic, but I kept stumbling on that first sentence.", "url": "https://github.com/elastic/elasticsearch/pull/63748#discussion_r506479755", "createdAt": "2020-10-16T14:23:20Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -56,9 +56,26 @@ To search all data streams and indices in a cluster, use\n [[eql-search-api-query-params]]\n ==== {api-query-parms-title}\n \n-include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n+`allow_no_indices`::\n+(Optional, boolean)\n++\n+NOTE: This parameter's behavior differs from the `allow_no_indices` parameter\n+used in other <<multi-index,multi-target APIs>>.\n++\n+If `false`, any wildcard expression, <<indices-aliases,index alias>>, or `_all`\n+value that targets only missing or closed indices returns an error. This applies\n+even if the request targets other open indices. For example, if an index starts\n+with `foo` but no index starts with `bar`, a request targeting `foo*,bar*`\n+returns an error.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3MjcxMw=="}, "originalCommit": {"oid": "b02e2ab17db0d3bf31a2363b1db420fb2f323902"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjM0NjI1OnYy", "diffSide": "RIGHT", "path": "docs/reference/eql/eql-search-api.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoxNzo1MVrOHjAy8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyMDowNFrOHjA5_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3NTI0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If `true`, only requests that exclusively target missing or closed indices\n          \n          \n            \n            return an error. If the request targets any open index, it does not return an\n          \n          \n            \n            error. For example, if an index starts with `foo` but no index starts with\n          \n          \n            \n            `bar`, a request targeting `foo*,bar*` does not return an error. However, a\n          \n          \n            \n            request that targets only `bar*` still returns an error.\n          \n          \n            \n            +\n          \n          \n            \n            If `true`, requests that exclusively target missing or closed indices\n          \n          \n            \n            return an error, unless the request targets an open index.\n          \n          \n            \n            For example, a request targeting `foo*,bar*` does not return an error\n          \n          \n            \n            if any index starts with `foo`, but no index starts with\n          \n          \n            \n            `bar`. However, a request that targets only `bar*` still returns an error.\n          \n          \n            \n            +", "url": "https://github.com/elastic/elasticsearch/pull/63748#discussion_r506475248", "createdAt": "2020-10-16T14:17:51Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -56,9 +56,26 @@ To search all data streams and indices in a cluster, use\n [[eql-search-api-query-params]]\n ==== {api-query-parms-title}\n \n-include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n+`allow_no_indices`::\n+(Optional, boolean)\n++\n+NOTE: This parameter's behavior differs from the `allow_no_indices` parameter\n+used in other <<multi-index,multi-target APIs>>.\n++\n+If `false`, any wildcard expression, <<indices-aliases,index alias>>, or `_all`\n+value that targets only missing or closed indices returns an error. This applies\n+even if the request targets other open indices. For example, if an index starts\n+with `foo` but no index starts with `bar`, a request targeting `foo*,bar*`\n+returns an error.\n +\n-Defaults to `false`.\n+If `true`, only requests that exclusively target missing or closed indices\n+return an error. If the request targets any open index, it does not return an\n+error. For example, if an index starts with `foo` but no index starts with\n+`bar`, a request targeting `foo*,bar*` does not return an error. However, a\n+request that targets only `bar*` still returns an error.\n++", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02e2ab17db0d3bf31a2363b1db420fb2f323902"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3NzA1NQ==", "bodyText": "I think that combining the second sentence into the first helps to highlight the conditional statement.", "url": "https://github.com/elastic/elasticsearch/pull/63748#discussion_r506477055", "createdAt": "2020-10-16T14:20:04Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -56,9 +56,26 @@ To search all data streams and indices in a cluster, use\n [[eql-search-api-query-params]]\n ==== {api-query-parms-title}\n \n-include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n+`allow_no_indices`::\n+(Optional, boolean)\n++\n+NOTE: This parameter's behavior differs from the `allow_no_indices` parameter\n+used in other <<multi-index,multi-target APIs>>.\n++\n+If `false`, any wildcard expression, <<indices-aliases,index alias>>, or `_all`\n+value that targets only missing or closed indices returns an error. This applies\n+even if the request targets other open indices. For example, if an index starts\n+with `foo` but no index starts with `bar`, a request targeting `foo*,bar*`\n+returns an error.\n +\n-Defaults to `false`.\n+If `true`, only requests that exclusively target missing or closed indices\n+return an error. If the request targets any open index, it does not return an\n+error. For example, if an index starts with `foo` but no index starts with\n+`bar`, a request targeting `foo*,bar*` does not return an error. However, a\n+request that targets only `bar*` still returns an error.\n++", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3NTI0OA=="}, "originalCommit": {"oid": "b02e2ab17db0d3bf31a2363b1db420fb2f323902"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjM4MjM5OnYy", "diffSide": "RIGHT", "path": "docs/reference/rest-api/common-parms.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyNTowN1rOHjBKQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyNjoxN1rOHjBOlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ4MTIxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If `false`, any wildcard expression, <<indices-aliases,index alias>>, or `_all`\n          \n          \n            \n            value that targets only missing or closed indices returns an error. This applies\n          \n          \n            \n            even if the request targets other open indices. For example, if an index starts\n          \n          \n            \n            with `foo` but no index starts with `bar`, a request targeting `foo*,bar*`\n          \n          \n            \n            returns an error.\n          \n          \n            \n            If `false`, requests return an error if any wildcard expression, <<indices-aliases,index alias>>, or `_all`\n          \n          \n            \n            value targets only missing or closed indices. This behavior applies\n          \n          \n            \n            even if the request targets other open indices. For example, a request\n          \n          \n            \n            targeting `foo*,bar*` returns an error if any index starts with `foo`, but no\n          \n          \n            \n            index starts with `bar`.", "url": "https://github.com/elastic/elasticsearch/pull/63748#discussion_r506481216", "createdAt": "2020-10-16T14:25:07Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/rest-api/common-parms.asciidoc", "diffHunk": "@@ -38,9 +38,12 @@ end::target-index-aliases[]\n \n tag::allow-no-indices[]\n `allow_no_indices`::\n-(Optional, boolean) If `false`, the request returns an error when a\n-wildcard expression, <<indices-aliases,index alias>>, or `_all` value targets\n-only missing or closed indices.\n+(Optional, boolean)\n+If `false`, any wildcard expression, <<indices-aliases,index alias>>, or `_all`\n+value that targets only missing or closed indices returns an error. This applies\n+even if the request targets other open indices. For example, if an index starts\n+with `foo` but no index starts with `bar`, a request targeting `foo*,bar*`\n+returns an error.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02e2ab17db0d3bf31a2363b1db420fb2f323902"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ4MjMyNw==", "bodyText": "\u261d\ufe0f same suggested edits as in the previous file.", "url": "https://github.com/elastic/elasticsearch/pull/63748#discussion_r506482327", "createdAt": "2020-10-16T14:26:17Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/rest-api/common-parms.asciidoc", "diffHunk": "@@ -38,9 +38,12 @@ end::target-index-aliases[]\n \n tag::allow-no-indices[]\n `allow_no_indices`::\n-(Optional, boolean) If `false`, the request returns an error when a\n-wildcard expression, <<indices-aliases,index alias>>, or `_all` value targets\n-only missing or closed indices.\n+(Optional, boolean)\n+If `false`, any wildcard expression, <<indices-aliases,index alias>>, or `_all`\n+value that targets only missing or closed indices returns an error. This applies\n+even if the request targets other open indices. For example, if an index starts\n+with `foo` but no index starts with `bar`, a request targeting `foo*,bar*`\n+returns an error.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ4MTIxNg=="}, "originalCommit": {"oid": "b02e2ab17db0d3bf31a2363b1db420fb2f323902"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2900, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}