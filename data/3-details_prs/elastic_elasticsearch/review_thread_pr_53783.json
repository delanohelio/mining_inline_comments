{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwODY4Mjc4", "number": 53783, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDoxOToyMlrODp4tSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMDoyNToyMVrOD4pMzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjQ3MzA3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlInitializationService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDoxOToyMlrOF5VmnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODoxMTowMVrOF9eMbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NzEwMQ==", "bodyText": "This still leaves open the following bug (unsure how to fix it really).\n\nNode running the job is updated\nJob gets reallocated to a new node\nJob writes annotation for a model snapshot\nThe master node is still Old, consequently never crated the annotations index\nAnnotation persistence auto-created the index and now the UI fails to read from the index.\n\nIt seems to me that we need to verify if the index exists already and create it if necessary when we write annotations.", "url": "https://github.com/elastic/elasticsearch/pull/53783#discussion_r395667101", "createdAt": "2020-03-20T14:19:22Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlInitializationService.java", "diffHunk": "@@ -66,7 +66,7 @@ public void clusterChanged(ClusterChangedEvent event) {\n         // The atomic flag prevents multiple simultaneous attempts to create the\n         // index if there is a flurry of cluster state updates in quick succession\n         if (event.localNodeMaster() && isIndexCreationInProgress.compareAndSet(false, true)) {\n-            AnnotationIndex.createAnnotationsIndexIfNecessary(settings, client, event.state(), ActionListener.wrap(\n+            AnnotationIndex.createAnnotationsIndexIfNecessary(client, event.state(), ActionListener.wrap(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9fa5d7172eaac4ed71caee8c9c21f8037aa18e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM4OTgyNA==", "bodyText": "I think that scenario was a problem in 6.7 and 6.8 as there were 6.x indices that didn't have the annotations index - it probably explains a few bug reports we had when the annotations index was not available as expected.  But now any rolling upgrades must be starting from 6.8 at the earliest, so the old version will have the annotations index already.", "url": "https://github.com/elastic/elasticsearch/pull/53783#discussion_r399389824", "createdAt": "2020-03-27T16:29:15Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlInitializationService.java", "diffHunk": "@@ -66,7 +66,7 @@ public void clusterChanged(ClusterChangedEvent event) {\n         // The atomic flag prevents multiple simultaneous attempts to create the\n         // index if there is a flurry of cluster state updates in quick succession\n         if (event.localNodeMaster() && isIndexCreationInProgress.compareAndSet(false, true)) {\n-            AnnotationIndex.createAnnotationsIndexIfNecessary(settings, client, event.state(), ActionListener.wrap(\n+            AnnotationIndex.createAnnotationsIndexIfNecessary(client, event.state(), ActionListener.wrap(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NzEwMQ=="}, "originalCommit": {"oid": "ef9fa5d7172eaac4ed71caee8c9c21f8037aa18e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwMzg3Mw==", "bodyText": "OK, my concern is that this will occur again whenever we update the mapping of the annotation index.\nWe can sort of 'boot' that for now I suppose. But we should definitely make sure that whomever updates the mapping of the annotations index knows that they need make this sort of change.", "url": "https://github.com/elastic/elasticsearch/pull/53783#discussion_r399403873", "createdAt": "2020-03-27T16:50:23Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlInitializationService.java", "diffHunk": "@@ -66,7 +66,7 @@ public void clusterChanged(ClusterChangedEvent event) {\n         // The atomic flag prevents multiple simultaneous attempts to create the\n         // index if there is a flurry of cluster state updates in quick succession\n         if (event.localNodeMaster() && isIndexCreationInProgress.compareAndSet(false, true)) {\n-            AnnotationIndex.createAnnotationsIndexIfNecessary(settings, client, event.state(), ActionListener.wrap(\n+            AnnotationIndex.createAnnotationsIndexIfNecessary(client, event.state(), ActionListener.wrap(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NzEwMQ=="}, "originalCommit": {"oid": "ef9fa5d7172eaac4ed71caee8c9c21f8037aa18e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwMjE1OQ==", "bodyText": "OK, my concern is that this will occur again whenever we update the mapping of the annotation index.\n\nMy PR does not update mappings of annotations index.\nThe new annotations I'm adding fit the existing mappings so there was no point in changing them.", "url": "https://github.com/elastic/elasticsearch/pull/53783#discussion_r400002159", "createdAt": "2020-03-30T08:11:01Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlInitializationService.java", "diffHunk": "@@ -66,7 +66,7 @@ public void clusterChanged(ClusterChangedEvent event) {\n         // The atomic flag prevents multiple simultaneous attempts to create the\n         // index if there is a flurry of cluster state updates in quick succession\n         if (event.localNodeMaster() && isIndexCreationInProgress.compareAndSet(false, true)) {\n-            AnnotationIndex.createAnnotationsIndexIfNecessary(settings, client, event.state(), ActionListener.wrap(\n+            AnnotationIndex.createAnnotationsIndexIfNecessary(client, event.state(), ActionListener.wrap(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NzEwMQ=="}, "originalCommit": {"oid": "ef9fa5d7172eaac4ed71caee8c9c21f8037aa18e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjA4MTk5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/output/AutodetectResultProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjoyMzo1NFrOF84mrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo0NDo0N1rOF9dTQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM4NjI4Nw==", "bodyText": "I think it could be confusing if the annotation spans a time range.  Is it possible to set both the start and end time to be the model snapshot's timestamp?  Or does it break the UI if the start and end timestamps are identical?", "url": "https://github.com/elastic/elasticsearch/pull/53783#discussion_r399386287", "createdAt": "2020-03-27T16:23:54Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/output/AutodetectResultProcessor.java", "diffHunk": "@@ -310,6 +325,21 @@ void processResult(AutodetectResult result) {\n         }\n     }\n \n+    private Annotation createModelSnapshotAnnotation(ModelSnapshot modelSnapshot) {\n+        assert modelSnapshot != null;\n+        Date currentTime = new Date(clock.millis());\n+        return new Annotation(\n+            Messages.JOB_AUDIT_SNAPSHOT_STORED,\n+            currentTime,\n+            XPackUser.NAME,\n+            modelSnapshot.getTimestamp(),\n+            modelSnapshot.getLatestRecordTimeStamp(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9615ca698dda9f3933cb3a05d3211378afbcf45"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NzUyMA==", "bodyText": "I think it could be confusing if the annotation spans a time range. Is it possible to set both the start and end time to be the model snapshot's timestamp?\n\nYes, done.\n\nOr does it break the UI if the start and end timestamps are identical?\n\nUI works fine, I've attached a screenshot which shows how does the annotation look like in single metric viewer.", "url": "https://github.com/elastic/elasticsearch/pull/53783#discussion_r399987520", "createdAt": "2020-03-30T07:44:47Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/output/AutodetectResultProcessor.java", "diffHunk": "@@ -310,6 +325,21 @@ void processResult(AutodetectResult result) {\n         }\n     }\n \n+    private Annotation createModelSnapshotAnnotation(ModelSnapshot modelSnapshot) {\n+        assert modelSnapshot != null;\n+        Date currentTime = new Date(clock.millis());\n+        return new Annotation(\n+            Messages.JOB_AUDIT_SNAPSHOT_STORED,\n+            currentTime,\n+            XPackUser.NAME,\n+            modelSnapshot.getTimestamp(),\n+            modelSnapshot.getLatestRecordTimeStamp(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM4NjI4Nw=="}, "originalCommit": {"oid": "c9615ca698dda9f3933cb3a05d3211378afbcf45"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjA5MTI1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/output/AutodetectResultProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjoyNjoxNVrOF84slw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo0NDo1M1rOF9dTeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM4Nzc5OQ==", "bodyText": "Can we also include the model snapshot ID, so that if somebody wants to revert to the snapshot they can get the piece of information they need in order to do this from the annotation?", "url": "https://github.com/elastic/elasticsearch/pull/53783#discussion_r399387799", "createdAt": "2020-03-27T16:26:15Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/output/AutodetectResultProcessor.java", "diffHunk": "@@ -310,6 +325,21 @@ void processResult(AutodetectResult result) {\n         }\n     }\n \n+    private Annotation createModelSnapshotAnnotation(ModelSnapshot modelSnapshot) {\n+        assert modelSnapshot != null;\n+        Date currentTime = new Date(clock.millis());\n+        return new Annotation(\n+            Messages.JOB_AUDIT_SNAPSHOT_STORED,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9615ca698dda9f3933cb3a05d3211378afbcf45"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NzU3Ng==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/53783#discussion_r399987576", "createdAt": "2020-03-30T07:44:53Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/output/AutodetectResultProcessor.java", "diffHunk": "@@ -310,6 +325,21 @@ void processResult(AutodetectResult result) {\n         }\n     }\n \n+    private Annotation createModelSnapshotAnnotation(ModelSnapshot modelSnapshot) {\n+        assert modelSnapshot != null;\n+        Date currentTime = new Date(clock.millis());\n+        return new Annotation(\n+            Messages.JOB_AUDIT_SNAPSHOT_STORED,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM4Nzc5OQ=="}, "originalCommit": {"oid": "c9615ca698dda9f3933cb3a05d3211378afbcf45"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzIxODcxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/job/process/autodetect/output/AutodetectResultProcessorTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMDoyNToyMVrOGPiKfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNjo1NzozOVrOGP0f7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk0MTU2NQ==", "bodyText": "I wonder if these should have been modelSnapshot.getLatestResultTimeStamp()?\nSee #56076 (comment) for more details on this.", "url": "https://github.com/elastic/elasticsearch/pull/53783#discussion_r418941565", "createdAt": "2020-05-02T10:25:21Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/job/process/autodetect/output/AutodetectResultProcessorTests.java", "diffHunk": "@@ -367,6 +380,23 @@ public void testProcessResult_modelSnapshot() {\n         verify(persister).bulkPersisterBuilder(eq(JOB_ID), any());\n         verify(persister).persistModelSnapshot(eq(modelSnapshot), eq(WriteRequest.RefreshPolicy.IMMEDIATE), any());\n \n+        ArgumentCaptor<Annotation> annotationCaptor = ArgumentCaptor.forClass(Annotation.class);\n+        verify(annotationPersister).persistAnnotation(\n+            eq(ModelSnapshot.annotationDocumentId(modelSnapshot)), annotationCaptor.capture(), any());\n+        Annotation annotation = annotationCaptor.getValue();\n+        Annotation expectedAnnotation =\n+            new Annotation(\n+                \"Job model snapshot with id [a_snapshot_id] stored\",\n+                Date.from(CURRENT_TIME),\n+                XPackUser.NAME,\n+                modelSnapshot.getTimestamp(),\n+                modelSnapshot.getTimestamp(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70fbc6e73994d1fdd911b60da31fe25024b01658"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI0MTk2NA==", "bodyText": "I've just raised #56093 to address that.", "url": "https://github.com/elastic/elasticsearch/pull/53783#discussion_r419241964", "createdAt": "2020-05-04T06:57:39Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/job/process/autodetect/output/AutodetectResultProcessorTests.java", "diffHunk": "@@ -367,6 +380,23 @@ public void testProcessResult_modelSnapshot() {\n         verify(persister).bulkPersisterBuilder(eq(JOB_ID), any());\n         verify(persister).persistModelSnapshot(eq(modelSnapshot), eq(WriteRequest.RefreshPolicy.IMMEDIATE), any());\n \n+        ArgumentCaptor<Annotation> annotationCaptor = ArgumentCaptor.forClass(Annotation.class);\n+        verify(annotationPersister).persistAnnotation(\n+            eq(ModelSnapshot.annotationDocumentId(modelSnapshot)), annotationCaptor.capture(), any());\n+        Annotation annotation = annotationCaptor.getValue();\n+        Annotation expectedAnnotation =\n+            new Annotation(\n+                \"Job model snapshot with id [a_snapshot_id] stored\",\n+                Date.from(CURRENT_TIME),\n+                XPackUser.NAME,\n+                modelSnapshot.getTimestamp(),\n+                modelSnapshot.getTimestamp(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk0MTU2NQ=="}, "originalCommit": {"oid": "70fbc6e73994d1fdd911b60da31fe25024b01658"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4351, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}