{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTIxNDE2", "number": 56393, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzowNDo0N1rOD88xCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzoxMzozMlrOD887hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjM2NzQ0OnYy", "diffSide": "RIGHT", "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpRequestCreator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzowNDo0N1rOGWM95A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOToxODo1OFrOGWRDYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkzNDMwOA==", "bodyText": "We can make this @Sharable ?", "url": "https://github.com/elastic/elasticsearch/pull/56393#discussion_r425934308", "createdAt": "2020-05-15T17:04:47Z", "author": {"login": "original-brownbear"}, "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpRequestCreator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.http.netty4;\n+\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.handler.codec.MessageToMessageDecoder;\n+import io.netty.handler.codec.http.FullHttpRequest;\n+import org.elasticsearch.ExceptionsHelper;\n+\n+import java.util.List;\n+\n+class Netty4HttpRequestCreator extends MessageToMessageDecoder<FullHttpRequest> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b6ed06ef64fd4fc638f8e4656bd9ed829bb82ad"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAwMTI1MQ==", "bodyText": "I made this change for Netty module. The path is more complicated on the Nio side and I think this PR is kind of an intermediate step. So I want to hold off for now on Nio side.", "url": "https://github.com/elastic/elasticsearch/pull/56393#discussion_r426001251", "createdAt": "2020-05-15T19:18:58Z", "author": {"login": "tbrooks8"}, "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpRequestCreator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.http.netty4;\n+\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.handler.codec.MessageToMessageDecoder;\n+import io.netty.handler.codec.http.FullHttpRequest;\n+import org.elasticsearch.ExceptionsHelper;\n+\n+import java.util.List;\n+\n+class Netty4HttpRequestCreator extends MessageToMessageDecoder<FullHttpRequest> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkzNDMwOA=="}, "originalCommit": {"oid": "6b6ed06ef64fd4fc638f8e4656bd9ed829bb82ad"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjM3NzM1OnYy", "diffSide": "RIGHT", "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzowNzo1NVrOGWNEJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzowNzo1NVrOGWNEJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkzNTkxMA==", "bodyText": "We can use a constant for this since it's sharable instead of creating a new one for every channel?", "url": "https://github.com/elastic/elasticsearch/pull/56393#discussion_r425935910", "createdAt": "2020-05-15T17:07:55Z", "author": {"login": "original-brownbear"}, "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java", "diffHunk": "@@ -311,6 +311,7 @@ protected void initChannel(Channel ch) throws Exception {\n             if (handlingSettings.isCompression()) {\n                 ch.pipeline().addLast(\"encoder_compress\", new HttpContentCompressor(handlingSettings.getCompressionLevel()));\n             }\n+            ch.pipeline().addLast(\"request_creator\", new Netty4HttpRequestCreator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b6ed06ef64fd4fc638f8e4656bd9ed829bb82ad"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjM5NDMwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/http/HttpRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzoxMzozMlrOGWNOxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzoxMzozMlrOGWNOxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkzODYyOQ==", "bodyText": "This method seems to only be used in tests. Just make getInboundException @Nullable and use that to keep things tidy?", "url": "https://github.com/elastic/elasticsearch/pull/56393#discussion_r425938629", "createdAt": "2020-05-15T17:13:32Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/http/HttpRequest.java", "diffHunk": "@@ -68,6 +68,10 @@\n      */\n     HttpResponse createResponse(RestStatus status, BytesReference content);\n \n+    boolean hasInboundException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b6ed06ef64fd4fc638f8e4656bd9ed829bb82ad"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 636, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}