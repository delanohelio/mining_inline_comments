{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNzQ4MzA2", "number": 58848, "title": "Data stream support for rank eval API", "bodyText": "The underlying transport actions for rank eval already supported data streams so no production code changes were required. The PR adds only a test to verify that rank eval works with data streams.\nRelates to #53100", "createdAt": "2020-07-01T14:44:21Z", "url": "https://github.com/elastic/elasticsearch/pull/58848", "merged": true, "mergeCommit": {"oid": "fd69b1091f7eb9c2afaceaa814614b2193db0afb"}, "closed": true, "closedAt": "2020-07-06T12:09:53Z", "author": {"login": "danhermann"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwrNvBAH2gAyNDQyNzQ4MzA2OjRiZjRmNTliMmZlZDg2ZjBhYjRjYTZlM2M4YTE4YzhlZmZkM2M1ODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw-mjIAFqTQ0MTY2MjQ4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4bf4f59b2fed86f0ab4ca6e3c8a18c8effd3c580", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/4bf4f59b2fed86f0ab4ca6e3c8a18c8effd3c580", "committedDate": "2020-07-01T14:35:22Z", "message": "Data stream support for rank eval API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77db055c86a1743e1373aa4a5c95cc6a8b90382f", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/77db055c86a1743e1373aa4a5c95cc6a8b90382f", "committedDate": "2020-07-01T15:06:49Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTYyNTAx", "url": "https://github.com/elastic/elasticsearch/pull/58848#pullrequestreview-440962501", "createdAt": "2020-07-01T15:11:47Z", "commit": {"oid": "77db055c86a1743e1373aa4a5c95cc6a8b90382f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNToxMTo0N1rOGrqKdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNToxMTo0N1rOGrqKdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQzMjc1OA==", "bodyText": "It's not clear to me how this can be changed so that the backing indices do not have to be specified.", "url": "https://github.com/elastic/elasticsearch/pull/58848#discussion_r448432758", "createdAt": "2020-07-01T15:11:47Z", "author": {"login": "danhermann"}, "path": "modules/rank-eval/src/test/resources/rest-api-spec/test/rank_eval/50_data_streams.yml", "diffHunk": "@@ -0,0 +1,100 @@\n+\"Verify rank eval with data streams\":\n+  - skip:\n+      version: \" - 7.99.99\"\n+      reason: \"change to 7.8.99 after backport\"\n+      features: allowed_warnings\n+\n+  - do:\n+      allowed_warnings:\n+        - \"index template [my-template] has index patterns [logs-*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [my-template] will take precedence during new index creation\"\n+      indices.put_index_template:\n+        name: my-template\n+        body:\n+          index_patterns: [logs-*]\n+          template:\n+            mappings:\n+              properties:\n+                '@timestamp':\n+                  type: date\n+          data_stream:\n+            timestamp_field: '@timestamp'\n+\n+  - do:\n+      indices.create_data_stream:\n+        name: logs-foobar\n+  - is_true: acknowledged\n+\n+  - do:\n+      index:\n+        index:   logs-foobar\n+        id:      doc1\n+        op_type: create\n+        body:    { \"text\": \"berlin\" }\n+\n+  - do:\n+      index:\n+        index:   logs-foobar\n+        id:      doc2\n+        op_type: create\n+        body:    { \"text\": \"amsterdam\" }\n+\n+  # rollover data stream to split documents across multiple backing indices\n+  - do:\n+      indices.rollover:\n+        alias: \"logs-foobar\"\n+\n+  - match: { old_index: .ds-logs-foobar-000001 }\n+  - match: { new_index: .ds-logs-foobar-000002 }\n+  - match: { rolled_over: true }\n+  - match: { dry_run: false }\n+\n+  - do:\n+      index:\n+        index:   logs-foobar\n+        id:      doc3\n+        op_type: create\n+        body:    { \"text\": \"amsterdam\" }\n+\n+  - do:\n+      index:\n+        index:   logs-foobar\n+        id:      doc4\n+        op_type: create\n+        body:    { \"text\": \"something about amsterdam and berlin\" }\n+\n+  - do:\n+      indices.refresh:\n+        index: logs-foobar\n+\n+  - do:\n+      rank_eval:\n+        index: logs-foobar\n+        search_type: query_then_fetch\n+        body: {\n+          \"requests\" : [\n+          {\n+            \"id\": \"amsterdam_query\",\n+            \"request\": { \"query\": { \"match\" : {\"text\" : \"amsterdam\" }}},\n+            \"ratings\": [\n+            {\"_index\": \".ds-logs-foobar-000001\", \"_id\": \"doc1\", \"rating\": 0},\n+            {\"_index\": \".ds-logs-foobar-000001\", \"_id\": \"doc2\", \"rating\": 1},\n+            {\"_index\": \".ds-logs-foobar-000002\", \"_id\": \"doc3\", \"rating\": 1}]\n+          },\n+          {\n+            \"id\" : \"berlin_query\",\n+            \"request\": { \"query\": { \"match\" : { \"text\" : \"berlin\" } }, \"size\" : 10 },\n+            \"ratings\": [{\"_index\": \".ds-logs-foobar-000001\", \"_id\": \"doc1\", \"rating\": 1}]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77db055c86a1743e1373aa4a5c95cc6a8b90382f"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjYyNDg3", "url": "https://github.com/elastic/elasticsearch/pull/58848#pullrequestreview-441662487", "createdAt": "2020-07-02T13:10:40Z", "commit": {"oid": "77db055c86a1743e1373aa4a5c95cc6a8b90382f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2484, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}