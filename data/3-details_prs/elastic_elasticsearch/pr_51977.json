{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNzMxNDg5", "number": 51977, "title": "Remove Redundant Loading of RepositoryData during Restore", "bodyText": "We can just put the IndexId instead of just the index name into the recovery soruce and\nsave one load of RepositoryData on each shard restore that way.", "createdAt": "2020-02-06T06:30:00Z", "url": "https://github.com/elastic/elasticsearch/pull/51977", "merged": true, "mergeCommit": {"oid": "e79e6d9c1d0626b8ab05379eb22393d797023c86"}, "closed": true, "closedAt": "2020-02-07T14:24:54Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBkuVgAH2gAyMzcxNzMxNDg5OmM5ZjBjYzJhNjhiNzQzZjM3M2RhNmQwMjE0ZDVkNDM1ZmJkZmY2YTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcB_k_pAFqTM1NTE2MzYxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c9f0cc2a68b743f373da6d0214d5d435fbdff6a6", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/c9f0cc2a68b743f373da6d0214d5d435fbdff6a6", "committedDate": "2020-02-06T06:27:12Z", "message": "Remove Redundant Loading of RepositoryData during Restore\n\nWe can just put the `IndexId` instead of just the index name into the recovery soruce and\nsave one load of `RepositoryData` on each shard restore that way."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0081c55f91f89b8bf815cefe75e3310806eaca3", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/d0081c55f91f89b8bf815cefe75e3310806eaca3", "committedDate": "2020-02-06T06:33:36Z", "message": "nicer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "946ce257f95bc8d6592e0f1924a4c334675ab0fe", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/946ce257f95bc8d6592e0f1924a4c334675ab0fe", "committedDate": "2020-02-06T08:13:52Z", "message": "safer bwc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14e71fb2a4b85841dd3b6944dc4736830ba56c2c", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/14e71fb2a4b85841dd3b6944dc4736830ba56c2c", "committedDate": "2020-02-06T08:14:06Z", "message": "Merge remote-tracking branch 'elastic/master' into cleaner-restore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6a6f7a4a585eba9e75f1a8aaee78cb0131eb67b", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/f6a6f7a4a585eba9e75f1a8aaee78cb0131eb67b", "committedDate": "2020-02-06T08:16:28Z", "message": "shorter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NTg1MDM1", "url": "https://github.com/elastic/elasticsearch/pull/51977#pullrequestreview-354585035", "createdAt": "2020-02-06T16:21:11Z", "commit": {"oid": "f6a6f7a4a585eba9e75f1a8aaee78cb0131eb67b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjoyMToxMVrOFmhXGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjoyMToxMVrOFmhXGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkzNjc5Mw==", "bodyText": "can we avoid sending this field if indexId != null (i.e. in the non-bwc case)", "url": "https://github.com/elastic/elasticsearch/pull/51977#discussion_r375936793", "createdAt": "2020-02-06T16:21:11Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/cluster/routing/RecoverySource.java", "diffHunk": "@@ -252,6 +278,9 @@ protected void writeAdditionalFields(StreamOutput out) throws IOException {\n             snapshot.writeTo(out);\n             Version.writeVersion(version, out);\n             out.writeString(index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a6f7a4a585eba9e75f1a8aaee78cb0131eb67b"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NTg4MzYw", "url": "https://github.com/elastic/elasticsearch/pull/51977#pullrequestreview-354588360", "createdAt": "2020-02-06T16:25:11Z", "commit": {"oid": "f6a6f7a4a585eba9e75f1a8aaee78cb0131eb67b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjoyNToxMVrOFmhhpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjoyNToxMVrOFmhhpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkzOTQ5NA==", "bodyText": "the approach here does not allow us to later switch to just reading directly IndexId from stream after backport to 7.x.\nCan you change things so that you conditionally do in.readString(); or new IndexId(in)", "url": "https://github.com/elastic/elasticsearch/pull/51977#discussion_r375939494", "createdAt": "2020-02-06T16:25:11Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/cluster/routing/RecoverySource.java", "diffHunk": "@@ -214,20 +216,44 @@ public String toString() {\n         private final String restoreUUID;\n         private final Snapshot snapshot;\n         private final String index;\n+\n+        @Nullable\n+        private final IndexId indexId;\n         private final Version version;\n \n-        public SnapshotRecoverySource(String restoreUUID, Snapshot snapshot, Version version, String index) {\n+        public SnapshotRecoverySource(String restoreUUID, Snapshot snapshot, Version version, IndexId indexId) {\n             this.restoreUUID = restoreUUID;\n             this.snapshot = Objects.requireNonNull(snapshot);\n             this.version = Objects.requireNonNull(version);\n-            this.index = Objects.requireNonNull(index);\n+            this.indexId = Objects.requireNonNull(indexId);\n+            this.index = indexId.getName();\n         }\n \n         SnapshotRecoverySource(StreamInput in) throws IOException {\n             restoreUUID = in.readString();\n             snapshot = new Snapshot(in);\n             version = Version.readVersion(in);\n             index = in.readString();\n+            if (in.getVersion().onOrAfter(Version.V_8_0_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a6f7a4a585eba9e75f1a8aaee78cb0131eb67b"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6110c88e15794b2d1359ed231d757d34e3852aa", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/c6110c88e15794b2d1359ed231d757d34e3852aa", "committedDate": "2020-02-07T09:47:12Z", "message": "Merge remote-tracking branch 'elastic/master' into cleaner-restore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bf7a99c64fa8d2ff60583e049f28764b16de2c8", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/9bf7a99c64fa8d2ff60583e049f28764b16de2c8", "committedDate": "2020-02-07T10:47:37Z", "message": "CR: nicer serialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "274a7e5db0d611051b2b0f57c88f2e2cb9a94716", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/274a7e5db0d611051b2b0f57c88f2e2cb9a94716", "committedDate": "2020-02-07T10:57:36Z", "message": "shorter diff"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MDk3NzQ2", "url": "https://github.com/elastic/elasticsearch/pull/51977#pullrequestreview-355097746", "createdAt": "2020-02-07T11:33:58Z", "commit": {"oid": "274a7e5db0d611051b2b0f57c88f2e2cb9a94716"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMTozMzo1OFrOFm6Wnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMTozNToxN1rOFm6YYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0NjI3MQ==", "bodyText": "Maybe just final IndexId indexId = restoreSource.index();", "url": "https://github.com/elastic/elasticsearch/pull/51977#discussion_r376346271", "createdAt": "2020-02-07T11:33:58Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/index/shard/StoreRecovery.java", "diffHunk": "@@ -473,20 +475,33 @@ private void restore(IndexShard indexShard, Repository repository, SnapshotRecov\n             translogState.totalOperationsOnStart(0);\n             indexShard.prepareForIndexRecovery();\n             final ShardId snapshotShardId;\n-            final String indexName = restoreSource.index();\n-            if (!shardId.getIndexName().equals(indexName)) {\n-                snapshotShardId = new ShardId(indexName, IndexMetaData.INDEX_UUID_NA_VALUE, shardId.id());\n-            } else {\n+            final IndexId indexIdFromCS = restoreSource.index();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "274a7e5db0d611051b2b0f57c88f2e2cb9a94716"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0NjQzNg==", "bodyText": "typo buy", "url": "https://github.com/elastic/elasticsearch/pull/51977#discussion_r376346436", "createdAt": "2020-02-07T11:34:29Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/index/shard/StoreRecovery.java", "diffHunk": "@@ -473,20 +475,33 @@ private void restore(IndexShard indexShard, Repository repository, SnapshotRecov\n             translogState.totalOperationsOnStart(0);\n             indexShard.prepareForIndexRecovery();\n             final ShardId snapshotShardId;\n-            final String indexName = restoreSource.index();\n-            if (!shardId.getIndexName().equals(indexName)) {\n-                snapshotShardId = new ShardId(indexName, IndexMetaData.INDEX_UUID_NA_VALUE, shardId.id());\n-            } else {\n+            final IndexId indexIdFromCS = restoreSource.index();\n+            if (shardId.getIndexName().equals(indexIdFromCS.getName())) {\n                 snapshotShardId = shardId;\n+            } else {\n+                snapshotShardId = new ShardId(indexIdFromCS.getName(), IndexMetaData.INDEX_UUID_NA_VALUE, shardId.id());\n+            }\n+            // If the index UUID was not found in the recovery source we will have to load RepositoryData and resolve it buy index name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "274a7e5db0d611051b2b0f57c88f2e2cb9a94716"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0NjcyMQ==", "bodyText": "Maybe final boolean resolveIndexId = IndexMetaData.INDEX_UUID_NA_VALUE.equals(indexId.getId());", "url": "https://github.com/elastic/elasticsearch/pull/51977#discussion_r376346721", "createdAt": "2020-02-07T11:35:17Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/index/shard/StoreRecovery.java", "diffHunk": "@@ -473,20 +475,33 @@ private void restore(IndexShard indexShard, Repository repository, SnapshotRecov\n             translogState.totalOperationsOnStart(0);\n             indexShard.prepareForIndexRecovery();\n             final ShardId snapshotShardId;\n-            final String indexName = restoreSource.index();\n-            if (!shardId.getIndexName().equals(indexName)) {\n-                snapshotShardId = new ShardId(indexName, IndexMetaData.INDEX_UUID_NA_VALUE, shardId.id());\n-            } else {\n+            final IndexId indexIdFromCS = restoreSource.index();\n+            if (shardId.getIndexName().equals(indexIdFromCS.getName())) {\n                 snapshotShardId = shardId;\n+            } else {\n+                snapshotShardId = new ShardId(indexIdFromCS.getName(), IndexMetaData.INDEX_UUID_NA_VALUE, shardId.id());\n+            }\n+            // If the index UUID was not found in the recovery source we will have to load RepositoryData and resolve it buy index name\n+            final boolean indexUUIDUnavailable = indexIdFromCS.getId().equals(IndexMetaData.INDEX_UUID_NA_VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "274a7e5db0d611051b2b0f57c88f2e2cb9a94716"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11f84fefe579eceed336a3af696dc0e708bbf9a4", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/11f84fefe579eceed336a3af696dc0e708bbf9a4", "committedDate": "2020-02-07T11:49:51Z", "message": "nicer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MTIyNTQw", "url": "https://github.com/elastic/elasticsearch/pull/51977#pullrequestreview-355122540", "createdAt": "2020-02-07T12:26:30Z", "commit": {"oid": "11f84fefe579eceed336a3af696dc0e708bbf9a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MTYzNjE4", "url": "https://github.com/elastic/elasticsearch/pull/51977#pullrequestreview-355163618", "createdAt": "2020-02-07T13:44:27Z", "commit": {"oid": "11f84fefe579eceed336a3af696dc0e708bbf9a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2852, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}