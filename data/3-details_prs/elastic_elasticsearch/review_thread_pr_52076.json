{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNTY4MDk1", "number": 52076, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDoxNjoxOFrODeI4QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjoxNzo0NVrODfPeCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTI5MzQ1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDoxNjoxOFrOFnJDjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjo1ODoxMlrOFnt47w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NzE0OQ==", "bodyText": "I'd consider using assertTrue, we have long body here, it's hard to tell what we asserting here. The same applies to all instances below", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376587149", "createdAt": "2020-02-07T20:16:18Z", "author": {"login": "probakowski"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "diffHunk": "@@ -1120,26 +1120,26 @@ public void testRolloverStepRetriesUntilRolledOverIndexIsDeleted() throws Except\n         // {@link org.elasticsearch.xpack.core.ilm.ErrorStep} in order to retry the failing step. As {@link #assertBusy}\n         // increases the wait time between calls exponentially, we might miss the window where the policy is on\n         // {@link WaitForRolloverReadyStep} and the move to `attempt-rollover` request will not be successful.\n-        waitUntil(() -> {\n+        assertThat(waitUntil(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e46ae3519fad62717c1146b4386ec707337e66d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMzY0MQ==", "bodyText": "It could be changed to just assertBusy(() -> {...}, 30, TimeUnit.SECONDS) also and use assertions to signal success/failure", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376613641", "createdAt": "2020-02-07T21:22:46Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "diffHunk": "@@ -1120,26 +1120,26 @@ public void testRolloverStepRetriesUntilRolledOverIndexIsDeleted() throws Except\n         // {@link org.elasticsearch.xpack.core.ilm.ErrorStep} in order to retry the failing step. As {@link #assertBusy}\n         // increases the wait time between calls exponentially, we might miss the window where the policy is on\n         // {@link WaitForRolloverReadyStep} and the move to `attempt-rollover` request will not be successful.\n-        waitUntil(() -> {\n+        assertThat(waitUntil(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NzE0OQ=="}, "originalCommit": {"oid": "6e46ae3519fad62717c1146b4386ec707337e66d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4MzE0Nw==", "bodyText": "I've changed the assertThat(waitUntil(), is(true)) to assertTrue(waitUntil()) but the reason to use waitUntil as opposed to assertBusy is to avoid having this test flake. We are asserting that the failed step and the retry count are bound to particular values. The fact that we want to check the failed step is what we expect it to be means we have to catch ILM in the ERROR step, but with retryable steps ILM keeps moving back and forth between the failing step (on retry) and the ERROR step (when the step execution fails).\nassertBusy increases the wait time exponentially once it gets to 1 second, while waitUntil keeps it at 1 second. This means we're bound to catch ILM in the ERROR step using waitUntil (but with assertBusy we probe the ILM state only at seconds 1, 2, 4, 8 and 16)", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376983147", "createdAt": "2020-02-10T10:37:48Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "diffHunk": "@@ -1120,26 +1120,26 @@ public void testRolloverStepRetriesUntilRolledOverIndexIsDeleted() throws Except\n         // {@link org.elasticsearch.xpack.core.ilm.ErrorStep} in order to retry the failing step. As {@link #assertBusy}\n         // increases the wait time between calls exponentially, we might miss the window where the policy is on\n         // {@link WaitForRolloverReadyStep} and the move to `attempt-rollover` request will not be successful.\n-        waitUntil(() -> {\n+        assertThat(waitUntil(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NzE0OQ=="}, "originalCommit": {"oid": "6e46ae3519fad62717c1146b4386ec707337e66d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5MDYzOQ==", "bodyText": "Ahh okay, I see the difference between them now, in that case I agree that assertTrue would be better than assertThat in this case", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r377190639", "createdAt": "2020-02-10T16:58:12Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "diffHunk": "@@ -1120,26 +1120,26 @@ public void testRolloverStepRetriesUntilRolledOverIndexIsDeleted() throws Except\n         // {@link org.elasticsearch.xpack.core.ilm.ErrorStep} in order to retry the failing step. As {@link #assertBusy}\n         // increases the wait time between calls exponentially, we might miss the window where the policy is on\n         // {@link WaitForRolloverReadyStep} and the move to `attempt-rollover` request will not be successful.\n-        waitUntil(() -> {\n+        assertThat(waitUntil(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NzE0OQ=="}, "originalCommit": {"oid": "6e46ae3519fad62717c1146b4386ec707337e66d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTQ1ODU2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMToyMToxOFrOFnKpAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDoyMDo0MlrOFngrlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMzEyMQ==", "bodyText": "What was the reason for wrapping this in an ElasticsearchException type exception?", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376613121", "createdAt": "2020-02-07T21:21:18Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "diffHunk": "@@ -47,13 +47,17 @@ public ClusterState performAction(Index index, ClusterState clusterState) {\n \n         IndexMetaData.Builder indexMetadataBuilder = IndexMetaData.builder(indexMetaData);\n         if (shouldParseIndexName(indexMetaData.getSettings())) {\n-            long parsedOriginationDate = parseIndexNameAndExtractDate(index.getName());\n-            indexMetadataBuilder.settingsVersion(indexMetaData.getSettingsVersion() + 1)\n-                .settings(Settings.builder()\n-                    .put(indexMetaData.getSettings())\n-                    .put(LifecycleSettings.LIFECYCLE_ORIGINATION_DATE, parsedOriginationDate)\n-                    .build()\n-                );\n+            try {\n+                long parsedOriginationDate = parseIndexNameAndExtractDate(index.getName());\n+                indexMetadataBuilder.settingsVersion(indexMetaData.getSettingsVersion() + 1)\n+                    .settings(Settings.builder()\n+                        .put(indexMetaData.getSettings())\n+                        .put(LifecycleSettings.LIFECYCLE_ORIGINATION_DATE, parsedOriginationDate)\n+                        .build()\n+                    );\n+            } catch (Exception e) {\n+                throw new InitializePolicyException(e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e46ae3519fad62717c1146b4386ec707337e66d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk3NDIyOQ==", "bodyText": "I'm not entirely happy with using an exception for flow control but since we don't have any lifecycle state yet (as we're just initialising the policy) I used this exception to signal the current failing step is the \"init policy step\" when moving the policy into the ERROR step.\nAnother option would be to pass the current step key to IndexLifecycleTransition.moveClusterStateToErrorStep but this seemed more intrusive.", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376974229", "createdAt": "2020-02-10T10:20:42Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "diffHunk": "@@ -47,13 +47,17 @@ public ClusterState performAction(Index index, ClusterState clusterState) {\n \n         IndexMetaData.Builder indexMetadataBuilder = IndexMetaData.builder(indexMetaData);\n         if (shouldParseIndexName(indexMetaData.getSettings())) {\n-            long parsedOriginationDate = parseIndexNameAndExtractDate(index.getName());\n-            indexMetadataBuilder.settingsVersion(indexMetaData.getSettingsVersion() + 1)\n-                .settings(Settings.builder()\n-                    .put(indexMetaData.getSettings())\n-                    .put(LifecycleSettings.LIFECYCLE_ORIGINATION_DATE, parsedOriginationDate)\n-                    .build()\n-                );\n+            try {\n+                long parsedOriginationDate = parseIndexNameAndExtractDate(index.getName());\n+                indexMetadataBuilder.settingsVersion(indexMetaData.getSettingsVersion() + 1)\n+                    .settings(Settings.builder()\n+                        .put(indexMetaData.getSettings())\n+                        .put(LifecycleSettings.LIFECYCLE_ORIGINATION_DATE, parsedOriginationDate)\n+                        .build()\n+                    );\n+            } catch (Exception e) {\n+                throw new InitializePolicyException(e.getMessage(), e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMzEyMQ=="}, "originalCommit": {"oid": "6e46ae3519fad62717c1146b4386ec707337e66d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTQ2MzgzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMToyMzo0NFrOFnKsaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMToyMzo0NFrOFnKsaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMzk5Mw==", "bodyText": "I think the assertThat -> waitUntil -> is(true) is a little hard to follow, I think just a single assertBusy() would be better, since you can add the assertions in the body itself rather than returning a boolean?", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376613993", "createdAt": "2020-02-07T21:23:44Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "diffHunk": "@@ -1120,26 +1120,26 @@ public void testRolloverStepRetriesUntilRolledOverIndexIsDeleted() throws Except\n         // {@link org.elasticsearch.xpack.core.ilm.ErrorStep} in order to retry the failing step. As {@link #assertBusy}\n         // increases the wait time between calls exponentially, we might miss the window where the policy is on\n         // {@link WaitForRolloverReadyStep} and the move to `attempt-rollover` request will not be successful.\n-        waitUntil(() -> {\n+        assertThat(waitUntil(() -> {\n             try {\n                 return client().performRequest(moveToStepRequest).getStatusLine().getStatusCode() == 200;\n             } catch (IOException e) {\n                 return false;\n             }\n-        }, 30, TimeUnit.SECONDS);\n+        }, 30, TimeUnit.SECONDS), is(true));\n \n         // Similar to above, using {@link #waitUntil} as we want to make sure the `attempt-rollover` step started failing and is being\n         // retried (which means ILM moves back and forth between the `attempt-rollover` step and the `error` step)\n-        waitUntil(() -> {\n+        assertThat(\"ILM did not start retrying the attempt-rollover step\", waitUntil(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e46ae3519fad62717c1146b4386ec707337e66d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjU5NjY5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo1Njo1OVrOFoMJkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo1Njo1OVrOFoMJkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4NjQxOQ==", "bodyText": "I think we may want to move the try to surround more of the function (for example, the fromIndexMetadata(...) call", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r377686419", "createdAt": "2020-02-11T14:56:59Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "diffHunk": "@@ -47,13 +47,17 @@ public ClusterState performAction(Index index, ClusterState clusterState) {\n \n         IndexMetaData.Builder indexMetadataBuilder = IndexMetaData.builder(indexMetaData);\n         if (shouldParseIndexName(indexMetaData.getSettings())) {\n-            long parsedOriginationDate = parseIndexNameAndExtractDate(index.getName());\n-            indexMetadataBuilder.settingsVersion(indexMetaData.getSettingsVersion() + 1)\n-                .settings(Settings.builder()\n-                    .put(indexMetaData.getSettings())\n-                    .put(LifecycleSettings.LIFECYCLE_ORIGINATION_DATE, parsedOriginationDate)\n-                    .build()\n-                );\n+            try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a180e61b5ab07555a40fc415ee643e2c2d1dc3c9"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjYwMTY4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyException.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo1ODowNlrOFoMMnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo1ODowNlrOFoMMnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4NzE5Nw==", "bodyText": "Can we include the policy name in the exception somewhere? I think that might be helpful if the setting were to change but the error was still there", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r377687197", "createdAt": "2020-02-11T14:58:06Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyException.java", "diffHunk": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.ElasticsearchException;\n+\n+/**\n+ * Exception thrown when a problem is encountered while initialising an ILM policy for an index.\n+ */\n+public class InitializePolicyException extends ElasticsearchException {\n+\n+    public InitializePolicyException(String msg, Throwable cause, Object... args) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a180e61b5ab07555a40fc415ee643e2c2d1dc3c9"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjYwNTYxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleTransition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo1ODo1NVrOFoMO_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo1ODo1NVrOFoMO_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4NzgwNA==", "bodyText": "Can you add a comment about why we check for this particular exception here?", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r377687804", "createdAt": "2020-02-11T14:58:55Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleTransition.java", "diffHunk": "@@ -133,8 +134,13 @@ static ClusterState moveClusterStateToErrorStep(Index index, ClusterState cluste\n         ElasticsearchException.generateThrowableXContent(causeXContentBuilder, STACKTRACE_PARAMS, cause);\n         causeXContentBuilder.endObject();\n         LifecycleExecutionState currentState = LifecycleExecutionState.fromIndexMetadata(idxMeta);\n-        Step.StepKey currentStep = Objects.requireNonNull(LifecycleExecutionState.getCurrentStepKey(currentState),\n-            \"unable to move to an error step where there is no current step, state: \" + currentState);\n+        Step.StepKey currentStep;\n+        if (cause instanceof InitializePolicyException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a180e61b5ab07555a40fc415ee643e2c2d1dc3c9"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDg1MTIzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjoxNjowNFrOFo1DoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjozNToyMlrOFo11tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM1NjY0MQ==", "bodyText": "We don't need to pass the policy in and store it in the step, we can get it directly out of the index metadata (the index.lifecycle.name setting)", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r378356641", "createdAt": "2020-02-12T16:16:04Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "diffHunk": "@@ -25,8 +27,11 @@\n     public static final StepKey KEY = new StepKey(INITIALIZATION_PHASE, \"init\", \"init\");\n     private static final Logger logger = LogManager.getLogger(InitializePolicyContextStep.class);\n \n-    InitializePolicyContextStep(Step.StepKey key, StepKey nextStepKey) {\n+    private final String policy;\n+\n+    InitializePolicyContextStep(String policy, Step.StepKey key, StepKey nextStepKey) {\n         super(key, nextStepKey);\n+        this.policy = policy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7f0828346f974817e8a8c48020a546911d97cd9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2OTQ2Mg==", "bodyText": "Ah yes, great point!", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r378369462", "createdAt": "2020-02-12T16:35:22Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "diffHunk": "@@ -25,8 +27,11 @@\n     public static final StepKey KEY = new StepKey(INITIALIZATION_PHASE, \"init\", \"init\");\n     private static final Logger logger = LogManager.getLogger(InitializePolicyContextStep.class);\n \n-    InitializePolicyContextStep(Step.StepKey key, StepKey nextStepKey) {\n+    private final String policy;\n+\n+    InitializePolicyContextStep(String policy, Step.StepKey key, StepKey nextStepKey) {\n         super(key, nextStepKey);\n+        this.policy = policy;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM1NjY0MQ=="}, "originalCommit": {"oid": "d7f0828346f974817e8a8c48020a546911d97cd9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDg1ODk3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjoxNzo0NVrOFo1IPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjoxNzo0NVrOFo1IPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM1NzgyMw==", "bodyText": "If we get the policy id from the index metadata we don't need to add this stuff either, which will be nice.", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r378357823", "createdAt": "2020-02-12T16:17:45Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "diffHunk": "@@ -72,4 +80,22 @@ public ClusterState performAction(Index index, ClusterState clusterState) {\n     public boolean isRetryable() {\n         return true;\n     }\n+\n+    String policy() {\n+        return policy;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7f0828346f974817e8a8c48020a546911d97cd9"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4836, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}