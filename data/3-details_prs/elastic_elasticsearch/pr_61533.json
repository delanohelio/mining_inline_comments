{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMjY0NzA1", "number": 61533, "title": "Extract distribution archive checks into plugin", "bodyText": "While revisiting how we handle and create / maintain distribution archives I did some rework\nto extract some archive checking logic from the distribution archives build scripts into its own plugin.\nThis PR\n\nAdds test coverage\nRemoves build script cluttering\nSplits archive building and archive checking logic\n\nThis also introduces a change in behaviour for checking ml related licenses as this check\nwas by misconfiguration never triggered in past checks.", "createdAt": "2020-08-25T14:55:13Z", "url": "https://github.com/elastic/elasticsearch/pull/61533", "merged": true, "mergeCommit": {"oid": "fe638584c1e1c68731589fed4e9ec68dd3d35124"}, "closed": true, "closedAt": "2020-08-26T07:22:57Z", "author": {"login": "breskeby"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCbef7AH2gAyNDczMjY0NzA1OjljOGQ1NTU2ZDk2MjRjMjJiZGQzZjVjN2Q0NzdlZDU3NDIwYjIxODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCl5tGAH2gAyNDczMjY0NzA1OmU2Zjg3YWZlYzA4MDc0ZjZlMjFiMzczYjNhNzJmOGJlMThmYTFiNTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9c8d5556d9624c22bdd3f5c7d477ed57420b2185", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/9c8d5556d9624c22bdd3f5c7d477ed57420b2185", "committedDate": "2020-08-25T18:25:50Z", "message": "Extract distribution archive checks into plugin\n\n- Added test coverage\n- Removes build script cluttering\n- Splits archive building and archive checking logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9982b8420f625cc21b1fbb9253030b945ac6f99", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/e9982b8420f625cc21b1fbb9253030b945ac6f99", "committedDate": "2020-08-25T18:25:50Z", "message": "Fix tar handling in tests on linux"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "545625c271150f8984f1073949b8c5da9986707d", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/545625c271150f8984f1073949b8c5da9986707d", "committedDate": "2020-08-25T18:25:50Z", "message": "Fix integ-test-zip license check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eda401191ba3d2e5b5997bcf693e3df13f716b35", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/eda401191ba3d2e5b5997bcf693e3df13f716b35", "committedDate": "2020-08-25T18:25:51Z", "message": "Polishing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9176a56139efd5ab27bc5a06bff436ed24b28988", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/9176a56139efd5ab27bc5a06bff436ed24b28988", "committedDate": "2020-08-25T18:03:27Z", "message": "Fix integ-test-zip license check"}, "afterCommit": {"oid": "eda401191ba3d2e5b5997bcf693e3df13f716b35", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/eda401191ba3d2e5b5997bcf693e3df13f716b35", "committedDate": "2020-08-25T18:25:51Z", "message": "Polishing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e719395726f17e050e48e42c3c73e94d01b3bac9", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/e719395726f17e050e48e42c3c73e94d01b3bac9", "committedDate": "2020-08-25T19:20:16Z", "message": "Remove log4c from expected ml licenses"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "669795f481bccbfe2ed61e58725b13ec8a61d0ab", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/669795f481bccbfe2ed61e58725b13ec8a61d0ab", "committedDate": "2020-08-25T19:56:31Z", "message": "Allow configuring expected ML licenses\n\n- only rely on boost for now (tbd)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0ODA5MzA5", "url": "https://github.com/elastic/elasticsearch/pull/61533#pullrequestreview-474809309", "createdAt": "2020-08-25T20:00:24Z", "commit": {"oid": "669795f481bccbfe2ed61e58725b13ec8a61d0ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDowMDoyNVrOHGnrIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDowMDoyNVrOHGnrIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwMzUyMA==", "bodyText": "On master this list contains Boost and 'Apache log4cxx'. Seems log4cxx is not used anymore. Should this list maintain all currently used licenses for the ml project? The reason for the mismatch was that the checkMlCppNotice hasn't been executed for a while now I think", "url": "https://github.com/elastic/elasticsearch/pull/61533#discussion_r476703520", "createdAt": "2020-08-25T20:00:25Z", "author": {"login": "breskeby"}, "path": "distribution/archives/build.gradle", "diffHunk": "@@ -222,106 +219,17 @@ Closure unzipExists = { it -> new File('/bin/unzip').exists() || new File('/usr/\n //    filename, so they must be placed in different directories.\n subprojects {\n   apply plugin: 'distribution'\n+  apply plugin: 'elasticsearch.internal-distribution-archive-check'\n+\n+  distributionArchiveCheck {\n+    expectedMlLicenses.add(\"Boost Software License - Version 1.0 - August 17th, 2003\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "669795f481bccbfe2ed61e58725b13ec8a61d0ab"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0ODEwNTQz", "url": "https://github.com/elastic/elasticsearch/pull/61533#pullrequestreview-474810543", "createdAt": "2020-08-25T20:02:14Z", "commit": {"oid": "669795f481bccbfe2ed61e58725b13ec8a61d0ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDowMjoxNVrOHGnu3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDowMjoxNVrOHGnu3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNDQ3OQ==", "bodyText": "This is actually a change in behaviour from master as discussed here: https://elastic.slack.com/archives/C8UUBNASY/p1598283630030100", "url": "https://github.com/elastic/elasticsearch/pull/61533#discussion_r476704479", "createdAt": "2020-08-25T20:02:15Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java", "diffHunk": "@@ -0,0 +1,311 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.internal;\n+\n+import org.elasticsearch.gradle.LoggedExec;\n+import org.elasticsearch.gradle.VersionProperties;\n+import org.gradle.api.Action;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.plugins.BasePlugin;\n+import org.gradle.api.specs.Spec;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.stream.Collectors;\n+\n+public class InternalDistributionArchiveCheckPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        project.getPlugins().apply(BasePlugin.class);\n+        String buildTaskName = calculateBuildTask(project.getName());\n+        Task buildDistTask = project.getParent().getTasks().getByName(buildTaskName);\n+        DistributionArchiveCheckExtension distributionArchiveCheckExtension = project.getExtensions()\n+            .create(\"distributionArchiveCheck\", DistributionArchiveCheckExtension.class);\n+\n+        File archiveExtractionDir = calculateArchiveExtractionDir(project);\n+        Spec<Task> toolAvailableSpec = task -> toolExists(project);\n+\n+        // sanity checks if archives can be extracted\n+        TaskProvider<LoggedExec> checkExtraction = registerCheckExtractionTask(\n+            project,\n+            buildDistTask,\n+            archiveExtractionDir,\n+            toolAvailableSpec\n+        );\n+        TaskProvider<Task> checkLicense = registerCheckLicenseTask(\n+            project,\n+            buildDistTask,\n+            archiveExtractionDir,\n+            toolAvailableSpec,\n+            checkExtraction\n+        );\n+\n+        TaskProvider<Task> checkNotice = registerCheckNoticeTask(\n+            project,\n+            buildDistTask,\n+            archiveExtractionDir,\n+            toolAvailableSpec,\n+            checkExtraction\n+        );\n+        TaskProvider<Task> checkTask = project.getTasks().named(\"check\");\n+        checkTask.configure(task -> {\n+            task.dependsOn(checkExtraction);\n+            task.dependsOn(checkLicense);\n+            task.dependsOn(checkNotice);\n+        });\n+\n+        if (project.getName().contains(\"zip\") || project.getName().contains(\"tar\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "669795f481bccbfe2ed61e58725b13ec8a61d0ab"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0ODExNTYy", "url": "https://github.com/elastic/elasticsearch/pull/61533#pullrequestreview-474811562", "createdAt": "2020-08-25T20:03:46Z", "commit": {"oid": "669795f481bccbfe2ed61e58725b13ec8a61d0ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDowMzo0NlrOHGnxzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDowMzo0NlrOHGnxzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNTIzMQ==", "bodyText": "Just some minor cleanup on the way", "url": "https://github.com/elastic/elasticsearch/pull/61533#discussion_r476705231", "createdAt": "2020-08-25T20:03:46Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/integTest/groovy/org/elasticsearch/gradle/internal/InternalDistributionDownloadPluginFuncTest.groovy", "diffHunk": "@@ -17,8 +17,9 @@\n  * under the License.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "669795f481bccbfe2ed61e58725b13ec8a61d0ab"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d27db068ece24874ac3d46101f68b17e7ea7bd2", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/9d27db068ece24874ac3d46101f68b17e7ea7bd2", "committedDate": "2020-08-25T20:04:30Z", "message": "Polishing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0OTU2ODkz", "url": "https://github.com/elastic/elasticsearch/pull/61533#pullrequestreview-474956893", "createdAt": "2020-08-25T22:13:58Z", "commit": {"oid": "9d27db068ece24874ac3d46101f68b17e7ea7bd2"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMjoxMzo1OFrOHGs7ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMjoxODo0OFrOHGtJlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc4OTY2Nw==", "bodyText": "Can we not use a TaskProvider here?", "url": "https://github.com/elastic/elasticsearch/pull/61533#discussion_r476789667", "createdAt": "2020-08-25T22:13:58Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java", "diffHunk": "@@ -0,0 +1,311 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.internal;\n+\n+import org.elasticsearch.gradle.LoggedExec;\n+import org.elasticsearch.gradle.VersionProperties;\n+import org.gradle.api.Action;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.plugins.BasePlugin;\n+import org.gradle.api.specs.Spec;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.stream.Collectors;\n+\n+public class InternalDistributionArchiveCheckPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        project.getPlugins().apply(BasePlugin.class);\n+        String buildTaskName = calculateBuildTask(project.getName());\n+        Task buildDistTask = project.getParent().getTasks().getByName(buildTaskName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d27db068ece24874ac3d46101f68b17e7ea7bd2"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc5MTYxOQ==", "bodyText": "How much effort would it be to rework these implementations to not depend on the CLI tools and instead use Gradle provided archive operation APIs? As it if essentially if our logic to find tar or zip on the classpath breaks, we'd just start silently skipping these checks.", "url": "https://github.com/elastic/elasticsearch/pull/61533#discussion_r476791619", "createdAt": "2020-08-25T22:16:33Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java", "diffHunk": "@@ -0,0 +1,311 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.internal;\n+\n+import org.elasticsearch.gradle.LoggedExec;\n+import org.elasticsearch.gradle.VersionProperties;\n+import org.gradle.api.Action;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.plugins.BasePlugin;\n+import org.gradle.api.specs.Spec;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.stream.Collectors;\n+\n+public class InternalDistributionArchiveCheckPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        project.getPlugins().apply(BasePlugin.class);\n+        String buildTaskName = calculateBuildTask(project.getName());\n+        Task buildDistTask = project.getParent().getTasks().getByName(buildTaskName);\n+        DistributionArchiveCheckExtension distributionArchiveCheckExtension = project.getExtensions()\n+            .create(\"distributionArchiveCheck\", DistributionArchiveCheckExtension.class);\n+\n+        File archiveExtractionDir = calculateArchiveExtractionDir(project);\n+        Spec<Task> toolAvailableSpec = task -> toolExists(project);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d27db068ece24874ac3d46101f68b17e7ea7bd2"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc5MzIzNw==", "bodyText": "Yay! Being able to easily test this stuff is probably the most compelling argument for migrating to binary plugins.", "url": "https://github.com/elastic/elasticsearch/pull/61533#discussion_r476793237", "createdAt": "2020-08-25T22:18:48Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/integTest/groovy/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPluginFuncTest.groovy", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.internal\n+\n+import org.elasticsearch.gradle.VersionProperties\n+import org.elasticsearch.gradle.fixtures.AbstractGradleFuncTest\n+import org.gradle.testkit.runner.TaskOutcome\n+import spock.lang.Unroll\n+\n+class InternalDistributionArchiveCheckPluginFuncTest extends AbstractGradleFuncTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d27db068ece24874ac3d46101f68b17e7ea7bd2"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6f87afec08074f6e21b373b3a72f8be18fa1b52", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/e6f87afec08074f6e21b373b3a72f8be18fa1b52", "committedDate": "2020-08-26T06:34:36Z", "message": "Use Gradle build-in untar and unzip support"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4733, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}