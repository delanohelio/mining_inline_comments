{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NTE1OTE0", "number": 52668, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMDozNzowM1rODiR2Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMDozNzowM1rODiR2Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjcwNTMwOnYy", "diffSide": "RIGHT", "path": "distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMDozNzowM1rOFtcAGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMDo0MjoyMFrOFtcKhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE4OTAxOA==", "bodyText": "Tiny nit that we could use Matchers.startsWith(), feel free to ignore:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertTrue(e.getMessage(), e.getMessage().startsWith(\"Invalid checksum file\"));\n          \n          \n            \n                    assertThat(e.getMessage(), startsWith(\"Invalid checksum file\"));", "url": "https://github.com/elastic/elasticsearch/pull/52668#discussion_r383189018", "createdAt": "2020-02-24T10:37:03Z", "author": {"login": "pugnascotia"}, "path": "distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java", "diffHunk": "@@ -1109,6 +1109,35 @@ public void testMavenSha1Backcompat() throws Exception {\n         assertTrue(terminal.getOutput(), terminal.getOutput().contains(\"sha512 not found, falling back to sha1\"));\n     }\n \n+    public void testMavenChecksumWithoutFilename() throws Exception {\n+        String url = \"https://repo1.maven.org/maven2/mygroup/myplugin/1.0.0/myplugin-1.0.0.zip\";\n+        MessageDigest digest = MessageDigest.getInstance(\"SHA-512\");\n+        assertInstallPluginFromUrl(\"mygroup:myplugin:1.0.0\", \"myplugin\", url, null, false, \".sha512\", checksum(digest), null, (b, p) -> null);\n+    }\n+\n+    public void testOfficialChecksumWithoutFilename() throws Exception {\n+        String url = \"https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-icu/analysis-icu-\"\n+            + Build.CURRENT.getQualifiedVersion()\n+            + \".zip\";\n+        MessageDigest digest = MessageDigest.getInstance(\"SHA-512\");\n+        UserException e = expectThrows(\n+            UserException.class,\n+            () -> assertInstallPluginFromUrl(\n+                \"analysis-icu\",\n+                \"analysis-icu\",\n+                url,\n+                null,\n+                false,\n+                \".sha512\",\n+                checksum(digest),\n+                null,\n+                (b, p) -> null\n+            )\n+        );\n+        assertEquals(ExitCodes.IO_ERROR, e.exitCode);\n+        assertTrue(e.getMessage(), e.getMessage().startsWith(\"Invalid checksum file\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e61bd3d51f9ff4a139ed3c9521ab93c68051b4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE5MTY4NQ==", "bodyText": "assertTrue is evil in almost all cases. \ud83d\ude07", "url": "https://github.com/elastic/elasticsearch/pull/52668#discussion_r383191685", "createdAt": "2020-02-24T10:42:20Z", "author": {"login": "jasontedor"}, "path": "distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java", "diffHunk": "@@ -1109,6 +1109,35 @@ public void testMavenSha1Backcompat() throws Exception {\n         assertTrue(terminal.getOutput(), terminal.getOutput().contains(\"sha512 not found, falling back to sha1\"));\n     }\n \n+    public void testMavenChecksumWithoutFilename() throws Exception {\n+        String url = \"https://repo1.maven.org/maven2/mygroup/myplugin/1.0.0/myplugin-1.0.0.zip\";\n+        MessageDigest digest = MessageDigest.getInstance(\"SHA-512\");\n+        assertInstallPluginFromUrl(\"mygroup:myplugin:1.0.0\", \"myplugin\", url, null, false, \".sha512\", checksum(digest), null, (b, p) -> null);\n+    }\n+\n+    public void testOfficialChecksumWithoutFilename() throws Exception {\n+        String url = \"https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-icu/analysis-icu-\"\n+            + Build.CURRENT.getQualifiedVersion()\n+            + \".zip\";\n+        MessageDigest digest = MessageDigest.getInstance(\"SHA-512\");\n+        UserException e = expectThrows(\n+            UserException.class,\n+            () -> assertInstallPluginFromUrl(\n+                \"analysis-icu\",\n+                \"analysis-icu\",\n+                url,\n+                null,\n+                false,\n+                \".sha512\",\n+                checksum(digest),\n+                null,\n+                (b, p) -> null\n+            )\n+        );\n+        assertEquals(ExitCodes.IO_ERROR, e.exitCode);\n+        assertTrue(e.getMessage(), e.getMessage().startsWith(\"Invalid checksum file\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE4OTAxOA=="}, "originalCommit": {"oid": "70e61bd3d51f9ff4a139ed3c9521ab93c68051b4"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3900, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}