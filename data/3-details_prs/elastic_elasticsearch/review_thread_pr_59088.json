{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODc5NDg1", "number": 59088, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTo0MDo1NVrOENB-Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTo0MDo1NVrOENB-Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDk5Mjc5OnYy", "diffSide": "RIGHT", "path": "distribution/build.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTo0MDo1NVrOGvfOGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwODo0OToxM1rOGvvRzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ0Nzc2OA==", "bodyText": "So the first two of these don't actually declare any dependencies, so it would be functionally equivalent to just use the default configuration, no?\nAs for the launcher project, it does declare dependencies, but it's expected to be packaged here in a common libs dir. @rjernst should the launcher deps be considered \"provided\"? In which case I think it might make sense to flag them compileOnly and again bring in the default configuration.", "url": "https://github.com/elastic/elasticsearch/pull/59088#discussion_r452447768", "createdAt": "2020-07-09T19:40:55Z", "author": {"login": "mark-vieira"}, "path": "distribution/build.gradle", "diffHunk": "@@ -278,6 +279,31 @@ configure(subprojects.findAll { ['archives', 'packages'].contains(it.name) }) {\n   /*****************************************************************************\n    *             Properties to expand when copying packaging files             *\n    *****************************************************************************/\n+  configurations {\n+    ['libs', 'libsPluginCli', 'libsKeystoreCli', 'libsSecurityCli'].each {\n+      create(it) {\n+        canBeConsumed = false\n+        canBeResolved = true\n+        attributes {\n+          attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category, Category.LIBRARY))\n+          attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_RUNTIME))\n+          attribute(Bundling.BUNDLING_ATTRIBUTE, objects.named(Bundling, Bundling.EXTERNAL))\n+        }\n+      }\n+    }\n+  }\n+\n+  dependencies {\n+    libs project(':server')\n+    libs project(path: ':libs:elasticsearch-plugin-classloader', configuration: 'archives')\n+    libs project(path: ':distribution:tools:java-version-checker', configuration: 'archives')\n+    libs project(path: ':distribution:tools:launchers', configuration: 'archives')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b960f739ebcafe559f6452c4118173c3f39108ba"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0MDg1NA==", "bodyText": "I don't know about compileOnly, but maybe I'm misunderstanding what that means in this context. The launchers are needed at runtime. They are a bunch of the classes called by our cli scripts prior actually running the main cli class. IIRC they are not depended on by any cli classes at compile time.", "url": "https://github.com/elastic/elasticsearch/pull/59088#discussion_r452540854", "createdAt": "2020-07-09T23:19:51Z", "author": {"login": "rjernst"}, "path": "distribution/build.gradle", "diffHunk": "@@ -278,6 +279,31 @@ configure(subprojects.findAll { ['archives', 'packages'].contains(it.name) }) {\n   /*****************************************************************************\n    *             Properties to expand when copying packaging files             *\n    *****************************************************************************/\n+  configurations {\n+    ['libs', 'libsPluginCli', 'libsKeystoreCli', 'libsSecurityCli'].each {\n+      create(it) {\n+        canBeConsumed = false\n+        canBeResolved = true\n+        attributes {\n+          attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category, Category.LIBRARY))\n+          attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_RUNTIME))\n+          attribute(Bundling.BUNDLING_ATTRIBUTE, objects.named(Bundling, Bundling.EXTERNAL))\n+        }\n+      }\n+    }\n+  }\n+\n+  dependencies {\n+    libs project(':server')\n+    libs project(path: ':libs:elasticsearch-plugin-classloader', configuration: 'archives')\n+    libs project(path: ':distribution:tools:java-version-checker', configuration: 'archives')\n+    libs project(path: ':distribution:tools:launchers', configuration: 'archives')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ0Nzc2OA=="}, "originalCommit": {"oid": "b960f739ebcafe559f6452c4118173c3f39108ba"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcxMDg2Mw==", "bodyText": "+1 on using the default. I made the change to compileOnly. that sounds reasonable and is also how things are done already for the keystone-cli compile dependencies.", "url": "https://github.com/elastic/elasticsearch/pull/59088#discussion_r452710863", "createdAt": "2020-07-10T08:49:13Z", "author": {"login": "breskeby"}, "path": "distribution/build.gradle", "diffHunk": "@@ -278,6 +279,31 @@ configure(subprojects.findAll { ['archives', 'packages'].contains(it.name) }) {\n   /*****************************************************************************\n    *             Properties to expand when copying packaging files             *\n    *****************************************************************************/\n+  configurations {\n+    ['libs', 'libsPluginCli', 'libsKeystoreCli', 'libsSecurityCli'].each {\n+      create(it) {\n+        canBeConsumed = false\n+        canBeResolved = true\n+        attributes {\n+          attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category, Category.LIBRARY))\n+          attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_RUNTIME))\n+          attribute(Bundling.BUNDLING_ATTRIBUTE, objects.named(Bundling, Bundling.EXTERNAL))\n+        }\n+      }\n+    }\n+  }\n+\n+  dependencies {\n+    libs project(':server')\n+    libs project(path: ':libs:elasticsearch-plugin-classloader', configuration: 'archives')\n+    libs project(path: ':distribution:tools:java-version-checker', configuration: 'archives')\n+    libs project(path: ':distribution:tools:launchers', configuration: 'archives')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ0Nzc2OA=="}, "originalCommit": {"oid": "b960f739ebcafe559f6452c4118173c3f39108ba"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2079, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}