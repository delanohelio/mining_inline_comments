{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNjYyMjk4", "number": 63520, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTo1ODo0M1rOEtaKVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDowMDowNlrOEtaMQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDUwMDA1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/SearchTransportService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTo1ODo0M1rOHhLf6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjo1NDoyOVrOHhRh7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1MzQ1MQ==", "bodyText": "Should we replace the exception with a simple error message since that's the only part we're using in the method ?", "url": "https://github.com/elastic/elasticsearch/pull/63520#discussion_r504553451", "createdAt": "2020-10-14T09:58:43Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchTransportService.java", "diffHunk": "@@ -423,4 +430,13 @@ private boolean assertNodePresent() {\n             return true;\n         }\n     }\n+\n+    public void cancelSearchTask(SearchTask task, Exception exc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b4aab930b62ad4d7de4218c7d4ab34444594455"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1MjI2OQ==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/63520#discussion_r504652269", "createdAt": "2020-10-14T12:54:29Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchTransportService.java", "diffHunk": "@@ -423,4 +430,13 @@ private boolean assertNodePresent() {\n             return true;\n         }\n     }\n+\n+    public void cancelSearchTask(SearchTask task, Exception exc) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1MzQ1MQ=="}, "originalCommit": {"oid": "0b4aab930b62ad4d7de4218c7d4ab34444594455"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDUwMjUyOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhaseTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTo1OToyN1rOHhLhjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTo1OToyN1rOHhLhjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1Mzg3MA==", "bodyText": "Why is it needed to override ?", "url": "https://github.com/elastic/elasticsearch/pull/63520#discussion_r504553870", "createdAt": "2020-10-14T09:59:27Z", "author": {"login": "jimczi"}, "path": "server/src/test/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhaseTests.java", "diffHunk": "@@ -204,6 +204,11 @@ public void sendCanMatch(\n                     ActionListener<SearchService.CanMatchResponse> listener) {\n                     listener.onResponse(new SearchService.CanMatchResponse(randomBoolean(), null));\n                 }\n+\n+                @Override\n+                public void cancelSearchTask(SearchTask task, Exception exc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b4aab930b62ad4d7de4218c7d4ab34444594455"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDUwNDk3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDowMDowNlrOHhLjJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjo1NDoyM1rOHhRhrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1NDI3OA==", "bodyText": "The exception seems off, we should just set the error message or at least use a TaskCancelledException ?", "url": "https://github.com/elastic/elasticsearch/pull/63520#discussion_r504554278", "createdAt": "2020-10-14T10:00:06Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java", "diffHunk": "@@ -393,6 +395,16 @@ private void onShardFailure(final int shardIndex, @Nullable SearchShardTarget sh\n         logger.debug(() -> new ParameterizedMessage(\"{}: Failed to execute [{}] lastShard [{}]\",\n             shard != null ? shard : shardIt.shardId(), request, lastShard), e);\n         if (lastShard) {\n+            if (request.allowPartialSearchResults() == false) {\n+                if (requestCancelled.compareAndSet(false, true)) {\n+                    try {\n+                        searchTransportService.cancelSearchTask(task, new CancellationException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b4aab930b62ad4d7de4218c7d4ab34444594455"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1MjIwNg==", "bodyText": "Good catch. Adjusted in f038c43", "url": "https://github.com/elastic/elasticsearch/pull/63520#discussion_r504652206", "createdAt": "2020-10-14T12:54:23Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java", "diffHunk": "@@ -393,6 +395,16 @@ private void onShardFailure(final int shardIndex, @Nullable SearchShardTarget sh\n         logger.debug(() -> new ParameterizedMessage(\"{}: Failed to execute [{}] lastShard [{}]\",\n             shard != null ? shard : shardIt.shardId(), request, lastShard), e);\n         if (lastShard) {\n+            if (request.allowPartialSearchResults() == false) {\n+                if (requestCancelled.compareAndSet(false, true)) {\n+                    try {\n+                        searchTransportService.cancelSearchTask(task, new CancellationException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1NDI3OA=="}, "originalCommit": {"oid": "0b4aab930b62ad4d7de4218c7d4ab34444594455"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3095, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}