{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNTQwODMz", "number": 52073, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTo1NDozNVrODeIiIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDowNjozNVrODeIusA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTIzNjgzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/LifecyclePolicyTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTo1NDozNlrOFnIglg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDoxMDowOFrOFnI6dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3ODE5OA==", "bodyText": "Would it be a bit faster to validate when generating the random policy that if we added forcemerge we will add rollover?", "url": "https://github.com/elastic/elasticsearch/pull/52073#discussion_r376578198", "createdAt": "2020-02-07T19:54:36Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/LifecyclePolicyTests.java", "diffHunk": "@@ -145,6 +146,24 @@ public static LifecyclePolicy randomTimeseriesLifecyclePolicyWithAllPhases(@Null\n     }\n \n     public static LifecyclePolicy randomTimeseriesLifecyclePolicy(@Nullable String lifecycleName) {\n+        LifecyclePolicy policy = null;\n+\n+        // Keep generating a random policy until it passes the validation,\n+        // ignoring known specific invalid states\n+        while (policy == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abadba95e21f41ec3f12d06dcff6ddadf9a4123f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NDgyMw==", "bodyText": "+1 for @andreidan idea, currently we risk potentially very long running tests (or random timeouts) if we can't generate correct policy", "url": "https://github.com/elastic/elasticsearch/pull/52073#discussion_r376584823", "createdAt": "2020-02-07T20:10:08Z", "author": {"login": "probakowski"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/LifecyclePolicyTests.java", "diffHunk": "@@ -145,6 +146,24 @@ public static LifecyclePolicy randomTimeseriesLifecyclePolicyWithAllPhases(@Null\n     }\n \n     public static LifecyclePolicy randomTimeseriesLifecyclePolicy(@Nullable String lifecycleName) {\n+        LifecyclePolicy policy = null;\n+\n+        // Keep generating a random policy until it passes the validation,\n+        // ignoring known specific invalid states\n+        while (policy == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3ODE5OA=="}, "originalCommit": {"oid": "abadba95e21f41ec3f12d06dcff6ddadf9a4123f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTI2ODk2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/TimeseriesLifecycleType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDowNjozNVrOFnI0ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDowNjozNVrOFnI0ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4MzM2Mw==", "bodyText": "Can be simplified slightly:\nif (phases.stream()\n    // Is there a hot phase\n    .filter(phase -> HOT_PHASE.equals(phase.getName()))\n    // That contains the 'forcemerge' action\n    .filter(phase -> phase.getActions().containsKey(ForceMergeAction.NAME))\n    // But does *not* contain the 'rollover' action?\n    .anyMatch(phase -> phase.getActions().containsKey(RolloverAction.NAME) == false)) {\n    // If there is, throw an exception\n    throw new IllegalArgumentException(\"the [\" + ForceMergeAction.NAME +\n        \"] action may not be used in the [\" + HOT_PHASE +\n        \"] phase without an accompanying [\" + RolloverAction.NAME + \"] action\");\n}", "url": "https://github.com/elastic/elasticsearch/pull/52073#discussion_r376583363", "createdAt": "2020-02-07T20:06:35Z", "author": {"login": "probakowski"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/TimeseriesLifecycleType.java", "diffHunk": "@@ -195,5 +200,21 @@ public void validate(Collection<Phase> phases) {\n                 }\n             });\n         });\n+\n+        // Check for forcemerge in 'hot' without a rollover action\n+        phases.stream()\n+            // Is there a hot phase\n+            .filter(phase -> HOT_PHASE.equals(phase.getName()))\n+            // That contains the 'forcemerge' action\n+            .filter(phase -> phase.getActions().containsKey(ForceMergeAction.NAME))\n+            // But does *not* contain the 'rollover' action?\n+            .filter(phase -> phase.getActions().containsKey(RolloverAction.NAME) == false)\n+            // If there is, throw an exception\n+            .findAny()\n+            .ifPresent(phase -> {\n+                throw new IllegalArgumentException(\"the [\" + ForceMergeAction.NAME +\n+                    \"] action may not be used in the [\" + phase.getName() +\n+                    \"] phase without an accompanying [\" + RolloverAction.NAME + \"] action\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abadba95e21f41ec3f12d06dcff6ddadf9a4123f"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4833, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}