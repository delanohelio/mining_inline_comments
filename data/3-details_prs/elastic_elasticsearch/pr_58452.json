{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NjYwMDU2", "number": 58452, "title": "Validate that REST API names do not contain keywords", "bodyText": "Part of elastic/clients-team#243.\nIf an API name (or components of a name) overlaps with a reserved word in the programming language for an ES client, then it's possible that the code that is generated from the API will not compile. This PR adds validation to check for such overlaps.\nWhen I implemented this with the keywords from the above issue, some APIs were immediately flagged, and this highlighted a subtlety with this check. Some keywords are actually perfectly fine to use, depending on the context, and so I removed delete and get from the TS and JS lists, and clone and list from the PHP list. Particularly in the PHP case, I checked that the API already has methods with these names. I tried to express this subtlety in the message that the generated report contains, but I'd welcome any suggestions or text improvements here.\ncc @sethmlarson FYI.", "createdAt": "2020-06-23T15:47:06Z", "url": "https://github.com/elastic/elasticsearch/pull/58452", "merged": true, "mergeCommit": {"oid": "35aecf4c9aa32f0a978b06568acc91f0ec6b9bf1"}, "closed": true, "closedAt": "2020-06-25T08:47:06Z", "author": {"login": "pugnascotia"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuHVd_gH2gAyNDM4NjYwMDU2OjBjNjNjNzI0ZGQ1NDA0YTIzMmU1ZWRkZjRjYzE0NzcwZTI4NmI4NWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcugcJJAH2gAyNDM4NjYwMDU2OmE5ZGE1ZjA1YzFjNzk4ZmMxMTcwM2MzMDI3M2VjZTZlZmQ4NGYwM2E=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0c63c724dd5404a232e5eddf4cc14770e286b85d", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/0c63c724dd5404a232e5eddf4cc14770e286b85d", "committedDate": "2020-06-23T15:39:23Z", "message": "Validate REST API names do not contain keywords\n\nIf an API name (or components of a name) overlaps with a reserved word\nin the programming language for an ES client, then its possible for code\nthat is generated from the API will not compile. This change adds\nvalidation to check for such overlaps."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MTI4MTEw", "url": "https://github.com/elastic/elasticsearch/pull/58452#pullrequestreview-436128110", "createdAt": "2020-06-23T20:25:40Z", "commit": {"oid": "0c63c724dd5404a232e5eddf4cc14770e286b85d"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoyNTo0MFrOGn5RxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDozNjo0MVrOGn5nTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4NjA4NQ==", "bodyText": "Although I guess this \"builder\" type pattern of chaining dependsOn works, I find it a bit odd. Just to placate my neurosis let's just do dependsOn(validateRestSpecTask, validateNoKeywordsTask) as I just find it easier to grok what's happening using the vararg method.", "url": "https://github.com/elastic/elasticsearch/pull/58452#discussion_r444486085", "createdAt": "2020-06-23T20:25:40Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/ValidateRestSpecPlugin.java", "diffHunk": "@@ -39,6 +39,16 @@ public void apply(Project project) {\n                 }));\n                 task.setJsonSchema(new File(project.getRootDir(), \"rest-api-spec/src/main/resources/schema.json\"));\n             });\n-        project.getTasks().named(\"precommit\").configure(t -> t.dependsOn(validateRestSpecTask));\n+\n+        Provider<ValidateJsonNoKeywordsTask> validateNoKeywordsTask = project.getTasks()\n+            .register(\"validateNoKeywords\", ValidateJsonNoKeywordsTask.class, task -> {\n+                task.setInputFiles(Util.getJavaTestAndMainSourceResources(project, filter -> {\n+                    filter.include(DOUBLE_STAR + \"/rest-api-spec/api/\" + DOUBLE_STAR + \"/*.json\");\n+                    filter.exclude(DOUBLE_STAR + \"/_common.json\");\n+                }));\n+                task.setJsonKeywords(new File(project.getRootDir(), \"rest-api-spec/src/main/resources/keywords.json\"));\n+            });\n+\n+        project.getTasks().named(\"precommit\").configure(t -> t.dependsOn(validateRestSpecTask).dependsOn(validateNoKeywordsTask));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c63c724dd5404a232e5eddf4cc14770e286b85d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4NjYyNQ==", "bodyText": "FYI, new File(project.getRootDir(), ...) can simply be replaced by project.file(\"rest-api-spec/src/main/resources/keywords.json\".", "url": "https://github.com/elastic/elasticsearch/pull/58452#discussion_r444486625", "createdAt": "2020-06-23T20:26:46Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/ValidateRestSpecPlugin.java", "diffHunk": "@@ -39,6 +39,16 @@ public void apply(Project project) {\n                 }));\n                 task.setJsonSchema(new File(project.getRootDir(), \"rest-api-spec/src/main/resources/schema.json\"));\n             });\n-        project.getTasks().named(\"precommit\").configure(t -> t.dependsOn(validateRestSpecTask));\n+\n+        Provider<ValidateJsonNoKeywordsTask> validateNoKeywordsTask = project.getTasks()\n+            .register(\"validateNoKeywords\", ValidateJsonNoKeywordsTask.class, task -> {\n+                task.setInputFiles(Util.getJavaTestAndMainSourceResources(project, filter -> {\n+                    filter.include(DOUBLE_STAR + \"/rest-api-spec/api/\" + DOUBLE_STAR + \"/*.json\");\n+                    filter.exclude(DOUBLE_STAR + \"/_common.json\");\n+                }));\n+                task.setJsonKeywords(new File(project.getRootDir(), \"rest-api-spec/src/main/resources/keywords.json\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c63c724dd5404a232e5eddf4cc14770e286b85d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4NzQxNA==", "bodyText": "I don't think this file should be in src/main/resources as we don't want to include it in the packaged JAR. Maybe just throw it in the project root directory ?", "url": "https://github.com/elastic/elasticsearch/pull/58452#discussion_r444487414", "createdAt": "2020-06-23T20:28:16Z", "author": {"login": "mark-vieira"}, "path": "rest-api-spec/src/main/resources/keywords.json", "diffHunk": "@@ -0,0 +1,339 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c63c724dd5404a232e5eddf4cc14770e286b85d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ5MDE0OA==", "bodyText": "I wonder if it makes sense to add an mustRunAfter ordering rule so that we run this after validating the schema. Essentially, if the spec format is busted we are likely to have issues running this task.", "url": "https://github.com/elastic/elasticsearch/pull/58452#discussion_r444490148", "createdAt": "2020-06-23T20:33:45Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/ValidateRestSpecPlugin.java", "diffHunk": "@@ -39,6 +39,16 @@ public void apply(Project project) {\n                 }));\n                 task.setJsonSchema(new File(project.getRootDir(), \"rest-api-spec/src/main/resources/schema.json\"));\n             });\n-        project.getTasks().named(\"precommit\").configure(t -> t.dependsOn(validateRestSpecTask));\n+\n+        Provider<ValidateJsonNoKeywordsTask> validateNoKeywordsTask = project.getTasks()\n+            .register(\"validateNoKeywords\", ValidateJsonNoKeywordsTask.class, task -> {\n+                task.setInputFiles(Util.getJavaTestAndMainSourceResources(project, filter -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c63c724dd5404a232e5eddf4cc14770e286b85d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ5MTU5Nw==", "bodyText": "Let's add a setter for this and set the default value in the plugin.", "url": "https://github.com/elastic/elasticsearch/pull/58452#discussion_r444491597", "createdAt": "2020-06-23T20:36:41Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/ValidateJsonNoKeywordsTask.java", "diffHunk": "@@ -0,0 +1,193 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import com.fasterxml.jackson.core.JsonParser;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.file.FileCollection;\n+import org.gradle.api.tasks.InputFile;\n+import org.gradle.api.tasks.InputFiles;\n+import org.gradle.api.tasks.OutputFile;\n+import org.gradle.api.tasks.TaskAction;\n+import org.gradle.work.ChangeType;\n+import org.gradle.work.Incremental;\n+import org.gradle.work.InputChanges;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.LinkedHashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.StreamSupport;\n+\n+/**\n+ * Incremental task to validate that the API names in set of JSON files do not contain\n+ * programming language keywords.\n+ * <p>\n+ * The keywords are defined in a JSON file, although it's worth noting that what is and isn't a\n+ * keyword depends on the language and sometimes the context in which a keyword is used. For example,\n+ * `delete` is an operator in JavaScript, but it isn't in the keywords list for JavaScript or\n+ * TypeScript because it's OK to use `delete` as a method name.\n+ */\n+public class ValidateJsonNoKeywordsTask extends DefaultTask {\n+\n+    private final ObjectMapper mapper = new ObjectMapper().configure(JsonParser.Feature.ALLOW_COMMENTS, true);\n+    private File jsonKeywords;\n+    private FileCollection inputFiles;\n+\n+    @Incremental\n+    @InputFiles\n+    public FileCollection getInputFiles() {\n+        return inputFiles;\n+    }\n+\n+    public void setInputFiles(FileCollection inputFiles) {\n+        this.inputFiles = inputFiles;\n+    }\n+\n+    @InputFile\n+    public File getJsonKeywords() {\n+        return jsonKeywords;\n+    }\n+\n+    public void setJsonKeywords(File jsonKeywords) {\n+        this.jsonKeywords = jsonKeywords;\n+    }\n+\n+    @OutputFile\n+    public File getReport() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c63c724dd5404a232e5eddf4cc14770e286b85d"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17126fd5fa0cea08c27fc67e7b41fc381786e985", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/17126fd5fa0cea08c27fc67e7b41fc381786e985", "committedDate": "2020-06-24T09:12:22Z", "message": "Address review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f565d9d1682c0ff1b1d3c50bb814b3fa06d55cc8", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/f565d9d1682c0ff1b1d3c50bb814b3fa06d55cc8", "committedDate": "2020-06-24T20:24:38Z", "message": "Fix running validate-rest-spec for other projects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9da5f05c1c798fc11703c30273ece6efd84f03a", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/a9da5f05c1c798fc11703c30273ece6efd84f03a", "committedDate": "2020-06-24T20:54:18Z", "message": "Another fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 367, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}