{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4ODExNTM3", "number": 51653, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMzo1MzoxOFrODbwjTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMzo1MzoxOFrODbwjTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNDMzNjEyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/slm/SnapshotLifecycleServiceTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMzo1MzoxOFrOFjbewA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowODo1OVrOFjjvrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY5NDcyMA==", "bodyText": "This will eventually fail, the contains matcher requires exact matching; so it'll fail and complain with:\njava.lang.AssertionError: \nExpected: iterable containing [\"foo-2\"]\n     but: item 0: was \"foo-1\"\n\nIt should be changed to check that it has \"foo-2\", but can have anything else also.", "url": "https://github.com/elastic/elasticsearch/pull/51653#discussion_r372694720", "createdAt": "2020-01-29T23:53:18Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/slm/SnapshotLifecycleServiceTests.java", "diffHunk": "@@ -206,13 +207,20 @@ public void testPolicyCRUD() throws Exception {\n             sls.clusterChanged(event);\n             assertThat(sls.getScheduler().scheduledJobIds(), equalTo(Collections.singleton(\"foo-2\")));\n \n+            CopyOnWriteArrayList<String> triggeredJobs = new CopyOnWriteArrayList<>();\n             trigger.set(e -> {\n-                // Make sure the job got updated\n-                assertThat(e.getJobName(), equalTo(\"foo-2\"));\n+                triggeredJobs.add(e.getJobName());\n                 triggerCount.incrementAndGet();\n             });\n             clock.fastForwardSeconds(1);\n \n+            // Let's make sure the job got updated\n+            // We don't simply assert that triggeredJobs has one element with value \"foo-2\" because of a race condition that can see the\n+            // list containing <foo-2, foo-1>. This can happen because when we update the policy to version 2 (ie. to foo-2) we will\n+            // cancel the existing policy (foo-1) without waiting for the thread executing foo-1 to actually interrupt\n+            // (see org.elasticsearch.common.util.concurrent.FutureUtils#cancel) which means that foo-1 could actually get to be\n+            // rescheduled and re-run before it is indeed cancelled.\n+            assertBusy(() -> assertThat(triggeredJobs, contains(\"foo-2\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f4d868d9edc1e00b0ae5ffb11e967f55df32958"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzMDEyNQ==", "bodyText": "Ah, that's correct (and why it hadn't failed locally - contains is very much overloaded)\nThanks @dakrone , I pushed a fix to use hasItem", "url": "https://github.com/elastic/elasticsearch/pull/51653#discussion_r372830125", "createdAt": "2020-01-30T09:08:59Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/slm/SnapshotLifecycleServiceTests.java", "diffHunk": "@@ -206,13 +207,20 @@ public void testPolicyCRUD() throws Exception {\n             sls.clusterChanged(event);\n             assertThat(sls.getScheduler().scheduledJobIds(), equalTo(Collections.singleton(\"foo-2\")));\n \n+            CopyOnWriteArrayList<String> triggeredJobs = new CopyOnWriteArrayList<>();\n             trigger.set(e -> {\n-                // Make sure the job got updated\n-                assertThat(e.getJobName(), equalTo(\"foo-2\"));\n+                triggeredJobs.add(e.getJobName());\n                 triggerCount.incrementAndGet();\n             });\n             clock.fastForwardSeconds(1);\n \n+            // Let's make sure the job got updated\n+            // We don't simply assert that triggeredJobs has one element with value \"foo-2\" because of a race condition that can see the\n+            // list containing <foo-2, foo-1>. This can happen because when we update the policy to version 2 (ie. to foo-2) we will\n+            // cancel the existing policy (foo-1) without waiting for the thread executing foo-1 to actually interrupt\n+            // (see org.elasticsearch.common.util.concurrent.FutureUtils#cancel) which means that foo-1 could actually get to be\n+            // rescheduled and re-run before it is indeed cancelled.\n+            assertBusy(() -> assertThat(triggeredJobs, contains(\"foo-2\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY5NDcyMA=="}, "originalCommit": {"oid": "4f4d868d9edc1e00b0ae5ffb11e967f55df32958"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 128, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}