{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMDY3Nzcw", "number": 59693, "title": "Fix DLS/FLS permission for the submit async search action", "bodyText": "The submit async search action should not populate the thread context DLS/FLS permission set, because\nit is not currently authorised as an \"indices request\" and hence the permission set that it builds is incomplete\nand it overrides the DLS/FLS permission set of the actual spawned search request (which is built correctly).\nRelated #58942", "createdAt": "2020-07-16T10:04:50Z", "url": "https://github.com/elastic/elasticsearch/pull/59693", "merged": true, "mergeCommit": {"oid": "d31808de80f368263a84617b99fd7f404058d2f0"}, "closed": true, "closedAt": "2020-07-20T05:44:55Z", "author": {"login": "albertzaharovits"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1aXEkAH2gAyNDUwMDY3NzcwOmU5MTllNWZjM2FkYjNmMTg1ZWMyMjYzYjU5OGMxYzA5NjQ1MDY5Njc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2ngSAgFqTQ1MTIxODExMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e919e5fc3adb3f185ec2263b598c1c0964506967", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/e919e5fc3adb3f185ec2263b598c1c0964506967", "committedDate": "2020-07-16T07:46:48Z", "message": "Main"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "995f2fe7c6870c9c55358124e61330560d6d0f2c", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/995f2fe7c6870c9c55358124e61330560d6d0f2c", "committedDate": "2020-07-16T09:51:58Z", "message": "Integ Test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNDEwOTM4", "url": "https://github.com/elastic/elasticsearch/pull/59693#pullrequestreview-450410938", "createdAt": "2020-07-17T06:47:00Z", "commit": {"oid": "995f2fe7c6870c9c55358124e61330560d6d0f2c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0NzowMFrOGzHWJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0OTo0OFrOGzHaew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MDkxNg==", "bodyText": "Speaking from personal preference, I think this is trying too hard to use a Matcher, and it would be more readable to use a different style.\nFor example, we know exactly what results are expected, so we can check the number of hits & then we can sort the hits and check that each element is what we expect it to be.\nAlso, I may be mistaken because all the casting of JSON is a bit hard to read, but I think you have a type mismatch here.\nIf hits is List<Map<String, Map<String, Object>>>\nthen each element is Map<String, Map<String, Object>>\nbut in the Matcher, you cast actual to Map<String, Object> and check that some of the values are strings.\nI think hits needs to be List<Map<String, ?>> or List<Map<String, Object>>", "url": "https://github.com/elastic/elasticsearch/pull/59693#discussion_r456250916", "createdAt": "2020-07-17T06:47:00Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/async-search/qa/security/src/test/java/org/elasticsearch/xpack/search/AsyncSearchSecurityIT.java", "diffHunk": "@@ -57,9 +63,64 @@ public void indexDocuments() throws IOException {\n \n         createIndex(\"index-user2\", Settings.EMPTY);\n         index(\"index-user2\", \"0\", \"foo\", \"bar\");\n+        index(\"index-user2\", \"1\", \"bar\", \"baz\");\n         refresh(\"index-user2\");\n     }\n \n+    public void testWithDlsAndFls() throws Exception {\n+        Response submitResp = submitAsyncSearch(\"*\", \"*\", TimeValue.timeValueSeconds(10), \"user_dls\");\n+        assertOK(submitResp);\n+        Map<String, Object> submitRespMap = toMap(submitResp);\n+        List<Map<String, Map<String, Object>>> hits = extractHits(submitRespMap);\n+        assertThat(hits, contains(new BaseMatcher<>() {\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public boolean matches(Object actual) {\n+                if (actual instanceof Map) {\n+                    Map<String, Object> searchHit = (Map<String, Object>) actual;\n+                    return \"index\".equals(searchHit.get(\"_index\")) &&\n+                            \"1\".equals(searchHit.get(\"_id\")) &&\n+                            ((Map<String, Object>) searchHit.get(\"_source\")).isEmpty();\n+                }\n+                return false;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "995f2fe7c6870c9c55358124e61330560d6d0f2c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MTQyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                // the same as the user that submitted the original request so we can skip security here.\n          \n          \n            \n                                // the same as the user that submitted the original request so no additional checks are needed here.", "url": "https://github.com/elastic/elasticsearch/pull/59693#discussion_r456251425", "createdAt": "2020-07-17T06:48:20Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/RBACEngine.java", "diffHunk": "@@ -269,8 +269,14 @@ public void authorizeIndexAction(RequestInfo requestInfo, AuthorizationInfo auth\n                     listener.onResponse(new IndexAuthorizationResult(true, IndicesAccessControl.ALLOW_NO_INDICES));\n                 }\n             } else if (isAsyncRelatedAction(action)) {\n-                //index-level permissions are handled by the search action that is triggered internally by the submit API.\n-                listener.onResponse(new IndexAuthorizationResult(true, IndicesAccessControl.ALLOW_NO_INDICES));\n+                if (SubmitAsyncSearchAction.NAME.equals(action)) {\n+                    // authorize submit async search but don't fill in the DLS/FLS permissions\n+                    listener.onResponse(new IndexAuthorizationResult(true, null));\n+                } else {\n+                    // async-search actions other than submit have a custom security layer that checks if the current user is\n+                    // the same as the user that submitted the original request so we can skip security here.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "995f2fe7c6870c9c55358124e61330560d6d0f2c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MjAyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                // authorize submit async search but don't fill in the DLS/FLS permissions\n          \n          \n            \n                                // authorize submit async search but don't fill in the DLS/FLS permissions\n          \n          \n            \n                                // the null IndicesAccessControl parameter indicates that this action has *not* determined \n          \n          \n            \n                                // which DLS/FLS controls should be applied to this action", "url": "https://github.com/elastic/elasticsearch/pull/59693#discussion_r456252027", "createdAt": "2020-07-17T06:49:48Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/RBACEngine.java", "diffHunk": "@@ -269,8 +269,14 @@ public void authorizeIndexAction(RequestInfo requestInfo, AuthorizationInfo auth\n                     listener.onResponse(new IndexAuthorizationResult(true, IndicesAccessControl.ALLOW_NO_INDICES));\n                 }\n             } else if (isAsyncRelatedAction(action)) {\n-                //index-level permissions are handled by the search action that is triggered internally by the submit API.\n-                listener.onResponse(new IndexAuthorizationResult(true, IndicesAccessControl.ALLOW_NO_INDICES));\n+                if (SubmitAsyncSearchAction.NAME.equals(action)) {\n+                    // authorize submit async search but don't fill in the DLS/FLS permissions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "995f2fe7c6870c9c55358124e61330560d6d0f2c"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNDY0ODQy", "url": "https://github.com/elastic/elasticsearch/pull/59693#pullrequestreview-450464842", "createdAt": "2020-07-17T08:21:06Z", "commit": {"oid": "995f2fe7c6870c9c55358124e61330560d6d0f2c"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a7f56240684f130e26f50f70bc9a0db260cd342", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/8a7f56240684f130e26f50f70bc9a0db260cd342", "committedDate": "2020-07-17T09:42:29Z", "message": "Merge branch 'master' into authz_submit_async_for_DLS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2eb976bce4064b3becf6978344e122fce0305f78", "author": {"user": {"login": "albertzaharovits", "name": "Albert Zaharovits"}}, "url": "https://github.com/elastic/elasticsearch/commit/2eb976bce4064b3becf6978344e122fce0305f78", "committedDate": "2020-07-17T12:11:25Z", "message": "Review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNjIzMjMx", "url": "https://github.com/elastic/elasticsearch/pull/59693#pullrequestreview-450623231", "createdAt": "2020-07-17T12:42:14Z", "commit": {"oid": "2eb976bce4064b3becf6978344e122fce0305f78"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMjE4MTEx", "url": "https://github.com/elastic/elasticsearch/pull/59693#pullrequestreview-451218111", "createdAt": "2020-07-20T01:39:33Z", "commit": {"oid": "2eb976bce4064b3becf6978344e122fce0305f78"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4275, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}