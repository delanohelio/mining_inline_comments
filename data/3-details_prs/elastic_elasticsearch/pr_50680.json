{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NjYzNTMy", "number": 50680, "title": "[ML][Inference] Add support for models shipped as resources", "bodyText": "This adds support for models that are shipped as resources in the ML plugin. The first of which is the lang_ident model.\nExample usage:\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"inference\": {\n          \"model_id\": \"lang_ident_model_1\",\n          \"inference_config\": {\n            \"classification\": {\n              \"num_top_classes\": 1\n            }\n          },\n          \"field_mappings\": {\n          }\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\"_source\": {\"text\": \"this is some free text.\"}},\n    {\"_source\": {\"text\": \"c'est du texte libre.\"}},\n    {\"_source\": {\"text\": \"Dies ist ein Freitext.\"}},\n    {\"_source\": {\"text\": \"\u3053\u308c\u306f\u30d5\u30ea\u30fc\u30c6\u30ad\u30b9\u30c8\u3067\u3059\u3002\"}},\n    {\"_source\": {\"text\": \"\u06cc\u06c1 \u06a9\u0686\u06be \u0645\u0641\u062a \u0645\u062a\u0646 \u06c1\u06d2\u06d4\"}}\n    ]\n}\n\nResponse\n{\n  \"docs\" : [\n    {\n      \"doc\" : {\n        \"_index\" : \"_index\",\n        \"_id\" : \"_id\",\n        \"_source\" : {\n          \"text\" : \"this is some free text.\",\n          \"ml\" : {\n            \"inference\" : {\n              \"top_classes\" : [\n                {\n                  \"classification\" : \"en\",\n                  \"probability\" : 0.9999832919481261\n                }\n              ],\n              \"predicted_value\" : \"en\",\n              \"model_id\" : \"lang_ident_model_1\"\n            }\n          }\n        },\n        \"_ingest\" : {\n          \"timestamp\" : \"2020-01-06T19:26:23.6988Z\"\n        }\n      }\n    },\n    {\n      \"doc\" : {\n        \"_index\" : \"_index\",\n        \"_id\" : \"_id\",\n        \"_source\" : {\n          \"text\" : \"c'est du texte libre.\",\n          \"ml\" : {\n            \"inference\" : {\n              \"top_classes\" : [\n                {\n                  \"classification\" : \"fr\",\n                  \"probability\" : 0.996991483545992\n                }\n              ],\n              \"predicted_value\" : \"fr\",\n              \"model_id\" : \"lang_ident_model_1\"\n            }\n          }\n        },\n        \"_ingest\" : {\n          \"timestamp\" : \"2020-01-06T19:26:23.698808Z\"\n        }\n      }\n    },\n    {\n      \"doc\" : {\n        \"_index\" : \"_index\",\n        \"_id\" : \"_id\",\n        \"_source\" : {\n          \"text\" : \"Dies ist ein Freitext.\",\n          \"ml\" : {\n            \"inference\" : {\n              \"top_classes\" : [\n                {\n                  \"classification\" : \"de\",\n                  \"probability\" : 0.9999995801281829\n                }\n              ],\n              \"predicted_value\" : \"de\",\n              \"model_id\" : \"lang_ident_model_1\"\n            }\n          }\n        },\n        \"_ingest\" : {\n          \"timestamp\" : \"2020-01-06T19:26:23.69881Z\"\n        }\n      }\n    },\n    {\n      \"doc\" : {\n        \"_index\" : \"_index\",\n        \"_id\" : \"_id\",\n        \"_source\" : {\n          \"text\" : \"\u3053\u308c\u306f\u30d5\u30ea\u30fc\u30c6\u30ad\u30b9\u30c8\u3067\u3059\u3002\",\n          \"ml\" : {\n            \"inference\" : {\n              \"top_classes\" : [\n                {\n                  \"classification\" : \"ja\",\n                  \"probability\" : 0.999997979528696\n                }\n              ],\n              \"predicted_value\" : \"ja\",\n              \"model_id\" : \"lang_ident_model_1\"\n            }\n          }\n        },\n        \"_ingest\" : {\n          \"timestamp\" : \"2020-01-06T19:26:23.69882Z\"\n        }\n      }\n    },\n    {\n      \"doc\" : {\n        \"_index\" : \"_index\",\n        \"_id\" : \"_id\",\n        \"_source\" : {\n          \"text\" : \"\u06cc\u06c1 \u06a9\u0686\u06be \u0645\u0641\u062a \u0645\u062a\u0646 \u06c1\u06d2\u06d4\",\n          \"ml\" : {\n            \"inference\" : {\n              \"top_classes\" : [\n                {\n                  \"classification\" : \"ur\",\n                  \"probability\" : 0.9999762917090316\n                }\n              ],\n              \"predicted_value\" : \"ur\",\n              \"model_id\" : \"lang_ident_model_1\"\n            }\n          }\n        },\n        \"_ingest\" : {\n          \"timestamp\" : \"2020-01-06T19:26:23.698823Z\"\n        }\n      }\n    }\n  ]\n}", "createdAt": "2020-01-06T18:46:59Z", "url": "https://github.com/elastic/elasticsearch/pull/50680", "merged": true, "mergeCommit": {"oid": "d1f317be22805e73a787b2285d9540a930fb94ab"}, "closed": true, "closedAt": "2020-01-07T13:21:21Z", "author": {"login": "benwtrent"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3wlYLAH2gAyMzU5NjYzNTMyOmJjNTNjMWZhYTMwZGU4MTRiNzViZWNhMTFhNTg1YTQ4ZTFlZTJkOTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb3_2qEgH2gAyMzU5NjYzNTMyOmMyYmViNDdhODQxNzRiYzBkY2EyM2E2NWY1OTBjNTgzNDY5NDJhY2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bc53c1faa30de814b75beca11a585a48e1ee2d93", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/bc53c1faa30de814b75beca11a585a48e1ee2d93", "committedDate": "2020-01-06T18:37:02Z", "message": "[ML][Inference] Add support for models shipped as resources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "876d03139c48627df3121418a72901f1e2543478", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/876d03139c48627df3121418a72901f1e2543478", "committedDate": "2020-01-06T20:28:33Z", "message": "addressing test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6973454b91555f6af06ee10f2aa9974db3e92c7", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/e6973454b91555f6af06ee10f2aa9974db3e92c7", "committedDate": "2020-01-06T21:17:47Z", "message": "fixing yaml test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTQwOTkx", "url": "https://github.com/elastic/elasticsearch/pull/50680#pullrequestreview-339140991", "createdAt": "2020-01-07T10:08:17Z", "commit": {"oid": "e6973454b91555f6af06ee10f2aa9974db3e92c7"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDozODoxMFrOFa1vmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDo1Nzo0MlrOFa2M-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY4NzgzMw==", "bodyText": "You can remove one of these sets. The only use of matchedResourceModels is to read its size in the next line at which point both sets are the same size", "url": "https://github.com/elastic/elasticsearch/pull/50680#discussion_r363687833", "createdAt": "2020-01-07T10:38:10Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -359,8 +408,9 @@ public void expandIds(String idExpression,\n             searchRequest,\n             ActionListener.<SearchResponse>wrap(\n                 response -> {\n-                    Set<String> foundResourceIds = new LinkedHashSet<>();\n-                    long totalHitCount = response.getHits().getTotalHits().value;\n+                    Set<String> matchedResourceModels = matchedResourceIds(tokens);\n+                    Set<String> foundResourceIds = new LinkedHashSet<>(matchedResourceModels);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6973454b91555f6af06ee10f2aa9974db3e92c7"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY5NTM1NA==", "bodyText": "nit assertThrows is a neater way of doing this and more idiomatic", "url": "https://github.com/elastic/elasticsearch/pull/50680#discussion_r363695354", "createdAt": "2020-01-07T10:57:42Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProviderTests.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ml.inference.persistence;\n+\n+import org.elasticsearch.action.support.PlainActionFuture;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.test.ESTestCase;\n+import org.elasticsearch.xpack.core.ml.inference.MlInferenceNamedXContentProvider;\n+import org.elasticsearch.xpack.core.ml.inference.TrainedModelConfig;\n+import org.elasticsearch.xpack.core.ml.inference.TrainedModelConfigTests;\n+import org.elasticsearch.xpack.core.ml.job.messages.Messages;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.not;\n+import static org.hamcrest.Matchers.nullValue;\n+import static org.mockito.Mockito.mock;\n+\n+public class TrainedModelProviderTests extends ESTestCase {\n+\n+    public void testDeleteModelStoredAsResource() {\n+        TrainedModelProvider trainedModelProvider = new TrainedModelProvider(mock(Client.class), xContentRegistry());\n+        PlainActionFuture<Boolean> future = new PlainActionFuture<>();\n+        // Should be OK as we don't make any client calls\n+        trainedModelProvider.deleteTrainedModel(\"lang_ident_model_1\", future);\n+        try {\n+            future.actionGet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6973454b91555f6af06ee10f2aa9974db3e92c7"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2beb47a84174bc0dca23a65f590c58346942acc", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/c2beb47a84174bc0dca23a65f590c58346942acc", "committedDate": "2020-01-07T12:24:29Z", "message": "fixing up tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3852, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}