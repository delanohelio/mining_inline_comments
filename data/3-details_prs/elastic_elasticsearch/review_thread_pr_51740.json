{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NTc5NTcw", "number": 51740, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDo0OToyNVrODcQkVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDo0OToyNVrODcQkVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwOTU4MTY2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/BasicDistributedJobsIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDo0OToyNVrOFkNrqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDo0OToyNVrOFkNrqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUxNzIyNQ==", "bodyText": "Since both classes where this has been added extend BaseMlIntegTestCase it's probably worth putting this code in a utility method in that base class.\nI also wonder if NetworkDisruptionIT might need it, depending on which random form of network disruption is chosen.  NetworkDisruptionIT.testJobRelocation() contains ensureGreen() calls.  It could be that for certain random number sequences these require a shard to reassign to attain green status.", "url": "https://github.com/elastic/elasticsearch/pull/51740#discussion_r373517225", "createdAt": "2020-01-31T14:49:25Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/BasicDistributedJobsIT.java", "diffHunk": "@@ -68,6 +70,11 @@ public void testFailOverBasics() throws Exception {\n         client().execute(OpenJobAction.INSTANCE, openJobRequest).actionGet();\n         awaitJobOpenedAndAssigned(job.getId(), null);\n \n+        // always default delayed allocation to 0 to make sure we have tests are not delayed\n+        client().admin().indices().updateSettings(new UpdateSettingsRequest(\".ml-*\")\n+            .settings(Settings.builder().put(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING.getKey(), 0).build()))\n+            .actionGet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5034044539d3961076b7614a9d3664e72d847a4"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 9, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}