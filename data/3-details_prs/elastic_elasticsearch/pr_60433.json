{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NzUxNzY3", "number": 60433, "title": "Enhance the ingest node simulate verbose output ", "bodyText": "This commit enhances the verbose output for the\n_ingest/pipeline/_simulate?verbose api. Specifically\nthis adds the following:\n\nthe pipeline processor is now included in the output\nthe conditional (if) and result is now included in the output iff it was defined\na status field is always displayed. the possible values of status are\n\nsuccess - if the processor ran with out errors\nerror - if the processor ran but threw an error that was not ingored\nerror_ignored - if the processor ran but threw an error that was ingored\nskipped - if the process did not run (currently only possible if the if condition evaluates to false)\ndropped - if the the drop processor ran and dropped the document\n\n\na processor_type field for the type of processor (e.g. set, rename, etc.)\nthrow a better error if trying to simulate with a pipeline that does not exist\n\ncloses #56004\n===========\nExample input:\nPOST _ingest/pipeline/_simulate?verbose\n{\n  \"pipeline\": {\n    \"description\": \"_description\",\n    \"processors\": [\n      {\n        \"set\": {\n          \"description\": \"processor_description\",\n          \"tag\": \"processor_tag\",\n          \"field\": \"field1\",\n          \"value\": \"value1\"\n        }\n      },\n      {\n        \"rename\": {\n          \"field\": \"dont_exist\",\n          \"target_field\": \"field1\",\n          \"ignore_failure\": true\n        }\n      },\n      {\n        \"rename\": {\n          \"tag\": \"rename-1\",\n          \"field\": \"foofield\",\n          \"target_field\": \"field1\",\n          \"on_failure\": [\n            {\n              \"set\": {\n                \"field\": \"field2\",\n                \"value\": \"value2\"\n              }\n            }\n          ]\n        }\n      },\n      {\n        \"drop\": {\n          \"if\": \"false\"\n        }\n      },\n      {\n        \"drop\": {\n          \"if\": \"true\"\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_index\": \"index\",\n      \"_id\": \"id\",\n      \"_source\": {\n        \"foo\": \"bar\"\n      }\n    }\n  ]\n}\n\nExample output:\n{\n  \"docs\" : [\n    {\n      \"processor_results\" : [\n        {\n          \"processor_type\" : \"set\",\n          \"status\" : \"success\",\n          \"description\" : \"processor_description\",\n          \"tag\" : \"processor_tag\",\n          \"doc\" : {\n            \"_index\" : \"index\",\n            \"_id\" : \"id\",\n            \"_source\" : {\n              \"field1\" : \"value1\",\n              \"foo\" : \"bar\"\n            },\n            \"_ingest\" : {\n              \"pipeline\" : \"_simulate_pipeline\",\n              \"timestamp\" : \"2020-07-30T01:06:43.961586Z\"\n            }\n          }\n        },\n        {\n          \"processor_type\" : \"rename\",\n          \"status\" : \"error_ignored\",\n          \"ignored_error\" : {\n            \"error\" : {\n              \"root_cause\" : [\n                {\n                  \"type\" : \"illegal_argument_exception\",\n                  \"reason\" : \"field [dont_exist] doesn't exist\"\n                }\n              ],\n              \"type\" : \"illegal_argument_exception\",\n              \"reason\" : \"field [dont_exist] doesn't exist\"\n            }\n          },\n          \"doc\" : {\n            \"_index\" : \"index\",\n            \"_id\" : \"id\",\n            \"_source\" : {\n              \"field1\" : \"value1\",\n              \"foo\" : \"bar\"\n            },\n            \"_ingest\" : {\n              \"pipeline\" : \"_simulate_pipeline\",\n              \"timestamp\" : \"2020-07-30T01:06:43.961586Z\"\n            }\n          }\n        },\n        {\n          \"processor_type\" : \"rename\",\n          \"status\" : \"error\",\n          \"tag\" : \"rename-1\",\n          \"error\" : {\n            \"root_cause\" : [\n              {\n                \"type\" : \"illegal_argument_exception\",\n                \"reason\" : \"field [foofield] doesn't exist\"\n              }\n            ],\n            \"type\" : \"illegal_argument_exception\",\n            \"reason\" : \"field [foofield] doesn't exist\"\n          }\n        },\n        {\n          \"processor_type\" : \"set\",\n          \"status\" : \"success\",\n          \"doc\" : {\n            \"_index\" : \"index\",\n            \"_id\" : \"id\",\n            \"_source\" : {\n              \"field1\" : \"value1\",\n              \"field2\" : \"value2\",\n              \"foo\" : \"bar\"\n            },\n            \"_ingest\" : {\n              \"pipeline\" : \"_simulate_pipeline\",\n              \"on_failure_message\" : \"field [foofield] doesn't exist\",\n              \"on_failure_processor_tag\" : \"rename-1\",\n              \"timestamp\" : \"2020-07-30T01:06:43.961586Z\",\n              \"on_failure_processor_type\" : \"rename\"\n            }\n          }\n        },\n        {\n          \"processor_type\" : \"drop\",\n          \"status\" : \"skipped\",\n          \"if\" : {\n            \"condition\" : \"false\",\n            \"result\" : false\n          }\n        },\n        {\n          \"processor_type\" : \"drop\",\n          \"status\" : \"dropped\",\n          \"if\" : {\n            \"condition\" : \"true\",\n            \"result\" : true\n          }\n        }\n      ]\n    }\n  ]\n}", "createdAt": "2020-07-29T22:45:49Z", "url": "https://github.com/elastic/elasticsearch/pull/60433", "merged": true, "mergeCommit": {"oid": "35fc9979432e5f726c9b72b6a296fdc03cf4e9ec"}, "closed": true, "closedAt": "2020-08-04T18:09:09Z", "author": {"login": "jakelandis"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcr8-0ugH2gAyNDU4NzUxNzY3OmE4YTlkODc3ZmY4Y2M1NGUyMzlkNWE3ZDI2MWI4OGY2ZDgxNGU2ZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7pG5HgH2gAyNDU4NzUxNzY3OmRjOTNlYzNiODM0ODU5OTEyOTMyODcxODViOWM2YzA3MjBiNjEyMjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a8a9d877ff8cc54e239d5a7d261b88f6d814e6d8", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/a8a9d877ff8cc54e239d5a7d261b88f6d814e6d8", "committedDate": "2020-06-16T22:27:45Z", "message": "Per processor description for verbose simulate\n\nFor ingest node processors a per processor description\nwas recently added. This commit displays that description\nin the verbose output of the pipeline simulation.\n\nrelated #57906"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6078c45258af12bcaf8e561333b25b0de67909df", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/6078c45258af12bcaf8e561333b25b0de67909df", "committedDate": "2020-06-17T22:48:34Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aacbf21ed5524202d3b07562322689191d8bcc20", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/aacbf21ed5524202d3b07562322689191d8bcc20", "committedDate": "2020-07-21T16:55:58Z", "message": "Merge branch 'master' into show_conditional"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5498e030298de271f7928ef3943500bb54d485d", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/c5498e030298de271f7928ef3943500bb54d485d", "committedDate": "2020-07-21T19:52:16Z", "message": "Merge remote-tracking branch 'upstream/master' into show_conditional"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12979f669592f5020eb77f520ad769e3dd644a41", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/12979f669592f5020eb77f520ad769e3dd644a41", "committedDate": "2020-07-29T15:57:57Z", "message": "tests pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e991b4171bc989bb10cf9f84dc9a790fb684d26", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/0e991b4171bc989bb10cf9f84dc9a790fb684d26", "committedDate": "2020-07-29T15:59:47Z", "message": "Merge branch 'master' into show_conditional"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf599eef92243257e9518e5217ebcc9701e33bb3", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf599eef92243257e9518e5217ebcc9701e33bb3", "committedDate": "2020-07-29T17:22:28Z", "message": "serialization fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbfc56644ad3050df5cd1648f221321de3c8a95b", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/fbfc56644ad3050df5cd1648f221321de3c8a95b", "committedDate": "2020-07-29T17:40:30Z", "message": "test status"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4441ff3ebf4909b014891ca3807dad9cbccb5937", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/4441ff3ebf4909b014891ca3807dad9cbccb5937", "committedDate": "2020-07-29T17:55:20Z", "message": "minor clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a581610df20e36112db4d75bddfc26d05a6f91f", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/5a581610df20e36112db4d75bddfc26d05a6f91f", "committedDate": "2020-07-29T18:42:56Z", "message": "minor testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db354e4ceafec487f2c14bc75df2b099ae8f76f5", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/db354e4ceafec487f2c14bc75df2b099ae8f76f5", "committedDate": "2020-07-29T21:34:55Z", "message": "fix showing of pipeline processor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c97e5ab6bfe26dbc7a361ef6446a9bebcf43da65", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/c97e5ab6bfe26dbc7a361ef6446a9bebcf43da65", "committedDate": "2020-07-29T21:41:50Z", "message": "precomit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1a65e5fa499a6279c9800ce15a7dfbd890f5b00", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/e1a65e5fa499a6279c9800ce15a7dfbd890f5b00", "committedDate": "2020-07-29T22:41:01Z", "message": "handle non-existant pipeline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b1f3da8c848ae0ce9a6822dc2de3057c8228b17", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/2b1f3da8c848ae0ce9a6822dc2de3057c8228b17", "committedDate": "2020-07-30T00:12:39Z", "message": "fix existing yaml tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79bb3fbb19a33ffa6aed17a8d7051625c5d6c680", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/79bb3fbb19a33ffa6aed17a8d7051625c5d6c680", "committedDate": "2020-07-30T00:30:09Z", "message": "add no pipeline test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a829e38df52bef36497550af524255a4d72e925f", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/a829e38df52bef36497550af524255a4d72e925f", "committedDate": "2020-07-30T00:56:02Z", "message": "add a bit of coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "374b7ae44efc0149a08094d749a85c6ce92baba9", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/374b7ae44efc0149a08094d749a85c6ce92baba9", "committedDate": "2020-07-30T00:56:21Z", "message": "Merge remote-tracking branch 'upstream/master' into show_conditional"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTkzOTkw", "url": "https://github.com/elastic/elasticsearch/pull/60433#pullrequestreview-457993990", "createdAt": "2020-07-30T00:58:01Z", "commit": {"oid": "374b7ae44efc0149a08094d749a85c6ce92baba9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1ODowMVrOG5PSjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1ODowMVrOG5PSjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MjUyNw==", "bodyText": "because we now always return status and processor_type", "url": "https://github.com/elastic/elasticsearch/pull/60433#discussion_r462672527", "createdAt": "2020-07-30T00:58:01Z", "author": {"login": "jakelandis"}, "path": "modules/ingest-common/src/yamlRestTest/resources/rest-api-spec/test/ingest/90_simulate.yml", "diffHunk": "@@ -591,11 +595,16 @@ teardown:\n           }\n   - length: { docs: 1 }\n   - length: { docs.0.processor_results: 2 }\n+  - length: { docs.0.processor_results.0: 4 }\n   - match: { docs.0.processor_results.0.tag: \"setstatus-1\" }\n+  - match: { docs.0.processor_results.0.status: \"success\" }\n+  - match: { docs.0.processor_results.0.processor_type: \"set\" }\n   - match: { docs.0.processor_results.0.doc._source.field1: \"123.42 400 <foo>\" }\n   - match: { docs.0.processor_results.0.doc._source.status: 200 }\n-  - length: { docs.0.processor_results.1: 2 }\n+  - length: { docs.0.processor_results.1: 4 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374b7ae44efc0149a08094d749a85c6ce92baba9"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTk0MjI4", "url": "https://github.com/elastic/elasticsearch/pull/60433#pullrequestreview-457994228", "createdAt": "2020-07-30T00:58:54Z", "commit": {"oid": "374b7ae44efc0149a08094d749a85c6ce92baba9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1ODo1NFrOG5PTbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1ODo1NFrOG5PTbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3Mjc0OA==", "bodyText": "because we now show the pipeline processor in the results", "url": "https://github.com/elastic/elasticsearch/pull/60433#discussion_r462672748", "createdAt": "2020-07-30T00:58:54Z", "author": {"login": "jakelandis"}, "path": "modules/ingest-common/src/yamlRestTest/resources/rest-api-spec/test/ingest/90_simulate.yml", "diffHunk": "@@ -731,16 +741,25 @@ teardown:\n           ]\n         }\n - length: { docs: 1 }\n-- length: { docs.0.processor_results: 3 }\n+- length: { docs.0.processor_results: 5 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374b7ae44efc0149a08094d749a85c6ce92baba9"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTk1MTg2", "url": "https://github.com/elastic/elasticsearch/pull/60433#pullrequestreview-457995186", "createdAt": "2020-07-30T01:02:01Z", "commit": {"oid": "374b7ae44efc0149a08094d749a85c6ce92baba9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMTowMjowMlrOG5PW2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMTowMjowMlrOG5PW2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MzYyNQ==", "bodyText": "I think we never added the pipeline processor in the past because there would have been nothing to display, but now that we always show the type (pipeline) and status (i.e. success) there is something to display, so this line is what adds this to the output. The addition of this output caused a few tests to need to be updated", "url": "https://github.com/elastic/elasticsearch/pull/60433#discussion_r462673625", "createdAt": "2020-07-30T01:02:02Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/ingest/TrackingResultProcessor.java", "diffHunk": "@@ -58,24 +65,32 @@ public void execute(IngestDocument ingestDocument, BiConsumer<IngestDocument, Ex\n             Pipeline pipeline = pipelineProcessor.getPipeline(ingestDocument);\n             //runtime check for cycles against a copy of the document. This is needed to properly handle conditionals around pipelines\n             IngestDocument ingestDocumentCopy = new IngestDocument(ingestDocument);\n-            ingestDocumentCopy.executePipeline(pipelineProcessor.getPipeline(ingestDocument), (result, e) -> {\n+            Pipeline pipelineToCall = pipelineProcessor.getPipeline(ingestDocument);\n+            if (pipelineToCall == null) {\n+                throw new IllegalArgumentException(\"Pipeline processor configured for non-existent pipeline [\" +\n+                    pipelineProcessor.getPipelineToCallName(ingestDocument) + ']');\n+            }\n+            ingestDocumentCopy.executePipeline(pipelineToCall, (result, e) -> {\n                 // do nothing, let the tracking processors throw the exception while recording the path up to the failure\n                 if (e instanceof ElasticsearchException) {\n                     ElasticsearchException elasticsearchException = (ElasticsearchException) e;\n                     //else do nothing, let the tracking processors throw the exception while recording the path up to the failure\n                     if (elasticsearchException.getCause() instanceof IllegalStateException) {\n                         if (ignoreFailure) {\n-                            processorResultList.add(new SimulateProcessorResult(pipelineProcessor.getTag(),\n-                                pipelineProcessor.getDescription(), new IngestDocument(ingestDocument), e));\n+                            processorResultList.add(new SimulateProcessorResult(pipelineProcessor.getType(), pipelineProcessor.getTag(),\n+                                pipelineProcessor.getDescription(), new IngestDocument(ingestDocument), e, conditionalWithResult));\n                         } else {\n-                            processorResultList.add(new SimulateProcessorResult(pipelineProcessor.getTag(),\n-                                pipelineProcessor.getDescription(), e));\n+                            processorResultList.add(new SimulateProcessorResult(pipelineProcessor.getType(), pipelineProcessor.getTag(),\n+                                pipelineProcessor.getDescription(), e, conditionalWithResult));\n                         }\n                         handler.accept(null, elasticsearchException);\n                     }\n                 } else {\n                     //now that we know that there are no cycles between pipelines, decorate the processors for this pipeline and execute it\n                     CompoundProcessor verbosePipelineProcessor = decorate(pipeline.getCompoundProcessor(), null, processorResultList);\n+                    //add the pipeline process to the results\n+                    processorResultList.add(new SimulateProcessorResult(actualProcessor.getType(), actualProcessor.getTag(),\n+                        actualProcessor.getDescription(), conditionalWithResult));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374b7ae44efc0149a08094d749a85c6ce92baba9"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb3d4a02d9210e466c067a3d36fde9cd03e3b4bb", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/cb3d4a02d9210e466c067a3d36fde9cd03e3b4bb", "committedDate": "2020-07-30T01:29:13Z", "message": "fix doc test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwODkyNzE5", "url": "https://github.com/elastic/elasticsearch/pull/60433#pullrequestreview-460892719", "createdAt": "2020-08-04T14:53:31Z", "commit": {"oid": "cb3d4a02d9210e466c067a3d36fde9cd03e3b4bb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDo1MzozMVrOG7kK4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDo1MzozMVrOG7kK4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTExMTc3Ng==", "bodyText": "Seems like this could be a local variable in the execute function?", "url": "https://github.com/elastic/elasticsearch/pull/60433#discussion_r465111776", "createdAt": "2020-08-04T14:53:31Z", "author": {"login": "jbaiera"}, "path": "server/src/main/java/org/elasticsearch/ingest/TrackingResultProcessor.java", "diffHunk": "@@ -35,6 +36,7 @@\n     private final ConditionalProcessor conditionalProcessor;\n     private final List<SimulateProcessorResult> processorResultList;\n     private final boolean ignoreFailure;\n+    private Tuple<String, Boolean> conditionalWithResult = null; //null = no conditional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3d4a02d9210e466c067a3d36fde9cd03e3b4bb"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c26a6b13ffe2500ce1fb8054a7fd97417e984e4", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/5c26a6b13ffe2500ce1fb8054a7fd97417e984e4", "committedDate": "2020-08-04T16:20:58Z", "message": "use local variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc93ec3b83485991293287185b9c6c0720b61228", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/dc93ec3b83485991293287185b9c6c0720b61228", "committedDate": "2020-08-04T16:21:15Z", "message": "Merge remote-tracking branch 'upstream/master' into show_conditional"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3649, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}