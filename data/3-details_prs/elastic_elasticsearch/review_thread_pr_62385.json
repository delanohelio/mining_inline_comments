{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MzIyMDE5", "number": 62385, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNTo1MDozNlrOEjqHDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNTo1MDozNlrOEjqHDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODI1NTUwOnYy", "diffSide": "RIGHT", "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/AppendProcessorTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNTo1MDozNlrOHSIhhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjowNDoyOVrOHSJHKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc3NjA2OA==", "bodyText": "This seems really confusing to me, I think we could do the same thing with:\nint nonexistingValueSize = randomIntBetween(0, 10);\n// generate n new values\nSet<String> newValues = Stream.generate(() -> randomAlphaOfLengthBetween(1, 10)).limit(nonexistingValueSize).collect(Collectors.toSet());\n// create a set using the new values, making sure there are no overlapping values already present in the existing values\nSet<String> nonexistingValues = Sets.difference(newValues, new HashSet<>(existingValues));\nUsing the while loop for this is a bit overkill, I think Sets makes it easier to avoid duplicates", "url": "https://github.com/elastic/elasticsearch/pull/62385#discussion_r488776068", "createdAt": "2020-09-15T15:50:36Z", "author": {"login": "dakrone"}, "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/AppendProcessorTests.java", "diffHunk": "@@ -198,14 +198,21 @@ public void testAppendingToListWithDuplicatesDisallowed() throws Exception {\n         String originalField = RandomDocumentPicks.addRandomField(random(), ingestDocument, list);\n         List<String> expectedValues = new ArrayList<>(list);\n         List<String> existingValues = randomSubsetOf(list);\n-        int uniqueValuesSize = randomIntBetween(0, 10);\n-        List<String> uniqueValues = new ArrayList<>();\n-        for (int i = 0; i < uniqueValuesSize; i++) {\n-            uniqueValues.add(randomAlphaOfLengthBetween(1, 10));\n+        int nonexistingValuesSize = randomIntBetween(0, 10);\n+        List<String> nonexistingValues = new ArrayList<>();\n+        for (int i = 0; i < nonexistingValuesSize; i++) {\n+            boolean valueExists = true;\n+            while (valueExists) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "260a61cf131e763d12ffcfc8cd22fe7dc5adc9ac"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc4NTcwNQ==", "bodyText": "Thanks, @dakrone. I simplified the test as you suggested.", "url": "https://github.com/elastic/elasticsearch/pull/62385#discussion_r488785705", "createdAt": "2020-09-15T16:04:29Z", "author": {"login": "danhermann"}, "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/AppendProcessorTests.java", "diffHunk": "@@ -198,14 +198,21 @@ public void testAppendingToListWithDuplicatesDisallowed() throws Exception {\n         String originalField = RandomDocumentPicks.addRandomField(random(), ingestDocument, list);\n         List<String> expectedValues = new ArrayList<>(list);\n         List<String> existingValues = randomSubsetOf(list);\n-        int uniqueValuesSize = randomIntBetween(0, 10);\n-        List<String> uniqueValues = new ArrayList<>();\n-        for (int i = 0; i < uniqueValuesSize; i++) {\n-            uniqueValues.add(randomAlphaOfLengthBetween(1, 10));\n+        int nonexistingValuesSize = randomIntBetween(0, 10);\n+        List<String> nonexistingValues = new ArrayList<>();\n+        for (int i = 0; i < nonexistingValuesSize; i++) {\n+            boolean valueExists = true;\n+            while (valueExists) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc3NjA2OA=="}, "originalCommit": {"oid": "260a61cf131e763d12ffcfc8cd22fe7dc5adc9ac"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1450, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}