{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDYzMjE2", "number": 58156, "title": "Improve role cache efficiency for API key roles", "bodyText": "This PR ensure that same roles are cached only once even when they are from different API keys.\nAPI key role descriptors and limited role descriptors are now saved in Authentication#metadata as raw bytes instead of deserialised Map<String, Object>. Hashes of these bytes are used as keys for API key roles. Only when the required role is not found in the cache, they will be deserialised to build the RoleDescriptors. The deserialisation is directly from raw bytes to RoleDescriptors without going through the current detour of \"bytes -> Map -> bytes -> RoleDescriptors\".\nA major aspect worth attention is BWC, we need:\n\nHandles API key metadata object differently depending on version of the incoming Authentication\nPrepare the outgoing Authentication object differently depending on version of the target Node\n\nOriginally we planned to make v7.9.0 the shim for BWC and ultimately get rid of the BWC code for v8.0.0 and onwards. Unfortunately, this idea of shim does not work for Authentication object. This is because: though we only need to guarantee compatibility between \"current major\" and \"last minor of last major\" for wire communication, we have to cater for much wider version gaps when it comes to persisted data, e.g. at least \"current major\" and \"last major\". Authentication object can be persisted in an index as part of some background job definition, e.g. watcher, CCR etc. This means v8.0.0 may deserialise an old Authentication object from the index and it must be supported. Additionally, when it comes to reindex, it is possible that Authentication objects from even older versions are reindexed into newer ES versions without change. This basically means we have to support older Authentication objects forever. It is an issue that should be re-visited in future.\nResolves: #53939", "createdAt": "2020-06-16T08:39:45Z", "url": "https://github.com/elastic/elasticsearch/pull/58156", "merged": true, "mergeCommit": {"oid": "a28ce1e21c5e23e0efa43ed115be37daa3a94252"}, "closed": true, "closedAt": "2020-07-13T11:23:24Z", "author": {"login": "ywangd"}, "timelineItems": {"totalCount": 46, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrtNUVAH2gAyNDM1MDYzMjE2OjM5MGM0OTliOTI5MTkxNTYzYTQ3MzZkNzViZmZiNGU0Nzg2NTQ5NjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0e6-pgH2gAyNDM1MDYzMjE2OjJiMjBiNDg5MWZjMDE2N2U2NmRjYjE0MTg4YjBkYzJkZGY2NmRiMzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "390c499b929191563a4736d75bffb4e478654961", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/390c499b929191563a4736d75bffb4e478654961", "committedDate": "2020-06-16T04:05:06Z", "message": "Only partially deserialise api key doc during authentication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c353aefa88360ba3855f2f730a1df207c275dc52", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/c353aefa88360ba3855f2f730a1df207c275dc52", "committedDate": "2020-06-16T06:23:30Z", "message": "Improve role cache efficiency and add bwc for API key auth metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46cf4fd63be2c05372ef3d9c11e3288ec0c16657", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/46cf4fd63be2c05372ef3d9c11e3288ec0c16657", "committedDate": "2020-06-16T07:49:18Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1319909f688780aebd6ef9d22a21fcb93394dcf4", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/1319909f688780aebd6ef9d22a21fcb93394dcf4", "committedDate": "2020-06-16T08:36:08Z", "message": "Update bwc version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMjg2MjQ0", "url": "https://github.com/elastic/elasticsearch/pull/58156#pullrequestreview-431286244", "createdAt": "2020-06-16T08:41:40Z", "commit": {"oid": "1319909f688780aebd6ef9d22a21fcb93394dcf4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo0MTo0MFrOGkRSOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo0MTo0MFrOGkRSOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY4NTExNQ==", "bodyText": "I think BWC code is required here so that: if target node is an old version, rewrite the roleDescriptor and limitedRoleDescriptors to be Map<String, Object>.", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r440685115", "createdAt": "2020-06-16T08:41:40Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/SecurityContext.java", "diffHunk": "@@ -145,6 +145,7 @@ public void executeAsUser(User user, Consumer<StoredContext> consumer, Version v\n      * The original context is provided to the consumer. When this method returns, the original context is restored.\n      */\n     public void executeAfterRewritingAuthentication(Consumer<StoredContext> consumer, Version version) {\n+        // TODO: bwc here for API key metadata changes? i.e. deserialize the raw bytes into Map for older node.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1319909f688780aebd6ef9d22a21fcb93394dcf4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1688f97ef7da46c9191b4eb8d586ebae088baa5", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/b1688f97ef7da46c9191b4eb8d586ebae088baa5", "committedDate": "2020-06-16T08:48:19Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMjk3MDI5", "url": "https://github.com/elastic/elasticsearch/pull/58156#pullrequestreview-431297029", "createdAt": "2020-06-16T08:54:44Z", "commit": {"oid": "b1688f97ef7da46c9191b4eb8d586ebae088baa5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1NDo0NVrOGkRzUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1NDo0NVrOGkRzUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5MzU4NA==", "bodyText": "Is it possible that some fields, e.g. version or name, are completely missing from the source document? This parser requires all fields to present (null value is ok but it must present). In current code, all fields do present. I wonder whether this is true for older versions.", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r440693584", "createdAt": "2020-06-16T08:54:45Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ApiKeyService.java", "diffHunk": "@@ -929,4 +969,66 @@ private boolean verify(SecureString password) {\n             return hash != null && cacheHasher.verify(password, hash);\n         }\n     }\n+\n+    public static final class ApiKeyDoc {\n+\n+        static final InstantiatingObjectParser<ApiKeyDoc, Void> PARSER;\n+        static {\n+            InstantiatingObjectParser.Builder<ApiKeyDoc, Void> builder =\n+                InstantiatingObjectParser.builder(\"api_key_doc\", true, ApiKeyDoc.class);\n+            builder.declareString(constructorArg(), new ParseField(\"doc_type\"));\n+            builder.declareLong(constructorArg(), new ParseField(\"creation_time\"));\n+            builder.declareLongOrNull(constructorArg(), -1, new ParseField(\"expiration_time\"));\n+            builder.declareBoolean(constructorArg(), new ParseField(\"api_key_invalidated\"));\n+            builder.declareString(optionalConstructorArg(), new ParseField(\"api_key_hash\"));\n+            builder.declareString(constructorArg(), new ParseField(\"name\"));\n+            builder.declareInt(constructorArg(), new ParseField(\"version\"));\n+            ObjectParserHelper<ApiKeyDoc, Void> parserHelper = new ObjectParserHelper<>();\n+            parserHelper.declareRawObject(builder, optionalConstructorArg(), new ParseField(\"role_descriptors\"));\n+            parserHelper.declareRawObject(builder, constructorArg(), new ParseField(\"limited_by_role_descriptors\"));\n+            parserHelper.declareRawObject(builder, constructorArg(), new ParseField(\"creator\"));\n+            PARSER = builder.build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1688f97ef7da46c9191b4eb8d586ebae088baa5"}, "originalPosition": 228}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f9532bd422d0c95412f63d24a81006276bc276d", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/0f9532bd422d0c95412f63d24a81006276bc276d", "committedDate": "2020-06-16T09:55:43Z", "message": "Fix more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1e128519f38165edf8115a7016670c3db8fd5d8", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/f1e128519f38165edf8115a7016670c3db8fd5d8", "committedDate": "2020-06-16T12:21:30Z", "message": "Add bwc for outgoing requests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9832f50dd31a059555b88efaa859ddb3993d8d6f", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/9832f50dd31a059555b88efaa859ddb3993d8d6f", "committedDate": "2020-06-17T01:07:16Z", "message": "Add more tests for bwc and role cache reuse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2560d8acc141648c6ecb2211ff48dab1a94bf3d", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/d2560d8acc141648c6ecb2211ff48dab1a94bf3d", "committedDate": "2020-06-17T02:06:59Z", "message": "Add mixed cluster bwc test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MzU4MDQ0", "url": "https://github.com/elastic/elasticsearch/pull/58156#pullrequestreview-436358044", "createdAt": "2020-06-24T06:28:46Z", "commit": {"oid": "d2560d8acc141648c6ecb2211ff48dab1a94bf3d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNjoyODo0NlrOGoEoeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTo1NDozNlrOGrXvAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3MjEyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Map<String, Object> rewriteMetadataIfNecessary(Version version, Authentication authentication) {\n          \n          \n            \n                private Map<String, Object> rewriteMetadataIfNecessary(Version streamVersion, Authentication authentication) {\n          \n      \n    \n    \n  \n\nOther names are fine too (serializeVersion, bwcVersion), but I found the if below to be hard to read when it used such a generic name.", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r444672121", "createdAt": "2020-06-24T06:28:46Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/SecurityContext.java", "diffHunk": "@@ -149,8 +156,25 @@ public void executeAfterRewritingAuthentication(Consumer<StoredContext> consumer\n         final Authentication authentication = getAuthentication();\n         try (ThreadContext.StoredContext ignore = threadContext.stashContext()) {\n             setAuthentication(new Authentication(authentication.getUser(), authentication.getAuthenticatedBy(),\n-                authentication.getLookedUpBy(), version, authentication.getAuthenticationType(), authentication.getMetadata()));\n+                authentication.getLookedUpBy(), version, authentication.getAuthenticationType(),\n+                rewriteMetadataIfNecessary(version, authentication)));\n             consumer.accept(original);\n         }\n     }\n+\n+    private Map<String, Object> rewriteMetadataIfNecessary(Version version, Authentication authentication) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2560d8acc141648c6ecb2211ff48dab1a94bf3d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMyMzk2MQ==", "bodyText": "I think it's best if the cache explicitly states that it is an API Key.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final RoleKey roleKey = new RoleKey(Set.of(roleDescriptorsHash), limitedBy ? \"limited_role_desc\" : \"role_desc\");\n          \n          \n            \n                    final RoleKey roleKey = new RoleKey(Set.of(\"apikey:\" + roleDescriptorsHash), limitedBy ? \"apikey_limited_role\" : \"apikey_role\");", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r445323961", "createdAt": "2020-06-25T05:59:45Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/store/CompositeRolesStore.java", "diffHunk": "@@ -295,6 +318,21 @@ private void buildThenMaybeCacheRole(RoleKey roleKey, Collection<RoleDescriptor>\n         }, listener::onFailure));\n     }\n \n+    private void getOrBuildRoleForApiKey(Authentication authentication, boolean limitedBy, ActionListener<Role> roleActionListener) {\n+        final BytesReference roleDescriptorsBytes = apiKeyService.getRoleDescriptorsBytesForApiKey(authentication, limitedBy);\n+        final String roleDescriptorsHash = new String(Hasher.SHA256.hash(new SecureString(roleDescriptorsBytes.toString().toCharArray())));\n+        final RoleKey roleKey = new RoleKey(Set.of(roleDescriptorsHash), limitedBy ? \"limited_role_desc\" : \"role_desc\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2560d8acc141648c6ecb2211ff48dab1a94bf3d"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMyNDc4MA==", "bodyText": "BytesReference.toString() is not guaranteed to be what you want here.\nYou want either utf8ToString or just use the bytes directly.\nI'm not sure whether we really even need to hash these - we can, but it might not be necessary.\nI think the options are either:\n\nDon't bother hashing, but that will mean using a separate cache for API key roles (because the cache key is different)\n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final String roleDescriptorsHash = new String(Hasher.SHA256.hash(new SecureString(roleDescriptorsBytes.toString().toCharArray())));\n          \n          \n            \n                    final BytesKey cacheKey = new BytesKey(BytesReference.toBytes(roleDescriptorsBytes));\n          \n      \n    \n    \n  \n\n\nHash using MessageDigest\n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final String roleDescriptorsHash = new String(Hasher.SHA256.hash(new SecureString(roleDescriptorsBytes.toString().toCharArray())));\n          \n          \n            \n                    MessageDigest digest = MessageDigests.sha256();\n          \n          \n            \n                    digest.update(BytesReference.toBytes(roleDescriptorsBytes));\n          \n          \n            \n                    final String roleDescriptorsHash = MessageDigests.toHexString(digest.digest());", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r445324780", "createdAt": "2020-06-25T06:02:09Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/store/CompositeRolesStore.java", "diffHunk": "@@ -295,6 +318,21 @@ private void buildThenMaybeCacheRole(RoleKey roleKey, Collection<RoleDescriptor>\n         }, listener::onFailure));\n     }\n \n+    private void getOrBuildRoleForApiKey(Authentication authentication, boolean limitedBy, ActionListener<Role> roleActionListener) {\n+        final BytesReference roleDescriptorsBytes = apiKeyService.getRoleDescriptorsBytesForApiKey(authentication, limitedBy);\n+        final String roleDescriptorsHash = new String(Hasher.SHA256.hash(new SecureString(roleDescriptorsBytes.toString().toCharArray())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2560d8acc141648c6ecb2211ff48dab1a94bf3d"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMyNzk1NQ==", "bodyText": "We should use the version of convertToMap that takes an explicit XContentType.JSON", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r445327955", "createdAt": "2020-06-25T06:12:13Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/SecurityContext.java", "diffHunk": "@@ -149,8 +156,25 @@ public void executeAfterRewritingAuthentication(Consumer<StoredContext> consumer\n         final Authentication authentication = getAuthentication();\n         try (ThreadContext.StoredContext ignore = threadContext.stashContext()) {\n             setAuthentication(new Authentication(authentication.getUser(), authentication.getAuthenticatedBy(),\n-                authentication.getLookedUpBy(), version, authentication.getAuthenticationType(), authentication.getMetadata()));\n+                authentication.getLookedUpBy(), version, authentication.getAuthenticationType(),\n+                rewriteMetadataIfNecessary(version, authentication)));\n             consumer.accept(original);\n         }\n     }\n+\n+    private Map<String, Object> rewriteMetadataIfNecessary(Version version, Authentication authentication) {\n+        Map<String, Object> metadata = authentication.getMetadata();\n+        if (authentication.getAuthenticationType() == AuthenticationType.API_KEY\n+            && authentication.getVersion().onOrAfter(Version.V_7_9_0)\n+            && version.before(Version.V_7_9_0)) {\n+            metadata = new HashMap<>(metadata);\n+            metadata.put(\n+                API_KEY_ROLE_DESCRIPTORS_KEY,\n+                XContentHelper.convertToMap((BytesReference) metadata.get(API_KEY_ROLE_DESCRIPTORS_KEY), false).v2());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2560d8acc141648c6ecb2211ff48dab1a94bf3d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMzMDg2MQ==", "bodyText": "I think having getRoleForApiKey, getRoleDescriptorsBytesForApiKey and getRoleDescriptorsForApiKey is confusing and likely to get us into trouble in the future.\nIs it necessary for the caller to have to know which method to use depending on the version of the Authentication object it has?\nI worry about the fragility of code that calls getRoleDescriptorsForApiKey and works on 7.9+ but then fails in a mixed cluster.\nWould it be possible to merge getRoleDescriptorsForApiKey and getRoleForApiKey into a single method, or at least make it save to call getRoleDescriptorsForApiKey on an old style Authentication object?", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r445330861", "createdAt": "2020-06-25T06:20:43Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ApiKeyService.java", "diffHunk": "@@ -366,6 +375,20 @@ public void getRoleForApiKey(Authentication authentication, ActionListener<ApiKe\n         }\n     }\n \n+    public BytesReference getRoleDescriptorsBytesForApiKey(Authentication authentication, boolean limitedBy) {\n+        if (authentication.getAuthenticationType() != AuthenticationType.API_KEY) {\n+            throw new IllegalStateException(\"authentication type must be api key but is \" + authentication.getAuthenticationType());\n+        }\n+        final Map<String, Object> metadata = authentication.getMetadata();\n+        return (BytesReference) metadata.get(limitedBy ? API_KEY_LIMITED_ROLE_DESCRIPTORS_KEY : API_KEY_ROLE_DESCRIPTORS_KEY);\n+    }\n+\n+    public List<RoleDescriptor> getRoleDescriptorsForApiKey(Authentication authentication, boolean limitedBy) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2560d8acc141648c6ecb2211ff48dab1a94bf3d"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMDgxNw==", "bodyText": "I suspect it's not true for all versions, or at least it might not be.\nWe'd probably want to generate an API key from v6.7 and check, but it might be safer to change the parser to be more accommodating of missing fields.", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r448130817", "createdAt": "2020-07-01T05:54:36Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ApiKeyService.java", "diffHunk": "@@ -929,4 +969,66 @@ private boolean verify(SecureString password) {\n             return hash != null && cacheHasher.verify(password, hash);\n         }\n     }\n+\n+    public static final class ApiKeyDoc {\n+\n+        static final InstantiatingObjectParser<ApiKeyDoc, Void> PARSER;\n+        static {\n+            InstantiatingObjectParser.Builder<ApiKeyDoc, Void> builder =\n+                InstantiatingObjectParser.builder(\"api_key_doc\", true, ApiKeyDoc.class);\n+            builder.declareString(constructorArg(), new ParseField(\"doc_type\"));\n+            builder.declareLong(constructorArg(), new ParseField(\"creation_time\"));\n+            builder.declareLongOrNull(constructorArg(), -1, new ParseField(\"expiration_time\"));\n+            builder.declareBoolean(constructorArg(), new ParseField(\"api_key_invalidated\"));\n+            builder.declareString(optionalConstructorArg(), new ParseField(\"api_key_hash\"));\n+            builder.declareString(constructorArg(), new ParseField(\"name\"));\n+            builder.declareInt(constructorArg(), new ParseField(\"version\"));\n+            ObjectParserHelper<ApiKeyDoc, Void> parserHelper = new ObjectParserHelper<>();\n+            parserHelper.declareRawObject(builder, optionalConstructorArg(), new ParseField(\"role_descriptors\"));\n+            parserHelper.declareRawObject(builder, constructorArg(), new ParseField(\"limited_by_role_descriptors\"));\n+            parserHelper.declareRawObject(builder, constructorArg(), new ParseField(\"creator\"));\n+            PARSER = builder.build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5MzU4NA=="}, "originalCommit": {"oid": "b1688f97ef7da46c9191b4eb8d586ebae088baa5"}, "originalPosition": 228}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca698d767cb34c9404b6f398d9b1946971da8f25", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/ca698d767cb34c9404b6f398d9b1946971da8f25", "committedDate": "2020-07-01T07:14:25Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Tim Vernum <tim@adjective.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf785c9776c3ff4b802d21e0717f363836b55c1b", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf785c9776c3ff4b802d21e0717f363836b55c1b", "committedDate": "2020-07-01T07:27:06Z", "message": "fix variable name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abcd485df7b46c3f4887f2993f91c0f77b293fa3", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/abcd485df7b46c3f4887f2993f91c0f77b293fa3", "committedDate": "2020-07-01T08:40:03Z", "message": "Merge remote-tracking branch 'origin/master' into es-53939-api-key-roles-cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d62d8a24f1b6ced4d23ada9141371a12ca76e8ee", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/d62d8a24f1b6ced4d23ada9141371a12ca76e8ee", "committedDate": "2020-07-02T01:50:53Z", "message": "Avoid using deprecated API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8148050c09e5936900df41921d6c8c02fb1cf565", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/8148050c09e5936900df41921d6c8c02fb1cf565", "committedDate": "2020-07-06T03:33:43Z", "message": "Update x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/store/CompositeRolesStore.java\n\nCo-authored-by: Tim Vernum <tim@adjective.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1440bfefba566f02d5808472d1625cd61a23b967", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/1440bfefba566f02d5808472d1625cd61a23b967", "committedDate": "2020-07-06T03:36:07Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfca9cc02be10a2623dd4505e13a36bca14ce7a5", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/cfca9cc02be10a2623dd4505e13a36bca14ce7a5", "committedDate": "2020-07-06T04:21:10Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50f170675220e8ee2ca6d9f6a61941b7ed12bd42", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/50f170675220e8ee2ca6d9f6a61941b7ed12bd42", "committedDate": "2020-07-06T04:21:24Z", "message": "Merge remote-tracking branch 'origin/master' into es-53939-api-key-roles-cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyODkxMzQ4", "url": "https://github.com/elastic/elasticsearch/pull/58156#pullrequestreview-442891348", "createdAt": "2020-07-06T08:53:33Z", "commit": {"oid": "50f170675220e8ee2ca6d9f6a61941b7ed12bd42"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwODo1MzozNVrOGtOlmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwODo1ODo0N1rOGtOx4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA3ODEwNQ==", "bodyText": "I don't think this is true even in 9.0 - we don't have anything in place that would automatically rewrite saved authentication objects from 7.x watcher jobs.", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r450078105", "createdAt": "2020-07-06T08:53:35Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/store/CompositeRolesStore.java", "diffHunk": "@@ -239,7 +239,7 @@ public void getRoles(User user, Authentication authentication, ActionListener<Ro\n                     },\n                     roleActionListener::onFailure\n                 ));\n-            } else {\n+            } else {  // TODO: the else branch is for bwc and can be deleted in 9.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f170675220e8ee2ca6d9f6a61941b7ed12bd42"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA3OTA5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Tuple<String, BytesReference> getApiKeyIdAndBytes(Authentication authentication, boolean limitedBy) {\n          \n          \n            \n                public Tuple<String, BytesReference> getApiKeyIdAndRoleBytes(Authentication authentication, boolean limitedBy) {\n          \n      \n    \n    \n  \n\n(or role descriptor, or ...)\nBut Bytes to me implies the whole API key JSON or something like that.", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r450079095", "createdAt": "2020-07-06T08:55:10Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ApiKeyService.java", "diffHunk": "@@ -375,18 +377,14 @@ public void getRoleForApiKey(Authentication authentication, ActionListener<ApiKe\n         }\n     }\n \n-    public BytesReference getRoleDescriptorsBytesForApiKey(Authentication authentication, boolean limitedBy) {\n+    public Tuple<String, BytesReference> getApiKeyIdAndBytes(Authentication authentication, boolean limitedBy) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f170675220e8ee2ca6d9f6a61941b7ed12bd42"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA4MTI1MQ==", "bodyText": "If I understand correctly, getRoleForApiKey will only do the right thing for old style authentication.\nIf so, can we:\n\nAdd that to the javadoc\nAdd an assert authentication.getVersion().before(Version.V7_9_0) : \"This method only applies to authentication objects created before v7.9.0\";", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r450081251", "createdAt": "2020-07-06T08:58:47Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ApiKeyService.java", "diffHunk": "@@ -366,6 +375,20 @@ public void getRoleForApiKey(Authentication authentication, ActionListener<ApiKe\n         }\n     }\n \n+    public BytesReference getRoleDescriptorsBytesForApiKey(Authentication authentication, boolean limitedBy) {\n+        if (authentication.getAuthenticationType() != AuthenticationType.API_KEY) {\n+            throw new IllegalStateException(\"authentication type must be api key but is \" + authentication.getAuthenticationType());\n+        }\n+        final Map<String, Object> metadata = authentication.getMetadata();\n+        return (BytesReference) metadata.get(limitedBy ? API_KEY_LIMITED_ROLE_DESCRIPTORS_KEY : API_KEY_ROLE_DESCRIPTORS_KEY);\n+    }\n+\n+    public List<RoleDescriptor> getRoleDescriptorsForApiKey(Authentication authentication, boolean limitedBy) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMzMDg2MQ=="}, "originalCommit": {"oid": "d2560d8acc141648c6ecb2211ff48dab1a94bf3d"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fb443e1dbdfb3a277d542be1a5659bad3353f4b", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/8fb443e1dbdfb3a277d542be1a5659bad3353f4b", "committedDate": "2020-07-06T11:52:50Z", "message": "Update x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ApiKeyService.java\n\nCo-authored-by: Tim Vernum <tim@adjective.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "797c54b5f923c7c3e90dc203aa3463a5e8ac9f95", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/797c54b5f923c7c3e90dc203aa3463a5e8ac9f95", "committedDate": "2020-07-06T13:35:50Z", "message": "Update method name change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "552e7b37cd900f83c8fe82dd8dd83a0c7df6d5aa", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/552e7b37cd900f83c8fe82dd8dd83a0c7df6d5aa", "committedDate": "2020-07-06T13:38:18Z", "message": "Merge remote-tracking branch 'origin/master' into es-53939-api-key-roles-cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cf31f3884ec92067c5a64b5da8c541553acf457", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/3cf31f3884ec92067c5a64b5da8c541553acf457", "committedDate": "2020-07-06T14:31:38Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1300c4d51beeff5a1805db70dd7ba134c7cf1713", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/1300c4d51beeff5a1805db70dd7ba134c7cf1713", "committedDate": "2020-07-06T14:31:49Z", "message": "Merge remote-tracking branch 'origin/master' into es-53939-api-key-roles-cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3531a52b67e4e41b03e09b8ca45dfa38579b71be", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/3531a52b67e4e41b03e09b8ca45dfa38579b71be", "committedDate": "2020-07-07T00:34:19Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e7996d2cc896158bbc87d6cb7abb7b6dcc17ef5", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/9e7996d2cc896158bbc87d6cb7abb7b6dcc17ef5", "committedDate": "2020-07-07T00:37:51Z", "message": "Merge remote-tracking branch 'origin/master' into es-53939-api-key-roles-cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27be381cf6874febd066a12b9ff22be281947d99", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/27be381cf6874febd066a12b9ff22be281947d99", "committedDate": "2020-07-07T13:21:07Z", "message": "Merge remote-tracking branch 'origin/master' into es-53939-api-key-roles-cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0323259b37e88deaec8047fb7a247ea729d56e3", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/a0323259b37e88deaec8047fb7a247ea729d56e3", "committedDate": "2020-07-07T14:06:23Z", "message": "A challenging merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9395a8376ba8bf86b2d79b28718eee98b7e0bed9", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/9395a8376ba8bf86b2d79b28718eee98b7e0bed9", "committedDate": "2020-07-08T07:58:06Z", "message": "Merge remote-tracking branch 'origin/master' into es-53939-api-key-roles-cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f08a3cebbbdeb23ea44d5027cc6e9124ca8f105", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/0f08a3cebbbdeb23ea44d5027cc6e9124ca8f105", "committedDate": "2020-07-08T07:58:52Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b75e1dc754dc15c83ba91483f3079a3d64cb049", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/5b75e1dc754dc15c83ba91483f3079a3d64cb049", "committedDate": "2020-07-12T12:08:26Z", "message": "Simplify creator parsing of ApiKeyDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bedb46f39dbcfc6634c52061388bea27db788b87", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/bedb46f39dbcfc6634c52061388bea27db788b87", "committedDate": "2020-07-12T12:08:40Z", "message": "Merge remote-tracking branch 'origin/master' into es-53939-api-key-roles-cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52698f4156d772dcdcb1d0253dfd85cda87026f9", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/52698f4156d772dcdcb1d0253dfd85cda87026f9", "committedDate": "2020-07-12T12:19:34Z", "message": "Fix merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODk0NTIx", "url": "https://github.com/elastic/elasticsearch/pull/58156#pullrequestreview-446894521", "createdAt": "2020-07-12T16:57:18Z", "commit": {"oid": "52698f4156d772dcdcb1d0253dfd85cda87026f9"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNjo1NzoxOFrOGwVpiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDozMjozMlrOGwW6sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMzOTUzMQ==", "bodyText": "The name rewriteMetadataIfNecessary is not very inspired; I have to read the code to know what this rewriting is about.\nMy suggestion: rewriteApiKeyAuthenticationRoleMetadata (drop \"if necessary\")\nI would also slightly prefer to move this to the Authentication class, and maybe have a static method there that takes an authentication and a version as parameters and returns a new authentication with that version, and any rewritings done. I would also define a new static constant on Version.V_7_9_0 inside Authentication as VERSION_API_KEY_ROLES_AS_STRING (see TokenService for examples).", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r453339531", "createdAt": "2020-07-12T16:57:18Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/SecurityContext.java", "diffHunk": "@@ -149,8 +157,27 @@ public void executeAfterRewritingAuthentication(Consumer<StoredContext> consumer\n         final Authentication authentication = getAuthentication();\n         try (ThreadContext.StoredContext ignore = threadContext.stashContext()) {\n             setAuthentication(new Authentication(authentication.getUser(), authentication.getAuthenticatedBy(),\n-                authentication.getLookedUpBy(), version, authentication.getAuthenticationType(), authentication.getMetadata()));\n+                authentication.getLookedUpBy(), version, authentication.getAuthenticationType(),\n+                rewriteMetadataIfNecessary(version, authentication)));\n             consumer.accept(original);\n         }\n     }\n+\n+    private Map<String, Object> rewriteMetadataIfNecessary(Version streamVersion, Authentication authentication) {\n+        Map<String, Object> metadata = authentication.getMetadata();\n+        if (authentication.getAuthenticationType() == AuthenticationType.API_KEY\n+            && authentication.getVersion().onOrAfter(Version.V_7_9_0)\n+            && streamVersion.before(Version.V_7_9_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52698f4156d772dcdcb1d0253dfd85cda87026f9"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM0NDQ2MQ==", "bodyText": "Why have you introduced this new class in this PR? Is it required for something?\nI'd obviously vote to get rid of the Map<String, Object> source any time of day, but this doesn't look like a great improvement, and it makes this PR harder to follow than necessary.", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r453344461", "createdAt": "2020-07-12T17:48:43Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ApiKeyService.java", "diffHunk": "@@ -974,4 +1018,66 @@ private boolean verify(SecureString password) {\n             return hash != null && cacheHasher.verify(password, hash);\n         }\n     }\n+\n+    public static final class ApiKeyDoc {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52698f4156d772dcdcb1d0253dfd85cda87026f9"}, "originalPosition": 269}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1NzI4MQ==", "bodyText": "When can this be true?", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r453357281", "createdAt": "2020-07-12T20:01:21Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/store/CompositeRolesStore.java", "diffHunk": "@@ -221,20 +224,40 @@ public void getRoles(User user, Authentication authentication, ActionListener<Ro\n \n         final Authentication.AuthenticationType authType = authentication.getAuthenticationType();\n         if (authType == Authentication.AuthenticationType.API_KEY) {\n-            apiKeyService.getRoleForApiKey(authentication, ActionListener.wrap(apiKeyRoleDescriptors -> {\n-                final List<RoleDescriptor> descriptors = apiKeyRoleDescriptors.getRoleDescriptors();\n-                if (descriptors == null) {\n-                    roleActionListener.onFailure(new IllegalStateException(\"missing role descriptors\"));\n-                } else if (apiKeyRoleDescriptors.getLimitedByRoleDescriptors() == null) {\n-                    buildAndCacheRoleFromDescriptors(descriptors, apiKeyRoleDescriptors.getApiKeyId() + \"_role_desc\", roleActionListener);\n-                } else {\n-                    buildAndCacheRoleFromDescriptors(descriptors, apiKeyRoleDescriptors.getApiKeyId() + \"_role_desc\",\n-                        ActionListener.wrap(role -> buildAndCacheRoleFromDescriptors(apiKeyRoleDescriptors.getLimitedByRoleDescriptors(),\n-                            apiKeyRoleDescriptors.getApiKeyId() + \"_limited_role_desc\", ActionListener.wrap(\n-                                limitedBy -> roleActionListener.onResponse(LimitedRole.createLimitedRole(role, limitedBy)),\n-                                roleActionListener::onFailure)), roleActionListener::onFailure));\n-                }\n-            }, roleActionListener::onFailure));\n+            if (authentication.getVersion().onOrAfter(Version.V_7_9_0)) {\n+                getOrBuildRoleForApiKey(authentication, false, ActionListener.wrap(\n+                    role -> {\n+                        if (role == Role.EMPTY) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52698f4156d772dcdcb1d0253dfd85cda87026f9"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1Nzk2MA==", "bodyText": "Nit: you can can compute the digest in one line.", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r453357960", "createdAt": "2020-07-12T20:08:00Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/store/CompositeRolesStore.java", "diffHunk": "@@ -295,6 +318,23 @@ private void buildThenMaybeCacheRole(RoleKey roleKey, Collection<RoleDescriptor>\n         }, listener::onFailure));\n     }\n \n+    private void getOrBuildRoleForApiKey(Authentication authentication, boolean limitedBy, ActionListener<Role> roleActionListener) {\n+        final Tuple<String, BytesReference> apiKeyIdAndBytes = apiKeyService.getApiKeyIdAndRoleBytes(authentication, limitedBy);\n+        final MessageDigest digest = MessageDigests.sha256();\n+        digest.update(BytesReference.toBytes(apiKeyIdAndBytes.v2()));\n+        final String roleDescriptorsHash = MessageDigests.toHexString(digest.digest());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52698f4156d772dcdcb1d0253dfd85cda87026f9"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MDMwNA==", "bodyText": "Methods here don't have a clear interface, it could just as well not be methods at all; the limitedBy flag is really ruining every structure.\nI would move the full logic that obtains the Role for an API Keys from the CompositeRolesStore class to the ApiKeyService class.\nBut I realise I'm late to the party, we can do this in a follow-up.\n@tvernum would you agree merging this PR, and following up with a refactoring?", "url": "https://github.com/elastic/elasticsearch/pull/58156#discussion_r453360304", "createdAt": "2020-07-12T20:32:32Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/store/CompositeRolesStore.java", "diffHunk": "@@ -295,6 +318,23 @@ private void buildThenMaybeCacheRole(RoleKey roleKey, Collection<RoleDescriptor>\n         }, listener::onFailure));\n     }\n \n+    private void getOrBuildRoleForApiKey(Authentication authentication, boolean limitedBy, ActionListener<Role> roleActionListener) {\n+        final Tuple<String, BytesReference> apiKeyIdAndBytes = apiKeyService.getApiKeyIdAndRoleBytes(authentication, limitedBy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52698f4156d772dcdcb1d0253dfd85cda87026f9"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8543c187c66522ca4726c88e844978cb34cf7bc7", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/8543c187c66522ca4726c88e844978cb34cf7bc7", "committedDate": "2020-07-13T05:42:05Z", "message": "Address feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MDE1OTM2", "url": "https://github.com/elastic/elasticsearch/pull/58156#pullrequestreview-447015936", "createdAt": "2020-07-13T06:44:49Z", "commit": {"oid": "52698f4156d772dcdcb1d0253dfd85cda87026f9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1fba5a368a7095745043bcdcf7e587adb943019", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/c1fba5a368a7095745043bcdcf7e587adb943019", "committedDate": "2020-07-13T06:55:12Z", "message": "Address more feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c991a6b13acbd0a31152c2f911ecb4cdd73d0d5", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/0c991a6b13acbd0a31152c2f911ecb4cdd73d0d5", "committedDate": "2020-07-13T06:55:24Z", "message": "Merge remote-tracking branch 'origin/master' into es-53939-api-key-roles-cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MDg0Mzg0", "url": "https://github.com/elastic/elasticsearch/pull/58156#pullrequestreview-447084384", "createdAt": "2020-07-13T09:29:45Z", "commit": {"oid": "0c991a6b13acbd0a31152c2f911ecb4cdd73d0d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ac2a84f43c2ebba5b325a9e3c9f481387d8e4fa", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/0ac2a84f43c2ebba5b325a9e3c9f481387d8e4fa", "committedDate": "2020-07-13T09:57:57Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70307e78066afeb1f7d8ec424527d3d88def8344", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/70307e78066afeb1f7d8ec424527d3d88def8344", "committedDate": "2020-07-13T10:04:12Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b1153cc9d2fcf4b2fcfd07f032d8d431ed0edf0", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/8b1153cc9d2fcf4b2fcfd07f032d8d431ed0edf0", "committedDate": "2020-07-13T10:09:39Z", "message": "Use new version constants where it is applicable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "121134be1b2d1cb8ce630d87adfb1334d5b0578d", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/121134be1b2d1cb8ce630d87adfb1334d5b0578d", "committedDate": "2020-07-13T10:16:04Z", "message": "more checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b20b4891fc0167e66dcb14188b0dc2ddf66db36", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/2b20b4891fc0167e66dcb14188b0dc2ddf66db36", "committedDate": "2020-07-13T10:31:43Z", "message": "Add one test for ApiKeyDoc.fromXContent"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 511, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}