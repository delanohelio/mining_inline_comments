{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMTUzNjQ0", "number": 57909, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDowNDoyMlrOEKQfAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTo0ODo0OVrOEKSe9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTkxMjk2OnYy", "diffSide": "RIGHT", "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDowNDoyMlrOGrMgTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDowMTozMlrOGrSa1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0NjgzMQ==", "bodyText": "Is there a reason we're not using xrefs here?\n\nphases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447946831", "createdAt": "2020-06-30T20:04:22Z", "author": {"login": "jrodewig"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0MzczNQ==", "bodyText": "I'll switch them to xrefs--it's because this tutorial is from the Kibana repo.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r448043735", "createdAt": "2020-07-01T00:01:32Z", "author": {"login": "debadair"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0NjgzMQ=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTkyMTI0OnYy", "diffSide": "RIGHT", "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDowNjo1MlrOGrMlcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDoxMzozMFrOGrSn7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0ODE0Nw==", "bodyText": "[role=\"screenshot\"]\n\nDoes this do anything right now or is it acting as inert metadata?", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447948147", "createdAt": "2020-06-30T20:06:52Z", "author": {"login": "jrodewig"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n+to label data nodes as hot or warm. This step is required to migrate shards between\n+nodes configured with specific hardware for the hot or warm phases.\n++\n+For example, you can set this in your `elasticsearch.yml` for each data node:\n++\n+[source,yaml]\n+--------------------------------------------------------------------------------\n+node.attr.data: \"warm\"\n+--------------------------------------------------------------------------------\n+\n+* A server with {filebeat} installed and configured to send logs to the `elasticsearch`\n+output as described in {filebeat-ref}/filebeat-getting-started.html[Getting Started with {filebeat}].\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-view-fb-ilm-policy]]\n+==== View the {filebeat} {ilm-init} policy\n+\n+{filebeat} includes a default {ilm-init} policy that enables rollover. {ilm-init}\n+is enabled automatically if you\u2019re using the default `filebeat.yml` and index template.\n+\n+To view the default policy in {kib}, open the menu, go to * Stack Management > {es} > Index Lifecycle Policies*,\n+search for _filebeat_, and choose the _filebeat-version_ policy.\n+\n+This policy initiates the rollover action when the index size reaches 50GB or\n+becomes 30 days old.\n+\n+[role=\"screenshot\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0NzA4NA==", "bodyText": "It maps to a CSS style that controls the space around the image and adds a box shadow.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r448047084", "createdAt": "2020-07-01T00:13:30Z", "author": {"login": "debadair"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n+to label data nodes as hot or warm. This step is required to migrate shards between\n+nodes configured with specific hardware for the hot or warm phases.\n++\n+For example, you can set this in your `elasticsearch.yml` for each data node:\n++\n+[source,yaml]\n+--------------------------------------------------------------------------------\n+node.attr.data: \"warm\"\n+--------------------------------------------------------------------------------\n+\n+* A server with {filebeat} installed and configured to send logs to the `elasticsearch`\n+output as described in {filebeat-ref}/filebeat-getting-started.html[Getting Started with {filebeat}].\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-view-fb-ilm-policy]]\n+==== View the {filebeat} {ilm-init} policy\n+\n+{filebeat} includes a default {ilm-init} policy that enables rollover. {ilm-init}\n+is enabled automatically if you\u2019re using the default `filebeat.yml` and index template.\n+\n+To view the default policy in {kib}, open the menu, go to * Stack Management > {es} > Index Lifecycle Policies*,\n+search for _filebeat_, and choose the _filebeat-version_ policy.\n+\n+This policy initiates the rollover action when the index size reaches 50GB or\n+becomes 30 days old.\n+\n+[role=\"screenshot\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0ODE0Nw=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTkzNjk4OnYy", "diffSide": "RIGHT", "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxMTo0NFrOGrMveg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzo0NDozMVrOGrmh-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1MDcxNA==", "bodyText": "image::images/tutorial-ilm-hotphaserollover-default.png[\"Default policy\"]\n\nI see this PR adds quite a few images. I wonder if we should figure out a better practice for images\nand binary files.\nMy concern is that adding lots of new images could inflate the size of the ES repo, which makes downloading and syncing the repo take more bandwidth/longer.\nFrom what I understand, storing binaries in GitHub isn't good practice for these reasons. May be\nworth exploring more.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447950714", "createdAt": "2020-06-30T20:11:44Z", "author": {"login": "jrodewig"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n+to label data nodes as hot or warm. This step is required to migrate shards between\n+nodes configured with specific hardware for the hot or warm phases.\n++\n+For example, you can set this in your `elasticsearch.yml` for each data node:\n++\n+[source,yaml]\n+--------------------------------------------------------------------------------\n+node.attr.data: \"warm\"\n+--------------------------------------------------------------------------------\n+\n+* A server with {filebeat} installed and configured to send logs to the `elasticsearch`\n+output as described in {filebeat-ref}/filebeat-getting-started.html[Getting Started with {filebeat}].\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-view-fb-ilm-policy]]\n+==== View the {filebeat} {ilm-init} policy\n+\n+{filebeat} includes a default {ilm-init} policy that enables rollover. {ilm-init}\n+is enabled automatically if you\u2019re using the default `filebeat.yml` and index template.\n+\n+To view the default policy in {kib}, open the menu, go to * Stack Management > {es} > Index Lifecycle Policies*,\n+search for _filebeat_, and choose the _filebeat-version_ policy.\n+\n+This policy initiates the rollover action when the index size reaches 50GB or\n+becomes 30 days old.\n+\n+[role=\"screenshot\"]\n+image::images/tutorial-ilm-hotphaserollover-default.png[\"Default policy\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0NDQ3MQ==", "bodyText": "Storing them anyplace else would require changes to our build infra, but it's something we should consider along with our other infra changes.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r448044471", "createdAt": "2020-07-01T00:04:16Z", "author": {"login": "debadair"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n+to label data nodes as hot or warm. This step is required to migrate shards between\n+nodes configured with specific hardware for the hot or warm phases.\n++\n+For example, you can set this in your `elasticsearch.yml` for each data node:\n++\n+[source,yaml]\n+--------------------------------------------------------------------------------\n+node.attr.data: \"warm\"\n+--------------------------------------------------------------------------------\n+\n+* A server with {filebeat} installed and configured to send logs to the `elasticsearch`\n+output as described in {filebeat-ref}/filebeat-getting-started.html[Getting Started with {filebeat}].\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-view-fb-ilm-policy]]\n+==== View the {filebeat} {ilm-init} policy\n+\n+{filebeat} includes a default {ilm-init} policy that enables rollover. {ilm-init}\n+is enabled automatically if you\u2019re using the default `filebeat.yml` and index template.\n+\n+To view the default policy in {kib}, open the menu, go to * Stack Management > {es} > Index Lifecycle Policies*,\n+search for _filebeat_, and choose the _filebeat-version_ policy.\n+\n+This policy initiates the rollover action when the index size reaches 50GB or\n+becomes 30 days old.\n+\n+[role=\"screenshot\"]\n+image::images/tutorial-ilm-hotphaserollover-default.png[\"Default policy\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1MDcxNA=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MzI0MQ==", "bodyText": "Sounds good. Probably not worth blocking this PR tho.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r448373241", "createdAt": "2020-07-01T13:44:31Z", "author": {"login": "jrodewig"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n+to label data nodes as hot or warm. This step is required to migrate shards between\n+nodes configured with specific hardware for the hot or warm phases.\n++\n+For example, you can set this in your `elasticsearch.yml` for each data node:\n++\n+[source,yaml]\n+--------------------------------------------------------------------------------\n+node.attr.data: \"warm\"\n+--------------------------------------------------------------------------------\n+\n+* A server with {filebeat} installed and configured to send logs to the `elasticsearch`\n+output as described in {filebeat-ref}/filebeat-getting-started.html[Getting Started with {filebeat}].\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-view-fb-ilm-policy]]\n+==== View the {filebeat} {ilm-init} policy\n+\n+{filebeat} includes a default {ilm-init} policy that enables rollover. {ilm-init}\n+is enabled automatically if you\u2019re using the default `filebeat.yml` and index template.\n+\n+To view the default policy in {kib}, open the menu, go to * Stack Management > {es} > Index Lifecycle Policies*,\n+search for _filebeat_, and choose the _filebeat-version_ policy.\n+\n+This policy initiates the rollover action when the index size reaches 50GB or\n+becomes 30 days old.\n+\n+[role=\"screenshot\"]\n+image::images/tutorial-ilm-hotphaserollover-default.png[\"Default policy\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1MDcxNA=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTkzNzY1OnYy", "diffSide": "RIGHT", "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxMTo1NlrOGrMv5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxMTo1NlrOGrMv5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1MDgyMA==", "bodyText": "Nit\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [float]\n          \n          \n            \n            [discrete]", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447950820", "createdAt": "2020-06-30T20:11:56Z", "author": {"login": "jrodewig"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n+to label data nodes as hot or warm. This step is required to migrate shards between\n+nodes configured with specific hardware for the hot or warm phases.\n++\n+For example, you can set this in your `elasticsearch.yml` for each data node:\n++\n+[source,yaml]\n+--------------------------------------------------------------------------------\n+node.attr.data: \"warm\"\n+--------------------------------------------------------------------------------\n+\n+* A server with {filebeat} installed and configured to send logs to the `elasticsearch`\n+output as described in {filebeat-ref}/filebeat-getting-started.html[Getting Started with {filebeat}].\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-view-fb-ilm-policy]]\n+==== View the {filebeat} {ilm-init} policy\n+\n+{filebeat} includes a default {ilm-init} policy that enables rollover. {ilm-init}\n+is enabled automatically if you\u2019re using the default `filebeat.yml` and index template.\n+\n+To view the default policy in {kib}, open the menu, go to * Stack Management > {es} > Index Lifecycle Policies*,\n+search for _filebeat_, and choose the _filebeat-version_ policy.\n+\n+This policy initiates the rollover action when the index size reaches 50GB or\n+becomes 30 days old.\n+\n+[role=\"screenshot\"]\n+image::images/tutorial-ilm-hotphaserollover-default.png[\"Default policy\"]\n+\n+\n+[float]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTkzODU3OnYy", "diffSide": "RIGHT", "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxMjoxNFrOGrMwbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxMjoxNFrOGrMwbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1MDk1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [float]\n          \n          \n            \n            [discrete]", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447950957", "createdAt": "2020-06-30T20:12:14Z", "author": {"login": "jrodewig"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n+to label data nodes as hot or warm. This step is required to migrate shards between\n+nodes configured with specific hardware for the hot or warm phases.\n++\n+For example, you can set this in your `elasticsearch.yml` for each data node:\n++\n+[source,yaml]\n+--------------------------------------------------------------------------------\n+node.attr.data: \"warm\"\n+--------------------------------------------------------------------------------\n+\n+* A server with {filebeat} installed and configured to send logs to the `elasticsearch`\n+output as described in {filebeat-ref}/filebeat-getting-started.html[Getting Started with {filebeat}].\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-view-fb-ilm-policy]]\n+==== View the {filebeat} {ilm-init} policy\n+\n+{filebeat} includes a default {ilm-init} policy that enables rollover. {ilm-init}\n+is enabled automatically if you\u2019re using the default `filebeat.yml` and index template.\n+\n+To view the default policy in {kib}, open the menu, go to * Stack Management > {es} > Index Lifecycle Policies*,\n+search for _filebeat_, and choose the _filebeat-version_ policy.\n+\n+This policy initiates the rollover action when the index size reaches 50GB or\n+becomes 30 days old.\n+\n+[role=\"screenshot\"]\n+image::images/tutorial-ilm-hotphaserollover-default.png[\"Default policy\"]\n+\n+\n+[float]\n+==== Modify the policy\n+\n+The default policy is enough to prevent the creation of many tiny daily indices.\n+You can modify the policy to meet more complex requirements.\n+\n+. Activate the warm phase.\n+\n++\n+. Set either of the following options to control when the index moves to the warm phase:\n+\n+** Provide a value for *Timing for warm phase*. Setting this to *15* keeps the\n+indices on hot nodes for a range of  15-45 days, depending on when the initial\n+rollover occurred.\n+\n+** Enable *Move to warm phase on rollover*. The index might move to the warm phase\n+more quickly than intended if it reaches the *Maximum index size* before the\n+the *Maximum age*.\n+\n+. In the *Select a node attribute to control shard allocation* dropdown, select\n+*data:warm(2)* to migrate shards to warm data nodes.\n+\n+. Change *Number of replicas* to *1*.\n+\n+. Enable *Force merge data* and set *Number of segments* to *1*.\n++\n+NOTE:  When rollover is enabled in the hot phase, action timing in the other phases\n+is based on the rollover date.\n+\n++\n+[role=\"screenshot\"]\n+image::images/tutorial-ilm-modify-default-warm-phase-rollover.png[\"Modify to add warm phase\"]\n+\n+. Activate the delete phase and set *Timing for delete phase* to *90* days.\n++\n+[role=\"screenshot\"]\n+image::images/tutorial-ilm-delete-rollover.png[\"Add a delete phase\"]\n+\n+[float]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTk0Mjk1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ilm/example-index-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxMzo0NlrOGrMzRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxMzo0NlrOGrMzRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1MTY4Nw==", "bodyText": "Looks like a copy of docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc. Not sure which I'm intended to review....", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447951687", "createdAt": "2020-06-30T20:13:46Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,182 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Manage {filebeat} time-based indices\n+++++\n+<titleabbrev>Manage {filebeat} time-based indices</titleabbrev>\n+++++", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTk0NjAzOnYy", "diffSide": "RIGHT", "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxNDo1MVrOGrM1QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNzozNTowMlrOGs1iuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1MjE5Mw==", "bodyText": "Should this have the screenshot role?", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447952193", "createdAt": "2020-06-30T20:14:51Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -51,18 +48,22 @@ A lifecycle policy specifies the phases in the index lifecycle\n and the actions to perform in each phase. A lifecycle can have up to four phases:\n `hot`, `warm`, `cold`, and `delete`. \n \n-You can define and manage policies through {kib} Management or with the \n-<<ilm-put-lifecycle, put policy>> API.\n-\n For example, you might define a `timeseries_policy` that has two phases:\n  \n * A `hot` phase that defines a rollover action to specify that an index rolls over when it \n reaches either a `max_size` of 50 gigabytes or a `max_age` of 30 days.\n * A `delete` phase that sets `min_age` to remove the index 90 days after rollover.\n Note that this value is relative to the rollover time, not the index creation time. \n \n-The underlying put policy request looks like this:\n+You can create the policy through {kib} Management or with the \n+<<ilm-put-lifecycle, put policy>> API. \n+To create the policy from {kib}, go to **Management > Elasticsearch > Index Lifecycle Policies**.\n+\n+image:images/ilm/create-policy.png[]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2Nzc2OA==", "bodyText": "Yes, good catch.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r449667768", "createdAt": "2020-07-03T17:35:02Z", "author": {"login": "debadair"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -51,18 +48,22 @@ A lifecycle policy specifies the phases in the index lifecycle\n and the actions to perform in each phase. A lifecycle can have up to four phases:\n `hot`, `warm`, `cold`, and `delete`. \n \n-You can define and manage policies through {kib} Management or with the \n-<<ilm-put-lifecycle, put policy>> API.\n-\n For example, you might define a `timeseries_policy` that has two phases:\n  \n * A `hot` phase that defines a rollover action to specify that an index rolls over when it \n reaches either a `max_size` of 50 gigabytes or a `max_age` of 30 days.\n * A `delete` phase that sets `min_age` to remove the index 90 days after rollover.\n Note that this value is relative to the rollover time, not the index creation time. \n \n-The underlying put policy request looks like this:\n+You can create the policy through {kib} Management or with the \n+<<ilm-put-lifecycle, put policy>> API. \n+To create the policy from {kib}, go to **Management > Elasticsearch > Index Lifecycle Policies**.\n+\n+image:images/ilm/create-policy.png[]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1MjE5Mw=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTk0OTY2OnYy", "diffSide": "RIGHT", "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxNTo1OVrOGrM3iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMToyOTozOFrOGrTzJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1Mjc3Ng==", "bodyText": "Nit: If a section has label, I try to put it first. I figure this is a better indicator to someone browsing the file of what's next. But I've done it both ways before. Not a big deal either way.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [%collapsible]\n          \n          \n            \n            .API example\n          \n          \n            \n            .API example\n          \n          \n            \n            [%collapsible]", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447952776", "createdAt": "2020-06-30T20:15:59Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -51,18 +48,22 @@ A lifecycle policy specifies the phases in the index lifecycle\n and the actions to perform in each phase. A lifecycle can have up to four phases:\n `hot`, `warm`, `cold`, and `delete`. \n \n-You can define and manage policies through {kib} Management or with the \n-<<ilm-put-lifecycle, put policy>> API.\n-\n For example, you might define a `timeseries_policy` that has two phases:\n  \n * A `hot` phase that defines a rollover action to specify that an index rolls over when it \n reaches either a `max_size` of 50 gigabytes or a `max_age` of 30 days.\n * A `delete` phase that sets `min_age` to remove the index 90 days after rollover.\n Note that this value is relative to the rollover time, not the index creation time. \n \n-The underlying put policy request looks like this:\n+You can create the policy through {kib} Management or with the \n+<<ilm-put-lifecycle, put policy>> API. \n+To create the policy from {kib}, go to **Management > Elasticsearch > Index Lifecycle Policies**.\n+\n+image:images/ilm/create-policy.png[]\n \n+[%collapsible]\n+.API example", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2NjM0Mw==", "bodyText": "Applied throughout.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r448066343", "createdAt": "2020-07-01T01:29:38Z", "author": {"login": "debadair"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -51,18 +48,22 @@ A lifecycle policy specifies the phases in the index lifecycle\n and the actions to perform in each phase. A lifecycle can have up to four phases:\n `hot`, `warm`, `cold`, and `delete`. \n \n-You can define and manage policies through {kib} Management or with the \n-<<ilm-put-lifecycle, put policy>> API.\n-\n For example, you might define a `timeseries_policy` that has two phases:\n  \n * A `hot` phase that defines a rollover action to specify that an index rolls over when it \n reaches either a `max_size` of 50 gigabytes or a `max_age` of 30 days.\n * A `delete` phase that sets `min_age` to remove the index 90 days after rollover.\n Note that this value is relative to the rollover time, not the index creation time. \n \n-The underlying put policy request looks like this:\n+You can create the policy through {kib} Management or with the \n+<<ilm-put-lifecycle, put policy>> API. \n+To create the policy from {kib}, go to **Management > Elasticsearch > Index Lifecycle Policies**.\n+\n+image:images/ilm/create-policy.png[]\n \n+[%collapsible]\n+.API example", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1Mjc3Ng=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTk1MzgxOnYy", "diffSide": "RIGHT", "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxNzoxOVrOGrM6Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxNzoxOVrOGrM6Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1MzQxMQ==", "bodyText": "screenshot role?", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447953411", "createdAt": "2020-06-30T20:17:19Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "diffHunk": "@@ -25,12 +27,18 @@ bootstrap an initial index.\n [[ilm-create-policy]]\n === Create lifecycle policy\n \n-You use the <<ilm-put-lifecycle,create policy API>> to define a new lifecycle policy. \n-For example, the following request creates `my_policy`, a\n-policy that defines a hot and and delete phase.\n-When the index reaches 25GB, it rolls over directly to the delete phase.\n-The index is deleted 30 days after rollover.\n+To create lifecycle policies through {kib} Management\n+go to **Management > Elasticsearch > Index Lifecycle Policies**.\n \n+image:images/ilm/create-policy.png[]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTk1ODk1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxODo1N1rOGrM9TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxODo1N1rOGrM9TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NDI1Mw==", "bodyText": "Rewords passive voice. Previously, it wasn't clear if this was an extra step the user needed to take or if we're just showing what Kibana was doing under the hood.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The <<indices-put-template,put template API>> is invoked to add templates to a cluster.\n          \n          \n            \n            The wizard invokes the <<indices-put-template,put template API>> to add templates to a cluster.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447954253", "createdAt": "2020-06-30T20:18:57Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "diffHunk": "@@ -57,18 +65,26 @@ PUT _ilm/policy/my_policy\n \n <1> Roll over the index when it reaches 25GB in size\n <2> Delete the index 30 days after rollover\n+====\n \n [discrete]\n [[apply-policy-template]]\n === Apply lifecycle policy with an index template\n \n To use a policy that triggers the rollover action, \n you need to configure the policy in the index template used to create each new index.\n- \n-In addition to specifying the name of the policy in the `index.lifecycle.name` setting, \n-you specify a `index.lifecycle.rollover_alias` for referencing\n-the indices managed by this policy. \n+You specify the name of the policy and the alias used to reference the rolling indices.\n+\n+To use the Create template wizard to create a template from {kib} Management,\n+go to **Management > Elasticsearch > Index Management** and select the Index Templates view.\n+\n+image:images/ilm/create-template-wizard.png[]\n+\n+The <<indices-put-template,put template API>> is invoked to add templates to a cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTk2NjQ3OnYy", "diffSide": "RIGHT", "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoyMDo0NVrOGrNBng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoyMDo0NVrOGrNBng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTM1OA==", "bodyText": "It's not immediately clear what this example is meant to demonstrate.\nIt made sense with the previous text but not with the current text.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447955358", "createdAt": "2020-06-30T20:20:45Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "diffHunk": "@@ -133,25 +155,30 @@ index exceeds 25GB.\n [[apply-policy-manually]]\n === Apply lifecycle policy manually\n \n-When you create an index, you can apply a lifecycle policy \n-by specifying the `index.lifecycle.name` setting.\n-This causes {ilm-init} to immediately start managing the index.\n+When you apply a policy to an existing index through {kib} Management,\n+or specify a policy when you create an index, \n+{ilm-init} immediately starts managing the index.\n+\n+IMPORTANT: Do not manually apply a policy that uses the rollover action.\n+Policies that use rollover must be applied by the <<apply-policy-template, index template>>. \n+Otherwise, the policy is not carried forward when the rollover action creates a new index.\n \n+[%collapsible]\n+.API example\n+====", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTk2ODk3OnYy", "diffSide": "RIGHT", "path": "docs/reference/index.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoyMTozNlrOGrNDPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDo0Nzo0NFrOGrTKow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTc3NA==", "bodyText": "Is there a reason this attribute isn't in the elastic/docs repo?", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447955774", "createdAt": "2020-06-30T20:21:36Z", "author": {"login": "jrodewig"}, "path": "docs/reference/index.asciidoc", "diffHunk": "@@ -6,6 +6,7 @@\n :plugins-examples-dir:  {elasticsearch-root}/plugins/examples\n :xes-repo-dir:          {elasticsearch-root}/x-pack/docs/{lang}\n :es-repo-dir:           {elasticsearch-root}/docs/reference\n+:kib-repo-dir:          {kibana-root}/docs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1NTk3MQ==", "bodyText": "It's no longer needed & can be removed.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r448055971", "createdAt": "2020-07-01T00:47:44Z", "author": {"login": "debadair"}, "path": "docs/reference/index.asciidoc", "diffHunk": "@@ -6,6 +6,7 @@\n :plugins-examples-dir:  {elasticsearch-root}/plugins/examples\n :xes-repo-dir:          {elasticsearch-root}/x-pack/docs/{lang}\n :es-repo-dir:           {elasticsearch-root}/docs/reference\n+:kib-repo-dir:          {kibana-root}/docs", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTc3NA=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjExOTUzOnYy", "diffSide": "RIGHT", "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTowNzozNFrOGrOgjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDoxMTowMFrOGrSlVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3OTY2MQ==", "bodyText": "This would be better broken into steps.\nStack Management > {es} > Index Lifecycle Polices is correct for 7.8.\nFor 7.9, this is changing to Stack Management > Data > Index Lifecycle Policies>\nIt might be best to say \"Go to Stack Management, and then click Index Lifecycle Policies.\"\nThis change needs to be made in other places as well.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447979661", "createdAt": "2020-06-30T21:07:34Z", "author": {"login": "gchaps"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n+to label data nodes as hot or warm. This step is required to migrate shards between\n+nodes configured with specific hardware for the hot or warm phases.\n++\n+For example, you can set this in your `elasticsearch.yml` for each data node:\n++\n+[source,yaml]\n+--------------------------------------------------------------------------------\n+node.attr.data: \"warm\"\n+--------------------------------------------------------------------------------\n+\n+* A server with {filebeat} installed and configured to send logs to the `elasticsearch`\n+output as described in {filebeat-ref}/filebeat-getting-started.html[Getting Started with {filebeat}].\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-view-fb-ilm-policy]]\n+==== View the {filebeat} {ilm-init} policy\n+\n+{filebeat} includes a default {ilm-init} policy that enables rollover. {ilm-init}\n+is enabled automatically if you\u2019re using the default `filebeat.yml` and index template.\n+\n+To view the default policy in {kib}, open the menu, go to * Stack Management > {es} > Index Lifecycle Policies*,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0NjQyMw==", "bodyText": "I like your  suggestion for fixing it.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r448046423", "createdAt": "2020-07-01T00:11:00Z", "author": {"login": "debadair"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n+to label data nodes as hot or warm. This step is required to migrate shards between\n+nodes configured with specific hardware for the hot or warm phases.\n++\n+For example, you can set this in your `elasticsearch.yml` for each data node:\n++\n+[source,yaml]\n+--------------------------------------------------------------------------------\n+node.attr.data: \"warm\"\n+--------------------------------------------------------------------------------\n+\n+* A server with {filebeat} installed and configured to send logs to the `elasticsearch`\n+output as described in {filebeat-ref}/filebeat-getting-started.html[Getting Started with {filebeat}].\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-view-fb-ilm-policy]]\n+==== View the {filebeat} {ilm-init} policy\n+\n+{filebeat} includes a default {ilm-init} policy that enables rollover. {ilm-init}\n+is enabled automatically if you\u2019re using the default `filebeat.yml` and index template.\n+\n+To view the default policy in {kib}, open the menu, go to * Stack Management > {es} > Index Lifecycle Policies*,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3OTY2MQ=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjEyMzQzOnYy", "diffSide": "RIGHT", "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTowODo1NlrOGrOjFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDo0MjoyN1rOGrTFTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk4MDMwOQ==", "bodyText": "Is there any way we can make the collapsible \"API example\" title stand out more?", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447980309", "createdAt": "2020-06-30T21:08:56Z", "author": {"login": "gchaps"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -51,18 +48,22 @@ A lifecycle policy specifies the phases in the index lifecycle\n and the actions to perform in each phase. A lifecycle can have up to four phases:\n `hot`, `warm`, `cold`, and `delete`. \n \n-You can define and manage policies through {kib} Management or with the \n-<<ilm-put-lifecycle, put policy>> API.\n-\n For example, you might define a `timeseries_policy` that has two phases:\n  \n * A `hot` phase that defines a rollover action to specify that an index rolls over when it \n reaches either a `max_size` of 50 gigabytes or a `max_age` of 30 days.\n * A `delete` phase that sets `min_age` to remove the index 90 days after rollover.\n Note that this value is relative to the rollover time, not the index creation time. \n \n-The underlying put policy request looks like this:\n+You can create the policy through {kib} Management or with the \n+<<ilm-put-lifecycle, put policy>> API. \n+To create the policy from {kib}, go to **Management > Elasticsearch > Index Lifecycle Policies**.\n+\n+image:images/ilm/create-policy.png[]\n \n+[%collapsible]\n+.API example", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1NDYwNQ==", "bodyText": "We could tweak the CSS--the styling of the collapsible sections in general could use some TLC.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r448054605", "createdAt": "2020-07-01T00:42:27Z", "author": {"login": "debadair"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -51,18 +48,22 @@ A lifecycle policy specifies the phases in the index lifecycle\n and the actions to perform in each phase. A lifecycle can have up to four phases:\n `hot`, `warm`, `cold`, and `delete`. \n \n-You can define and manage policies through {kib} Management or with the \n-<<ilm-put-lifecycle, put policy>> API.\n-\n For example, you might define a `timeseries_policy` that has two phases:\n  \n * A `hot` phase that defines a rollover action to specify that an index rolls over when it \n reaches either a `max_size` of 50 gigabytes or a `max_age` of 30 days.\n * A `delete` phase that sets `min_age` to remove the index 90 days after rollover.\n Note that this value is relative to the rollover time, not the index creation time. \n \n-The underlying put policy request looks like this:\n+You can create the policy through {kib} Management or with the \n+<<ilm-put-lifecycle, put policy>> API. \n+To create the policy from {kib}, go to **Management > Elasticsearch > Index Lifecycle Policies**.\n+\n+image:images/ilm/create-policy.png[]\n \n+[%collapsible]\n+.API example", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk4MDMwOQ=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjEzMDk4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ilm/index.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMToxMTozMFrOGrOn5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzoxNToxM1rOGrlY5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk4MTU0Mw==", "bodyText": "I don't think that this screenshot adds a lot of value here. There's not any context for where this screenshot exists in the UI or how to get there, so I'd suggest removing it.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447981543", "createdAt": "2020-06-30T21:11:30Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ilm/index.asciidoc", "diffHunk": "@@ -5,17 +5,19 @@\n \n [partintro]\n --\n-You can configure {ilm} ({ilm-init}) policies to automatically manage indices according to\n-your performance, resiliency, and retention requirements. \n+You can configure {ilm} ({ilm-init}) policies to automatically manage indices \n+according to your performance, resiliency, and retention requirements. \n For example, you could use {ilm-init} to:\n \n * Spin up a new index when an index reaches a certain size or number of documents\n * Create a new index each day, week, or month and archive previous ones\n * Delete stale indices to enforce data retention standards\n-\n+ \n+You can create and manage index lifecycle policies through {kib} Management or the {ilm-init} APIs.\n When you enable {ilm} for {beats} or the {ls} {es} output plugin, \n-{ilm-init} is configured automatically. \n-You can modify the default policies through {kib} Management or the {ilm-init} APIs.\n+default policies are configured automatically.\n+\n+image:images/ilm/index-lifecycle-policies.png[]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1NDkxOA==", "bodyText": "Its primary purpose is to show that there is a UI.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r448054918", "createdAt": "2020-07-01T00:43:40Z", "author": {"login": "debadair"}, "path": "docs/reference/ilm/index.asciidoc", "diffHunk": "@@ -5,17 +5,19 @@\n \n [partintro]\n --\n-You can configure {ilm} ({ilm-init}) policies to automatically manage indices according to\n-your performance, resiliency, and retention requirements. \n+You can configure {ilm} ({ilm-init}) policies to automatically manage indices \n+according to your performance, resiliency, and retention requirements. \n For example, you could use {ilm-init} to:\n \n * Spin up a new index when an index reaches a certain size or number of documents\n * Create a new index each day, week, or month and archive previous ones\n * Delete stale indices to enforce data retention standards\n-\n+ \n+You can create and manage index lifecycle policies through {kib} Management or the {ilm-init} APIs.\n When you enable {ilm} for {beats} or the {ls} {es} output plugin, \n-{ilm-init} is configured automatically. \n-You can modify the default policies through {kib} Management or the {ilm-init} APIs.\n+default policies are configured automatically.\n+\n+image:images/ilm/index-lifecycle-policies.png[]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk4MTU0Mw=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1NDUzNA==", "bodyText": "Ah, understood! Perhaps it's worth adding a figure caption to explain the screenshot? For example:\n.Kibana screen for managing index lifecycle policies", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r448354534", "createdAt": "2020-07-01T13:15:13Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ilm/index.asciidoc", "diffHunk": "@@ -5,17 +5,19 @@\n \n [partintro]\n --\n-You can configure {ilm} ({ilm-init}) policies to automatically manage indices according to\n-your performance, resiliency, and retention requirements. \n+You can configure {ilm} ({ilm-init}) policies to automatically manage indices \n+according to your performance, resiliency, and retention requirements. \n For example, you could use {ilm-init} to:\n \n * Spin up a new index when an index reaches a certain size or number of documents\n * Create a new index each day, week, or month and archive previous ones\n * Delete stale indices to enforce data retention standards\n-\n+ \n+You can create and manage index lifecycle policies through {kib} Management or the {ilm-init} APIs.\n When you enable {ilm} for {beats} or the {ls} {es} output plugin, \n-{ilm-init} is configured automatically. \n-You can modify the default policies through {kib} Management or the {ilm-init} APIs.\n+default policies are configured automatically.\n+\n+image:images/ilm/index-lifecycle-policies.png[]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk4MTU0Mw=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjEzODc1OnYy", "diffSide": "RIGHT", "path": "docs/reference/ilm/ilm-overview.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMToxMzo1OFrOGrOs1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMToxMzo1OFrOGrOs1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk4MjgwNw==", "bodyText": "It seems that there's a missing description here.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447982807", "createdAt": "2020-06-30T21:13:58Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/ilm/ilm-overview.asciidoc", "diffHunk": "@@ -9,6 +9,7 @@\n \n You can create and apply {ilm-cap} ({ilm-init}) policies to automatically manage your indices \n according to your performance, resiliency, and retention requirements. \n+\n Index lifecycle policies can trigger actions such as:\n \n * **Rollover**: ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjIwOTMxOnYy", "diffSide": "RIGHT", "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTozNzo1MlrOGrPZDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTo0MDoxM1rOGrPdKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5NDEyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n          \n          \n            \n            choose the hot-warm architecture deployment template.\n          \n          \n            \n            \n          \n          \n            \n            +\n          \n          \n            \n            For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n          \n          \n            \n            awareness. ** {ess}: \n          \n          \n            \n            Choose the {cloud}/ec-getting-started-templates-hot-warm.html[hot-warm architecture] deployment template.\n          \n          \n            \n            \n          \n          \n            \n            +\n          \n          \n            \n            ** Self-managed cluster: Add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering].", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447994125", "createdAt": "2020-06-30T21:37:52Z", "author": {"login": "lockewritesdocs"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5NTE3Nw==", "bodyText": "Bit of a nit, but putting ESS and self-managed in separate bullets makes it easier to view the distinct choices. I think that I coded this correctly.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447995177", "createdAt": "2020-06-30T21:40:13Z", "author": {"login": "lockewritesdocs"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5NDEyNQ=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjI0MDUzOnYy", "diffSide": "RIGHT", "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTo0ODo0OVrOGrPsHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNzozMDowN1rOGs1fOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5OTAwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            . Activate the warm phase.\n          \n          \n            \n            . Under _Warm phase_, select *Activate warm phase*.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r447999005", "createdAt": "2020-06-30T21:48:49Z", "author": {"login": "lockewritesdocs"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n+to label data nodes as hot or warm. This step is required to migrate shards between\n+nodes configured with specific hardware for the hot or warm phases.\n++\n+For example, you can set this in your `elasticsearch.yml` for each data node:\n++\n+[source,yaml]\n+--------------------------------------------------------------------------------\n+node.attr.data: \"warm\"\n+--------------------------------------------------------------------------------\n+\n+* A server with {filebeat} installed and configured to send logs to the `elasticsearch`\n+output as described in {filebeat-ref}/filebeat-getting-started.html[Getting Started with {filebeat}].\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-view-fb-ilm-policy]]\n+==== View the {filebeat} {ilm-init} policy\n+\n+{filebeat} includes a default {ilm-init} policy that enables rollover. {ilm-init}\n+is enabled automatically if you\u2019re using the default `filebeat.yml` and index template.\n+\n+To view the default policy in {kib}, open the menu, go to * Stack Management > {es} > Index Lifecycle Policies*,\n+search for _filebeat_, and choose the _filebeat-version_ policy.\n+\n+This policy initiates the rollover action when the index size reaches 50GB or\n+becomes 30 days old.\n+\n+[role=\"screenshot\"]\n+image::images/tutorial-ilm-hotphaserollover-default.png[\"Default policy\"]\n+\n+\n+[float]\n+==== Modify the policy\n+\n+The default policy is enough to prevent the creation of many tiny daily indices.\n+You can modify the policy to meet more complex requirements.\n+\n+. Activate the warm phase.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2Njg3Mg==", "bodyText": "I'm going to stet this--I think it's sufficiently obvious from the UI.", "url": "https://github.com/elastic/elasticsearch/pull/57909#discussion_r449666872", "createdAt": "2020-07-03T17:30:07Z", "author": {"login": "debadair"}, "path": "docs/management/index-lifecycle-policies/example-index-lifecycle-policy.asciidoc", "diffHunk": "@@ -0,0 +1,179 @@\n+[role=\"xpack\"]\n+\n+[[example-using-index-lifecycle-policy]]\n+=== Tutorial: Use {ilm-init} to manage {filebeat} time-based indices\n+\n+With {ilm} ({ilm-init}), you can create policies that perform actions automatically \n+on indices as they age and grow. {ilm-init} policies help you to manage\n+performance, resilience, and retention of your data during its lifecycle. This tutorial shows\n+you how to use {kib}\u2019s *Index Lifecycle Policies* to modify and create {ilm-init}\n+policies. You can learn more about all of the actions, benefits, and lifecycle\n+phases in the {ref}/overview-index-lifecycle-management.html[{ilm-init} overview].\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-scenario]]\n+==== Scenario\n+\n+You\u2019re tasked with sending syslog files to an {es} cluster. This\n+log data has the following data retention guidelines:\n+\n+* Keep logs on hot data nodes for 30 days\n+* Roll over to a new index if the size reaches 50GB\n+* After 30 days:\n+** Move the logs to warm data nodes\n+** Set {ref}/glossary.html#glossary-replica-shard[replica shards] to 1\n+** {ref}/indices-forcemerge.html[Force merge] multiple index segments to free up the space used by deleted documents\n+* Delete logs after 90 days\n+\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-prerequisites]]\n+==== Prerequisites\n+\n+To complete this tutorial, you'll need:\n+\n+* An {es} cluster with hot and warm nodes configured for shard allocation\n+awareness. If you\u2019re using {cloud}/ec-getting-started-templates-hot-warm.html[{ess}],\n+choose the hot-warm architecture deployment template.\n+\n++\n+For a self-managed cluster, add node attributes as described for {ref}/shard-allocation-filtering.html[shard allocation filtering]\n+to label data nodes as hot or warm. This step is required to migrate shards between\n+nodes configured with specific hardware for the hot or warm phases.\n++\n+For example, you can set this in your `elasticsearch.yml` for each data node:\n++\n+[source,yaml]\n+--------------------------------------------------------------------------------\n+node.attr.data: \"warm\"\n+--------------------------------------------------------------------------------\n+\n+* A server with {filebeat} installed and configured to send logs to the `elasticsearch`\n+output as described in {filebeat-ref}/filebeat-getting-started.html[Getting Started with {filebeat}].\n+\n+[discrete]\n+[[example-using-index-lifecycle-policy-view-fb-ilm-policy]]\n+==== View the {filebeat} {ilm-init} policy\n+\n+{filebeat} includes a default {ilm-init} policy that enables rollover. {ilm-init}\n+is enabled automatically if you\u2019re using the default `filebeat.yml` and index template.\n+\n+To view the default policy in {kib}, open the menu, go to * Stack Management > {es} > Index Lifecycle Policies*,\n+search for _filebeat_, and choose the _filebeat-version_ policy.\n+\n+This policy initiates the rollover action when the index size reaches 50GB or\n+becomes 30 days old.\n+\n+[role=\"screenshot\"]\n+image::images/tutorial-ilm-hotphaserollover-default.png[\"Default policy\"]\n+\n+\n+[float]\n+==== Modify the policy\n+\n+The default policy is enough to prevent the creation of many tiny daily indices.\n+You can modify the policy to meet more complex requirements.\n+\n+. Activate the warm phase.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5OTAwNQ=="}, "originalCommit": {"oid": "455e8f4f622c4b1e8cb730ccb8fff47ce711f7a3"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1657, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}