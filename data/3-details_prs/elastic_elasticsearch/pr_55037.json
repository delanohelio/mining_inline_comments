{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjg2NDUz", "number": 55037, "title": "Add geo_shape mapper supporting doc-values in Spatial Plugin", "bodyText": "After #53562, the geo_shape field mapper is registered within\na module. This opens the door for introducing a new geo_shape\nfield mapper into the Spatial Plugin that has doc-values support.\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation.\nthis adds a doc_values param to the geo_shape mapping that defaults to true", "createdAt": "2020-04-09T23:10:28Z", "url": "https://github.com/elastic/elasticsearch/pull/55037", "merged": true, "mergeCommit": {"oid": "b78dfb07ae1f79300cfb9a99a740bf5cdd0e2f9b"}, "closed": true, "closedAt": "2020-04-16T16:18:10Z", "author": {"login": "talevy"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWFLWGABqjMyMjAzMDkyODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYOXDdgFqTM5NDc0NTU0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4252d6fb8b6bc2ecc8dccb6806a0e985be620ae6", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/4252d6fb8b6bc2ecc8dccb6806a0e985be620ae6", "committedDate": "2020-04-09T22:54:44Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}, "afterCommit": {"oid": "ce2e3a13b027c6f939b09687424746b96c95cf8b", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/ce2e3a13b027c6f939b09687424746b96c95cf8b", "committedDate": "2020-04-09T23:34:08Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce2e3a13b027c6f939b09687424746b96c95cf8b", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/ce2e3a13b027c6f939b09687424746b96c95cf8b", "committedDate": "2020-04-09T23:34:08Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}, "afterCommit": {"oid": "101d1609707384e072a9702780933000411a3f1f", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/101d1609707384e072a9702780933000411a3f1f", "committedDate": "2020-04-09T23:49:07Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "101d1609707384e072a9702780933000411a3f1f", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/101d1609707384e072a9702780933000411a3f1f", "committedDate": "2020-04-09T23:49:07Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}, "afterCommit": {"oid": "3f0e61ca424815454a7368df0ae33c72333282fa", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/3f0e61ca424815454a7368df0ae33c72333282fa", "committedDate": "2020-04-10T15:13:19Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f0e61ca424815454a7368df0ae33c72333282fa", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/3f0e61ca424815454a7368df0ae33c72333282fa", "committedDate": "2020-04-10T15:13:19Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}, "afterCommit": {"oid": "493cd50e2cadaeb5977d7361b6e071f8050a3a50", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/493cd50e2cadaeb5977d7361b6e071f8050a3a50", "committedDate": "2020-04-10T19:49:33Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "493cd50e2cadaeb5977d7361b6e071f8050a3a50", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/493cd50e2cadaeb5977d7361b6e071f8050a3a50", "committedDate": "2020-04-10T19:49:33Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}, "afterCommit": {"oid": "12383745d7699903a4ee40aaf592ad5af17d7ae2", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/12383745d7699903a4ee40aaf592ad5af17d7ae2", "committedDate": "2020-04-10T20:06:59Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12383745d7699903a4ee40aaf592ad5af17d7ae2", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/12383745d7699903a4ee40aaf592ad5af17d7ae2", "committedDate": "2020-04-10T20:06:59Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}, "afterCommit": {"oid": "b79b2f87709b6986d393a842515b393b1c0271da", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/b79b2f87709b6986d393a842515b393b1c0271da", "committedDate": "2020-04-10T22:10:18Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bce21fb96f6507e01b6bb91080b1c2863ddbcec9", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/bce21fb96f6507e01b6bb91080b1c2863ddbcec9", "committedDate": "2020-04-10T22:46:17Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b79b2f87709b6986d393a842515b393b1c0271da", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/b79b2f87709b6986d393a842515b393b1c0271da", "committedDate": "2020-04-10T22:10:18Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}, "afterCommit": {"oid": "bce21fb96f6507e01b6bb91080b1c2863ddbcec9", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/bce21fb96f6507e01b6bb91080b1c2863ddbcec9", "committedDate": "2020-04-10T22:46:17Z", "message": "Add geo_shape mapper supporting doc-values in Spatial Plugin\n\nAfter #53562, the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper,\nbut with the addition of the doc values implementation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ce6df94a8da943343e50f9de1b2a0e41a0a1004", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/2ce6df94a8da943343e50f9de1b2a0e41a0a1004", "committedDate": "2020-04-13T17:40:14Z", "message": "fix extra doc-value-field addition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34be9cabeb3c2e4f17bbd4f53159e040e4b9fbf9", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/34be9cabeb3c2e4f17bbd4f53159e040e4b9fbf9", "committedDate": "2020-04-13T17:59:11Z", "message": "Merge remote-tracking branch 'elastic/master' into x-pack-geo-shape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d00c40b8a9799ec6cb3d62e081e659864f343c71", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/d00c40b8a9799ec6cb3d62e081e659864f343c71", "committedDate": "2020-04-13T19:27:14Z", "message": "fix sql"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMzgzNTg5", "url": "https://github.com/elastic/elasticsearch/pull/55037#pullrequestreview-392383589", "createdAt": "2020-04-13T19:38:54Z", "commit": {"oid": "d00c40b8a9799ec6cb3d62e081e659864f343c71"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTozODo1NFrOGEyhNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTozODo1NFrOGEyhNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3NTE4OA==", "bodyText": "@elastic/es-ql does anyone know why the geo_shape field was here as isFromDocValuesOnly when the field did not have doc values?", "url": "https://github.com/elastic/elasticsearch/pull/55037#discussion_r407675188", "createdAt": "2020-04-13T19:38:54Z", "author": {"login": "talevy"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/SqlDataTypes.java", "diffHunk": "@@ -274,7 +274,6 @@ public static boolean isFromDocValuesOnly(DataType dataType) {\n                 || dataType == SCALED_FLOAT // because of scaling_factor\n                 || dataType == CONSTANT_KEYWORD\n                 || dataType == GEO_POINT\n-                || dataType == GEO_SHAPE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00c40b8a9799ec6cb3d62e081e659864f343c71"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44d846213032f4e28e77e3910ea23b014b36f4b5", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/44d846213032f4e28e77e3910ea23b014b36f4b5", "committedDate": "2020-04-13T23:50:21Z", "message": "copy module/geo's geo_shape yaml tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "185d3c7d98d3d537338218f89993c82f00652b90", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/185d3c7d98d3d537338218f89993c82f00652b90", "committedDate": "2020-04-14T00:58:53Z", "message": "Merge remote-tracking branch 'elastic/master' into x-pack-geo-shape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac1f65147a5772bd66ba1c6bf50cedf50b39f028", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/ac1f65147a5772bd66ba1c6bf50cedf50b39f028", "committedDate": "2020-04-14T19:32:16Z", "message": "Merge remote-tracking branch 'elastic/master' into x-pack-geo-shape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d561e7c3e8621a2c8317a2eca20610af5d5dd62", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/1d561e7c3e8621a2c8317a2eca20610af5d5dd62", "committedDate": "2020-04-15T03:28:34Z", "message": "rename fieldmapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12d6a6cdd7b8adbc1bbf910efdfef7f18ef74591", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/12d6a6cdd7b8adbc1bbf910efdfef7f18ef74591", "committedDate": "2020-04-15T03:34:10Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNTM3MDgz", "url": "https://github.com/elastic/elasticsearch/pull/55037#pullrequestreview-393537083", "createdAt": "2020-04-15T07:54:48Z", "commit": {"oid": "12d6a6cdd7b8adbc1bbf910efdfef7f18ef74591"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzo1NDo0OFrOGFuBag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzo1NDo0OFrOGFuBag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1MDA5MA==", "bodyText": "Can we add a test that defines the behaviour when merging mapping with different set up in doc values? (I guess this class does not exists together with GeoShapeFieldMapper? you have either one or the other)", "url": "https://github.com/elastic/elasticsearch/pull/55037#discussion_r408650090", "createdAt": "2020-04-15T07:54:48Z", "author": {"login": "iverase"}, "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/GeoShapeWithDocValuesFieldMapper.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.spatial.index.mapper;\n+\n+import org.apache.lucene.document.LatLonShape;\n+import org.apache.lucene.document.ShapeField;\n+import org.apache.lucene.index.IndexableField;\n+import org.apache.lucene.index.Term;\n+import org.apache.lucene.search.DocValuesFieldExistsQuery;\n+import org.apache.lucene.search.Query;\n+import org.apache.lucene.search.TermQuery;\n+import org.apache.lucene.util.BytesRef;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Explicit;\n+import org.elasticsearch.common.geo.GeometryParser;\n+import org.elasticsearch.common.geo.builders.ShapeBuilder;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.support.XContentMapValues;\n+import org.elasticsearch.geometry.Geometry;\n+import org.elasticsearch.index.fielddata.IndexFieldData;\n+import org.elasticsearch.index.mapper.AbstractGeometryFieldMapper;\n+import org.elasticsearch.index.mapper.FieldNamesFieldMapper;\n+import org.elasticsearch.index.mapper.GeoShapeIndexer;\n+import org.elasticsearch.index.mapper.LegacyGeoShapeFieldMapper;\n+import org.elasticsearch.index.mapper.MappedFieldType;\n+import org.elasticsearch.index.mapper.Mapper;\n+import org.elasticsearch.index.mapper.MapperParsingException;\n+import org.elasticsearch.index.mapper.ParseContext;\n+import org.elasticsearch.index.mapper.TypeParsers;\n+import org.elasticsearch.index.query.QueryShardContext;\n+import org.elasticsearch.index.query.QueryShardException;\n+import org.elasticsearch.index.query.VectorGeoShapeQueryProcessor;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Extension of {@link org.elasticsearch.index.mapper.GeoShapeFieldMapper} that supports docValues\n+ *\n+ * FieldMapper for indexing {@link LatLonShape}s.\n+ * <p>\n+ * Currently Shapes can only be indexed and can only be queried using\n+ * {@link org.elasticsearch.index.query.GeoShapeQueryBuilder}, consequently\n+ * a lot of behavior in this Mapper is disabled.\n+ * <p>\n+ * Format supported:\n+ * <p>\n+ * \"field\" : {\n+ * \"type\" : \"polygon\",\n+ * \"coordinates\" : [\n+ * [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ]\n+ * ]\n+ * }\n+ * <p>\n+ * or:\n+ * <p>\n+ * \"field\" : \"POLYGON ((100.0 0.0, 101.0 0.0, 101.0 1.0, 100.0 1.0, 100.0 0.0))\n+ */\n+public class GeoShapeWithDocValuesFieldMapper extends AbstractGeometryFieldMapper<Geometry, Geometry> {\n+    public static final String CONTENT_TYPE = \"geo_shape\";\n+\n+\n+    private Explicit<Boolean> docValues;\n+\n+    @Override\n+    public void doXContentBody(XContentBuilder builder, boolean includeDefaults, Params params) throws IOException {\n+        super.doXContentBody(builder, includeDefaults, params);\n+        if (includeDefaults || docValues.explicit()) {\n+            builder.field(TypeParsers.DOC_VALUES, docValues.value());\n+        }\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    public static class Builder extends AbstractGeometryFieldMapper.Builder<AbstractGeometryFieldMapper.Builder,\n+            GeoShapeWithDocValuesFieldMapper> {\n+        public Builder(String name) {\n+            super (name, new GeoShapeWithDocValuesFieldType(), new GeoShapeWithDocValuesFieldType());\n+        }\n+\n+        @Override\n+        public GeoShapeWithDocValuesFieldMapper build(BuilderContext context) {\n+            setupFieldType(context);\n+            return new GeoShapeWithDocValuesFieldMapper(name, fieldType, defaultFieldType, ignoreMalformed(context), coerce(context),\n+                ignoreZValue(), docValues(), context.indexSettings(),\n+                multiFieldsBuilder.build(this, context), copyTo);\n+        }\n+\n+        @Override\n+        public boolean defaultDocValues(Version indexCreated) {\n+            return Version.V_8_0_0.onOrBefore(indexCreated);\n+        }\n+\n+        protected Explicit<Boolean> docValues() {\n+            if (docValuesSet && fieldType.hasDocValues()) {\n+                return new Explicit<>(true, true);\n+            } else if (docValuesSet) {\n+                return new Explicit<>(false, true);\n+            }\n+            return new Explicit<>(fieldType.hasDocValues(), false);\n+        }\n+\n+        protected void setupFieldType(BuilderContext context) {\n+            super.setupFieldType(context);\n+\n+            GeoShapeWithDocValuesFieldType fieldType = (GeoShapeWithDocValuesFieldType)fieldType();\n+            boolean orientation = fieldType.orientation() == ShapeBuilder.Orientation.RIGHT;\n+\n+            GeometryParser geometryParser = new GeometryParser(orientation, coerce(context).value(), ignoreZValue().value());\n+\n+            fieldType.setGeometryIndexer(new GeoShapeIndexer(orientation, fieldType.name()) {\n+                @Override\n+                public List<IndexableField> indexShape(ParseContext context, Geometry shape) {\n+                    List<IndexableField> fields = super.indexShape(context, shape);\n+                    if (fieldType().hasDocValues()) {\n+                        CentroidCalculator calculator = new CentroidCalculator(shape);\n+                        final byte[] scratch = new byte[7 * Integer.BYTES];\n+                        // doc values are generated from the indexed fields.\n+                        ShapeField.DecodedTriangle[] triangles = new ShapeField.DecodedTriangle[fields.size()];\n+                        for (int i = 0; i < fields.size(); i++) {\n+                            BytesRef bytesRef = fields.get(i).binaryValue();\n+                            assert bytesRef.length == 7 * Integer.BYTES;\n+                            System.arraycopy(bytesRef.bytes, bytesRef.offset, scratch, 0, 7 * Integer.BYTES);\n+                            ShapeField.decodeTriangle(scratch, triangles[i] = new ShapeField.DecodedTriangle());\n+                        }\n+                        BinaryGeoShapeDocValuesField docValuesField =\n+                            (BinaryGeoShapeDocValuesField) context.doc().getByKey(name);\n+                        if (docValuesField == null) {\n+                            docValuesField = new BinaryGeoShapeDocValuesField(name, triangles, calculator);\n+                            context.doc().addWithKey(name, docValuesField);\n+                        } else {\n+                            docValuesField.add(triangles, calculator);\n+                        }\n+                    }\n+                    return fields;\n+                }\n+            });\n+            fieldType.setGeometryParser( (parser, mapper) -> geometryParser.parse(parser));\n+            fieldType.setGeometryQueryBuilder(new VectorGeoShapeQueryProcessor());\n+        }\n+    }\n+\n+    public static final class GeoShapeWithDocValuesFieldType extends AbstractGeometryFieldType<Geometry, Geometry> {\n+        public GeoShapeWithDocValuesFieldType() {\n+            super();\n+        }\n+\n+        protected GeoShapeWithDocValuesFieldType(GeoShapeWithDocValuesFieldType ref) {\n+            super(ref);\n+        }\n+\n+        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {\n+            failIfNoDocValues();\n+            return new AbstractLatLonShapeDVIndexFieldData.Builder();\n+        }\n+\n+        @Override\n+        public Query existsQuery(QueryShardContext context) {\n+            if (hasDocValues()) {\n+                return new DocValuesFieldExistsQuery(name());\n+            } else {\n+                return new TermQuery(new Term(FieldNamesFieldMapper.NAME, name()));\n+            }\n+        }\n+\n+        @Override\n+        public Query termQuery(Object value, QueryShardContext context) {\n+            throw new QueryShardException(context, \"Geo fields do not support exact searching, use dedicated geo queries instead: [\"\n+                + name() + \"]\");\n+        }\n+\n+        @Override\n+        public GeoShapeWithDocValuesFieldType clone() {\n+            return new GeoShapeWithDocValuesFieldType(this);\n+        }\n+\n+        @Override\n+        public String typeName() {\n+            return CONTENT_TYPE;\n+        }\n+    }\n+\n+    public static final class TypeParser extends AbstractGeometryFieldMapper.TypeParser {\n+\n+        @Override\n+        @SuppressWarnings(\"rawtypes\")\n+        protected AbstractGeometryFieldMapper.Builder newBuilder(String name, Map<String, Object> params) {\n+            if (params.containsKey(DEPRECATED_PARAMETERS_KEY)) {\n+                return new LegacyGeoShapeFieldMapper.Builder(name,\n+                    (LegacyGeoShapeFieldMapper.DeprecatedParameters)params.get(DEPRECATED_PARAMETERS_KEY));\n+            }\n+            return new GeoShapeWithDocValuesFieldMapper.Builder(name);\n+        }\n+\n+        @Override\n+        @SuppressWarnings(\"rawtypes\")\n+        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n+            Map<String, Object> params = new HashMap<>();\n+            AbstractGeometryFieldMapper.Builder builder = (AbstractGeometryFieldMapper.Builder) super.parse(name, node, parserContext);\n+            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n+                Map.Entry<String, Object> entry = iterator.next();\n+                String fieldName = entry.getKey();\n+                Object fieldNode = entry.getValue();\n+                if (TypeParsers.DOC_VALUES.equals(fieldName)) {\n+                    params.put(TypeParsers.DOC_VALUES, XContentMapValues.nodeBooleanValue(fieldNode, name + \".\" + TypeParsers.DOC_VALUES));\n+                    iterator.remove();\n+                }\n+            }\n+\n+            if (params.containsKey(TypeParsers.DOC_VALUES)) {\n+                builder.docValues((Boolean) params.get(TypeParsers.DOC_VALUES));\n+            }\n+            return builder;\n+        }\n+    }\n+\n+    public GeoShapeWithDocValuesFieldMapper(String simpleName, MappedFieldType fieldType, MappedFieldType defaultFieldType,\n+                                            Explicit<Boolean> ignoreMalformed, Explicit<Boolean> coerce,\n+                                            Explicit<Boolean> ignoreZValue, Explicit<Boolean> docValues, Settings indexSettings,\n+                                            MultiFields multiFields, CopyTo copyTo) {\n+        super(simpleName, fieldType, defaultFieldType, ignoreMalformed, coerce, ignoreZValue, indexSettings,\n+            multiFields, copyTo);\n+        this.docValues = docValues;\n+    }\n+\n+    @Override\n+    protected void doMerge(Mapper mergeWith) {\n+        if (mergeWith instanceof LegacyGeoShapeFieldMapper) {\n+            LegacyGeoShapeFieldMapper legacy = (LegacyGeoShapeFieldMapper) mergeWith;\n+            throw new IllegalArgumentException(\"[\" + fieldType().name() + \"] with field mapper [\" + fieldType().typeName() + \"] \" +\n+                \"using [BKD] strategy cannot be merged with \" + \"[\" + legacy.fieldType().typeName() + \"] with [\" +\n+                legacy.fieldType().strategy() + \"] strategy\");\n+        }\n+        super.doMerge(mergeWith);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12d6a6cdd7b8adbc1bbf910efdfef7f18ef74591"}, "originalPosition": 241}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bda15e1520e108d91c41f5973350cd8a7b28cad", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/0bda15e1520e108d91c41f5973350cd8a7b28cad", "committedDate": "2020-04-15T21:32:03Z", "message": "re-use a bit more of the GeoShapeFieldMapper code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2da60973acb6b376a659787b01b8b1d4f842984d", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/2da60973acb6b376a659787b01b8b1d4f842984d", "committedDate": "2020-04-15T21:43:43Z", "message": "Merge remote-tracking branch 'elastic/master' into x-pack-geo-shape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2455a12284953371097a6136486b48fcf4e8550a", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/2455a12284953371097a6136486b48fcf4e8550a", "committedDate": "2020-04-16T15:11:44Z", "message": "set geo-shape sql datatype doc values false"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcd621534a1014a9b672208c162a287ae457961c", "author": {"user": {"login": "talevy", "name": "Tal Levy"}}, "url": "https://github.com/elastic/elasticsearch/commit/dcd621534a1014a9b672208c162a287ae457961c", "committedDate": "2020-04-16T15:12:07Z", "message": "Merge remote-tracking branch 'elastic/master' into x-pack-geo-shape"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NzQ1NTQ5", "url": "https://github.com/elastic/elasticsearch/pull/55037#pullrequestreview-394745549", "createdAt": "2020-04-16T15:24:07Z", "commit": {"oid": "dcd621534a1014a9b672208c162a287ae457961c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3436, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}