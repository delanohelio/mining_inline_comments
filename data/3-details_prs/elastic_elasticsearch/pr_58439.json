{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NTg0NDE3", "number": 58439, "title": "Move MappedFieldType.similarity() to TextSearchInfo", "bodyText": "Similarities only apply to a few text-based field types, but are currently set directly on\nthe base MappedFieldType class.  This commit moves similarity information into\nTextSearchInfo, and removes any mentions of it from MappedFieldType or FieldMapper.\nIt was previously possible to include a similarity parameter on a number of field types\nthat would then ignore this information.  To make it obvious that this has no effect, setting\nthis parameter on non-text field types now issues a deprecation warning.", "createdAt": "2020-06-23T13:48:47Z", "url": "https://github.com/elastic/elasticsearch/pull/58439", "merged": true, "mergeCommit": {"oid": "83ce7a96915e32112229017cee7a0bdf834ccc34"}, "closed": true, "closedAt": "2020-06-24T08:54:56Z", "author": {"login": "romseygeek"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsF76dgH2gAyNDM4NTg0NDE3OjE4YzFkODMwNjliODNiYjBiYzJkNWZmZGU1ZDBjNDZlYzU5Y2JhZjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuqdstgFqTQzNzI4MjMxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "18c1d83069b83bb0bc2d5ffde5d0c46ec59cbaf8", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/18c1d83069b83bb0bc2d5ffde5d0c46ec59cbaf8", "committedDate": "2020-06-17T08:53:43Z", "message": "Add TextSearchInfo class to wrap up text search details"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ba04c835fff053e19891e9bfefd292f189d7398", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/1ba04c835fff053e19891e9bfefd292f189d7398", "committedDate": "2020-06-17T08:53:53Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/textsearchinfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9852fcd7c0214b627884e2e4b772c79d52c68944", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/9852fcd7c0214b627884e2e4b772c79d52c68944", "committedDate": "2020-06-17T08:59:17Z", "message": "javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d304670ce8c87be4208aaf967ae90468ecd96cb", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/9d304670ce8c87be4208aaf967ae90468ecd96cb", "committedDate": "2020-06-18T13:01:23Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/textsearchinfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "842883d440daff35e6c3605ae4c90ebac239e357", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/842883d440daff35e6c3605ae4c90ebac239e357", "committedDate": "2020-06-18T14:47:07Z", "message": "Don't expose lucene FieldType directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cedf0cfaaa66fa17b1fa7badc4826e45b54d899a", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/cedf0cfaaa66fa17b1fa7badc4826e45b54d899a", "committedDate": "2020-06-18T15:17:10Z", "message": "rationalise; javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dcbc22a2fa84c7611303a8c694de9df686ffd6f", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/0dcbc22a2fa84c7611303a8c694de9df686ffd6f", "committedDate": "2020-06-23T09:12:23Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/textsearchinfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c44158f900627fcdbe0e14ccb87678f95b428f5b", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/c44158f900627fcdbe0e14ccb87678f95b428f5b", "committedDate": "2020-06-23T09:33:19Z", "message": "Add TextSearchInfo.NONE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83bc7b6b2a022fb67343e699e856ff1c9c9a83e7", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/83bc7b6b2a022fb67343e699e856ff1c9c9a83e7", "committedDate": "2020-06-23T13:34:29Z", "message": "Move MappedFieldType.similarity to TextSearchInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5577d9514b63c8b950f64fe27d5a66bdb989ed98", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/5577d9514b63c8b950f64fe27d5a66bdb989ed98", "committedDate": "2020-06-23T13:41:12Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/similarity"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1ODAyODM5", "url": "https://github.com/elastic/elasticsearch/pull/58439#pullrequestreview-435802839", "createdAt": "2020-06-23T13:50:34Z", "commit": {"oid": "5577d9514b63c8b950f64fe27d5a66bdb989ed98"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzo1MDozNFrOGnqOLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzo1MzozMFrOGnqXFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzOTQwNA==", "bodyText": "The shared parseTextField() method does a deprecation check for similarity now, so we need to move it to after we've processed the similarity field.  To ensure that mapper-specific fields still get checked for null, a new TypeParsers.checkNull() method is called for each entry.", "url": "https://github.com/elastic/elasticsearch/pull/58439#discussion_r444239404", "createdAt": "2020-06-23T13:50:34Z", "author": {"login": "romseygeek"}, "path": "modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/SearchAsYouTypeFieldMapper.java", "diffHunk": "@@ -113,30 +116,39 @@\n             builder.indexAnalyzer(parserContext.getIndexAnalyzers().getDefaultIndexAnalyzer());\n             builder.searchAnalyzer(parserContext.getIndexAnalyzers().getDefaultSearchAnalyzer());\n             builder.searchQuoteAnalyzer(parserContext.getIndexAnalyzers().getDefaultSearchQuoteAnalyzer());\n-            parseTextField(builder, name, node, parserContext);\n             for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                 final Map.Entry<String, Object> entry = iterator.next();\n                 final String fieldName = entry.getKey();\n                 final Object fieldNode = entry.getValue();\n-\n+                checkNull(fieldName, fieldNode);\n                 if (fieldName.equals(\"max_shingle_size\")) {\n                     builder.maxShingleSize(nodeIntegerValue(fieldNode));\n                     iterator.remove();\n+                } else if (fieldName.equals(\"similarity\")) {\n+                    SimilarityProvider similarityProvider = TypeParsers.resolveSimilarity(parserContext, fieldName, fieldNode.toString());\n+                    builder.similarity(similarityProvider);\n+                    iterator.remove();\n                 }\n                 // TODO should we allow to configure the prefix field\n             }\n+            parseTextField(builder, name, node, parserContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5577d9514b63c8b950f64fe27d5a66bdb989ed98"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI0MDYxNg==", "bodyText": "Same process here as in SearchAsYouTypeFieldMapper", "url": "https://github.com/elastic/elasticsearch/pull/58439#discussion_r444240616", "createdAt": "2020-06-23T13:52:03Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java", "diffHunk": "@@ -310,8 +317,13 @@ public TextFieldMapper build(BuilderContext context) {\n                 } else if (propName.equals(\"index_phrases\")) {\n                     builder.indexPhrases(XContentMapValues.nodeBooleanValue(propNode, \"index_phrases\"));\n                     iterator.remove();\n+                } else if (propName.equals(\"similarity\")) {\n+                    SimilarityProvider similarityProvider = TypeParsers.resolveSimilarity(parserContext, fieldName, propNode.toString());\n+                    builder.similarity(similarityProvider);\n+                    iterator.remove();\n                 }\n             }\n+            parseTextField(builder, fieldName, node, parserContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5577d9514b63c8b950f64fe27d5a66bdb989ed98"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI0MTY4Nw==", "bodyText": "This has been moved directly into the applicable FieldMappers", "url": "https://github.com/elastic/elasticsearch/pull/58439#discussion_r444241687", "createdAt": "2020-06-23T13:53:30Z", "author": {"login": "romseygeek"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldMapperTestCase.java", "diffHunk": "@@ -106,10 +103,6 @@ private Modifier booleanModifier(String name, boolean updateable, BiConsumer<T,\n             a.searchQuoteAnalyzer(new NamedAnalyzer(\"standard\", AnalyzerScope.INDEX, new StandardAnalyzer()));\n             a.searchQuoteAnalyzer(new NamedAnalyzer(\"whitespace\", AnalyzerScope.INDEX, new WhitespaceAnalyzer()));\n         }),\n-        new Modifier(\"similarity\", false, (a, b) -> {\n-            a.similarity(new SimilarityProvider(\"BM25\", new BM25Similarity()));\n-            b.similarity(new SimilarityProvider(\"boolean\", new BooleanSimilarity()));\n-        }),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5577d9514b63c8b950f64fe27d5a66bdb989ed98"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1ODc0MjU4", "url": "https://github.com/elastic/elasticsearch/pull/58439#pullrequestreview-435874258", "createdAt": "2020-06-23T15:00:52Z", "commit": {"oid": "5577d9514b63c8b950f64fe27d5a66bdb989ed98"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MjgyMzE1", "url": "https://github.com/elastic/elasticsearch/pull/58439#pullrequestreview-437282315", "createdAt": "2020-06-25T08:35:03Z", "commit": {"oid": "5577d9514b63c8b950f64fe27d5a66bdb989ed98"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODozNTowM1rOGow4Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODozNTowM1rOGow4Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM5NzAzOQ==", "bodyText": "would it be possible to avoid having null similarity provider in TextSearchInfo and rather pass in directly the default similarity, or have some placeholder instead of null?", "url": "https://github.com/elastic/elasticsearch/pull/58439#discussion_r445397039", "createdAt": "2020-06-25T08:35:03Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/similarity/SimilarityService.java", "diffHunk": "@@ -163,7 +163,8 @@ Similarity getDefaultSimilarity() {\n         @Override\n         public Similarity get(String name) {\n             MappedFieldType fieldType = mapperService.fieldType(name);\n-            return (fieldType != null && fieldType.similarity() != null) ? fieldType.similarity().get() : defaultSimilarity;\n+            return (fieldType != null && fieldType.getTextSearchInfo().getSimilarity() != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5577d9514b63c8b950f64fe27d5a66bdb989ed98"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 359, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}