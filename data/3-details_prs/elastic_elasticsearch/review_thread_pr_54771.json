{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MDg2MzU2", "number": 54771, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDowNDo1MFrODu4VNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoyODo0MVrODvqpTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDg0MDIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestReloadSecureSettingsAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDowNDo1MFrOGBASfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNDowNDo1MFrOGBASfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcwNjQ5Mg==", "bodyText": "This is the result of a master merge gone wrong in the feature branch : 4780880#diff-0187f4b109fbd7256c987cceae7691caL76\nThis is the actual fix and the only change necessary. If the buildSrc changes need further discussion, we could just merge the fix and the rest of the test changes when ready.", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r403706492", "createdAt": "2020-04-05T14:04:50Z", "author": {"login": "jkakavas"}, "path": "server/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestReloadSecureSettingsAction.java", "diffHunk": "@@ -73,7 +73,7 @@ public RestChannelConsumer prepareRequest(RestRequest request, NodeClient client\n             .setNodesIds(nodesIds);\n         request.withContentOrSourceParamParserOrNull(parser -> {\n             if (parser != null) {\n-                final NodesReloadSecureSettingsRequest nodesRequest = nodesRequestBuilder.request();\n+                final NodesReloadSecureSettingsRequest nodesRequest = PARSER.parse(parser, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92c6cfb067bea10d196c3c3322e19f46daeb3b2b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTQyMDgyOnYy", "diffSide": "RIGHT", "path": "docs/reference/cluster/nodes-reload-secure-settings.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMDozNDoyOFrOGBE1nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjo0NTowN1rOGBJvyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MTAyMA==", "bodyText": "Why are these NOTCONSOLE? They look console to me.\nI realise it's existing, but it seems like this docs issue is due in part to these not being treated as testable snippets.", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r403781020", "createdAt": "2020-04-06T00:34:28Z", "author": {"login": "tvernum"}, "path": "docs/reference/cluster/nodes-reload-secure-settings.asciidoc", "diffHunk": "@@ -89,7 +89,7 @@ node of the cluster:\n --------------------------------------------------\n POST _nodes/reload_secure_settings\n {\n-  \"reload_secure_settings\": \"s3cr3t\"\n+  \"secure_settings_password\": \"s3cr3t\"\n }\n --------------------------------------------------\n // NOTCONSOLE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed1cc00798a320f8cece058103a07e6dee834015"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg2MTQ0OA==", "bodyText": "Because I forgot to enable them :) When this was first introduced, I think NOTCONSOLE was there to cater for the fact that we couldn't set the keystore password in a proper way in the docs cluster", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r403861448", "createdAt": "2020-04-06T06:45:07Z", "author": {"login": "jkakavas"}, "path": "docs/reference/cluster/nodes-reload-secure-settings.asciidoc", "diffHunk": "@@ -89,7 +89,7 @@ node of the cluster:\n --------------------------------------------------\n POST _nodes/reload_secure_settings\n {\n-  \"reload_secure_settings\": \"s3cr3t\"\n+  \"secure_settings_password\": \"s3cr3t\"\n }\n --------------------------------------------------\n // NOTCONSOLE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MTAyMA=="}, "originalCommit": {"oid": "ed1cc00798a320f8cece058103a07e6dee834015"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTQ0NTc3OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/ElasticsearchNode.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMDo1OTozNVrOGBFCzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjo1NDowM1rOGBJ92A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4NDM5OA==", "bodyText": "nits: the redirectInput call can be placed outside of the try block.", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r403784398", "createdAt": "2020-04-06T00:59:35Z", "author": {"login": "ywangd"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/ElasticsearchNode.java", "diffHunk": "@@ -720,6 +738,14 @@ private void startElasticsearchProcess() {\n         processBuilder.redirectError(ProcessBuilder.Redirect.appendTo(esStderrFile.toFile()));\n         processBuilder.redirectOutput(ProcessBuilder.Redirect.appendTo(esStdoutFile.toFile()));\n \n+        if (keystorePassword != null && keystorePassword.length() > 0) {\n+            try {\n+                Files.write(esStdinFile, (keystorePassword + \"\\n\").getBytes(StandardCharsets.UTF_8), StandardOpenOption.CREATE);\n+                processBuilder.redirectInput(esStdinFile.toFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed1cc00798a320f8cece058103a07e6dee834015"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg1OTU3MQ==", "bodyText": "what do we gain by doing so? If Files#write throws, we would still fail with aTestClustersException before we reach redirectInput`", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r403859571", "createdAt": "2020-04-06T06:40:27Z", "author": {"login": "jkakavas"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/ElasticsearchNode.java", "diffHunk": "@@ -720,6 +738,14 @@ private void startElasticsearchProcess() {\n         processBuilder.redirectError(ProcessBuilder.Redirect.appendTo(esStderrFile.toFile()));\n         processBuilder.redirectOutput(ProcessBuilder.Redirect.appendTo(esStdoutFile.toFile()));\n \n+        if (keystorePassword != null && keystorePassword.length() > 0) {\n+            try {\n+                Files.write(esStdinFile, (keystorePassword + \"\\n\").getBytes(StandardCharsets.UTF_8), StandardOpenOption.CREATE);\n+                processBuilder.redirectInput(esStdinFile.toFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4NDM5OA=="}, "originalCommit": {"oid": "ed1cc00798a320f8cece058103a07e6dee834015"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg2NDQ0NA==", "bodyText": "It makes no difference in actual execution outcome for this particular scenario. It's a choice of style, keep error handling specific and accurate to what is targeting for. It's akin to formatting and method extraction, but a bit more: if future changes make the extra method calls throw the same exception, it will not be handled automatically and potentially unwanted by the broader-than-necessary try-catch block. It does not apply to this particular case, that's why I called it \"nits\". But woud anyhow prefer keeping any context as small as possible.", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r403864444", "createdAt": "2020-04-06T06:52:43Z", "author": {"login": "ywangd"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/ElasticsearchNode.java", "diffHunk": "@@ -720,6 +738,14 @@ private void startElasticsearchProcess() {\n         processBuilder.redirectError(ProcessBuilder.Redirect.appendTo(esStderrFile.toFile()));\n         processBuilder.redirectOutput(ProcessBuilder.Redirect.appendTo(esStdoutFile.toFile()));\n \n+        if (keystorePassword != null && keystorePassword.length() > 0) {\n+            try {\n+                Files.write(esStdinFile, (keystorePassword + \"\\n\").getBytes(StandardCharsets.UTF_8), StandardOpenOption.CREATE);\n+                processBuilder.redirectInput(esStdinFile.toFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4NDM5OA=="}, "originalCommit": {"oid": "ed1cc00798a320f8cece058103a07e6dee834015"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg2NTA0OA==", "bodyText": "ok, gotcha", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r403865048", "createdAt": "2020-04-06T06:54:03Z", "author": {"login": "jkakavas"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/ElasticsearchNode.java", "diffHunk": "@@ -720,6 +738,14 @@ private void startElasticsearchProcess() {\n         processBuilder.redirectError(ProcessBuilder.Redirect.appendTo(esStderrFile.toFile()));\n         processBuilder.redirectOutput(ProcessBuilder.Redirect.appendTo(esStdoutFile.toFile()));\n \n+        if (keystorePassword != null && keystorePassword.length() > 0) {\n+            try {\n+                Files.write(esStdinFile, (keystorePassword + \"\\n\").getBytes(StandardCharsets.UTF_8), StandardOpenOption.CREATE);\n+                processBuilder.redirectInput(esStdinFile.toFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4NDM5OA=="}, "originalCommit": {"oid": "ed1cc00798a320f8cece058103a07e6dee834015"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTQ2NjMyOnYy", "diffSide": "RIGHT", "path": "rest-api-spec/src/main/resources/rest-api-spec/api/nodes.reload_secure_settings.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMToxODo0MlrOGBFORg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMToxODo0MlrOGBFORg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4NzMzNA==", "bodyText": "This implies that the body should be the raw password, I think we want something more like:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \"description\": \"The password for the elasticsearch keystore\",\n          \n          \n            \n                  \"description\": \"An object containing password for the elasticsearch keystore\",", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r403787334", "createdAt": "2020-04-06T01:18:42Z", "author": {"login": "tvernum"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/api/nodes.reload_secure_settings.json", "diffHunk": "@@ -27,11 +27,15 @@\n         }\n       ]\n     },\n-    \"params\":{\n-      \"timeout\":{\n-        \"type\":\"time\",\n-        \"description\":\"Explicit operation timeout\"\n+    \"params\": {\n+      \"timeout\": {\n+        \"type\": \"time\",\n+        \"description\": \"Explicit operation timeout\"\n       }\n+    },\n+    \"body\": {\n+      \"description\": \"The password for the elasticsearch keystore\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed1cc00798a320f8cece058103a07e6dee834015"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTQ2ODY2OnYy", "diffSide": "RIGHT", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/nodes.reload_secure_settings/10_basic.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMToyMDo0N1rOGBFPhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMToyMDo0N1rOGBFPhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4NzY1NA==", "bodyText": "Can we have a version with no password as well?\nThat should fail with the same error, but I think it's worth a test that it's not failing on \"password is required\" or a NPE, etc.", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r403787654", "createdAt": "2020-04-06T01:20:47Z", "author": {"login": "tvernum"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/nodes.reload_secure_settings/10_basic.yml", "diffHunk": "@@ -1,8 +1,29 @@\n ---\n-\"node_reload_secure_settings test\":\n+\"node_reload_secure_settings test wrong password\":\n \n   - do:\n-      nodes.reload_secure_settings: {}\n+      nodes.reload_secure_settings:\n+        body:\n+          secure_settings_password: awrongpasswordhere\n+  - set:\n+    nodes._arbitrary_key_: node_id\n \n   - is_true: nodes\n   - is_true: cluster_name\n+  - match: { nodes.$node_id.reload_exception.type: \"security_exception\" }\n+  - match: { nodes.$node_id.reload_exception.reason: \"Provided keystore password was incorrect\" }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed1cc00798a320f8cece058103a07e6dee834015"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjAyNDE1OnYy", "diffSide": "RIGHT", "path": "x-pack/qa/password-protected-keystore/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzozNzo1NlrOGCD9QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzozNzo1NlrOGCD9QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgxNTE2OQ==", "bodyText": "The reason this is created in x-pack is that calling the reload settings api with a password require transport SSL to be configured. We could move this to qa and run with OSS too,  if we limit this to an 1 node cluster", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r404815169", "createdAt": "2020-04-07T13:37:56Z", "author": {"login": "jkakavas"}, "path": "x-pack/qa/password-protected-keystore/build.gradle", "diffHunk": "@@ -0,0 +1,52 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5233d909140d5bf73d4b06915a6cd4a71810c533"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzA0NjQ3OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoxOTozMlrOGCOCzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzoxNjozOVrOGEAcyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4MDQyOA==", "bodyText": "While I'm not opposed to this, I wonder how useful it is in practice since we have no ability to set values in the keystore via the run task?", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r404980428", "createdAt": "2020-04-07T17:19:32Z", "author": {"login": "rjernst"}, "path": "build.gradle", "diffHunk": "@@ -405,6 +405,14 @@ class Run extends DefaultTask {\n   public void setDataDir(String dataDirStr) {\n     project.project(':distribution').run.dataDir = dataDirStr\n   }\n+\n+  @Option(\n+    option = \"keystore-password\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4a8496b3ec3abde6543b2b58d1203690337dd36"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM2MDAyNA==", "bodyText": "Yes, I'm not sold on it either. And given that we currently don't have a way to set keystore properties in the run task, maybe it's not worth adding ? I don't know , it seemed like a good idea when I added it but I'm not so sure now", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r405360024", "createdAt": "2020-04-08T08:47:46Z", "author": {"login": "jkakavas"}, "path": "build.gradle", "diffHunk": "@@ -405,6 +405,14 @@ class Run extends DefaultTask {\n   public void setDataDir(String dataDirStr) {\n     project.project(':distribution').run.dataDir = dataDirStr\n   }\n+\n+  @Option(\n+    option = \"keystore-password\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4MDQyOA=="}, "originalCommit": {"oid": "c4a8496b3ec3abde6543b2b58d1203690337dd36"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg1NDg1Nw==", "bodyText": "I assume this is only relevant when compiled with the --data-dir option to point at an existing directory which might have a manually setup keystore?", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r406854857", "createdAt": "2020-04-10T17:16:39Z", "author": {"login": "mark-vieira"}, "path": "build.gradle", "diffHunk": "@@ -405,6 +405,14 @@ class Run extends DefaultTask {\n   public void setDataDir(String dataDirStr) {\n     project.project(':distribution').run.dataDir = dataDirStr\n   }\n+\n+  @Option(\n+    option = \"keystore-password\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4MDQyOA=="}, "originalCommit": {"oid": "c4a8496b3ec3abde6543b2b58d1203690337dd36"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzA3MjA2OnYy", "diffSide": "RIGHT", "path": "x-pack/qa/password-protected-keystore/src/test/java/org/elasticsearch/password_protected_keystore/ReloadSecureSettingsWithPasswordProtectedKeystoreRestIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoyNjowNFrOGCOSrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo0NjoyNlrOGClKCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NDQ5Mw==", "bodyText": "Could this just be a yaml test?", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r404984493", "createdAt": "2020-04-07T17:26:04Z", "author": {"login": "rjernst"}, "path": "x-pack/qa/password-protected-keystore/src/test/java/org/elasticsearch/password_protected_keystore/ReloadSecureSettingsWithPasswordProtectedKeystoreRestIT.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.password_protected_keystore;\n+\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.common.settings.SecureString;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n+import org.elasticsearch.common.xcontent.ObjectPath;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n+\n+import static org.elasticsearch.xpack.core.security.authc.support.UsernamePasswordToken.basicAuthHeaderValue;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+import java.util.Map;\n+\n+public class ReloadSecureSettingsWithPasswordProtectedKeystoreRestIT extends ESRestTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4a8496b3ec3abde6543b2b58d1203690337dd36"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1OTExMw==", "bodyText": "I find these easier to write, debug and argue about so if you don't have a strong view on why we should make them a yaml test, I'd prefer to keep this", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r405359113", "createdAt": "2020-04-08T08:46:26Z", "author": {"login": "jkakavas"}, "path": "x-pack/qa/password-protected-keystore/src/test/java/org/elasticsearch/password_protected_keystore/ReloadSecureSettingsWithPasswordProtectedKeystoreRestIT.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.password_protected_keystore;\n+\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.common.settings.SecureString;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n+import org.elasticsearch.common.xcontent.ObjectPath;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n+\n+import static org.elasticsearch.xpack.core.security.authc.support.UsernamePasswordToken.basicAuthHeaderValue;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+import java.util.Map;\n+\n+public class ReloadSecureSettingsWithPasswordProtectedKeystoreRestIT extends ESRestTestCase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NDQ5Mw=="}, "originalCommit": {"oid": "c4a8496b3ec3abde6543b2b58d1203690337dd36"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzA4MzY0OnYy", "diffSide": "RIGHT", "path": "x-pack/qa/password-protected-keystore/src/test/resources/ssl/ca.crt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoyODo0MVrOGCOZtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo0NTozMlrOGClH2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NjI5Mw==", "bodyText": "I'm just curious: we used to generate these types of materials within build.gradle in other qa tests: why are we now committing them instead of generating on the fly?", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r404986293", "createdAt": "2020-04-07T17:28:41Z", "author": {"login": "rjernst"}, "path": "x-pack/qa/password-protected-keystore/src/test/resources/ssl/ca.crt", "diffHunk": "@@ -0,0 +1,20 @@\n+-----BEGIN CERTIFICATE-----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4a8496b3ec3abde6543b2b58d1203690337dd36"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1ODU1Mw==", "bodyText": "We used to depend on BouncyCastle to generate keys and certificates as JDK doesn't expose the necessary APIs for the certificate generation (https://bugs.openjdk.java.net/browse/JDK-8058778) and we removed BouncyCastle dependency as part of the FIPS 140 effort", "url": "https://github.com/elastic/elasticsearch/pull/54771#discussion_r405358553", "createdAt": "2020-04-08T08:45:32Z", "author": {"login": "jkakavas"}, "path": "x-pack/qa/password-protected-keystore/src/test/resources/ssl/ca.crt", "diffHunk": "@@ -0,0 +1,20 @@\n+-----BEGIN CERTIFICATE-----", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NjI5Mw=="}, "originalCommit": {"oid": "c4a8496b3ec3abde6543b2b58d1203690337dd36"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1351, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}