{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NjY4NzU2", "number": 51631, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTo1ODoyM1rODb21OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMToxNjoxN1rODb4RyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTM2NTA1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/ExecuteStepsUpdateTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTo1ODoyM1rOFjlOAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTo1ODoyM1rOFjlOAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1NDI3NA==", "bodyText": "nice catch", "url": "https://github.com/elastic/elasticsearch/pull/51631#discussion_r372854274", "createdAt": "2020-01-30T09:58:23Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/ExecuteStepsUpdateTask.java", "diffHunk": "@@ -140,7 +140,7 @@ public ClusterState execute(final ClusterState currentState) throws IOException\n                         if (logger.isTraceEnabled()) {\n                             logger.trace(\"[{}] condition not met ({}) [{}], returning existing state (info: {})\",\n                                 index.getName(), currentStep.getClass().getSimpleName(), currentStep.getKey(),\n-                                Strings.toString(stepInfo));\n+                                stepInfo == null ? \"null\" : Strings.toString(stepInfo));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3adf3c783643dc906fb585f2852a6b1e822ab9b7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTU2NjI4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ilm/CCRIndexLifecycleIT.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTowNDowOVrOFjnKtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyNTo1OVrOFkHKTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg4NjE5OA==", "bodyText": "I'm probably missing something, but why is the phase null in these CCR cases? Should this be the name of the phase that was completed? (ie. warm)", "url": "https://github.com/elastic/elasticsearch/pull/51631#discussion_r372886198", "createdAt": "2020-01-30T11:04:09Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ilm/CCRIndexLifecycleIT.java", "diffHunk": "@@ -341,7 +342,7 @@ public void testAliasReplicatedOnShrink() throws Exception {\n             assertBusy(() -> assertOK(client().performRequest(new Request(\"HEAD\", \"/\" + shrunkenIndexName + \"/_alias/\" + indexName))));\n \n             // Wait for the index to complete its policy\n-            assertBusy(() -> assertILMPolicy(client(), shrunkenIndexName, policyName, \"completed\", \"completed\", \"completed\"));\n+            assertBusy(() -> assertILMPolicy(client(), shrunkenIndexName, policyName, null, \"complete\", \"complete\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3adf3c783643dc906fb585f2852a6b1e822ab9b7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwOTM3Mw==", "bodyText": "null just means that the matcher should not try to match the phase. The reason for that is that in these tests there is a randomBoolean() check that randomly uses either a lone warm phase or adds a cold phase, so we don't assert whether it's always cold or warm (it's only important that it reaches the complete step)", "url": "https://github.com/elastic/elasticsearch/pull/51631#discussion_r373109373", "createdAt": "2020-01-30T18:11:31Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ilm/CCRIndexLifecycleIT.java", "diffHunk": "@@ -341,7 +342,7 @@ public void testAliasReplicatedOnShrink() throws Exception {\n             assertBusy(() -> assertOK(client().performRequest(new Request(\"HEAD\", \"/\" + shrunkenIndexName + \"/_alias/\" + indexName))));\n \n             // Wait for the index to complete its policy\n-            assertBusy(() -> assertILMPolicy(client(), shrunkenIndexName, policyName, \"completed\", \"completed\", \"completed\"));\n+            assertBusy(() -> assertILMPolicy(client(), shrunkenIndexName, policyName, null, \"complete\", \"complete\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg4NjE5OA=="}, "originalCommit": {"oid": "3adf3c783643dc906fb585f2852a6b1e822ab9b7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxMDM4Mw==", "bodyText": "Ah gotcha, the implementation skips that assertion if the phase is null. Thanks for the clarification, this makes sense", "url": "https://github.com/elastic/elasticsearch/pull/51631#discussion_r373410383", "createdAt": "2020-01-31T10:25:59Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ilm/CCRIndexLifecycleIT.java", "diffHunk": "@@ -341,7 +342,7 @@ public void testAliasReplicatedOnShrink() throws Exception {\n             assertBusy(() -> assertOK(client().performRequest(new Request(\"HEAD\", \"/\" + shrunkenIndexName + \"/_alias/\" + indexName))));\n \n             // Wait for the index to complete its policy\n-            assertBusy(() -> assertILMPolicy(client(), shrunkenIndexName, policyName, \"completed\", \"completed\", \"completed\"));\n+            assertBusy(() -> assertILMPolicy(client(), shrunkenIndexName, policyName, null, \"complete\", \"complete\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg4NjE5OA=="}, "originalCommit": {"oid": "3adf3c783643dc906fb585f2852a6b1e822ab9b7"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTU3MjAyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleTransition.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTowNjowMFrOFjnN4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDozMzozNlrOFkHXJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg4NzAwOA==", "bodyText": "should we document this as it seems like a behavioural change for the move-to-step api?", "url": "https://github.com/elastic/elasticsearch/pull/51631#discussion_r372887008", "createdAt": "2020-01-30T11:06:00Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleTransition.java", "diffHunk": "@@ -78,7 +78,8 @@ public static void validateTransition(IndexMetaData idxMeta, Step.StepKey curren\n                 \"], currently: [\" + realKey + \"]\");\n         }\n \n-        if (stepRegistry.stepExists(indexPolicySetting, newStepKey) == false) {\n+        // Always allow moving to the terminal step, even if it doesn't exist in the policy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3adf3c783643dc906fb585f2852a6b1e822ab9b7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwOTkyNA==", "bodyText": "I looked through the documentation and didn't see any actual documentation about the terminal step already, so I'm not sure we want to get into that deep of technical behavior in our docs? What do you think?", "url": "https://github.com/elastic/elasticsearch/pull/51631#discussion_r373109924", "createdAt": "2020-01-30T18:12:43Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleTransition.java", "diffHunk": "@@ -78,7 +78,8 @@ public static void validateTransition(IndexMetaData idxMeta, Step.StepKey curren\n                 \"], currently: [\" + realKey + \"]\");\n         }\n \n-        if (stepRegistry.stepExists(indexPolicySetting, newStepKey) == false) {\n+        // Always allow moving to the terminal step, even if it doesn't exist in the policy", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg4NzAwOA=="}, "originalCommit": {"oid": "3adf3c783643dc906fb585f2852a6b1e822ab9b7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxMzY3MQ==", "bodyText": "Ah, sure, let's not mention it then", "url": "https://github.com/elastic/elasticsearch/pull/51631#discussion_r373413671", "createdAt": "2020-01-31T10:33:36Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleTransition.java", "diffHunk": "@@ -78,7 +78,8 @@ public static void validateTransition(IndexMetaData idxMeta, Step.StepKey curren\n                 \"], currently: [\" + realKey + \"]\");\n         }\n \n-        if (stepRegistry.stepExists(indexPolicySetting, newStepKey) == false) {\n+        // Always allow moving to the terminal step, even if it doesn't exist in the policy", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg4NzAwOA=="}, "originalCommit": {"oid": "3adf3c783643dc906fb585f2852a6b1e822ab9b7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTYwMjAxOnYy", "diffSide": "LEFT", "path": "x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/ilm/IndexLifecycleInitialisationTests.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMToxNjoxN1rOFjnfHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDozNjo0OFrOFkHcOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5MTQyMA==", "bodyText": "was the deletion of this test intentional? if so shall we do it in a different commit so we have some semantics as to why it was removed?", "url": "https://github.com/elastic/elasticsearch/pull/51631#discussion_r372891420", "createdAt": "2020-01-30T11:16:17Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/ilm/IndexLifecycleInitialisationTests.java", "diffHunk": "@@ -374,80 +374,7 @@ public void testMasterDedicatedDataDedicated() throws Exception {\n         assertBusy(() -> {\n             LifecycleExecutionState lifecycleState = LifecycleExecutionState.fromIndexMetadata(client().admin().cluster()\n                 .prepareState().execute().actionGet().getState().getMetaData().index(\"test\"));\n-            assertThat(lifecycleState.getStep(), equalTo(TerminalPolicyStep.KEY.getName()));\n-        });\n-    }\n-\n-    public void testMasterFailover() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3adf3c783643dc906fb585f2852a6b1e822ab9b7"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExMDYyMQ==", "bodyText": "This was a test that didn't really do much outside of what we already have tested elsewhere, in addition, it was using a fake step that was near impossible to make work with the way that phases now operate, so I removed it.\nI don't think a separate commit is that useful, since this ends up squashed into a single commit anyway?", "url": "https://github.com/elastic/elasticsearch/pull/51631#discussion_r373110621", "createdAt": "2020-01-30T18:14:07Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/ilm/IndexLifecycleInitialisationTests.java", "diffHunk": "@@ -374,80 +374,7 @@ public void testMasterDedicatedDataDedicated() throws Exception {\n         assertBusy(() -> {\n             LifecycleExecutionState lifecycleState = LifecycleExecutionState.fromIndexMetadata(client().admin().cluster()\n                 .prepareState().execute().actionGet().getState().getMetaData().index(\"test\"));\n-            assertThat(lifecycleState.getStep(), equalTo(TerminalPolicyStep.KEY.getName()));\n-        });\n-    }\n-\n-    public void testMasterFailover() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5MTQyMA=="}, "originalCommit": {"oid": "3adf3c783643dc906fb585f2852a6b1e822ab9b7"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxNDk3MQ==", "bodyText": "Ah, yeah, you're right (not sure how should we signal the reasoning behind these changes for future reference - commit message?)", "url": "https://github.com/elastic/elasticsearch/pull/51631#discussion_r373414971", "createdAt": "2020-01-31T10:36:48Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/ilm/IndexLifecycleInitialisationTests.java", "diffHunk": "@@ -374,80 +374,7 @@ public void testMasterDedicatedDataDedicated() throws Exception {\n         assertBusy(() -> {\n             LifecycleExecutionState lifecycleState = LifecycleExecutionState.fromIndexMetadata(client().admin().cluster()\n                 .prepareState().execute().actionGet().getState().getMetaData().index(\"test\"));\n-            assertThat(lifecycleState.getStep(), equalTo(TerminalPolicyStep.KEY.getName()));\n-        });\n-    }\n-\n-    public void testMasterFailover() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5MTQyMA=="}, "originalCommit": {"oid": "3adf3c783643dc906fb585f2852a6b1e822ab9b7"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 105, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}