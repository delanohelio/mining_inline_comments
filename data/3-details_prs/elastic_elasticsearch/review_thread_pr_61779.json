{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MDI4MzM2", "number": 61779, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo1OToyM1rOEe6qOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODoxMzoyOVrOEfBfyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODUzODE4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo1OToyM1rOHK3mWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzo1Mjo0NlrOHLB2uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1ODc0Nw==", "bodyText": "topLevel? Maybe even make this a method one BucketOrder instead of this instanceof stuff?", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481158747", "createdAt": "2020-09-01T13:59:23Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java", "diffHunk": "@@ -369,6 +369,20 @@ public static boolean isKeyDesc(BucketOrder order) {\n         return isOrder(order, KEY_DESC);\n     }\n \n+    /**\n+     * Return the primary {@link BucketOrder} if the provided <code>order</code>\n+     * is a {@link CompoundOrder}.\n+     */\n+    public static BucketOrder unwrap(BucketOrder order) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97a1edcd25b0a8ebcee427185e4d3ddc8ef57b2"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMyNjc3Nw==", "bodyText": "I removed the usage of this method in 99bc538", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481326777", "createdAt": "2020-09-01T17:52:46Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java", "diffHunk": "@@ -369,6 +369,20 @@ public static boolean isKeyDesc(BucketOrder order) {\n         return isOrder(order, KEY_DESC);\n     }\n \n+    /**\n+     * Return the primary {@link BucketOrder} if the provided <code>order</code>\n+     * is a {@link CompoundOrder}.\n+     */\n+    public static BucketOrder unwrap(BucketOrder order) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1ODc0Nw=="}, "originalCommit": {"oid": "c97a1edcd25b0a8ebcee427185e4d3ddc8ef57b2"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODU0NDQ3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNDowMDo0NFrOHK3qUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzo1MjoyMVrOHLB10g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1OTc2Mg==", "bodyText": "isKeyOrder is false here, right?", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481159762", "createdAt": "2020-09-01T14:00:44Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -724,8 +727,15 @@ void buildSubAggs(StringTerms.Bucket[][] topBucketsPreOrd) throws IOException {\n \n         @Override\n         StringTerms buildResult(long owningBucketOrd, long otherDocCount, StringTerms.Bucket[] topBuckets) {\n-            return new StringTerms(name, order, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(),\n-                metadata(), format, bucketCountThresholds.getShardSize(), showTermDocCountError,\n+            final BucketOrder reduceOrder;\n+            if (isKeyOrder(order) == false) {\n+                reduceOrder = isKeyOrder(order) ? InternalOrder.unwrap(order) : InternalOrder.key(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97a1edcd25b0a8ebcee427185e4d3ddc8ef57b2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMyNjU0Ng==", "bodyText": "thanks, that's a leftover, I pushed 99bc538", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481326546", "createdAt": "2020-09-01T17:52:21Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -724,8 +727,15 @@ void buildSubAggs(StringTerms.Bucket[][] topBucketsPreOrd) throws IOException {\n \n         @Override\n         StringTerms buildResult(long owningBucketOrd, long otherDocCount, StringTerms.Bucket[] topBuckets) {\n-            return new StringTerms(name, order, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(),\n-                metadata(), format, bucketCountThresholds.getShardSize(), showTermDocCountError,\n+            final BucketOrder reduceOrder;\n+            if (isKeyOrder(order) == false) {\n+                reduceOrder = isKeyOrder(order) ? InternalOrder.unwrap(order) : InternalOrder.key(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1OTc2Mg=="}, "originalCommit": {"oid": "c97a1edcd25b0a8ebcee427185e4d3ddc8ef57b2"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODU1MzM4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNDowMjo1MFrOHK3v9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDoxMzo0MFrOHMDUrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE2MTIwNg==", "bodyText": "Fine for now, but I feel like we have four or five of these and maybe it'd be worth merging their implementations.", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481161206", "createdAt": "2020-09-01T14:02:50Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java", "diffHunk": "@@ -189,44 +220,173 @@ protected final void doWriteTo(StreamOutput out) throws IOException {\n     @Override\n     public abstract B getBucketByKey(String term);\n \n-    @Override\n+    private static class IteratorAndCurrent<B extends InternalTerms.Bucket<B>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97a1edcd25b0a8ebcee427185e4d3ddc8ef57b2"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM5OTQwNA==", "bodyText": "+1, I pushed d752ac7", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r482399404", "createdAt": "2020-09-02T20:13:40Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java", "diffHunk": "@@ -189,44 +220,173 @@ protected final void doWriteTo(StreamOutput out) throws IOException {\n     @Override\n     public abstract B getBucketByKey(String term);\n \n-    @Override\n+    private static class IteratorAndCurrent<B extends InternalTerms.Bucket<B>> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE2MTIwNg=="}, "originalCommit": {"oid": "c97a1edcd25b0a8ebcee427185e4d3ddc8ef57b2"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTY1ODMzOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODoxMzoyOVrOHLCjWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODoxMzoyOVrOHLCjWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzODIwMA==", "bodyText": "Leftover?", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481338200", "createdAt": "2020-09-01T18:13:29Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java", "diffHunk": "@@ -35,6 +35,7 @@\n import org.elasticsearch.test.ESTestCase;\n import org.elasticsearch.test.InternalAggregationTestCase;\n import org.elasticsearch.test.VersionUtils;\n+import org.junit.Ignore;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99bc538cad46e88ab35a84ecb32db184fd2890e0"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1797, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}