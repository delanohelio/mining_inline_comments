{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NTc0NDMz", "number": 55333, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwOTowNTozMlrODy0xig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoxMDoxMlrODy5RIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjIwMDQyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwOTowNTozMlrOGHGCWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMTo0NTozOVrOGHKxGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5MjEyMg==", "bodyText": "Two questions here:\n\nWhat do we do with an empty string? Currently it would fail with IndexOutOfBounds, right?\nWhy do we prioritize stringRep over value even in a number case?", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410092122", "createdAt": "2020-04-17T09:05:32Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "diffHunk": "@@ -57,6 +57,19 @@ public Object transformPredictedValue(Double value, String stringRep) {\n                 }\n                 return areClose(value, 1.0D);\n             case NUMBER:\n+                if (stringRep == null) {\n+                    return value;\n+                }\n+                // Quick check to verify that the string rep is LIKELY a number", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d269096e90ff2cdd24f455320635ea234b3d681"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE2OTYyNg==", "bodyText": "Good question, I think the underlying value should be returned in this case. I will adjust accordingly.\nPlease read the PR description. When creating a model in analytics, it is possible to have classification classes that are numeric, but not ordinal. These are treated as classification_labels.", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410169626", "createdAt": "2020-04-17T11:45:39Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "diffHunk": "@@ -57,6 +57,19 @@ public Object transformPredictedValue(Double value, String stringRep) {\n                 }\n                 return areClose(value, 1.0D);\n             case NUMBER:\n+                if (stringRep == null) {\n+                    return value;\n+                }\n+                // Quick check to verify that the string rep is LIKELY a number", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5MjEyMg=="}, "originalCommit": {"oid": "6d269096e90ff2cdd24f455320635ea234b3d681"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjIwNjgxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldTypeTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwOTowNzo0N1rOGHGGww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMTo0NDo0NVrOGHKveQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5MzI1MQ==", "bodyText": "Could you add tests for:\n\nan empty string\na string that is not a number?", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410093251", "createdAt": "2020-04-17T09:07:47Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldTypeTests.java", "diffHunk": "@@ -38,6 +38,8 @@ public void testTransformPredictedValueNumber() {\n             is(nullValue()));\n         assertThat(PredictionFieldType.NUMBER.transformPredictedValue(1.0, \"foo\"), equalTo(1.0));\n         assertThat(PredictionFieldType.NUMBER.transformPredictedValue(1.0, null), equalTo(1.0));\n+        long expected = randomLong();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d269096e90ff2cdd24f455320635ea234b3d681"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE2OTIwOQ==", "bodyText": "There is already a test for 2. See line 39.\nI will add a test for 1", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410169209", "createdAt": "2020-04-17T11:44:45Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldTypeTests.java", "diffHunk": "@@ -38,6 +38,8 @@ public void testTransformPredictedValueNumber() {\n             is(nullValue()));\n         assertThat(PredictionFieldType.NUMBER.transformPredictedValue(1.0, \"foo\"), equalTo(1.0));\n         assertThat(PredictionFieldType.NUMBER.transformPredictedValue(1.0, null), equalTo(1.0));\n+        long expected = randomLong();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5MzI1MQ=="}, "originalCommit": {"oid": "6d269096e90ff2cdd24f455320635ea234b3d681"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjkzNjY0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoxMDoxMlrOGHNS4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoxMTo1OFrOGHNWwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxMTA0Mw==", "bodyText": "Could we just drop it and rely solely on parseLong?\nOr is this some kind of perf optimization? If so, are you sure it is really faster?", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410211043", "createdAt": "2020-04-17T13:10:12Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "diffHunk": "@@ -57,6 +58,19 @@ public Object transformPredictedValue(Double value, String stringRep) {\n                 }\n                 return areClose(value, 1.0D);\n             case NUMBER:\n+                if (Strings.isNullOrEmpty(stringRep)) {\n+                    return value;\n+                }\n+                // Quick check to verify that the string rep is LIKELY a number\n+                // Still handles the case where it throws and then returns the underlying value\n+                if (stringRep.charAt(0) == '-' || Character.isDigit(stringRep.charAt(0))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "255b5aeb8c90d201206f14e1befd3a13c7d55d45"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxMjAzMg==", "bodyText": "It is way faster if stringRep is consistently not a number (which could easily be the case). Every call that it is not a number throws an exception, and the JVM has to build a trace.", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410212032", "createdAt": "2020-04-17T13:11:58Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "diffHunk": "@@ -57,6 +58,19 @@ public Object transformPredictedValue(Double value, String stringRep) {\n                 }\n                 return areClose(value, 1.0D);\n             case NUMBER:\n+                if (Strings.isNullOrEmpty(stringRep)) {\n+                    return value;\n+                }\n+                // Quick check to verify that the string rep is LIKELY a number\n+                // Still handles the case where it throws and then returns the underlying value\n+                if (stringRep.charAt(0) == '-' || Character.isDigit(stringRep.charAt(0))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxMTA0Mw=="}, "originalCommit": {"oid": "255b5aeb8c90d201206f14e1befd3a13c7d55d45"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 962, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}