{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MTA3MDI4", "number": 52407, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNDoyNDowMlrODgjqIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMToxOTo1MlrODhvCvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDY1MjUwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNDoyNDowMlrOFq0xYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNDoyNDowMlrOFq0xYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ0OTEyMg==", "bodyText": "Can we merge this code and the duplicate from StartBasicClusterTask into a single generateNewBasicLicense() method?", "url": "https://github.com/elastic/elasticsearch/pull/52407#discussion_r380449122", "createdAt": "2020-02-18T04:24:02Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java", "diffHunk": "@@ -353,17 +354,32 @@ protected ClusterStateUpdateResponse newResponse(boolean acknowledged) {\n                 @Override\n                 public ClusterState execute(ClusterState currentState) throws Exception {\n                     MetaData metaData = currentState.metaData();\n-                    final LicensesMetaData currentLicenses = metaData.custom(LicensesMetaData.TYPE);\n-                    if (currentLicenses.getLicense() != LicensesMetaData.LICENSE_TOMBSTONE) {\n+                    final LicensesMetaData currentLicensesMetadata = metaData.custom(LicensesMetaData.TYPE);\n+                    final License currentLicense = LicensesMetaData.extractLicense(currentLicensesMetadata);\n+                    if (shouldRemove(currentLicense)) {\n                         MetaData.Builder mdBuilder = MetaData.builder(currentState.metaData());\n-                        LicensesMetaData newMetadata = new LicensesMetaData(LicensesMetaData.LICENSE_TOMBSTONE,\n-                            currentLicenses.getMostRecentTrialVersion());\n-                        mdBuilder.putCustom(LicensesMetaData.TYPE, newMetadata);\n+                        License.Builder specBuilder = License.builder()\n+                            .uid(UUID.randomUUID().toString())\n+                            .issuedTo(clusterService.getClusterName().value())\n+                            .maxNodes(SELF_GENERATED_LICENSE_MAX_NODES)\n+                            .issueDate(clock.millis())\n+                            .type(License.LicenseType.BASIC)\n+                            .expiryDate(BASIC_SELF_GENERATED_LICENSE_EXPIRATION_MILLIS);\n+                        License selfGeneratedLicense = SelfGeneratedLicense.create(specBuilder, currentState.nodes());\n+                        LicensesMetaData newLicensesMetadata = new LicensesMetaData(selfGeneratedLicense,\n+                            currentLicensesMetadata == null ? null : currentLicensesMetadata.getMostRecentTrialVersion());\n+                        mdBuilder.putCustom(LicensesMetaData.TYPE, newLicensesMetadata);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bf41098dcb97dbf3d9d82ba2a387b2e4262fef6"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzAwMzQ5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMToxOTo1MlrOFsoxrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMjozMjoyM1rOFsp2ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0OTc0MA==", "bodyText": "This feels weird to me.\nWe run a task, that just creates another task and executes that, and it feels like that's just so we can change the response object.\nWhy not change this to something like:\npublic void removeLicense(final DeleteLicenseRequest request, final ActionListener<PostStartBasicResponse> listener) {\n      PostStartBasicRequest startBasicRequest = new PostStartBasicRequest().acknowledge(true);\n      startBasicLicense(startBasicRequest, listener); \n}\n\nand then have the Transport action translate the PostStartBasicResponse into the AcknowledgedResponse it needs to keep compatibilty with the API.", "url": "https://github.com/elastic/elasticsearch/pull/52407#discussion_r382349740", "createdAt": "2020-02-21T01:19:52Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java", "diffHunk": "@@ -352,17 +352,10 @@ protected ClusterStateUpdateResponse newResponse(boolean acknowledged) {\n \n                 @Override\n                 public ClusterState execute(ClusterState currentState) throws Exception {\n-                    MetaData metaData = currentState.metaData();\n-                    final LicensesMetaData currentLicenses = metaData.custom(LicensesMetaData.TYPE);\n-                    if (currentLicenses.getLicense() != LicensesMetaData.LICENSE_TOMBSTONE) {\n-                        MetaData.Builder mdBuilder = MetaData.builder(currentState.metaData());\n-                        LicensesMetaData newMetadata = new LicensesMetaData(LicensesMetaData.LICENSE_TOMBSTONE,\n-                            currentLicenses.getMostRecentTrialVersion());\n-                        mdBuilder.putCustom(LicensesMetaData.TYPE, newMetadata);\n-                        return ClusterState.builder(currentState).metaData(mdBuilder).build();\n-                    } else {\n-                        return currentState;\n-                    }\n+                    final StartBasicClusterTask startBasicClusterTask =\n+                        new StartBasicClusterTask(logger, clusterService.getClusterName().value(), clock,\n+                            new PostStartBasicRequest().acknowledge(true), null);\n+                    return startBasicClusterTask.execute(currentState);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331c3b20caf9ac797b2fb790e19297057e36ff0e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM2NzM5NQ==", "bodyText": "Makes sense. I'll update it with a small change: instead of delegating to startBasicLicense() method, I'll keep the task submission part so that the context is not lost, i.e. clusterService.submitStateUpdateTask(\"delete license\", new StartBasicClusterTask(...))", "url": "https://github.com/elastic/elasticsearch/pull/52407#discussion_r382367395", "createdAt": "2020-02-21T02:32:23Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java", "diffHunk": "@@ -352,17 +352,10 @@ protected ClusterStateUpdateResponse newResponse(boolean acknowledged) {\n \n                 @Override\n                 public ClusterState execute(ClusterState currentState) throws Exception {\n-                    MetaData metaData = currentState.metaData();\n-                    final LicensesMetaData currentLicenses = metaData.custom(LicensesMetaData.TYPE);\n-                    if (currentLicenses.getLicense() != LicensesMetaData.LICENSE_TOMBSTONE) {\n-                        MetaData.Builder mdBuilder = MetaData.builder(currentState.metaData());\n-                        LicensesMetaData newMetadata = new LicensesMetaData(LicensesMetaData.LICENSE_TOMBSTONE,\n-                            currentLicenses.getMostRecentTrialVersion());\n-                        mdBuilder.putCustom(LicensesMetaData.TYPE, newMetadata);\n-                        return ClusterState.builder(currentState).metaData(mdBuilder).build();\n-                    } else {\n-                        return currentState;\n-                    }\n+                    final StartBasicClusterTask startBasicClusterTask =\n+                        new StartBasicClusterTask(logger, clusterService.getClusterName().value(), clock,\n+                            new PostStartBasicRequest().acknowledge(true), null);\n+                    return startBasicClusterTask.execute(currentState);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0OTc0MA=="}, "originalCommit": {"oid": "331c3b20caf9ac797b2fb790e19297057e36ff0e"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3924, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}