{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNDY4Mzgy", "number": 52181, "title": "[DOCS] Rework conceptual info for ILM.", "bodyText": "Split off the actions and reworked the conceptual content.", "createdAt": "2020-02-11T04:29:09Z", "url": "https://github.com/elastic/elasticsearch/pull/52181", "merged": true, "mergeCommit": {"oid": "cb5fdc52266fb6baaf713fd40ce3eaf8440b559f"}, "closed": true, "closedAt": "2020-04-22T20:53:31Z", "author": {"login": "debadair"}, "timelineItems": {"totalCount": 84, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXsFY7gBqjMyMzMyNTk1NDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcat9sxAFqTM5OTc4MTMwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d40790d5737347db15c3a9e647c79ddd7d84970a", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/d40790d5737347db15c3a9e647c79ddd7d84970a", "committedDate": "2020-04-14T22:30:41Z", "message": "Add files"}, "afterCommit": {"oid": "648b76656f4ac3af5dcb1a3c91de1360d74907ec", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/648b76656f4ac3af5dcb1a3c91de1360d74907ec", "committedDate": "2020-04-14T23:27:45Z", "message": "Concepts redux"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "018375bbbfd24078a602f6541d42123cbe2438cc", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/018375bbbfd24078a602f6541d42123cbe2438cc", "committedDate": "2020-04-14T23:44:28Z", "message": "Add files"}, "afterCommit": {"oid": "7fc3359e05c2aa12f9f70db093efe087e5ffc64a", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/7fc3359e05c2aa12f9f70db093efe087e5ffc64a", "committedDate": "2020-04-15T02:01:49Z", "message": "fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5d5b3a81501c724c3d08d9663e452fa471c9ce6", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/f5d5b3a81501c724c3d08d9663e452fa471c9ce6", "committedDate": "2020-04-15T16:00:13Z", "message": "xref"}, "afterCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/3cc049a80b13139762e4fb4cba6abe949d0b2253", "committedDate": "2020-04-15T16:15:08Z", "message": "Concepts redux"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDExMzMy", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394011332", "createdAt": "2020-04-15T18:04:22Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODowNDoyM1rOGGFbRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODowNDoyM1rOGGFbRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAzMzU0MQ==", "bodyText": "Is there a reason we use em dashes here? I think a colon (:) might look better. It'll also let you capitalize the sentences.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409033541", "createdAt": "2020-04-15T18:04:23Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-index-lifecycle.asciidoc", "diffHunk": "@@ -0,0 +1,76 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-index-lifecycle]]\n+=== Index lifecycle\n+++++\n+<titleabbrev>Index lifecycle</titleabbrev>\n+++++\n+\n+{ilm-init} splits the index lifecycle into four _phases_: \n+\n+* Hot--the index is actively being updated and queried.\n+* Warm--the index is no longer being updated, but is still being queried.\n+* Cold--the index is no longer being updated and is seldom queried. The\n+information still needs to be searchable, but it's okay if those queries are\n+slower.\n+* Delete--the index is no longer needed and can safely be removed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDExNDk3", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394011497", "createdAt": "2020-04-15T18:04:37Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODowNDozOFrOGGFbyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODowNDozOFrOGGFbyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAzMzY3Mg==", "bodyText": "unneeded comma.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Warm--the index is no longer being updated, but is still being queried.\n          \n          \n            \n            * Warm--the index is no longer being updated but is still being queried.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409033672", "createdAt": "2020-04-15T18:04:38Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-index-lifecycle.asciidoc", "diffHunk": "@@ -0,0 +1,76 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-index-lifecycle]]\n+=== Index lifecycle\n+++++\n+<titleabbrev>Index lifecycle</titleabbrev>\n+++++\n+\n+{ilm-init} splits the index lifecycle into four _phases_: \n+\n+* Hot--the index is actively being updated and queried.\n+* Warm--the index is no longer being updated, but is still being queried.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDEyMDM1", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394012035", "createdAt": "2020-04-15T18:05:20Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODowNToyMVrOGGFdVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODowNToyMVrOGGFdVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAzNDA2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            you associate the policy with the index template. \n          \n          \n            \n            associate the policy with the index template. \n          \n      \n    \n    \n  \n\n\"you can\" is fine too.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409034069", "createdAt": "2020-04-15T18:05:21Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-index-lifecycle.asciidoc", "diffHunk": "@@ -0,0 +1,76 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-index-lifecycle]]\n+=== Index lifecycle\n+++++\n+<titleabbrev>Index lifecycle</titleabbrev>\n+++++\n+\n+{ilm-init} splits the index lifecycle into four _phases_: \n+\n+* Hot--the index is actively being updated and queried.\n+* Warm--the index is no longer being updated, but is still being queried.\n+* Cold--the index is no longer being updated and is seldom queried. The\n+information still needs to be searchable, but it's okay if those queries are\n+slower.\n+* Delete--the index is no longer needed and can safely be removed.\n+\n+An index's _lifecycle policy_ specifies which phases \n+are applicable, what actions are performed in each phase,\n+and when it transitions between phases. \n+\n+To automatically apply a lifecycle policy to new time-series indices when they roll over, \n+you associate the policy with the index template. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDEzMTg5", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394013189", "createdAt": "2020-04-15T18:06:58Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODowNjo1OFrOGGFhGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODowNjo1OFrOGGFhGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAzNTAzNQ==", "bodyText": "Line wrapping\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To manage indices that don't roll over, you can manually apply a lifecycle policy when creating the index.\n          \n          \n            \n            To manage indices that don't roll over, you can manually apply a lifecycle\n          \n          \n            \n            policy when creating the index.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409035035", "createdAt": "2020-04-15T18:06:58Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-index-lifecycle.asciidoc", "diffHunk": "@@ -0,0 +1,76 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-index-lifecycle]]\n+=== Index lifecycle\n+++++\n+<titleabbrev>Index lifecycle</titleabbrev>\n+++++\n+\n+{ilm-init} splits the index lifecycle into four _phases_: \n+\n+* Hot--the index is actively being updated and queried.\n+* Warm--the index is no longer being updated, but is still being queried.\n+* Cold--the index is no longer being updated and is seldom queried. The\n+information still needs to be searchable, but it's okay if those queries are\n+slower.\n+* Delete--the index is no longer needed and can safely be removed.\n+\n+An index's _lifecycle policy_ specifies which phases \n+are applicable, what actions are performed in each phase,\n+and when it transitions between phases. \n+\n+To automatically apply a lifecycle policy to new time-series indices when they roll over, \n+you associate the policy with the index template. \n+To manage indices that don't roll over, you can manually apply a lifecycle policy when creating the index.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDE2MDY3", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394016067", "createdAt": "2020-04-15T18:10:58Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxMDo1OFrOGGFqJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxMDo1OFrOGGFqJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAzNzM0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This ensures that policy updates don't put the index into a state where  it can never exit the phase.\n          \n          \n            \n            This ensures that policy updates don't put the index into a state where it can never exit the phase.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409037348", "createdAt": "2020-04-15T18:10:58Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-index-lifecycle.asciidoc", "diffHunk": "@@ -0,0 +1,76 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-index-lifecycle]]\n+=== Index lifecycle\n+++++\n+<titleabbrev>Index lifecycle</titleabbrev>\n+++++\n+\n+{ilm-init} splits the index lifecycle into four _phases_: \n+\n+* Hot--the index is actively being updated and queried.\n+* Warm--the index is no longer being updated, but is still being queried.\n+* Cold--the index is no longer being updated and is seldom queried. The\n+information still needs to be searchable, but it's okay if those queries are\n+slower.\n+* Delete--the index is no longer needed and can safely be removed.\n+\n+An index's _lifecycle policy_ specifies which phases \n+are applicable, what actions are performed in each phase,\n+and when it transitions between phases. \n+\n+To automatically apply a lifecycle policy to new time-series indices when they roll over, \n+you associate the policy with the index template. \n+To manage indices that don't roll over, you can manually apply a lifecycle policy when creating the index.\n+\n+[float]\n+[[ilm-phase-transitions]]\n+=== Phase transitions\n+\n+{ilm-init} moves indices through the lifecycle according to their age. \n+To control the timing of these transitions, you set a _minimum age_ for each phase. \n+For an index to move to the next phase, all actions in the current phase must be complete and \n+the index must be older than the minimum age. \n+\n+The minimum age defaults to zero, which causes {ilm-init} to move indices to the next phase\n+as soon as all actions in the current phase complete. \n+\n+[float]\n+[[ilm-phase-execution]]\n+=== Phase execution\n+\n+{ilm-init} controls the order in which the actions in a phase are executed and\n+what _steps_ are executed to perform the necessary index operations for each action.\n+\n+When an index enters a phase, {ilm-init} caches the phase definition in the index metadata.\n+This ensures that policy updates don't put the index into a state where  it can never exit the phase.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDE3NDc3", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394017477", "createdAt": "2020-04-15T18:12:53Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxMjo1NFrOGGFuhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxMjo1NFrOGGFuhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAzODQ3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              - <<ilm-delete,Wait For Snapshot>>\n          \n          \n            \n              - <<ilm-wait-for-snapshot-action,Wait For Snapshot>>", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409038471", "createdAt": "2020-04-15T18:12:54Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-index-lifecycle.asciidoc", "diffHunk": "@@ -0,0 +1,76 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-index-lifecycle]]\n+=== Index lifecycle\n+++++\n+<titleabbrev>Index lifecycle</titleabbrev>\n+++++\n+\n+{ilm-init} splits the index lifecycle into four _phases_: \n+\n+* Hot--the index is actively being updated and queried.\n+* Warm--the index is no longer being updated, but is still being queried.\n+* Cold--the index is no longer being updated and is seldom queried. The\n+information still needs to be searchable, but it's okay if those queries are\n+slower.\n+* Delete--the index is no longer needed and can safely be removed.\n+\n+An index's _lifecycle policy_ specifies which phases \n+are applicable, what actions are performed in each phase,\n+and when it transitions between phases. \n+\n+To automatically apply a lifecycle policy to new time-series indices when they roll over, \n+you associate the policy with the index template. \n+To manage indices that don't roll over, you can manually apply a lifecycle policy when creating the index.\n+\n+[float]\n+[[ilm-phase-transitions]]\n+=== Phase transitions\n+\n+{ilm-init} moves indices through the lifecycle according to their age. \n+To control the timing of these transitions, you set a _minimum age_ for each phase. \n+For an index to move to the next phase, all actions in the current phase must be complete and \n+the index must be older than the minimum age. \n+\n+The minimum age defaults to zero, which causes {ilm-init} to move indices to the next phase\n+as soon as all actions in the current phase complete. \n+\n+[float]\n+[[ilm-phase-execution]]\n+=== Phase execution\n+\n+{ilm-init} controls the order in which the actions in a phase are executed and\n+what _steps_ are executed to perform the necessary index operations for each action.\n+\n+When an index enters a phase, {ilm-init} caches the phase definition in the index metadata.\n+This ensures that policy updates don't put the index into a state where  it can never exit the phase.\n+If changes can be safely applied, {ilm-init} updates the cached phase definition.\n+If they cannot, phase execution continues using the cached definition. \n+\n+[float]\n+[[ilm-phase-actions]]\n+=== Phase actions\n+\n+{ilm-init} supports the following actions in each phase.\n+\n+* Hot\n+  - <<ilm-set-priority,Set Priority>>\n+  - <<ilm-unfollow,Unfollow>>\n+  - <<ilm-rollover,Rollover>>\n+* Warm\n+  - <<ilm-set-priority,Set Priority>>\n+  - <<ilm-unfollow,Unfollow>>\n+  - <<ilm-readonly,Read-Only>>\n+  - <<ilm-allocate,Allocate>>\n+  - <<ilm-shrink,Shrink>>\n+  - <<ilm-forcemerge,Force Merge>>\n+* Cold\n+  - <<ilm-set-priority-action,Set Priority>>\n+  - <<ilm-unfollow-action,Unfollow>>\n+  - <<ilm-allocate,Allocate>>\n+  - <<ilm-freeze,Freeze>>\n+  - <<ilm-searchable-snapshot, Searchable Snapshot>>\n+* Delete\n+  - <<ilm-delete,Wait For Snapshot>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDE4MzU5", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394018359", "createdAt": "2020-04-15T18:14:10Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxNDoxMVrOGGFxdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxNDoxMVrOGGFxdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAzOTIyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {ilm-init} simplifies managing indices in hot-warm-cold architectures,\n          \n          \n            \n            {ilm-init} simplifies the management indices in hot-warm-cold architectures,", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409039222", "createdAt": "2020-04-15T18:14:11Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-overview.asciidoc", "diffHunk": "@@ -21,29 +21,15 @@ include::../glossary.asciidoc[tag=force-merge-def-short]\n include::../glossary.asciidoc[tag=freeze-def-short]\n * **Delete** - Permanently remove an index, including all of its data and metadata.\n \n-Typically, you associate a lifecycle policy with an index template so it is automatically applied   \n-to new indices. \n-You can also apply a policy manually when you create an index.\n-\n-{ilm-init} simplifies managing indices in hot-warm-cold architectures, \n+{ilm-init} simplifies managing indices in hot-warm-cold architectures,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDIxMDEx", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394021011", "createdAt": "2020-04-15T18:17:47Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxNzo0OFrOGGF5cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxNzo0OFrOGGF5cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0MTI2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The Allocate action allows you to specify which nodes are allowed to host the\n          \n          \n            \n            Specifies which nodes are allowed to host the", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409041267", "createdAt": "2020-04-15T18:17:48Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDIxNDMz", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394021433", "createdAt": "2020-04-15T18:18:25Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxODoyNVrOGGF6pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxODoyNVrOGGF6pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0MTU3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            shards of the index and set the number of replicas.\n          \n          \n            \n            shards of an index and set the number of replicas.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409041575", "createdAt": "2020-04-15T18:18:25Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDIxOTA2", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394021906", "createdAt": "2020-04-15T18:19:04Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxOTowNFrOGGF8QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxOTowNFrOGGF8QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0MTk4NQ==", "bodyText": "I think a paragraph break here would be helpful.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Behind the scenes, it is modifying the index settings\n          \n          \n            \n            \n          \n          \n            \n            Behind the scenes, the allocate action modifies the index settings", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409041985", "createdAt": "2020-04-15T18:19:04Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDIyMTcy", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394022172", "createdAt": "2020-04-15T18:19:26Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxOToyNlrOGGF9Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxOToyNlrOGGF9Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0MjIxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            controlling where Elasticsearch allocates shards of a particular index.\n          \n          \n            \n            controlling where {es} allocates shards of a particular index.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409042218", "createdAt": "2020-04-15T18:19:26Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDIyNDMw", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394022430", "createdAt": "2020-04-15T18:19:46Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxOTo0NlrOGGF96g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxOTo0NlrOGGF96g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0MjQxMA==", "bodyText": "Maybe link to these settings if possible?", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409042410", "createdAt": "2020-04-15T18:19:46Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDIzMjA5", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394023209", "createdAt": "2020-04-15T18:20:51Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyMDo1MVrOGGGATg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyMDo1MVrOGGGATg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0MzAyMg==", "bodyText": "I don't think the -- is necessary here.\nI'd also rewrap the lines.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409043022", "createdAt": "2020-04-15T18:20:51Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n+--", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDIzMzIy", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394023322", "createdAt": "2020-04-15T18:21:02Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyMTowMlrOGGGAsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyMTowMlrOGGGAsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0MzEyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n          \n          \n            \n            NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as {ilm-init} won't take care of index allocation during `hot` phase.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409043122", "createdAt": "2020-04-15T18:21:02Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDI0OTc3", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394024977", "createdAt": "2020-04-15T18:23:18Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyMzoxOVrOGGGFtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyMzoxOVrOGGGFtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0NDQwNA==", "bodyText": "These should be converted to a definition list:\n`number_of_replicas`::\n(Optional, integer)\nNumber of replicas to assign to the index.\n\nI also think properties may be a more appropriate term than options, but I don't feel strongly.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409044404", "createdAt": "2020-04-15T18:23:19Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n+--\n+\n+[[ilm-allocate-options]]\n+.Allocate Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default     | Description\n+| `number_of_replicas` | no        | -           | The number of replicas to\n+                                                   assign to the index\n+| `include`            | no        | -           | assigns an index to nodes\n+                                                   having at least _one_ of the attributes\n+| `exclude`            | no        | -           | assigns an index to nodes having\n+                                                   _none_ of the attributes\n+| `require`            | no        | -           | assigns an index to nodes having\n+                                                   _all_ of the attributes\n+|======", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDI1NDkz", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394025493", "createdAt": "2020-04-15T18:23:59Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyNDowMFrOGGGHVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyNDowMFrOGGGHVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0NDgyMg==", "bodyText": "Rather than a table label, this will probably work better as a heading.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409044822", "createdAt": "2020-04-15T18:24:00Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n+--\n+\n+[[ilm-allocate-options]]\n+.Allocate Options", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDI1OTI4", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394025928", "createdAt": "2020-04-15T18:24:37Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyNDozN1rOGGGIwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyNDozN1rOGGGIwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0NTE4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If `number_of_replicas` is not configured, then at least one of `include`,\n          \n          \n            \n            `exclude`, and `require` is required. An empty Allocate Action with no configuration\n          \n          \n            \n            is invalid.\n          \n          \n            \n            If `number_of_replicas` is not configured, then at least one of `include`,\n          \n          \n            \n            `exclude`, and `require` is required. An empty allocate action with no configuration\n          \n          \n            \n            is invalid.\n          \n      \n    \n    \n  \n\nI'd move these statements under the applicable properties. The empty object note\nshould probably come before the other propertries.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409045185", "createdAt": "2020-04-15T18:24:37Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n+--\n+\n+[[ilm-allocate-options]]\n+.Allocate Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default     | Description\n+| `number_of_replicas` | no        | -           | The number of replicas to\n+                                                   assign to the index\n+| `include`            | no        | -           | assigns an index to nodes\n+                                                   having at least _one_ of the attributes\n+| `exclude`            | no        | -           | assigns an index to nodes having\n+                                                   _none_ of the attributes\n+| `require`            | no        | -           | assigns an index to nodes having\n+                                                   _all_ of the attributes\n+|======\n+\n+If `number_of_replicas` is not configured, then at least one of `include`,\n+`exclude`, and `require` is required. An empty Allocate Action with no configuration\n+is invalid.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDI3MjA4", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394027208", "createdAt": "2020-04-15T18:26:25Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyNjoyNVrOGGGMuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyNjoyNVrOGGGMuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0NjIwMA==", "bodyText": "Not a big deal, but Asciidoctor prefers [discrete] over [float]:\nhttps://asciidoctor.org/docs/asciidoc-asciidoctor-diffs/#blocks\n[float] will still work (and be around for a while), but I'm trying to use [discrete] going forward.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409046200", "createdAt": "2020-04-15T18:26:25Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n+--\n+\n+[[ilm-allocate-options]]\n+.Allocate Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default     | Description\n+| `number_of_replicas` | no        | -           | The number of replicas to\n+                                                   assign to the index\n+| `include`            | no        | -           | assigns an index to nodes\n+                                                   having at least _one_ of the attributes\n+| `exclude`            | no        | -           | assigns an index to nodes having\n+                                                   _none_ of the attributes\n+| `require`            | no        | -           | assigns an index to nodes having\n+                                                   _all_ of the attributes\n+|======\n+\n+If `number_of_replicas` is not configured, then at least one of `include`,\n+`exclude`, and `require` is required. An empty Allocate Action with no configuration\n+is invalid.\n+\n+[float]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDI3Mzgz", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394027383", "createdAt": "2020-04-15T18:26:40Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyNjo0MFrOGGGNUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyNjo0MFrOGGGNUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0NjM1Mg==", "bodyText": "Should add an explicit anchor.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409046352", "createdAt": "2020-04-15T18:26:40Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n+--\n+\n+[[ilm-allocate-options]]\n+.Allocate Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default     | Description\n+| `number_of_replicas` | no        | -           | The number of replicas to\n+                                                   assign to the index\n+| `include`            | no        | -           | assigns an index to nodes\n+                                                   having at least _one_ of the attributes\n+| `exclude`            | no        | -           | assigns an index to nodes having\n+                                                   _none_ of the attributes\n+| `require`            | no        | -           | assigns an index to nodes having\n+                                                   _all_ of the attributes\n+|======\n+\n+If `number_of_replicas` is not configured, then at least one of `include`,\n+`exclude`, and `require` is required. An empty Allocate Action with no configuration\n+is invalid.\n+\n+[float]\n+==== Examples", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDI3Njcx", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394027671", "createdAt": "2020-04-15T18:27:06Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyNzowNlrOGGGOPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyNzowNlrOGGGOPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0NjU5MA==", "bodyText": "Needs an explicit anchor", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409046590", "createdAt": "2020-04-15T18:27:06Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n+--\n+\n+[[ilm-allocate-options]]\n+.Allocate Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default     | Description\n+| `number_of_replicas` | no        | -           | The number of replicas to\n+                                                   assign to the index\n+| `include`            | no        | -           | assigns an index to nodes\n+                                                   having at least _one_ of the attributes\n+| `exclude`            | no        | -           | assigns an index to nodes having\n+                                                   _none_ of the attributes\n+| `require`            | no        | -           | assigns an index to nodes having\n+                                                   _all_ of the attributes\n+|======\n+\n+If `number_of_replicas` is not configured, then at least one of `include`,\n+`exclude`, and `require` is required. An empty Allocate Action with no configuration\n+is invalid.\n+\n+[float]\n+==== Examples\n+\n+[float]\n+===== Change number of replicas", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDI4NjY2", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394028666", "createdAt": "2020-04-15T18:28:31Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyODozMVrOGGGRWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoyODozMVrOGGGRWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0NzM4Nw==", "bodyText": "We should document or link to these attributes.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409047387", "createdAt": "2020-04-15T18:28:31Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n+--\n+\n+[[ilm-allocate-options]]\n+.Allocate Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default     | Description\n+| `number_of_replicas` | no        | -           | The number of replicas to\n+                                                   assign to the index\n+| `include`            | no        | -           | assigns an index to nodes\n+                                                   having at least _one_ of the attributes\n+| `exclude`            | no        | -           | assigns an index to nodes having\n+                                                   _none_ of the attributes\n+| `require`            | no        | -           | assigns an index to nodes having\n+                                                   _all_ of the attributes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDUxMzUw", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394051350", "createdAt": "2020-04-15T18:59:34Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo1OTozNFrOGGHawA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo1OTozNFrOGGHawA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2NjE3Ng==", "bodyText": "This attribute isn't documented anywhere. It'd be good to provide a bit more explanation/context.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409066176", "createdAt": "2020-04-15T18:59:34Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n+--\n+\n+[[ilm-allocate-options]]\n+.Allocate Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default     | Description\n+| `number_of_replicas` | no        | -           | The number of replicas to\n+                                                   assign to the index\n+| `include`            | no        | -           | assigns an index to nodes\n+                                                   having at least _one_ of the attributes\n+| `exclude`            | no        | -           | assigns an index to nodes having\n+                                                   _none_ of the attributes\n+| `require`            | no        | -           | assigns an index to nodes having\n+                                                   _all_ of the attributes\n+|======\n+\n+If `number_of_replicas` is not configured, then at least one of `include`,\n+`exclude`, and `require` is required. An empty Allocate Action with no configuration\n+is invalid.\n+\n+[float]\n+==== Examples\n+\n+[float]\n+===== Change number of replicas\n+\n+In this example, the index's number of replicas is changed to `2`, while allocation\n+rules are unchanged.\n+\n+[source,console]\n+--------------------------------------------------\n+PUT _ilm/policy/my_policy\n+{\n+  \"policy\": {\n+    \"phases\": {\n+      \"warm\": {\n+        \"actions\": {\n+          \"allocate\" : {\n+            \"number_of_replicas\" : 2\n+          }\n+        }\n+      }\n+    }\n+  }\n+}\n+--------------------------------------------------\n+\n+[float]\n+===== Assign index to node with specific \"box_type\" attribute", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDUxNjkz", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394051693", "createdAt": "2020-04-15T19:00:01Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMDowMVrOGGHb6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMDowMVrOGGHb6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2NjQ3NA==", "bodyText": "Explicit anchor missing.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409066474", "createdAt": "2020-04-15T19:00:01Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n+--\n+\n+[[ilm-allocate-options]]\n+.Allocate Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default     | Description\n+| `number_of_replicas` | no        | -           | The number of replicas to\n+                                                   assign to the index\n+| `include`            | no        | -           | assigns an index to nodes\n+                                                   having at least _one_ of the attributes\n+| `exclude`            | no        | -           | assigns an index to nodes having\n+                                                   _none_ of the attributes\n+| `require`            | no        | -           | assigns an index to nodes having\n+                                                   _all_ of the attributes\n+|======\n+\n+If `number_of_replicas` is not configured, then at least one of `include`,\n+`exclude`, and `require` is required. An empty Allocate Action with no configuration\n+is invalid.\n+\n+[float]\n+==== Examples\n+\n+[float]\n+===== Change number of replicas\n+\n+In this example, the index's number of replicas is changed to `2`, while allocation\n+rules are unchanged.\n+\n+[source,console]\n+--------------------------------------------------\n+PUT _ilm/policy/my_policy\n+{\n+  \"policy\": {\n+    \"phases\": {\n+      \"warm\": {\n+        \"actions\": {\n+          \"allocate\" : {\n+            \"number_of_replicas\" : 2\n+          }\n+        }\n+      }\n+    }\n+  }\n+}\n+--------------------------------------------------\n+\n+[float]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDUxNzQ2", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394051746", "createdAt": "2020-04-15T19:00:05Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMDowNVrOGGHcGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMDowNVrOGGHcGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2NjUyMQ==", "bodyText": "Explicit anchor missing.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409066521", "createdAt": "2020-04-15T19:00:05Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-allocate.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[ilm-allocate]]\n+=== Allocate\n+\n+Phases allowed: warm, cold.\n+\n+The Allocate action allows you to specify which nodes are allowed to host the\n+shards of the index and set the number of replicas.\n+Behind the scenes, it is modifying the index settings\n+for shard filtering and/or replica counts. When updating the number of replicas,\n+configuring allocation rules is optional. When configuring allocation rules,\n+setting number of replicas is optional. Although this action can be treated as\n+two separate index settings updates, both can be configured at once.\n+\n+For more information about how {es} uses replicas for scaling, see\n+<<scalability>>. See <<shard-allocation-filtering>> for more information about\n+controlling where Elasticsearch allocates shards of a particular index.\n+\n+--\n+NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n+--\n+\n+[[ilm-allocate-options]]\n+.Allocate Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default     | Description\n+| `number_of_replicas` | no        | -           | The number of replicas to\n+                                                   assign to the index\n+| `include`            | no        | -           | assigns an index to nodes\n+                                                   having at least _one_ of the attributes\n+| `exclude`            | no        | -           | assigns an index to nodes having\n+                                                   _none_ of the attributes\n+| `require`            | no        | -           | assigns an index to nodes having\n+                                                   _all_ of the attributes\n+|======\n+\n+If `number_of_replicas` is not configured, then at least one of `include`,\n+`exclude`, and `require` is required. An empty Allocate Action with no configuration\n+is invalid.\n+\n+[float]\n+==== Examples\n+\n+[float]\n+===== Change number of replicas\n+\n+In this example, the index's number of replicas is changed to `2`, while allocation\n+rules are unchanged.\n+\n+[source,console]\n+--------------------------------------------------\n+PUT _ilm/policy/my_policy\n+{\n+  \"policy\": {\n+    \"phases\": {\n+      \"warm\": {\n+        \"actions\": {\n+          \"allocate\" : {\n+            \"number_of_replicas\" : 2\n+          }\n+        }\n+      }\n+    }\n+  }\n+}\n+--------------------------------------------------\n+\n+[float]\n+===== Assign index to node with specific \"box_type\" attribute\n+\n+This example assigns the index to nodes with `box_type` attribute of \"hot\" or \"warm\".\n+\n+[source,console]\n+--------------------------------------------------\n+PUT _ilm/policy/my_policy\n+{\n+  \"policy\": {\n+    \"phases\": {\n+      \"warm\": {\n+        \"actions\": {\n+          \"allocate\" : {\n+            \"include\" : {\n+              \"box_type\": \"hot,warm\"\n+            }\n+          }\n+        }\n+      }\n+    }\n+  }\n+}\n+--------------------------------------------------\n+\n+[float]\n+===== Assign index to a specific node and update replica settings", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDUyNzQx", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394052741", "createdAt": "2020-04-15T19:01:31Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMTozMVrOGGHfJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMTozMVrOGGHfJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2NzMwMw==", "bodyText": "See https://github.com/elastic/elasticsearch/pull/52181/files#r409044822", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409067303", "createdAt": "2020-04-15T19:01:31Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-delete.asciidoc", "diffHunk": "@@ -0,0 +1,32 @@\n+[[ilm-delete]]\n+=== Delete\n+\n+Phases allowed: delete.\n+\n+The Delete action does just that, it deletes the index.\n+\n+[[ilm-delete-action-options]]\n+.Delete", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDUzMDM4", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394053038", "createdAt": "2020-04-15T19:01:59Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMTo1OVrOGGHgJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMTo1OVrOGGHgJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2NzU1Nw==", "bodyText": "See https://github.com/elastic/elasticsearch/pull/52181/files#r409044404", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409067557", "createdAt": "2020-04-15T19:01:59Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-delete.asciidoc", "diffHunk": "@@ -0,0 +1,32 @@\n+[[ilm-delete]]\n+=== Delete\n+\n+Phases allowed: delete.\n+\n+The Delete action does just that, it deletes the index.\n+\n+[[ilm-delete-action-options]]\n+.Delete\n+[options=\"header\"]\n+|======\n+| Name                         | Required  | Default             | Description\n+| `delete_searchable_snapshot` | no        | true                | Deletes the searchable snapshot created in the cold phase, if a\n+                                                                   snapshot was created (ie. if the <<ilm-searchable-snapshot-action,\n+                                                                   Searchable Snapshot Action>> was used in the cold phase)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDUzMTE3", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394053117", "createdAt": "2020-04-15T19:02:05Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMjowNVrOGGHgZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMjowNVrOGGHgZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2NzYyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The Delete action does just that, it deletes the index.\n          \n          \n            \n            Deletes an index.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409067622", "createdAt": "2020-04-15T19:02:05Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-delete.asciidoc", "diffHunk": "@@ -0,0 +1,32 @@\n+[[ilm-delete]]\n+=== Delete\n+\n+Phases allowed: delete.\n+\n+The Delete action does just that, it deletes the index.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU0MDc2", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394054076", "createdAt": "2020-04-15T19:03:20Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMzoyMFrOGGHjTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowMzoyMFrOGGHjTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2ODM2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                                               Searchable Snapshot Action>> was used in the cold phase)\n          \n          \n            \n                                                                               searchable snapshot action>> was used in the cold phase)", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409068367", "createdAt": "2020-04-15T19:03:20Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-delete.asciidoc", "diffHunk": "@@ -0,0 +1,32 @@\n+[[ilm-delete]]\n+=== Delete\n+\n+Phases allowed: delete.\n+\n+The Delete action does just that, it deletes the index.\n+\n+[[ilm-delete-action-options]]\n+.Delete\n+[options=\"header\"]\n+|======\n+| Name                         | Required  | Default             | Description\n+| `delete_searchable_snapshot` | no        | true                | Deletes the searchable snapshot created in the cold phase, if a\n+                                                                   snapshot was created (ie. if the <<ilm-searchable-snapshot-action,\n+                                                                   Searchable Snapshot Action>> was used in the cold phase)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU0Nzk3", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394054797", "createdAt": "2020-04-15T19:04:21Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowNDoyMVrOGGHluA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowNDoyMVrOGGHluA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2ODk4NA==", "bodyText": "This should probably be an important or warning admon.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: Index will be be made read-only when this action is run\n          \n          \n            \n            (see: <<dynamic-index-settings,index.blocks.write>>)\n          \n          \n            \n            NOTE: The index is made read-only when this action is run.\n          \n          \n            \n            See <<dynamic-index-settings,`index.blocks.write`>>.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409068984", "createdAt": "2020-04-15T19:04:21Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-forcemerge.asciidoc", "diffHunk": "@@ -0,0 +1,48 @@\n+[[ilm-forcemerge]]\n+=== Force Merge\n+\n+Phases allowed: hot, warm.\n+\n+NOTE: Index will be be made read-only when this action is run\n+(see: <<dynamic-index-settings,index.blocks.write>>)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU1MzE3", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394055317", "createdAt": "2020-04-15T19:05:04Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowNTowNFrOGGHnTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowNTowNFrOGGHnTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2OTM4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ILM validates this predicate and will refuse a policy with a forcemerge in the hot phase without a\n          \n          \n            \n            {ilm-init} validates this predicate and will refuse a policy with a forcemerge in the hot phase without a", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409069388", "createdAt": "2020-04-15T19:05:04Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-forcemerge.asciidoc", "diffHunk": "@@ -0,0 +1,48 @@\n+[[ilm-forcemerge]]\n+=== Force Merge\n+\n+Phases allowed: hot, warm.\n+\n+NOTE: Index will be be made read-only when this action is run\n+(see: <<dynamic-index-settings,index.blocks.write>>)\n+\n+NOTE: If the `forcemerge` action is used in the `hot` phase, the `rollover` action *must* be preset.\n+ILM validates this predicate and will refuse a policy with a forcemerge in the hot phase without a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU1NzQz", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394055743", "createdAt": "2020-04-15T19:05:40Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowNTo0MFrOGGHokA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowNTo0MFrOGGHokA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2OTcxMg==", "bodyText": "Not a huge fan of stacking admonitions, but it may be necessary here. Should probably move them after the action description though.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409069712", "createdAt": "2020-04-15T19:05:40Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-forcemerge.asciidoc", "diffHunk": "@@ -0,0 +1,48 @@\n+[[ilm-forcemerge]]\n+=== Force Merge\n+\n+Phases allowed: hot, warm.\n+\n+NOTE: Index will be be made read-only when this action is run\n+(see: <<dynamic-index-settings,index.blocks.write>>)\n+\n+NOTE: If the `forcemerge` action is used in the `hot` phase, the `rollover` action *must* be preset.\n+ILM validates this predicate and will refuse a policy with a forcemerge in the hot phase without a\n+rollover action.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU2NDA3", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394056407", "createdAt": "2020-04-15T19:06:35Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowNjozNlrOGGHqeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowNjozNlrOGGHqeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3MDIwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The Force Merge Action <<indices-forcemerge,force merges>> the index into at\n          \n          \n            \n            most a specific number of <<indices-segments,segments>>.\n          \n          \n            \n            The force merge action <<indices-forcemerge,force merges>> the index into a\n          \n          \n            \n            specified maximum number of <<indices-segments,segments>>.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409070201", "createdAt": "2020-04-15T19:06:36Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-forcemerge.asciidoc", "diffHunk": "@@ -0,0 +1,48 @@\n+[[ilm-forcemerge]]\n+=== Force Merge\n+\n+Phases allowed: hot, warm.\n+\n+NOTE: Index will be be made read-only when this action is run\n+(see: <<dynamic-index-settings,index.blocks.write>>)\n+\n+NOTE: If the `forcemerge` action is used in the `hot` phase, the `rollover` action *must* be preset.\n+ILM validates this predicate and will refuse a policy with a forcemerge in the hot phase without a\n+rollover action.\n+\n+The Force Merge Action <<indices-forcemerge,force merges>> the index into at\n+most a specific number of <<indices-segments,segments>>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU3Mjkx", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394057291", "createdAt": "2020-04-15T19:07:52Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowNzo1MlrOGGHtGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowNzo1MlrOGGHtGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3MDg3Mg==", "bodyText": "See previous comment re: heading and converting to a def list.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409070872", "createdAt": "2020-04-15T19:07:52Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-forcemerge.asciidoc", "diffHunk": "@@ -0,0 +1,48 @@\n+[[ilm-forcemerge]]\n+=== Force Merge\n+\n+Phases allowed: hot, warm.\n+\n+NOTE: Index will be be made read-only when this action is run\n+(see: <<dynamic-index-settings,index.blocks.write>>)\n+\n+NOTE: If the `forcemerge` action is used in the `hot` phase, the `rollover` action *must* be preset.\n+ILM validates this predicate and will refuse a policy with a forcemerge in the hot phase without a\n+rollover action.\n+\n+The Force Merge Action <<indices-forcemerge,force merges>> the index into at\n+most a specific number of <<indices-segments,segments>>.\n+\n+[[ilm-forcemerge-options]]\n+.Force Merge Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default             | Description\n+| `max_num_segments`   | yes       | -                   | The number of segments to merge to. To fully merge the index, set it to `1`\n+| `codec`              | no        | -                   | Optional specification of the `best_compression` codec\n+|======", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU3Nzk1", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394057795", "createdAt": "2020-04-15T19:08:34Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowODozNFrOGGHusA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowODozNFrOGGHusA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3MTI4MA==", "bodyText": "I'd add an Examples heading/section.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409071280", "createdAt": "2020-04-15T19:08:34Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-delete.asciidoc", "diffHunk": "@@ -0,0 +1,32 @@\n+[[ilm-delete]]\n+=== Delete\n+\n+Phases allowed: delete.\n+\n+The Delete action does just that, it deletes the index.\n+\n+[[ilm-delete-action-options]]\n+.Delete\n+[options=\"header\"]\n+|======\n+| Name                         | Required  | Default             | Description\n+| `delete_searchable_snapshot` | no        | true                | Deletes the searchable snapshot created in the cold phase, if a\n+                                                                   snapshot was created (ie. if the <<ilm-searchable-snapshot-action,\n+                                                                   Searchable Snapshot Action>> was used in the cold phase)\n+|======\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU3ODk3", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394057897", "createdAt": "2020-04-15T19:08:41Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowODo0MlrOGGHvCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowODo0MlrOGGHvCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3MTM2OA==", "bodyText": "I'd add an Examples heading/section.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409071368", "createdAt": "2020-04-15T19:08:42Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-forcemerge.asciidoc", "diffHunk": "@@ -0,0 +1,48 @@\n+[[ilm-forcemerge]]\n+=== Force Merge\n+\n+Phases allowed: hot, warm.\n+\n+NOTE: Index will be be made read-only when this action is run\n+(see: <<dynamic-index-settings,index.blocks.write>>)\n+\n+NOTE: If the `forcemerge` action is used in the `hot` phase, the `rollover` action *must* be preset.\n+ILM validates this predicate and will refuse a policy with a forcemerge in the hot phase without a\n+rollover action.\n+\n+The Force Merge Action <<indices-forcemerge,force merges>> the index into at\n+most a specific number of <<indices-segments,segments>>.\n+\n+[[ilm-forcemerge-options]]\n+.Force Merge Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default             | Description\n+| `max_num_segments`   | yes       | -                   | The number of segments to merge to. To fully merge the index, set it to `1`\n+| `codec`              | no        | -                   | Optional specification of the `best_compression` codec\n+|======\n+\n+[WARNING]\n+======\n+When using the `\"codec\": \"best_compression\"` configuration in the ILM forcemerge action, ILM will\n+<<indices-close,close>> and then <<indices-open-close,re-open>> the index prior to a forcemerge.\n+During this time the index will be unavailable for either read or write operations.\n+======\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU4MTIx", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394058121", "createdAt": "2020-04-15T19:08:59Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowODo1OVrOGGHvzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTowODo1OVrOGGHvzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3MTU2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            When using the `\"codec\": \"best_compression\"` configuration in the ILM forcemerge action, ILM will\n          \n          \n            \n            When using the `\"codec\": \"best_compression\"` configuration in the {ilm-init} forcemerge action, {ilm-int} will", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409071566", "createdAt": "2020-04-15T19:08:59Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-forcemerge.asciidoc", "diffHunk": "@@ -0,0 +1,48 @@\n+[[ilm-forcemerge]]\n+=== Force Merge\n+\n+Phases allowed: hot, warm.\n+\n+NOTE: Index will be be made read-only when this action is run\n+(see: <<dynamic-index-settings,index.blocks.write>>)\n+\n+NOTE: If the `forcemerge` action is used in the `hot` phase, the `rollover` action *must* be preset.\n+ILM validates this predicate and will refuse a policy with a forcemerge in the hot phase without a\n+rollover action.\n+\n+The Force Merge Action <<indices-forcemerge,force merges>> the index into at\n+most a specific number of <<indices-segments,segments>>.\n+\n+[[ilm-forcemerge-options]]\n+.Force Merge Options\n+[options=\"header\"]\n+|======\n+| Name                 | Required  | Default             | Description\n+| `max_num_segments`   | yes       | -                   | The number of segments to merge to. To fully merge the index, set it to `1`\n+| `codec`              | no        | -                   | Optional specification of the `best_compression` codec\n+|======\n+\n+[WARNING]\n+======\n+When using the `\"codec\": \"best_compression\"` configuration in the ILM forcemerge action, ILM will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU5MzI3", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394059327", "createdAt": "2020-04-15T19:10:45Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxMDo0NlrOGGHzzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxMDo0NlrOGGHzzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3MjU5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This action will <<frozen-indices, freeze>> the index\n          \n          \n            \n            by calling the <<freeze-index-api, Freeze Index API>>.\n          \n          \n            \n            <<frozen-indices, freezes>> an index\n          \n          \n            \n            using the <<freeze-index-api, Freeze Index API>>.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409072590", "createdAt": "2020-04-15T19:10:46Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-freeze.asciidoc", "diffHunk": "@@ -0,0 +1,31 @@\n+[[ilm-freeze]]\n+=== Freeze\n+\n+Phases allowed: cold.\n+\n+This action will <<frozen-indices, freeze>> the index\n+by calling the <<freeze-index-api, Freeze Index API>>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU5NDc1", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394059475", "createdAt": "2020-04-15T19:11:00Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxMTowMFrOGGH0Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxMTowMFrOGGH0Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3MjY5OQ==", "bodyText": "Add Examples heading", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409072699", "createdAt": "2020-04-15T19:11:00Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-freeze.asciidoc", "diffHunk": "@@ -0,0 +1,31 @@\n+[[ilm-freeze]]\n+=== Freeze\n+\n+Phases allowed: cold.\n+\n+This action will <<frozen-indices, freeze>> the index\n+by calling the <<freeze-index-api, Freeze Index API>>.\n+\n+[source,console]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDU5ODYx", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394059861", "createdAt": "2020-04-15T19:11:32Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxMTozMlrOGGH1bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxMTozMlrOGGH1bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3MzAwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This action will set the index to be read-only\n          \n          \n            \n            (see: <<dynamic-index-settings,index.blocks.write>>)\n          \n          \n            \n            Sets an index as read-only. See <<dynamic-index-settings,`index.blocks.write`>>.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409073006", "createdAt": "2020-04-15T19:11:32Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-readonly.asciidoc", "diffHunk": "@@ -0,0 +1,25 @@\n+[[ilm-readonly]]\n+=== Read-Only\n+\n+Phases allowed: warm.\n+\n+This action will set the index to be read-only\n+(see: <<dynamic-index-settings,index.blocks.write>>)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDYwODE4", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394060818", "createdAt": "2020-04-15T19:12:58Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxMjo1OFrOGGH4Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxMjo1OFrOGGH4Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3Mzc2Nw==", "bodyText": "Not sure if this is needed. Either way, it's not included in the freeze action. I'd be consistent either way.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409073767", "createdAt": "2020-04-15T19:12:58Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-readonly.asciidoc", "diffHunk": "@@ -0,0 +1,25 @@\n+[[ilm-readonly]]\n+=== Read-Only\n+\n+Phases allowed: warm.\n+\n+This action will set the index to be read-only\n+(see: <<dynamic-index-settings,index.blocks.write>>)\n+\n+This action does not have any options associated with it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDYwOTE0", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394060914", "createdAt": "2020-04-15T19:13:06Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxMzowNlrOGGH4tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxMzowNlrOGGH4tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3Mzg0Ng==", "bodyText": "Examples heading needed.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409073846", "createdAt": "2020-04-15T19:13:06Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-readonly.asciidoc", "diffHunk": "@@ -0,0 +1,25 @@\n+[[ilm-readonly]]\n+=== Read-Only\n+\n+Phases allowed: warm.\n+\n+This action will set the index to be read-only\n+(see: <<dynamic-index-settings,index.blocks.write>>)\n+\n+This action does not have any options associated with it.\n+\n+[source,console]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDYxODc1", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394061875", "createdAt": "2020-04-15T19:14:33Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNDozM1rOGGH73w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNDozM1rOGGH73w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NDY1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            index \"my_index-000001\" must be the write index for the alias. For more information, read\n          \n          \n            \n            <<indices-rollover-is-write-index,Write Index Alias Behavior>>.\n          \n          \n            \n            index \"my_index-000001\" must be the write index for the alias. See\n          \n          \n            \n            <<indices-rollover-is-write-index>>.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409074655", "createdAt": "2020-04-15T19:14:33Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-rollover.asciidoc", "diffHunk": "@@ -0,0 +1,196 @@\n+[[ilm-rollover]]\n+=== Rollover\n+\n+Phases allowed: hot.\n+\n+[WARNING]\n+index format must match pattern '^.*-\\\\d+$', for example (`logs-000001`).\n+[WARNING]\n+The managed index must set `index.lifecycle.rollover_alias` as the\n+alias to rollover. The index must also be the write index for the alias.\n+\n+[IMPORTANT]\n+If a policy using the Rollover action is used on a <<ccr-put-follow,follower\n+index>>, policy execution will wait until the leader index rolls over (or has\n+<<skipping-rollover, otherwise been marked as complete>>), then convert the\n+follower index into a regular index as if <<ilm-unfollow-action,the Unfollow\n+action>> had been used instead of rolling over.\n+\n+For example, if an index to be managed has an alias `my_data`. The managed\n+index \"my_index-000001\" must be the write index for the alias. For more information, read\n+<<indices-rollover-is-write-index,Write Index Alias Behavior>>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDYyODcw", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394062870", "createdAt": "2020-04-15T19:15:58Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNTo1OFrOGGH-6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNTo1OFrOGGH-6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NTQzMw==", "bodyText": "This isn't properly blocked off, which causes the second para and snippet to display outside the block. I'd move it after the description.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [IMPORTANT]\n          \n          \n            \n            If a policy using the Rollover action is used on a <<ccr-put-follow,follower\n          \n          \n            \n            index>>, policy execution will wait until the leader index rolls over (or has\n          \n          \n            \n            <<skipping-rollover, otherwise been marked as complete>>), then convert the\n          \n          \n            \n            follower index into a regular index as if <<ilm-unfollow-action,the Unfollow\n          \n          \n            \n            action>> had been used instead of rolling over.\n          \n          \n            \n            \n          \n          \n            \n            For example, if an index to be managed has an alias `my_data`. The managed\n          \n          \n            \n            index \"my_index-000001\" must be the write index for the alias. For more information, read\n          \n          \n            \n            <<indices-rollover-is-write-index,Write Index Alias Behavior>>.\n          \n          \n            \n            \n          \n          \n            \n            [source,console]\n          \n          \n            \n            --------------------------------------------------\n          \n          \n            \n            PUT my_index-000001\n          \n          \n            \n            {\n          \n          \n            \n              \"settings\": {\n          \n          \n            \n                \"index.lifecycle.name\": \"my_policy\",\n          \n          \n            \n                \"index.lifecycle.rollover_alias\": \"my_data\"\n          \n          \n            \n              },\n          \n          \n            \n              \"aliases\": {\n          \n          \n            \n                \"my_data\": {\n          \n          \n            \n                  \"is_write_index\": true\n          \n          \n            \n                }\n          \n          \n            \n              }\n          \n          \n            \n            }\n          \n          \n            \n            --------------------------------------------------\n          \n          \n            \n            [IMPORTANT]\n          \n          \n            \n            --\n          \n          \n            \n            If a policy using the Rollover action is used on a <<ccr-put-follow,follower\n          \n          \n            \n            index>>, policy execution will wait until the leader index rolls over (or has\n          \n          \n            \n            <<skipping-rollover, otherwise been marked as complete>>), then convert the\n          \n          \n            \n            follower index into a regular index as if <<ilm-unfollow-action,the Unfollow\n          \n          \n            \n            action>> had been used instead of rolling over.\n          \n          \n            \n            \n          \n          \n            \n            For example, if an index to be managed has an alias `my_data`. The managed\n          \n          \n            \n            index \"my_index-000001\" must be the write index for the alias. For more information, read\n          \n          \n            \n            <<indices-rollover-is-write-index,Write Index Alias Behavior>>.\n          \n          \n            \n            \n          \n          \n            \n            [source,console]\n          \n          \n            \n            --------------------------------------------------\n          \n          \n            \n            PUT my_index-000001\n          \n          \n            \n            {\n          \n          \n            \n              \"settings\": {\n          \n          \n            \n                \"index.lifecycle.name\": \"my_policy\",\n          \n          \n            \n                \"index.lifecycle.rollover_alias\": \"my_data\"\n          \n          \n            \n              },\n          \n          \n            \n              \"aliases\": {\n          \n          \n            \n                \"my_data\": {\n          \n          \n            \n                  \"is_write_index\": true\n          \n          \n            \n                }\n          \n          \n            \n              }\n          \n          \n            \n            }\n          \n          \n            \n            --------------------------------------------------\n          \n          \n            \n            --", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409075433", "createdAt": "2020-04-15T19:15:58Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-rollover.asciidoc", "diffHunk": "@@ -0,0 +1,196 @@\n+[[ilm-rollover]]\n+=== Rollover\n+\n+Phases allowed: hot.\n+\n+[WARNING]\n+index format must match pattern '^.*-\\\\d+$', for example (`logs-000001`).\n+[WARNING]\n+The managed index must set `index.lifecycle.rollover_alias` as the\n+alias to rollover. The index must also be the write index for the alias.\n+\n+[IMPORTANT]\n+If a policy using the Rollover action is used on a <<ccr-put-follow,follower\n+index>>, policy execution will wait until the leader index rolls over (or has\n+<<skipping-rollover, otherwise been marked as complete>>), then convert the\n+follower index into a regular index as if <<ilm-unfollow-action,the Unfollow\n+action>> had been used instead of rolling over.\n+\n+For example, if an index to be managed has an alias `my_data`. The managed\n+index \"my_index-000001\" must be the write index for the alias. For more information, read\n+<<indices-rollover-is-write-index,Write Index Alias Behavior>>.\n+\n+[source,console]\n+--------------------------------------------------\n+PUT my_index-000001\n+{\n+  \"settings\": {\n+    \"index.lifecycle.name\": \"my_policy\",\n+    \"index.lifecycle.rollover_alias\": \"my_data\"\n+  },\n+  \"aliases\": {\n+    \"my_data\": {\n+      \"is_write_index\": true\n+    }\n+  }\n+}\n+--------------------------------------------------", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDYzMDEx", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394063011", "createdAt": "2020-04-15T19:16:11Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNjoxMVrOGGH_SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNjoxMVrOGGH_SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NTUyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The Rollover Action rolls an alias over to a new index when the\n          \n          \n            \n            existing index meets one of the rollover conditions.\n          \n          \n            \n            Rolls an alias over to a new index when the\n          \n          \n            \n            existing index meets one of the rollover conditions.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409075529", "createdAt": "2020-04-15T19:16:11Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-rollover.asciidoc", "diffHunk": "@@ -0,0 +1,196 @@\n+[[ilm-rollover]]\n+=== Rollover\n+\n+Phases allowed: hot.\n+\n+[WARNING]\n+index format must match pattern '^.*-\\\\d+$', for example (`logs-000001`).\n+[WARNING]\n+The managed index must set `index.lifecycle.rollover_alias` as the\n+alias to rollover. The index must also be the write index for the alias.\n+\n+[IMPORTANT]\n+If a policy using the Rollover action is used on a <<ccr-put-follow,follower\n+index>>, policy execution will wait until the leader index rolls over (or has\n+<<skipping-rollover, otherwise been marked as complete>>), then convert the\n+follower index into a regular index as if <<ilm-unfollow-action,the Unfollow\n+action>> had been used instead of rolling over.\n+\n+For example, if an index to be managed has an alias `my_data`. The managed\n+index \"my_index-000001\" must be the write index for the alias. For more information, read\n+<<indices-rollover-is-write-index,Write Index Alias Behavior>>.\n+\n+[source,console]\n+--------------------------------------------------\n+PUT my_index-000001\n+{\n+  \"settings\": {\n+    \"index.lifecycle.name\": \"my_policy\",\n+    \"index.lifecycle.rollover_alias\": \"my_data\"\n+  },\n+  \"aliases\": {\n+    \"my_data\": {\n+      \"is_write_index\": true\n+    }\n+  }\n+}\n+--------------------------------------------------\n+\n+The Rollover Action rolls an alias over to a new index when the\n+existing index meets one of the rollover conditions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDYzMTYx", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394063161", "createdAt": "2020-04-15T19:16:26Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNjoyNlrOGGH_tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNjoyNlrOGGH_tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NTYzOQ==", "bodyText": "Missing explicit anchors", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409075639", "createdAt": "2020-04-15T19:16:26Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/actions/ilm-rollover.asciidoc", "diffHunk": "@@ -0,0 +1,196 @@\n+[[ilm-rollover]]\n+=== Rollover\n+\n+Phases allowed: hot.\n+\n+[WARNING]\n+index format must match pattern '^.*-\\\\d+$', for example (`logs-000001`).\n+[WARNING]\n+The managed index must set `index.lifecycle.rollover_alias` as the\n+alias to rollover. The index must also be the write index for the alias.\n+\n+[IMPORTANT]\n+If a policy using the Rollover action is used on a <<ccr-put-follow,follower\n+index>>, policy execution will wait until the leader index rolls over (or has\n+<<skipping-rollover, otherwise been marked as complete>>), then convert the\n+follower index into a regular index as if <<ilm-unfollow-action,the Unfollow\n+action>> had been used instead of rolling over.\n+\n+For example, if an index to be managed has an alias `my_data`. The managed\n+index \"my_index-000001\" must be the write index for the alias. For more information, read\n+<<indices-rollover-is-write-index,Write Index Alias Behavior>>.\n+\n+[source,console]\n+--------------------------------------------------\n+PUT my_index-000001\n+{\n+  \"settings\": {\n+    \"index.lifecycle.name\": \"my_policy\",\n+    \"index.lifecycle.rollover_alias\": \"my_data\"\n+  },\n+  \"aliases\": {\n+    \"my_data\": {\n+      \"is_write_index\": true\n+    }\n+  }\n+}\n+--------------------------------------------------\n+\n+The Rollover Action rolls an alias over to a new index when the\n+existing index meets one of the rollover conditions.\n+\n+\n+[[ilm-rollover-options]]\n+.Rollover Options\n+[options=\"header\"]\n+|======\n+| Name       | Required  | Default             | Description\n+| `max_size` | no        | -                   | max primary shard index storage size.\n+                                                 See <<byte-units, Byte Units>>\n+                                                 for formatting\n+| `max_docs` | no        | -                   | max number of documents an\n+                                                 index is to contain before\n+                                                 rolling over.\n+| `max_age`  | no        | -                   | max time elapsed from index\n+                                                 creation. See\n+                                                 <<time-units, Time Units>>\n+                                                 for formatting\n+|======\n+\n+At least one of `max_size`, `max_docs`, `max_age` or any combinations of the\n+three are required to be specified.\n+\n+[float]\n+==== Examples\n+\n+[float]\n+===== Roll over when index is too large", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDY0MTI4", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394064128", "createdAt": "2020-04-15T19:17:50Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNzo1MFrOGGICyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNzo1MFrOGGICyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NjQyNA==", "bodyText": "Did you intend to leave this anchor?", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409076424", "createdAt": "2020-04-15T19:17:50Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/using-policies-rollover.asciidoc", "diffHunk": "@@ -1,18 +1,8 @@\n [role=\"xpack\"]\n [testenv=\"basic\"]\n+[[ilm-configure-rollover]]\n+== Configure rollover\n [[using-policies-rollover]]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDY0OTA0", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394064904", "createdAt": "2020-04-15T19:18:57Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxODo1N1rOGGIFYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxODo1N1rOGGIFYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NzA5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You use the Create policy API to define a new lifecycle policy. \n          \n          \n            \n            You use the <<ilm-put-lifecycle,create policy API>> to define a new lifecycle policy.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409077090", "createdAt": "2020-04-15T19:18:57Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "diffHunk": "@@ -1,12 +1,26 @@\n [role=\"xpack\"]\n [testenv=\"basic\"]\n [[set-up-lifecycle-policy]]\n-== Create lifecycle policy\n+== Configure lifecycle policy [[ilm-policy-definition]]\n \n-In order for an index to use an {ilm} policy to manage its lifecycle we must\n-first define a lifecycle policy for it to use. The following request creates a\n-policy called `my_policy` in Elasticsearch which we can later use to manage our\n-indexes.\n+For {ilm-init} to manage an index, a valid policy \n+must be specified in the `index.lifecycle.name` index setting. \n+\n+To configure a lifecycle policy for rolling indices, \n+you create the policy and add it to the index template.\n+\n+To use a policy to manage an index that doesn't roll over,\n+you can specify the policy directly when you create it.\n+\n+[float]\n+[[ilm-create-policy]]\n+=== Create lifecycle policy\n+\n+You use the Create policy API to define a new lifecycle policy. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDY1MDI5", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394065029", "createdAt": "2020-04-15T19:19:09Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxOTowOVrOGGIF1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxOTowOVrOGGIF1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NzIwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For example, the following request creates `my_policy`, a simple\n          \n          \n            \n            For example, the following request creates `my_policy`, a", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409077207", "createdAt": "2020-04-15T19:19:09Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "diffHunk": "@@ -1,12 +1,26 @@\n [role=\"xpack\"]\n [testenv=\"basic\"]\n [[set-up-lifecycle-policy]]\n-== Create lifecycle policy\n+== Configure lifecycle policy [[ilm-policy-definition]]\n \n-In order for an index to use an {ilm} policy to manage its lifecycle we must\n-first define a lifecycle policy for it to use. The following request creates a\n-policy called `my_policy` in Elasticsearch which we can later use to manage our\n-indexes.\n+For {ilm-init} to manage an index, a valid policy \n+must be specified in the `index.lifecycle.name` index setting. \n+\n+To configure a lifecycle policy for rolling indices, \n+you create the policy and add it to the index template.\n+\n+To use a policy to manage an index that doesn't roll over,\n+you can specify the policy directly when you create it.\n+\n+[float]\n+[[ilm-create-policy]]\n+=== Create lifecycle policy\n+\n+You use the Create policy API to define a new lifecycle policy. \n+For example, the following request creates `my_policy`, a simple", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDY1MjI5", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394065229", "createdAt": "2020-04-15T19:19:26Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxOToyNlrOGGIGfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxOToyNlrOGGIGfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NzM3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            When the index gets to 25GB, it rolls over directly to the delete phase.\n          \n          \n            \n            When the index reaches 25GB, it rolls over directly to the delete phase.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409077373", "createdAt": "2020-04-15T19:19:26Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "diffHunk": "@@ -1,12 +1,26 @@\n [role=\"xpack\"]\n [testenv=\"basic\"]\n [[set-up-lifecycle-policy]]\n-== Create lifecycle policy\n+== Configure lifecycle policy [[ilm-policy-definition]]\n \n-In order for an index to use an {ilm} policy to manage its lifecycle we must\n-first define a lifecycle policy for it to use. The following request creates a\n-policy called `my_policy` in Elasticsearch which we can later use to manage our\n-indexes.\n+For {ilm-init} to manage an index, a valid policy \n+must be specified in the `index.lifecycle.name` index setting. \n+\n+To configure a lifecycle policy for rolling indices, \n+you create the policy and add it to the index template.\n+\n+To use a policy to manage an index that doesn't roll over,\n+you can specify the policy directly when you create it.\n+\n+[float]\n+[[ilm-create-policy]]\n+=== Create lifecycle policy\n+\n+You use the Create policy API to define a new lifecycle policy. \n+For example, the following request creates `my_policy`, a simple\n+policy that defines a hot and and delete phase.\n+When the index gets to 25GB, it rolls over directly to the delete phase.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDY2NTQw", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394066540", "createdAt": "2020-04-15T19:21:22Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToyMToyMlrOGGIKeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToyMToyMlrOGGIKeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3ODM5Mg==", "bodyText": "setting include_global_state parameter to true.\n\nIt's not clear which API this parameter belongs to. I'd mention and link to them here.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409078392", "createdAt": "2020-04-15T19:21:22Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "diffHunk": "@@ -32,28 +46,24 @@ PUT _ilm/policy/my_policy\n }\n ------------------------\n \n-<1> Rollover the index when it reaches 25GB in size\n-<2> Delete the index when its 30 days old\n-\n-{ilm} will manage an index using the policy defined in the\n-`index.lifecycle.name` index setting. If this setting does not exist in the\n-settings for a particular index, {ilm} will not manage that index.\n+<1> Roll over the index when it reaches 25GB in size\n+<2> Delete the index 30 days after rollover\n \n-To set the policy for an index there are two options:\n+NOTE: {ilm-init} policies are stored in the global cluster state and can be included in snapshots by  \n+setting `include_global_state` parameter to `true`. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDY3MjM1", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394067235", "createdAt": "2020-04-15T19:22:28Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToyMjoyOFrOGGIMsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToyMjoyOFrOGGIMsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3ODk2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This causes {ilm} to immediately start managing the index.\n          \n          \n            \n            This causes {ilm-init} to immediately start managing the index.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409078960", "createdAt": "2020-04-15T19:22:28Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "diffHunk": "@@ -100,14 +120,18 @@ PUT test-000001\n \n <1> Set this initial index to be the write index for this alias.\n \n-We can now write data to the `test-alias` alias. Because we have a rollover\n-action defined in our policy, when the index grows larger than 25GB {ilm} will\n-create a new index and roll the alias over to use the new index automatically.\n+Now you can start indexing data to the rollover alias specified in the lifecycle policy. \n+With the sample `my_policy` policy, the rollover action is triggered once the initial\n+index exceeds 25GB. \n+{ilm} then creates a new index that becomes the write index for the `test-alias`.\n \n-=== Apply a policy to a create index request\n+[float]\n+[[apply-policy-manually]]\n+=== Apply lifecycle policy manually\n \n-The `index.lifecycle.name` setting can be set on an individual create index\n-request so {ilm} immediately starts managing the index:\n+When you create an index directly, you can apply a lifecycle policy \n+by specifying the `index.lifecycle.name` setting.\n+This causes {ilm} to immediately start managing the index.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 137}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDY3Mzgy", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394067382", "createdAt": "2020-04-15T19:22:40Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToyMjo0MFrOGGINKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToyMjo0MFrOGGINKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3OTA4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {ilm} then creates a new index that becomes the write index for the `test-alias`.\n          \n          \n            \n            {ilm-init} then creates a new index that becomes the write index for the `test-alias`.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409079081", "createdAt": "2020-04-15T19:22:40Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/set-up-lifecycle-policy.asciidoc", "diffHunk": "@@ -100,14 +120,18 @@ PUT test-000001\n \n <1> Set this initial index to be the write index for this alias.\n \n-We can now write data to the `test-alias` alias. Because we have a rollover\n-action defined in our policy, when the index grows larger than 25GB {ilm} will\n-create a new index and roll the alias over to use the new index automatically.\n+Now you can start indexing data to the rollover alias specified in the lifecycle policy. \n+With the sample `my_policy` policy, the rollover action is triggered once the initial\n+index exceeds 25GB. \n+{ilm} then creates a new index that becomes the write index for the `test-alias`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 126}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDcyMTg4", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394072188", "createdAt": "2020-04-15T19:29:44Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToyOTo0NFrOGGIccA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToyOTo0NFrOGGIccA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4Mjk5Mg==", "bodyText": "I think it's a bit more readable to put the anchor and def\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [[ilm-allocate-action]]<<ilm-allocate,Allocate>>::\n          \n          \n            \n            [[ilm-allocate-action]]\n          \n          \n            \n            <<ilm-allocate,Allocate>>::", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409082992", "createdAt": "2020-04-15T19:29:44Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-actions.asciidoc", "diffHunk": "@@ -0,0 +1,57 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-actions]]\n+== Index lifecycle actions\n+\n+[[ilm-allocate-action]]<<ilm-allocate,Allocate>>::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDczMzUy", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394073352", "createdAt": "2020-04-15T19:31:27Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMToyN1rOGGIgEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMToyN1rOGGIgEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4MzkyMQ==", "bodyText": "I think this file is inert? We should remove it or include it somewhere.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409083921", "createdAt": "2020-04-15T19:31:27Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-phases.asciidoc", "diffHunk": "@@ -0,0 +1,105 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-phases]]\n+=== Index lifecycle phases", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDczNTgz", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394073583", "createdAt": "2020-04-15T19:31:48Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMTo0OFrOGGIg0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMTo0OFrOGGIg0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NDExNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ({ilm-init})  to manage indices that contain time-series data. \n          \n          \n            \n            ({ilm-init}) to manage indices that contain time-series data.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409084114", "createdAt": "2020-04-15T19:31:48Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -2,14 +2,14 @@\n [testenv=\"basic\"]\n \n [[getting-started-index-lifecycle-management]]\n-== Get started: Automate rollover with {ilm-init}\n+== Tutorial: Automate rollover with {ilm-init}\n \n ++++\n <titleabbrev>Automate rollover</titleabbrev>\n ++++\n \n-This tutorial demonstrates how to use {ilm} ({ilm-init})\n-to manage indices that contain time-series data.\n+This tutorial demonstrates how to use {ilm} \n+({ilm-init})  to manage indices that contain time-series data. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDc0MDk0", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394074094", "createdAt": "2020-04-15T19:32:35Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMjozNVrOGGIibQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMjozNVrOGGIibQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NDUyNQ==", "bodyText": "Suggested change", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409084525", "createdAt": "2020-04-15T19:32:35Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -2,14 +2,14 @@\n [testenv=\"basic\"]\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDc0NTIz", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394074523", "createdAt": "2020-04-15T19:33:13Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMzoxM1rOGGIjnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMzoxM1rOGGIjnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NDgyOQ==", "bodyText": "{fb} is rendering literally here. Not sure what it's supposed to refer to.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409084829", "createdAt": "2020-04-15T19:33:13Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -20,27 +20,42 @@ and still get the most out of your data.\n \n To automate rollover and management of time-series indices with {ilm-init}, you:\n \n-. <<ilm-gs-create-policy, Create a lifecycle policy>> with the {ilm-init} put policy API.\n+. <<ilm-gs-create-policy, Create a lifecycle policy>> that defines the appropriate\n+phases and actions.  \n . <<ilm-gs-apply-policy, Create an index template>> to apply the policy to each new index.\n . <<ilm-gs-bootstrap, Bootstrap an index>> as the initial write index.\n-. <<ilm-gs-check-progress, Verify indices are moving through the lifecycle phases>>\n-as expected with the {ilm-init} explain API.\n+. <<ilm-gs-check-progress, Verify indices are moving through the lifecycle phases>> \n+as expected.\n+\n+For an introduction to rolling indices, see <<index-rollover>>. \n+\n+NOTE: {fb} includes a default ILM policy that initiates the rollover action when", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDc0NjI5", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394074629", "createdAt": "2020-04-15T19:33:23Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMzoyM1rOGGIkFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMzoyM1rOGGIkFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NDk0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: {fb} includes a default ILM policy that initiates the rollover action when\n          \n          \n            \n            NOTE: {fb} includes a default {ilm-init} policy that initiates the rollover action when", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409084949", "createdAt": "2020-04-15T19:33:23Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -20,27 +20,42 @@ and still get the most out of your data.\n \n To automate rollover and management of time-series indices with {ilm-init}, you:\n \n-. <<ilm-gs-create-policy, Create a lifecycle policy>> with the {ilm-init} put policy API.\n+. <<ilm-gs-create-policy, Create a lifecycle policy>> that defines the appropriate\n+phases and actions.  \n . <<ilm-gs-apply-policy, Create an index template>> to apply the policy to each new index.\n . <<ilm-gs-bootstrap, Bootstrap an index>> as the initial write index.\n-. <<ilm-gs-check-progress, Verify indices are moving through the lifecycle phases>>\n-as expected with the {ilm-init} explain API.\n+. <<ilm-gs-check-progress, Verify indices are moving through the lifecycle phases>> \n+as expected.\n+\n+For an introduction to rolling indices, see <<index-rollover>>. \n+\n+NOTE: {fb} includes a default ILM policy that initiates the rollover action when", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDc0ODA1", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394074805", "createdAt": "2020-04-15T19:33:40Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMzo0MFrOGGIkwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMzo0MFrOGGIkwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NTEyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For more information, see \n          \n          \n            \n            {kib}/example-using-index-lifecycle-policy.html[Use ILM to manage Filebeat time-based indices].\n          \n          \n            \n            See \n          \n          \n            \n            {kib}/example-using-index-lifecycle-policy.html[Use {ilm-init} to manage Filebeat time-based indices].", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409085120", "createdAt": "2020-04-15T19:33:40Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -20,27 +20,42 @@ and still get the most out of your data.\n \n To automate rollover and management of time-series indices with {ilm-init}, you:\n \n-. <<ilm-gs-create-policy, Create a lifecycle policy>> with the {ilm-init} put policy API.\n+. <<ilm-gs-create-policy, Create a lifecycle policy>> that defines the appropriate\n+phases and actions.  \n . <<ilm-gs-apply-policy, Create an index template>> to apply the policy to each new index.\n . <<ilm-gs-bootstrap, Bootstrap an index>> as the initial write index.\n-. <<ilm-gs-check-progress, Verify indices are moving through the lifecycle phases>>\n-as expected with the {ilm-init} explain API.\n+. <<ilm-gs-check-progress, Verify indices are moving through the lifecycle phases>> \n+as expected.\n+\n+For an introduction to rolling indices, see <<index-rollover>>. \n+\n+NOTE: {fb} includes a default ILM policy that initiates the rollover action when\n+the index size reaches 50GB or becomes 30 days old. \n+You can use this policy as a starting point, or replace it with a custom policy.\n+For more information, see \n+{kib}/example-using-index-lifecycle-policy.html[Use ILM to manage Filebeat time-based indices].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDc1MTg1", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394075185", "createdAt": "2020-04-15T19:34:13Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozNDoxNFrOGGImJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozNDoxNFrOGGImJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NTQ3OA==", "bodyText": "{ilm-init} put policy API\nI'd add a link here.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409085478", "createdAt": "2020-04-15T19:34:14Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -20,27 +20,42 @@ and still get the most out of your data.\n \n To automate rollover and management of time-series indices with {ilm-init}, you:\n \n-. <<ilm-gs-create-policy, Create a lifecycle policy>> with the {ilm-init} put policy API.\n+. <<ilm-gs-create-policy, Create a lifecycle policy>> that defines the appropriate\n+phases and actions.  \n . <<ilm-gs-apply-policy, Create an index template>> to apply the policy to each new index.\n . <<ilm-gs-bootstrap, Bootstrap an index>> as the initial write index.\n-. <<ilm-gs-check-progress, Verify indices are moving through the lifecycle phases>>\n-as expected with the {ilm-init} explain API.\n+. <<ilm-gs-check-progress, Verify indices are moving through the lifecycle phases>> \n+as expected.\n+\n+For an introduction to rolling indices, see <<index-rollover>>. \n+\n+NOTE: {fb} includes a default ILM policy that initiates the rollover action when\n+the index size reaches 50GB or becomes 30 days old. \n+You can use this policy as a starting point, or replace it with a custom policy.\n+For more information, see \n+{kib}/example-using-index-lifecycle-policy.html[Use ILM to manage Filebeat time-based indices].\n+\n \n [float]\n [[ilm-gs-create-policy]]\n === Create a lifecycle policy\n \n A lifecycle policy specifies the phases in the index lifecycle\n and the actions to perform in each phase. A lifecycle can have up to four phases:\n-`hot`, `warm`, `cold`, and `delete`. Policies are defined in JSON\n-and added through the {ilm-init} put policy API.\n+`hot`, `warm`, `cold`, and `delete`. \n \n-For example, the following request creates a `timeseries_policy` with two phases:\n+You can define and manage policies through the {kib} Management UI, \n+which invokes the {ilm-init} put policy API to create policies", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDc1Mzc3", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394075377", "createdAt": "2020-04-15T19:34:30Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozNDozMVrOGGImog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozNDozMVrOGGImog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NTYwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To automatically apply a lifecycle policy to the new write index on rollover, \n          \n          \n            \n            To automatically apply a lifecycle policy to the new write index on rollover,", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409085602", "createdAt": "2020-04-15T19:34:31Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -71,24 +86,32 @@ PUT _ilm/policy/timeseries_policy\n <3> Move the index into the `delete` phase 90 days after rollover.\n <4> Trigger the `delete` action when the index enters the delete phase.\n \n-See <<_actions>> for the complete list of actions available in each phase.\n+You can also invoke this API directly to add lifecycle policies.\n+\n+For the complete list of actions that {ilm} can perform, see <<ilm-actions>>.\n \n [float]\n [[ilm-gs-apply-policy]]\n === Create an index template to apply the lifecycle policy\n \n-To automaticaly apply a lifecycle policy to the new write index on rollover,\n+To automatically apply a lifecycle policy to the new write index on rollover, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDc1NDU2", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394075456", "createdAt": "2020-04-15T19:34:37Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozNDozN1rOGGIm3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozNDozN1rOGGIm3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NTY2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            that match the index pattern.  \n          \n          \n            \n            that match the index pattern.", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409085660", "createdAt": "2020-04-15T19:34:37Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -71,24 +86,32 @@ PUT _ilm/policy/timeseries_policy\n <3> Move the index into the `delete` phase 90 days after rollover.\n <4> Trigger the `delete` action when the index enters the delete phase.\n \n-See <<_actions>> for the complete list of actions available in each phase.\n+You can also invoke this API directly to add lifecycle policies.\n+\n+For the complete list of actions that {ilm} can perform, see <<ilm-actions>>.\n \n [float]\n [[ilm-gs-apply-policy]]\n === Create an index template to apply the lifecycle policy\n \n-To automaticaly apply a lifecycle policy to the new write index on rollover,\n+To automatically apply a lifecycle policy to the new write index on rollover, \n specify the policy in the index template used to create new indices.\n \n-For example, the following request creates a `timeseries_template` that is applied to new indices\n-whose names match the `timeseries-*` index pattern.\n-The template configures two {ilm-init} settings:\n+For example, you might create a `timeseries_template` that is applied to new indices\n+whose names match the `timeseries-*` index pattern. \n+\n+To enable automatic rollover, the template configures two {ilm-init} settings:\n \n-* `index.lifecycle.name` specifies the name of the lifecycle policy to apply to all new indices that match\n-the index pattern.\n-* `index.lifecycle.rollover_alias` specifies the index alias to be rolled over\n+* `index.lifecycle.name` specifies the name of the lifecycle policy to apply to new indices\n+that match the index pattern.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDc1NTI1", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394075525", "createdAt": "2020-04-15T19:34:45Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozNDo0NVrOGGInGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozNDo0NVrOGGInGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NTcyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `index.lifecycle.rollover_alias` specifies the index alias to be rolled over \n          \n          \n            \n            * `index.lifecycle.rollover_alias` specifies the index alias to be rolled over", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409085720", "createdAt": "2020-04-15T19:34:45Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -71,24 +86,32 @@ PUT _ilm/policy/timeseries_policy\n <3> Move the index into the `delete` phase 90 days after rollover.\n <4> Trigger the `delete` action when the index enters the delete phase.\n \n-See <<_actions>> for the complete list of actions available in each phase.\n+You can also invoke this API directly to add lifecycle policies.\n+\n+For the complete list of actions that {ilm} can perform, see <<ilm-actions>>.\n \n [float]\n [[ilm-gs-apply-policy]]\n === Create an index template to apply the lifecycle policy\n \n-To automaticaly apply a lifecycle policy to the new write index on rollover,\n+To automatically apply a lifecycle policy to the new write index on rollover, \n specify the policy in the index template used to create new indices.\n \n-For example, the following request creates a `timeseries_template` that is applied to new indices\n-whose names match the `timeseries-*` index pattern.\n-The template configures two {ilm-init} settings:\n+For example, you might create a `timeseries_template` that is applied to new indices\n+whose names match the `timeseries-*` index pattern. \n+\n+To enable automatic rollover, the template configures two {ilm-init} settings:\n \n-* `index.lifecycle.name` specifies the name of the lifecycle policy to apply to all new indices that match\n-the index pattern.\n-* `index.lifecycle.rollover_alias` specifies the index alias to be rolled over\n+* `index.lifecycle.name` specifies the name of the lifecycle policy to apply to new indices\n+that match the index pattern.  \n+* `index.lifecycle.rollover_alias` specifies the index alias to be rolled over ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDc1Nzgy", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394075782", "createdAt": "2020-04-15T19:35:08Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozNTowOFrOGGIn7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozNTowOFrOGGIn7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NTkzMg==", "bodyText": "Curious: what's the purpose of this anchor?", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r409085932", "createdAt": "2020-04-15T19:35:08Z", "author": {"login": "jrodewig"}, "path": "docs/reference/ilm/ilm-tutorial.asciidoc", "diffHunk": "@@ -179,7 +203,7 @@ The response below shows that the bootstrap index is waiting in the `hot` phase'\n It remains in this state and {ilm-init} continues to call `attempt-rollover`\n until the rollover conditions are met.\n \n-[[36818c6d9f434d387819c30bd9addb14]]\n+// [[36818c6d9f434d387819c30bd9addb14]]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "originalPosition": 139}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDc3NzY5", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-394077769", "createdAt": "2020-04-15T19:38:17Z", "commit": {"oid": "3cc049a80b13139762e4fb4cba6abe949d0b2253"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDk2ODg4", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-395496888", "createdAt": "2020-04-17T14:20:40Z", "commit": {"oid": "fc9c9d365c4a45b61a7685811037610340f13710"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDoyMDo0MFrOGHQANA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNTowMTo1NlrOGHRoHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1NTQxMg==", "bodyText": "Would it help to specify this number in text too? (I found myself counting zeros as opposed to focusing on the message we're trying to convey here)", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r410255412", "createdAt": "2020-04-17T14:20:40Z", "author": {"login": "andreidan"}, "path": "docs/reference/ilm/actions/ilm-rollover.asciidoc", "diffHunk": "@@ -0,0 +1,189 @@\n+[[ilm-rollover]]\n+=== Rollover\n+\n+Phases allowed: hot.\n+\n+Rolls an alias over to a new index when the existing index meets one of the rollover conditions.\n+\n+For a managed index to be rolled over: \n+\n+* The index name must match the pattern '^.*-\\\\d+$', for example (`my_index-000001`).\n+* `index.lifecycle.rollover_alias` must be configured as the alias to roll over. \n+* The index must be the <<<<indices-rollover-is-write-index, write index>> for the alias.\n+\n+For example, if `my_index-000001` has the alias `my_data`, \n+the following settings must be configured. \n+\n+[source,console]\n+--------------------------------------------------\n+PUT my_index-000001\n+{\n+  \"settings\": {\n+    \"index.lifecycle.name\": \"my_policy\",\n+    \"index.lifecycle.rollover_alias\": \"my_data\"\n+  },\n+  \"aliases\": {\n+    \"my_data\": {\n+      \"is_write_index\": true\n+    }\n+  }\n+}\n+--------------------------------------------------\n+\n+[IMPORTANT]\n+If the rollover action is used on a <<ccr-put-follow,follower index>>, \n+policy execution waits until the leader index rolls over (or is\n+<<skipping-rollover, otherwise marked complete>>), \n+then converts the follower index into a regular index with the \n+<<ilm-unfollow-action,the Unfollow action>>.\n+\n+[[ilm-rollover-options]]\n+==== Rollover options\n+\n+You must specify at least one rollover option. \n+An empty rollover action is invalid.\n+\n+`max_size`::\n+(Optional, <<byte-units, byte units>>)\n+Triggers roll over after the specified maximum primary shard index storage size is reached.  \n+\n+`max_docs`::\n+(Optional, integer)\n+Triggers roll over after the specified maximum number of documents in the index is reached.\n+\n+`max_age`::\n+(Optional,  <<time-units, time units>>)  \n+Triggers roll over after the maximum elapsed time from index creation is reached. \n+\n+[[ilm-rollover-examples]]\n+==== Examples\n+\n+[[ilm-rollover-size]]\n+===== Roll over based on index size\n+\n+This example rolls the index over when it is at least 100 gigabytes.\n+\n+[source,console]\n+--------------------------------------------------\n+PUT _ilm/policy/my_policy\n+{\n+  \"policy\": {\n+    \"phases\": {\n+      \"hot\": {\n+        \"actions\": {\n+          \"rollover\" : {\n+            \"max_size\": \"100GB\"\n+          }\n+        }\n+      }\n+    }\n+  }\n+}\n+--------------------------------------------------\n+\n+[ilm-rollover-documents]]\n+===== Roll over based on document count\n+\n+This example rolls the index over when it contains at least\n+100000000 documents.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9c9d365c4a45b61a7685811037610340f13710"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI2MTc5MQ==", "bodyText": "should we link to \"delete action\" here too?", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r410261791", "createdAt": "2020-04-17T14:30:27Z", "author": {"login": "andreidan"}, "path": "docs/reference/ilm/actions/ilm-searchable-snapshot.asciidoc", "diffHunk": "@@ -0,0 +1,38 @@\n+[[ilm-searchable-snapshot]]\n+=== Searchable snapshot\n+\n+Phases allowed: cold.\n+\n+This action takes a snapshot of the managed index in the configured repository\n+and mounts it as a searchable snapshot.\n+\n+By default, this snapshot is deleted by the <<ilm-delete-action, delete action>> in the delete phase.\n+To keep the snapshot, set `delete_searchable_snapshot` to `false` in the delete action.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9c9d365c4a45b61a7685811037610340f13710"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI2NDUwOA==", "bodyText": "As 2 indices are involved in this operation I'd mention here \"the existing index\" or \"the source index\"", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r410264508", "createdAt": "2020-04-17T14:34:33Z", "author": {"login": "andreidan"}, "path": "docs/reference/ilm/actions/ilm-shrink.asciidoc", "diffHunk": "@@ -0,0 +1,49 @@\n+[[ilm-shrink]]\n+==== Shrink\n+\n+Phases allowed: warm\n+\n+Shrinks an existing index into a new index with fewer primary shards. \n+This action sets the index to <<dynamic-index-settings, read-only>>. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9c9d365c4a45b61a7685811037610340f13710"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI2OTE1Ng==", "bodyText": "this is also performed automatically before the searchable snapshot action. we can also mention it in a follow up PR as it wasn't here before (and this PR is getting quite big :) )", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r410269156", "createdAt": "2020-04-17T14:41:42Z", "author": {"login": "andreidan"}, "path": "docs/reference/ilm/ilm-actions.asciidoc", "diffHunk": "@@ -0,0 +1,57 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-actions]]\n+== Index lifecycle actions\n+\n+[[ilm-allocate-action]]\n+<<ilm-allocate,Allocate>>::\n+Move shards to nodes with different performance characteristics\n+and reduce the number of replicas. \n+\n+[[ilm-delete-action]]<<ilm-delete,Delete>>::\n+Permanently remove the index.\n+\n+[[ilm-forcemerge-action]]<<ilm-forcemerge,Force Merge>>::\n+Reduce the number of index segments and purge deleted documents.\n+Makes the index read-only.\n+\n+[[ilm-freeze-action]]<<ilm-freeze,Freeze>>::\n+Freeze the index to minimize its memory footprint.\n+\n+[[ilm-readonly-action]]<<ilm-readonly,Read-Only>>::\n+Block write operations to the index. \n+  \n+[[ilm-rollover-action]]<<ilm-rollover,Rollover>>::\n+Remove the index as the write index for the rollover alias and \n+start indexing to a new index.\n+\n+[[ilm-searchable-snapshot-action]]<<ilm-searchable-snapshot, Searchable Snapshot>>::\n+Take a snapshot of the managed index in the configured repository\n+and mount it as a searchable snapshot.\n+\n+[[ilm-set-priority-action]]<<ilm-set-priority,Set Priority>>::\n+Lower the priority of an index as it moves through the lifecycle\n+to ensure that hot indices are recovered first. \n+\n+[[ilm-shrink-action]]<<ilm-shrink,Shrink>>::\n+Reduce the number of primary shards by shrinking the index into a new index.\n+\n+[[ilm-unfollow-action]]<<ilm-unfollow,Unfollow>>::\n+Convert a follower index to a regular index.\n+Performed automatically before a rollover or shrink action. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9c9d365c4a45b61a7685811037610340f13710"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3NjgwNQ==", "bodyText": "would \"{ilm-init} defines the following index lifecycle phases\" sound a bit better? (I think splits might be a bit misleading as it implies it enforces it somehow - this might be a personal nit so feel free to ignore if you think otherwise)", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r410276805", "createdAt": "2020-04-17T14:53:55Z", "author": {"login": "andreidan"}, "path": "docs/reference/ilm/ilm-index-lifecycle.asciidoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-index-lifecycle]]\n+=== Index lifecycle\n+++++\n+<titleabbrev>Index lifecycle</titleabbrev>\n+++++\n+\n+{ilm-init} splits the index lifecycle into four _phases_: ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9c9d365c4a45b61a7685811037610340f13710"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3ODU5Nw==", "bodyText": "I think it's not very clear who \"the index template\" is here.\nWould this suggestion be better?\n\"associate the policy with the index template\" -> \"associate the policy with an index template that matches the new index\"", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r410278597", "createdAt": "2020-04-17T14:56:37Z", "author": {"login": "andreidan"}, "path": "docs/reference/ilm/ilm-index-lifecycle.asciidoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-index-lifecycle]]\n+=== Index lifecycle\n+++++\n+<titleabbrev>Index lifecycle</titleabbrev>\n+++++\n+\n+{ilm-init} splits the index lifecycle into four _phases_: \n+\n+* Hot--the index is actively being updated and queried.\n+* Warm--the index is no longer being updated but is still being queried.\n+* Cold--the index is no longer being updated and is seldom queried. The\n+information still needs to be searchable, but it's okay if those queries are\n+slower.\n+* Delete--the index is no longer needed and can safely be removed.\n+\n+An index's _lifecycle policy_ specifies which phases \n+are applicable, what actions are performed in each phase,\n+and when it transitions between phases. \n+\n+To automatically apply a lifecycle policy to new time-series indices when they roll over, \n+associate the policy with the index template. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9c9d365c4a45b61a7685811037610340f13710"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3OTg4NA==", "bodyText": "This shouldn't only refer to indices that don't roll over.\nMaybe \"You can also apply a policy manually when you create an index.\" better describes this option?", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r410279884", "createdAt": "2020-04-17T14:58:33Z", "author": {"login": "andreidan"}, "path": "docs/reference/ilm/ilm-index-lifecycle.asciidoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-index-lifecycle]]\n+=== Index lifecycle\n+++++\n+<titleabbrev>Index lifecycle</titleabbrev>\n+++++\n+\n+{ilm-init} splits the index lifecycle into four _phases_: \n+\n+* Hot--the index is actively being updated and queried.\n+* Warm--the index is no longer being updated but is still being queried.\n+* Cold--the index is no longer being updated and is seldom queried. The\n+information still needs to be searchable, but it's okay if those queries are\n+slower.\n+* Delete--the index is no longer needed and can safely be removed.\n+\n+An index's _lifecycle policy_ specifies which phases \n+are applicable, what actions are performed in each phase,\n+and when it transitions between phases. \n+\n+To automatically apply a lifecycle policy to new time-series indices when they roll over, \n+associate the policy with the index template. \n+To manage indices that don't roll over, you can manually apply a lifecycle", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9c9d365c4a45b61a7685811037610340f13710"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI4MjAxNA==", "bodyText": "\"than the minimum age\" -> \"than the minimum age of the next phase\"", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r410282014", "createdAt": "2020-04-17T15:01:56Z", "author": {"login": "andreidan"}, "path": "docs/reference/ilm/ilm-index-lifecycle.asciidoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+[[ilm-index-lifecycle]]\n+=== Index lifecycle\n+++++\n+<titleabbrev>Index lifecycle</titleabbrev>\n+++++\n+\n+{ilm-init} splits the index lifecycle into four _phases_: \n+\n+* Hot--the index is actively being updated and queried.\n+* Warm--the index is no longer being updated but is still being queried.\n+* Cold--the index is no longer being updated and is seldom queried. The\n+information still needs to be searchable, but it's okay if those queries are\n+slower.\n+* Delete--the index is no longer needed and can safely be removed.\n+\n+An index's _lifecycle policy_ specifies which phases \n+are applicable, what actions are performed in each phase,\n+and when it transitions between phases. \n+\n+To automatically apply a lifecycle policy to new time-series indices when they roll over, \n+associate the policy with the index template. \n+To manage indices that don't roll over, you can manually apply a lifecycle\n+policy when creating the index.\n+\n+[discrete]\n+[[ilm-phase-transitions]]\n+=== Phase transitions\n+\n+{ilm-init} moves indices through the lifecycle according to their age. \n+To control the timing of these transitions, you set a _minimum age_ for each phase. \n+For an index to move to the next phase, all actions in the current phase must be complete and \n+the index must be older than the minimum age. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9c9d365c4a45b61a7685811037610340f13710"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81571b8d5d3712391f95ed05555b805f7e673241", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/81571b8d5d3712391f95ed05555b805f7e673241", "committedDate": "2020-04-20T23:39:34Z", "message": "Incorporated feedback"}, "afterCommit": {"oid": "6b4c46d977f93259e183332d133c548ed940128f", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/6b4c46d977f93259e183332d133c548ed940128f", "committedDate": "2020-04-20T23:46:26Z", "message": "Incorporated feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fca6a08154db03d0179f1a1c3c2a6b5fb74d6bc", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/7fca6a08154db03d0179f1a1c3c2a6b5fb74d6bc", "committedDate": "2020-04-21T23:17:37Z", "message": "[DOCS] Rework conceptual info for ILM."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24298093b7e9d5a712e46075221e2ee634d79172", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/24298093b7e9d5a712e46075221e2ee634d79172", "committedDate": "2020-04-21T23:17:37Z", "message": "Split the actions out of concepts."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac15c93e1e6f28c2731efbc1a064f521dadbc4a0", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/ac15c93e1e6f28c2731efbc1a064f521dadbc4a0", "committedDate": "2020-04-21T23:17:37Z", "message": "Removed example from concepts."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4163857188d978b4c9e7747d309fff052ab5372", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/a4163857188d978b4c9e7747d309fff052ab5372", "committedDate": "2020-04-21T23:20:15Z", "message": "Concepts redux"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a1c36130ba6093ee9e40989597542ea3437f754", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/6a1c36130ba6093ee9e40989597542ea3437f754", "committedDate": "2020-04-21T23:20:15Z", "message": "Update docs/reference/ilm/ilm-index-lifecycle.asciidoc\n\nCo-Authored-By: James Rodewig <james.rodewig@elastic.co>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50c6d395c1e1d1d01b213f0d8f6e404abf83cdb2", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/50c6d395c1e1d1d01b213f0d8f6e404abf83cdb2", "committedDate": "2020-04-21T23:20:15Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: James Rodewig <james.rodewig@elastic.co>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "537938ef941963f96f95d9bc74bec5932646560c", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/537938ef941963f96f95d9bc74bec5932646560c", "committedDate": "2020-04-21T23:20:16Z", "message": "Incorporate review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2099c7e4aaa1ecf31c7d3eab06b9eb50afc642c", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/c2099c7e4aaa1ecf31c7d3eab06b9eb50afc642c", "committedDate": "2020-04-21T23:20:16Z", "message": "Remove obsolete file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee599317e39ffeaa30e766d3351ed3cf7584f3cb", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/ee599317e39ffeaa30e766d3351ed3cf7584f3cb", "committedDate": "2020-04-21T23:20:16Z", "message": "Incorporated feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b597ef93b09cd66b8ced3200808e9bb85f3d5e4", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/4b597ef93b09cd66b8ced3200808e9bb85f3d5e4", "committedDate": "2020-04-21T23:20:16Z", "message": "Fixed Shrink heading level"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d258b7392cdd026076ee5152367f11ce61dfba6f", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/d258b7392cdd026076ee5152367f11ce61dfba6f", "committedDate": "2020-04-21T23:20:16Z", "message": "Added xpack role to actions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7185a02966b96557cb50728aa6d1a3e61d1c634", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/e7185a02966b96557cb50728aa6d1a3e61d1c634", "committedDate": "2020-04-21T23:20:16Z", "message": "Fixed line wrapping."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "deefc195ed625c47d2fe45508d46878a16b1c40a", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/deefc195ed625c47d2fe45508d46878a16b1c40a", "committedDate": "2020-04-21T18:43:39Z", "message": "Added xpack role to actions."}, "afterCommit": {"oid": "e7185a02966b96557cb50728aa6d1a3e61d1c634", "author": {"user": {"login": "debadair", "name": null}}, "url": "https://github.com/elastic/elasticsearch/commit/e7185a02966b96557cb50728aa6d1a3e61d1c634", "committedDate": "2020-04-21T23:20:16Z", "message": "Fixed line wrapping."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NzgxMzAx", "url": "https://github.com/elastic/elasticsearch/pull/52181#pullrequestreview-399781301", "createdAt": "2020-04-24T09:21:13Z", "commit": {"oid": "e7185a02966b96557cb50728aa6d1a3e61d1c634"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToyMToxNFrOGLOpVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToyMToxNFrOGLOpVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyNzQ3OA==", "bodyText": "@debadair I think this got lost in the merge. I think we should re-add it to ilm-forcemerge.asciidoc", "url": "https://github.com/elastic/elasticsearch/pull/52181#discussion_r414427478", "createdAt": "2020-04-24T09:21:14Z", "author": {"login": "andreidan"}, "path": "docs/reference/ilm/policy-definitions.asciidoc", "diffHunk": "@@ -1,843 +0,0 @@\n-[role=\"xpack\"]\n-[testenv=\"basic\"]\n-[[ilm-policy-definition]]\n-== Policy phases and actions\n-\n-There are four stages in the index lifecycle, in the order\n-they are executed.\n-\n-[options=\"header\"]\n-|======\n-| Name     | Description\n-| `hot`    | The index is actively being written to\n-| `warm`   | The index is generally not being written to, but is still queried\n-| `cold`   | The index is no longer being updated and is seldom queried. The\n-information still needs to be searchable, but it's okay if those queries are\n-slower.\n-| `delete` | The index is no longer needed and can safely be deleted\n-|======\n-\n-Each of these stages is called a \"phase\". A policy does not need to configure\n-each phase for an index. For example, one policy may define only the hot\n-phase and the delete phase, while another may define all four phases.\n-\n-=== Timing\n-\n-Indices enter phases based on a phase's `min_age` parameter.\n-The index will not enter the phase until the index's age is older than that\n-of the `min_age`. The parameter is configured using a time\n-duration format (see <<time-units, Time Units>>).\n-\n-`min_age` defaults to zero seconds `0s` for each phase if not specified.\n-\n-[source,console]\n---------------------------------------------------\n-PUT _ilm/policy/my_policy\n-{\n-  \"policy\": {\n-    \"phases\": {\n-      \"warm\": {\n-        \"min_age\": \"1d\",\n-        \"actions\": {\n-          \"allocate\": {\n-            \"number_of_replicas\": 1\n-          }\n-        }\n-      },\n-      \"delete\": {\n-        \"min_age\": \"30d\",\n-        \"actions\": {\n-          \"delete\": {}\n-        }\n-      }\n-    }\n-  }\n-}\n---------------------------------------------------\n-\n-The above example configures a policy that moves the index into the warm\n-phase after one day. Until then, the index is in a waiting state. After\n-moving into the warm phase, it will wait until 30 days have elapsed before\n-moving to the delete phase and deleting the index.\n-\n-`min_age` is usually the time elapsed from the time the index is created, unless\n-the `index.lifecycle.origination_date` index setting is configured, in which\n-case the `min_age` will be the time elapsed since that specified date. If the\n-index is rolled over, then `min_age` is the time elapsed from the time the\n-index is rolled over. The intention here is to execute following phases and\n-actions relative to when data was written last to a rolled over index.\n-\n-The previous phase's actions must complete before {ilm} will check `min_age` and\n-transition into the next phase. By default, {ilm} checks for indices that meet\n-policy criteria, like `min_age`, every 10 minutes. You can use the\n-`indices.lifecycle.poll_interval` cluster setting to control how often this\n-check occurs.\n-\n-=== Phase Execution\n-\n-The current phase definition, of an index's policy being executed, is stored\n-in the index's metadata. This phase definition is cached to prevent changes to\n-the policy from putting the index in a state where it cannot proceed from its\n-current step. When the policy is updated we check to see if this phase\n-definition can be safely updated, and if so, update the cached definition in\n-indices using the updated policy. The phase and its actions are compiled into a\n-series of discrete steps that are executed sequentially. Since some {ilm-init}\n-actions are more complex and involve multiple operations against an index, each\n-of these operations are done in isolation in a unit called a \"step\". The\n-<<ilm-explain-lifecycle,Explain Lifecycle API>> exposes this information to us\n-to see which step our index is either to execute next, or is currently\n-executing.\n-\n-=== Actions\n-\n-The below list shows the actions which are available in each phase.\n-\n-NOTE: The order that configured actions are performed in within each phase is\n-determined automatically by {ilm-init}, and cannot be changed by changing the\n-policy definition.\n-\n-* Hot\n-  - <<ilm-set-priority-action,Set Priority>>\n-  - <<ilm-unfollow-action,Unfollow>>\n-  - <<ilm-rollover-action,Rollover>>\n-* Warm\n-  - <<ilm-set-priority-action,Set Priority>>\n-  - <<ilm-unfollow-action,Unfollow>>\n-  - <<ilm-readonly-action,Read-Only>>\n-  - <<ilm-allocate-action,Allocate>>\n-  - <<ilm-shrink-action,Shrink>>\n-  - <<ilm-forcemerge-action,Force Merge>>\n-* Cold\n-  - <<ilm-set-priority-action,Set Priority>>\n-  - <<ilm-unfollow-action,Unfollow>>\n-  - <<ilm-allocate-action,Allocate>>\n-  - <<ilm-freeze-action,Freeze>>\n-  - <<ilm-searchable-snapshot-action, Searchable Snapshot>>\n-* Delete\n-  - <<ilm-wait-for-snapshot-action,Wait For Snapshot>>\n-  - <<ilm-delete-action,Delete>>\n-\n-[[ilm-allocate-action]]\n-==== Allocate\n-\n-Phases allowed: warm, cold.\n-\n-The Allocate action allows you to specify which nodes are allowed to host the\n-shards of the index and set the number of replicas.\n-Behind the scenes, it is modifying the index settings\n-for shard filtering and/or replica counts. When updating the number of replicas,\n-configuring allocation rules is optional. When configuring allocation rules,\n-setting number of replicas is optional. Although this action can be treated as\n-two separate index settings updates, both can be configured at once.\n-\n-For more information about how {es} uses replicas for scaling, see\n-<<scalability>>. See <<shard-allocation-filtering>> for more information about\n-controlling where Elasticsearch allocates shards of a particular index.\n-\n---\n-NOTE: As allocate action is not allowed in `hot` phase, the initial allocation for the index should be done manually or via index templates, as ILM won't take care of index allocation during `hot` phase.\n-\n---\n-\n-[[ilm-allocate-options]]\n-.Allocate Options\n-[options=\"header\"]\n-|======\n-| Name                 | Required  | Default     | Description\n-| `number_of_replicas` | no        | -           | The number of replicas to\n-                                                   assign to the index\n-| `include`            | no        | -           | assigns an index to nodes\n-                                                   having at least _one_ of the attributes\n-| `exclude`            | no        | -           | assigns an index to nodes having\n-                                                   _none_ of the attributes\n-| `require`            | no        | -           | assigns an index to nodes having\n-                                                   _all_ of the attributes\n-|======\n-\n-If `number_of_replicas` is not configured, then at least one of `include`,\n-`exclude`, and `require` is required. An empty Allocate Action with no configuration\n-is invalid.\n-\n-===== Example: Change number of replicas\n-\n-In this example, the index's number of replicas is changed to `2`, while allocation\n-rules are unchanged.\n-\n-[source,console]\n---------------------------------------------------\n-PUT _ilm/policy/my_policy\n-{\n-  \"policy\": {\n-    \"phases\": {\n-      \"warm\": {\n-        \"actions\": {\n-          \"allocate\" : {\n-            \"number_of_replicas\" : 2\n-          }\n-        }\n-      }\n-    }\n-  }\n-}\n---------------------------------------------------\n-\n-===== Example: Assign index to node with specific \"box_type\" attribute\n-\n-This example assigns the index to nodes with `box_type` attribute of \"hot\" or \"warm\".\n-\n-[source,console]\n---------------------------------------------------\n-PUT _ilm/policy/my_policy\n-{\n-  \"policy\": {\n-    \"phases\": {\n-      \"warm\": {\n-        \"actions\": {\n-          \"allocate\" : {\n-            \"include\" : {\n-              \"box_type\": \"hot,warm\"\n-            }\n-          }\n-        }\n-      }\n-    }\n-  }\n-}\n---------------------------------------------------\n-\n-This depends on `hot` and `warm` attributes specified in the node configurations. For example, to designate a node as a _hot_ node, set `node.attr.data: hot` in `elasticsearch.yml`. For more information, see <<index-allocation-filters>>.\n-\n-===== Example: Assign index to a specific node and update replica settings\n-\n-This example updates the index to have one replica per shard and be allocated\n-to nodes with a `box_type` attribute of \"cold\".\n-\n-[source,console]\n---------------------------------------------------\n-PUT _ilm/policy/my_policy\n-{\n-  \"policy\": {\n-    \"phases\": {\n-      \"warm\": {\n-        \"actions\": {\n-          \"allocate\" : {\n-            \"number_of_replicas\": 1,\n-            \"require\" : {\n-              \"box_type\": \"cold\"\n-            }\n-        }\n-        }\n-      }\n-    }\n-  }\n-}\n---------------------------------------------------\n-\n-[[ilm-wait-for-snapshot-action]]\n-==== Wait For Snapshot\n-\n-Phases allowed: delete.\n-\n-The Wait For Snapshot Action waits for defined SLM policy to be executed to ensure that snapshot of index exists before\n-deletion.\n-\n-[[ilm-wait-for-snapshot-options]]\n-.Wait For Snapshot\n-[options=\"header\"]\n-|======\n-| Name                 | Required  | Default             | Description\n-| `policy`             | yes       | -                   | SLM policy name that this action should wait for\n-|======\n-\n-[source,console]\n---------------------------------------------------\n-PUT _ilm/policy/my_policy\n-{\n-  \"policy\": {\n-    \"phases\": {\n-      \"delete\": {\n-        \"actions\": {\n-          \"wait_for_snapshot\" : {\n-            \"policy\": \"slm-policy-name\"\n-          }\n-        }\n-      }\n-    }\n-  }\n-}\n---------------------------------------------------\n-\n-[[ilm-delete-action]]\n-==== Delete\n-\n-Phases allowed: delete.\n-\n-The Delete Action does just that, it deletes the index.\n-\n-[[ilm-delete-action-options]]\n-.Delete\n-[options=\"header\"]\n-|======\n-| Name                         | Required  | Default             | Description\n-| `delete_searchable_snapshot` | no        | true                | Deletes the searchable snapshot created in the cold phase, if a\n-                                                                   snapshot was created (ie. if the <<ilm-searchable-snapshot-action,\n-                                                                   Searchable Snapshot Action>> was used in the cold phase)\n-|======\n-\n-[source,console]\n---------------------------------------------------\n-PUT _ilm/policy/my_policy\n-{\n-  \"policy\": {\n-    \"phases\": {\n-      \"delete\": {\n-        \"actions\": {\n-          \"delete\" : { }\n-        }\n-      }\n-    }\n-  }\n-}\n---------------------------------------------------\n-\n-[[ilm-forcemerge-action]]\n-==== Force Merge\n-\n-Phases allowed: hot, warm.\n-\n-NOTE: Index will be be made read-only when this action is run\n-(see: <<dynamic-index-settings,index.blocks.write>>)\n-\n-NOTE: The `forcemerge` action is best effort. It might happen that some of the\n-shards are relocating, in which case they will not be merged.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7185a02966b96557cb50728aa6d1a3e61d1c634"}, "originalPosition": 312}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2528, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}