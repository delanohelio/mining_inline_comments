{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjUzNzIw", "number": 52199, "title": "SearchableSnapshotIndexInput should read all bytes", "bodyText": "This pull request fixes a bug in SearchableSnapshotIndexInput which does not use the InputStream.read(byte[], int, int) method correctly.\nThe javadoc indicates that:\n\nAn attempt is made to read as many as len bytes, but a smaller number may be read.\n\nConsequently, SearchableSnapshotIndexInput should try to read more bytes when a first reading operation has not brought back all the requested bytes.", "createdAt": "2020-02-11T13:18:34Z", "url": "https://github.com/elastic/elasticsearch/pull/52199", "merged": true, "mergeCommit": {"oid": "957a7ae681a7996624af5b9eb58bf07733909369"}, "closed": true, "closedAt": "2020-02-12T12:55:20Z", "author": {"login": "tlrx"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDRhSaAH2gAyMzczNjUzNzIwOjI4NjA2M2EzZjg4ZjEwMmZkMTYzMDEyOTcxYmJhOTc4MmJjYmFiMGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDkwACAH2gAyMzczNjUzNzIwOjc1Y2FkOGY1ZGE2MGY4NDkxY2ZjYzZlOWFlNWJmMDAxODJhNGExNWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "286063a3f88f102fd163012971bba9782bcbab0f", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/286063a3f88f102fd163012971bba9782bcbab0f", "committedDate": "2020-02-11T13:12:36Z", "message": "SearchableSnapshotIndexInput should read all bytes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b50c0817222bbf111c8682ebf7ec354d26582f2", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/7b50c0817222bbf111c8682ebf7ec354d26582f2", "committedDate": "2020-02-11T13:20:36Z", "message": "Revert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4de4f81846150a0f1edf6174b55823aaac5f6f0a", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/4de4f81846150a0f1edf6174b55823aaac5f6f0a", "committedDate": "2020-02-11T13:37:05Z", "message": "test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NjYyOTI2", "url": "https://github.com/elastic/elasticsearch/pull/52199#pullrequestreview-356662926", "createdAt": "2020-02-11T13:41:23Z", "commit": {"oid": "7b50c0817222bbf111c8682ebf7ec354d26582f2"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzo0MToyM1rOFoJUKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzo0MTo1NFrOFoJVKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYzOTk3OQ==", "bodyText": "This means we hit the end of the file, which I think is unexpected. In tests the assertion below will fail; in production we will proceed even though some of the buffer contains its old contents, which would be bad. I think instead we should throw an EOFException here.", "url": "https://github.com/elastic/elasticsearch/pull/52199#discussion_r377639979", "createdAt": "2020-02-11T13:41:23Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotIndexInput.java", "diffHunk": "@@ -121,9 +121,19 @@ private void readInternalBytes(final int part, long pos, final byte[] b, int off\n             // we did not read everything in an optimized fashion, so read the remainder directly\n             try (InputStream inputStream\n                      = blobContainer.readBlob(fileInfo.partName(part), pos + optimizedReadSize, length - optimizedReadSize)) {\n-                final int directReadSize = inputStream.read(b, offset + optimizedReadSize, length - optimizedReadSize);\n+\n+                int directReadSize = 0;\n+                while ((optimizedReadSize + directReadSize) < length) {\n+                    final int read = inputStream.read(b,\n+                                                      offset + optimizedReadSize + directReadSize,\n+                                                      length - optimizedReadSize - directReadSize);\n+                    if (read == -1) {\n+                        break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b50c0817222bbf111c8682ebf7ec354d26582f2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0MDIzNQ==", "bodyText": "Could we extract a method to do this? The two changes to this file look very similar.", "url": "https://github.com/elastic/elasticsearch/pull/52199#discussion_r377640235", "createdAt": "2020-02-11T13:41:54Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotIndexInput.java", "diffHunk": "@@ -276,10 +286,17 @@ boolean canContinueSequentialRead(int part, long pos) {\n \n         int read(byte[] b, int offset, int length) throws IOException {\n             assert this.pos < maxPos : \"should not try and read from a fully-read stream\";\n-            int read = inputStream.read(b, offset, length);\n-            assert read <= length : read + \" vs \" + length;\n-            pos += read;\n-            return read;\n+            int totalRead = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b50c0817222bbf111c8682ebf7ec354d26582f2"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e06a94b0f558ed2b85fdf1975856141a1d42210e", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/e06a94b0f558ed2b85fdf1975856141a1d42210e", "committedDate": "2020-02-11T14:25:57Z", "message": "apply feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NzY1OTUw", "url": "https://github.com/elastic/elasticsearch/pull/52199#pullrequestreview-356765950", "createdAt": "2020-02-11T15:45:01Z", "commit": {"oid": "e06a94b0f558ed2b85fdf1975856141a1d42210e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTo0NTowMlrOFoOJmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTo0NTowMlrOFoOJmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcxOTE5Mw==", "bodyText": "I'm wondering whether we should throw an EOFException if this hits EOF too. Do we need to behave differently here?", "url": "https://github.com/elastic/elasticsearch/pull/52199#discussion_r377719193", "createdAt": "2020-02-11T15:45:02Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotIndexInput.java", "diffHunk": "@@ -276,7 +296,7 @@ boolean canContinueSequentialRead(int part, long pos) {\n \n         int read(byte[] b, int offset, int length) throws IOException {\n             assert this.pos < maxPos : \"should not try and read from a fully-read stream\";\n-            int read = inputStream.read(b, offset, length);\n+            final int read = readFully(inputStream, b, offset, length, () -> {});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e06a94b0f558ed2b85fdf1975856141a1d42210e"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NzY5MzI1", "url": "https://github.com/elastic/elasticsearch/pull/52199#pullrequestreview-356769325", "createdAt": "2020-02-11T15:48:49Z", "commit": {"oid": "e06a94b0f558ed2b85fdf1975856141a1d42210e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75cad8f5da60f8491cfcc6e9ae5bf00182a4a15d", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/75cad8f5da60f8491cfcc6e9ae5bf00182a4a15d", "committedDate": "2020-02-12T11:36:52Z", "message": "Merge branch 'feature/searchable-snapshots' into S3RetryingInputStream"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2552, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}