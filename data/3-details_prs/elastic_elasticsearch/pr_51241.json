{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0OTkxODU2", "number": 51241, "title": "[DOCS] Adds certutil http command to TLS setup steps", "bodyText": "Related to #49827\nThis PR updates the instructions in https://www.elastic.co/guide/en/elasticsearch/reference/master/configuring-tls.html#tls-http to take the new elasticsearch-certutil http command into consideration.\nPreview: http://elasticsearch_51241.docs-preview.app.elstc.co/guide/en/elasticsearch/reference/master/configuring-tls.html", "createdAt": "2020-01-20T20:28:40Z", "url": "https://github.com/elastic/elasticsearch/pull/51241", "merged": true, "mergeCommit": {"oid": "01a6daed435790bdea1df22de8400829362b561c"}, "closed": true, "closedAt": "2020-02-21T18:04:29Z", "author": {"login": "lcawl"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8SiCJgH2gAyMzY0OTkxODU2OjZlY2I1MGRmM2JhYzBiZDI2ZTZkYmMxYjA2ODVlZTU3ODQ5M2E3ODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGi2NugH2gAyMzY0OTkxODU2OmRkYTMxY2EwOGRkZmUzZjAxNWUyMDI1ZjdhY2Q0ZjUzMzIzZmIyZGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6ecb50df3bac0bd26e6dbc1b0685ee578493a783", "author": {"user": {"login": "lcawl", "name": "Lisa Cawley"}}, "url": "https://github.com/elastic/elasticsearch/commit/6ecb50df3bac0bd26e6dbc1b0685ee578493a783", "committedDate": "2020-01-20T20:25:51Z", "message": "[DOCS] Adds certutil http command to TLS steps"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NjQxOTE5", "url": "https://github.com/elastic/elasticsearch/pull/51241#pullrequestreview-345641919", "createdAt": "2020-01-21T05:31:47Z", "commit": {"oid": "6ecb50df3bac0bd26e6dbc1b0685ee578493a783"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwNTozMTo0N1rOFfu1mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwNTozNTowOFrOFfu34Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODgxNzU2MA==", "bodyText": "Using elasticsearch-certutil http doesn't necessarily mean they did not end up with a PEM file. For instance, they could have used elasticsearch-certutil http to generate a CSR that they then took to their CA to sign and get back a PEM encoded certificate", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r368817560", "createdAt": "2020-01-21T05:31:47Z", "author": {"login": "jkakavas"}, "path": "x-pack/docs/en/security/securing-communications/tls-http.asciidoc", "diffHunk": "@@ -1,42 +1,57 @@\n [role=\"xpack\"]\n [[tls-http]]\n-==== Encrypting HTTP Client communications\n+==== Encrypting HTTP client communications\n \n When {security-features} are enabled, you can optionally use TLS to ensure that\n communication between HTTP clients and the cluster is encrypted.\n \n NOTE: Enabling TLS on the HTTP layer is strongly recommended but is not required.\n If you enable TLS on the HTTP layer in {es}, then you might need to make\n-configuration changes in other parts of the Elastic Stack and in any {es}\n-clients that you use.\n+configuration changes in other parts of the {stack} and in any {es} clients that\n+you use.\n \n . If you have not done so already, <<node-certificates,generate node certificates>>.\n++\n+--\n+In particular, you need the files that are generated by the following command:\n+\n+[source,shell]\n+----------------------------------------------------------\n+bin/elasticsearch-certutil http\n+----------------------------------------------------------\n+\n+This command generates a zip file that contains certificates and keys for use in {es} and {kib}. Each folder contains a readme that explains how to use the files.\n+--\n+\n+. Verify that you've copied the output files to the appropriate locations, as\n+specified in the readme files. \n++\n+--\n+For example, copy the `http.p12` file from the `elasticsearch` folder into a \n+directory within the {es} configuration directory on each node. If you chose to \n+generate one certificate per node, copy the appropriate `http.p12` file to each\n+node. If you want to use {kib} to access this cluster, copy the\n+`elasticsearch-ca.pem` file from the `kibana` folder into the {kib}\n+configuration directory.\n+--\n \n . Enable TLS and specify the information required to access the node\u2019s\n-certificate.\n+certificate. Follow the instructions in the readme in the `elasticsearch` folder\n+of the zip file. For example:\n \n-** If the certificate is in PKCS#12 format, add the following information to the\n-`elasticsearch.yml` file on each node:\n+..Add the following information to the `elasticsearch.yml` file on each node:\n +\n --\n [source, yaml]\n --------------------------------------------------\n xpack.security.http.ssl.enabled: true\n-xpack.security.http.ssl.keystore.path: certs/elastic-certificates.p12 <1>\n-xpack.security.http.ssl.truststore.path: certs/elastic-certificates.p12 <2>\n+xpack.security.http.ssl.keystore.path: \"http.p12\"\n --------------------------------------------------\n-<1> If you created a separate certificate for each node, then you might need to\n-customize this path on each node. If the filename matches the node name, you can\n-use the `certs/${node.name}.p12` format, for example.\n-<2> The `elasticsearch-certutil` output includes the CA certificate inside the\n-PKCS#12 keystore, therefore the keystore can also be used as the truststore.\n-This name should match the `keystore.path` value.\n---\n \n-** If the certificate is in PEM format, add the following information to the\n+If you did not use the `elasticsearch-certutil http` command and you have", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ecb50df3bac0bd26e6dbc1b0685ee578493a783"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODgxNzc4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            configuration setting in {es}:\n          \n          \n            \n            setting in {es}:\n          \n      \n    \n    \n  \n\nI think we call them secure settings ( as opposed to secure configuration settings)  elsewhere", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r368817780", "createdAt": "2020-01-21T05:33:03Z", "author": {"login": "jkakavas"}, "path": "x-pack/docs/en/security/securing-communications/tls-http.asciidoc", "diffHunk": "@@ -52,29 +67,29 @@ xpack.security.http.ssl.certificate_authorities: [ \"/home/es/config/ca.crt\" ] <3\n     must be a location within the {es} configuration directory.\n --\n \n-. If you secured the node's certificate with a password, add the password to\n-your {es} keystore:\n-\n-** If the signed certificate is in PKCS#12 format, use the following commands:\n+.. If you secured the keystore with a password, add that password to a secure\n+configuration setting in {es}:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ecb50df3bac0bd26e6dbc1b0685ee578493a783"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODgxODE0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            . Optional: Generate the necessary certificates to encrypt HTTP client\n          \n          \n            \n            . Optional: Generate additional, specific certificates to encrypt HTTP client\n          \n      \n    \n    \n  \n\nThe ones they created above can as well be used for HTTP, depending on the environment and/or use case.", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r368818145", "createdAt": "2020-01-21T05:35:08Z", "author": {"login": "jkakavas"}, "path": "x-pack/docs/en/security/securing-communications/node-certificates.asciidoc", "diffHunk": "@@ -75,10 +75,26 @@ signing requests (CSR) for the nodes in your cluster. For more information, see\n <<certutil>>.\n --\n \n-. Copy the node certificate to the appropriate locations.\n+. Optional: Generate the necessary certificates to encrypt HTTP client", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ecb50df3bac0bd26e6dbc1b0685ee578493a783"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de62bafa5954280c3e016816206e95def9e92e83", "author": {"user": {"login": "lcawl", "name": "Lisa Cawley"}}, "url": "https://github.com/elastic/elasticsearch/commit/de62bafa5954280c3e016816206e95def9e92e83", "committedDate": "2020-01-21T18:29:56Z", "message": "Update x-pack/docs/en/security/securing-communications/tls-http.asciidoc\n\nCo-Authored-By: Ioannis Kakavas <ikakavas@protonmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a81dfdad90f52866bdd20d901e9c44d9d99b892", "author": {"user": {"login": "lcawl", "name": "Lisa Cawley"}}, "url": "https://github.com/elastic/elasticsearch/commit/2a81dfdad90f52866bdd20d901e9c44d9d99b892", "committedDate": "2020-01-21T18:30:13Z", "message": "Update x-pack/docs/en/security/securing-communications/node-certificates.asciidoc\n\nCo-Authored-By: Ioannis Kakavas <ikakavas@protonmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7fa7a04fcfe9323821fd7a998a0467c3c5aaf47", "author": {"user": {"login": "lcawl", "name": "Lisa Cawley"}}, "url": "https://github.com/elastic/elasticsearch/commit/f7fa7a04fcfe9323821fd7a998a0467c3c5aaf47", "committedDate": "2020-01-21T18:40:54Z", "message": "[DOCS] Addresses feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2ODA1NDI4", "url": "https://github.com/elastic/elasticsearch/pull/51241#pullrequestreview-346805428", "createdAt": "2020-01-22T18:26:39Z", "commit": {"oid": "f7fa7a04fcfe9323821fd7a998a0467c3c5aaf47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODoyNjo0MFrOFgmXmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODoyNjo0MFrOFgmXmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyNzM4Nw==", "bodyText": "@tvernum I noticed that the output from the elasticsearch-certutil http command did not mention setting the truststore.path, so I've removed it here too.  If it's still required, let me know and I'll re-add it.", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r369727387", "createdAt": "2020-01-22T18:26:40Z", "author": {"login": "lcawl"}, "path": "x-pack/docs/en/security/securing-communications/tls-http.asciidoc", "diffHunk": "@@ -1,42 +1,58 @@\n [role=\"xpack\"]\n [[tls-http]]\n-==== Encrypting HTTP Client communications\n+==== Encrypting HTTP client communications\n \n When {security-features} are enabled, you can optionally use TLS to ensure that\n communication between HTTP clients and the cluster is encrypted.\n \n NOTE: Enabling TLS on the HTTP layer is strongly recommended but is not required.\n If you enable TLS on the HTTP layer in {es}, then you might need to make\n-configuration changes in other parts of the Elastic Stack and in any {es}\n-clients that you use.\n+configuration changes in other parts of the {stack} and in any {es} clients that\n+you use.\n \n . If you have not done so already, <<node-certificates,generate node certificates>>.\n++\n+--\n+In particular, you need the files that are generated by the following command:\n+\n+[source,shell]\n+----------------------------------------------------------\n+bin/elasticsearch-certutil http\n+----------------------------------------------------------\n+\n+This command generates a zip file that contains certificates and keys for use in {es} and {kib}. Each folder contains a readme that explains how to use the files.\n+--\n+\n+. Verify that you've copied the output files to the appropriate locations, as\n+specified in the readme files. \n++\n+--\n+For example, copy the `http.p12` file from the `elasticsearch` folder into a \n+directory within the {es} configuration directory on each node. If you chose to \n+generate one certificate per node, copy the appropriate `http.p12` file to each\n+node. If you want to use {kib} to access this cluster, copy the\n+`elasticsearch-ca.pem` file from the `kibana` folder into the {kib}\n+configuration directory.\n+--\n \n . Enable TLS and specify the information required to access the node\u2019s\n-certificate.\n+certificate. Follow the instructions in the readme in the `elasticsearch` folder\n+of the zip file. For example:\n \n-** If the certificate is in PKCS#12 format, add the following information to the\n-`elasticsearch.yml` file on each node:\n+.. Update the `elasticsearch.yml` file on each node with the location of the\n+certificates.\n +\n --\n+If the certificates are in PKCS#12 format:\n+\n [source, yaml]\n --------------------------------------------------\n xpack.security.http.ssl.enabled: true\n-xpack.security.http.ssl.keystore.path: certs/elastic-certificates.p12 <1>\n-xpack.security.http.ssl.truststore.path: certs/elastic-certificates.p12 <2>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7fa7a04fcfe9323821fd7a998a0467c3c5aaf47"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2ODExNzQ4", "url": "https://github.com/elastic/elasticsearch/pull/51241#pullrequestreview-346811748", "createdAt": "2020-01-22T18:36:49Z", "commit": {"oid": "f7fa7a04fcfe9323821fd7a998a0467c3c5aaf47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODozNjo0OVrOFgmr_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODozNjo0OVrOFgmr_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczMjYwNQ==", "bodyText": "I think that since we talked about using a certs folder in previous examples, it should be used here too:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            xpack.security.http.ssl.keystore.path: \"http.p12\"\n          \n          \n            \n            xpack.security.http.ssl.keystore.path: certs/http.p12", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r369732605", "createdAt": "2020-01-22T18:36:49Z", "author": {"login": "lcawl"}, "path": "x-pack/docs/en/security/securing-communications/tls-http.asciidoc", "diffHunk": "@@ -1,42 +1,58 @@\n [role=\"xpack\"]\n [[tls-http]]\n-==== Encrypting HTTP Client communications\n+==== Encrypting HTTP client communications\n \n When {security-features} are enabled, you can optionally use TLS to ensure that\n communication between HTTP clients and the cluster is encrypted.\n \n NOTE: Enabling TLS on the HTTP layer is strongly recommended but is not required.\n If you enable TLS on the HTTP layer in {es}, then you might need to make\n-configuration changes in other parts of the Elastic Stack and in any {es}\n-clients that you use.\n+configuration changes in other parts of the {stack} and in any {es} clients that\n+you use.\n \n . If you have not done so already, <<node-certificates,generate node certificates>>.\n++\n+--\n+In particular, you need the files that are generated by the following command:\n+\n+[source,shell]\n+----------------------------------------------------------\n+bin/elasticsearch-certutil http\n+----------------------------------------------------------\n+\n+This command generates a zip file that contains certificates and keys for use in {es} and {kib}. Each folder contains a readme that explains how to use the files.\n+--\n+\n+. Verify that you've copied the output files to the appropriate locations, as\n+specified in the readme files. \n++\n+--\n+For example, copy the `http.p12` file from the `elasticsearch` folder into a \n+directory within the {es} configuration directory on each node. If you chose to \n+generate one certificate per node, copy the appropriate `http.p12` file to each\n+node. If you want to use {kib} to access this cluster, copy the\n+`elasticsearch-ca.pem` file from the `kibana` folder into the {kib}\n+configuration directory.\n+--\n \n . Enable TLS and specify the information required to access the node\u2019s\n-certificate.\n+certificate. Follow the instructions in the readme in the `elasticsearch` folder\n+of the zip file. For example:\n \n-** If the certificate is in PKCS#12 format, add the following information to the\n-`elasticsearch.yml` file on each node:\n+.. Update the `elasticsearch.yml` file on each node with the location of the\n+certificates.\n +\n --\n+If the certificates are in PKCS#12 format:\n+\n [source, yaml]\n --------------------------------------------------\n xpack.security.http.ssl.enabled: true\n-xpack.security.http.ssl.keystore.path: certs/elastic-certificates.p12 <1>\n-xpack.security.http.ssl.truststore.path: certs/elastic-certificates.p12 <2>\n+xpack.security.http.ssl.keystore.path: \"http.p12\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7fa7a04fcfe9323821fd7a998a0467c3c5aaf47"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NzU1NTcw", "url": "https://github.com/elastic/elasticsearch/pull/51241#pullrequestreview-347755570", "createdAt": "2020-01-24T05:22:30Z", "commit": {"oid": "f7fa7a04fcfe9323821fd7a998a0467c3c5aaf47"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNToyMjozMFrOFhUKkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNjoxMTo1OVrOFhUr0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3NzcxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This command generates a zip file that contains certificates and keys for use in {es} and {kib}. Each folder contains a readme that explains how to use the files.\n          \n          \n            \n            This command generates a zip file that contains certificates and keys for use in\n          \n          \n            \n            {es} and {kib}. Each folder contains a readme that explains how to use the files.", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r370477714", "createdAt": "2020-01-24T05:22:30Z", "author": {"login": "tvernum"}, "path": "x-pack/docs/en/security/securing-communications/tls-http.asciidoc", "diffHunk": "@@ -1,42 +1,58 @@\n [role=\"xpack\"]\n [[tls-http]]\n-==== Encrypting HTTP Client communications\n+==== Encrypting HTTP client communications\n \n When {security-features} are enabled, you can optionally use TLS to ensure that\n communication between HTTP clients and the cluster is encrypted.\n \n NOTE: Enabling TLS on the HTTP layer is strongly recommended but is not required.\n If you enable TLS on the HTTP layer in {es}, then you might need to make\n-configuration changes in other parts of the Elastic Stack and in any {es}\n-clients that you use.\n+configuration changes in other parts of the {stack} and in any {es} clients that\n+you use.\n \n . If you have not done so already, <<node-certificates,generate node certificates>>.\n++\n+--\n+In particular, you need the files that are generated by the following command:\n+\n+[source,shell]\n+----------------------------------------------------------\n+bin/elasticsearch-certutil http\n+----------------------------------------------------------\n+\n+This command generates a zip file that contains certificates and keys for use in {es} and {kib}. Each folder contains a readme that explains how to use the files.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7fa7a04fcfe9323821fd7a998a0467c3c5aaf47"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ4NjIyNg==", "bodyText": "It's not required.\nTechnically, setting a truststore would  configure which certificates the server would trust if we had clientAuthentication enabled (PKI). We don't need that.\nIt's also used by setup-passwords, but if no truststore is configured, it will assume that the keystore has the correct certificates and trust that, so it all works without needing any special config.", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r370486226", "createdAt": "2020-01-24T06:11:59Z", "author": {"login": "tvernum"}, "path": "x-pack/docs/en/security/securing-communications/tls-http.asciidoc", "diffHunk": "@@ -1,42 +1,58 @@\n [role=\"xpack\"]\n [[tls-http]]\n-==== Encrypting HTTP Client communications\n+==== Encrypting HTTP client communications\n \n When {security-features} are enabled, you can optionally use TLS to ensure that\n communication between HTTP clients and the cluster is encrypted.\n \n NOTE: Enabling TLS on the HTTP layer is strongly recommended but is not required.\n If you enable TLS on the HTTP layer in {es}, then you might need to make\n-configuration changes in other parts of the Elastic Stack and in any {es}\n-clients that you use.\n+configuration changes in other parts of the {stack} and in any {es} clients that\n+you use.\n \n . If you have not done so already, <<node-certificates,generate node certificates>>.\n++\n+--\n+In particular, you need the files that are generated by the following command:\n+\n+[source,shell]\n+----------------------------------------------------------\n+bin/elasticsearch-certutil http\n+----------------------------------------------------------\n+\n+This command generates a zip file that contains certificates and keys for use in {es} and {kib}. Each folder contains a readme that explains how to use the files.\n+--\n+\n+. Verify that you've copied the output files to the appropriate locations, as\n+specified in the readme files. \n++\n+--\n+For example, copy the `http.p12` file from the `elasticsearch` folder into a \n+directory within the {es} configuration directory on each node. If you chose to \n+generate one certificate per node, copy the appropriate `http.p12` file to each\n+node. If you want to use {kib} to access this cluster, copy the\n+`elasticsearch-ca.pem` file from the `kibana` folder into the {kib}\n+configuration directory.\n+--\n \n . Enable TLS and specify the information required to access the node\u2019s\n-certificate.\n+certificate. Follow the instructions in the readme in the `elasticsearch` folder\n+of the zip file. For example:\n \n-** If the certificate is in PKCS#12 format, add the following information to the\n-`elasticsearch.yml` file on each node:\n+.. Update the `elasticsearch.yml` file on each node with the location of the\n+certificates.\n +\n --\n+If the certificates are in PKCS#12 format:\n+\n [source, yaml]\n --------------------------------------------------\n xpack.security.http.ssl.enabled: true\n-xpack.security.http.ssl.keystore.path: certs/elastic-certificates.p12 <1>\n-xpack.security.http.ssl.truststore.path: certs/elastic-certificates.p12 <2>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyNzM4Nw=="}, "originalCommit": {"oid": "f7fa7a04fcfe9323821fd7a998a0467c3c5aaf47"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e56887f8b8ee291882a06325defaa1db62acfe4", "author": {"user": {"login": "lcawl", "name": "Lisa Cawley"}}, "url": "https://github.com/elastic/elasticsearch/commit/7e56887f8b8ee291882a06325defaa1db62acfe4", "committedDate": "2020-01-24T16:40:07Z", "message": "[DOCS] Removes reference to certs folder in TLS instructions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66a23e46f0de9c77929d26c9619fb15bf2fbb515", "author": {"user": {"login": "lcawl", "name": "Lisa Cawley"}}, "url": "https://github.com/elastic/elasticsearch/commit/66a23e46f0de9c77929d26c9619fb15bf2fbb515", "committedDate": "2020-01-24T16:41:24Z", "message": "Update x-pack/docs/en/security/securing-communications/tls-http.asciidoc\n\nCo-Authored-By: Tim Vernum <tim@adjective.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c472ec8ca28e0fa3a976215bce665004418c85f", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/1c472ec8ca28e0fa3a976215bce665004418c85f", "committedDate": "2020-01-24T18:04:27Z", "message": "Merge branch 'master' into tls-http"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDk4NTY0", "url": "https://github.com/elastic/elasticsearch/pull/51241#pullrequestreview-352498564", "createdAt": "2020-02-03T19:20:04Z", "commit": {"oid": "1c472ec8ca28e0fa3a976215bce665004418c85f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOToyMDowNFrOFk85DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOTozMjo0OVrOFk9Rwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MDcwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Copy the applicable `.p12` files into the {es} configuration directory on each\n          \n          \n            \n            Copy the applicable files into the {es} configuration directory on each\n          \n      \n    \n    \n  \n\nIt will most probably be one or two p12 files but not always . ( They might get  a CSR to give to their CA, for instance ). The output of the http subcommand is pretty detailed so I don't think we can be a little generic here", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r374290700", "createdAt": "2020-02-03T19:20:04Z", "author": {"login": "jkakavas"}, "path": "x-pack/docs/en/security/securing-communications/node-certificates.asciidoc", "diffHunk": "@@ -75,12 +75,27 @@ signing requests (CSR) for the nodes in your cluster. For more information, see\n <<certutil>>.\n --\n \n-. Copy the node certificate to the appropriate locations.\n+. Optional: Generate additional certificates specifically for encrypting HTTP\n+client communications. \n +\n --\n-Copy the applicable `.p12` file into a directory within the {es} configuration\n-directory on each node. For example, `/home/es/config/certs`. There is no need\n-to copy the CA file to this directory.\n+For example, use the `elasticsearch-certutil http` command:\n+\n+[source,shell]\n+----------------------------------------------------------\n+bin/elasticsearch-certutil http\n+----------------------------------------------------------\n+\n+This command guides you through the process of generating the appropriate\n+certificates for use in {es} and {kib}. If you created a CA for your cluster,\n+you can re-use it by supplying its location when prompted.\n+--\n+\n+. Copy the node certificates to the appropriate locations.\n++\n+--\n+Copy the applicable `.p12` files into the {es} configuration directory on each", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c472ec8ca28e0fa3a976215bce665004418c85f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MjAwOQ==", "bodyText": "There is no need to copy the CA file to this directory.\n\nNot sure what we originally meant with this, I guess we assumed that the CA certificate is part of the PKCS#12 that we would create and then users wouldn't need to copy the CA certficate by itself in addition. In any case, I feel this makes assumptions on the setup and is not very helpful so why not take the opportunity to remove this sentence", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r374292009", "createdAt": "2020-02-03T19:22:35Z", "author": {"login": "jkakavas"}, "path": "x-pack/docs/en/security/securing-communications/node-certificates.asciidoc", "diffHunk": "@@ -75,12 +75,27 @@ signing requests (CSR) for the nodes in your cluster. For more information, see\n <<certutil>>.\n --\n \n-. Copy the node certificate to the appropriate locations.\n+. Optional: Generate additional certificates specifically for encrypting HTTP\n+client communications. \n +\n --\n-Copy the applicable `.p12` file into a directory within the {es} configuration\n-directory on each node. For example, `/home/es/config/certs`. There is no need\n-to copy the CA file to this directory.\n+For example, use the `elasticsearch-certutil http` command:\n+\n+[source,shell]\n+----------------------------------------------------------\n+bin/elasticsearch-certutil http\n+----------------------------------------------------------\n+\n+This command guides you through the process of generating the appropriate\n+certificates for use in {es} and {kib}. If you created a CA for your cluster,\n+you can re-use it by supplying its location when prompted.\n+--\n+\n+. Copy the node certificates to the appropriate locations.\n++\n+--\n+Copy the applicable `.p12` files into the {es} configuration directory on each\n+node. There is no need to copy the CA file to this directory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c472ec8ca28e0fa3a976215bce665004418c85f"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5Njc1NA==", "bodyText": "I think this section might be slightly confusing now. We document with the assumption that bin/elasticsearch-certutil http is used and suggest accordingly but there is no possibility for the tool to ouput PEM files like node.key and node.crt that we use in this example.\nnode.crt and node.key also match the examples we use in the transport ssl section above, which might add to the confusion.\nMaybe if we remove \"Follow the instructions in the readme in the elasticsearch folder of the zip file. \" from step 3, that will make the step more generic. If users have used the http subcommand, they have copied the files already ( as suggested in previous step ) , if not, they have their keys and certificates ready at hand. We can still use http.p12 for consistency here and also use node1_http.key and node1_http.crt in the PEM example to denote that these are usually different than the ones used for transport TLS. WDYT ?", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r374296754", "createdAt": "2020-02-03T19:32:16Z", "author": {"login": "jkakavas"}, "path": "x-pack/docs/en/security/securing-communications/tls-http.asciidoc", "diffHunk": "@@ -1,42 +1,59 @@\n [role=\"xpack\"]\n [[tls-http]]\n-==== Encrypting HTTP Client communications\n+==== Encrypting HTTP client communications\n \n When {security-features} are enabled, you can optionally use TLS to ensure that\n communication between HTTP clients and the cluster is encrypted.\n \n NOTE: Enabling TLS on the HTTP layer is strongly recommended but is not required.\n If you enable TLS on the HTTP layer in {es}, then you might need to make\n-configuration changes in other parts of the Elastic Stack and in any {es}\n-clients that you use.\n+configuration changes in other parts of the {stack} and in any {es} clients that\n+you use.\n \n . If you have not done so already, <<node-certificates,generate node certificates>>.\n++\n+--\n+In particular, you need the files that are generated by the following command:\n+\n+[source,shell]\n+----------------------------------------------------------\n+bin/elasticsearch-certutil http\n+----------------------------------------------------------\n+\n+This command generates a zip file that contains certificates and keys for use in\n+{es} and {kib}. Each folder contains a readme that explains how to use the files.\n+--\n+\n+. Verify that you've copied the output files to the appropriate locations, as\n+specified in the readme files. \n++\n+--\n+For example, copy the `http.p12` file from the `elasticsearch` folder into a \n+directory within the {es} configuration directory on each node. If you chose to \n+generate one certificate per node, copy the appropriate `http.p12` file to each\n+node. If you want to use {kib} to access this cluster, copy the\n+`elasticsearch-ca.pem` file from the `kibana` folder into the {kib}\n+configuration directory.\n+--\n \n . Enable TLS and specify the information required to access the node\u2019s\n-certificate.\n+certificate. Follow the instructions in the readme in the `elasticsearch` folder\n+of the zip file. For example:\n \n-** If the certificate is in PKCS#12 format, add the following information to the\n-`elasticsearch.yml` file on each node:\n+.. Update the `elasticsearch.yml` file on each node with the location of the\n+certificates.\n +\n --\n+If the certificates are in PKCS#12 format:\n+\n [source, yaml]\n --------------------------------------------------\n xpack.security.http.ssl.enabled: true\n-xpack.security.http.ssl.keystore.path: certs/elastic-certificates.p12 <1>\n-xpack.security.http.ssl.truststore.path: certs/elastic-certificates.p12 <2>\n+xpack.security.http.ssl.keystore.path: \"http.p12\"\n --------------------------------------------------\n-<1> If you created a separate certificate for each node, then you might need to\n-customize this path on each node. If the filename matches the node name, you can\n-use the `certs/${node.name}.p12` format, for example.\n-<2> The `elasticsearch-certutil` output includes the CA certificate inside the\n-PKCS#12 keystore, therefore the keystore can also be used as the truststore.\n-This name should match the `keystore.path` value.\n---\n \n-** If the certificate is in PEM format, add the following information to the\n-`elasticsearch.yml` file on each node:\n-+\n---\n+If the certificates are in PEM format:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c472ec8ca28e0fa3a976215bce665004418c85f"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NzAyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            .. If you secured the certificate with a password, add that password to a secure \n          \n          \n            \n            .. If you secured the keystore or the private key with a password, add that password to a secure", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r374297026", "createdAt": "2020-02-03T19:32:49Z", "author": {"login": "jkakavas"}, "path": "x-pack/docs/en/security/securing-communications/tls-http.asciidoc", "diffHunk": "@@ -52,29 +69,29 @@ xpack.security.http.ssl.certificate_authorities: [ \"/home/es/config/ca.crt\" ] <3\n     must be a location within the {es} configuration directory.\n --\n \n-. If you secured the node's certificate with a password, add the password to\n-your {es} keystore:\n-\n-** If the signed certificate is in PKCS#12 format, use the following commands:\n+.. If you secured the certificate with a password, add that password to a secure ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c472ec8ca28e0fa3a976215bce665004418c85f"}, "originalPosition": 87}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5070d6a8f97738c735606f58ca3b5c3415c6e69b", "author": {"user": {"login": "lcawl", "name": "Lisa Cawley"}}, "url": "https://github.com/elastic/elasticsearch/commit/5070d6a8f97738c735606f58ca3b5c3415c6e69b", "committedDate": "2020-02-03T19:43:59Z", "message": "Update x-pack/docs/en/security/securing-communications/node-certificates.asciidoc\n\nCo-Authored-By: Ioannis Kakavas <ikakavas@protonmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6a9314b1cf41c670907e52f76d2697496a75270", "author": {"user": {"login": "lcawl", "name": "Lisa Cawley"}}, "url": "https://github.com/elastic/elasticsearch/commit/d6a9314b1cf41c670907e52f76d2697496a75270", "committedDate": "2020-02-03T19:46:31Z", "message": "Update x-pack/docs/en/security/securing-communications/tls-http.asciidoc\n\nCo-Authored-By: Ioannis Kakavas <ikakavas@protonmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79673e279e5559dd04f80cbfdc1c9df26d06ac18", "author": {"user": {"login": "lcawl", "name": "Lisa Cawley"}}, "url": "https://github.com/elastic/elasticsearch/commit/79673e279e5559dd04f80cbfdc1c9df26d06ac18", "committedDate": "2020-02-03T20:02:22Z", "message": "[DOCS] Remove CA comment from node certificates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "176e45941b2be5bdd3dbe463ec8e83d1bb3add8d", "author": {"user": {"login": "lcawl", "name": "Lisa Cawley"}}, "url": "https://github.com/elastic/elasticsearch/commit/176e45941b2be5bdd3dbe463ec8e83d1bb3add8d", "committedDate": "2020-02-03T23:09:11Z", "message": "[DOCS] Fixes PEM file names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "602156ca65af1914a64a06207f2a60cd21beba02", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/602156ca65af1914a64a06207f2a60cd21beba02", "committedDate": "2020-02-13T07:08:01Z", "message": "Merge branch 'master' into tls-http"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMzcxNDg4", "url": "https://github.com/elastic/elasticsearch/pull/51241#pullrequestreview-362371488", "createdAt": "2020-02-21T02:52:11Z", "commit": {"oid": "602156ca65af1914a64a06207f2a60cd21beba02"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMjo1MjoxMVrOFsqJig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMjo1MjoxMVrOFsqJig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM3MjIzNA==", "bodyText": "Since the tool supports generating CSRs, and outputs a PEM key for that, we need this section, but I agree the wording is a little awkward.\nThat said, people know what type of files they have (or at least, if they don't know then I don't think restructuring the content will really help), so I'm OK with it as is.\nSomething simple like\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If the certificates are in PEM format:\n          \n          \n            \n            If you have certificates in PEM format:\n          \n      \n    \n    \n  \n\nwould be a little clearer, but it's a tiny difference.", "url": "https://github.com/elastic/elasticsearch/pull/51241#discussion_r382372234", "createdAt": "2020-02-21T02:52:11Z", "author": {"login": "tvernum"}, "path": "x-pack/docs/en/security/securing-communications/tls-http.asciidoc", "diffHunk": "@@ -1,42 +1,59 @@\n [role=\"xpack\"]\n [[tls-http]]\n-==== Encrypting HTTP Client communications\n+==== Encrypting HTTP client communications\n \n When {security-features} are enabled, you can optionally use TLS to ensure that\n communication between HTTP clients and the cluster is encrypted.\n \n NOTE: Enabling TLS on the HTTP layer is strongly recommended but is not required.\n If you enable TLS on the HTTP layer in {es}, then you might need to make\n-configuration changes in other parts of the Elastic Stack and in any {es}\n-clients that you use.\n+configuration changes in other parts of the {stack} and in any {es} clients that\n+you use.\n \n . If you have not done so already, <<node-certificates,generate node certificates>>.\n++\n+--\n+In particular, you need the files that are generated by the following command:\n+\n+[source,shell]\n+----------------------------------------------------------\n+bin/elasticsearch-certutil http\n+----------------------------------------------------------\n+\n+This command generates a zip file that contains certificates and keys for use in\n+{es} and {kib}. Each folder contains a readme that explains how to use the files.\n+--\n+\n+. Verify that you've copied the output files to the appropriate locations, as\n+specified in the readme files. \n++\n+--\n+For example, copy the `http.p12` file from the `elasticsearch` folder into a \n+directory within the {es} configuration directory on each node. If you chose to \n+generate one certificate per node, copy the appropriate `http.p12` file to each\n+node. If you want to use {kib} to access this cluster, copy the\n+`elasticsearch-ca.pem` file from the `kibana` folder into the {kib}\n+configuration directory.\n+--\n \n . Enable TLS and specify the information required to access the node\u2019s\n-certificate.\n+certificate. Follow the instructions in the readme in the `elasticsearch` folder\n+of the zip file. For example:\n \n-** If the certificate is in PKCS#12 format, add the following information to the\n-`elasticsearch.yml` file on each node:\n+.. Update the `elasticsearch.yml` file on each node with the location of the\n+certificates.\n +\n --\n+If the certificates are in PKCS#12 format:\n+\n [source, yaml]\n --------------------------------------------------\n xpack.security.http.ssl.enabled: true\n-xpack.security.http.ssl.keystore.path: certs/elastic-certificates.p12 <1>\n-xpack.security.http.ssl.truststore.path: certs/elastic-certificates.p12 <2>\n+xpack.security.http.ssl.keystore.path: \"http.p12\"\n --------------------------------------------------\n-<1> If you created a separate certificate for each node, then you might need to\n-customize this path on each node. If the filename matches the node name, you can\n-use the `certs/${node.name}.p12` format, for example.\n-<2> The `elasticsearch-certutil` output includes the CA certificate inside the\n-PKCS#12 keystore, therefore the keystore can also be used as the truststore.\n-This name should match the `keystore.path` value.\n---\n \n-** If the certificate is in PEM format, add the following information to the\n-`elasticsearch.yml` file on each node:\n-+\n---\n+If the certificates are in PEM format:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5Njc1NA=="}, "originalCommit": {"oid": "1c472ec8ca28e0fa3a976215bce665004418c85f"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDcwOTIx", "url": "https://github.com/elastic/elasticsearch/pull/51241#pullrequestreview-362470921", "createdAt": "2020-02-21T08:41:08Z", "commit": {"oid": "602156ca65af1914a64a06207f2a60cd21beba02"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d6f8f4a2f376bdad05db461c4f6f0b251d6b61d", "author": {"user": {"login": "lcawl", "name": "Lisa Cawley"}}, "url": "https://github.com/elastic/elasticsearch/commit/5d6f8f4a2f376bdad05db461c4f6f0b251d6b61d", "committedDate": "2020-02-21T15:00:26Z", "message": "Update x-pack/docs/en/security/securing-communications/tls-http.asciidoc\n\nCo-Authored-By: Tim Vernum <tim@adjective.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dda31ca08ddfe3f015e2025f7acd4f53323fb2db", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/dda31ca08ddfe3f015e2025f7acd4f53323fb2db", "committedDate": "2020-02-21T17:05:37Z", "message": "Merge branch 'master' into tls-http"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2765, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}