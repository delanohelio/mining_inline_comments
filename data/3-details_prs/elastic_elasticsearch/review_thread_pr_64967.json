{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NDU4MDk0", "number": 64967, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjowNjozNlrOE35FFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjowNjozNlrOE35FFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MDQyMzI2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/TopMetricsAggregator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjowNjozNlrOHxgBgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjowNjozNlrOHxgBgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2Njk0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // `config` doesn't have the name if the\n          \n          \n            \n                        // `config` doesn't have the name if the field is unmapped", "url": "https://github.com/elastic/elasticsearch/pull/64967#discussion_r521666944", "createdAt": "2020-11-11T22:06:36Z", "author": {"login": "not-napoleon"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/TopMetricsAggregator.java", "diffHunk": "@@ -241,44 +215,72 @@ public void close() {\n         }\n     }\n \n-    private abstract static class MetricValues implements BucketedSort.ExtraData, Releasable {\n-        protected final MetricSource source;\n+    @FunctionalInterface\n+    interface MetricValuesSupplier {\n+        MetricValues build(int size, BigArrays bigArrays, String name, ValuesSourceConfig config);\n+    }\n \n-        MetricValues(MetricSource source) {\n-            this.source = source;\n-        }\n+    abstract static class MetricValues implements BucketedSort.ExtraData, Releasable {\n+        protected final String name;\n \n-        final String name() {\n-            return source.name;\n+        MetricValues(String name) {\n+            this.name = name;\n         }\n \n         abstract boolean needsScores();\n         abstract double doubleValue(long index);\n-        abstract InternalTopMetrics.MetricValue metricValue(long index);\n+        abstract InternalTopMetrics.MetricValue metricValue(long index) throws IOException;\n     }\n \n     private abstract static class CollectingMetricValues extends MetricValues {\n         protected final BigArrays bigArrays;\n+        protected final ValuesSourceConfig config;\n \n-        CollectingMetricValues(BigArrays bigArrays, MetricSource source) {\n-            super(source);\n+        CollectingMetricValues(BigArrays bigArrays, String name, ValuesSourceConfig config) {\n+            super(name);\n             this.bigArrays = bigArrays;\n+            this.config = config;\n         }\n \n         @Override\n         public final boolean needsScores() {\n-            return source.valuesSource.needsScores();\n+            return config.getValuesSource().needsScores();\n         }\n     }\n+    \n+    static MetricValues buildMetricValues(\n+        ValuesSourceRegistry registry,\n+        BigArrays bigArrays,\n+        int size,\n+        String name,\n+        ValuesSourceConfig config\n+    ) {\n+        if (false == config.hasValues()) {\n+            // `config` doesn't have the name if the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e41b3f366b4c265bbf6654f4b7171c661db1d36a"}, "originalPosition": 192}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2969, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}