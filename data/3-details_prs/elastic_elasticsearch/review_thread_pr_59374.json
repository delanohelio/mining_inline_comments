{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3OTU4MDQy", "number": 59374, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTowODozMlrOENun5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTo0Nzo1NlrOENvmvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyODMwODIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTowODozMlrOGwfwaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTowODozMlrOGwfwaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUwNTEyOQ==", "bodyText": "This and the other *Legacy method rename (and the way they're selectively called from the transport action) is the only real difference between this commit and the original one that went into master. I realize that it is a little dirty to just duplicate everything and keep the old path code unchanged but IMO this is the easiest way to bring in the remaining snapshot back-ports cleanly.", "url": "https://github.com/elastic/elasticsearch/pull/59374#discussion_r453505129", "createdAt": "2020-07-13T09:08:32Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -173,11 +173,13 @@ public SnapshotsService(Settings settings, ClusterService clusterService, IndexN\n     /**\n      * Same as {@link #createSnapshot(CreateSnapshotRequest, ActionListener)} but invokes its callback on completion of\n      * the snapshot.\n+     * Note: This method is only used in clusters that contain a node older than {@link #NO_REPO_INITIALIZE_VERSION} to ensure a backwards\n+     * compatible path for initializing the snapshot in the repository is executed.\n      *\n      * @param request snapshot request\n      * @param listener snapshot completion listener\n      */\n-    public void executeSnapshot(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n+    public void executeSnapshotLegacy(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e2b9bfebe037b3cb055cb383c6d5a2d8621f33"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyODQ2OTA4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTo0Nzo1NlrOGwhPEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMTowNDo0OVrOGwjy_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyOTM2MA==", "bodyText": "Should this be createSnapshotLegacy?\nIs this covered by testing?", "url": "https://github.com/elastic/elasticsearch/pull/59374#discussion_r453529360", "createdAt": "2020-07-13T09:47:56Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -173,11 +173,13 @@ public SnapshotsService(Settings settings, ClusterService clusterService, IndexN\n     /**\n      * Same as {@link #createSnapshot(CreateSnapshotRequest, ActionListener)} but invokes its callback on completion of\n      * the snapshot.\n+     * Note: This method is only used in clusters that contain a node older than {@link #NO_REPO_INITIALIZE_VERSION} to ensure a backwards\n+     * compatible path for initializing the snapshot in the repository is executed.\n      *\n      * @param request snapshot request\n      * @param listener snapshot completion listener\n      */\n-    public void executeSnapshot(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n+    public void executeSnapshotLegacy(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n         createSnapshot(request,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e2b9bfebe037b3cb055cb383c6d5a2d8621f33"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU1MjkwOQ==", "bodyText": "This is covered by mixed cluster tests yes. createSnapshotLegacy is already taken for the non-blocking path, I just figured I'd stick with the naming from the original methods for both here.", "url": "https://github.com/elastic/elasticsearch/pull/59374#discussion_r453552909", "createdAt": "2020-07-13T10:28:59Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -173,11 +173,13 @@ public SnapshotsService(Settings settings, ClusterService clusterService, IndexN\n     /**\n      * Same as {@link #createSnapshot(CreateSnapshotRequest, ActionListener)} but invokes its callback on completion of\n      * the snapshot.\n+     * Note: This method is only used in clusters that contain a node older than {@link #NO_REPO_INITIALIZE_VERSION} to ensure a backwards\n+     * compatible path for initializing the snapshot in the repository is executed.\n      *\n      * @param request snapshot request\n      * @param listener snapshot completion listener\n      */\n-    public void executeSnapshot(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n+    public void executeSnapshotLegacy(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n         createSnapshot(request,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyOTM2MA=="}, "originalCommit": {"oid": "81e2b9bfebe037b3cb055cb383c6d5a2d8621f33"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU2NTc5MQ==", "bodyText": "I'm confused. Why is the executeSnapshotLegacy method not delegating to createSnapshotLegacy?", "url": "https://github.com/elastic/elasticsearch/pull/59374#discussion_r453565791", "createdAt": "2020-07-13T10:53:25Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -173,11 +173,13 @@ public SnapshotsService(Settings settings, ClusterService clusterService, IndexN\n     /**\n      * Same as {@link #createSnapshot(CreateSnapshotRequest, ActionListener)} but invokes its callback on completion of\n      * the snapshot.\n+     * Note: This method is only used in clusters that contain a node older than {@link #NO_REPO_INITIALIZE_VERSION} to ensure a backwards\n+     * compatible path for initializing the snapshot in the repository is executed.\n      *\n      * @param request snapshot request\n      * @param listener snapshot completion listener\n      */\n-    public void executeSnapshot(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n+    public void executeSnapshotLegacy(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n         createSnapshot(request,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyOTM2MA=="}, "originalCommit": {"oid": "81e2b9bfebe037b3cb055cb383c6d5a2d8621f33"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3MTMyNA==", "bodyText": "\ud83e\udd26 ok now I get it. Sorry. Sadly we don't have a test that would've caught the issue from this mistake and I don't see an easy way to add one. What we'd need is a BwC disruption test where we fail over from new version to old version master while the snapshot is in progress. I'm starting to think we should have that but I don't see a quick way of setting this up since all the BwC tests are rest tests right now and we don't have any way of using the mock repository with those.\n=> Just fixed it for now.", "url": "https://github.com/elastic/elasticsearch/pull/59374#discussion_r453571324", "createdAt": "2020-07-13T11:04:49Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -173,11 +173,13 @@ public SnapshotsService(Settings settings, ClusterService clusterService, IndexN\n     /**\n      * Same as {@link #createSnapshot(CreateSnapshotRequest, ActionListener)} but invokes its callback on completion of\n      * the snapshot.\n+     * Note: This method is only used in clusters that contain a node older than {@link #NO_REPO_INITIALIZE_VERSION} to ensure a backwards\n+     * compatible path for initializing the snapshot in the repository is executed.\n      *\n      * @param request snapshot request\n      * @param listener snapshot completion listener\n      */\n-    public void executeSnapshot(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n+    public void executeSnapshotLegacy(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n         createSnapshot(request,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyOTM2MA=="}, "originalCommit": {"oid": "81e2b9bfebe037b3cb055cb383c6d5a2d8621f33"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2416, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}