{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyOTQzMTM2", "number": 54072, "title": "Extract files stored within metadata hash into ByteArrayIndexInputs", "bodyText": "This pull request is addressing #53860 (comment) : we can now detect blobs that are stored within the metadata hash field and open them directly as ByteArrayIndexInput. There won't be stats associated to them but since they reside in memory there's no need to track their access patterns.", "createdAt": "2020-03-24T11:48:08Z", "url": "https://github.com/elastic/elasticsearch/pull/54072", "merged": true, "mergeCommit": {"oid": "f82f104777e13065642f236662e2490de6e4f816"}, "closed": true, "closedAt": "2020-03-27T15:39:08Z", "author": {"login": "tlrx"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQxagLAH2gAyMzkyOTQzMTM2OmYwODRjN2Q0YWI4NmMzZjdlNzE2MWZiOTlmNTQ4NTI2NmNhM2QxZGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRxclhAFqTM4Mjg5OTUyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f084c7d4ab86c3f7e7161fb99f5485266ca3d1df", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/f084c7d4ab86c3f7e7161fb99f5485266ca3d1df", "committedDate": "2020-03-24T11:43:10Z", "message": "Extract files stored within metadata hash into ByteArrayIndexInputs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3e653195ddd0306adc1fc41d916dae081da9bc5", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/c3e653195ddd0306adc1fc41d916dae081da9bc5", "committedDate": "2020-03-24T12:43:26Z", "message": "Merge branch 'feature/searchable-snapshots' into extract-hash-content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3c2c51cc47e89e56e674127456508a241c0cc07", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/c3c2c51cc47e89e56e674127456508a241c0cc07", "committedDate": "2020-03-24T12:45:09Z", "message": "Merge branch 'feature/searchable-snapshots' into extract-hash-content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTY4MDEw", "url": "https://github.com/elastic/elasticsearch/pull/54072#pullrequestreview-380968010", "createdAt": "2020-03-25T09:14:06Z", "commit": {"oid": "c3c2c51cc47e89e56e674127456508a241c0cc07"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOToxNDowOFrOF7R6iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOToyNDowMVrOF7SR9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwMzgxNw==", "bodyText": "I think it'd be better to assert this (inline) in the constructor.", "url": "https://github.com/elastic/elasticsearch/pull/54072#discussion_r397703817", "createdAt": "2020-03-25T09:14:08Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/BaseSearchableSnapshotIndexInput.java", "diffHunk": "@@ -98,4 +85,10 @@ private void ensureValidPosition(long position) {\n             throw new IllegalArgumentException(\"Position [\" + position + \"] is invalid\");\n         }\n     }\n+\n+    boolean assertHashIsNotEqualToContent() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3c2c51cc47e89e56e674127456508a241c0cc07"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwNzUxNQ==", "bodyText": "It looks like fileInfo.metadata().hash() is not today a slice of the underlying byte array (i.e. it has zero offset and full length) but I don't think we guarantee that in future. I think we should  pass offset and length to the ByteArrayIndexInput constructor just to be sure.", "url": "https://github.com/elastic/elasticsearch/pull/54072#discussion_r397707515", "createdAt": "2020-03-25T09:20:19Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java", "diffHunk": "@@ -221,7 +222,12 @@ public CacheFile getCacheFile(CacheKey cacheKey, long fileLength) throws Excepti\n     @Override\n     public IndexInput openInput(final String name, final IOContext context) throws IOException {\n         ensureOpen();\n+\n         final BlobStoreIndexShardSnapshot.FileInfo fileInfo = fileInfo(name);\n+        if (fileInfo.metadata().hashEqualsContents()) {\n+            return new ByteArrayIndexInput(\"ByteArrayIndexInput(\" + name + ')', fileInfo.metadata().hash().bytes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3c2c51cc47e89e56e674127456508a241c0cc07"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwOTgxMw==", "bodyText": "If we move the assertion to the constructor then this isn't necessary.", "url": "https://github.com/elastic/elasticsearch/pull/54072#discussion_r397709813", "createdAt": "2020-03-25T09:24:01Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotIndexInput.java", "diffHunk": "@@ -259,25 +257,8 @@ public String toString() {\n     }\n \n     private InputStream openBlobStream(int part, long pos, long length) throws IOException {\n-        final InputStream stream;\n-        if (fileInfo.metadata().hashEqualsContents() == false) {\n-            stream = blobContainer.readBlob(fileInfo.partName(part), pos, length);\n-        } else {\n-            // extract blob content from metadata hash\n-            final BytesRef data = fileInfo.metadata().hash();\n-            if (part > 0) {\n-                assert fileInfo.numberOfParts() >= part;\n-                for (int i = 0; i < part; i++) {\n-                    pos += fileInfo.partBytes(i);\n-                }\n-            }\n-            if ((pos < 0L) || (length < 0L) || (pos + length > data.bytes.length)) {\n-                throw new IllegalArgumentException(\"Invalid arguments (pos=\" + pos + \", length=\" + length\n-                    + \") for hash content (length=\" + data.bytes.length + ')');\n-            }\n-            stream = new ByteArrayInputStream(data.bytes, Math.toIntExact(pos), Math.toIntExact(length));\n-        }\n-        return stream;\n+        assert assertHashIsNotEqualToContent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3c2c51cc47e89e56e674127456508a241c0cc07"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "336457a8dd0be2771e42d7dc4badaa4a65c44883", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/336457a8dd0be2771e42d7dc4badaa4a65c44883", "committedDate": "2020-03-26T08:26:40Z", "message": "apply feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52e310588999a101a170f8ca7f2d932c45e3f05f", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/52e310588999a101a170f8ca7f2d932c45e3f05f", "committedDate": "2020-03-26T09:04:48Z", "message": "Merge branch 'feature/searchable-snapshots' into extract-hash-content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODk5NTI5", "url": "https://github.com/elastic/elasticsearch/pull/54072#pullrequestreview-382899529", "createdAt": "2020-03-27T14:19:22Z", "commit": {"oid": "52e310588999a101a170f8ca7f2d932c45e3f05f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1680, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}