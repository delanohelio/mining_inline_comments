{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNzM1OTMy", "number": 66493, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzo0MToyNlrOFGtpcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzo1MDoyNlrOFGt6WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTgzNjY3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/KeyToSequences.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzo0MToyNlrOIH2H6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzo0MToyNlrOIH2H6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA5NzcwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // to trim unneeded until that occur before it\n          \n          \n            \n                        // to trim the ones before it", "url": "https://github.com/elastic/elasticsearch/pull/66493#discussion_r545097705", "createdAt": "2020-12-17T13:41:26Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/KeyToSequences.java", "diffHunk": "@@ -95,27 +95,30 @@ void remove(int stage, SequenceKey key) {\n     }\n \n     /**\n-     * Remove all matches expect the latest.\n+     * Remove all matches except the latest occurring _before_ the given ordinal.\n      */\n-    void trimToTail() {\n+    void trimToTail(Ordinal ordinal) {\n         for (Iterator<SequenceEntry> it = keyToSequences.values().iterator(); it.hasNext(); ) {\n             SequenceEntry seqs =  it.next();\n-            // first remove the sequences\n-            // and remember the last item from the first\n-            // initialized stage to be used with until\n+            // remember the last item found (will be ascending)\n+            // to trim unneeded until that occur before it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a633834c4b724ac7714ec76a33e87526d81b230"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTg1NDY5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/OrdinalGroup.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzo0NTowNlrOIH2SLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzo0NTowNlrOIH2SLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEwMDMzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * less than the given argument alongside its position in the list.\n          \n          \n            \n                 * less than the given argument's timestamp, alongside its position in the list.", "url": "https://github.com/elastic/elasticsearch/pull/66493#discussion_r545100332", "createdAt": "2020-12-17T13:45:06Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/OrdinalGroup.java", "diffHunk": "@@ -52,11 +52,27 @@ void add(E element) {\n      * The element and everything before it is removed.\n      */\n     E trimBefore(Ordinal ordinal) {\n+        return trimBefore(ordinal, true);\n+    }\n+\n+    /**\n+     * Returns the latest element from the group that has its timestamp\n+     * less than the given argument alongside its position in the list.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a633834c4b724ac7714ec76a33e87526d81b230"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTg1NTgxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/OrdinalGroup.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzo0NToyMFrOIH2S0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNToxNzo1N1rOIH6iWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEwMDQ5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Everything before the element it is removed. The element is kept.\n          \n          \n            \n                 * Everything before this element is removed. The element is kept.", "url": "https://github.com/elastic/elasticsearch/pull/66493#discussion_r545100496", "createdAt": "2020-12-17T13:45:20Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/OrdinalGroup.java", "diffHunk": "@@ -52,11 +52,27 @@ void add(E element) {\n      * The element and everything before it is removed.\n      */\n     E trimBefore(Ordinal ordinal) {\n+        return trimBefore(ordinal, true);\n+    }\n+\n+    /**\n+     * Returns the latest element from the group that has its timestamp\n+     * less than the given argument alongside its position in the list.\n+     * Everything before the element it is removed. The element is kept.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a633834c4b724ac7714ec76a33e87526d81b230"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE3MDAxMQ==", "bodyText": "Will pick them up in a separate PR to avoid another build.", "url": "https://github.com/elastic/elasticsearch/pull/66493#discussion_r545170011", "createdAt": "2020-12-17T15:17:57Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/OrdinalGroup.java", "diffHunk": "@@ -52,11 +52,27 @@ void add(E element) {\n      * The element and everything before it is removed.\n      */\n     E trimBefore(Ordinal ordinal) {\n+        return trimBefore(ordinal, true);\n+    }\n+\n+    /**\n+     * Returns the latest element from the group that has its timestamp\n+     * less than the given argument alongside its position in the list.\n+     * Everything before the element it is removed. The element is kept.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEwMDQ5Ng=="}, "originalCommit": {"oid": "5a633834c4b724ac7714ec76a33e87526d81b230"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTg3OTkyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/SequenceMatcher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzo1MDoyNlrOIH2ggA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNToxNzozMFrOIH6hIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEwNDAwMA==", "bodyText": "Wondering if @Nullable would be welcome here, as an indicator of null as a branching value?", "url": "https://github.com/elastic/elasticsearch/pull/66493#discussion_r545104000", "createdAt": "2020-12-17T13:50:26Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/SequenceMatcher.java", "diffHunk": "@@ -253,19 +253,15 @@ void until(Iterable<KeyAndOrdinal> markers) {\n      * This allows the matcher to keep only the last match per stage\n      * and adjust insertion positions.\n      */\n-    void trim(boolean everything) {\n+    void trim(Ordinal ordinal) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a633834c4b724ac7714ec76a33e87526d81b230"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE2OTY5OQ==", "bodyText": "I'm not a fan of @Nullable since it doesn't enforce anything nor it is used consistently through-out the code.", "url": "https://github.com/elastic/elasticsearch/pull/66493#discussion_r545169699", "createdAt": "2020-12-17T15:17:30Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/SequenceMatcher.java", "diffHunk": "@@ -253,19 +253,15 @@ void until(Iterable<KeyAndOrdinal> markers) {\n      * This allows the matcher to keep only the last match per stage\n      * and adjust insertion positions.\n      */\n-    void trim(boolean everything) {\n+    void trim(Ordinal ordinal) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEwNDAwMA=="}, "originalCommit": {"oid": "5a633834c4b724ac7714ec76a33e87526d81b230"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4548, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}