{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NTgyNzgy", "number": 66044, "title": "Clean up some aggregation tests", "bodyText": "This rewrites two tests for aggregations to use AggregatorTestCase's\nsimpler way of making Aggregators, allowing us to remove a ctor on\nProductionAggregationContext that we weren't happy about. Now there is\nonly a single test call to ProductionAggregationContext and we can\nremove that soon.", "createdAt": "2020-12-08T16:50:59Z", "url": "https://github.com/elastic/elasticsearch/pull/66044", "merged": true, "mergeCommit": {"oid": "1585078a65676a60aaebdc8ecbaad4a8516b3083"}, "closed": true, "closedAt": "2020-12-09T20:20:25Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkNCraAH2gAyNTM0NTgyNzgyOmNlNjNmNjdkNzYwOWI4ZGE4YmNhMWZiZTQ0ZWYyNmUzZWNiMWViMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkjth5gH2gAyNTM0NTgyNzgyOjk1NGMwODAwYjVkOTMzMWMzNTBhOTk5NGI2OGZhZDE4ODFlYjU5OGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ce63f67d7609b8da8bca1fbe44ef26e3ecb1eb05", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/ce63f67d7609b8da8bca1fbe44ef26e3ecb1eb05", "committedDate": "2020-12-08T16:50:12Z", "message": "Clean up some aggregation tests\n\nThis rewrites two tests for aggregations to use `AggregatorTestCase`'s\nsimpler way of making `Aggregator`s, allowing us to remove a ctor on\n`ProductionAggregationContext` that we weren't happy about. Now there is\nonly a single test call to `ProductionAggregationContext` and we can\nremove that soon."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MjQ2ODMx", "url": "https://github.com/elastic/elasticsearch/pull/66044#pullrequestreview-548246831", "createdAt": "2020-12-09T14:37:12Z", "commit": {"oid": "ce63f67d7609b8da8bca1fbe44ef26e3ecb1eb05"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDozNzoxMlrOICX1YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo0MTo1OFrOICYE3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM1ODU2MA==", "bodyText": "Oh, hey, moving this off of ESSingleNodeTestCase is a win!", "url": "https://github.com/elastic/elasticsearch/pull/66044#discussion_r539358560", "createdAt": "2020-12-09T14:37:12Z", "author": {"login": "not-napoleon"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/AggregationCollectorTests.java", "diffHunk": "@@ -19,54 +19,109 @@\n \n package org.elasticsearch.search.aggregations;\n \n-import org.elasticsearch.common.xcontent.XContentParser;\n-import org.elasticsearch.common.xcontent.json.JsonXContent;\n-import org.elasticsearch.index.IndexService;\n-import org.elasticsearch.search.aggregations.MultiBucketConsumerService.MultiBucketConsumer;\n-import org.elasticsearch.search.aggregations.support.AggregationContext.ProductionAggregationContext;\n-import org.elasticsearch.test.ESSingleNodeTestCase;\n+import org.apache.lucene.index.DirectoryReader;\n+import org.apache.lucene.index.LeafReaderContext;\n+import org.apache.lucene.index.RandomIndexWriter;\n+import org.apache.lucene.search.IndexSearcher;\n+import org.apache.lucene.store.Directory;\n+import org.elasticsearch.index.mapper.KeywordFieldMapper.KeywordFieldType;\n+import org.elasticsearch.script.AggregationScript;\n+import org.elasticsearch.script.Script;\n+import org.elasticsearch.script.ScriptService;\n+import org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.TopHitsAggregationBuilder;\n \n import java.io.IOException;\n \n+import static org.mockito.Matchers.any;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n-public class AggregationCollectorTests extends ESSingleNodeTestCase {\n+public class AggregationCollectorTests extends AggregatorTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce63f67d7609b8da8bca1fbe44ef26e3ecb1eb05"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM2MjUyNA==", "bodyText": "I am not a fan of this method of documenting tests. CamelCase sentences are hard to read, and with many similar names it's easy to miss the differences between two of them.  Maybe just name this something like testSubScriptNoScore and add a javadoc noting what it's intended to test?  Same for the other very long test names.", "url": "https://github.com/elastic/elasticsearch/pull/66044#discussion_r539362524", "createdAt": "2020-12-09T14:41:58Z", "author": {"login": "not-napoleon"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/AggregationCollectorTests.java", "diffHunk": "@@ -19,54 +19,109 @@\n \n package org.elasticsearch.search.aggregations;\n \n-import org.elasticsearch.common.xcontent.XContentParser;\n-import org.elasticsearch.common.xcontent.json.JsonXContent;\n-import org.elasticsearch.index.IndexService;\n-import org.elasticsearch.search.aggregations.MultiBucketConsumerService.MultiBucketConsumer;\n-import org.elasticsearch.search.aggregations.support.AggregationContext.ProductionAggregationContext;\n-import org.elasticsearch.test.ESSingleNodeTestCase;\n+import org.apache.lucene.index.DirectoryReader;\n+import org.apache.lucene.index.LeafReaderContext;\n+import org.apache.lucene.index.RandomIndexWriter;\n+import org.apache.lucene.search.IndexSearcher;\n+import org.apache.lucene.store.Directory;\n+import org.elasticsearch.index.mapper.KeywordFieldMapper.KeywordFieldType;\n+import org.elasticsearch.script.AggregationScript;\n+import org.elasticsearch.script.Script;\n+import org.elasticsearch.script.ScriptService;\n+import org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.TopHitsAggregationBuilder;\n \n import java.io.IOException;\n \n+import static org.mockito.Matchers.any;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n-public class AggregationCollectorTests extends ESSingleNodeTestCase {\n+public class AggregationCollectorTests extends AggregatorTestCase {\n+    public void testTermsDoesntNeedScores() throws IOException {\n+        assertFalse(needsScores(termsBuilder().field(\"f\")));\n+    }\n+\n+    public void testSubTermsDoesntNeedScores() throws IOException {\n+        assertFalse(needsScores(termsBuilder().field(\"f\").subAggregation(new TermsAggregationBuilder(\"i\").field(\"f\"))));\n+    }\n+\n+    public void testScriptDoesntNeedScoresIfScriptDoesntNeedScores() throws IOException {\n+        assertFalse(needsScores(termsBuilder().script(new Script(\"no_scores\"))));\n+    }\n+\n+    public void testScriptNeedsScoresIfScriptNeedsScores() throws IOException {\n+        assertTrue(needsScores(termsBuilder().script(new Script(\"with_scores\"))));\n+    }\n \n-    public void testNeedsScores() throws Exception {\n-        IndexService index = createIndex(\"idx\");\n-        client().prepareIndex(\"idx\").setId(\"1\").setSource(\"f\", 5).execute().get();\n-        client().admin().indices().prepareRefresh(\"idx\").get();\n+    public void testSubScriptDoesntNeedScoresIfSubScriptDoesntNeedScores() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce63f67d7609b8da8bca1fbe44ef26e3ecb1eb05"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a36eef9911d964afd08202054cedf548707a60af", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/a36eef9911d964afd08202054cedf548707a60af", "committedDate": "2020-12-09T18:57:57Z", "message": "Merge branch 'master' into drop_shameful_ctor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "954c0800b5d9331c350a9994b68fad1881eb598e", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/954c0800b5d9331c350a9994b68fad1881eb598e", "committedDate": "2020-12-09T19:14:55Z", "message": "Shorten names"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4759, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}