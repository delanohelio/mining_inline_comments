{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODA5MTA3", "number": 52225, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOToyMTozNFrODhMLVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOToyMTozNFrODhMLVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTI5MTA5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceRegistry.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOToyMTozNFrOFr0YMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMDozMjoyOVrOFr2mDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ5MTI0OQ==", "bodyText": "Out of curiosity, what would happen if an agg registered \"any\" as well as a specific type?", "url": "https://github.com/elastic/elasticsearch/pull/52225#discussion_r381491249", "createdAt": "2020-02-19T19:21:34Z", "author": {"login": "polyfractal"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceRegistry.java", "diffHunk": "@@ -103,6 +103,19 @@ public void register(String aggregationName, List<ValuesSourceType> valuesSource\n         }, aggregatorSupplier);\n     }\n \n+    /**\n+     * Register an aggregator that applies to any values source type.  This is a convenience method for aggregations that do not care at all\n+     * about the types of their inputs.  Aggregations using this version of registration should not make any other registrations, as the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a0aa06c0e573b18dd5fcf58caf95aeef36c244"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUyNzU2Nw==", "bodyText": "It's ordered, so if the aggregation called registerAny first, that would always be used.  Otherwise, it would have both.  Also, plugins are always registered after core, so if an aggregation calls registerAny in core, whatever a plugin registers for it will never be reached.\nregisterAny is really only intended to be used for things that are totally values source agnostic, like ValueCount here.  We could add some defense to reject the any if there's something already registered, but it's harder to check in the other direction.  I suppose we could add a flag for it, but that seems way too special case.", "url": "https://github.com/elastic/elasticsearch/pull/52225#discussion_r381527567", "createdAt": "2020-02-19T20:32:29Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceRegistry.java", "diffHunk": "@@ -103,6 +103,19 @@ public void register(String aggregationName, List<ValuesSourceType> valuesSource\n         }, aggregatorSupplier);\n     }\n \n+    /**\n+     * Register an aggregator that applies to any values source type.  This is a convenience method for aggregations that do not care at all\n+     * about the types of their inputs.  Aggregations using this version of registration should not make any other registrations, as the", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ5MTI0OQ=="}, "originalCommit": {"oid": "f2a0aa06c0e573b18dd5fcf58caf95aeef36c244"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4766, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}