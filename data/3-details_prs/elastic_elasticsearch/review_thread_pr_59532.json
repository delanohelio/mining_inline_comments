{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4ODYyMDYy", "number": 59532, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMzoxMDo0NFrOEOQE4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo0NTozMFrOEOkRhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzc4OTEzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMzoxMDo0NFrOGxS-Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMzoxMDo0NFrOGxS-Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM0NDIxMQ==", "bodyText": "We can remove this in master because we're checking against version 7.6 in that method.", "url": "https://github.com/elastic/elasticsearch/pull/59532#discussion_r454344211", "createdAt": "2020-07-14T13:10:44Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java", "diffHunk": "@@ -365,11 +401,7 @@ private boolean assertConsistent() {\n         public ShardSnapshotStatus(StreamInput in) throws IOException {\n             nodeId = in.readOptionalString();\n             state = ShardState.fromValue(in.readByte());\n-            if (SnapshotsService.useShardGenerations(in.getVersion())) {\n-                generation = in.readOptionalString();\n-            } else {\n-                generation = null;\n-            }\n+            generation = in.readOptionalString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c402d43cc290b9e446bedae1d0a68ee9578ac446"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzA5NzkzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo0NToyNFrOGxyROw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo0NToyNFrOGxyROw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1NzAxOQ==", "bodyText": "Can we add unit tests for this?", "url": "https://github.com/elastic/elasticsearch/pull/59532#discussion_r454857019", "createdAt": "2020-07-15T07:45:24Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java", "diffHunk": "@@ -678,6 +679,25 @@ public final Boolean readOptionalBoolean() throws IOException {\n         return (Map<String, Object>) readGenericValue();\n     }\n \n+    /**\n+     * Read {@link ImmutableOpenMap} using given key and value readers.\n+     *\n+     * @param keyReader   key reader\n+     * @param valueReader value reader\n+     */\n+    public <K, V> ImmutableOpenMap<K, V> readImmutableMap(Writeable.Reader<K> keyReader, Writeable.Reader<V> valueReader)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c402d43cc290b9e446bedae1d0a68ee9578ac446"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzA5ODI5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo0NTozMFrOGxyRdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo0NTozMFrOGxyRdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1NzA3Nw==", "bodyText": "Can we add unit tests for this?", "url": "https://github.com/elastic/elasticsearch/pull/59532#discussion_r454857077", "createdAt": "2020-07-15T07:45:30Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java", "diffHunk": "@@ -600,6 +602,28 @@ public void writeMapWithConsistentOrder(@Nullable Map<String, ? extends Object>\n         }\n     }\n \n+    /**\n+     * Write a {@link ImmutableOpenMap} of {@code K}-type keys to {@code V}-type.\n+     *\n+     * @param keyWriter The key writer\n+     * @param valueWriter The value writer\n+     */\n+    public final <K, V> void writeMap(final ImmutableOpenMap<K, V> map, final Writer<K> keyWriter, final Writer<V> valueWriter)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c402d43cc290b9e446bedae1d0a68ee9578ac446"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2408, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}