{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0Mzk0NDI1", "number": 57273, "title": "Group docIds by segment in FetchPhase to better use LRU cache", "bodyText": "Currently, the doc-ids array in FetchPhase is unordered. Suppose there are 6 docs in 3 segments A, B, and C in a one-node cluster and the fetch order of segments to be A, B, C, B, C, A. It couldn't make good use of system cache because the cache of Segment A that is loaded from disk at the first time will be overwritten by Segment B, C or other read operations.  The second fetch action of Segment A still needs to read data from disk and doesn't make good use of System cache.\nThis PR optimizes this issue by grouping doc-ids by segment. We have verified it with range query, the fetch performance would be better than before.", "createdAt": "2020-05-28T10:27:36Z", "url": "https://github.com/elastic/elasticsearch/pull/57273", "merged": true, "mergeCommit": {"oid": "fa192a7cec10056aef774fa2b6a8851c68b23c68"}, "closed": true, "closedAt": "2020-06-30T07:26:38Z", "author": {"login": "boicehuang"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclo8o5gH2gAyNDI0Mzk0NDI1OjY1MTMyZGZkOWJmMWY3MWExN2NjMmJlMjAzMzgzNmJiMGI5ZjNiZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwQdstAFqTQzOTczODU1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "65132dfd9bf1f71a17cc2be2033836bb0b9f3bfc", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/65132dfd9bf1f71a17cc2be2033836bb0b9f3bfc", "committedDate": "2020-05-28T07:43:43Z", "message": "Group docIds by segment in FetchPhase to better use LRU cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDI1NjAw", "url": "https://github.com/elastic/elasticsearch/pull/57273#pullrequestreview-420025600", "createdAt": "2020-05-28T11:43:22Z", "commit": {"oid": "65132dfd9bf1f71a17cc2be2033836bb0b9f3bfc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMTo0MzoyM1rOGbxYKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMTo0MzoyM1rOGbxYKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3MzczNw==", "bodyText": "We could sort the doc ids to load once and move the LeafReaderContext while iterating ? In fact that's what we do already in FetchDocValuesPhase and other fetch sub-phases. Sorting the doc ids would remove the need to sort hits on every sub-phase.", "url": "https://github.com/elastic/elasticsearch/pull/57273#discussion_r431773737", "createdAt": "2020-05-28T11:43:23Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java", "diffHunk": "@@ -140,31 +142,47 @@ public void execute(SearchContext context) {\n         }\n \n         try {\n-            SearchHit[] hits = new SearchHit[context.docIdsToLoadSize()];\n-            FetchSubPhase.HitContext hitContext = new FetchSubPhase.HitContext();\n+            // group docIds by segment in order to better use LRU cache\n+            Map<Integer, List<Integer>> segmentTasks = new HashMap<>();\n+            Map<Integer, Integer> docIdToIndex = new HashMap<>();\n             for (int index = 0; index < context.docIdsToLoadSize(); index++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65132dfd9bf1f71a17cc2be2033836bb0b9f3bfc"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0545448210e5a8912b5250d6e5da33f99f617ce1", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/0545448210e5a8912b5250d6e5da33f99f617ce1", "committedDate": "2020-05-29T15:15:26Z", "message": "Sort docIdsToLoad once instead of in each sub-phase."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0a615fb1d4b16599555bc89614760f2733cc299", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/c0a615fb1d4b16599555bc89614760f2733cc299", "committedDate": "2020-06-01T04:05:54Z", "message": "Merge remote-tracking branch 'upstream/master' into fetch_optimize"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1OTYzNTkx", "url": "https://github.com/elastic/elasticsearch/pull/57273#pullrequestreview-425963591", "createdAt": "2020-06-08T07:10:27Z", "commit": {"oid": "c0a615fb1d4b16599555bc89614760f2733cc299"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bb36b112b0c86174d85a0bd58714d6389dc2315", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/8bb36b112b0c86174d85a0bd58714d6389dc2315", "committedDate": "2020-06-08T08:37:08Z", "message": "Merge remote-tracking branch 'upstream/master' into fetch_optimize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84856d52cd21fd0c53188c391d8af9878872cb06", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/84856d52cd21fd0c53188c391d8af9878872cb06", "committedDate": "2020-06-08T09:15:03Z", "message": "Add a comment in FetchSubPhase#hitsExecute"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MjcyMzY2", "url": "https://github.com/elastic/elasticsearch/pull/57273#pullrequestreview-426272366", "createdAt": "2020-06-08T14:00:28Z", "commit": {"oid": "84856d52cd21fd0c53188c391d8af9878872cb06"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "212df2afeaf340787290c821ee9e71a3457fa53d", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/212df2afeaf340787290c821ee9e71a3457fa53d", "committedDate": "2020-06-14T07:48:57Z", "message": "Use an ArrayList to store indexes of duplicate ids"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNDgyMjQ3", "url": "https://github.com/elastic/elasticsearch/pull/57273#pullrequestreview-430482247", "createdAt": "2020-06-15T09:41:33Z", "commit": {"oid": "212df2afeaf340787290c821ee9e71a3457fa53d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwOTo0MTozM1rOGjqyqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwOTo0MzozMFrOGjq3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA1NDQ0Mw==", "bodyText": "You can retrieve the array list once ?", "url": "https://github.com/elastic/elasticsearch/pull/57273#discussion_r440054443", "createdAt": "2020-06-15T09:41:33Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java", "diffHunk": "@@ -161,7 +177,10 @@ public void execute(SearchContext context) {\n                         storedToRequestedFields, subReaderContext);\n                 }\n \n-                hits[index] = searchHit;\n+                sortedHits[index] = searchHit;\n+                for (int i = 0; i < docIdToIndex.get(docId).size(); i++) {\n+                    hits[docIdToIndex.get(docId).get(i)] = searchHit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "212df2afeaf340787290c821ee9e71a3457fa53d"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA1NTYwNw==", "bodyText": "I wonder if it'd be better to use a static inner class and a custom comparator ?", "url": "https://github.com/elastic/elasticsearch/pull/57273#discussion_r440055607", "createdAt": "2020-06-15T09:43:30Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java", "diffHunk": "@@ -140,13 +142,27 @@ public void execute(SearchContext context) {\n         }\n \n         try {\n+            int[] sortedDocIds = Arrays.copyOfRange(context.docIdsToLoad(), context.docIdsToLoadFrom(), context.docIdsToLoadSize());\n+            Arrays.sort(sortedDocIds);\n+\n+            // preserve the original order of hits in inverted index\n+            Map<Integer, ArrayList<Integer>> docIdToIndex = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "212df2afeaf340787290c821ee9e71a3457fa53d"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDQ5Njgx", "url": "https://github.com/elastic/elasticsearch/pull/57273#pullrequestreview-431049681", "createdAt": "2020-06-15T23:02:31Z", "commit": {"oid": "212df2afeaf340787290c821ee9e71a3457fa53d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMzowMjozMVrOGkFkRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMzowMjozMVrOGkFkRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5MzEyNw==", "bodyText": "It would be nice if these fetch sub phases, which implement hitsExecute (plural), could also benefit from locality. Currently they each loop through the hits array separately, so any cached data from processing a hit may be lost by the time the next fetch phase is run.\nI think this is a distinct idea from this PR though, I filed the separate issue #58155.", "url": "https://github.com/elastic/elasticsearch/pull/57273#discussion_r440493127", "createdAt": "2020-06-15T23:02:31Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java", "diffHunk": "@@ -172,7 +191,7 @@ public void execute(SearchContext context) {\n             }\n \n             for (FetchSubPhase fetchSubPhase : fetchSubPhases) {\n-                fetchSubPhase.hitsExecute(context, hits);\n+                fetchSubPhase.hitsExecute(context, sortedHits);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "212df2afeaf340787290c821ee9e71a3457fa53d"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7afbd2f04aae19970f97101298a1b538466d0b1d", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/7afbd2f04aae19970f97101298a1b538466d0b1d", "committedDate": "2020-06-17T02:24:13Z", "message": "Removed unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50d0c6ee752f0a0767f384b905b7af845aa7452e", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/50d0c6ee752f0a0767f384b905b7af845aa7452e", "committedDate": "2020-06-17T03:12:05Z", "message": "Merge remote-tracking branch 'upstream/master' into fetch_optimize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1e512d7bbb4932467ced88e9fc08edf3ff48ef8", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/b1e512d7bbb4932467ced88e9fc08edf3ff48ef8", "committedDate": "2020-06-17T13:16:09Z", "message": "Preserve the original order of hits in comparator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f61067ddcc30e893c0d829f99af50b9ffe2cdad6", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/f61067ddcc30e893c0d829f99af50b9ffe2cdad6", "committedDate": "2020-06-17T15:20:21Z", "message": "Merge remote-tracking branch 'upstream/master' into fetch_optimize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17b892b26148f590723f5b14da8c456c989062bc", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/17b892b26148f590723f5b14da8c456c989062bc", "committedDate": "2020-06-17T16:45:29Z", "message": "fix preservation of the original order of hits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjIzNzY4", "url": "https://github.com/elastic/elasticsearch/pull/57273#pullrequestreview-432623768", "createdAt": "2020-06-17T17:33:10Z", "commit": {"oid": "17b892b26148f590723f5b14da8c456c989062bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzozMzoxMVrOGlQAUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzozMzoxMVrOGlQAUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcxMjcyMQ==", "bodyText": "Sorry I wasn't clear. I was more thinking of something like this:\nstatic class DocIdAndIndex implements Comparable<DocIdAndIndex> {\n        final int docId;\n        final int index;\n\n        DocIdAndIndex(int docId, int index) {\n            this.docId = docId;\n            this.index = index;\n        }\n\n\n        @Override\n        public int compareTo(DocIdAndIndex o) {\n            return Integer.compare(docId, o.docId);\n        }\n}\n....\n  DocIdAndIndex[] docs = new DocIdAndIndex[context.docIdsToLoadSize()]; \n  for (int index = 0; index < context.docIdsToLoadSize(); index++) {\n    docs[index] = new DocIdAndIndex(context.docIdsToLoad()[context.docIdsToLoadFrom() + index], index);\n  }\n  Arrays.sort(docs)\n\nYou can then use docs to retrieve the original index and you don't have the array twice ?", "url": "https://github.com/elastic/elasticsearch/pull/57273#discussion_r441712721", "createdAt": "2020-06-17T17:33:11Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java", "diffHunk": "@@ -140,13 +143,17 @@ public void execute(SearchContext context) {\n         }\n \n         try {\n+            int[] docIds = Arrays.copyOfRange(context.docIdsToLoad(), context.docIdsToLoadFrom(), context.docIdsToLoadSize());\n+            int[] sortedDocIds = docIds.clone();\n+            Arrays.sort(sortedDocIds);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17b892b26148f590723f5b14da8c456c989062bc"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0e3f35a094846617ded75c19cbc1512e8d49d45", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/d0e3f35a094846617ded75c19cbc1512e8d49d45", "committedDate": "2020-06-27T14:22:12Z", "message": "Use a custom comparator to retrieve the original index"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6f8a8e5a06c46a02692cb2e5cb830770db59c91", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/c6f8a8e5a06c46a02692cb2e5cb830770db59c91", "committedDate": "2020-06-28T02:10:00Z", "message": "removed unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79ccfee63d0135022c6912bd967e718fc92a5ad1", "author": {"user": {"login": "boicehuang", "name": "Boice Huang"}}, "url": "https://github.com/elastic/elasticsearch/commit/79ccfee63d0135022c6912bd967e718fc92a5ad1", "committedDate": "2020-06-28T03:13:35Z", "message": "Merge remote-tracking branch 'upstream/master' into fetch_optimize"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzM4NTU0", "url": "https://github.com/elastic/elasticsearch/pull/57273#pullrequestreview-439738554", "createdAt": "2020-06-30T07:25:22Z", "commit": {"oid": "79ccfee63d0135022c6912bd967e718fc92a5ad1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4099, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}