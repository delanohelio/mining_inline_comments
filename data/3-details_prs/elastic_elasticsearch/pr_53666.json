{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5ODcxMTI4", "number": 53666, "title": "Initial data stream commit", "bodyText": "This commits adds a data stream feature flag, initial definition of a data stream and\nthe stubs for the data stream create, delete and get APIs. Also simple serialization\ntests are added and a rest test to test the data stream API stubs.\nThis is a large amount of code and mainly mechanical, but this commit should be\nstraightforward to review, because there isn't any real logic.\nThe data stream transport and rest action are behind the data stream feature flag and\nare only intialized if the feature flag is enabled. The feature flag is enabled if\nelasticsearch is build as snapshot or a release build and the\n'es.datastreams_feature_flag_registered' is enabled.\nThe integ-test-zip sets the feature flag if building a release build, otherwise\nrest tests would fail.\nRelates to #53100", "createdAt": "2020-03-17T14:28:59Z", "url": "https://github.com/elastic/elasticsearch/pull/53666", "merged": true, "mergeCommit": {"oid": "12046084f98721efc8b86b95ce0651ef99b46577"}, "closed": true, "closedAt": "2020-03-20T10:22:19Z", "author": {"login": "martijnvg"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOji_TgH2gAyMzg5ODcxMTI4OmI1MzdlNTk2ODk0NWJkMWY4NzQyZDViZDMxNzAyM2NkOGI0OGIxYWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPcyHvAH2gAyMzg5ODcxMTI4OjllNTg0ODhjNmMyODAyZDliMTQyYWRiYmRiMDQ3MTg1YjU4MjQyZGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b537e5968945bd1f8742d5bd317023cd8b48b1ac", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/b537e5968945bd1f8742d5bd317023cd8b48b1ac", "committedDate": "2020-03-17T14:25:55Z", "message": "Initial data stream commit\n\nThis commits adds a data stream feature flag, initial definition of a data stream and\nthe stubs for the data stream create, delete and get APIs. Also simple serialization\ntests are added and a rest test to thest the data stream API stubs.\n\nThis is a large amount of code and mainly mechanical, but this commit should be\nstraightforward to review, because there isn't any real logic.\n\nThe data stream transport and rest action are behind the data stream feature flag and\nare only intialized if the feature flag is enabled. The feature flag is enabled if\nelasticsearch is build as snapshot or a release build and the\n'es.datastreams_feature_flag_registered' is enabled.\n\nThe integ-test-zip sets the feature flag if building a release build, otherwise\nrest tests would fail.\n\nRelates to #53100"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9665ea973a87e389d2d468889408ed6faf756980", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/9665ea973a87e389d2d468889408ed6faf756980", "committedDate": "2020-03-17T16:30:02Z", "message": "fixed hlrc test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7200c7c02f1341e3f6cce241973fdf45e9d72f8", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/f7200c7c02f1341e3f6cce241973fdf45e9d72f8", "committedDate": "2020-03-17T16:31:21Z", "message": "ignore bwc until this change has been backported to 7.x branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e362eeb669b8d20a6bede467155c6a832e1bf1ad", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/e362eeb669b8d20a6bede467155c6a832e1bf1ad", "committedDate": "2020-03-17T18:43:26Z", "message": "changed data stream apis to be a cluster based action.\n\nbefore this commit the data steams api were indices based actions,\nbut data streams aren't indices, data streams encapsulates indices,\nbut are indices themselves. It is a cluster level attribute, and\ntherefor cluster based action fits best for now.\n\nPerhaps in the future we will have data stream based actions and\nthen this would be a right fit for the data stream crud apis."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c22f72413f02e91657181cd5d095e3abe123835", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/7c22f72413f02e91657181cd5d095e3abe123835", "committedDate": "2020-03-17T18:50:28Z", "message": "this should have been part of the previous commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee721c3ae91a235f3acecf42789587e21e418aeb", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/ee721c3ae91a235f3acecf42789587e21e418aeb", "committedDate": "2020-03-17T20:33:20Z", "message": "fixed yaml test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODIzMzQ5", "url": "https://github.com/elastic/elasticsearch/pull/53666#pullrequestreview-376823349", "createdAt": "2020-03-18T12:39:42Z", "commit": {"oid": "ee721c3ae91a235f3acecf42789587e21e418aeb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2OTI0NDg0", "url": "https://github.com/elastic/elasticsearch/pull/53666#pullrequestreview-376924484", "createdAt": "2020-03-18T14:36:08Z", "commit": {"oid": "ee721c3ae91a235f3acecf42789587e21e418aeb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDozNjowOFrOF4H5iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDozNjowOFrOF4H5iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM5Mzk5Mw==", "bodyText": "Do we need to read the optional indices field here for creating a data stream with existing indices?", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r394393993", "createdAt": "2020-03-18T14:36:08Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/datastream/CreateDataStreamAction.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.action.admin.cluster.datastream;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.ActionRequestValidationException;\n+import org.elasticsearch.action.ActionType;\n+import org.elasticsearch.action.support.ActionFilters;\n+import org.elasticsearch.action.support.master.AcknowledgedResponse;\n+import org.elasticsearch.action.support.master.MasterNodeRequest;\n+import org.elasticsearch.action.support.master.TransportMasterNodeAction;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.block.ClusterBlockException;\n+import org.elasticsearch.cluster.block.ClusterBlockLevel;\n+import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.tasks.Task;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.elasticsearch.transport.TransportService;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+public class CreateDataStreamAction extends ActionType<AcknowledgedResponse> {\n+\n+    public static final CreateDataStreamAction INSTANCE = new CreateDataStreamAction();\n+    public static final String NAME = \"cluster:admin/data_stream/create\";\n+\n+    private CreateDataStreamAction() {\n+        super(NAME, AcknowledgedResponse::new);\n+    }\n+\n+    public static class Request extends MasterNodeRequest<Request> {\n+\n+        private final String name;\n+        private String timestampFieldName;\n+\n+        public Request(String name) {\n+            this.name = name;\n+        }\n+\n+        public void setTimestampFieldName(String timestampFieldName) {\n+            this.timestampFieldName = timestampFieldName;\n+        }\n+\n+        @Override\n+        public ActionRequestValidationException validate() {\n+            return null;\n+        }\n+\n+        public Request(StreamInput in) throws IOException {\n+            super(in);\n+            this.name = in.readString();\n+            this.timestampFieldName = in.readString();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee721c3ae91a235f3acecf42789587e21e418aeb"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9ce4cdcbc530679c0416b4d7bf0483e83767f13", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/f9ce4cdcbc530679c0416b4d7bf0483e83767f13", "committedDate": "2020-03-18T16:05:15Z", "message": "Also add feature flag in other modules that run the yaml test if a release build is executed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3OTAxNzEw", "url": "https://github.com/elastic/elasticsearch/pull/53666#pullrequestreview-377901710", "createdAt": "2020-03-19T16:43:11Z", "commit": {"oid": "f9ce4cdcbc530679c0416b4d7bf0483e83767f13"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjo0MzoxMVrOF43IIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzowMzo1MlrOF43_tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE2Nzc3Ng==", "bodyText": "I wonder if this name should be: data_streams.create to be consistent with indices.create?\nOther cluster operations seems to be mostly about the cluster state and cluster settings.", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r395167776", "createdAt": "2020-03-19T16:43:11Z", "author": {"login": "henningandersen"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/api/cluster.create_data_stream.json", "diffHunk": "@@ -0,0 +1,31 @@\n+{\n+  \"cluster.create_data_stream\":{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ce4cdcbc530679c0416b4d7bf0483e83767f13"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE2ODE3Ng==", "bodyText": "data_streams.delete?", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r395168176", "createdAt": "2020-03-19T16:43:45Z", "author": {"login": "henningandersen"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/api/cluster.delete_data_stream.json", "diffHunk": "@@ -0,0 +1,26 @@\n+{\n+  \"cluster.delete_data_stream\":{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ce4cdcbc530679c0416b4d7bf0483e83767f13"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE2ODMyNg==", "bodyText": "data_streams.get?", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r395168326", "createdAt": "2020-03-19T16:43:59Z", "author": {"login": "henningandersen"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/api/cluster.get_data_streams.json", "diffHunk": "@@ -0,0 +1,33 @@\n+{\n+  \"cluster.get_data_streams\":{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ce4cdcbc530679c0416b4d7bf0483e83767f13"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE3MzEzOA==", "bodyText": "I think most places where we ask for a field, we use just \"field\" and not \"field_name\". I did not search all usages, but I think this should be just timestamp_field.", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r395173138", "createdAt": "2020-03-19T16:50:56Z", "author": {"login": "henningandersen"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/cluster.data_stream/10_basic.yml", "diffHunk": "@@ -0,0 +1,26 @@\n+---\n+\"Test stubs\":\n+  - skip:\n+      version: \" - 7.99.99\"\n+      reason: not backported yet\n+\n+  - do:\n+      cluster.create_data_stream:\n+        name: data-stream2\n+        body:\n+          timestamp_field_name: \"@timestamp\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ce4cdcbc530679c0416b4d7bf0483e83767f13"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE3NTkwNA==", "bodyText": "I think we should move this outside the cluster package? So datastream is a sibling to indices.\nWe might also want to follow the same substructure by adding create package now? Probably easiest to split into subpackages early.", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r395175904", "createdAt": "2020-03-19T16:54:55Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/datastream/CreateDataStreamAction.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.action.admin.cluster.datastream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ce4cdcbc530679c0416b4d7bf0483e83767f13"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE3NzU2NQ==", "bodyText": "I am in doubt if we should not add a specific prefix here? No need to look at this now, we can pick that up later.", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r395177565", "createdAt": "2020-03-19T16:57:17Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/datastream/CreateDataStreamAction.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.action.admin.cluster.datastream;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.ActionRequestValidationException;\n+import org.elasticsearch.action.ActionType;\n+import org.elasticsearch.action.support.ActionFilters;\n+import org.elasticsearch.action.support.master.AcknowledgedResponse;\n+import org.elasticsearch.action.support.master.MasterNodeRequest;\n+import org.elasticsearch.action.support.master.TransportMasterNodeAction;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.block.ClusterBlockException;\n+import org.elasticsearch.cluster.block.ClusterBlockLevel;\n+import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.tasks.Task;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.elasticsearch.transport.TransportService;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+public class CreateDataStreamAction extends ActionType<AcknowledgedResponse> {\n+\n+    public static final CreateDataStreamAction INSTANCE = new CreateDataStreamAction();\n+    public static final String NAME = \"cluster:admin/data_stream/create\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ce4cdcbc530679c0416b4d7bf0483e83767f13"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4MDkwNg==", "bodyText": "Same story as for the action names. We should consider whether to include this under indices or under a new \"client\" interface? Will add to our weekly sync, this should not block merging this.", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r395180906", "createdAt": "2020-03-19T17:02:13Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/client/support/AbstractClient.java", "diffHunk": "@@ -1185,6 +1188,36 @@ public DeleteStoredScriptRequestBuilder prepareDeleteStoredScript(){\n         public DeleteStoredScriptRequestBuilder prepareDeleteStoredScript(String id){\n             return prepareDeleteStoredScript().setId(id);\n         }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ce4cdcbc530679c0416b4d7bf0483e83767f13"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4MjAwNA==", "bodyText": "Rename to DataStreamMetaData (like IndexMetaData)?", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r395182004", "createdAt": "2020-03-19T17:03:52Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.cluster.metadata;\n+\n+import org.elasticsearch.cluster.AbstractDiffable;\n+import org.elasticsearch.cluster.Diff;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public final class DataStream extends AbstractDiffable<DataStream> implements ToXContentObject {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ce4cdcbc530679c0416b4d7bf0483e83767f13"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6586d7c35734fdc8c2446bdc4517685b3babfbd8", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/6586d7c35734fdc8c2446bdc4517685b3babfbd8", "committedDate": "2020-03-19T20:02:02Z", "message": "Reverted the commits that make data stream a cluster based api\n\nThis reverts commit e362eeb669b8d20a6bede467155c6a832e1bf1ad."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7130a27a40557ec07594d8c0bbc8091cab3e2d38", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/7130a27a40557ec07594d8c0bbc8091cab3e2d38", "committedDate": "2020-03-19T21:40:30Z", "message": "Make data stream crud apis work like a indices based api."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce73ee8291a398dffdbc34548d35feb6008e9998", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/ce73ee8291a398dffdbc34548d35feb6008e9998", "committedDate": "2020-03-19T21:49:00Z", "message": "renamed timestamp field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53c8fd46b159cd491d39f148af8e3d70ac50aed2", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/53c8fd46b159cd491d39f148af8e3d70ac50aed2", "committedDate": "2020-03-20T07:57:25Z", "message": "Merge remote-tracking branch 'es/master' into data-streams-start"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b133074999393f10b0c6f854493157da31a4d1b6", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/b133074999393f10b0c6f854493157da31a4d1b6", "committedDate": "2020-03-20T08:07:59Z", "message": "fixed compile error after merging in master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4Mjk2NzY5", "url": "https://github.com/elastic/elasticsearch/pull/53666#pullrequestreview-378296769", "createdAt": "2020-03-20T08:27:20Z", "commit": {"oid": "7130a27a40557ec07594d8c0bbc8091cab3e2d38"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODoyNzoyMFrOF5K6Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODo0MDoyN1rOF5LP-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5MTg1OQ==", "bodyText": "Maybe add a todo to help the next reader until resolved? Something like:\n// todo: hack until we implement security of data_streams", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r395491859", "createdAt": "2020-03-20T08:27:20Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/ClusterPrivilegeResolver.java", "diffHunk": "@@ -193,7 +193,9 @@ public static NamedClusterPrivilege resolve(String name) {\n     }\n \n     public static boolean isClusterAction(String actionName) {\n-        return actionName.startsWith(\"cluster:\") || actionName.startsWith(\"indices:admin/template/\");\n+        return actionName.startsWith(\"cluster:\") ||\n+            actionName.startsWith(\"indices:admin/template/\") ||\n+            actionName.startsWith(\"indices:admin/data_stream/\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7130a27a40557ec07594d8c0bbc8091cab3e2d38"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5NjUxOA==", "bodyText": "OK. I think I imagined a more native integration into the MetaData (outside Custom). I think the primary purpose of Custom is for extensibility (x-pack/plugins/modules)? In particular, I think MetaData.getAliasAndIndexLookup will need some support of data-streams? It could still look for the Custom metadata pieces, but feels second-class.\nLet us leave this as is for now and tackle above when we get to add the metadata and do the lookups.", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r395496518", "createdAt": "2020-03-20T08:38:07Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.cluster.metadata;\n+\n+import org.elasticsearch.cluster.AbstractDiffable;\n+import org.elasticsearch.cluster.Diff;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public final class DataStream extends AbstractDiffable<DataStream> implements ToXContentObject {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4MjAwNA=="}, "originalCommit": {"oid": "f9ce4cdcbc530679c0416b4d7bf0483e83767f13"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5NzQ2NQ==", "bodyText": "I think the rest classes should move to org.elasticsearch.rest.action.admin.datastreams? Or org.elasticsearch.rest.action.admin.indices.datastream?", "url": "https://github.com/elastic/elasticsearch/pull/53666#discussion_r395497465", "createdAt": "2020-03-20T08:40:27Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestCreateDataStreamAction.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.rest.action.admin.cluster;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b133074999393f10b0c6f854493157da31a4d1b6"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56c58794a1e2c37067cedf696152604170133c26", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/56c58794a1e2c37067cedf696152604170133c26", "committedDate": "2020-03-20T08:48:56Z", "message": "fixed merge mistake"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ed4eeaa6ba3618210692ad593c08160d85bca23", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/1ed4eeaa6ba3618210692ad593c08160d85bca23", "committedDate": "2020-03-20T08:51:18Z", "message": "moved setting system property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e58488c6c2802d9b142adbbdb047185b58242df", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/9e58488c6c2802d9b142adbbdb047185b58242df", "committedDate": "2020-03-20T09:07:02Z", "message": "applied review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1958, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}