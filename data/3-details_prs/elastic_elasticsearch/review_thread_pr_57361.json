{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MTE1MzY2", "number": 57361, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDo0NjoyN1rOEA6-gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTowNjowOFrOEA7cgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDAxNzI5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDo0NjoyN1rOGcf8kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDowMjowOFrOGcqbKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzNjcyMA==", "bodyText": "Nit: Maybe run the formatter on this method declaration?", "url": "https://github.com/elastic/elasticsearch/pull/57361#discussion_r432536720", "createdAt": "2020-05-29T14:46:27Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -65,16 +69,17 @@\n     // first defined one.\n     // So currently for each instance of this aggregator the acceptedglobalValues will be computed, this is unnecessary\n     // especially if this agg is on a second layer or deeper.\n-    protected final LongPredicate acceptedGlobalOrdinals;\n-    protected final long valueCount;\n-    protected final GlobalOrdLookupFunction lookupGlobalOrd;\n+    private final LongPredicate acceptedGlobalOrdinals;\n+    private final long valueCount;\n+    private final GlobalOrdLookupFunction lookupGlobalOrd;\n     protected final CollectionStrategy collectionStrategy;\n \n     public interface GlobalOrdLookupFunction {\n         BytesRef apply(long ord) throws IOException;\n     }\n \n     public GlobalOrdinalsStringTermsAggregator(String name, AggregatorFactories factories,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f7d79eb49c5ec1697aa4f4cefc3725005137a03"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwODM5Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/57361#discussion_r432708393", "createdAt": "2020-05-29T20:02:08Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -65,16 +69,17 @@\n     // first defined one.\n     // So currently for each instance of this aggregator the acceptedglobalValues will be computed, this is unnecessary\n     // especially if this agg is on a second layer or deeper.\n-    protected final LongPredicate acceptedGlobalOrdinals;\n-    protected final long valueCount;\n-    protected final GlobalOrdLookupFunction lookupGlobalOrd;\n+    private final LongPredicate acceptedGlobalOrdinals;\n+    private final long valueCount;\n+    private final GlobalOrdLookupFunction lookupGlobalOrd;\n     protected final CollectionStrategy collectionStrategy;\n \n     public interface GlobalOrdLookupFunction {\n         BytesRef apply(long ord) throws IOException;\n     }\n \n     public GlobalOrdinalsStringTermsAggregator(String name, AggregatorFactories factories,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzNjcyMA=="}, "originalCommit": {"oid": "7f7d79eb49c5ec1697aa4f4cefc3725005137a03"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDA4MDIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTowMjoxOFrOGcgk_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDowMzo1MlrOGcqeOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NzA3MA==", "bodyText": "Nit: Since the syntax backing this is somewhat rare in aggs, maybe toss a quick comment here that we need the reference to this in order to construct the closure?  I figured it out, but did a double take when I first saw it.", "url": "https://github.com/elastic/elasticsearch/pull/57361#discussion_r432547070", "createdAt": "2020-05-29T15:02:18Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -87,6 +92,7 @@ public GlobalOrdinalsStringTermsAggregator(String name, AggregatorFactories fact\n                                                boolean showTermDocCountError,\n                                                Map<String, Object> metadata) throws IOException {\n         super(name, factories, context, parent, order, format, bucketCountThresholds, collectionMode, showTermDocCountError, metadata);\n+        this.resultStrategy = resultStrategy.apply(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f7d79eb49c5ec1697aa4f4cefc3725005137a03"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwOTE3Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/57361#discussion_r432709176", "createdAt": "2020-05-29T20:03:52Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -87,6 +92,7 @@ public GlobalOrdinalsStringTermsAggregator(String name, AggregatorFactories fact\n                                                boolean showTermDocCountError,\n                                                Map<String, Object> metadata) throws IOException {\n         super(name, factories, context, parent, order, format, bucketCountThresholds, collectionMode, showTermDocCountError, metadata);\n+        this.resultStrategy = resultStrategy.apply(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NzA3MA=="}, "originalCommit": {"oid": "7f7d79eb49c5ec1697aa4f4cefc3725005137a03"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDA5NDEwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTowNjowOFrOGcgt6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDowNjoxM1rOGcqidA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0OTM1NQ==", "bodyText": "Nit: maybe update the javadoc to say this can only be used for StandardTerms?", "url": "https://github.com/elastic/elasticsearch/pull/57361#discussion_r432549355", "createdAt": "2020-05-29T15:06:08Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -276,15 +227,14 @@ protected void doClose() {\n                        SubAggCollectionMode collectionMode,\n                        boolean showTermDocCountError,\n                        Map<String, Object> metadata) throws IOException {\n-            super(name, factories, valuesSource, order, format, bucketCountThresholds, null,\n+            super(name, factories, a -> a.new StandardTermsResults(), valuesSource, order, format, bucketCountThresholds, null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f7d79eb49c5ec1697aa4f4cefc3725005137a03"}, "originalPosition": 191}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMDI2MA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/57361#discussion_r432710260", "createdAt": "2020-05-29T20:06:13Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -276,15 +227,14 @@ protected void doClose() {\n                        SubAggCollectionMode collectionMode,\n                        boolean showTermDocCountError,\n                        Map<String, Object> metadata) throws IOException {\n-            super(name, factories, valuesSource, order, format, bucketCountThresholds, null,\n+            super(name, factories, a -> a.new StandardTermsResults(), valuesSource, order, format, bucketCountThresholds, null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0OTM1NQ=="}, "originalCommit": {"oid": "7f7d79eb49c5ec1697aa4f4cefc3725005137a03"}, "originalPosition": 191}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3780, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}