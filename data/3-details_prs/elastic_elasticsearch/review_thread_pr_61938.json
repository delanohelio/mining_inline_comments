{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NzU4Nzc0", "number": 61938, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToyNzoxN1rOEgT_Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODoxMDo1OFrOEhXDiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzE3Mzc5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/AbstractScriptFieldScript.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToyNzoxN1rOHNGk7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToyNzoxN1rOHNGk7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwMTI5Mw==", "bodyText": "this seems high", "url": "https://github.com/elastic/elasticsearch/pull/61938#discussion_r483501293", "createdAt": "2020-09-04T09:27:17Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/AbstractScriptFieldScript.java", "diffHunk": "@@ -27,6 +27,11 @@\n  * {@link AggregationScript} but hopefully with less historical baggage.\n  */\n public abstract class AbstractScriptFieldScript {\n+    /**\n+     * The maximum number of values a script should be allowed to emit.\n+     */\n+    public static final int MAX_VALUES = 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa21cfd90692579192da9519c78e846d5919924"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzE4MzgwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/StringScriptFieldScript.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTozMDoxNFrOHNGrBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTozMDoxNFrOHNGrBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwMjg1NQ==", "bodyText": "could the max values check be shared in the base class, and could we then unify the error message to something like \"Runtime field [field] is emitting [1500] values while the maximum number of values allowed is [1000]\"?", "url": "https://github.com/elastic/elasticsearch/pull/61938#discussion_r483502855", "createdAt": "2020-09-04T09:30:14Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/StringScriptFieldScript.java", "diffHunk": "@@ -49,12 +55,20 @@ public StringScriptFieldScript(Map<String, Object> params, SearchLookup searchLo\n      */\n     public final List<String> resultsForDoc(int docId) {\n         results.clear();\n+        chars = 0;\n         setDocument(docId);\n         execute();\n         return results;\n     }\n \n     protected final void emitValue(String v) {\n+        if (results.size() >= MAX_VALUES) {\n+            throw new IllegalArgumentException(\"too many runtime values\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa21cfd90692579192da9519c78e846d5919924"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzE4NzEwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/StringScriptFieldScript.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTozMToxMFrOHNGtDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTozMToxMFrOHNGtDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwMzM3Mg==", "bodyText": "Runtime field [field] is emitting [1500] characters while the maximum number of characters allowed is [1000]\"?", "url": "https://github.com/elastic/elasticsearch/pull/61938#discussion_r483503372", "createdAt": "2020-09-04T09:31:10Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/StringScriptFieldScript.java", "diffHunk": "@@ -49,12 +55,20 @@ public StringScriptFieldScript(Map<String, Object> params, SearchLookup searchLo\n      */\n     public final List<String> resultsForDoc(int docId) {\n         results.clear();\n+        chars = 0;\n         setDocument(docId);\n         execute();\n         return results;\n     }\n \n     protected final void emitValue(String v) {\n+        if (results.size() >= MAX_VALUES) {\n+            throw new IllegalArgumentException(\"too many runtime values\");\n+        }\n+        chars += v.length();\n+        if (chars >= MAX_CHARS) {\n+            throw new IllegalArgumentException(\"too many characters in runtime values [\" + chars + \"]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa21cfd90692579192da9519c78e846d5919924"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDE2MjAzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/AbstractScriptFieldScript.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODoxMDo1OFrOHOoi-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDo0NzozN1rOHPLDRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEwNjQyNw==", "bodyText": "is there a chance that we have some standard emitValue in the base class that calls this method? Otherwise all impls should call it but now only string does?", "url": "https://github.com/elastic/elasticsearch/pull/61938#discussion_r485106427", "createdAt": "2020-09-08T18:10:58Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/AbstractScriptFieldScript.java", "diffHunk": "@@ -93,5 +101,19 @@ public final void setDocument(int docId) {\n         return leafSearchLookup.doc();\n     }\n \n+    protected final void checkMaxSize(int currentSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5abb9995283c5b491fc8d9194198f91fe68dc9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyMTI4OQ==", "bodyText": "I don't think we can share a base class implementation, not without auto-boxing.", "url": "https://github.com/elastic/elasticsearch/pull/61938#discussion_r485121289", "createdAt": "2020-09-08T18:39:02Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/AbstractScriptFieldScript.java", "diffHunk": "@@ -93,5 +101,19 @@ public final void setDocument(int docId) {\n         return leafSearchLookup.doc();\n     }\n \n+    protected final void checkMaxSize(int currentSize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEwNjQyNw=="}, "originalCommit": {"oid": "bb5abb9995283c5b491fc8d9194198f91fe68dc9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ1MDk5Mw==", "bodyText": "ok, but scripts other than strings should also check for max size? or do they already do so and I have missed it?", "url": "https://github.com/elastic/elasticsearch/pull/61938#discussion_r485450993", "createdAt": "2020-09-09T08:56:40Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/AbstractScriptFieldScript.java", "diffHunk": "@@ -93,5 +101,19 @@ public final void setDocument(int docId) {\n         return leafSearchLookup.doc();\n     }\n \n+    protected final void checkMaxSize(int currentSize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEwNjQyNw=="}, "originalCommit": {"oid": "bb5abb9995283c5b491fc8d9194198f91fe68dc9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5NzM4Mw==", "bodyText": "I'd thought I was just going to do strings in the first PR and grab the others in a follow up one. But, yeah, they should all call this method. Well, booleans may not have to because we don't actually allocate anything when they emit values. They are probably safe being limited by painless's standard stuff.", "url": "https://github.com/elastic/elasticsearch/pull/61938#discussion_r485597383", "createdAt": "2020-09-09T13:09:06Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/AbstractScriptFieldScript.java", "diffHunk": "@@ -93,5 +101,19 @@ public final void setDocument(int docId) {\n         return leafSearchLookup.doc();\n     }\n \n+    protected final void checkMaxSize(int currentSize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEwNjQyNw=="}, "originalCommit": {"oid": "bb5abb9995283c5b491fc8d9194198f91fe68dc9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwNDUwMA==", "bodyText": "it seems easy enough to do them all in this PR, what do you think?", "url": "https://github.com/elastic/elasticsearch/pull/61938#discussion_r485604500", "createdAt": "2020-09-09T13:19:40Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/AbstractScriptFieldScript.java", "diffHunk": "@@ -93,5 +101,19 @@ public final void setDocument(int docId) {\n         return leafSearchLookup.doc();\n     }\n \n+    protected final void checkMaxSize(int currentSize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEwNjQyNw=="}, "originalCommit": {"oid": "bb5abb9995283c5b491fc8d9194198f91fe68dc9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwNzE4MA==", "bodyText": "I can give it a shot, sure!", "url": "https://github.com/elastic/elasticsearch/pull/61938#discussion_r485607180", "createdAt": "2020-09-09T13:23:28Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/AbstractScriptFieldScript.java", "diffHunk": "@@ -93,5 +101,19 @@ public final void setDocument(int docId) {\n         return leafSearchLookup.doc();\n     }\n \n+    protected final void checkMaxSize(int currentSize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEwNjQyNw=="}, "originalCommit": {"oid": "bb5abb9995283c5b491fc8d9194198f91fe68dc9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3MTc0OQ==", "bodyText": "I've pushed!", "url": "https://github.com/elastic/elasticsearch/pull/61938#discussion_r485671749", "createdAt": "2020-09-09T14:47:37Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/AbstractScriptFieldScript.java", "diffHunk": "@@ -93,5 +101,19 @@ public final void setDocument(int docId) {\n         return leafSearchLookup.doc();\n     }\n \n+    protected final void checkMaxSize(int currentSize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEwNjQyNw=="}, "originalCommit": {"oid": "bb5abb9995283c5b491fc8d9194198f91fe68dc9"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1716, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}