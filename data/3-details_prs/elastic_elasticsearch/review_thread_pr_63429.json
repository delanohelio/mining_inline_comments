{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5Mzg4ODc4", "number": 63429, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo1NjozNlrOErRZ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzo0MDo0NFrOErfFmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzODA5Mzc0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/runtime_fields/10_keyword.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo1NjozNlrOHd808w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzo0MToxNFrOHeRx6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE2NzM0Nw==", "bodyText": "I went with fairly simple integration tests for this instead of unit tests because it felt easier. I could go either way, but I think this gets the job done.", "url": "https://github.com/elastic/elasticsearch/pull/63429#discussion_r501167347", "createdAt": "2020-10-07T16:56:36Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/runtime_fields/10_keyword.yml", "diffHunk": "@@ -155,6 +155,21 @@ setup:\n   - match: {hits.total.value: 1}\n   - match: {hits.hits.0._source.voltage: 5.8}\n \n+---\n+\"explain term query\":\n+  - do:\n+      search:\n+        index: sensor\n+        explain: true\n+        body:\n+          query:\n+            term:\n+              day_of_week: Monday\n+  - match: {hits.hits.0._explanation.description: day_of_week:Monday}\n+  - match: {hits.hits.0._explanation.details.0.value: 1.0}\n+  - match: {hits.hits.0._explanation.details.0.description: 'runtime field query scoring boost'}\n+  - match: {hits.hits.0._explanation.details.0.details: []}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df80fdbb20ce53d2d5fb4c74f240de00e4a62a48"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxMDYzNQ==", "bodyText": "thats fine with me, maybe a small unit test for the lucene query would be also useful?", "url": "https://github.com/elastic/elasticsearch/pull/63429#discussion_r501510635", "createdAt": "2020-10-08T07:41:14Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/runtime_fields/10_keyword.yml", "diffHunk": "@@ -155,6 +155,21 @@ setup:\n   - match: {hits.total.value: 1}\n   - match: {hits.hits.0._source.voltage: 5.8}\n \n+---\n+\"explain term query\":\n+  - do:\n+      search:\n+        index: sensor\n+        explain: true\n+        body:\n+          query:\n+            term:\n+              day_of_week: Monday\n+  - match: {hits.hits.0._explanation.description: day_of_week:Monday}\n+  - match: {hits.hits.0._explanation.details.0.value: 1.0}\n+  - match: {hits.hits.0._explanation.details.0.description: 'runtime field query scoring boost'}\n+  - match: {hits.hits.0._explanation.details.0.details: []}\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE2NzM0Nw=="}, "originalCommit": {"oid": "df80fdbb20ce53d2d5fb4c74f240de00e4a62a48"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDMzNTYyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/runtime_fields/10_keyword.yml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzo0MDo0NFrOHeRwxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo0Nzo1OFrOHefdpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxMDM0Mg==", "bodyText": "I am being picky about the description: the boost is provided with a query right? I am wondering if the boost itself has anything special, specifically related to runtime fields. It feels to me that the boost is just a boost, what is special is that with runtime fields it's the only factor in scoring calculation. What I am getting to is that we could make the detail even clearer, probably. Thinking out loud: should we have two items in details, one that is a constant, that explains that the field is a runtime fields, and the other one that is the actual query boost?\nMaybe we should have a couple more tests around providing a boost with the query, and customizing the score with a script?", "url": "https://github.com/elastic/elasticsearch/pull/63429#discussion_r501510342", "createdAt": "2020-10-08T07:40:44Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/runtime_fields/10_keyword.yml", "diffHunk": "@@ -155,6 +155,21 @@ setup:\n   - match: {hits.total.value: 1}\n   - match: {hits.hits.0._source.voltage: 5.8}\n \n+---\n+\"explain term query\":\n+  - do:\n+      search:\n+        index: sensor\n+        explain: true\n+        body:\n+          query:\n+            term:\n+              day_of_week: Monday\n+  - match: {hits.hits.0._explanation.description: day_of_week:Monday}\n+  - match: {hits.hits.0._explanation.details.0.value: 1.0}\n+  - match: {hits.hits.0._explanation.details.0.description: 'runtime field query scoring boost'}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df80fdbb20ce53d2d5fb4c74f240de00e4a62a48"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcyOTY0NA==", "bodyText": "Your proposal for the details makes sense to me. I'll make that change. I'll add a test with a boost certainly. What are you thinking as far as scripting changing the score? I think we usually do that by wrapping the query in a script score, right?", "url": "https://github.com/elastic/elasticsearch/pull/63429#discussion_r501729644", "createdAt": "2020-10-08T13:41:11Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/runtime_fields/10_keyword.yml", "diffHunk": "@@ -155,6 +155,21 @@ setup:\n   - match: {hits.total.value: 1}\n   - match: {hits.hits.0._source.voltage: 5.8}\n \n+---\n+\"explain term query\":\n+  - do:\n+      search:\n+        index: sensor\n+        explain: true\n+        body:\n+          query:\n+            term:\n+              day_of_week: Monday\n+  - match: {hits.hits.0._explanation.description: day_of_week:Monday}\n+  - match: {hits.hits.0._explanation.details.0.value: 1.0}\n+  - match: {hits.hits.0._explanation.details.0.description: 'runtime field query scoring boost'}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxMDM0Mg=="}, "originalCommit": {"oid": "df80fdbb20ce53d2d5fb4c74f240de00e4a62a48"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTczNDgyMw==", "bodyText": "I think we usually do that by wrapping the query in a script score, right?\n\nyes that is what I meant", "url": "https://github.com/elastic/elasticsearch/pull/63429#discussion_r501734823", "createdAt": "2020-10-08T13:47:58Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/runtime_fields/10_keyword.yml", "diffHunk": "@@ -155,6 +155,21 @@ setup:\n   - match: {hits.total.value: 1}\n   - match: {hits.hits.0._source.voltage: 5.8}\n \n+---\n+\"explain term query\":\n+  - do:\n+      search:\n+        index: sensor\n+        explain: true\n+        body:\n+          query:\n+            term:\n+              day_of_week: Monday\n+  - match: {hits.hits.0._explanation.description: day_of_week:Monday}\n+  - match: {hits.hits.0._explanation.details.0.value: 1.0}\n+  - match: {hits.hits.0._explanation.details.0.description: 'runtime field query scoring boost'}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxMDM0Mg=="}, "originalCommit": {"oid": "df80fdbb20ce53d2d5fb4c74f240de00e4a62a48"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3021, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}