{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4Nzc4NDg1", "number": 62563, "title": "[ML] all multiple wildcard values for GET Calendars, Events, and DELETE forecasts", "bodyText": "This commit adjusts the following APIs so now they not only support an _all case, but wildcard patterned Ids as well.\n\nGET _ml/calendars/<calendar_id>/events\nGET _ml/calendars/<calendar_id>\nGET _ml/anomaly_detectors/<job_id>/model_snapshots/<snapshot_id>\nDELETE _ml/anomaly_detectors/<job_id>/_forecast/<forecast_id>", "createdAt": "2020-09-17T16:08:25Z", "url": "https://github.com/elastic/elasticsearch/pull/62563", "merged": true, "mergeCommit": {"oid": "a653a1cbb833d35d00a2b5dc6f21056455f3f4d4"}, "closed": true, "closedAt": "2020-09-18T13:39:41Z", "author": {"login": "benwtrent"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJzSrlgH2gAyNDg4Nzc4NDg1OjM1OGNhYjYyZGYyOGQ3MGFlMDY1MWQwMTc3MGIwNjkyZWNiMjBhYjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKFCsqgH2gAyNDg4Nzc4NDg1OjgzMjNmMDFiODg3MDk2YjI3NjQ4Njg2NzYxYWNjYmYwYjg2YzUwMmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "358cab62df28d70ae0651d01770b0692ecb20ab7", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/358cab62df28d70ae0651d01770b0692ecb20ab7", "committedDate": "2020-09-17T16:08:07Z", "message": "[ML] all multiple wildcard values for GET Calendars, Events, and DELETE forecasts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afd70dea349f18ee81d0c41aa35b5fc75d911b58", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/afd70dea349f18ee81d0c41aa35b5fc75d911b58", "committedDate": "2020-09-17T16:49:41Z", "message": "fixing string split logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzM5NTIw", "url": "https://github.com/elastic/elasticsearch/pull/62563#pullrequestreview-491339520", "createdAt": "2020-09-18T10:25:21Z", "commit": {"oid": "afd70dea349f18ee81d0c41aa35b5fc75d911b58"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoyNToyMlrOHUHNsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDo0ODoxOVrOHUH4_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1MTc2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This adds a new filter to the passed `boolQueryBuilder`.", "url": "https://github.com/elastic/elasticsearch/pull/62563#discussion_r490851761", "createdAt": "2020-09-18T10:25:22Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/QueryBuilderHelper.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.ml.utils;\n+\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.regex.Regex;\n+import org.elasticsearch.index.query.BoolQueryBuilder;\n+import org.elasticsearch.index.query.QueryBuilder;\n+import org.elasticsearch.index.query.TermsQueryBuilder;\n+import org.elasticsearch.index.query.WildcardQueryBuilder;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+public final class QueryBuilderHelper {\n+\n+    private QueryBuilderHelper() { }\n+\n+    /**\n+     * Helper function for adding OR type queries for a given identity field.\n+     *\n+     * This adds a new filter to the passed `boolQueryBuilder`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afd70dea349f18ee81d0c41aa35b5fc75d911b58"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1OTQ4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ResultsFilterBuilder resourceTokenFilers(String fieldName, String[] tokens) {\n          \n          \n            \n                public ResultsFilterBuilder resourceTokenFilters(String fieldName, String[] tokens) {", "url": "https://github.com/elastic/elasticsearch/pull/62563#discussion_r490859480", "createdAt": "2020-09-18T10:41:00Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/ResultsFilterBuilder.java", "diffHunk": "@@ -88,6 +89,11 @@ public ResultsFilterBuilder term(String fieldName, String fieldValue) {\n         return this;\n     }\n \n+    public ResultsFilterBuilder resourceTokenFilers(String fieldName, String[] tokens) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afd70dea349f18ee81d0c41aa35b5fc75d911b58"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg2Mjg0NQ==", "bodyText": "The GET request docs will need updating to add the standard description of a wildcard-able ID parameter\n\"comma-separated list of calendar Ids and wildcard expressions. You can get all by using _all, or * or by omitting the ID\"", "url": "https://github.com/elastic/elasticsearch/pull/62563#discussion_r490862845", "createdAt": "2020-09-18T10:48:19Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetCalendarsAction.java", "diffHunk": "@@ -34,35 +31,18 @@ public TransportGetCalendarsAction(TransportService transportService, ActionFilt\n \n     @Override\n     protected void doExecute(Task task, GetCalendarsAction.Request request, ActionListener<GetCalendarsAction.Response> listener) {\n-        final String calendarId = request.getCalendarId();\n-        if (request.getCalendarId() != null && Strings.isAllOrWildcard(request.getCalendarId()) == false) {\n-            getCalendar(calendarId, listener);\n-        } else {\n-            PageParams pageParams = request.getPageParams();\n-            if (pageParams == null) {\n-                pageParams = PageParams.defaultParams();\n-            }\n-            getCalendars(pageParams, listener);\n+        final String[] calendarIds = Strings.splitStringByCommaToArray(request.getCalendarId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afd70dea349f18ee81d0c41aa35b5fc75d911b58"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "138b9d108f22336ac2750d3a88ab41c4f4f100c8", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/138b9d108f22336ac2750d3a88ab41c4f4f100c8", "committedDate": "2020-09-18T12:26:13Z", "message": "fixing calendars test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4746211e618d2e132c6a79338ecced26ac04dd2b", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/4746211e618d2e132c6a79338ecced26ac04dd2b", "committedDate": "2020-09-18T12:33:22Z", "message": "addressing pr comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8323f01b887096b27648686761accbf0b86c502b", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/8323f01b887096b27648686761accbf0b86c502b", "committedDate": "2020-09-18T12:48:57Z", "message": "Merge branch 'master' into feature/ml-unifying-api-id-behavior"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3653, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}