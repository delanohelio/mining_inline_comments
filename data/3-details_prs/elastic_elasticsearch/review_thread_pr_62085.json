{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxOTQyNjM1", "number": 62085, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowMDo0OVrOEhMT-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowMjozNlrOEhMWBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjQwMTg1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/wildcard/src/test/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapperTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowMDo0OVrOHOXxxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowMDo0OVrOHOXxxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMTY4NA==", "bodyText": "I don't think we need the link on the issue. The test name is descriptive enough imo.", "url": "https://github.com/elastic/elasticsearch/pull/62085#discussion_r484831684", "createdAt": "2020-09-08T11:00:49Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/wildcard/src/test/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapperTests.java", "diffHunk": "@@ -179,6 +179,41 @@ public void testTooBigQueryField() throws IOException {\n         reader.close();\n         dir.close();\n     }\n+    \n+    \n+    public void testTermQueryIgnoresWildcardSyntax() throws IOException {\n+        // Test for bug https://github.com/elastic/elasticsearch/issues/62081\n+        // where term queries honoured wildcard quwery syntax", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8895eddbec6e113f6d3e36f25ee62325524c32c5"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjQwNzA4OnYy", "diffSide": "LEFT", "path": "x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowMjozNlrOHOX1Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzowMDoyOFrOHObtXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMjUzNA==", "bodyText": "Isn't it the same problem with prefix query ? Maybe we can just escape ? and * in the value and continue to use the wildcardQuery ?", "url": "https://github.com/elastic/elasticsearch/pull/62085#discussion_r484832534", "createdAt": "2020-09-08T11:02:36Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java", "diffHunk": "@@ -844,7 +845,36 @@ public Query existsQuery(QueryShardContext context) {\n \n         @Override\n         public Query termQuery(Object value, QueryShardContext context) {\n-            return wildcardQuery(BytesRefs.toString(value), MultiTermQuery.CONSTANT_SCORE_REWRITE, context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8895eddbec6e113f6d3e36f25ee62325524c32c5"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg5NjA5NA==", "bodyText": "Good point. I'll try that approach.", "url": "https://github.com/elastic/elasticsearch/pull/62085#discussion_r484896094", "createdAt": "2020-09-08T13:00:28Z", "author": {"login": "markharwood"}, "path": "x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java", "diffHunk": "@@ -844,7 +845,36 @@ public Query existsQuery(QueryShardContext context) {\n \n         @Override\n         public Query termQuery(Object value, QueryShardContext context) {\n-            return wildcardQuery(BytesRefs.toString(value), MultiTermQuery.CONSTANT_SCORE_REWRITE, context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMjUzNA=="}, "originalCommit": {"oid": "8895eddbec6e113f6d3e36f25ee62325524c32c5"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1659, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}