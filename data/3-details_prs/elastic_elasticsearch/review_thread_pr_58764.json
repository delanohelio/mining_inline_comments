{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMTg0Mzg5", "number": 58764, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODoxNzozOFrOEKOMOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODoxNzozOFrOEKOMOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTUzNzIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestPutMappingAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODoxNzozOFrOGrI5lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODoxOToxM1rOGrI9hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4Nzc2Ng==", "bodyText": "If I  set up include_type_name=true, do we still want to allow typed \"put mapping request\" ?\nFrom what it looks like now, my typed request will fail even if I set include_type_name=true.", "url": "https://github.com/elastic/elasticsearch/pull/58764#discussion_r447887766", "createdAt": "2020-06-30T18:17:38Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestPutMappingAction.java", "diffHunk": "@@ -81,19 +81,19 @@ public String getName() {\n     public RestChannelConsumer prepareRequest(final RestRequest request, final NodeClient client) throws IOException {\n         PutMappingRequest putMappingRequest = putMappingRequest(Strings.splitStringByCommaToArray(request.param(\"index\")));\n \n-        boolean includeTypeName = request.paramAsBoolean(INCLUDE_TYPE_NAME_PARAMETER,\n-            DEFAULT_INCLUDE_TYPE_NAME_POLICY);\n         String type = request.param(\"type\");\n         Map<String, Object> sourceAsMap = XContentHelper.convertToMap(request.requiredContent(), false,\n             request.getXContentType()).v2();\n \n-        if (includeTypeName) {\n+        if (request.hasParam(INCLUDE_TYPE_NAME_PARAMETER) == false) {\n             deprecationLogger.deprecatedAndMaybeLog(\"put_mapping_with_types\", TYPES_DEPRECATION_MESSAGE);\n         } else if (type != null || isMappingSourceTyped(MapperService.SINGLE_MAPPING_NAME, sourceAsMap)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc33a204277fac993cf296041ca637d1644e816d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4ODc3NA==", "bodyText": "+1 I am fixing this logic now, it was also caught by our tests.", "url": "https://github.com/elastic/elasticsearch/pull/58764#discussion_r447888774", "createdAt": "2020-06-30T18:19:13Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestPutMappingAction.java", "diffHunk": "@@ -81,19 +81,19 @@ public String getName() {\n     public RestChannelConsumer prepareRequest(final RestRequest request, final NodeClient client) throws IOException {\n         PutMappingRequest putMappingRequest = putMappingRequest(Strings.splitStringByCommaToArray(request.param(\"index\")));\n \n-        boolean includeTypeName = request.paramAsBoolean(INCLUDE_TYPE_NAME_PARAMETER,\n-            DEFAULT_INCLUDE_TYPE_NAME_POLICY);\n         String type = request.param(\"type\");\n         Map<String, Object> sourceAsMap = XContentHelper.convertToMap(request.requiredContent(), false,\n             request.getXContentType()).v2();\n \n-        if (includeTypeName) {\n+        if (request.hasParam(INCLUDE_TYPE_NAME_PARAMETER) == false) {\n             deprecationLogger.deprecatedAndMaybeLog(\"put_mapping_with_types\", TYPES_DEPRECATION_MESSAGE);\n         } else if (type != null || isMappingSourceTyped(MapperService.SINGLE_MAPPING_NAME, sourceAsMap)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4Nzc2Ng=="}, "originalCommit": {"oid": "cc33a204277fac993cf296041ca637d1644e816d"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2155, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}