{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MTQ4NzEx", "number": 62600, "title": "Use BitArray instead of FixedBitSet for collecting ordinals in Cardinality Aggregator", "bodyText": "This PR changes the way we collecting ordinals in the Cardinality aggregation from Lucene FixedBitSet to BitArray. The benefit is that BitArray is tracked by our Circuit breakers so it is safer.", "createdAt": "2020-09-18T08:02:56Z", "url": "https://github.com/elastic/elasticsearch/pull/62600", "merged": true, "mergeCommit": {"oid": "3e532ab4fcb7e006e0ebbe0e0416808d809360df"}, "closed": true, "closedAt": "2020-09-18T11:26:09Z", "author": {"login": "iverase"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKA5h9gH2gAyNDg5MTQ4NzExOjM4ZGI1NDUxYTIwMDNiNWMwZjEyNWNlOTZlNTBkNjJhMThhNmNmNzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKCsWmAH2gAyNDg5MTQ4NzExOjIyY2IxMzY0MzcyNjk0OWQ4ZGQwMTJiMWIzZWM1OTBmNTU0ZTliY2Y=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "38db5451a2003b5c0f125ce96e50d62a18a6cf78", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/elastic/elasticsearch/commit/38db5451a2003b5c0f125ce96e50d62a18a6cf78", "committedDate": "2020-09-18T07:59:19Z", "message": "Use BitArray instead if FixedBitSet for collecting ordinals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baeacefdc1564f3a122d79740e4b89d92c367b20", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/elastic/elasticsearch/commit/baeacefdc1564f3a122d79740e4b89d92c367b20", "committedDate": "2020-09-18T08:18:46Z", "message": "checkStyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "434fd2aa80e12a8c42c0444079432eb211ba2b71", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/elastic/elasticsearch/commit/434fd2aa80e12a8c42c0444079432eb211ba2b71", "committedDate": "2020-09-18T08:48:58Z", "message": "Merge branch 'master' into bitArrayOrdinals"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzE2MzY1", "url": "https://github.com/elastic/elasticsearch/pull/62600#pullrequestreview-491316365", "createdAt": "2020-09-18T09:50:01Z", "commit": {"oid": "434fd2aa80e12a8c42c0444079432eb211ba2b71"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwOTo1MDowMVrOHUGIVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwOTo1Mjo0MFrOHUGN0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNDAwNg==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    while(++wordNum < bits.size()) {\n          \n          \n            \n                    while (++wordNum < bits.size()) {", "url": "https://github.com/elastic/elasticsearch/pull/62600#discussion_r490834006", "createdAt": "2020-09-18T09:50:01Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/common/util/BitArray.java", "diffHunk": "@@ -50,6 +50,37 @@ public void set(long index) {\n         bits.set(wordNum, bits.get(wordNum) | bitmask(index));\n     }\n \n+    /** this = this OR other */\n+    public void or(BitArray other) {\n+        or(other.bits);\n+    }\n+\n+    private void or(final LongArray otherArr) {\n+        long pos = otherArr.size();\n+        bits = bigArrays.grow(bits, pos + 1);\n+        final LongArray thisArr = this.bits;\n+        while (--pos >= 0) {\n+            thisArr.set(pos, thisArr.get(pos) | otherArr.get(pos));\n+        }\n+    }\n+\n+    public long nextSetBit(long index) {\n+        long wordNum = wordNum(index);\n+        long word = bits.get(wordNum) >> index;  // skip all the bits to the right of index\n+\n+        if (word!=0) {\n+            return index + Long.numberOfTrailingZeros(word);\n+        }\n+\n+        while(++wordNum < bits.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434fd2aa80e12a8c42c0444079432eb211ba2b71"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNTI2NQ==", "bodyText": "Should it use Long.MAX_VALUE instead of DocIdSetIterator.NO_MORE_DOCS ?", "url": "https://github.com/elastic/elasticsearch/pull/62600#discussion_r490835265", "createdAt": "2020-09-18T09:52:23Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregator.java", "diffHunk": "@@ -288,29 +289,30 @@ public void collect(int doc, long bucketOrd) throws IOException {\n \n         @Override\n         public void postCollect() throws IOException {\n-            final FixedBitSet allVisitedOrds = new FixedBitSet(maxOrd);\n-            for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n-                final FixedBitSet bits = visitedOrds.get(bucket);\n-                if (bits != null) {\n-                    allVisitedOrds.or(bits);\n+            try (BitArray allVisitedOrds = new BitArray(maxOrd, bigArrays)) {\n+                for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n+                    final BitArray bits = visitedOrds.get(bucket);\n+                    if (bits != null) {\n+                        allVisitedOrds.or(bits);\n+                    }\n                 }\n-            }\n \n-            final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n-            try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n-                for (int ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n-                        ord = ord + 1 < maxOrd ? allVisitedOrds.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {\n-                    final BytesRef value = values.lookupOrd(ord);\n-                    MurmurHash3.hash128(value.bytes, value.offset, value.length, 0, hash);\n-                    hashes.set(ord, hash.h1);\n-                }\n+                try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n+                    final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n+                    for (long ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434fd2aa80e12a8c42c0444079432eb211ba2b71"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNTMxMw==", "bodyText": "same here ?", "url": "https://github.com/elastic/elasticsearch/pull/62600#discussion_r490835313", "createdAt": "2020-09-18T09:52:29Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregator.java", "diffHunk": "@@ -288,29 +289,30 @@ public void collect(int doc, long bucketOrd) throws IOException {\n \n         @Override\n         public void postCollect() throws IOException {\n-            final FixedBitSet allVisitedOrds = new FixedBitSet(maxOrd);\n-            for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n-                final FixedBitSet bits = visitedOrds.get(bucket);\n-                if (bits != null) {\n-                    allVisitedOrds.or(bits);\n+            try (BitArray allVisitedOrds = new BitArray(maxOrd, bigArrays)) {\n+                for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n+                    final BitArray bits = visitedOrds.get(bucket);\n+                    if (bits != null) {\n+                        allVisitedOrds.or(bits);\n+                    }\n                 }\n-            }\n \n-            final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n-            try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n-                for (int ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n-                        ord = ord + 1 < maxOrd ? allVisitedOrds.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {\n-                    final BytesRef value = values.lookupOrd(ord);\n-                    MurmurHash3.hash128(value.bytes, value.offset, value.length, 0, hash);\n-                    hashes.set(ord, hash.h1);\n-                }\n+                try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n+                    final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n+                    for (long ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n+                         ord = ord + 1 < maxOrd ? allVisitedOrds.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434fd2aa80e12a8c42c0444079432eb211ba2b71"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNTQxMQ==", "bodyText": "and here ;)", "url": "https://github.com/elastic/elasticsearch/pull/62600#discussion_r490835411", "createdAt": "2020-09-18T09:52:40Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregator.java", "diffHunk": "@@ -288,29 +289,30 @@ public void collect(int doc, long bucketOrd) throws IOException {\n \n         @Override\n         public void postCollect() throws IOException {\n-            final FixedBitSet allVisitedOrds = new FixedBitSet(maxOrd);\n-            for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n-                final FixedBitSet bits = visitedOrds.get(bucket);\n-                if (bits != null) {\n-                    allVisitedOrds.or(bits);\n+            try (BitArray allVisitedOrds = new BitArray(maxOrd, bigArrays)) {\n+                for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n+                    final BitArray bits = visitedOrds.get(bucket);\n+                    if (bits != null) {\n+                        allVisitedOrds.or(bits);\n+                    }\n                 }\n-            }\n \n-            final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n-            try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n-                for (int ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n-                        ord = ord + 1 < maxOrd ? allVisitedOrds.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {\n-                    final BytesRef value = values.lookupOrd(ord);\n-                    MurmurHash3.hash128(value.bytes, value.offset, value.length, 0, hash);\n-                    hashes.set(ord, hash.h1);\n-                }\n+                try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n+                    final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n+                    for (long ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n+                         ord = ord + 1 < maxOrd ? allVisitedOrds.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {\n+                        final BytesRef value = values.lookupOrd(ord);\n+                        MurmurHash3.hash128(value.bytes, value.offset, value.length, 0, hash);\n+                        hashes.set(ord, hash.h1);\n+                    }\n \n-                for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n-                    final FixedBitSet bits = visitedOrds.get(bucket);\n-                    if (bits != null) {\n-                        for (int ord = bits.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n-                                ord = ord + 1 < maxOrd ? bits.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {\n-                            counts.collect(bucket, hashes.get(ord));\n+                    for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n+                        final BitArray bits = visitedOrds.get(bucket);\n+                        if (bits != null) {\n+                            for (long ord = bits.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n+                                 ord = ord + 1 < maxOrd ? bits.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434fd2aa80e12a8c42c0444079432eb211ba2b71"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22cb13643726949d8dd012b1b3ec590f554e9bcf", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/elastic/elasticsearch/commit/22cb13643726949d8dd012b1b3ec590f554e9bcf", "committedDate": "2020-09-18T10:04:44Z", "message": "address review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4769, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}