{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMTYzMzc0", "number": 55094, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjowMDo1OVrOD49PDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjozMzozNlrOD495Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDUwMTI3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/rest/BaseRestSqlTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjowMDo1OVrOGP9Nug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNTo1ODowM1rOGQG5HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4NDc2Mg==", "bodyText": "I would add a method that accepts Mode directly so callers don't have to keep calling mode(someMode.toString())", "url": "https://github.com/elastic/elasticsearch/pull/55094#discussion_r419384762", "createdAt": "2020-05-04T12:00:59Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/rest/BaseRestSqlTestCase.java", "diffHunk": "@@ -19,10 +18,119 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Locale;\n import java.util.Map;\n \n+import static org.elasticsearch.xpack.sql.proto.Protocol.BINARY_FORMAT_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CLIENT_ID_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.VERSION_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.COLUMNAR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CURSOR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FETCH_SIZE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FILTER_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.MODE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.PARAMS_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.QUERY_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.TIME_ZONE_NAME;\n+\n public abstract class BaseRestSqlTestCase extends ESRestTestCase {\n-    \n+\n+    public static class RequestObjectBuilder {\n+        private StringBuilder request;\n+        private final boolean isQuery;\n+\n+        private RequestObjectBuilder(String init, boolean isQuery) {\n+            request = new StringBuilder(init);\n+            this.isQuery = isQuery;\n+        }\n+\n+        public static RequestObjectBuilder query(String query) {\n+            return new RequestObjectBuilder(field(QUERY_NAME, query).substring(1), true);\n+        }\n+\n+        public static RequestObjectBuilder cursor(String cursor) {\n+            return new RequestObjectBuilder(field(CURSOR_NAME, cursor).substring(1), false);\n+        }\n+\n+        public RequestObjectBuilder version(String version) {\n+            request.append(field(VERSION_NAME, version));\n+            return this;\n+        }\n+\n+        public RequestObjectBuilder mode(String mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbd409a815c89a2737b7be615c42768792dbde80"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0MzMyNQ==", "bodyText": "Good idea, thanks.", "url": "https://github.com/elastic/elasticsearch/pull/55094#discussion_r419543325", "createdAt": "2020-05-04T15:58:03Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/rest/BaseRestSqlTestCase.java", "diffHunk": "@@ -19,10 +18,119 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Locale;\n import java.util.Map;\n \n+import static org.elasticsearch.xpack.sql.proto.Protocol.BINARY_FORMAT_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CLIENT_ID_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.VERSION_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.COLUMNAR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CURSOR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FETCH_SIZE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FILTER_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.MODE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.PARAMS_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.QUERY_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.TIME_ZONE_NAME;\n+\n public abstract class BaseRestSqlTestCase extends ESRestTestCase {\n-    \n+\n+    public static class RequestObjectBuilder {\n+        private StringBuilder request;\n+        private final boolean isQuery;\n+\n+        private RequestObjectBuilder(String init, boolean isQuery) {\n+            request = new StringBuilder(init);\n+            this.isQuery = isQuery;\n+        }\n+\n+        public static RequestObjectBuilder query(String query) {\n+            return new RequestObjectBuilder(field(QUERY_NAME, query).substring(1), true);\n+        }\n+\n+        public static RequestObjectBuilder cursor(String cursor) {\n+            return new RequestObjectBuilder(field(CURSOR_NAME, cursor).substring(1), false);\n+        }\n+\n+        public RequestObjectBuilder version(String version) {\n+            request.append(field(VERSION_NAME, version));\n+            return this;\n+        }\n+\n+        public RequestObjectBuilder mode(String mode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4NDc2Mg=="}, "originalCommit": {"oid": "cbd409a815c89a2737b7be615c42768792dbde80"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDU5NzA0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/sql-proto/src/main/java/org/elasticsearch/xpack/sql/proto/Protocol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjozMDowMFrOGP-HIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjozMDowMFrOGP-HIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5OTQ1OQ==", "bodyText": "Nice!", "url": "https://github.com/elastic/elasticsearch/pull/55094#discussion_r419399459", "createdAt": "2020-05-04T12:30:00Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/sql-proto/src/main/java/org/elasticsearch/xpack/sql/proto/Protocol.java", "diffHunk": "@@ -14,6 +14,32 @@\n  * Sql protocol defaults and end-points shared between JDBC and REST protocol implementations\n  */\n public final class Protocol {\n+    /**\n+     * The attribute names used in the protocol request/response objects.\n+     */\n+    // requests\n+    public static final String QUERY_NAME = \"query\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbd409a815c89a2737b7be615c42768792dbde80"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDYwODcwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/rest/BaseRestSqlTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjozMzozNlrOGP-OgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNTo1ODo1OFrOGQG8Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwMTM0NQ==", "bodyText": "Can this (and the methods) be private or package private?", "url": "https://github.com/elastic/elasticsearch/pull/55094#discussion_r419401345", "createdAt": "2020-05-04T12:33:36Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/rest/BaseRestSqlTestCase.java", "diffHunk": "@@ -19,10 +18,119 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Locale;\n import java.util.Map;\n \n+import static org.elasticsearch.xpack.sql.proto.Protocol.BINARY_FORMAT_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CLIENT_ID_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.VERSION_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.COLUMNAR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CURSOR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FETCH_SIZE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FILTER_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.MODE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.PARAMS_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.QUERY_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.TIME_ZONE_NAME;\n+\n public abstract class BaseRestSqlTestCase extends ESRestTestCase {\n-    \n+\n+    public static class RequestObjectBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbd409a815c89a2737b7be615c42768792dbde80"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDA5OA==", "bodyText": "They are called from outside the package (i.e. from qa) in a few instances.", "url": "https://github.com/elastic/elasticsearch/pull/55094#discussion_r419544098", "createdAt": "2020-05-04T15:58:58Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/rest/BaseRestSqlTestCase.java", "diffHunk": "@@ -19,10 +18,119 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Locale;\n import java.util.Map;\n \n+import static org.elasticsearch.xpack.sql.proto.Protocol.BINARY_FORMAT_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CLIENT_ID_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.VERSION_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.COLUMNAR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.CURSOR_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FETCH_SIZE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.FILTER_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.MODE_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.PARAMS_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.QUERY_NAME;\n+import static org.elasticsearch.xpack.sql.proto.Protocol.TIME_ZONE_NAME;\n+\n public abstract class BaseRestSqlTestCase extends ESRestTestCase {\n-    \n+\n+    public static class RequestObjectBuilder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwMTM0NQ=="}, "originalCommit": {"oid": "cbd409a815c89a2737b7be615c42768792dbde80"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1122, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}