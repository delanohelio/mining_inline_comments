{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4ODE5MTMx", "number": 52691, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNjowMzo1NlrODiN-vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOTo1NTowNFrODjZfbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjA3MjI4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/qa/security-not-enabled/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNjowMzo1NlrOFtWUfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzozNToyNVrOFvk5Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5NTkzMw==", "bodyText": "Are these two settings necessary?", "url": "https://github.com/elastic/elasticsearch/pull/52691#discussion_r383095933", "createdAt": "2020-02-24T06:03:56Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/qa/security-not-enabled/build.gradle", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * This QA project tests the security plugin when security is not enabled.\n+ * It is intended to cover security functionality which is supposed to \n+ * function in a specific way even if security is not enabled on the cluster\n+ * For example: If a cluster has a pipeline with the set_security_user processor\n+ *              defined, it should be not fail\n+ */\n+ \n+apply plugin: 'elasticsearch.testclusters'\n+apply plugin: 'elasticsearch.standalone-rest-test'\n+apply plugin: 'elasticsearch.rest-test'\n+\n+dependencies {\n+  testCompile project(path: xpackModule('core'), configuration: 'default')\n+  testCompile project(path: xpackModule('security'), configuration: 'testArtifacts')\n+  testCompile project(path: xpackModule('core'), configuration: 'testArtifacts')\n+}\n+\n+testClusters.integTest {\n+  testDistribution = 'DEFAULT'\n+  numberOfNodes = 2\n+\n+  setting 'xpack.ilm.enabled', 'false'\n+  setting 'xpack.ml.enabled', 'false'\n+  // We run with a trial license, but do not enable security.\n+  // This means the security plugin is loaded and all feature are permitted, but they are not enabled\n+  setting 'xpack.license.self_generated.type', 'trial'\n+  setting 'xpack.security.authc.token.enabled', 'true'\n+  setting 'xpack.security.authc.api_key.enabled', 'true'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de04ed950f80368c4ba966ed396b1a595bfb9115"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzMTgyMw==", "bodyText": "No, I'll remove them, I copied the build from another project, and missed them.", "url": "https://github.com/elastic/elasticsearch/pull/52691#discussion_r385431823", "createdAt": "2020-02-27T23:35:25Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/qa/security-not-enabled/build.gradle", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * This QA project tests the security plugin when security is not enabled.\n+ * It is intended to cover security functionality which is supposed to \n+ * function in a specific way even if security is not enabled on the cluster\n+ * For example: If a cluster has a pipeline with the set_security_user processor\n+ *              defined, it should be not fail\n+ */\n+ \n+apply plugin: 'elasticsearch.testclusters'\n+apply plugin: 'elasticsearch.standalone-rest-test'\n+apply plugin: 'elasticsearch.rest-test'\n+\n+dependencies {\n+  testCompile project(path: xpackModule('core'), configuration: 'default')\n+  testCompile project(path: xpackModule('security'), configuration: 'testArtifacts')\n+  testCompile project(path: xpackModule('core'), configuration: 'testArtifacts')\n+}\n+\n+testClusters.integTest {\n+  testDistribution = 'DEFAULT'\n+  numberOfNodes = 2\n+\n+  setting 'xpack.ilm.enabled', 'false'\n+  setting 'xpack.ml.enabled', 'false'\n+  // We run with a trial license, but do not enable security.\n+  // This means the security plugin is loaded and all feature are permitted, but they are not enabled\n+  setting 'xpack.license.self_generated.type', 'trial'\n+  setting 'xpack.security.authc.token.enabled', 'true'\n+  setting 'xpack.security.authc.api_key.enabled', 'true'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5NTkzMw=="}, "originalCommit": {"oid": "de04ed950f80368c4ba966ed396b1a595bfb9115"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjA4OTYyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/ingest/SetSecurityUserProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNjoxOTowOFrOFtWeeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzozNjo1OFrOFvk7RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5ODQ5MA==", "bodyText": "Not sure how feasible or necessary it is to test the warning message. Another nitpick is maybe change \"no security context is available\" to something like \"security is not enabled\" for consistency with other exception message and easier to understand for users.", "url": "https://github.com/elastic/elasticsearch/pull/52691#discussion_r383098490", "createdAt": "2020-02-24T06:19:08Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/ingest/SetSecurityUserProcessor.java", "diffHunk": "@@ -34,20 +35,29 @@\n \n     public static final String TYPE = \"set_security_user\";\n \n+    private final Logger logger = LogManager.getLogger();\n+\n     private final SecurityContext securityContext;\n     private final String field;\n     private final Set<Property> properties;\n \n     public\n     SetSecurityUserProcessor(String tag, SecurityContext securityContext, String field, Set<Property> properties) {\n         super(tag);\n-        this.securityContext = Objects.requireNonNull(securityContext, \"security context must be provided\");\n+        this.securityContext = securityContext;\n+        if (this.securityContext == null) {\n+            logger.warn(\"Creating processor [{}] (tag [{}]) on field [{}] but no security context is available\" +\n+                \" - this processor will fail at runtime if it is used\", TYPE, tag, field);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de04ed950f80368c4ba966ed396b1a595bfb9115"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzMjM4OA==", "bodyText": "I'll come up with something. My concern is trying to diagnose a root cause from secondary symptoms (I know there's no security context, I don't know for sure exactly why that is), but I'll sort something out.", "url": "https://github.com/elastic/elasticsearch/pull/52691#discussion_r385432388", "createdAt": "2020-02-27T23:36:58Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/ingest/SetSecurityUserProcessor.java", "diffHunk": "@@ -34,20 +35,29 @@\n \n     public static final String TYPE = \"set_security_user\";\n \n+    private final Logger logger = LogManager.getLogger();\n+\n     private final SecurityContext securityContext;\n     private final String field;\n     private final Set<Property> properties;\n \n     public\n     SetSecurityUserProcessor(String tag, SecurityContext securityContext, String field, Set<Property> properties) {\n         super(tag);\n-        this.securityContext = Objects.requireNonNull(securityContext, \"security context must be provided\");\n+        this.securityContext = securityContext;\n+        if (this.securityContext == null) {\n+            logger.warn(\"Creating processor [{}] (tag [{}]) on field [{}] but no security context is available\" +\n+                \" - this processor will fail at runtime if it is used\", TYPE, tag, field);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5ODQ5MA=="}, "originalCommit": {"oid": "de04ed950f80368c4ba966ed396b1a595bfb9115"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDQ0Mzk5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/ingest/SetSecurityUserProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOTo1NTowNFrOFvLw7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOTo1NTowNFrOFvLw7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyMDE0MA==", "bodyText": "If we are sure, we could state instead of frame it as a Q", "url": "https://github.com/elastic/elasticsearch/pull/52691#discussion_r385020140", "createdAt": "2020-02-27T09:55:04Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/ingest/SetSecurityUserProcessor.java", "diffHunk": "@@ -34,20 +35,29 @@\n \n     public static final String TYPE = \"set_security_user\";\n \n+    private final Logger logger = LogManager.getLogger();\n+\n     private final SecurityContext securityContext;\n     private final String field;\n     private final Set<Property> properties;\n \n     public\n     SetSecurityUserProcessor(String tag, SecurityContext securityContext, String field, Set<Property> properties) {\n         super(tag);\n-        this.securityContext = Objects.requireNonNull(securityContext, \"security context must be provided\");\n+        this.securityContext = securityContext;\n+        if (this.securityContext == null) {\n+            logger.warn(\"Creating processor [{}] (tag [{}]) on field [{}] but no security context is available\" +\n+                \" - this processor will fail at runtime if it is used\", TYPE, tag, field);\n+        }\n         this.field = field;\n         this.properties = properties;\n     }\n \n     @Override\n     public IngestDocument execute(IngestDocument ingestDocument) throws Exception {\n+        if (this.securityContext == null) {\n+            throw new IllegalStateException(\"No security context available (is security enabled on this cluster?)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de04ed950f80368c4ba966ed396b1a595bfb9115"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3749, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}