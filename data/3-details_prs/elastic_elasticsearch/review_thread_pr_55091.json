{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMDgwODIw", "number": 55091, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzoxNjozOVrODxgvEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzoyMDo0NVrODxg0oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMjQzMTUzOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzoxNjozOVrOGFBNbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzoxNjozOVrOGFBNbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkxNTg4Nw==", "bodyText": "We would like the connection from red to blue to be disconnected, not the one from blue to red?", "url": "https://github.com/elastic/elasticsearch/pull/55091#discussion_r407915887", "createdAt": "2020-04-14T07:16:39Z", "author": {"login": "ywelsch"}, "path": "server/src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryIT.java", "diffHunk": "@@ -782,12 +782,29 @@ public void testDisconnectsWhileRecovering() throws Exception {\n             (MockTransportService) internalCluster().getInstance(TransportService.class, redNodeName);\n         TransportService redTransportService = internalCluster().getInstance(TransportService.class, redNodeName);\n         TransportService blueTransportService = internalCluster().getInstance(TransportService.class, blueNodeName);\n-        final CountDownLatch requestBlocked = new CountDownLatch(1);\n+        final CountDownLatch requestFailed = new CountDownLatch(1);\n \n-        blueMockTransportService.addSendBehavior(redTransportService,\n-            new RecoveryActionBlocker(dropRequests, recoveryActionToBlock, requestBlocked));\n-        redMockTransportService.addSendBehavior(blueTransportService,\n-            new RecoveryActionBlocker(dropRequests, recoveryActionToBlock, requestBlocked));\n+        if (randomBoolean()) {\n+            // Fail on the sending side\n+            blueMockTransportService.addSendBehavior(redTransportService,\n+                new RecoveryActionBlocker(dropRequests, recoveryActionToBlock, requestFailed));\n+            redMockTransportService.addSendBehavior(blueTransportService,\n+                new RecoveryActionBlocker(dropRequests, recoveryActionToBlock, requestFailed));\n+        } else {\n+            // Fail on the receiving side.\n+            blueMockTransportService.addRequestHandlingBehavior(recoveryActionToBlock, (handler, request, channel, task) -> {\n+                logger.info(\"--> preventing {} response\", recoveryActionToBlock);\n+                requestFailed.countDown();\n+                blueMockTransportService.disconnectFromNode(redMockTransportService.getLocalDiscoNode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ed5207d0c5a958b3dc8a00b49ddd9213876b5b5"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMjQ0NTc3OnYy", "diffSide": "RIGHT", "path": "test/framework/src/main/java/org/elasticsearch/test/transport/StubbableTransport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzoyMDo0NVrOGFBVzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzoyMDo0NVrOGFBVzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkxODAzMA==", "bodyText": "unintended change?", "url": "https://github.com/elastic/elasticsearch/pull/55091#discussion_r407918030", "createdAt": "2020-04-14T07:20:45Z", "author": {"login": "ywelsch"}, "path": "test/framework/src/main/java/org/elasticsearch/test/transport/StubbableTransport.java", "diffHunk": "@@ -7,7 +7,7 @@\n  * not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n+ *     http://www.apache.org/licenses/LICENSE-2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ed5207d0c5a958b3dc8a00b49ddd9213876b5b5"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1119, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}