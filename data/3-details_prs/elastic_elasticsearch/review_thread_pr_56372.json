{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0ODI3MzE3", "number": 56372, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzo0MjoyOVrOD6Wk-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDo1NjozM1rOD6q5mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTEzOTEyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzo0MjoyOVrOGSJU_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxODozMjozMVrOGSLJWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MDM4Mg==", "bodyText": "Is numericType required? Maybe it can be final a ctor arg?", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421680382", "createdAt": "2020-05-07T17:42:29Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java", "diffHunk": "@@ -53,21 +59,58 @@\n import java.io.IOException;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.Objects;\n import java.util.function.LongUnaryOperator;\n \n /**\n  * FieldData backed by {@link LeafReader#getSortedNumericDocValues(String)}\n  * @see DocValuesType#SORTED_NUMERIC\n  */\n-public class SortedNumericDVIndexFieldData extends DocValuesIndexFieldData implements IndexNumericFieldData {\n-    private final NumericType numericType;\n+public class SortedNumericDVIndexFieldData implements IndexNumericFieldData {\n+    public static class Builder implements IndexFieldData.Builder {\n+\n+        private NumericType numericType;\n+        public Builder numericType(NumericType type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cf8d56739a7f4c9e34aa31bf2b14c18865d10a"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MDkxMw==", "bodyText": "I wonder if all of these sorts of args can be ctor args.", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421680913", "createdAt": "2020-05-07T17:43:21Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java", "diffHunk": "@@ -53,21 +59,58 @@\n import java.io.IOException;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.Objects;\n import java.util.function.LongUnaryOperator;\n \n /**\n  * FieldData backed by {@link LeafReader#getSortedNumericDocValues(String)}\n  * @see DocValuesType#SORTED_NUMERIC\n  */\n-public class SortedNumericDVIndexFieldData extends DocValuesIndexFieldData implements IndexNumericFieldData {\n-    private final NumericType numericType;\n+public class SortedNumericDVIndexFieldData implements IndexNumericFieldData {\n+    public static class Builder implements IndexFieldData.Builder {\n+\n+        private NumericType numericType;\n+        public Builder numericType(NumericType type) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MDM4Mg=="}, "originalCommit": {"oid": "b2cf8d56739a7f4c9e34aa31bf2b14c18865d10a"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcxMDE3MQ==", "bodyText": "Yeah, I think they can.  I'll take a pass at it.", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421710171", "createdAt": "2020-05-07T18:32:31Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java", "diffHunk": "@@ -53,21 +59,58 @@\n import java.io.IOException;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.Objects;\n import java.util.function.LongUnaryOperator;\n \n /**\n  * FieldData backed by {@link LeafReader#getSortedNumericDocValues(String)}\n  * @see DocValuesType#SORTED_NUMERIC\n  */\n-public class SortedNumericDVIndexFieldData extends DocValuesIndexFieldData implements IndexNumericFieldData {\n-    private final NumericType numericType;\n+public class SortedNumericDVIndexFieldData implements IndexNumericFieldData {\n+    public static class Builder implements IndexFieldData.Builder {\n+\n+        private NumericType numericType;\n+        public Builder numericType(NumericType type) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MDM4Mg=="}, "originalCommit": {"oid": "b2cf8d56739a7f4c9e34aa31bf2b14c18865d10a"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTE0NzEwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/query/VectorDVIndexFieldData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzo0NDozOFrOGSJZ-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzo0NDozOFrOGSJZ-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MTY1OA==", "bodyText": "I see what you mean about copying method around and maybe making an abstract base class at some point. But the copying is fine by me as an intermediate step to untwisting all of this.", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421681658", "createdAt": "2020-05-07T17:44:38Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/query/VectorDVIndexFieldData.java", "diffHunk": "@@ -26,10 +25,29 @@\n import org.elasticsearch.search.sort.SortOrder;\n \n \n-public class VectorDVIndexFieldData extends DocValuesIndexFieldData implements IndexFieldData<VectorDVLeafFieldData> {\n+public class VectorDVIndexFieldData implements IndexFieldData<VectorDVLeafFieldData> {\n+\n+    protected final Index index;\n+    protected final String fieldName;\n \n     public VectorDVIndexFieldData(Index index, String fieldName) {\n-        super(index, fieldName);\n+        this.index = index;\n+        this.fieldName = fieldName;\n+    }\n+\n+    @Override\n+    public final String getFieldName() {\n+        return fieldName;\n+    }\n+\n+    @Override\n+    public final void clear() {\n+        // can't do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cf8d56739a7f4c9e34aa31bf2b14c18865d10a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTIwOTI5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxODowMToxNFrOGSKBcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxODozMTo1MFrOGSLHmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5MTc2Mw==", "bodyText": "What would you think about removing 'DV' from all of these class names? Now that they don't extend DocValuesIndexFieldData, I think it's a bit confusing/ unclear what 'DV' refers to.", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421691763", "createdAt": "2020-05-07T18:01:14Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java", "diffHunk": "@@ -41,10 +41,29 @@\n import org.elasticsearch.search.sort.BucketedSort;\n import org.elasticsearch.search.sort.SortOrder;\n \n-public abstract class AbstractLatLonPointDVIndexFieldData extends DocValuesIndexFieldData\n-    implements IndexGeoPointFieldData {\n+public abstract class AbstractLatLonPointDVIndexFieldData implements IndexGeoPointFieldData {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cf8d56739a7f4c9e34aa31bf2b14c18865d10a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcwOTcyMw==", "bodyText": "Yeah, that seems reasonable, will do.", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421709723", "createdAt": "2020-05-07T18:31:50Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java", "diffHunk": "@@ -41,10 +41,29 @@\n import org.elasticsearch.search.sort.BucketedSort;\n import org.elasticsearch.search.sort.SortOrder;\n \n-public abstract class AbstractLatLonPointDVIndexFieldData extends DocValuesIndexFieldData\n-    implements IndexGeoPointFieldData {\n+public abstract class AbstractLatLonPointDVIndexFieldData implements IndexGeoPointFieldData {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5MTc2Mw=="}, "originalCommit": {"oid": "b2cf8d56739a7f4c9e34aa31bf2b14c18865d10a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODQ2ODc1OnYy", "diffSide": "RIGHT", "path": "modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDo1NjozM1rOGSohyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDo1NzowNlrOGSoi_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE5MTU2MA==", "bodyText": "Could the builder return a IndexNumericFieldData?", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r422191560", "createdAt": "2020-05-08T14:56:33Z", "author": {"login": "nik9000"}, "path": "modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java", "diffHunk": "@@ -289,8 +289,9 @@ public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower\n                 @Override\n                 public IndexFieldData<?> build(IndexSettings indexSettings, MappedFieldType fieldType, IndexFieldDataCache cache,\n                         CircuitBreakerService breakerService, MapperService mapperService) {\n-                    final IndexNumericFieldData scaledValues = (IndexNumericFieldData) new DocValuesIndexFieldData.Builder()\n-                            .numericType(IndexNumericFieldData.NumericType.LONG)\n+                    final IndexNumericFieldData scaledValues = (IndexNumericFieldData) new SortedNumericIndexFieldData.Builder(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f12e2e36a5a588755d9b9e9b61416e5e9510907"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE5MTg2OA==", "bodyText": "Like, not all the builders can, but I'm fairly sure the SortedNumericIndexFieldData builder will only ever build numeric field data.", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r422191868", "createdAt": "2020-05-08T14:57:06Z", "author": {"login": "nik9000"}, "path": "modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java", "diffHunk": "@@ -289,8 +289,9 @@ public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower\n                 @Override\n                 public IndexFieldData<?> build(IndexSettings indexSettings, MappedFieldType fieldType, IndexFieldDataCache cache,\n                         CircuitBreakerService breakerService, MapperService mapperService) {\n-                    final IndexNumericFieldData scaledValues = (IndexNumericFieldData) new DocValuesIndexFieldData.Builder()\n-                            .numericType(IndexNumericFieldData.NumericType.LONG)\n+                    final IndexNumericFieldData scaledValues = (IndexNumericFieldData) new SortedNumericIndexFieldData.Builder(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE5MTU2MA=="}, "originalCommit": {"oid": "2f12e2e36a5a588755d9b9e9b61416e5e9510907"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 631, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}