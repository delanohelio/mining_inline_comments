{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MjgzNDMz", "number": 52437, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDo1Nzo0NlrODggL4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDo1Nzo0NlrODggL4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDA4MzU1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDo1Nzo0NlrOFqvi1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDo1Nzo0NlrOFqvi1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM2MzQ3Nw==", "bodyText": "I wonder if because of the frequency of the pattern of reading status multiple times in a single method, a safer approach would be the use of a read/write lock. This way, future new method that read the status multiple times would be less likely to be coded incorrectly, since the pattern around reads elsewhere would clearly stand out as first requiring grabbing the read lock.", "url": "https://github.com/elastic/elasticsearch/pull/52437#discussion_r380363477", "createdAt": "2020-02-17T20:57:46Z", "author": {"login": "jasontedor"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -292,7 +292,11 @@ private static boolean isBasic(OperationMode mode) {\n     private final boolean isSecurityEnabled;\n     private final boolean isSecurityExplicitlyEnabled;\n \n-    private Status status = new Status(OperationMode.TRIAL, true);\n+    // Since Status is the only field that can be updated, we do not need to synchronize access to\n+    // XPackLicenseState. However, if status is read multiple times in a method, a local variable should be\n+    // be used to avoid update races. If additional volatile state is added to XPackLicenseState, we may need\n+    // to reintroduce synchronization.\n+    private volatile Status status = new Status(OperationMode.TRIAL, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "925ab5de7425811e0b64b12505a7e17e42b3248b"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3938, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}