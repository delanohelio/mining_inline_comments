{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMDE2MTY5", "number": 50899, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMzozNDoxMVrODYBZxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMzo1NzozOFrODYBpQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTE1Mzk5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMzozNDoxMVrOFdpOnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMTozOToxN1rOFd1kNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYyODUwOA==", "bodyText": "Small comment: this could be marked @Nullable.", "url": "https://github.com/elastic/elasticsearch/pull/50899#discussion_r366628508", "createdAt": "2020-01-14T23:34:11Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java", "diffHunk": "@@ -79,7 +78,7 @@\n \n     private Settings settings = EMPTY_SETTINGS;\n \n-    private Map<String, String> mappings = new HashMap<>();\n+    private String mappings;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86960cbea02f71fb7a9f322121ea33d9680aac25"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgzMDY0NA==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/50899#discussion_r366830644", "createdAt": "2020-01-15T11:39:17Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java", "diffHunk": "@@ -79,7 +78,7 @@\n \n     private Settings settings = EMPTY_SETTINGS;\n \n-    private Map<String, String> mappings = new HashMap<>();\n+    private String mappings;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYyODUwOA=="}, "originalCommit": {"oid": "86960cbea02f71fb7a9f322121ea33d9680aac25"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTE4MTc4OnYy", "diffSide": "LEFT", "path": "server/src/test/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequestTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMzo1MDoyM1rOFdpf5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMTozMTo0NFrOFeWaAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYzMjkzNQ==", "bodyText": "This test still seems relevant, since we kept the type wrapping logic in PutIndexTemplateRequest:\nif (source.size() != 1 || source.containsKey(MapperService.SINGLE_MAPPING_NAME) == false) {\n    Map.of(MapperService.SINGLE_MAPPING_NAME, source);\n}\n\nWe could wait to remove it until we stop wrapping mappings with a type name?", "url": "https://github.com/elastic/elasticsearch/pull/50899#discussion_r366632935", "createdAt": "2020-01-14T23:50:23Z", "author": {"login": "jtibshirani"}, "path": "server/src/test/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequestTests.java", "diffHunk": "@@ -57,67 +53,6 @@ public void testValidateErrorMessage() {\n         assertThat(noError, is(nullValue()));\n     }\n \n-    public void testMappingKeyedByType() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86960cbea02f71fb7a9f322121ea33d9680aac25"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM2ODcwNw==", "bodyText": "Huh, github dropping my comments apparently...\nI reinstated this test to check that mappings wrapped with _doc and unwrapped mappings resolve to the same object.", "url": "https://github.com/elastic/elasticsearch/pull/50899#discussion_r367368707", "createdAt": "2020-01-16T11:31:44Z", "author": {"login": "romseygeek"}, "path": "server/src/test/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequestTests.java", "diffHunk": "@@ -57,67 +53,6 @@ public void testValidateErrorMessage() {\n         assertThat(noError, is(nullValue()));\n     }\n \n-    public void testMappingKeyedByType() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYzMjkzNQ=="}, "originalCommit": {"oid": "86960cbea02f71fb7a9f322121ea33d9680aac25"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTE5MzYwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMzo1NzozOFrOFdpnUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMToyOTo0NFrOFeoLiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYzNDgzNA==", "bodyText": "This seems to both perform the refactor but also adjust the scope of the try ... catch. Is there a good reason to change this? Otherwise we could leave it as-is to minimize extra changes.", "url": "https://github.com/elastic/elasticsearch/pull/50899#discussion_r366634834", "createdAt": "2020-01-14T23:57:38Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java", "diffHunk": "@@ -240,19 +238,15 @@ private static void validateAndAddTemplate(final PutRequest request, IndexTempla\n             templateBuilder.patterns(request.indexPatterns);\n             templateBuilder.settings(request.settings);\n \n-            Map<String, Map<String, Object>> mappingsForValidation = new HashMap<>();\n-            for (Map.Entry<String, String> entry : request.mappings.entrySet()) {\n+            if (request.mappings != null) {\n                 try {\n-                    templateBuilder.putMapping(entry.getKey(), entry.getValue());\n-                } catch (Exception e) {\n-                    throw new MapperParsingException(\"Failed to parse mapping [{}]: {}\", e, entry.getKey(), e.getMessage());\n+                    templateBuilder.putMapping(MapperService.SINGLE_MAPPING_NAME, request.mappings);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86960cbea02f71fb7a9f322121ea33d9680aac25"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM3ODAxNw==", "bodyText": "This was to make MetaDataIndexTemplateServiceTests#testBrokenMappings pass - the refactoring moved around where things were being parsed, so it didn't get the exception that it was expecting.  However, looking at things more carefully, parsing happens when the initial PutIndexTemplateRequest is constructed, so this try-catch is entirely unnecessary.  We already test for broken mappings in PutIndexTemplateRequestTests, so I've removed the try-catch and the failing test.", "url": "https://github.com/elastic/elasticsearch/pull/50899#discussion_r367378017", "createdAt": "2020-01-16T11:55:52Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java", "diffHunk": "@@ -240,19 +238,15 @@ private static void validateAndAddTemplate(final PutRequest request, IndexTempla\n             templateBuilder.patterns(request.indexPatterns);\n             templateBuilder.settings(request.settings);\n \n-            Map<String, Map<String, Object>> mappingsForValidation = new HashMap<>();\n-            for (Map.Entry<String, String> entry : request.mappings.entrySet()) {\n+            if (request.mappings != null) {\n                 try {\n-                    templateBuilder.putMapping(entry.getKey(), entry.getValue());\n-                } catch (Exception e) {\n-                    throw new MapperParsingException(\"Failed to parse mapping [{}]: {}\", e, entry.getKey(), e.getMessage());\n+                    templateBuilder.putMapping(MapperService.SINGLE_MAPPING_NAME, request.mappings);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYzNDgzNA=="}, "originalCommit": {"oid": "86960cbea02f71fb7a9f322121ea33d9680aac25"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1OTkxNQ==", "bodyText": "I'm not clear on why we need to remove the try/ catch and remove the test? I think the try/ catch is present to try to always throw a MapperParsingException, even in case the templateBuilder.putMapping call fails and throws a NotXContentException.\nI tried just restoring the original structure below, and testBrokenMappings then passes:\nif (request.mappings != null) {\n    try {\n        templateBuilder.putMapping(MapperService.SINGLE_MAPPING_NAME, request.mappings);\n    } catch (Exception e) {\n        throw new MapperParsingException(\"Failed to parse mapping [{}]: {}\", e, \"_doc\", e.getMessage());\n    }\n                \n    dummyIndexService.mapperService().merge(MapperService.SINGLE_MAPPING_NAME,\n            MapperService.parseMapping(xContentRegistry, request.mappings), MergeReason.MAPPING_UPDATE);\n}\n\nIt just seems nice to avoid making changes not related to the PR goal (and I don't have a full picture of our template validation strategy, so I'm not as confident as to whether we can remove the try/ catch and test).", "url": "https://github.com/elastic/elasticsearch/pull/50899#discussion_r367659915", "createdAt": "2020-01-16T21:29:44Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java", "diffHunk": "@@ -240,19 +238,15 @@ private static void validateAndAddTemplate(final PutRequest request, IndexTempla\n             templateBuilder.patterns(request.indexPatterns);\n             templateBuilder.settings(request.settings);\n \n-            Map<String, Map<String, Object>> mappingsForValidation = new HashMap<>();\n-            for (Map.Entry<String, String> entry : request.mappings.entrySet()) {\n+            if (request.mappings != null) {\n                 try {\n-                    templateBuilder.putMapping(entry.getKey(), entry.getValue());\n-                } catch (Exception e) {\n-                    throw new MapperParsingException(\"Failed to parse mapping [{}]: {}\", e, entry.getKey(), e.getMessage());\n+                    templateBuilder.putMapping(MapperService.SINGLE_MAPPING_NAME, request.mappings);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYzNDgzNA=="}, "originalCommit": {"oid": "86960cbea02f71fb7a9f322121ea33d9680aac25"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4643, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}