{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNDEwNjE0", "number": 50735, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODozMTowNVrODWxWbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODozMjoxMVrODWxXXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjAzODIzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/License.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODozMTowNVrOFbuBqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODozMTowNVrOFbuBqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYwOTk2MA==", "bodyText": "nit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalStateException(\"maxResourceUnits must be set for enterprise licenses\");\n          \n          \n            \n                            throw new IllegalStateException(\"maxResourceUnits must be set for license type [\" + type + \"]\");", "url": "https://github.com/elastic/elasticsearch/pull/50735#discussion_r364609960", "createdAt": "2020-01-09T08:31:05Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/License.java", "diffHunk": "@@ -386,20 +407,38 @@ private void validate() {\n             throw new IllegalStateException(\"uid can not be null\");\n         } else if (feature == null && version == VERSION_START) {\n             throw new IllegalStateException(\"feature can not be null\");\n-        } else if (maxNodes == -1) {\n-            throw new IllegalStateException(\"maxNodes has to be set\");\n         } else if (expiryDate == -1) {\n             throw new IllegalStateException(\"expiryDate has to be set\");\n         } else if (expiryDate == LicenseService.BASIC_SELF_GENERATED_LICENSE_EXPIRATION_MILLIS && LicenseType.isBasic(type) == false) {\n             throw new IllegalStateException(\"only basic licenses are allowed to have no expiration\");\n         }\n+\n+        if (LicenseType.isEnterprise(type) && version < VERSION_ENTERPRISE) {\n+            throw new IllegalStateException(\"license type [\" + type + \"] is not a valid for version [\" + version + \"] licenses\");\n+        }\n+        validateLimits(type, maxNodes, maxResourceUnits);\n+    }\n+\n+    private static void validateLimits(String type, int maxNodes, int maxResourceUnits) {\n+        if (LicenseType.isEnterprise(type)) {\n+            if (maxResourceUnits == -1) {\n+                throw new IllegalStateException(\"maxResourceUnits must be set for enterprise licenses\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cfc6305bb2fc5ba9b26ab4b63c7bd83f5f09c1a"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjAzOTkxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/License.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODozMTo1MVrOFbuCqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODozMTo1MVrOFbuCqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMDIxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalStateException(\"maxNodes may not be set for enterprise licenses\");\n          \n          \n            \n                            throw new IllegalStateException(\"maxNodes may not be set  license type [\" + type + \"]\");", "url": "https://github.com/elastic/elasticsearch/pull/50735#discussion_r364610217", "createdAt": "2020-01-09T08:31:51Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/License.java", "diffHunk": "@@ -386,20 +407,38 @@ private void validate() {\n             throw new IllegalStateException(\"uid can not be null\");\n         } else if (feature == null && version == VERSION_START) {\n             throw new IllegalStateException(\"feature can not be null\");\n-        } else if (maxNodes == -1) {\n-            throw new IllegalStateException(\"maxNodes has to be set\");\n         } else if (expiryDate == -1) {\n             throw new IllegalStateException(\"expiryDate has to be set\");\n         } else if (expiryDate == LicenseService.BASIC_SELF_GENERATED_LICENSE_EXPIRATION_MILLIS && LicenseType.isBasic(type) == false) {\n             throw new IllegalStateException(\"only basic licenses are allowed to have no expiration\");\n         }\n+\n+        if (LicenseType.isEnterprise(type) && version < VERSION_ENTERPRISE) {\n+            throw new IllegalStateException(\"license type [\" + type + \"] is not a valid for version [\" + version + \"] licenses\");\n+        }\n+        validateLimits(type, maxNodes, maxResourceUnits);\n+    }\n+\n+    private static void validateLimits(String type, int maxNodes, int maxResourceUnits) {\n+        if (LicenseType.isEnterprise(type)) {\n+            if (maxResourceUnits == -1) {\n+                throw new IllegalStateException(\"maxResourceUnits must be set for enterprise licenses\");\n+            } else if (maxNodes != -1) {\n+                throw new IllegalStateException(\"maxNodes may not be set for enterprise licenses\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cfc6305bb2fc5ba9b26ab4b63c7bd83f5f09c1a"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjA0MDYwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/License.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODozMjoxMVrOFbuDJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNzowOToyNFrOFcuckA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMDM0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalStateException(\"maxResourceUnits may only be set for enterprise licenses\");\n          \n          \n            \n                            throw new IllegalStateException(\"maxResourceUnits may only be set  license type [\" + type + \"]\");", "url": "https://github.com/elastic/elasticsearch/pull/50735#discussion_r364610340", "createdAt": "2020-01-09T08:32:11Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/License.java", "diffHunk": "@@ -386,20 +407,38 @@ private void validate() {\n             throw new IllegalStateException(\"uid can not be null\");\n         } else if (feature == null && version == VERSION_START) {\n             throw new IllegalStateException(\"feature can not be null\");\n-        } else if (maxNodes == -1) {\n-            throw new IllegalStateException(\"maxNodes has to be set\");\n         } else if (expiryDate == -1) {\n             throw new IllegalStateException(\"expiryDate has to be set\");\n         } else if (expiryDate == LicenseService.BASIC_SELF_GENERATED_LICENSE_EXPIRATION_MILLIS && LicenseType.isBasic(type) == false) {\n             throw new IllegalStateException(\"only basic licenses are allowed to have no expiration\");\n         }\n+\n+        if (LicenseType.isEnterprise(type) && version < VERSION_ENTERPRISE) {\n+            throw new IllegalStateException(\"license type [\" + type + \"] is not a valid for version [\" + version + \"] licenses\");\n+        }\n+        validateLimits(type, maxNodes, maxResourceUnits);\n+    }\n+\n+    private static void validateLimits(String type, int maxNodes, int maxResourceUnits) {\n+        if (LicenseType.isEnterprise(type)) {\n+            if (maxResourceUnits == -1) {\n+                throw new IllegalStateException(\"maxResourceUnits must be set for enterprise licenses\");\n+            } else if (maxNodes != -1) {\n+                throw new IllegalStateException(\"maxNodes may not be set for enterprise licenses\");\n+            }\n+        } else {\n+            if (maxNodes == -1) {\n+                throw new IllegalStateException(\"maxNodes has to be set\");\n+            } else if (maxResourceUnits != -1) {\n+                throw new IllegalStateException(\"maxResourceUnits may only be set for enterprise licenses\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cfc6305bb2fc5ba9b26ab4b63c7bd83f5f09c1a"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0NTU3Ng==", "bodyText": "This suggestion is backwards. I could change it to say that they \"may not be set for license type [\" + type + \"]\", but it seemed more helpful to explain when they are permitted than to just reject them for the current type.", "url": "https://github.com/elastic/elasticsearch/pull/50735#discussion_r365645576", "createdAt": "2020-01-13T04:39:58Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/License.java", "diffHunk": "@@ -386,20 +407,38 @@ private void validate() {\n             throw new IllegalStateException(\"uid can not be null\");\n         } else if (feature == null && version == VERSION_START) {\n             throw new IllegalStateException(\"feature can not be null\");\n-        } else if (maxNodes == -1) {\n-            throw new IllegalStateException(\"maxNodes has to be set\");\n         } else if (expiryDate == -1) {\n             throw new IllegalStateException(\"expiryDate has to be set\");\n         } else if (expiryDate == LicenseService.BASIC_SELF_GENERATED_LICENSE_EXPIRATION_MILLIS && LicenseType.isBasic(type) == false) {\n             throw new IllegalStateException(\"only basic licenses are allowed to have no expiration\");\n         }\n+\n+        if (LicenseType.isEnterprise(type) && version < VERSION_ENTERPRISE) {\n+            throw new IllegalStateException(\"license type [\" + type + \"] is not a valid for version [\" + version + \"] licenses\");\n+        }\n+        validateLimits(type, maxNodes, maxResourceUnits);\n+    }\n+\n+    private static void validateLimits(String type, int maxNodes, int maxResourceUnits) {\n+        if (LicenseType.isEnterprise(type)) {\n+            if (maxResourceUnits == -1) {\n+                throw new IllegalStateException(\"maxResourceUnits must be set for enterprise licenses\");\n+            } else if (maxNodes != -1) {\n+                throw new IllegalStateException(\"maxNodes may not be set for enterprise licenses\");\n+            }\n+        } else {\n+            if (maxNodes == -1) {\n+                throw new IllegalStateException(\"maxNodes has to be set\");\n+            } else if (maxResourceUnits != -1) {\n+                throw new IllegalStateException(\"maxResourceUnits may only be set for enterprise licenses\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMDM0MA=="}, "originalCommit": {"oid": "1cfc6305bb2fc5ba9b26ab4b63c7bd83f5f09c1a"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY2NTQyNA==", "bodyText": "Sure, makes sense, sorry for the half-baked suggestion", "url": "https://github.com/elastic/elasticsearch/pull/50735#discussion_r365665424", "createdAt": "2020-01-13T07:09:24Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/License.java", "diffHunk": "@@ -386,20 +407,38 @@ private void validate() {\n             throw new IllegalStateException(\"uid can not be null\");\n         } else if (feature == null && version == VERSION_START) {\n             throw new IllegalStateException(\"feature can not be null\");\n-        } else if (maxNodes == -1) {\n-            throw new IllegalStateException(\"maxNodes has to be set\");\n         } else if (expiryDate == -1) {\n             throw new IllegalStateException(\"expiryDate has to be set\");\n         } else if (expiryDate == LicenseService.BASIC_SELF_GENERATED_LICENSE_EXPIRATION_MILLIS && LicenseType.isBasic(type) == false) {\n             throw new IllegalStateException(\"only basic licenses are allowed to have no expiration\");\n         }\n+\n+        if (LicenseType.isEnterprise(type) && version < VERSION_ENTERPRISE) {\n+            throw new IllegalStateException(\"license type [\" + type + \"] is not a valid for version [\" + version + \"] licenses\");\n+        }\n+        validateLimits(type, maxNodes, maxResourceUnits);\n+    }\n+\n+    private static void validateLimits(String type, int maxNodes, int maxResourceUnits) {\n+        if (LicenseType.isEnterprise(type)) {\n+            if (maxResourceUnits == -1) {\n+                throw new IllegalStateException(\"maxResourceUnits must be set for enterprise licenses\");\n+            } else if (maxNodes != -1) {\n+                throw new IllegalStateException(\"maxNodes may not be set for enterprise licenses\");\n+            }\n+        } else {\n+            if (maxNodes == -1) {\n+                throw new IllegalStateException(\"maxNodes has to be set\");\n+            } else if (maxResourceUnits != -1) {\n+                throw new IllegalStateException(\"maxResourceUnits may only be set for enterprise licenses\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMDM0MA=="}, "originalCommit": {"oid": "1cfc6305bb2fc5ba9b26ab4b63c7bd83f5f09c1a"}, "originalPosition": 134}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4928, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}