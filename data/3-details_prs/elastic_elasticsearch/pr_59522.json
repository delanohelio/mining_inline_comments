{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4ODMyNTg4", "number": 59522, "title": "Fix handling of final pipelines when destination is changed", "bodyText": "This change fixes final pipelines if destination index is changed during pipeline run:\n\nfinal pipelines can't change destination anymore, exception is thrown if they try to\nif request/default pipeline changes destination final pipeline from old index won't be executed\nif request/default pipeline changes destination and new index has final pipeline it will be executed\ndefault pipeline from new index won't be executed\n\nAdditionally TransportBulkAction.resolvePipelines was moved to IngestService as it's needed for resolving pipelines from new index. Tests were moved accordingly.\nCloses #57968", "createdAt": "2020-07-14T11:52:47Z", "url": "https://github.com/elastic/elasticsearch/pull/59522", "merged": true, "mergeCommit": {"oid": "72880f732f8aa70f651e76fecfc0052997fab3cb"}, "closed": true, "closedAt": "2020-07-16T19:41:45Z", "author": {"login": "probakowski"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc00lYJAH2gAyNDQ4ODMyNTg4OmQ2NDVhOTAzZTk4MWZlMDQzNjY3ZWU0YmE0NGIxNWVmNzljN2IzMGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1hXEcAFqTQ0OTk4ODIzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d645a903e981fe043667ee4ba44b15ef79c7b30d", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/d645a903e981fe043667ee4ba44b15ef79c7b30d", "committedDate": "2020-07-14T11:46:02Z", "message": "Fix handling of final pipelines when destination is changed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d6b5f030ffa6f6a376a208a70154a31328e36a7", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/9d6b5f030ffa6f6a376a208a70154a31328e36a7", "committedDate": "2020-07-14T11:54:27Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/506bdb856dc4238997d6212e2c515add170851d8", "committedDate": "2020-07-14T12:13:10Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Njk5MTY0", "url": "https://github.com/elastic/elasticsearch/pull/59522#pullrequestreview-448699164", "createdAt": "2020-07-15T07:32:52Z", "commit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzozMjo1MlrOGxx3Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwODowNTo0NVrOGxy82g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1MDM0Ng==", "bodyText": "I think this field should be volatile? A different thread sets this field and a different thread reads this field.", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r454850346", "createdAt": "2020-07-15T07:32:52Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -89,6 +95,7 @@\n     private final ThreadPool threadPool;\n     private final IngestMetric totalMetrics = new IngestMetric();\n     private final List<Consumer<ClusterState>> ingestClusterStateListeners = new CopyOnWriteArrayList<>();\n+    private ClusterState state;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1MzQyMA==", "bodyText": "I think if state is null then an error should be returned? If a node has been started and is ready to accept requests then all components like IngestService should have been provided a cluster state.", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r454853420", "createdAt": "2020-07-15T07:38:56Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];\n                 innerExecute(slot, indexRequest, pipeline, onDropped, e -> {\n                     if (e != null) {\n                         onFailure.accept(slot, e);\n                     }\n \n-                    if (it.hasNext()) {\n-                        executePipelines(slot, it, indexRequest, onDropped, onFailure, counter, onCompletion, originalThread);\n+                    String newIndex = indexRequest.indices()[0];\n+                    if (newIndex != null && oldIndex.equals(newIndex) == false && hasFinalPipeline && it.hasNext() == false) {\n+                        totalMetrics.ingestFailed();\n+                        onFailure.accept(slot, new IllegalStateException(\"final pipeline [\"+ pipelineId +\n+                            \"] can't change the target index\"));\n+                    }\n+\n+                    Iterator<String> newIt = it;\n+                    boolean newHasFinalPipeline = hasFinalPipeline;\n+\n+                    if (oldIndex.equals(indexRequest.indices()[0]) == false && state != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 196}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg2MzMxOA==", "bodyText": "a return statement is missing here.", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r454863318", "createdAt": "2020-07-15T07:56:50Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];\n                 innerExecute(slot, indexRequest, pipeline, onDropped, e -> {\n                     if (e != null) {\n                         onFailure.accept(slot, e);\n                     }\n \n-                    if (it.hasNext()) {\n-                        executePipelines(slot, it, indexRequest, onDropped, onFailure, counter, onCompletion, originalThread);\n+                    String newIndex = indexRequest.indices()[0];\n+                    if (newIndex != null && oldIndex.equals(newIndex) == false && hasFinalPipeline && it.hasNext() == false) {\n+                        totalMetrics.ingestFailed();\n+                        onFailure.accept(slot, new IllegalStateException(\"final pipeline [\"+ pipelineId +\n+                            \"] can't change the target index\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg2NjQ5Nw==", "bodyText": "Maybe Objects.equal(oldIndex, newIndex) == false instead of newIndex != null && oldIndex.equals(newIndex) == false", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r454866497", "createdAt": "2020-07-15T08:02:33Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];\n                 innerExecute(slot, indexRequest, pipeline, onDropped, e -> {\n                     if (e != null) {\n                         onFailure.accept(slot, e);\n                     }\n \n-                    if (it.hasNext()) {\n-                        executePipelines(slot, it, indexRequest, onDropped, onFailure, counter, onCompletion, originalThread);\n+                    String newIndex = indexRequest.indices()[0];\n+                    if (newIndex != null && oldIndex.equals(newIndex) == false && hasFinalPipeline && it.hasNext() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg2ODE4Ng==", "bodyText": "maybe rename oldIndex to originalIndex?", "url": "https://github.com/elastic/elasticsearch/pull/59522#discussion_r454868186", "createdAt": "2020-07-15T08:05:45Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestService.java", "diffHunk": "@@ -408,13 +522,39 @@ private void executePipelines(\n                     throw new IllegalArgumentException(\"pipeline with id [\" + pipelineId + \"] does not exist\");\n                 }\n                 Pipeline pipeline = holder.pipeline;\n+                String oldIndex = indexRequest.indices()[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "506bdb856dc4238997d6212e2c515add170851d8"}, "originalPosition": 178}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3353012b806e01290f29ba9babad8ef20b4cb08", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/c3353012b806e01290f29ba9babad8ef20b4cb08", "committedDate": "2020-07-16T09:51:51Z", "message": "Fixed null checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70d238daa416a5d5233ceeeaed0ae0fea33b50cc", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/70d238daa416a5d5233ceeeaed0ae0fea33b50cc", "committedDate": "2020-07-16T09:52:04Z", "message": "volatile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71c53fa5acdddafb12fd68d5d5616bf7970bb583", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/71c53fa5acdddafb12fd68d5d5616bf7970bb583", "committedDate": "2020-07-16T09:53:35Z", "message": "originalIndex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fed7c6fbd1057c05b86702289a4df9d50824bdd1", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/fed7c6fbd1057c05b86702289a4df9d50824bdd1", "committedDate": "2020-07-16T09:59:43Z", "message": "revert debug changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf5c1dbf607ee2bb6ba7b6d1209ab6719bc0b91e", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf5c1dbf607ee2bb6ba7b6d1209ab6719bc0b91e", "committedDate": "2020-07-16T10:05:55Z", "message": "additional test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09780271211ccb41a18fdc27dddce44d4f6c965a", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/09780271211ccb41a18fdc27dddce44d4f6c965a", "committedDate": "2020-07-16T10:15:24Z", "message": "Merge branch 'master' into final-pipeline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0df296caaf806f12d9db34dd6e58350d9df8f551", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/0df296caaf806f12d9db34dd6e58350d9df8f551", "committedDate": "2020-07-16T14:18:26Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5OTg4MjM0", "url": "https://github.com/elastic/elasticsearch/pull/59522#pullrequestreview-449988234", "createdAt": "2020-07-16T15:56:08Z", "commit": {"oid": "0df296caaf806f12d9db34dd6e58350d9df8f551"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4467, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}