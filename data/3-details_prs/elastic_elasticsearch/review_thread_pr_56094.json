{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNzcyNjg4", "number": 56094, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMTowMjoyNFrOD48NhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMToxNToxMlrOD48bUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDMzMzQ4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMTowMjoyNFrOGP7mXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjoxMzozOVrOGP9mOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1ODMwMA==", "bodyText": "else fail (if type != 2)?", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419358300", "createdAt": "2020-05-04T11:02:24Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "diffHunk": "@@ -359,6 +360,24 @@ public String toString() {\n \n     BulkItemResponse() {}\n \n+    BulkItemResponse(ShardId shardId, StreamInput in) throws IOException {\n+        id = in.readVInt();\n+        opType = OpType.fromId(in.readByte());\n+\n+        byte type = in.readByte();\n+        if (type == 0) {\n+            response = new IndexResponse(shardId, in);\n+        } else if (type == 1) {\n+            response = new DeleteResponse(shardId, in);\n+        } else if (type == 3) { // make 3 instead of 2, because 2 is already in use for 'no responses'\n+            response = new UpdateResponse(shardId, in);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5MTAzMg==", "bodyText": "Sure added that check :)", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419391032", "createdAt": "2020-05-04T12:13:39Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "diffHunk": "@@ -359,6 +360,24 @@ public String toString() {\n \n     BulkItemResponse() {}\n \n+    BulkItemResponse(ShardId shardId, StreamInput in) throws IOException {\n+        id = in.readVInt();\n+        opType = OpType.fromId(in.readByte());\n+\n+        byte type = in.readByte();\n+        if (type == 0) {\n+            response = new IndexResponse(shardId, in);\n+        } else if (type == 1) {\n+            response = new DeleteResponse(shardId, in);\n+        } else if (type == 3) { // make 3 instead of 2, because 2 is already in use for 'no responses'\n+            response = new UpdateResponse(shardId, in);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1ODMwMA=="}, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDMzMzY3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMTowMjozMFrOGP7mgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjoxMzo0N1rOGP9mgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1ODMzOQ==", "bodyText": "else fail?", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419358339", "createdAt": "2020-05-04T11:02:30Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "diffHunk": "@@ -489,4 +508,28 @@ public void writeTo(StreamOutput out) throws IOException {\n             failure.writeTo(out);\n         }\n     }\n+\n+    public void writeThin(StreamOutput out) throws IOException {\n+        out.writeVInt(id);\n+        out.writeByte(opType.getId());\n+\n+        if (response == null) {\n+            out.writeByte((byte) 2);\n+        } else {\n+            if (response instanceof IndexResponse) {\n+                out.writeByte((byte) 0);\n+            } else if (response instanceof DeleteResponse) {\n+                out.writeByte((byte) 1);\n+            } else if (response instanceof UpdateResponse) {\n+                out.writeByte((byte) 3); // make 3 instead of 2, because 2 is already in use for 'no responses'\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5MTEwNQ==", "bodyText": "Sure, added that check :)", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419391105", "createdAt": "2020-05-04T12:13:47Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "diffHunk": "@@ -489,4 +508,28 @@ public void writeTo(StreamOutput out) throws IOException {\n             failure.writeTo(out);\n         }\n     }\n+\n+    public void writeThin(StreamOutput out) throws IOException {\n+        out.writeVInt(id);\n+        out.writeByte(opType.getId());\n+\n+        if (response == null) {\n+            out.writeByte((byte) 2);\n+        } else {\n+            if (response instanceof IndexResponse) {\n+                out.writeByte((byte) 0);\n+            } else if (response instanceof DeleteResponse) {\n+                out.writeByte((byte) 1);\n+            } else if (response instanceof UpdateResponse) {\n+                out.writeByte((byte) 3); // make 3 instead of 2, because 2 is already in use for 'no responses'\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1ODMzOQ=="}, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDM0MTgxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMTowNTozM1rOGP7rmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzowMzo0OVrOGP_Tyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg==", "bodyText": "Can we assert anything about in.getVersion() here? Not looked in detail, but I hope that this constructor will become obsolete after this change is complete.", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419359642", "createdAt": "2020-05-04T11:05:33Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -130,6 +130,22 @@ public DocWriteResponse(ShardId shardId, String id, long seqNo, long primaryTerm\n         this.result = Objects.requireNonNull(result);\n     }\n \n+    // needed for deserialization\n+    protected DocWriteResponse(ShardId shardId, StreamInput in) throws IOException {\n+        super(in);\n+        this.shardId = shardId;\n+        if (in.getVersion().before(Version.V_8_0_0)) {\n+            String type = in.readString();\n+            assert MapperService.SINGLE_MAPPING_NAME.equals(type) : \"Expected [_doc] but received [\" + type + \"]\";\n+        }\n+        id = in.readString();\n+        version = in.readZLong();\n+        seqNo = in.readZLong();\n+        primaryTerm = in.readVLong();\n+        forcedRefresh = in.readBoolean();\n+        result = Result.readFrom(in);\n+    }\n+\n     // needed for deserialization\n     protected DocWriteResponse(StreamInput in) throws IOException {\n         super(in);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM3NjkwNA==", "bodyText": "Not quite I think. We still have TransportIndexAction which still uses and logically needs the full deserialization on an IndexResponse as far as I can tell and won't go away in 8 right?", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419376904", "createdAt": "2020-05-04T11:44:12Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -130,6 +130,22 @@ public DocWriteResponse(ShardId shardId, String id, long seqNo, long primaryTerm\n         this.result = Objects.requireNonNull(result);\n     }\n \n+    // needed for deserialization\n+    protected DocWriteResponse(ShardId shardId, StreamInput in) throws IOException {\n+        super(in);\n+        this.shardId = shardId;\n+        if (in.getVersion().before(Version.V_8_0_0)) {\n+            String type = in.readString();\n+            assert MapperService.SINGLE_MAPPING_NAME.equals(type) : \"Expected [_doc] but received [\" + type + \"]\";\n+        }\n+        id = in.readString();\n+        version = in.readZLong();\n+        seqNo = in.readZLong();\n+        primaryTerm = in.readVLong();\n+        forcedRefresh = in.readBoolean();\n+        result = Result.readFrom(in);\n+    }\n+\n     // needed for deserialization\n     protected DocWriteResponse(StreamInput in) throws IOException {\n         super(in);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg=="}, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4MTQ4OA==", "bodyText": "Can't we get rid of that yet? It was deprecated over 3 years ago.", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419381488", "createdAt": "2020-05-04T11:54:06Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -130,6 +130,22 @@ public DocWriteResponse(ShardId shardId, String id, long seqNo, long primaryTerm\n         this.result = Objects.requireNonNull(result);\n     }\n \n+    // needed for deserialization\n+    protected DocWriteResponse(ShardId shardId, StreamInput in) throws IOException {\n+        super(in);\n+        this.shardId = shardId;\n+        if (in.getVersion().before(Version.V_8_0_0)) {\n+            String type = in.readString();\n+            assert MapperService.SINGLE_MAPPING_NAME.equals(type) : \"Expected [_doc] but received [\" + type + \"]\";\n+        }\n+        id = in.readString();\n+        version = in.readZLong();\n+        seqNo = in.readZLong();\n+        primaryTerm = in.readVLong();\n+        forcedRefresh = in.readBoolean();\n+        result = Result.readFrom(in);\n+    }\n+\n     // needed for deserialization\n     protected DocWriteResponse(StreamInput in) throws IOException {\n         super(in);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg=="}, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5MTI0OA==", "bodyText": "Right in 8 we can ... opening a PR for that sec", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419391248", "createdAt": "2020-05-04T12:14:03Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -130,6 +130,22 @@ public DocWriteResponse(ShardId shardId, String id, long seqNo, long primaryTerm\n         this.result = Objects.requireNonNull(result);\n     }\n \n+    // needed for deserialization\n+    protected DocWriteResponse(ShardId shardId, StreamInput in) throws IOException {\n+        super(in);\n+        this.shardId = shardId;\n+        if (in.getVersion().before(Version.V_8_0_0)) {\n+            String type = in.readString();\n+            assert MapperService.SINGLE_MAPPING_NAME.equals(type) : \"Expected [_doc] but received [\" + type + \"]\";\n+        }\n+        id = in.readString();\n+        version = in.readZLong();\n+        seqNo = in.readZLong();\n+        primaryTerm = in.readVLong();\n+        forcedRefresh = in.readBoolean();\n+        result = Result.readFrom(in);\n+    }\n+\n     // needed for deserialization\n     protected DocWriteResponse(StreamInput in) throws IOException {\n         super(in);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg=="}, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwMDUxMQ==", "bodyText": "Urgh nevermind, technically we can remove this now but it's a far from trivial change to do so (we're still using that action all over the place in tests). I don't think I can do that in the short-term.", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419400511", "createdAt": "2020-05-04T12:31:58Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -130,6 +130,22 @@ public DocWriteResponse(ShardId shardId, String id, long seqNo, long primaryTerm\n         this.result = Objects.requireNonNull(result);\n     }\n \n+    // needed for deserialization\n+    protected DocWriteResponse(ShardId shardId, StreamInput in) throws IOException {\n+        super(in);\n+        this.shardId = shardId;\n+        if (in.getVersion().before(Version.V_8_0_0)) {\n+            String type = in.readString();\n+            assert MapperService.SINGLE_MAPPING_NAME.equals(type) : \"Expected [_doc] but received [\" + type + \"]\";\n+        }\n+        id = in.readString();\n+        version = in.readZLong();\n+        seqNo = in.readZLong();\n+        primaryTerm = in.readVLong();\n+        forcedRefresh = in.readBoolean();\n+        result = Result.readFrom(in);\n+    }\n+\n     // needed for deserialization\n     protected DocWriteResponse(StreamInput in) throws IOException {\n         super(in);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg=="}, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQxOTA4Mw==", "bodyText": "Ok, can we mention IndexAction in this method's Javadoc so we keep track of the dependency.", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419419083", "createdAt": "2020-05-04T13:03:49Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -130,6 +130,22 @@ public DocWriteResponse(ShardId shardId, String id, long seqNo, long primaryTerm\n         this.result = Objects.requireNonNull(result);\n     }\n \n+    // needed for deserialization\n+    protected DocWriteResponse(ShardId shardId, StreamInput in) throws IOException {\n+        super(in);\n+        this.shardId = shardId;\n+        if (in.getVersion().before(Version.V_8_0_0)) {\n+            String type = in.readString();\n+            assert MapperService.SINGLE_MAPPING_NAME.equals(type) : \"Expected [_doc] but received [\" + type + \"]\";\n+        }\n+        id = in.readString();\n+        version = in.readZLong();\n+        seqNo = in.readZLong();\n+        primaryTerm = in.readVLong();\n+        forcedRefresh = in.readBoolean();\n+        result = Result.readFrom(in);\n+    }\n+\n     // needed for deserialization\n     protected DocWriteResponse(StreamInput in) throws IOException {\n         super(in);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg=="}, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDM1MDUzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMTowODo0MVrOGP7wxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjoxNTowMFrOGP9ozQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MDk2NQ==", "bodyText": "How about something more descriptive than doWrite? writeWithoutShardId? writeDetails?", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419360965", "createdAt": "2020-05-04T11:08:41Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -258,10 +274,19 @@ public String getLocation(@Nullable String routing) {\n         return location.toString();\n     }\n \n+    public void writeThin(StreamOutput out) throws IOException {\n+        super.writeTo(out);\n+        doWrite(out);\n+    }\n+\n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n         super.writeTo(out);\n         shardId.writeTo(out);\n+        doWrite(out);\n+    }\n+\n+    private void doWrite(StreamOutput out) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5MTY5Mw==", "bodyText": "Renamed :)", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419391693", "createdAt": "2020-05-04T12:15:00Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -258,10 +274,19 @@ public String getLocation(@Nullable String routing) {\n         return location.toString();\n     }\n \n+    public void writeThin(StreamOutput out) throws IOException {\n+        super.writeTo(out);\n+        doWrite(out);\n+    }\n+\n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n         super.writeTo(out);\n         shardId.writeTo(out);\n+        doWrite(out);\n+    }\n+\n+    private void doWrite(StreamOutput out) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MDk2NQ=="}, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDM2ODgxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMToxNToxMlrOGP776g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzowMzo1NVrOGP_T_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MzgxOA==", "bodyText": "This seems to leave BulkItemResponse#writeTo() as dead code that mostly duplicates this. Does that mean that we don't need BulkItemResponse implements Writeable? If so, can you remove that and rename these methods more appropriately?", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419363818", "createdAt": "2020-05-04T11:15:12Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "diffHunk": "@@ -489,4 +508,28 @@ public void writeTo(StreamOutput out) throws IOException {\n             failure.writeTo(out);\n         }\n     }\n+\n+    public void writeThin(StreamOutput out) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4MjkwMg==", "bodyText": "We're still using it in org.elasticsearch.action.bulk.BulkItemRequest#writeTo (though now that I looked over that, we might not have to ever write the ShardId for that one as well logically because it's always part of a BulkShardRequest which never has null for the ShardId).\nTo me it seems easier to leave it Writable for now so we have the symmetry with the constructor and rename (and not make it a Writable) after working out how to not write the shard id in that last spot as well. (that's easier to do after we clean up the request side of things in #56092 )", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419382902", "createdAt": "2020-05-04T11:57:09Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "diffHunk": "@@ -489,4 +508,28 @@ public void writeTo(StreamOutput out) throws IOException {\n             failure.writeTo(out);\n         }\n     }\n+\n+    public void writeThin(StreamOutput out) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MzgxOA=="}, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQxOTEzNA==", "bodyText": "Ok", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419419134", "createdAt": "2020-05-04T13:03:55Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "diffHunk": "@@ -489,4 +508,28 @@ public void writeTo(StreamOutput out) throws IOException {\n             failure.writeTo(out);\n         }\n     }\n+\n+    public void writeThin(StreamOutput out) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MzgxOA=="}, "originalCommit": {"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2452, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}