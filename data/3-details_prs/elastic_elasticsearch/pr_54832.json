{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5Nzk0MDQ0", "number": 54832, "title": "SQL: Implement DATETIME_FORMAT function for date/time formatting", "bodyText": "Implement DATETIME_FORMAT(<date/datetime/time>, ) function\nwhich allows for formatting a timestamp to the specified format. The patterns\nallowed as those of java.time.format.DateTimeFormatter.\nRelated to #53714", "createdAt": "2020-04-06T17:29:18Z", "url": "https://github.com/elastic/elasticsearch/pull/54832", "merged": true, "mergeCommit": {"oid": "72be0b54a9299e87e785469cdc9aafac2a48c046"}, "closed": true, "closedAt": "2020-04-08T09:49:50Z", "author": {"login": "matriv"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVCJF7AH2gAyMzk5Nzk0MDQ0OjdlMGI0YmMxZGE2Y2YyYTNlZTY1NmExY2Y4NWQ4ZDY5MWU1YzI2NmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVkFSbgH2gAyMzk5Nzk0MDQ0OmUxMWEwNzcyMWYxZWQ3MDA2OTNiMzNlNWUzZjQzZTFlM2FjOWJjZGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7e0b4bc1da6cf2a3ee656a1cf85d8d691e5c266c", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/7e0b4bc1da6cf2a3ee656a1cf85d8d691e5c266c", "committedDate": "2020-04-06T17:28:14Z", "message": "SQL: Implement TO_CHAR function for date/time formatting\n\nImplement TO_CHAR(<date/datetime/time>, <pattern>) function with\naliases: TOCHAR, DATE_FORMAT, FORMAT which allows for formatting a\ntimestamp to the specified format. The patterns allowed as those of\n`java.time.format.DateTimeFormatter`.\n\nRelated to #53714"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfa65155d03f5a28bc4c845984c3bebfc8b5cf60", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/dfa65155d03f5a28bc4c845984c3bebfc8b5cf60", "committedDate": "2020-04-06T18:05:34Z", "message": "fix imports and typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTQxMDk1", "url": "https://github.com/elastic/elasticsearch/pull/54832#pullrequestreview-388541095", "createdAt": "2020-04-06T19:11:44Z", "commit": {"oid": "dfa65155d03f5a28bc4c845984c3bebfc8b5cf60"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToxMTo0NFrOGBmFpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToyMTo1NFrOGBmb-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyNTc5OQ==", "bodyText": "drop a : is string null is returned.\nIf the pattern is empty, null be returned - is that the behavior of the other DBs?", "url": "https://github.com/elastic/elasticsearch/pull/54832#discussion_r404325799", "createdAt": "2020-04-06T19:11:44Z", "author": {"login": "costin"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -404,6 +404,48 @@ include-tagged::{sql-specs}/docs/docs.csv-spec[dateDiffDateTimeMinutes]\n include-tagged::{sql-specs}/docs/docs.csv-spec[dateDiffDateMinutes]\n --------------------------------------------------\n \n+[[sql-functions-datetime-dateformat]]\n+==== `DATE_FORMAT/FORMAT/TO_CHAR/TOCHAR`\n+\n+.Synopsis:\n+[source, sql]\n+--------------------------------------------------\n+DATE_FORMAT(\n+    datetime_exp/time_exp, <1>\n+    string_exp) <2>\n+--------------------------------------------------\n+\n+*Input*:\n+\n+<1> date/datetime/time expression\n+<2> format pattern\n+\n+*Output*: string\n+\n+*Description*: Returns the date/datetime/time as a string using the format specified in the 2nd argument. The formatting\n+pattern used is the one from\n+https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/time/format/DateTimeFormatter.html[`java.time.format.DateTimeFormatter`].\n+If any of the two arguments is `null` or the pattern is an empty string a `null` is returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa65155d03f5a28bc4c845984c3bebfc8b5cf60"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyNjEzMA==", "bodyText": "FORMAT seems a bit too generic - is there any DB that uses it?", "url": "https://github.com/elastic/elasticsearch/pull/54832#discussion_r404326130", "createdAt": "2020-04-06T19:12:22Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/qa/src/main/resources/command.csv-spec", "diffHunk": "@@ -60,7 +61,8 @@ DAY_OF_WEEK      |SCALAR\n DAY_OF_YEAR      |SCALAR\n DOM              |SCALAR\n DOW              |SCALAR         \n-DOY              |SCALAR         \n+DOY              |SCALAR\n+FORMAT           |SCALAR", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa65155d03f5a28bc4c845984c3bebfc8b5cf60"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyNjc4NA==", "bodyText": "Why is the function called ToChar and not DateFormat?", "url": "https://github.com/elastic/elasticsearch/pull/54832#discussion_r404326784", "createdAt": "2020-04-06T19:13:27Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/ToChar.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.sql.expression.function.scalar.datetime;\n+\n+import org.elasticsearch.xpack.ql.expression.Expression;\n+import org.elasticsearch.xpack.ql.expression.Expressions;\n+import org.elasticsearch.xpack.ql.expression.function.scalar.BinaryScalarFunction;\n+import org.elasticsearch.xpack.ql.expression.gen.pipeline.Pipe;\n+import org.elasticsearch.xpack.ql.tree.NodeInfo;\n+import org.elasticsearch.xpack.ql.tree.Source;\n+import org.elasticsearch.xpack.ql.type.DataType;\n+import org.elasticsearch.xpack.ql.type.DataTypes;\n+\n+import java.time.ZoneId;\n+\n+import static org.elasticsearch.xpack.ql.expression.TypeResolutions.isString;\n+import static org.elasticsearch.xpack.sql.expression.SqlTypeResolutions.isDateOrTime;\n+\n+public class ToChar extends BinaryDateTimeFunction {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa65155d03f5a28bc4c845984c3bebfc8b5cf60"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzMTUxMw==", "bodyText": "Do all the function names exist in other DBs? I'd like one which is unique to us due to the Java time format - maybe datetime_format (and datetime_parse) - or vice-versa - format_datetime and parse_datetime.\nMy point is, I think going forward it would be good to have our own function which uses Java time and then support the rest of the DB functions as translating implementation for the given arguments to our class.\nFor example DATE_FORMAT which is MySQL specific would exist as such but the MySQL arguments would then be converted into the java.time pattern.\nOtherwise looking like MySQL but not supporting its pattern is confusing.\nSince the pattern support is tedious, I'm fine with doing that in a separate support for the future. However I'd like to clarify the approach in the docs.\nMySQL DATE_FORMAT: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_date-format\nSQL Server FORMAT: https://docs.microsoft.com/en-us/sql/t-sql/functions/format-transact-sql?view=sql-server-ver15#ExampleD\nPostgres TO_CHAR: https://www.postgresql.org/docs/9.1/functions-formatting.html\nOracle TOCHAR: https://docs.oracle.com/cd/B19306_01/server.102/b14200/sql_elements004.htm#i34510\nNote that outside MySQL, the rest of the functions accept multiple formats and data types so to avoid confusion, I would not create aliases for them yet.\nBut rather treat them separately since if we are to introduce such functions, we would essentially have to obey their semantics rather then ours.", "url": "https://github.com/elastic/elasticsearch/pull/54832#discussion_r404331513", "createdAt": "2020-04-06T19:21:54Z", "author": {"login": "costin"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -404,6 +404,48 @@ include-tagged::{sql-specs}/docs/docs.csv-spec[dateDiffDateTimeMinutes]\n include-tagged::{sql-specs}/docs/docs.csv-spec[dateDiffDateMinutes]\n --------------------------------------------------\n \n+[[sql-functions-datetime-dateformat]]\n+==== `DATE_FORMAT/FORMAT/TO_CHAR/TOCHAR`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa65155d03f5a28bc4c845984c3bebfc8b5cf60"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b46e1dc65e4914e0640812dbb3e6ab3dd228423", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/0b46e1dc65e4914e0640812dbb3e6ab3dd228423", "committedDate": "2020-04-07T13:30:48Z", "message": "Fix docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4a3372ac4385ed038fa7e3fabf8ee091cdbda4d", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/d4a3372ac4385ed038fa7e3fabf8ee091cdbda4d", "committedDate": "2020-04-07T17:58:48Z", "message": "Rename function and keep only one name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "525fc28f59b0d134a226addd9b3bd2474136d016", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/525fc28f59b0d134a226addd9b3bd2474136d016", "committedDate": "2020-04-07T17:58:59Z", "message": "Merge remote-tracking branch 'upstream/master' into impl-tochar"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mzg3MjY5", "url": "https://github.com/elastic/elasticsearch/pull/54832#pullrequestreview-389387269", "createdAt": "2020-04-07T18:36:06Z", "commit": {"oid": "525fc28f59b0d134a226addd9b3bd2474136d016"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODozNjowNlrOGCQ8kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODozNjowNlrOGCQ8kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAyNzk4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                datetime_exp/time_exp, <1>\n          \n          \n            \n                date_exp/datetime_exp/time_exp, <1>", "url": "https://github.com/elastic/elasticsearch/pull/54832#discussion_r405027987", "createdAt": "2020-04-07T18:36:06Z", "author": {"login": "bpintea"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -404,6 +404,48 @@ include-tagged::{sql-specs}/docs/docs.csv-spec[dateDiffDateTimeMinutes]\n include-tagged::{sql-specs}/docs/docs.csv-spec[dateDiffDateMinutes]\n --------------------------------------------------\n \n+[[sql-functions-datetime-datetimeformat]]\n+==== `DATETIME_FORMAT`\n+\n+.Synopsis:\n+[source, sql]\n+--------------------------------------------------\n+DATETIME_FORMAT(\n+    datetime_exp/time_exp, <1>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525fc28f59b0d134a226addd9b3bd2474136d016"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "824934f879ca501ef7d64abaf124b70b4d9bb47e", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/824934f879ca501ef7d64abaf124b70b4d9bb47e", "committedDate": "2020-04-07T18:48:29Z", "message": "Merge remote-tracking branch 'upstream/master' into impl-tochar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43af070ef31013db03dd301ff283b84e119d2b96", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/43af070ef31013db03dd301ff283b84e119d2b96", "committedDate": "2020-04-07T18:52:29Z", "message": "Update docs/reference/sql/functions/date-time.asciidoc\n\nCo-Authored-By: Bogdan Pintea <bpintea@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NDAwMjQz", "url": "https://github.com/elastic/elasticsearch/pull/54832#pullrequestreview-389400243", "createdAt": "2020-04-07T18:53:40Z", "commit": {"oid": "43af070ef31013db03dd301ff283b84e119d2b96"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NDcwMjE0", "url": "https://github.com/elastic/elasticsearch/pull/54832#pullrequestreview-389470214", "createdAt": "2020-04-07T20:35:41Z", "commit": {"oid": "43af070ef31013db03dd301ff283b84e119d2b96"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTcxODAz", "url": "https://github.com/elastic/elasticsearch/pull/54832#pullrequestreview-389571803", "createdAt": "2020-04-08T00:07:39Z", "commit": {"oid": "43af070ef31013db03dd301ff283b84e119d2b96"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDowNzozOVrOGCafUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDoxNjozNlrOGCap9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NDMzOQ==", "bodyText": "Any particular reason for not using the alphabetical order (as it is now in the registry)?", "url": "https://github.com/elastic/elasticsearch/pull/54832#discussion_r405184339", "createdAt": "2020-04-08T00:07:39Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/SqlFunctionRegistry.java", "diffHunk": "@@ -177,6 +178,7 @@ public SqlFunctionRegistry() {\n                 def(MonthName.class, MonthName::new, \"MONTH_NAME\", \"MONTHNAME\"),\n                 def(MonthOfYear.class, MonthOfYear::new, \"MONTH_OF_YEAR\", \"MONTH\"),\n                 def(SecondOfMinute.class, SecondOfMinute::new, \"SECOND_OF_MINUTE\", \"SECOND\"),\n+                def(DateTimeFormat.class, DateTimeFormat::new, \"DATETIME_FORMAT\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43af070ef31013db03dd301ff283b84e119d2b96"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NTM0OQ==", "bodyText": ":-(", "url": "https://github.com/elastic/elasticsearch/pull/54832#discussion_r405185349", "createdAt": "2020-04-08T00:11:03Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/BinaryDateTimeDatePartFunction.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.sql.expression.function.scalar.datetime;\n+\n+import org.elasticsearch.xpack.ql.expression.Expression;\n+import org.elasticsearch.xpack.ql.expression.Expressions;\n+import org.elasticsearch.xpack.ql.tree.Source;\n+\n+import java.time.ZoneId;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.elasticsearch.common.logging.LoggerMessageFormat.format;\n+import static org.elasticsearch.xpack.ql.expression.TypeResolutions.isString;\n+\n+/**\n+ * Abstract super class for functions like {@link DateTrunc} and {@link DatePart}\n+ * which require an argument denoting a unit of date/time.\n+ */\n+public abstract class BinaryDateTimeDatePartFunction extends BinaryDateTimeFunction {\n+\n+    public BinaryDateTimeDatePartFunction(Source source, Expression datePart, Expression timestamp, ZoneId zoneId) {\n+        super(source, datePart, timestamp, zoneId);\n+    }\n+\n+    @Override\n+    protected TypeResolution resolveType() {\n+        TypeResolution resolution = isString(left(), sourceText(), Expressions.ParamOrdinal.FIRST);\n+        if (resolution.unresolved()) {\n+            return resolution;\n+        }\n+\n+        if (left().foldable()) {\n+            String datePartValue = (String) left().fold();\n+            if (datePartValue != null && resolveDateTimeField(datePartValue) == false) {\n+                List<String> similar = findSimilarDateTimeFields(datePartValue);\n+                if (similar.isEmpty()) {\n+                    return new TypeResolution(\n+                        format(\n+                            null,\n+                            \"first argument of [{}] must be one of {} or their aliases; found value [{}]\",\n+                            sourceText(),\n+                            validDateTimeFieldValues(),\n+                            Expressions.name(left())\n+                        )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43af070ef31013db03dd301ff283b84e119d2b96"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NzA2MQ==", "bodyText": "isString is enough here? (vs. isStringAndExact)", "url": "https://github.com/elastic/elasticsearch/pull/54832#discussion_r405187061", "createdAt": "2020-04-08T00:16:36Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/DateTimeFormat.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.sql.expression.function.scalar.datetime;\n+\n+import org.elasticsearch.xpack.ql.expression.Expression;\n+import org.elasticsearch.xpack.ql.expression.Expressions;\n+import org.elasticsearch.xpack.ql.expression.function.scalar.BinaryScalarFunction;\n+import org.elasticsearch.xpack.ql.expression.gen.pipeline.Pipe;\n+import org.elasticsearch.xpack.ql.tree.NodeInfo;\n+import org.elasticsearch.xpack.ql.tree.Source;\n+import org.elasticsearch.xpack.ql.type.DataType;\n+import org.elasticsearch.xpack.ql.type.DataTypes;\n+\n+import java.time.ZoneId;\n+\n+import static org.elasticsearch.xpack.ql.expression.TypeResolutions.isString;\n+import static org.elasticsearch.xpack.sql.expression.SqlTypeResolutions.isDateOrTime;\n+\n+public class DateTimeFormat extends BinaryDateTimeFunction {\n+\n+    public DateTimeFormat(Source source, Expression timestamp, Expression pattern, ZoneId zoneId) {\n+        super(source, timestamp, pattern, zoneId);\n+    }\n+\n+    @Override\n+    public DataType dataType() {\n+        return DataTypes.KEYWORD;\n+    }\n+\n+    @Override\n+    protected TypeResolution resolveType() {\n+        TypeResolution resolution = isDateOrTime(left(), sourceText(), Expressions.ParamOrdinal.FIRST);\n+        if (resolution.unresolved()) {\n+            return resolution;\n+        }\n+        resolution = isString(right(), sourceText(), Expressions.ParamOrdinal.SECOND);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43af070ef31013db03dd301ff283b84e119d2b96"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e11a07721f1ed700693b33e5e3f43e1e3ac9bcdd", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/e11a07721f1ed700693b33e5e3f43e1e3ac9bcdd", "committedDate": "2020-04-08T09:00:51Z", "message": "Rearrange entry in registry"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3699, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}