{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNTI4MjEw", "number": 56034, "title": "Move includeDataStream flag from IndicesOptions to IndexNameExpressionResolver.Context", "bodyText": "as a dedicated field that callers (transport actions) to IndexNameExpressionResolver can set.\nCurrently whether an api can resolve data streams depends on whether the include data streams indices option has been set. Transport actions' request class default indices options control whether an api supports data streams, this cannot be controlled from an api.\nThere are downsides with controlling whether an api support data stream via an indices option:\n\nThe explosion of IndicesOptions constants in order to define defaults for actions. Some APIs will not support data streams and other APIs will.\nThere are cases where internally we overwrite the default indices options on a request. In those cases we need to make sure that include data stream option keeps being enabled. For example in cluster info service. Keeping track of this is tricky.\nA minor problem is that in 7.x, transport clients will always be able to overwrite all flags inside an indices options instance on a request. If the include data stream flag isn't set then this could lead to unexpected behaviour.\n\nBy making whether an api/action can handle data streams an option in the corresponding transport action of an api, then the above downsides will no longer apply, which is what this PR is doing. The ability to handle data streams is pushed down to IndexNameExpressionResolver.Context, which really controls whether data streams can be resolved.", "createdAt": "2020-04-30T13:57:38Z", "url": "https://github.com/elastic/elasticsearch/pull/56034", "merged": true, "mergeCommit": {"oid": "378e36c26d1132ec1d1db680db0b683755659da5"}, "closed": true, "closedAt": "2020-05-04T19:03:53Z", "author": {"login": "martijnvg"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcctfs7gH2gAyNDExNTI4MjEwOmY5YzBjZTVjMDk4YjQwYmJiMzQxNTk4MjRlZDRiMzM5MWIwMWZmYWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceDHpugH2gAyNDExNTI4MjEwOjNmYWZjM2I2ODg1NDdlODdhMTJmODEwMTVkYWQ3MGI3MzkxOTY1OGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f9c0ce5c098b40bbb34159824ed4b3391b01ffab", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/f9c0ce5c098b40bbb34159824ed4b3391b01ffab", "committedDate": "2020-04-30T13:56:19Z", "message": "Move includeDataStream flag from an IndicesOptions to IndexNameExpressionResolver.Context\nas a dedicated field that callers to IndexNameExpressionResolver can set."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aee02623ad6707d6894b283962be5ddf9fb9c54", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/2aee02623ad6707d6894b283962be5ddf9fb9c54", "committedDate": "2020-04-30T14:19:29Z", "message": "fixed test compile errors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3351ebceba121b1a4b30e06612aeeb9d139e2f55", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/3351ebceba121b1a4b30e06612aeeb9d139e2f55", "committedDate": "2020-04-30T14:45:43Z", "message": "fixed tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e51edc22aab566c12328cd8ac9d08b9913bc686a", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/e51edc22aab566c12328cd8ac9d08b9913bc686a", "committedDate": "2020-04-30T15:04:04Z", "message": "Also alter indices stats api to support data streams.\nThe rollover api uses this api and otherwise rolling over data stream does no longer work."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d84e8e6f80c220d6320fd6bcd1a32bb503f2fc3", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/1d84e8e6f80c220d6320fd6bcd1a32bb503f2fc3", "committedDate": "2020-04-30T15:49:29Z", "message": "fixed tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNzQ0Mzg0", "url": "https://github.com/elastic/elasticsearch/pull/56034#pullrequestreview-403744384", "createdAt": "2020-04-30T17:47:49Z", "commit": {"oid": "1d84e8e6f80c220d6320fd6bcd1a32bb503f2fc3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzo0Nzo1MFrOGOz6dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzo0Nzo1MFrOGOz6dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE4Mzc5Ng==", "bodyText": "Note that this PR also adjusts the indices stats api in order to support resolving data streams. This is needed because rollover uses that api and we made that api already data stream ready. The reason why before we didn't have the change the indices stats api, is because rollover api overrides the default indices option when calling the indices stats api.", "url": "https://github.com/elastic/elasticsearch/pull/56034#discussion_r418183796", "createdAt": "2020-04-30T17:47:50Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java", "diffHunk": "@@ -57,6 +57,11 @@ public TransportIndicesStatsAction(ClusterService clusterService, TransportServi\n         this.indicesService = indicesService;\n     }\n \n+    @Override\n+    protected boolean shouldIncludeDataStreams() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d84e8e6f80c220d6320fd6bcd1a32bb503f2fc3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MTY2NjE5", "url": "https://github.com/elastic/elasticsearch/pull/56034#pullrequestreview-405166619", "createdAt": "2020-05-04T16:50:25Z", "commit": {"oid": "1d84e8e6f80c220d6320fd6bcd1a32bb503f2fc3"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjo1MDoyNVrOGQJCZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzoyNTo0OFrOGQKaEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3ODQ3MQ==", "bodyText": "This is fine.\nBut it made me wonder why we collect indices stats for all indices when we only use the stats for the write index?", "url": "https://github.com/elastic/elasticsearch/pull/56034#discussion_r419578471", "createdAt": "2020-05-04T16:50:25Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java", "diffHunk": "@@ -57,6 +57,11 @@ public TransportIndicesStatsAction(ClusterService clusterService, TransportServi\n         this.indicesService = indicesService;\n     }\n \n+    @Override\n+    protected boolean shouldIncludeDataStreams() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE4Mzc5Ng=="}, "originalCommit": {"oid": "1d84e8e6f80c220d6320fd6bcd1a32bb503f2fc3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwMDkxNA==", "bodyText": "I am not sure this ignores data streams anymore? Maybe change the comment to \"test with allow no indexes\"?", "url": "https://github.com/elastic/elasticsearch/pull/56034#discussion_r419600914", "createdAt": "2020-05-04T17:25:48Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/IndicesAndAliasesResolverTests.java", "diffHunk": "@@ -1533,15 +1533,15 @@ public void testDataStreamResolution() {\n             // Resolve data streams:\n             SearchRequest searchRequest = new SearchRequest();\n             searchRequest.indices(\"logs-*\");\n-            searchRequest.indicesOptions(IndicesOptions.fromOptions(false, false, true, false, false, true, true, true, true, true));\n+            searchRequest.indicesOptions(IndicesOptions.fromOptions(false, false, true, false, false, true, true, true, true));\n             ResolvedIndices resolvedIndices = defaultIndicesResolver.resolveIndicesAndAliases(searchRequest, metadata, authorizedIndices);\n             assertThat(resolvedIndices.getLocal(), contains(\"logs-foobar\"));\n             assertThat(resolvedIndices.getRemote(), emptyIterable());\n \n             // Ignore data streams:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d84e8e6f80c220d6320fd6bcd1a32bb503f2fc3"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60b4279ae3143b1e948971c526eb1bb410982d06", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/60b4279ae3143b1e948971c526eb1bb410982d06", "committedDate": "2020-05-04T17:39:50Z", "message": "Merge remote-tracking branch 'es/master' into refactor_include_data_streams_flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fafc3b688547e87a12f81015dad70b73919658d", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/3fafc3b688547e87a12f81015dad70b73919658d", "committedDate": "2020-05-04T17:41:53Z", "message": "iter"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 169, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}