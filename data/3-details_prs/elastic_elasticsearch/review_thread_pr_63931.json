{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NzQzMTkw", "number": 63931, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjozNTowOFrOEvwNWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjozNTowOFrOEvwNWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTA4Mzc4OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalScriptedMetricTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjozNTowOFrOHk6FUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzowMDo0MlrOHk7J_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ2MjQxOA==", "bodyText": "I don't think this is the right fix. The tests that fail are the one that always expect a reduced aggregation so they require a single element. That's why InternalAggregationTestCase#createTestInstanceForXContent was added but it's not used in AggregationsTests. See \n  \n    \n      elasticsearch/server/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java\n    \n    \n         Line 299\n      in\n      f20699e\n    \n    \n    \n    \n\n        \n          \n           aggs.add(testCase.createTestInstance()); \n        \n    \n  \n\n where replacing the call with createTestInstanceForXContent fixes all the failures.", "url": "https://github.com/elastic/elasticsearch/pull/63931#discussion_r508462418", "createdAt": "2020-10-20T12:35:08Z", "author": {"login": "jimczi"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalScriptedMetricTests.java", "diffHunk": "@@ -91,7 +91,7 @@ protected InternalScriptedMetric createTestInstance(String name, Map<String, Obj\n     }\n \n     private List<Object> randomAggregations() {\n-        return randomList(randomBoolean() ? 1 : 5, this::randomAggregation);\n+        return randomList(1, randomBoolean() ? 1 : 5, this::randomAggregation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbdb64473aaa483d245d8f3f2afd93021531d19"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ2OTQwMA==", "bodyText": "Yeah. I think the correct fix is in AggregationsTests.java to replace:\n            aggs.add(testCase.createTestInstance());\n\nwith:\n            aggs.add(testCase.createTestInstanceForXContent());\n\nI had long forgotten about this test!", "url": "https://github.com/elastic/elasticsearch/pull/63931#discussion_r508469400", "createdAt": "2020-10-20T12:45:29Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalScriptedMetricTests.java", "diffHunk": "@@ -91,7 +91,7 @@ protected InternalScriptedMetric createTestInstance(String name, Map<String, Obj\n     }\n \n     private List<Object> randomAggregations() {\n-        return randomList(randomBoolean() ? 1 : 5, this::randomAggregation);\n+        return randomList(1, randomBoolean() ? 1 : 5, this::randomAggregation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ2MjQxOA=="}, "originalCommit": {"oid": "8bbdb64473aaa483d245d8f3f2afd93021531d19"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3OTk5Nw==", "bodyText": "ups, thanks @jimczi you are right. I guess we will need to make that method accessible to the test as currently is protected.", "url": "https://github.com/elastic/elasticsearch/pull/63931#discussion_r508479997", "createdAt": "2020-10-20T13:00:42Z", "author": {"login": "iverase"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalScriptedMetricTests.java", "diffHunk": "@@ -91,7 +91,7 @@ protected InternalScriptedMetric createTestInstance(String name, Map<String, Obj\n     }\n \n     private List<Object> randomAggregations() {\n-        return randomList(randomBoolean() ? 1 : 5, this::randomAggregation);\n+        return randomList(1, randomBoolean() ? 1 : 5, this::randomAggregation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ2MjQxOA=="}, "originalCommit": {"oid": "8bbdb64473aaa483d245d8f3f2afd93021531d19"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4327, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}