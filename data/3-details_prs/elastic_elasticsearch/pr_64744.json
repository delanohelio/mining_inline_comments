{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2OTgyNzcw", "number": 64744, "title": "Prevent some BigArray leaking", "bodyText": "Its possible for us to fail to give bytes back to the circuit breaker if\nwe fail building some objects part way. Worse, if the object allocates a\nwhole page with of memory and then fails then it'll keep the memory\nallocated forever.\nThis adds a test utility we can use to assert that it doesn't happen and\nthen applies it to a bunch of part of the aggregations framework,\ncatching a few bugs in the process.", "createdAt": "2020-11-06T21:15:10Z", "url": "https://github.com/elastic/elasticsearch/pull/64744", "merged": true, "mergeCommit": {"oid": "e86c65c6c8d62d6bf4773f915471f20a0497f594"}, "closed": true, "closedAt": "2020-11-09T16:34:40Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ9pdRAH2gAyNTE2OTgyNzcwOmY2YzlhODI4MWZjOGRkNDJmNThmNjdjOGVmYTA1Nzc2MDQ1MDhkNmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABda1xApAH2gAyNTE2OTgyNzcwOjA2YTBlMjUwZTBhN2JhZGU2MDU3MTI4NTFhNTQwYWQ2YjUwMGJmZDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6c9a8281fc8dd42f58f67c8efa0577604508d6f", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/f6c9a8281fc8dd42f58f67c8efa0577604508d6f", "committedDate": "2020-11-06T21:14:50Z", "message": "Prevent some BigArray leaking\n\nIts possible for us to fail to give bytes back to the circuit breaker if\nwe fail building some objects part way. Worse, if the object allocates a\nwhole page with of memory and *then* fails then it'll keep the memory\nallocated forever.\n\nThis adds a test utility we can use to assert that it doesn't happen and\nthen applies it to a bunch of part of the aggregations framework,\ncatching a few bugs in the process."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1OTYzNzY0", "url": "https://github.com/elastic/elasticsearch/pull/64744#pullrequestreview-525963764", "createdAt": "2020-11-09T06:56:58Z", "commit": {"oid": "f6c9a8281fc8dd42f58f67c8efa0577604508d6f"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNjo1Njo1OFrOHvg7IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNjo1OTozMFrOHvg-XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU4NDU0NA==", "bodyText": "Maybe it is worthy a comment explaining that the parent class allocates a BigArray and therefore if this allocation fails, we need to make sure we release objects of the parent class?", "url": "https://github.com/elastic/elasticsearch/pull/64744#discussion_r519584544", "createdAt": "2020-11-09T06:56:58Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/common/util/LongHash.java", "diffHunk": "@@ -41,7 +41,13 @@ public LongHash(long capacity, BigArrays bigArrays) {\n     //Constructor with configurable capacity and load factor.\n     public LongHash(long capacity, float maxLoadFactor, BigArrays bigArrays) {\n         super(capacity, maxLoadFactor, bigArrays);\n-        keys = bigArrays.newLongArray(capacity, false);\n+        try {\n+            keys = bigArrays.newLongArray(capacity, false);\n+        } finally {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6c9a8281fc8dd42f58f67c8efa0577604508d6f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU4NDY0NA==", "bodyText": "Same as above", "url": "https://github.com/elastic/elasticsearch/pull/64744#discussion_r519584644", "createdAt": "2020-11-09T06:57:12Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/common/util/LongLongHash.java", "diffHunk": "@@ -48,7 +48,13 @@ public LongLongHash(long capacity, BigArrays bigArrays) {\n     //Constructor with configurable capacity and load factor.\n     public LongLongHash(long capacity, float maxLoadFactor, BigArrays bigArrays) {\n         super(capacity, maxLoadFactor, bigArrays);\n-        keys = bigArrays.newLongArray(2 * capacity, false);\n+        try {\n+            keys = bigArrays.newLongArray(2 * capacity, false);\n+        } finally {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6c9a8281fc8dd42f58f67c8efa0577604508d6f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU4NTM3Mw==", "bodyText": "great test, I am wondering if it would be better to have a specific class to test allocations instead of a static method here? The point is that it is difficult to find out which BigArrays implementation are actually tested. It can be done in a follow up PR or I might be wrong.", "url": "https://github.com/elastic/elasticsearch/pull/64744#discussion_r519585373", "createdAt": "2020-11-09T06:59:30Z", "author": {"login": "iverase"}, "path": "test/framework/src/main/java/org/elasticsearch/common/util/MockBigArrays.java", "diffHunk": "@@ -37,12 +46,50 @@\n import java.util.Random;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n+import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Function;\n \n import static org.elasticsearch.test.ESTestCase.assertBusy;\n import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n public class MockBigArrays extends BigArrays {\n+    private static final Logger logger = LogManager.getLogger(MockBigArrays.class);\n+\n+    /**\n+     * Assert that a function returning a {@link Releasable} runs to completion\n+     * when allocated a breaker with that breaks when it uses more than {@code max}\n+     * bytes <strong>and</strong> that the function doesn't leak any\n+     * {@linkplain BigArray}s if it is given a breaker that allows fewer bytes.\n+     */\n+    public static void assertFitsIn(ByteSizeValue max, Function<BigArrays, Releasable> run) {\n+        long maxBytes = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6c9a8281fc8dd42f58f67c8efa0577604508d6f"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06a0e250e0a7bade605712851a540ad6b500bfd3", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/06a0e250e0a7bade605712851a540ad6b500bfd3", "committedDate": "2020-11-09T14:37:46Z", "message": "Comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1247, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}