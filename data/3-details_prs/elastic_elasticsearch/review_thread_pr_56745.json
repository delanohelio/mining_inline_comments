{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3ODQ3MDQ5", "number": 56745, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTowMDoyOVrOEIAo0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTowMDoyOVrOEIAo0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODM0NTE0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/mapper-aggregate-metric/src/main/java/org/elasticsearch/xpack/aggregatemetric/aggregations/metrics/AggregateMetricsAggregatorsRegistrar.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTowMDoyOVrOGntf8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTo0NDo0N1rOGnvZ9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5MzEwNQ==", "bodyText": "Just a heads up - I changed MetricAggregatorSupplier to take a ValuesSourceConfig here instead of separate ValuesSource and DocValuesFormat args.  I've cleaned up VSConfig so it can be used as an actual config object rather than having to pick it apart in the factories.", "url": "https://github.com/elastic/elasticsearch/pull/56745#discussion_r444293105", "createdAt": "2020-06-23T15:00:29Z", "author": {"login": "not-napoleon"}, "path": "x-pack/plugin/mapper-aggregate-metric/src/main/java/org/elasticsearch/xpack/aggregatemetric/aggregations/metrics/AggregateMetricsAggregatorsRegistrar.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.aggregatemetric.aggregations.metrics;\n+\n+import org.elasticsearch.search.aggregations.metrics.AvgAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.MaxAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.MetricAggregatorSupplier;\n+import org.elasticsearch.search.aggregations.metrics.MinAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.MinMaxAggregatorSupplier;\n+import org.elasticsearch.search.aggregations.metrics.SumAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.ValueCountAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.ValueCountAggregatorSupplier;\n+import org.elasticsearch.search.aggregations.support.ValuesSourceRegistry;\n+import org.elasticsearch.xpack.aggregatemetric.aggregations.support.AggregateMetricsValuesSource;\n+import org.elasticsearch.xpack.aggregatemetric.aggregations.support.AggregateMetricsValuesSourceType;\n+\n+/**\n+ * Utility class providing static methods to register aggregators for the aggregate_metric values source\n+ */\n+public class AggregateMetricsAggregatorsRegistrar {\n+\n+    public static void registerSumAggregator(ValuesSourceRegistry.Builder builder) {\n+        builder.register(\n+            SumAggregationBuilder.NAME,\n+            AggregateMetricsValuesSourceType.AGGREGATE_METRIC,\n+            (MetricAggregatorSupplier) (name, valuesSource, formatter, context, parent, metadata) -> new AggregateMetricBackedSumAggregator(\n+                name,\n+                (AggregateMetricsValuesSource.AggregateDoubleMetric) valuesSource,\n+                formatter,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da07deb90734d12dec9c7a0e0d50579af77acd5f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMyNDM0MQ==", "bodyText": "Thanks @not-napoleon. I will fix that", "url": "https://github.com/elastic/elasticsearch/pull/56745#discussion_r444324341", "createdAt": "2020-06-23T15:44:47Z", "author": {"login": "csoulios"}, "path": "x-pack/plugin/mapper-aggregate-metric/src/main/java/org/elasticsearch/xpack/aggregatemetric/aggregations/metrics/AggregateMetricsAggregatorsRegistrar.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.aggregatemetric.aggregations.metrics;\n+\n+import org.elasticsearch.search.aggregations.metrics.AvgAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.MaxAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.MetricAggregatorSupplier;\n+import org.elasticsearch.search.aggregations.metrics.MinAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.MinMaxAggregatorSupplier;\n+import org.elasticsearch.search.aggregations.metrics.SumAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.ValueCountAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.ValueCountAggregatorSupplier;\n+import org.elasticsearch.search.aggregations.support.ValuesSourceRegistry;\n+import org.elasticsearch.xpack.aggregatemetric.aggregations.support.AggregateMetricsValuesSource;\n+import org.elasticsearch.xpack.aggregatemetric.aggregations.support.AggregateMetricsValuesSourceType;\n+\n+/**\n+ * Utility class providing static methods to register aggregators for the aggregate_metric values source\n+ */\n+public class AggregateMetricsAggregatorsRegistrar {\n+\n+    public static void registerSumAggregator(ValuesSourceRegistry.Builder builder) {\n+        builder.register(\n+            SumAggregationBuilder.NAME,\n+            AggregateMetricsValuesSourceType.AGGREGATE_METRIC,\n+            (MetricAggregatorSupplier) (name, valuesSource, formatter, context, parent, metadata) -> new AggregateMetricBackedSumAggregator(\n+                name,\n+                (AggregateMetricsValuesSource.AggregateDoubleMetric) valuesSource,\n+                formatter,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5MzEwNQ=="}, "originalCommit": {"oid": "da07deb90734d12dec9c7a0e0d50579af77acd5f"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 410, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}