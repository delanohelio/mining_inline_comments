{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODUzODU2", "number": 56852, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzo0NDowMlrOD_-Org==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzo0NDowMlrOD_-Org==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDA2NDQ2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/RBACEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzo0NDowMlrOGa9OKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzo0NDowMlrOGa9OKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxOTIxMQ==", "bodyText": "Maybe add a isAsyncAction to encapsulate the condition of both search and eql searches there? Any future updates would not touch authorizeIndexAction.", "url": "https://github.com/elastic/elasticsearch/pull/56852#discussion_r430919211", "createdAt": "2020-05-27T07:44:02Z", "author": {"login": "costin"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/RBACEngine.java", "diffHunk": "@@ -266,7 +267,7 @@ public void authorizeIndexAction(RequestInfo requestInfo, AuthorizationInfo auth\n                     // information such as the index and the incoming address of the request\n                     listener.onResponse(new IndexAuthorizationResult(true, IndicesAccessControl.ALLOW_NO_INDICES));\n                 }\n-            } else if (isAsyncSearchRelatedAction(action)) {\n+            } else if (isAsyncSearchRelatedAction(action) || isAsyncEqlSearchRelatedAction(action)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f818b2b7d81e3ef9848c932885547ba3af519236"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 312, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}