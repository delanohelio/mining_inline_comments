{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NTA3MDUw", "number": 52549, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODoyMzozOFrODhoZDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxOToxMDozMFrODhpTSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTkxMzczOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/geo/Extent.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODoyMzozOFrOFseNbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODo1NDoxOVrOFsfKtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3NjYyMw==", "bodyText": "should we encode negLeft directly instead of its delta with posRight, i.e. output.writeVInt(-this.negLeft);", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382176623", "createdAt": "2020-02-20T18:23:38Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/common/geo/Extent.java", "diffHunk": "@@ -165,15 +167,15 @@ void writeCompressed(ByteBuffersDataOutput output) throws IOException {\n         switch (type) {\n             case NONE_SET : break;\n             case POSITIVE_SET:\n-                output.writeVInt(this.posRight);\n+                output.writeVInt(this.posLeft);\n                 output.writeVLong((long) this.posRight - this.posLeft);\n                 break;\n             case NEGATIVE_SET:\n-                output.writeInt(this.negRight);\n+                output.writeVInt(-this.negRight);\n                 output.writeVLong((long) this.negRight - this.negLeft);\n                 break;\n             case CROSSES_LAT_AXIS:\n-                output.writeInt(this.posRight);\n+                output.writeVInt(this.posRight);\n                 output.writeVLong((long) this.posRight - this.negLeft);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3881c7d339953c6a28ba2d0c843da1473f823031"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE5MjMwOQ==", "bodyText": "I suppose the range of values are comparable for both. I'll update to write VInt. thanks for the suggestion!", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382192309", "createdAt": "2020-02-20T18:54:19Z", "author": {"login": "talevy"}, "path": "server/src/main/java/org/elasticsearch/common/geo/Extent.java", "diffHunk": "@@ -165,15 +167,15 @@ void writeCompressed(ByteBuffersDataOutput output) throws IOException {\n         switch (type) {\n             case NONE_SET : break;\n             case POSITIVE_SET:\n-                output.writeVInt(this.posRight);\n+                output.writeVInt(this.posLeft);\n                 output.writeVLong((long) this.posRight - this.posLeft);\n                 break;\n             case NEGATIVE_SET:\n-                output.writeInt(this.negRight);\n+                output.writeVInt(-this.negRight);\n                 output.writeVLong((long) this.negRight - this.negLeft);\n                 break;\n             case CROSSES_LAT_AXIS:\n-                output.writeInt(this.posRight);\n+                output.writeVInt(this.posRight);\n                 output.writeVLong((long) this.posRight - this.negLeft);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3NjYyMw=="}, "originalCommit": {"oid": "3881c7d339953c6a28ba2d0c843da1473f823031"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjA2MjgyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/geo/Extent.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxOToxMDozMFrOFsfsag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDoxNToyMVrOFtDW8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMDkzOA==", "bodyText": "we should probably update ALL_SET to have the same logic as POSITIVE_SET and NEGATIVE_SET combined?", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382200938", "createdAt": "2020-02-20T19:10:30Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/common/geo/Extent.java", "diffHunk": "@@ -115,29 +115,31 @@ static void readFromCompressed(ByteArrayDataInput input, Extent extent) {\n                 posRight = Integer.MIN_VALUE;\n                 break;\n             case POSITIVE_SET:\n-                posRight = input.readVInt();\n-                posLeft =  Math.toIntExact(posRight - input.readVLong());\n+                posLeft = input.readVInt();\n+                posRight =  Math.toIntExact(input.readVLong() + posLeft);\n                 negLeft = Integer.MAX_VALUE;\n                 negRight = Integer.MIN_VALUE;\n                 break;\n             case NEGATIVE_SET:\n-                negRight = input.readInt();\n+                negRight = -input.readVInt();\n                 negLeft = Math.toIntExact(negRight - input.readVLong());\n                 posLeft = Integer.MAX_VALUE;\n                 posRight = Integer.MIN_VALUE;\n                 break;\n             case CROSSES_LAT_AXIS:\n-                posRight = input.readInt();\n+                posRight = input.readVInt();\n                 negLeft = Math.toIntExact(posRight - input.readVLong());\n                 posLeft = 0;\n                 negRight = 0;\n                 break;\n-            default:\n+            case ALL_SET:\n                 posRight = input.readVInt();\n                 posLeft =  Math.toIntExact(posRight - input.readVLong());\n                 negRight = input.readInt();\n                 negLeft = Math.toIntExact(negRight - input.readVLong());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3881c7d339953c6a28ba2d0c843da1473f823031"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5NzQxNA==", "bodyText": "updated to what I think you meant", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382297414", "createdAt": "2020-02-20T22:36:30Z", "author": {"login": "talevy"}, "path": "server/src/main/java/org/elasticsearch/common/geo/Extent.java", "diffHunk": "@@ -115,29 +115,31 @@ static void readFromCompressed(ByteArrayDataInput input, Extent extent) {\n                 posRight = Integer.MIN_VALUE;\n                 break;\n             case POSITIVE_SET:\n-                posRight = input.readVInt();\n-                posLeft =  Math.toIntExact(posRight - input.readVLong());\n+                posLeft = input.readVInt();\n+                posRight =  Math.toIntExact(input.readVLong() + posLeft);\n                 negLeft = Integer.MAX_VALUE;\n                 negRight = Integer.MIN_VALUE;\n                 break;\n             case NEGATIVE_SET:\n-                negRight = input.readInt();\n+                negRight = -input.readVInt();\n                 negLeft = Math.toIntExact(negRight - input.readVLong());\n                 posLeft = Integer.MAX_VALUE;\n                 posRight = Integer.MIN_VALUE;\n                 break;\n             case CROSSES_LAT_AXIS:\n-                posRight = input.readInt();\n+                posRight = input.readVInt();\n                 negLeft = Math.toIntExact(posRight - input.readVLong());\n                 posLeft = 0;\n                 negRight = 0;\n                 break;\n-            default:\n+            case ALL_SET:\n                 posRight = input.readVInt();\n                 posLeft =  Math.toIntExact(posRight - input.readVLong());\n                 negRight = input.readInt();\n                 negLeft = Math.toIntExact(negRight - input.readVLong());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMDkzOA=="}, "originalCommit": {"oid": "3881c7d339953c6a28ba2d0c843da1473f823031"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU2OTc0NQ==", "bodyText": "Actually I was thinking of doing this:\n                posLeft = input.readVInt();\n                posRight =  Math.toIntExact(input.readVLong() + posLeft);\n                negRight = -input.readVInt();\n                negLeft = Math.toIntExact(negRight - input.readVLong());\n\nThere is no reason to serialize posLeft/posRight differently in the POSITIVE_SET case or in the ALL_SET case? And likewise for negLeft/negRight in the NEGATIVE_SET or ALL_SET cases?", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382569745", "createdAt": "2020-02-21T13:03:31Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/common/geo/Extent.java", "diffHunk": "@@ -115,29 +115,31 @@ static void readFromCompressed(ByteArrayDataInput input, Extent extent) {\n                 posRight = Integer.MIN_VALUE;\n                 break;\n             case POSITIVE_SET:\n-                posRight = input.readVInt();\n-                posLeft =  Math.toIntExact(posRight - input.readVLong());\n+                posLeft = input.readVInt();\n+                posRight =  Math.toIntExact(input.readVLong() + posLeft);\n                 negLeft = Integer.MAX_VALUE;\n                 negRight = Integer.MIN_VALUE;\n                 break;\n             case NEGATIVE_SET:\n-                negRight = input.readInt();\n+                negRight = -input.readVInt();\n                 negLeft = Math.toIntExact(negRight - input.readVLong());\n                 posLeft = Integer.MAX_VALUE;\n                 posRight = Integer.MIN_VALUE;\n                 break;\n             case CROSSES_LAT_AXIS:\n-                posRight = input.readInt();\n+                posRight = input.readVInt();\n                 negLeft = Math.toIntExact(posRight - input.readVLong());\n                 posLeft = 0;\n                 negRight = 0;\n                 break;\n-            default:\n+            case ALL_SET:\n                 posRight = input.readVInt();\n                 posLeft =  Math.toIntExact(posRight - input.readVLong());\n                 negRight = input.readInt();\n                 negLeft = Math.toIntExact(negRight - input.readVLong());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMDkzOA=="}, "originalCommit": {"oid": "3881c7d339953c6a28ba2d0c843da1473f823031"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NTI2Ng==", "bodyText": "my bad. I misunderstood. will update thanks", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382785266", "createdAt": "2020-02-21T20:15:21Z", "author": {"login": "talevy"}, "path": "server/src/main/java/org/elasticsearch/common/geo/Extent.java", "diffHunk": "@@ -115,29 +115,31 @@ static void readFromCompressed(ByteArrayDataInput input, Extent extent) {\n                 posRight = Integer.MIN_VALUE;\n                 break;\n             case POSITIVE_SET:\n-                posRight = input.readVInt();\n-                posLeft =  Math.toIntExact(posRight - input.readVLong());\n+                posLeft = input.readVInt();\n+                posRight =  Math.toIntExact(input.readVLong() + posLeft);\n                 negLeft = Integer.MAX_VALUE;\n                 negRight = Integer.MIN_VALUE;\n                 break;\n             case NEGATIVE_SET:\n-                negRight = input.readInt();\n+                negRight = -input.readVInt();\n                 negLeft = Math.toIntExact(negRight - input.readVLong());\n                 posLeft = Integer.MAX_VALUE;\n                 posRight = Integer.MIN_VALUE;\n                 break;\n             case CROSSES_LAT_AXIS:\n-                posRight = input.readInt();\n+                posRight = input.readVInt();\n                 negLeft = Math.toIntExact(posRight - input.readVLong());\n                 posLeft = 0;\n                 negRight = 0;\n                 break;\n-            default:\n+            case ALL_SET:\n                 posRight = input.readVInt();\n                 posLeft =  Math.toIntExact(posRight - input.readVLong());\n                 negRight = input.readInt();\n                 negLeft = Math.toIntExact(negRight - input.readVLong());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMDkzOA=="}, "originalCommit": {"oid": "3881c7d339953c6a28ba2d0c843da1473f823031"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3833, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}