{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MzAzNjQ0", "number": 60465, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODowMzowMlrOET95Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODowNDowMlrOET96PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzcyNDU0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeScriptFieldMapperTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODowMzowMlrOG5_oRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODowMzowMlrOG5_oRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NDUxOQ==", "bodyText": "nit: I think that looking at this error message, there is a slight change that it makes users think that the specific value they provided for the format parameter is not supported, more than providing any format. same for locale. Maybe we can rephrase it?", "url": "https://github.com/elastic/elasticsearch/pull/60465#discussion_r463464519", "createdAt": "2020-07-31T08:03:02Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeScriptFieldMapperTests.java", "diffHunk": "@@ -145,6 +148,51 @@ public void testDate() throws IOException {\n         assertEquals(Strings.toString(mapping(\"date\")), Strings.toString(mapperService.documentMapper()));\n     }\n \n+    public void testDateWithFormat() throws IOException {\n+        CheckedSupplier<XContentBuilder, IOException> mapping = () -> mapping(\"date\", b -> b.field(\"format\", \"yyyy-MM-dd\"));\n+        MapperService mapperService = createIndex(\"test\", Settings.EMPTY, mapping.get()).mapperService();\n+        FieldMapper mapper = (FieldMapper) mapperService.documentMapper().mappers().getMapper(\"field\");\n+        assertThat(mapper, instanceOf(RuntimeScriptFieldMapper.class));\n+        assertEquals(Strings.toString(mapping.get()), Strings.toString(mapperService.documentMapper()));\n+    }\n+\n+    public void testDateWithLocale() throws IOException {\n+        CheckedSupplier<XContentBuilder, IOException> mapping = () -> mapping(\"date\", b -> b.field(\"locale\", \"en_GB\"));\n+        MapperService mapperService = createIndex(\"test\", Settings.EMPTY, mapping.get()).mapperService();\n+        FieldMapper mapper = (FieldMapper) mapperService.documentMapper().mappers().getMapper(\"field\");\n+        assertThat(mapper, instanceOf(RuntimeScriptFieldMapper.class));\n+        assertEquals(Strings.toString(mapping.get()), Strings.toString(mapperService.documentMapper()));\n+    }\n+\n+    public void testDateWithLocaleAndFormat() throws IOException {\n+        CheckedSupplier<XContentBuilder, IOException> mapping = () -> mapping(\n+            \"date\",\n+            b -> b.field(\"format\", \"yyyy-MM-dd\").field(\"locale\", \"en_GB\")\n+        );\n+        MapperService mapperService = createIndex(\"test\", Settings.EMPTY, mapping.get()).mapperService();\n+        FieldMapper mapper = (FieldMapper) mapperService.documentMapper().mappers().getMapper(\"field\");\n+        assertThat(mapper, instanceOf(RuntimeScriptFieldMapper.class));\n+        assertEquals(Strings.toString(mapping.get()), Strings.toString(mapperService.documentMapper()));\n+    }\n+\n+    public void testNonDateWithFormat() throws IOException {\n+        String runtimeType = randomValueOtherThan(\"date\", () -> randomFrom(runtimeTypes));\n+        Exception e = expectThrows(\n+            MapperParsingException.class,\n+            () -> createIndex(\"test\", Settings.EMPTY, mapping(runtimeType, b -> b.field(\"format\", \"yyyy-MM-dd\")))\n+        );\n+        assertThat(e.getMessage(), equalTo(\"Failed to parse mapping: format not supported by runtime_type [\" + runtimeType + \"]\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ef23c6f94690e546370dac7d7f38fd33a54f103"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzcyNzMzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/ScriptDateMappedFieldTypeTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODowNDowMlrOG5_p_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNjoyOToyOFrOG6OoVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NDk1Nw==", "bodyText": "would it make sense to have some duel tests between concrete dates and runtime dates to make sure that formatting and locale are applied the same way?", "url": "https://github.com/elastic/elasticsearch/pull/60465#discussion_r463464957", "createdAt": "2020-07-31T08:04:02Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/ScriptDateMappedFieldTypeTests.java", "diffHunk": "@@ -373,4 +430,9 @@ private void checkExpensiveQuery(BiConsumer<ScriptDateMappedFieldType, QueryShar\n             equalTo(\"queries cannot be executed against [runtime_script] fields while [search.allow_expensive_queries] is set to [false].\")\n         );\n     }\n+\n+    private void checkBadDate(ThrowingRunnable queryBuilder) {\n+        Exception e = expectThrows(ElasticsearchParseException.class, queryBuilder);\n+        assertThat(e.getMessage(), containsString(\"failed to parse date field\"));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ef23c6f94690e546370dac7d7f38fd33a54f103"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcxMDI5Mg==", "bodyText": "Yeah!", "url": "https://github.com/elastic/elasticsearch/pull/60465#discussion_r463710292", "createdAt": "2020-07-31T16:29:28Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/ScriptDateMappedFieldTypeTests.java", "diffHunk": "@@ -373,4 +430,9 @@ private void checkExpensiveQuery(BiConsumer<ScriptDateMappedFieldType, QueryShar\n             equalTo(\"queries cannot be executed against [runtime_script] fields while [search.allow_expensive_queries] is set to [false].\")\n         );\n     }\n+\n+    private void checkBadDate(ThrowingRunnable queryBuilder) {\n+        Exception e = expectThrows(ElasticsearchParseException.class, queryBuilder);\n+        assertThat(e.getMessage(), containsString(\"failed to parse date field\"));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NDk1Nw=="}, "originalCommit": {"oid": "1ef23c6f94690e546370dac7d7f38fd33a54f103"}, "originalPosition": 140}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2755, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}