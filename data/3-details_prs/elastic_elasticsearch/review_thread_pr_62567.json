{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4Nzg5OTQ2", "number": 62567, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjoyNzowNlrOEkoKrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoyNzozNFrOEkq5Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODQyMjg2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjoyNzowNlrOHTrdcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoyNjo0M1rOHTv0Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM5NzA0Mg==", "bodyText": "Please let me know of a better suggestion for this name as I really couldn't come up with one.", "url": "https://github.com/elastic/elasticsearch/pull/62567#discussion_r490397042", "createdAt": "2020-09-17T16:27:06Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -84,11 +84,15 @@ booleanExpression\n \n \n valueExpression\n-    : primaryExpression predicate?                                                      #valueExpressionDefault\n-    | operator=(MINUS | PLUS) valueExpression                                           #arithmeticUnary\n-    | left=valueExpression operator=(ASTERISK | SLASH | PERCENT) right=valueExpression  #arithmeticBinary\n-    | left=valueExpression operator=(PLUS | MINUS) right=valueExpression                #arithmeticBinary\n-    | left=valueExpression comparisonOperator right=valueExpression                     #comparison\n+    : defaultExpression                                                                     #valueExpressionDefault\n+    | left=defaultExpression comparisonOperator right=defaultExpression                     #comparison\n+    ;\n+\n+defaultExpression", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44bec4ad8388538f149001aa7106ee5df64a5784"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxNDQ0NQ==", "bodyText": "looks like these are all arithmetic, so maybe arithmeticExpression?", "url": "https://github.com/elastic/elasticsearch/pull/62567#discussion_r490414445", "createdAt": "2020-09-17T16:54:17Z", "author": {"login": "rw-access"}, "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -84,11 +84,15 @@ booleanExpression\n \n \n valueExpression\n-    : primaryExpression predicate?                                                      #valueExpressionDefault\n-    | operator=(MINUS | PLUS) valueExpression                                           #arithmeticUnary\n-    | left=valueExpression operator=(ASTERISK | SLASH | PERCENT) right=valueExpression  #arithmeticBinary\n-    | left=valueExpression operator=(PLUS | MINUS) right=valueExpression                #arithmeticBinary\n-    | left=valueExpression comparisonOperator right=valueExpression                     #comparison\n+    : defaultExpression                                                                     #valueExpressionDefault\n+    | left=defaultExpression comparisonOperator right=defaultExpression                     #comparison\n+    ;\n+\n+defaultExpression", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM5NzA0Mg=="}, "originalCommit": {"oid": "44bec4ad8388538f149001aa7106ee5df64a5784"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2ODQxOA==", "bodyText": "I opt for operators (operatorExpression) since the block contains arithmetic and comparison operators, the latter being logical not arithmetic.", "url": "https://github.com/elastic/elasticsearch/pull/62567#discussion_r490468418", "createdAt": "2020-09-17T18:26:43Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -84,11 +84,15 @@ booleanExpression\n \n \n valueExpression\n-    : primaryExpression predicate?                                                      #valueExpressionDefault\n-    | operator=(MINUS | PLUS) valueExpression                                           #arithmeticUnary\n-    | left=valueExpression operator=(ASTERISK | SLASH | PERCENT) right=valueExpression  #arithmeticBinary\n-    | left=valueExpression operator=(PLUS | MINUS) right=valueExpression                #arithmeticBinary\n-    | left=valueExpression comparisonOperator right=valueExpression                     #comparison\n+    : defaultExpression                                                                     #valueExpressionDefault\n+    | left=defaultExpression comparisonOperator right=defaultExpression                     #comparison\n+    ;\n+\n+defaultExpression", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM5NzA0Mg=="}, "originalCommit": {"oid": "44bec4ad8388538f149001aa7106ee5df64a5784"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODQyODY1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/test/java/org/elasticsearch/xpack/eql/parser/ExpressionTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjoyODozN1rOHTrhLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjoyODozN1rOHTrhLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM5Nzk5Nw==", "bodyText": "Can you add a test for something like 1 * 2 <= 3 * 4, just to make sure these operators are still playing nicely with precedence for other operators. Even better would be to verify the AST matches this: (1 * 2) <= (3 * 4)", "url": "https://github.com/elastic/elasticsearch/pull/62567#discussion_r490397997", "createdAt": "2020-09-17T16:28:37Z", "author": {"login": "rw-access"}, "path": "x-pack/plugin/eql/src/test/java/org/elasticsearch/xpack/eql/parser/ExpressionTests.java", "diffHunk": "@@ -221,4 +221,25 @@ public void testInEmptySet() {\n         expectThrows(ParsingException.class, \"Expected syntax error\",\n             () -> expr(\"name in ()\"));\n     }\n+\n+    public void testChainedComparisons() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44bec4ad8388538f149001aa7106ee5df64a5784"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODUzOTM0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/test/java/org/elasticsearch/xpack/eql/parser/ExpressionTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjo1NjowMlrOHTslpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjo1NjowMlrOHTslpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxNTUyNA==", "bodyText": "could also do this, although it doesn't make assertions on what the underlying trees are, just that they are equivalent\nassertEquals(expr(\"1 * -2 <= -3 * 4\"), expr(\"(1 * -2) <= (-3 * 4)\"))", "url": "https://github.com/elastic/elasticsearch/pull/62567#discussion_r490415524", "createdAt": "2020-09-17T16:56:02Z", "author": {"login": "rw-access"}, "path": "x-pack/plugin/eql/src/test/java/org/elasticsearch/xpack/eql/parser/ExpressionTests.java", "diffHunk": "@@ -221,4 +222,43 @@ public void testInEmptySet() {\n         expectThrows(ParsingException.class, \"Expected syntax error\",\n             () -> expr(\"name in ()\"));\n     }\n+\n+    public void testComplexComparison() {\n+        String comparison;\n+        if (randomBoolean()) {\n+            comparison = \"1 * -2 <= -3 * 4\";\n+        } else {\n+            comparison = \"(1 * -2) <= (-3 * 4)\";\n+        }\n+\n+        Mul left = new Mul(null,\n+                new Literal(null, 1, DataTypes.INTEGER),\n+                new Neg(null, new Literal(null, 2, DataTypes.INTEGER)));\n+        Mul right = new Mul(null,\n+                new Neg(null, new Literal(null, 3, DataTypes.INTEGER)),\n+                new Literal(null, 4, DataTypes.INTEGER));\n+\n+        assertEquals(new LessThanOrEqual(null, left, right, UTC), expr(comparison));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2480ff92dc449d0b127c65eb956c7f5a8cc04eea"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODg2OTE0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoyNzozNFrOHTv2Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoyNzozNFrOHTv2Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2ODkyMg==", "bodyText": "defaultExpressionDefault -> operatorExpressionDefault", "url": "https://github.com/elastic/elasticsearch/pull/62567#discussion_r490468922", "createdAt": "2020-09-17T18:27:34Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -84,11 +84,15 @@ booleanExpression\n \n \n valueExpression\n-    : primaryExpression predicate?                                                      #valueExpressionDefault\n-    | operator=(MINUS | PLUS) valueExpression                                           #arithmeticUnary\n-    | left=valueExpression operator=(ASTERISK | SLASH | PERCENT) right=valueExpression  #arithmeticBinary\n-    | left=valueExpression operator=(PLUS | MINUS) right=valueExpression                #arithmeticBinary\n-    | left=valueExpression comparisonOperator right=valueExpression                     #comparison\n+    : defaultExpression                                                                     #valueExpressionDefault\n+    | left=defaultExpression comparisonOperator right=defaultExpression                     #comparison\n+    ;\n+\n+defaultExpression\n+    : primaryExpression predicate?                                                          #defaultExpressionDefault", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c38e5e7340087cfa28c7393d15f00c9351dbad63"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3567, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}