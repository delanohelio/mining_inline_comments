{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MTY1NTM5", "number": 61798, "title": "Allow [null] values in [null_value]", "bodyText": "Several field mappers have a null_value parameter, that allows you to specify a placeholder\nvalue to insert into a document if the incoming value for that field is null.  The default value\nfor this is always null, meaning \"add no placeholder\".  However, we explicitly bar users from\nsetting this parameter directly to null (done in #7978, in order to fix an NPE).\nThis exclusion means that if a mapper is serialized with include_defaults, then we either need\nto special-case null_value to ensure that it is not output when it holds the default value, or\nwe find that the resulting serialized form cannot be used to create a mapping.  This stops us\ndoing some useful generic testing of mappers.\nThis commit permits null as a parameter value for null_value, and changes the tests to check\nthat it is a) permissible and b) applied without throwing errors.  As part of the testing changes,\na new base class MapperServiceTestCase is refactored from MapperTestCase, holding\nthe various helper methods related to building mappings but not the single-mapper specific\nabstract methods.\nCloses #58823", "createdAt": "2020-09-01T15:34:54Z", "url": "https://github.com/elastic/elasticsearch/pull/61798", "merged": true, "mergeCommit": {"oid": "03c3d6a339a469afdd28f3d3a286a7ddcad73b35"}, "closed": true, "closedAt": "2020-09-01T16:56:28Z", "author": {"login": "romseygeek"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEpEdvgH2gAyNDc3MTY1NTM5OjgxMWRmYzg1MTBmODQ5MTdhZTJlNzRmYjdmOTQxM2ExMDk5MWMwNTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEpeSFgFqTQ3OTg4NDczMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "811dfc8510f84917ae2e74fb7f9413a10991c051", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/811dfc8510f84917ae2e74fb7f9413a10991c051", "committedDate": "2020-09-01T15:23:55Z", "message": "Allow [null] values in [null_value]"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5ODg0NzMw", "url": "https://github.com/elastic/elasticsearch/pull/61798#pullrequestreview-479884730", "createdAt": "2020-09-01T15:52:05Z", "commit": {"oid": "811dfc8510f84917ae2e74fb7f9413a10991c051"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo1MjowNVrOHK9AVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo1MjowNVrOHK9AVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NzMxNg==", "bodyText": "\ud83d\udc4d These are quite useful and I could see us wanting them, say, in the AggregatorTestCase to make it very easy to index with a mapping.", "url": "https://github.com/elastic/elasticsearch/pull/61798#discussion_r481247316", "createdAt": "2020-09-01T15:52:05Z", "author": {"login": "nik9000"}, "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/MapperServiceTestCase.java", "diffHunk": "@@ -0,0 +1,179 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.mapper;\n+\n+import org.apache.lucene.analysis.standard.StandardAnalyzer;\n+import org.apache.lucene.index.IndexReader;\n+import org.apache.lucene.index.IndexWriterConfig;\n+import org.apache.lucene.index.RandomIndexWriter;\n+import org.apache.lucene.store.Directory;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.CheckedConsumer;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.compress.CompressedXContent;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.common.xcontent.json.JsonXContent;\n+import org.elasticsearch.index.IndexSettings;\n+import org.elasticsearch.index.analysis.AnalyzerScope;\n+import org.elasticsearch.index.analysis.IndexAnalyzers;\n+import org.elasticsearch.index.analysis.NamedAnalyzer;\n+import org.elasticsearch.index.query.QueryShardContext;\n+import org.elasticsearch.index.similarity.SimilarityService;\n+import org.elasticsearch.indices.IndicesModule;\n+import org.elasticsearch.indices.mapper.MapperRegistry;\n+import org.elasticsearch.plugins.MapperPlugin;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.script.ScriptService;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.Map;\n+\n+import static java.util.Collections.emptyList;\n+import static java.util.Collections.emptyMap;\n+import static java.util.stream.Collectors.toList;\n+import static org.mockito.Matchers.anyObject;\n+import static org.mockito.Matchers.anyString;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public abstract class MapperServiceTestCase extends ESTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "811dfc8510f84917ae2e74fb7f9413a10991c051"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4954, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}