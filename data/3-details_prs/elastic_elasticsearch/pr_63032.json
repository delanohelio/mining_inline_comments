{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0OTg5ODYz", "number": 63032, "title": "EQL: Fix NPE from incorrect use of ids search", "bodyText": "This fixes a bug introduced when moving from mget to ids query. While\nmget returns all the ids given, id query is a search query and thus by\ndefault returns only 10 documents.\nThe fix correctly sets the expected size so all the information is\nreturned inside the response.\nFix #63030", "createdAt": "2020-09-29T17:29:17Z", "url": "https://github.com/elastic/elasticsearch/pull/63032", "merged": true, "mergeCommit": {"oid": "09ba85548a0142a1fe8376efea9cc4e7764a207c"}, "closed": true, "closedAt": "2020-09-30T12:54:36Z", "author": {"login": "costin"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNrh07gH2gAyNDk0OTg5ODYzOjU0ODg1MWE3ODk0MjlhNGViYTBkNTY4OWFjMzNhMDBmMTk3NzU2OTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOSLJ5gFqTUwMDQwMTE1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "548851a789429a4eba0d5689ac33a00f19775695", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/548851a789429a4eba0d5689ac33a00f19775695", "committedDate": "2020-09-29T17:21:07Z", "message": "EQL: Fix NPE from incorrect use of ids search\n\nThis fixes a bug introduced when moving from mget to ids query. While\nmget returns all the ids given, id query is a search query and thus by\ndefault returns only 10 documents.\nThe fix correctly sets the expected size so all the information is\nreturned inside the response.\n\nFix #63030"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTExMjM5", "url": "https://github.com/elastic/elasticsearch/pull/63032#pullrequestreview-498911239", "createdAt": "2020-09-29T21:36:11Z", "commit": {"oid": "548851a789429a4eba0d5689ac33a00f19775695"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MjI1NDA3", "url": "https://github.com/elastic/elasticsearch/pull/63032#pullrequestreview-499225407", "createdAt": "2020-09-30T09:01:49Z", "commit": {"oid": "548851a789429a4eba0d5689ac33a00f19775695"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTowMTo1MFrOHaUHLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTowMTo1MFrOHaUHLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM1NDU0Mw==", "bodyText": "Why is this + 1 ?", "url": "https://github.com/elastic/elasticsearch/pull/63032#discussion_r497354543", "createdAt": "2020-09-30T09:01:50Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/search/BasicQueryClient.java", "diffHunk": "@@ -94,7 +95,10 @@ public void fetchHits(Iterable<List<HitReference>> refs, ActionListener<List<Lis\n             .fetchSource(FetchSourceContext.FETCH_SOURCE)\n             .trackTotalHits(false)\n             .trackScores(false)\n-            .query(idsQuery);\n+            .query(idsQuery)\n+            // the default size is 10 so be sure to change it\n+            // this is different from mget\n+            .size(referenceToPosition.size() + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "548851a789429a4eba0d5689ac33a00f19775695"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d740e1b18e9f055bcec01612c6bff70404a8f996", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/d740e1b18e9f055bcec01612c6bff70404a8f996", "committedDate": "2020-09-30T10:37:06Z", "message": "Use multi-search to avoid document clashes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MzAwNTY1", "url": "https://github.com/elastic/elasticsearch/pull/63032#pullrequestreview-499300565", "createdAt": "2020-09-30T10:40:57Z", "commit": {"oid": "d740e1b18e9f055bcec01612c6bff70404a8f996"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDo0MDo1N1rOHaXoAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDo0MDo1N1rOHaXoAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQxMjA5Ng==", "bodyText": "@jimczi @dnhatn fyi, this is the current code I've used for updating pit when dealing with multiSearch.", "url": "https://github.com/elastic/elasticsearch/pull/63032#discussion_r497412096", "createdAt": "2020-09-30T10:40:57Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/search/PITAwareQueryClient.java", "diffHunk": "@@ -42,46 +48,83 @@ public PITAwareQueryClient(EqlSession eqlSession) {\n     protected void search(SearchRequest search, ActionListener<SearchResponse> listener) {\n         // no pitId, ask for one\n         if (pitId == null) {\n-            openPIT(wrap(r -> {\n-                pitId = r;\n-                searchWithPIT(search, listener);\n-            }, listener::onFailure));\n-        }\n-        else {\n+            openPIT(listener, () -> searchWithPIT(search, listener));\n+        } else {\n             searchWithPIT(search, listener);\n         }\n     }\n \n     private void searchWithPIT(SearchRequest search, ActionListener<SearchResponse> listener) {\n         // don't increase the keep alive\n         search.source().pointInTimeBuilder(new PointInTimeBuilder(pitId));\n+        // get the pid on each response\n+        super.search(search, pitListener(SearchResponse::pointInTimeId, listener));\n+    }\n+\n+    @Override\n+    protected void search(MultiSearchRequest search, ActionListener<MultiSearchResponse> listener) {\n+        // no pitId, ask for one\n+        if (pitId == null) {\n+            openPIT(listener, () -> searchWithPIT(search, listener));\n+        } else {\n+            searchWithPIT(search, listener);\n+        }\n+    }\n+\n+    private void searchWithPIT(MultiSearchRequest search, ActionListener<MultiSearchResponse> listener) {\n+        // don't increase the keep alive\n+        for (SearchRequest request : search.requests()) {\n+            request.source().pointInTimeBuilder(new PointInTimeBuilder(pitId));\n+        }\n+\n         // get the pid on each request\n-        super.search(search, wrap(r -> {\n-                pitId = r.pointInTimeId();\n+        super.search(search, pitListener(r -> {\n+            // get pid\n+            for (MultiSearchResponse.Item item : r.getResponses()) {\n+                // pick the first non-failing response\n+                if (item.isFailure() == false) {\n+                    return item.getResponse().pointInTimeId();\n+                }\n+            }\n+            // no results or successful responses, preserve the current pid\n+            return pitId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d740e1b18e9f055bcec01612c6bff70404a8f996"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MzU1ODcx", "url": "https://github.com/elastic/elasticsearch/pull/63032#pullrequestreview-499355871", "createdAt": "2020-09-30T12:03:12Z", "commit": {"oid": "d740e1b18e9f055bcec01612c6bff70404a8f996"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDAxMTU1", "url": "https://github.com/elastic/elasticsearch/pull/63032#pullrequestreview-500401155", "createdAt": "2020-10-01T14:22:38Z", "commit": {"oid": "d740e1b18e9f055bcec01612c6bff70404a8f996"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDoyMjozOVrOHbM1Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDoyMjozOVrOHbM1Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI4MzgzNA==", "bodyText": "You also need to filter by index too since the query will hit all the indices inside the PIT so you might have duplicates ? So two filter clauses are needed, one for the ids and one to match the right index.", "url": "https://github.com/elastic/elasticsearch/pull/63032#discussion_r498283834", "createdAt": "2020-10-01T14:22:39Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/search/BasicQueryClient.java", "diffHunk": "@@ -67,37 +68,35 @@ protected void search(SearchRequest search, ActionListener<SearchResponse> liste\n         client.search(search, listener);\n     }\n \n+    protected void search(MultiSearchRequest search, ActionListener<MultiSearchResponse> listener) {\n+        client.multiSearch(search, listener);\n+    }\n+\n     @Override\n     public void fetchHits(Iterable<List<HitReference>> refs, ActionListener<List<List<SearchHit>>> listener) {\n-        IdsQueryBuilder idsQuery = idsQuery();\n-\n         int innerListSize = 0;\n-        Set<String> indices = new HashSet<>();\n \n-        // associate each reference with its own\n+        Map<String, IdsQueryBuilder> queries = new HashMap<>();\n+\n+        // associate each reference with its positions inside the matrix\n         final Map<HitReference, List<Integer>> referenceToPosition = new HashMap<>();\n         int counter = 0;\n \n         for (List<HitReference> list : refs) {\n             innerListSize = list.size();\n             for (HitReference ref : list) {\n-                idsQuery.addIds(ref.id());\n-                indices.add(ref.index());\n-                // remember the reference position\n+                // keep ids per index\n+                IdsQueryBuilder query = queries.computeIfAbsent(ref.index(), v -> idsQuery());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d740e1b18e9f055bcec01612c6bff70404a8f996"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4535, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}