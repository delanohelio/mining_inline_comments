{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMjk4MDYx", "number": 57030, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzo1NTozOVrOEBdUqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzo1NzoxM1rOEBdWyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTY0NDU4OnYy", "diffSide": "RIGHT", "path": "docs/reference/ingest/processors/set.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzo1NTozOVrOGdUS4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzo1NTozOVrOGdUS4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5NDQwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | `ignore_empty_value` | no        | `false`  | If `true` and `value` is `null` or empty string(only for <<accessing-template-fields,template snippets>>), the processor quietly exits without modifying the document\n          \n          \n            \n            | `ignore_empty_value` | no        | `false`  | If `true` and `value` is a <<accessing-template-fields,template snippet>> that evaluates to `null` or the empty string, the processor quietly exits without modifying the document", "url": "https://github.com/elastic/elasticsearch/pull/57030#discussion_r433394402", "createdAt": "2020-06-01T17:55:39Z", "author": {"login": "danhermann"}, "path": "docs/reference/ingest/processors/set.asciidoc", "diffHunk": "@@ -11,6 +11,7 @@ its value will be replaced with the provided one.\n | `field` | yes       | -        | The field to insert, upsert, or update. Supports <<accessing-template-fields,template snippets>>.\n | `value` | yes       | -        | The value to be set for the field. Supports <<accessing-template-fields,template snippets>>.\n | `override` | no        | true     | If processor will update fields with pre-existing non-null-valued field. When set to `false`, such fields will not be touched.\n+| `ignore_empty_value` | no        | `false`  | If `true` and `value` is `null` or empty string(only for <<accessing-template-fields,template snippets>>), the processor quietly exits without modifying the document", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb88072598ad87346d08e8785dbd7782d3cbb47"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTY1MDAyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/ingest/IngestDocument.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzo1NzoxM1rOGdUWXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzo1NzoxM1rOGdUWXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5NTI5Mw==", "bodyText": "Minor code formatting:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (ignoreEmptyValue && valueSource instanceof ValueSource.TemplatedValue){\n          \n          \n            \n                    if (ignoreEmptyValue && valueSource instanceof ValueSource.TemplatedValue) {", "url": "https://github.com/elastic/elasticsearch/pull/57030#discussion_r433395293", "createdAt": "2020-06-01T17:57:13Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/ingest/IngestDocument.java", "diffHunk": "@@ -425,6 +425,32 @@ public void setFieldValue(TemplateScript.Factory fieldPathTemplate, ValueSource\n         setFieldValue(fieldPathTemplate.newInstance(model).execute(), valueSource.copyAndResolve(model), false);\n     }\n \n+    /**\n+     * Sets the provided value to the provided path in the document.\n+     * Any non existing path element will be created. If the last element is a list,\n+     * the value will replace the existing list.\n+     * @param fieldPathTemplate Resolves to the path with dot-notation within the document\n+     * @param valueSource The value source that will produce the value to put in for the path key\n+     * @param ignoreEmptyValue The flag to determine whether to exit quietly when the value produced by TemplatedValue is null or empty\n+     * @throws IllegalArgumentException if the path is null, empty, invalid or if the value cannot be set to the\n+     * item identified by the provided path.\n+     */\n+    public void setFieldValue(TemplateScript.Factory fieldPathTemplate, ValueSource valueSource, boolean ignoreEmptyValue) {\n+        Map<String, Object> model = createTemplateModel();\n+        Object value = valueSource.copyAndResolve(model);\n+        if (ignoreEmptyValue && valueSource instanceof ValueSource.TemplatedValue){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb88072598ad87346d08e8785dbd7782d3cbb47"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 262, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}