{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTAzNjYw", "number": 55137, "title": "EQL: implement math functions: add, divide, module, multiply, subtract", "bodyText": "Related to #54846", "createdAt": "2020-04-14T00:20:52Z", "url": "https://github.com/elastic/elasticsearch/pull/55137", "merged": true, "mergeCommit": {"oid": "9e79e5d33f564b368ef61e416c5f0bfb847303f4"}, "closed": true, "closedAt": "2020-04-24T16:58:43Z", "author": {"login": "aleksmaus"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXYNifgH2gAyNDAyOTAzNjYwOjVlNDNkOWUxNzhlOTdjZTk5NWJkOTg0MmI1YzhhYTBlNmVhY2I1OTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcam8qfAH2gAyNDAyOTAzNjYwOjBmM2M3NWFlMzQyZjc3ODYyOWZlMDU2OWNhNDVmODM4ZjI2YjlkZWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5e43d9e178e97ce995bd9842b5c8aa0e6eacb597", "author": {"user": {"login": "aleksmaus", "name": "Aleksandr Maus"}}, "url": "https://github.com/elastic/elasticsearch/commit/5e43d9e178e97ce995bd9842b5c8aa0e6eacb597", "committedDate": "2020-04-14T00:18:51Z", "message": "EQL: implement math functions: add, divide, module, multiply, subtract"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTIzNzg5", "url": "https://github.com/elastic/elasticsearch/pull/55137#pullrequestreview-392523789", "createdAt": "2020-04-14T00:22:20Z", "commit": {"oid": "5e43d9e178e97ce995bd9842b5c8aa0e6eacb597"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMDoyMjoyMVrOGE5wgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMDoyOTo1N1rOGE55Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc5Mzc5NA==", "bodyText": "Do I need to wrap these into surrogatefunction derived class or can I use them directly?", "url": "https://github.com/elastic/elasticsearch/pull/55137#discussion_r407793794", "createdAt": "2020-04-14T00:22:21Z", "author": {"login": "aleksmaus"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/expression/function/EqlFunctionRegistry.java", "diffHunk": "@@ -32,15 +37,20 @@ public EqlFunctionRegistry() {\n         // Scalar functions\n         // String\n             new FunctionDefinition[] {\n+                def(Add.class, Add::new,\"add\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e43d9e178e97ce995bd9842b5c8aa0e6eacb597"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc5NjAzOQ==", "bodyText": "These are the functions that are currently implemented at QL level. The original div implementation didn't match EQL  implementation. EQL converts numbers into floats which will render different results.\n82/2 == 41\n83//2 == 41\n\nwhile\n82.0/2.0 == 41\n83.0/2.0 == 41.5\n\nDo we match the QL div function or do we introduce something else?", "url": "https://github.com/elastic/elasticsearch/pull/55137#discussion_r407796039", "createdAt": "2020-04-14T00:29:57Z", "author": {"login": "aleksmaus"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/operator/arithmetic/Arithmetics.java", "diffHunk": "@@ -97,10 +97,10 @@ public static Number div(Number l, Number r) {\n             return l.floatValue() / r.floatValue();\n         }\n         if (l instanceof Long || r instanceof Long) {\n-            return l.longValue() / r.longValue();\n+            return (double)l.longValue() / (double)r.longValue();\n         }\n \n-        return l.intValue() / r.intValue();\n+        return (double)l.intValue() / (double)r.intValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e43d9e178e97ce995bd9842b5c8aa0e6eacb597"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f02a483b9afb9429a34ab2778e9e4ffe90243a06", "author": {"user": {"login": "aleksmaus", "name": "Aleksandr Maus"}}, "url": "https://github.com/elastic/elasticsearch/commit/f02a483b9afb9429a34ab2778e9e4ffe90243a06", "committedDate": "2020-04-17T01:27:07Z", "message": "Address feeback on PR draft."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a7c7fc2b031382bc2bdba095325932f33672328", "author": {"user": {"login": "aleksmaus", "name": "Aleksandr Maus"}}, "url": "https://github.com/elastic/elasticsearch/commit/2a7c7fc2b031382bc2bdba095325932f33672328", "committedDate": "2020-04-17T01:39:24Z", "message": "Merge branch 'master' into feature/eql_math"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2Mjk5NTQ4", "url": "https://github.com/elastic/elasticsearch/pull/55137#pullrequestreview-396299548", "createdAt": "2020-04-20T09:44:31Z", "commit": {"oid": "2a7c7fc2b031382bc2bdba095325932f33672328"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDE2MjU4", "url": "https://github.com/elastic/elasticsearch/pull/55137#pullrequestreview-396416258", "createdAt": "2020-04-20T12:42:52Z", "commit": {"oid": "2a7c7fc2b031382bc2bdba095325932f33672328"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjEwOTE4", "url": "https://github.com/elastic/elasticsearch/pull/55137#pullrequestreview-397210918", "createdAt": "2020-04-21T10:46:56Z", "commit": {"oid": "2a7c7fc2b031382bc2bdba095325932f33672328"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0Njo1N1rOGI_NHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMTowNDoyMVrOGI_2kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA3NzM0MA==", "bodyText": "I think all of these math functions should be added to a different FunctionDefinition array to group different types of functions in separate arrays: String, Math....", "url": "https://github.com/elastic/elasticsearch/pull/55137#discussion_r412077340", "createdAt": "2020-04-21T10:46:57Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/expression/function/EqlFunctionRegistry.java", "diffHunk": "@@ -32,15 +37,20 @@ public EqlFunctionRegistry() {\n         // Scalar functions\n         // String\n             new FunctionDefinition[] {\n+                def(Add.class, Add::new,\"add\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7c7fc2b031382bc2bdba095325932f33672328"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA3ODA5Ng==", "bodyText": "Whitespace between the Number casting and the class name, please.", "url": "https://github.com/elastic/elasticsearch/pull/55137#discussion_r412078096", "createdAt": "2020-04-21T10:48:15Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/function/scalar/whitelist/InternalQlScriptUtils.java", "diffHunk": "@@ -119,7 +120,27 @@ public static Boolean regex(String value, String pattern) {\n     //\n     // Math\n     //\n+    public static Number add(Number left, Number right) {\n+        return (Number)DefaultBinaryArithmeticOperation.ADD.apply(left, right);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7c7fc2b031382bc2bdba095325932f33672328"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA4MzA1MA==", "bodyText": "Why all these tests below have expected_event_ids = [82] but the query itself has a condition applying on a different serial_event_id? Shouldn't the math result match the expected serial event ID?", "url": "https://github.com/elastic/elasticsearch/pull/55137#discussion_r412083050", "createdAt": "2020-04-21T10:56:22Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/qa/common/src/main/resources/test_queries_unsupported.toml", "diffHunk": "@@ -1002,26 +990,6 @@ query = '''\n registry where arrayContains(bytes_written_string_list, \"missing\", \"en-US\")\n '''\n \n-[[queries]]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7c7fc2b031382bc2bdba095325932f33672328"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA4NjQxNw==", "bodyText": "Can we have more complex math operations?\nFew ideas:\n\nput the constant first and the field name second\nuse the minus sign for the field as well: file where -serial_event_id + 100 == 18\nhave a more complex arithmetic set of operations: file where serial_event_id + ((1 + 3) * 2 / (3 - 1)) * 2 == 90 OR 70 + serial_event_id < 100", "url": "https://github.com/elastic/elasticsearch/pull/55137#discussion_r412086417", "createdAt": "2020-04-21T11:01:46Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/qa/common/src/main/resources/test_queries_unsupported.toml", "diffHunk": "@@ -1002,26 +990,6 @@ query = '''\n registry where arrayContains(bytes_written_string_list, \"missing\", \"en-US\")\n '''\n \n-[[queries]]\n-expected_event_ids = [82]\n-query = \"file where serial_event_id - 1 == 81\"\n-\n-[[queries]]\n-expected_event_ids = [82]\n-query = \"file where serial_event_id + 1 == 83\"\n-\n-[[queries]]\n-expected_event_ids = [82]\n-query = \"file where serial_event_id * 2 == 164\"\n-\n-[[queries]]\n-expected_event_ids = [82]\n-query = \"file where serial_event_id / 2 == 41\"\n-\n-[[queries]]\n-expected_event_ids = [82]\n-query = \"file where serial_event_id % 40 == 2\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7c7fc2b031382bc2bdba095325932f33672328"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA4Nzk1Mw==", "bodyText": "Changing the position of the field should be checked here as well, meaning process where add(2, serial_event_id) == 41", "url": "https://github.com/elastic/elasticsearch/pull/55137#discussion_r412087953", "createdAt": "2020-04-21T11:04:21Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/test/resources/queryfolder_tests.txt", "diffHunk": "@@ -185,3 +185,84 @@ process where wildcard(process_path, \"*\\\\red_ttp\\\\wininit.*\", \"*\\\\abc\\\\*\", \"*def\n \"wildcard\":{\"process_path\":{\"wildcard\":\"*\\\\\\\\abc\\\\\\\\*\"\n \"wildcard\":{\"process_path\":{\"wildcard\":\"*def*\"\n ;\n+\n+\n+addOperator\n+process where serial_event_id + 2 == 41\n+;\n+\"script\":{\"source\":\"InternalQlScriptUtils.nullSafeFilter(InternalQlScriptUtils.eq(\n+InternalQlScriptUtils.add(InternalQlScriptUtils.docValue(doc,params.v0),params.v1),params.v2))\",\n+\"params\":{\"v0\":\"serial_event_id\",\"v1\":2,\"v2\":41}\n+;\n+\n+addFunction\n+process where add(serial_event_id, 2) == 41\n+;\n+\"script\":{\"source\":\"InternalQlScriptUtils.nullSafeFilter(InternalQlScriptUtils.eq(\n+InternalQlScriptUtils.add(InternalQlScriptUtils.docValue(doc,params.v0),params.v1),params.v2))\",\n+\"params\":{\"v0\":\"serial_event_id\",\"v1\":2,\"v2\":41}\n+;\n+\n+divideOperator\n+process where serial_event_id / 2 == 41\n+;\n+\"script\":{\"source\":\"InternalQlScriptUtils.nullSafeFilter(InternalQlScriptUtils.eq(\n+InternalQlScriptUtils.div(InternalQlScriptUtils.docValue(doc,params.v0),params.v1),params.v2))\",\n+\"params\":{\"v0\":\"serial_event_id\",\"v1\":2,\"v2\":41}\n+;\n+\n+divideFunction\n+process where divide(serial_event_id, 2) == 41", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7c7fc2b031382bc2bdba095325932f33672328"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01de50c3f8e002a2d312d21b873a0947f37a4567", "author": {"user": {"login": "aleksmaus", "name": "Aleksandr Maus"}}, "url": "https://github.com/elastic/elasticsearch/commit/01de50c3f8e002a2d312d21b873a0947f37a4567", "committedDate": "2020-04-22T12:58:56Z", "message": "Merge branch 'master' into feature/eql_math"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f1a2533c169c923348cf004b82c6b85dcfb5e5b", "author": {"user": {"login": "aleksmaus", "name": "Aleksandr Maus"}}, "url": "https://github.com/elastic/elasticsearch/commit/1f1a2533c169c923348cf004b82c6b85dcfb5e5b", "committedDate": "2020-04-23T03:42:54Z", "message": "Address code review feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4ODc5NTYx", "url": "https://github.com/elastic/elasticsearch/pull/55137#pullrequestreview-398879561", "createdAt": "2020-04-23T08:35:31Z", "commit": {"oid": "1f1a2533c169c923348cf004b82c6b85dcfb5e5b"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODozNTozMVrOGKdiFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODozOToxNFrOGKdsQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyMjgwNQ==", "bodyText": "It would be worth adding these new tests to the original EQL implementation, as well.", "url": "https://github.com/elastic/elasticsearch/pull/55137#discussion_r413622805", "createdAt": "2020-04-23T08:35:31Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/qa/common/src/main/resources/test_queries_supported.toml", "diffHunk": "@@ -29,3 +29,28 @@ description = \"test built-in modulo math functions\"\n # This query give a different result with ES EQL implementation because it doesn't convert to float data types for division\n expected_event_ids = [82, 83]\n query = \"file where serial_event_id / 2 == 41\"\n+\n+# Additional EQL queries with arithmetic operations that were not part of the original EQL implementation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f1a2533c169c923348cf004b82c6b85dcfb5e5b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyNDc2NQ==", "bodyText": "I don't think this is correct.\n70 + serial_event_id < 100 should match all event IDs from 1 to 29. Why is expected_event_ids only 82? Or I am missing something?", "url": "https://github.com/elastic/elasticsearch/pull/55137#discussion_r413624765", "createdAt": "2020-04-23T08:38:17Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/qa/common/src/main/resources/test_queries_supported.toml", "diffHunk": "@@ -29,3 +29,28 @@ description = \"test built-in modulo math functions\"\n # This query give a different result with ES EQL implementation because it doesn't convert to float data types for division\n expected_event_ids = [82, 83]\n query = \"file where serial_event_id / 2 == 41\"\n+\n+# Additional EQL queries with arithmetic operations that were not part of the original EQL implementation\n+[[queries]]\n+expected_event_ids = [82]\n+query = \"file where 83 - serial_event_id == 1\"\n+\n+[[queries]]\n+expected_event_ids = [82]\n+query = \"file where 1 + serial_event_id == 83\"\n+\n+[[queries]]\n+expected_event_ids = [82]\n+query = \"file where -serial_event_id + 100 == 18\"\n+\n+[[queries]]\n+expected_event_ids = [82]\n+query = \"file where 2 * serial_event_id == 164\"\n+\n+[[queries]]\n+expected_event_ids = [66]\n+query = \"file where 66.0 / serial_event_id == 1\"\n+\n+[[queries]]\n+expected_event_ids = [82]\n+query = \"file where serial_event_id + ((1 + 3) * 2 / (3 - 1)) * 2 == 90 or 70 + serial_event_id < 100\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f1a2533c169c923348cf004b82c6b85dcfb5e5b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyNTQwOA==", "bodyText": "Whitespace before the last parameter.", "url": "https://github.com/elastic/elasticsearch/pull/55137#discussion_r413625408", "createdAt": "2020-04-23T08:39:14Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/expression/function/EqlFunctionRegistry.java", "diffHunk": "@@ -37,21 +37,24 @@ public EqlFunctionRegistry() {\n         // Scalar functions\n         // String\n             new FunctionDefinition[] {\n-                def(Add.class, Add::new,\"add\"),\n                 def(Between.class, Between::new, 2, \"between\"),\n                 def(CIDRMatch.class, CIDRMatch::new, \"cidrmatch\"),\n-                def(Div.class, Div::new,\"divide\"),\n                 def(EndsWith.class, EndsWith::new, \"endswith\"),\n                 def(IndexOf.class, IndexOf::new, \"indexof\"),\n                 def(Length.class, Length::new, \"length\"),\n-                def(Mod.class, Mod::new,\"modulo\"),\n-                def(Mul.class, Mul::new,\"multiply\"),\n                 def(StartsWith.class, StartsWith::new, \"startswith\"),\n                 def(ToString.class, ToString::new, \"string\"),\n                 def(StringContains.class, StringContains::new, \"stringcontains\"),\n                 def(Substring.class, Substring::new, \"substring\"),\n-                def(Sub.class, Sub::new,\"subtract\"),\n                 def(Wildcard.class, Wildcard::new, \"wildcard\"),\n+            },\n+        // Arithmetic\n+            new FunctionDefinition[] {\n+                    def(Add.class, Add::new,\"add\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f1a2533c169c923348cf004b82c6b85dcfb5e5b"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8d81227c6cbbf18de77b61049cdd63ce84ede26", "author": {"user": {"login": "aleksmaus", "name": "Aleksandr Maus"}}, "url": "https://github.com/elastic/elasticsearch/commit/c8d81227c6cbbf18de77b61049cdd63ce84ede26", "committedDate": "2020-04-23T13:00:17Z", "message": "Address the latest code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MTczODc0", "url": "https://github.com/elastic/elasticsearch/pull/55137#pullrequestreview-399173874", "createdAt": "2020-04-23T14:46:51Z", "commit": {"oid": "c8d81227c6cbbf18de77b61049cdd63ce84ede26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDo0Njo1MlrOGKsCIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDo0Njo1MlrOGKsCIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg2MDM4NQ==", "bodyText": "This looks like it tests the query folding more than the integration, and folds to\nprocess where serial_event_id + 8 == 90 or serial_event_id < 100.\n\nSince serial_event_id of 82 is a file event, we don't have any results that match the left side.", "url": "https://github.com/elastic/elasticsearch/pull/55137#discussion_r413860385", "createdAt": "2020-04-23T14:46:52Z", "author": {"login": "rw-access"}, "path": "x-pack/plugin/eql/qa/common/src/main/resources/test_queries_supported.toml", "diffHunk": "@@ -17,3 +17,40 @@ file where between(file_path, \"dev\", \".json\", true) == \"\\\\TestLogs\\\\something\"\n [[queries]]\n query = 'process where string(serial_event_id) = \"1\"'\n expected_event_ids  = [1]\n+\n+[[queries]]\n+# Basic test for modulo function\n+query = '''\n+process where modulo(11, 10) == serial_event_id'''\n+expected_event_ids  = [1]\n+description = \"test built-in modulo math functions\"\n+\n+[[queries]]\n+# This query give a different result with ES EQL implementation because it doesn't convert to float data types for division\n+expected_event_ids = [82, 83]\n+query = \"file where serial_event_id / 2 == 41\"\n+\n+# Additional EQL queries with arithmetic operations that were not part of the original EQL implementation\n+[[queries]]\n+expected_event_ids = [82]\n+query = \"file where 83 - serial_event_id == 1\"\n+\n+[[queries]]\n+expected_event_ids = [82]\n+query = \"file where 1 + serial_event_id == 83\"\n+\n+[[queries]]\n+expected_event_ids = [82]\n+query = \"file where -serial_event_id + 100 == 18\"\n+\n+[[queries]]\n+expected_event_ids = [82]\n+query = \"file where 2 * serial_event_id == 164\"\n+\n+[[queries]]\n+expected_event_ids = [66]\n+query = \"file where 66.0 / serial_event_id == 1\"\n+\n+[[queries]]\n+expected_event_ids = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]\n+query = \"process where serial_event_id + ((1 + 3) * 2 / (3 - 1)) * 2 == 90 or 70 + serial_event_id < 100\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8d81227c6cbbf18de77b61049cdd63ce84ede26"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Mzg4NDIw", "url": "https://github.com/elastic/elasticsearch/pull/55137#pullrequestreview-399388420", "createdAt": "2020-04-23T18:57:48Z", "commit": {"oid": "c8d81227c6cbbf18de77b61049cdd63ce84ede26"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f3c75ae342f778629fe0569ca45f838f26b9deb", "author": {"user": {"login": "aleksmaus", "name": "Aleksandr Maus"}}, "url": "https://github.com/elastic/elasticsearch/commit/0f3c75ae342f778629fe0569ca45f838f26b9deb", "committedDate": "2020-04-24T01:10:46Z", "message": "Update test based on the code review feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3534, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}