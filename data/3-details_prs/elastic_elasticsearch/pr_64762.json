{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NTc3NTI0", "number": 64762, "title": "Fix a NPE bug caused by code keep executing after listener returns", "bodyText": "Another instance of the classic bug of \"not returning after listener.onFailure is invoked\". The bug did not cause any real issue since the execution simply runs into a NPE.\nResolves: #64692", "createdAt": "2020-11-09T08:17:59Z", "url": "https://github.com/elastic/elasticsearch/pull/64762", "merged": true, "mergeCommit": {"oid": "4a89bee6e230eccccabd1f441f0de89d065d991b"}, "closed": true, "closedAt": "2020-11-18T03:20:42Z", "author": {"login": "ywangd"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdawRgjAH2gAyNTE3NTc3NTI0OmJkNmQyNjJiZmVkMzhlNWU2YTNlYmM2NWViNDdkYmU5OTZlNWE4YWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdc-sDmgH2gAyNTE3NTc3NTI0OmI1ZWYxZWMyZDMxMDdlMTM1ODg2ODAzM2Y0MWEyZTU4ZWZjNTAzODc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bd6d262bfed38e5e6a3ebc65eb47dbe996e5a8af", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/bd6d262bfed38e5e6a3ebc65eb47dbe996e5a8af", "committedDate": "2020-11-09T08:13:50Z", "message": "Another isntance of the classic bug of not returning after listener.onFailure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNTg2NjA1", "url": "https://github.com/elastic/elasticsearch/pull/64762#pullrequestreview-530586605", "createdAt": "2020-11-14T15:55:36Z", "commit": {"oid": "bd6d262bfed38e5e6a3ebc65eb47dbe996e5a8af"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxNTo1NTozNlrOHzL2SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxNjowMjoxN1rOHzL4vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQzMzU0NQ==", "bodyText": "++ to not having a non-void method that is also passed an ActionListener. Maybe wrap Exception with an Optional<> ? Nothing much changes but I think it captures the fact that the Tuple.v2() might contain an exception  better?", "url": "https://github.com/elastic/elasticsearch/pull/64762#discussion_r523433545", "createdAt": "2020-11-14T15:55:36Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/token/TransportCreateTokenAction.java", "diffHunk": "@@ -101,23 +107,23 @@ private void authenticateAndCreateToken(GrantType grantType, CreateTokenRequest\n         }\n     }\n \n-    private AuthenticationToken extractAuthenticationToken(GrantType grantType, CreateTokenRequest request,\n-            ActionListener<CreateTokenResponse> listener) {\n+    private Tuple<AuthenticationToken, Exception> extractAuthenticationToken(GrantType grantType, CreateTokenRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd6d262bfed38e5e6a3ebc65eb47dbe996e5a8af"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQzMzkxMA==", "bodyText": "Maybe a random short string here instead of hardcoding the string that this was reported with?", "url": "https://github.com/elastic/elasticsearch/pull/64762#discussion_r523433910", "createdAt": "2020-11-14T15:59:38Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/token/TransportCreateTokenActionTests.java", "diffHunk": "@@ -267,4 +269,25 @@ public void testKerberosGrantTypeCreatesWithRefreshToken() throws Exception {\n             assertNotNull(sourceMap.get(\"refresh_token\"));\n         }\n     }\n+\n+    public void testKerberosGrantTypeWillFailOnBase64DecodeError() throws Exception {\n+        final TokenService tokenService = new TokenService(SETTINGS, Clock.systemUTC(), client, license, securityContext,\n+            securityIndex, securityIndex, clusterService);\n+        Authentication authentication = new Authentication(new User(\"joe\"), new Authentication.RealmRef(\"realm\", \"type\", \"node\"), null);\n+        authentication.writeToContext(threadPool.getThreadContext());\n+\n+        final TransportCreateTokenAction action = new TransportCreateTokenAction(threadPool,\n+            mock(TransportService.class), new ActionFilters(Collections.emptySet()), tokenService,\n+            authenticationService, securityContext);\n+        final CreateTokenRequest createTokenRequest = new CreateTokenRequest();\n+        createTokenRequest.setGrantType(\"_kerberos\");\n+        createTokenRequest.setKerberosTicket(new SecureString(\"(:I\".toCharArray()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd6d262bfed38e5e6a3ebc65eb47dbe996e5a8af"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQzNDE3NQ==", "bodyText": "We could wrap this in an `assertListenerIsOnlyCalledOnce", "url": "https://github.com/elastic/elasticsearch/pull/64762#discussion_r523434175", "createdAt": "2020-11-14T16:02:17Z", "author": {"login": "jkakavas"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/token/TransportCreateTokenActionTests.java", "diffHunk": "@@ -267,4 +269,25 @@ public void testKerberosGrantTypeCreatesWithRefreshToken() throws Exception {\n             assertNotNull(sourceMap.get(\"refresh_token\"));\n         }\n     }\n+\n+    public void testKerberosGrantTypeWillFailOnBase64DecodeError() throws Exception {\n+        final TokenService tokenService = new TokenService(SETTINGS, Clock.systemUTC(), client, license, securityContext,\n+            securityIndex, securityIndex, clusterService);\n+        Authentication authentication = new Authentication(new User(\"joe\"), new Authentication.RealmRef(\"realm\", \"type\", \"node\"), null);\n+        authentication.writeToContext(threadPool.getThreadContext());\n+\n+        final TransportCreateTokenAction action = new TransportCreateTokenAction(threadPool,\n+            mock(TransportService.class), new ActionFilters(Collections.emptySet()), tokenService,\n+            authenticationService, securityContext);\n+        final CreateTokenRequest createTokenRequest = new CreateTokenRequest();\n+        createTokenRequest.setGrantType(\"_kerberos\");\n+        createTokenRequest.setKerberosTicket(new SecureString(\"(:I\".toCharArray()));\n+\n+        PlainActionFuture<CreateTokenResponse> tokenResponseFuture = new PlainActionFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd6d262bfed38e5e6a3ebc65eb47dbe996e5a8af"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94b0f99a41ca19d3cd6af7b8c5ffbd76fc6c770f", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/94b0f99a41ca19d3cd6af7b8c5ffbd76fc6c770f", "committedDate": "2020-11-16T05:57:04Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5ef1ec2d3107e1358868033f41a2e58efc50387", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/b5ef1ec2d3107e1358868033f41a2e58efc50387", "committedDate": "2020-11-16T06:09:21Z", "message": "Merge branch 'master' into es-64692-should-return-after-listener-onfailure"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1266, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}