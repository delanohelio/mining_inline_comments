{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzODA1NTIy", "number": 59932, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjowOToyNVrOEQsenA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NToxMlrOEQuyJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTQxNDA0OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjowOToyNVrOG0_Wzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NDozOFrOG1DCbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxNzE2Ng==", "bodyText": "Sorry for the conflicts with #59880, but I think we need this line still.", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458217166", "createdAt": "2020-07-21T16:09:25Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java", "diffHunk": "@@ -111,9 +111,6 @@ public InternalClusterInfoService(Settings settings, ClusterService clusterServi\n         clusterSettings.addSettingsUpdateConsumer(INTERNAL_CLUSTER_INFO_UPDATE_INTERVAL_SETTING, this::setUpdateFrequency);\n         clusterSettings.addSettingsUpdateConsumer(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_THRESHOLD_ENABLED_SETTING,\n                                                   this::setEnabled);\n-\n-        // listen for state changes (this node starts/stops being the elected master, or new nodes are added)\n-        clusterService.addListener(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxOTc1NA==", "bodyText": "Oh wait, no I see this got moved to Node. That's nicer indeed but I expect InternalClusterInfoServiceSchedulingTests need adjusting too.", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458219754", "createdAt": "2020-07-21T16:13:05Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java", "diffHunk": "@@ -111,9 +111,6 @@ public InternalClusterInfoService(Settings settings, ClusterService clusterServi\n         clusterSettings.addSettingsUpdateConsumer(INTERNAL_CLUSTER_INFO_UPDATE_INTERVAL_SETTING, this::setUpdateFrequency);\n         clusterSettings.addSettingsUpdateConsumer(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_THRESHOLD_ENABLED_SETTING,\n                                                   this::setEnabled);\n-\n-        // listen for state changes (this node starts/stops being the elected master, or new nodes are added)\n-        clusterService.addListener(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxNzE2Ng=="}, "originalCommit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3NzQ4NA==", "bodyText": "No need to apologize. Addressed in 59a7fee", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458277484", "createdAt": "2020-07-21T17:44:38Z", "author": {"login": "jaymode"}, "path": "server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java", "diffHunk": "@@ -111,9 +111,6 @@ public InternalClusterInfoService(Settings settings, ClusterService clusterServi\n         clusterSettings.addSettingsUpdateConsumer(INTERNAL_CLUSTER_INFO_UPDATE_INTERVAL_SETTING, this::setUpdateFrequency);\n         clusterSettings.addSettingsUpdateConsumer(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_THRESHOLD_ENABLED_SETTING,\n                                                   this::setEnabled);\n-\n-        // listen for state changes (this node starts/stops being the elected master, or new nodes are added)\n-        clusterService.addListener(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxNzE2Ng=="}, "originalCommit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTQ0ODk5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/LocalNodeMasterListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjoxNzo0MVrOG0_szA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NDo1N1rOG1DDUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyMjc5Ng==", "bodyText": "This looks never to be overridden, can we inline it (and simplify threadPool.executor(SAME).execute(r) to r.run() in the ClusterApplierService?", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458222796", "createdAt": "2020-07-21T16:17:41Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/LocalNodeMasterListener.java", "diffHunk": "@@ -37,16 +39,20 @@\n     /**\n      * The name of the executor that the implementation of the callbacks of this lister should be executed on. The thread\n      * that is responsible for managing instances of this lister is the same thread handling the cluster state events. If\n-     * the work done is the callbacks above is inexpensive, this value may be\n+     * the work done is the callbacks above is inexpensive, this value should be\n      * {@link org.elasticsearch.threadpool.ThreadPool.Names#SAME SAME} (indicating that the callbacks will run on the same thread\n      * as the cluster state events are fired with). On the other hand, if the logic in the callbacks are heavier and take\n      * longer to process (or perhaps involve blocking due to IO operations), prefer to execute them on a separate more appropriate\n-     * executor (eg. {@link org.elasticsearch.threadpool.ThreadPool.Names#GENERIC GENERIC}\n-     * or {@link org.elasticsearch.threadpool.ThreadPool.Names#MANAGEMENT MANAGEMENT}).\n+     * executor; for example management operations would use {@link org.elasticsearch.threadpool.ThreadPool.Names#MANAGEMENT MANAGEMENT}).\n+     *\n+     * <em>Note</em>: when using an executor with more than one thread the callbacks <i>could</i> run concurrently, so care\n+     * should be taken to ensure proper locking is used for correctness.\n      *\n      * @return The name of the executor that will run the callbacks of this listener.\n      */\n-    String executorName();\n+    default String executorName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3NzcxNQ==", "bodyText": "Addressed in 63be6ab", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458277715", "createdAt": "2020-07-21T17:44:57Z", "author": {"login": "jaymode"}, "path": "server/src/main/java/org/elasticsearch/cluster/LocalNodeMasterListener.java", "diffHunk": "@@ -37,16 +39,20 @@\n     /**\n      * The name of the executor that the implementation of the callbacks of this lister should be executed on. The thread\n      * that is responsible for managing instances of this lister is the same thread handling the cluster state events. If\n-     * the work done is the callbacks above is inexpensive, this value may be\n+     * the work done is the callbacks above is inexpensive, this value should be\n      * {@link org.elasticsearch.threadpool.ThreadPool.Names#SAME SAME} (indicating that the callbacks will run on the same thread\n      * as the cluster state events are fired with). On the other hand, if the logic in the callbacks are heavier and take\n      * longer to process (or perhaps involve blocking due to IO operations), prefer to execute them on a separate more appropriate\n-     * executor (eg. {@link org.elasticsearch.threadpool.ThreadPool.Names#GENERIC GENERIC}\n-     * or {@link org.elasticsearch.threadpool.ThreadPool.Names#MANAGEMENT MANAGEMENT}).\n+     * executor; for example management operations would use {@link org.elasticsearch.threadpool.ThreadPool.Names#MANAGEMENT MANAGEMENT}).\n+     *\n+     * <em>Note</em>: when using an executor with more than one thread the callbacks <i>could</i> run concurrently, so care\n+     * should be taken to ensure proper locking is used for correctness.\n      *\n      * @return The name of the executor that will run the callbacks of this listener.\n      */\n-    String executorName();\n+    default String executorName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyMjc5Ng=="}, "originalCommit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTQ2MDU0OnYy", "diffSide": "LEFT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/process/MlMemoryTracker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjoyMDozMVrOG0_0EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NTozMVrOG1DExw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyNDY1Ng==", "bodyText": "We use this executor to run MlMemoryTracker#refresh and MlMemoryTracker #iterateAnomalyDetectorJobTasks, are you sure it's ok to run them on the SAME thread now?", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458224656", "createdAt": "2020-07-21T16:20:31Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/process/MlMemoryTracker.java", "diffHunk": "@@ -131,11 +130,6 @@ public void stop() {\n         logger.debug(\"ML memory tracker stopped\");\n     }\n \n-    @Override\n-    public String executorName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3ODA4Nw==", "bodyText": "Great catch! Addressed in d308721", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458278087", "createdAt": "2020-07-21T17:45:31Z", "author": {"login": "jaymode"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/process/MlMemoryTracker.java", "diffHunk": "@@ -131,11 +130,6 @@ public void stop() {\n         logger.debug(\"ML memory tracker stopped\");\n     }\n \n-    @Override\n-    public String executorName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyNDY1Ng=="}, "originalCommit": {"oid": "3c9142bbcdf64264e8483dc4b736f38e9bdeffbd"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTc5MTc0OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/cluster/LocalNodeMasterListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NToxMlrOG1DD7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NToxMlrOG1DD7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3Nzg2OQ==", "bodyText": "Hurrah \ud83c\udf89", "url": "https://github.com/elastic/elasticsearch/pull/59932#discussion_r458277869", "createdAt": "2020-07-21T17:45:12Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/LocalNodeMasterListener.java", "diffHunk": "@@ -33,20 +33,5 @@\n      * Called when the local node used to be the master, a new master was elected and it's no longer the local node.\n      */\n     void offMaster();\n-\n-    /**\n-     * The name of the executor that the implementation of the callbacks of this lister should be executed on. The thread\n-     * that is responsible for managing instances of this lister is the same thread handling the cluster state events. If\n-     * the work done is the callbacks above is inexpensive, this value may be\n-     * {@link org.elasticsearch.threadpool.ThreadPool.Names#SAME SAME} (indicating that the callbacks will run on the same thread\n-     * as the cluster state events are fired with). On the other hand, if the logic in the callbacks are heavier and take\n-     * longer to process (or perhaps involve blocking due to IO operations), prefer to execute them on a separate more appropriate\n-     * executor (eg. {@link org.elasticsearch.threadpool.ThreadPool.Names#GENERIC GENERIC}\n-     * or {@link org.elasticsearch.threadpool.ThreadPool.Names#MANAGEMENT MANAGEMENT}).\n-     *\n-     * @return The name of the executor that will run the callbacks of this listener.\n-     */\n-    String executorName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63be6ab56326f0a496a33588730130aa227bb45f"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2160, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}