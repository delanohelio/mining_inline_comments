{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MDc3NTg4", "number": 66736, "title": "[ML] Pass extra JSON config files to autodetect", "bodyText": "Pass JSON files containing rule filters and scheduled\nevents configuration to autodetect.\nThis change must not be merged until after elastic/ml-cpp#1640 as the\nC++ backend code must be able to safely consume the new command line\noptions.\nRelates elastic/ml-cpp#1253", "createdAt": "2020-12-22T12:00:08Z", "url": "https://github.com/elastic/elasticsearch/pull/66736", "merged": true, "mergeCommit": {"oid": "ffc1b3c62327684496bc0001ad8dce1319f3f523"}, "closed": true, "closedAt": "2021-01-04T15:47:34Z", "author": {"login": "edsavage"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdopG2qAH2gAyNTQ0MDc3NTg4OmIxNjBjMDlmNTNmMzRiYjlmNzhmNDc0MTFkNzM2ZGJkNWNlNjM4Yjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABds3qDggFqTU2MTA5Njk2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b160c09f53f34bb9f78f47411d736dbd5ce638b9", "author": {"user": {"login": "edsavage", "name": "Ed Savage"}}, "url": "https://github.com/elastic/elasticsearch/commit/b160c09f53f34bb9f78f47411d736dbd5ce638b9", "committedDate": "2020-12-22T11:47:48Z", "message": "[ML] Pass extra JSON config files to autodetect\n\nPass JSON files containing rule filters and scheduled\nevents configuration to autodetect.\n\nThis change must not be merged until after elastic/ml-cpp#1640 as the\nC++ backend code must be able to safely consume the new command line\noptions.\n\nRelates elastic/ml-cpp#1253"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MTM1MjE1", "url": "https://github.com/elastic/elasticsearch/pull/66736#pullrequestreview-557135215", "createdAt": "2020-12-22T14:51:26Z", "commit": {"oid": "b160c09f53f34bb9f78f47411d736dbd5ce638b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNDo1MToyNlrOIJ9zFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNDo1MToyNlrOIJ9zFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMyMDU5Ng==", "bodyText": "It's very non-standard in Elasticsearch to have a JSON document whose outermost level is an array.  That's why you've had to hand-craft a writer instead of using standard mechanisms.  I think instead you should use a format similar to the get scheduled events API response, with the document being an object at its outermost level, and containing a field events that is the array of scheduled events.  If you can tolerate the superfluous count you could actually reuse GetCalendarEventsAction.Response to create and print this.  Or create a new very simple ToXContentObject that contains a List<ScheduledEvent> and uses builder.field(\"events\", scheduledEvents) in its toXContent method.\nThen you'll need to change the C++ parser to accept the extra object layer and events field, but there needs to be a second PR on the C++ side anyway and since the current C++ code is disabled this PR can still be merged before the second round of C++ updates.", "url": "https://github.com/elastic/elasticsearch/pull/66736#discussion_r547320596", "createdAt": "2020-12-22T14:51:26Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/writer/ScheduledEventsWriter.java", "diffHunk": "@@ -58,4 +58,21 @@ public void write() throws IOException {\n             ++eventIndex;\n         }\n     }\n+\n+    public void writeJson() throws IOException {\n+        buffer.append('[');\n+        boolean first = true;\n+        for (ScheduledEvent event : scheduledEvents) {\n+            if (first) {\n+                first = false;\n+            } else {\n+                buffer.append(',');\n+            }\n+\n+            try (XContentBuilder contentBuilder = XContentFactory.jsonBuilder()) {\n+                buffer.append(Strings.toString(event.writeJson(bucketSpan, contentBuilder)));\n+            }\n+        }\n+        buffer.append(']');\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b160c09f53f34bb9f78f47411d736dbd5ce638b9"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78e6aa174ddfbbe6c9fa641f3446a9736aced8f0", "author": {"user": {"login": "edsavage", "name": "Ed Savage"}}, "url": "https://github.com/elastic/elasticsearch/commit/78e6aa174ddfbbe6c9fa641f3446a9736aced8f0", "committedDate": "2020-12-23T14:52:00Z", "message": "[ML] Attend to code review comments\n\nModified JSON configuration format for both scheduled events and for\nfilters to be objects (rather than arrays)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwOTk0Mzgz", "url": "https://github.com/elastic/elasticsearch/pull/66736#pullrequestreview-560994383", "createdAt": "2021-01-04T12:31:17Z", "commit": {"oid": "78e6aa174ddfbbe6c9fa641f3446a9736aced8f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjozMToxN1rOINwDIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjozMToxN1rOINwDIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI4OTYzMw==", "bodyText": "As we're streaming scheduled events, I think it would be clearer to map these to a ScheduledEventToRuleWriter. Then the RULES ParseField added in ScheduledEvent can move in that writer class.", "url": "https://github.com/elastic/elasticsearch/pull/66736#discussion_r551289633", "createdAt": "2021-01-04T12:31:17Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/AutodetectBuilder.java", "diffHunk": "@@ -365,6 +372,28 @@ private void buildFieldConfig(List<String> command) throws IOException {\n         }\n     }\n \n+    private void buildScheduledEventsConfig(List<String> command) throws IOException {\n+        if (scheduledEvents.isEmpty()) {\n+            return;\n+        }\n+        Path eventsConfigFile = Files.createTempFile(env.tmpFile(), \"eventsConfig\", JSON_EXTENSION);\n+        filesToDelete.add(eventsConfigFile);\n+\n+        List<DetectionRuleWriter> detectionRuleWriters = scheduledEvents.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e6aa174ddfbbe6c9fa641f3446a9736aced8f0"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "234ddbde33a3ed24631d218f7ed5dda59f159f54", "author": {"user": {"login": "edsavage", "name": "Ed Savage"}}, "url": "https://github.com/elastic/elasticsearch/commit/234ddbde33a3ed24631d218f7ed5dda59f159f54", "committedDate": "2021-01-04T13:56:28Z", "message": "Attend to code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMDk2OTY3", "url": "https://github.com/elastic/elasticsearch/pull/66736#pullrequestreview-561096967", "createdAt": "2021-01-04T15:00:37Z", "commit": {"oid": "234ddbde33a3ed24631d218f7ed5dda59f159f54"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4300, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}