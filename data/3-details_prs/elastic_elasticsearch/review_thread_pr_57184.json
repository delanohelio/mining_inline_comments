{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNDk3ODUz", "number": 57184, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjozOToxMlrOEAEXtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjozOToxMlrOEAEXtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTA3MDYzOnYy", "diffSide": "RIGHT", "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjozOToxMlrOGbHUpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDo0NTowOVrOGbcdFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDcwOQ==", "bodyText": "I don't think the last sentence follows from the description. I think it'd be lovely to have a paragraph on when it is useful to modify these settings, but that it'd belong more at the top of the page than here. I think if you modify the settings you typically modify all of them. I think you mostly are interested in modifying them if you have a very big disk and 85%/90%/95% would be quite wasteful. Of if you write lots of data very quickly compared to the amount of disk so the defaults aren't conservative enough.", "url": "https://github.com/elastic/elasticsearch/pull/57184#discussion_r431084709", "createdAt": "2020-05-27T12:39:12Z", "author": {"login": "nik9000"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -37,23 +37,23 @@ file or updated dynamically on a live cluster with the\n     changed in 8.0. This setting can be set to `true` to enable the\n     disk watermarks for a single data node cluster (will become default in 8.0).\n \n+[[cluster-routing-flood_stage]]\n `cluster.routing.allocation.disk.watermark.flood_stage`::\n +\n --\n-Controls the flood stage watermark. It defaults to 95%, meaning that\n-Elasticsearch enforces a read-only index block\n+Controls the flood stage watermark, which defaults to 95%. Elasticsearch enforces a read-only index block\n (`index.blocks.read_only_allow_delete`) on every index that has one or more\n-shards allocated on the node that has at least one disk exceeding the flood\n-stage. This is a last resort to prevent nodes from running out of disk space.\n-The index block is automatically released once the disk utilization falls below\n+shards allocated on the node, and that has at least one disk exceeding the flood\n+stage. This setting is a last resort to prevent nodes from running out of disk space.\n+The index block is automatically released when the disk utilization falls below\n the high watermark.\n \n-NOTE: You can not mix the usage of percentage values and byte values within\n-these settings. Either all are set to percentage values, or all are set to byte\n-values. This is so that we can we validate that the settings are internally\n-consistent (that is, the low disk threshold is not more than the high disk\n-threshold, and the high disk threshold is not more than the flood stage\n-threshold).\n+NOTE: You cannot mix the usage of percentage values and byte values within\n+these settings. Either all values are set to percentage values, or all are set to byte\n+values. This enforcement is so that Elasticsearch can validate that the settings are internally\n+consistent, ensuring that the low disk threshold is less than the high disk\n+threshold, and the high disk threshold is less than the flood stage\n+threshold. Therefore, you typically do not need to modify this setting.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8643f7529f3f7f64747757d35754467b28733779"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxOTI0Mw==", "bodyText": "I removed the last sentence this commit. If you think an expanded explanation of why users might want to modify these settings is warranted, let me know.", "url": "https://github.com/elastic/elasticsearch/pull/57184#discussion_r431419243", "createdAt": "2020-05-27T20:21:55Z", "author": {"login": "lockewritesdocs"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -37,23 +37,23 @@ file or updated dynamically on a live cluster with the\n     changed in 8.0. This setting can be set to `true` to enable the\n     disk watermarks for a single data node cluster (will become default in 8.0).\n \n+[[cluster-routing-flood_stage]]\n `cluster.routing.allocation.disk.watermark.flood_stage`::\n +\n --\n-Controls the flood stage watermark. It defaults to 95%, meaning that\n-Elasticsearch enforces a read-only index block\n+Controls the flood stage watermark, which defaults to 95%. Elasticsearch enforces a read-only index block\n (`index.blocks.read_only_allow_delete`) on every index that has one or more\n-shards allocated on the node that has at least one disk exceeding the flood\n-stage. This is a last resort to prevent nodes from running out of disk space.\n-The index block is automatically released once the disk utilization falls below\n+shards allocated on the node, and that has at least one disk exceeding the flood\n+stage. This setting is a last resort to prevent nodes from running out of disk space.\n+The index block is automatically released when the disk utilization falls below\n the high watermark.\n \n-NOTE: You can not mix the usage of percentage values and byte values within\n-these settings. Either all are set to percentage values, or all are set to byte\n-values. This is so that we can we validate that the settings are internally\n-consistent (that is, the low disk threshold is not more than the high disk\n-threshold, and the high disk threshold is not more than the flood stage\n-threshold).\n+NOTE: You cannot mix the usage of percentage values and byte values within\n+these settings. Either all values are set to percentage values, or all are set to byte\n+values. This enforcement is so that Elasticsearch can validate that the settings are internally\n+consistent, ensuring that the low disk threshold is less than the high disk\n+threshold, and the high disk threshold is less than the flood stage\n+threshold. Therefore, you typically do not need to modify this setting.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDcwOQ=="}, "originalCommit": {"oid": "8643f7529f3f7f64747757d35754467b28733779"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzMDkzNQ==", "bodyText": "I do think it'd be nice, but this is a good change as it stands now anyway. Merge anytime you are ready!", "url": "https://github.com/elastic/elasticsearch/pull/57184#discussion_r431430935", "createdAt": "2020-05-27T20:45:09Z", "author": {"login": "nik9000"}, "path": "docs/reference/modules/cluster/disk_allocator.asciidoc", "diffHunk": "@@ -37,23 +37,23 @@ file or updated dynamically on a live cluster with the\n     changed in 8.0. This setting can be set to `true` to enable the\n     disk watermarks for a single data node cluster (will become default in 8.0).\n \n+[[cluster-routing-flood_stage]]\n `cluster.routing.allocation.disk.watermark.flood_stage`::\n +\n --\n-Controls the flood stage watermark. It defaults to 95%, meaning that\n-Elasticsearch enforces a read-only index block\n+Controls the flood stage watermark, which defaults to 95%. Elasticsearch enforces a read-only index block\n (`index.blocks.read_only_allow_delete`) on every index that has one or more\n-shards allocated on the node that has at least one disk exceeding the flood\n-stage. This is a last resort to prevent nodes from running out of disk space.\n-The index block is automatically released once the disk utilization falls below\n+shards allocated on the node, and that has at least one disk exceeding the flood\n+stage. This setting is a last resort to prevent nodes from running out of disk space.\n+The index block is automatically released when the disk utilization falls below\n the high watermark.\n \n-NOTE: You can not mix the usage of percentage values and byte values within\n-these settings. Either all are set to percentage values, or all are set to byte\n-values. This is so that we can we validate that the settings are internally\n-consistent (that is, the low disk threshold is not more than the high disk\n-threshold, and the high disk threshold is not more than the flood stage\n-threshold).\n+NOTE: You cannot mix the usage of percentage values and byte values within\n+these settings. Either all values are set to percentage values, or all are set to byte\n+values. This enforcement is so that Elasticsearch can validate that the settings are internally\n+consistent, ensuring that the low disk threshold is less than the high disk\n+threshold, and the high disk threshold is less than the flood stage\n+threshold. Therefore, you typically do not need to modify this setting.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDcwOQ=="}, "originalCommit": {"oid": "8643f7529f3f7f64747757d35754467b28733779"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3915, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}