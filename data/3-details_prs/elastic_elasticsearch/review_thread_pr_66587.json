{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNDc3ODI1", "number": 66587, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMToyMjowM1rOFHJM6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMToyMjowM1rOFHJM6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDM1MTEyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMToyMjowM1rOIIfF0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMToyMjowM1rOIIfF0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc2ODkxNQ==", "bodyText": "I figured I'd encapsulate this a little (even though it adds a bunch of lines) because the Tuple access is quite hard to read and it's used in a bunch of spots.", "url": "https://github.com/elastic/elasticsearch/pull/66587#discussion_r545768915", "createdAt": "2020-12-18T11:22:03Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1298,20 +1297,62 @@ public void endVerification(String seed) {\n     private final AtomicLong latestKnownRepoGen = new AtomicLong(RepositoryData.UNKNOWN_REPO_GEN);\n \n     // Best effort cache of the latest known repository data and its generation, cached serialized as compressed json\n-    private final AtomicReference<Tuple<Long, BytesReference>> latestKnownRepositoryData = new AtomicReference<>();\n+    private final AtomicReference<CachedRepositoryData> latestKnownRepositoryData =\n+            new AtomicReference<>(new CachedRepositoryData(RepositoryData.EMPTY_REPO_GEN, null));\n+\n+    /**\n+     * Cached serialized repository data or placeholder to keep track of the fact that data for a generation was too large to be cached.\n+     */\n+    private static final class CachedRepositoryData {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95087b3a94c33d500ed291575b4bca06af78dec0"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4465, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}