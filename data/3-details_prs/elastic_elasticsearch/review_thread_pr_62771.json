{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwOTc1MjU0", "number": 62771, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNDoyNDowNFrOEmHDxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODowNTowNFrOEn95Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mzk2OTk5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryShardId.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNDoyNDowNFrOHV8s9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNDoyNDowNFrOHV8s9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc3NjY5NA==", "bodyText": "This class is obviously not necessary here (aside from introducing the type for the API), it'll play a more central role in the state machine.", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r492776694", "createdAt": "2020-09-22T14:24:04Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryShardId.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.repositories;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a shard snapshot in a repository.\n+ */\n+public final class RepositoryShardId implements Writeable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b92e4ae3be9093ecc8f26cf6373bf82c9c2d726"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzM3Nzk1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzo0NzowN1rOHYyG5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTozODoxNlrOHY1-fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0ODgzNw==", "bodyText": "Nit: maybe targetSnapshotName -> cloneSnapshotName ?", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495748837", "createdAt": "2020-09-28T07:47:07Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java", "diffHunk": "@@ -386,6 +386,19 @@ public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<File\n         this.incrementalSize = incrementalSize;\n     }\n \n+    /**\n+     * Creates a new instance has a different name and zero incremental file counts but is identical to this instance in terms of the files\n+     * it references.\n+     *\n+     * @param targetSnapshotName target snapshot name\n+     * @param startTime          time the clone operation on the repository was started\n+     * @param time               time it took to create the clone\n+     */\n+    public BlobStoreIndexShardSnapshot asClone(String targetSnapshotName, long startTime, long time) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5MTY5Mw==", "bodyText": "Hmm :) Frankly I like \"target\" better, leaves less room for ambiguity. With \"clone\" it's never quite clear if it's the source or the target IMO since by definition \"clone\" is a somewhat symmetric thing?", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495791693", "createdAt": "2020-09-28T09:03:25Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java", "diffHunk": "@@ -386,6 +386,19 @@ public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<File\n         this.incrementalSize = incrementalSize;\n     }\n \n+    /**\n+     * Creates a new instance has a different name and zero incremental file counts but is identical to this instance in terms of the files\n+     * it references.\n+     *\n+     * @param targetSnapshotName target snapshot name\n+     * @param startTime          time the clone operation on the repository was started\n+     * @param time               time it took to create the clone\n+     */\n+    public BlobStoreIndexShardSnapshot asClone(String targetSnapshotName, long startTime, long time) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0ODgzNw=="}, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxMjIyMw==", "bodyText": "Sure - I said \"maybe\" :)", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495812223", "createdAt": "2020-09-28T09:38:16Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java", "diffHunk": "@@ -386,6 +386,19 @@ public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<File\n         this.incrementalSize = incrementalSize;\n     }\n \n+    /**\n+     * Creates a new instance has a different name and zero incremental file counts but is identical to this instance in terms of the files\n+     * it references.\n+     *\n+     * @param targetSnapshotName target snapshot name\n+     * @param startTime          time the clone operation on the repository was started\n+     * @param time               time it took to create the clone\n+     */\n+    public BlobStoreIndexShardSnapshot asClone(String targetSnapshotName, long startTime, long time) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0ODgzNw=="}, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzM4MDk2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzo0ODowNlrOHYyIug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTowMDo1NlrOHY0oyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0OTMwNg==", "bodyText": "Can fit on a single line I think", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495749306", "createdAt": "2020-09-28T07:48:06Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java", "diffHunk": "@@ -386,6 +386,19 @@ public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<File\n         this.incrementalSize = incrementalSize;\n     }\n \n+    /**\n+     * Creates a new instance has a different name and zero incremental file counts but is identical to this instance in terms of the files\n+     * it references.\n+     *\n+     * @param targetSnapshotName target snapshot name\n+     * @param startTime          time the clone operation on the repository was started\n+     * @param time               time it took to create the clone\n+     */\n+    public BlobStoreIndexShardSnapshot asClone(String targetSnapshotName, long startTime, long time) {\n+        return new BlobStoreIndexShardSnapshot(\n+                targetSnapshotName, indexVersion, indexFiles, startTime, time, 0, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5MDI4Mg==", "bodyText": "++ damn Idea's variable name overlay :D", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495790282", "createdAt": "2020-09-28T09:00:56Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java", "diffHunk": "@@ -386,6 +386,19 @@ public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<File\n         this.incrementalSize = incrementalSize;\n     }\n \n+    /**\n+     * Creates a new instance has a different name and zero incremental file counts but is identical to this instance in terms of the files\n+     * it references.\n+     *\n+     * @param targetSnapshotName target snapshot name\n+     * @param startTime          time the clone operation on the repository was started\n+     * @param time               time it took to create the clone\n+     */\n+    public BlobStoreIndexShardSnapshot asClone(String targetSnapshotName, long startTime, long time) {\n+        return new BlobStoreIndexShardSnapshot(\n+                targetSnapshotName, indexVersion, indexFiles, startTime, time, 0, 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0OTMwNg=="}, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzM5MTE3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzo1MTowOFrOHYyO2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzo1MTowOFrOHYyO2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc1MDg3NQ==", "bodyText": "Maybe add the source name in the message?", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495750875", "createdAt": "2020-09-28T07:51:08Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java", "diffHunk": "@@ -95,6 +95,30 @@ private BlobStoreIndexShardSnapshots(Map<String, FileInfo> files, List<SnapshotF\n         this.physicalFiles = unmodifiableMap(mapBuilder);\n     }\n \n+    /**\n+     * Create a new instance that has a new snapshot by name {@code target} added which shares all files with the snapshot of name\n+     * {@code source}.\n+     *\n+     * @param source source snapshot name\n+     * @param target target snapshot name\n+     * @return new instance with added cloned snapshot\n+     */\n+    public BlobStoreIndexShardSnapshots withClone(String source, String target) {\n+        SnapshotFiles sourceFiles = null;\n+        for (SnapshotFiles shardSnapshot : shardSnapshots) {\n+            if (shardSnapshot.snapshot().equals(source)) {\n+                sourceFiles = shardSnapshot;\n+                break;\n+            }\n+        }\n+        if (sourceFiles == null) {\n+            throw new IllegalArgumentException(\"unknown source\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzQzOTYyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODowNTowNFrOHYysCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTozNzo0MlrOHY19IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc1ODM0NQ==", "bodyText": "I think we should check and fail that the repository is not read-only?", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495758345", "createdAt": "2020-09-28T08:05:04Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -397,6 +398,64 @@ public TimeValue timeout() {\n         }, onFailure));\n     }\n \n+    @Override\n+    public void cloneShardSnapshot(SnapshotId source, SnapshotId target, RepositoryShardId shardId,\n+                                   @Nullable String shardGeneration, ActionListener<String> listener) {\n+        final IndexId index = shardId.index();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4ODkwNQ==", "bodyText": "We currently don't do that for snapshotShard but I guess it might be nice to have that safety measure here as well :) I'll add it to both places.", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495788905", "createdAt": "2020-09-28T08:58:46Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -397,6 +398,64 @@ public TimeValue timeout() {\n         }, onFailure));\n     }\n \n+    @Override\n+    public void cloneShardSnapshot(SnapshotId source, SnapshotId target, RepositoryShardId shardId,\n+                                   @Nullable String shardGeneration, ActionListener<String> listener) {\n+        final IndexId index = shardId.index();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc1ODM0NQ=="}, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxMTg3Mw==", "bodyText": "Yes I think we should", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495811873", "createdAt": "2020-09-28T09:37:42Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -397,6 +398,64 @@ public TimeValue timeout() {\n         }, onFailure));\n     }\n \n+    @Override\n+    public void cloneShardSnapshot(SnapshotId source, SnapshotId target, RepositoryShardId shardId,\n+                                   @Nullable String shardGeneration, ActionListener<String> listener) {\n+        final IndexId index = shardId.index();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc1ODM0NQ=="}, "originalCommit": {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3422, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}