{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTU4NDg1", "number": 56158, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDo0MzoxN1rOD5KEuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxOTozMlrOD5SBvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjYwNDczOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/DateTimeParseProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDo0MzoxN1rOGQRbmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDo0MzoxN1rOGQRbmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxNTk5Mg==", "bodyText": "The get(0) seems optimistic - please extract this into a (date) utils method (maybe there's some utility in ES we could use).", "url": "https://github.com/elastic/elasticsearch/pull/56158#discussion_r419715992", "createdAt": "2020-05-04T20:43:17Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/DateTimeParseProcessor.java", "diffHunk": "@@ -55,9 +53,9 @@ public static Object process(Object timestampStr, Object pattern) {\n             TemporalAccessor ta = DateTimeFormatter.ofPattern((String) pattern, Locale.ROOT)\n                 .parseBest((String) timestampStr, ZonedDateTime::from, LocalDateTime::from);\n             if (ta instanceof LocalDateTime) {\n-                return ZonedDateTime.ofInstant((LocalDateTime) ta, ZoneOffset.UTC, UTC);\n+                return ZonedDateTime.ofInstant((LocalDateTime) ta, zoneId.getRules().getValidOffsets(((LocalDateTime) ta)).get(0), zoneId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934588a1959040d53ae141b8eaf1f41e12ef8056"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzkwNzgyOnYy", "diffSide": "RIGHT", "path": "docs/reference/sql/functions/date-time.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxOTozMlrOGQdN6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxOTozMlrOGQdN6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwOTA5OQ==", "bodyText": "As an improvement, I would add links to REST and jdbc driver params documentation where these parameters are defined.", "url": "https://github.com/elastic/elasticsearch/pull/56158#discussion_r419909099", "createdAt": "2020-05-05T07:19:32Z", "author": {"login": "astefan"}, "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -487,6 +484,16 @@ include-tagged::{sql-specs}/docs/docs.csv-spec[dateTimeParse1]\n include-tagged::{sql-specs}/docs/docs.csv-spec[dateTimeParse2]\n --------------------------------------------------\n \n+[NOTE]\n+====\n+If timezone is not specified in the datetime string expression and the parsing pattern, the resulting `datetime` will have the\n+time zone specified by the user through the `time_zone`/`timezone` REST/driver parameters with no conversion applied.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c930f474d1da2f20749312a8dc7cf5340e995bfd"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2366, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}