{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNDE5MDgx", "number": 57930, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODowNDozOVrOEElTVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0MzowM1rOEEvdag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjQwOTE5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/inference/TreeInferenceModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODowNDozOVrOGiSyyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzowODozM1rOGicRYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMjY4Mg==", "bodyText": "This has changed from shallowSizeOf to normal sizeOf. Could you explain?", "url": "https://github.com/elastic/elasticsearch/pull/57930#discussion_r438612682", "createdAt": "2020-06-11T08:04:39Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/inference/TreeInferenceModel.java", "diffHunk": "@@ -302,18 +303,16 @@ public void rewriteFeatureIndices(Map<String, Integer> newFeatureIndexMapping) {\n             treeNode.splitFeature = newSplitFeatureIndex;\n         }\n         this.featureNames = new String[0];\n+        // Since we are not top level, we no longer need local classification labels\n+        this.classificationLabels = null;\n     }\n \n     @Override\n     public long ramBytesUsed() {\n         long size = SHALLOW_SIZE;\n-        size += RamUsageEstimator.sizeOfCollection(classificationLabels);\n-        size += RamUsageEstimator.sizeOf(featureNames);\n-        size += RamUsageEstimator.shallowSizeOf(nodes);\n-        for (Node node : nodes) {\n-            size += node.ramBytesUsed();\n-        }\n-        size += RamUsageEstimator.sizeOfCollection(Arrays.asList(nodes));\n+        size += sizeOfCollection(classificationLabels);\n+        size += sizeOf(featureNames);\n+        size += sizeOf(nodes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c38fb52ec6e78d32752056fd2c38194f5a5daca7"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2Nzk3MQ==", "bodyText": "sizeOf in this context is accepting a Accountable[]. The underlying method will take care of shallow size + the size of each element in the accountable array.\nIt really should have been this way to begin with.", "url": "https://github.com/elastic/elasticsearch/pull/57930#discussion_r438767971", "createdAt": "2020-06-11T13:08:33Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/inference/TreeInferenceModel.java", "diffHunk": "@@ -302,18 +303,16 @@ public void rewriteFeatureIndices(Map<String, Integer> newFeatureIndexMapping) {\n             treeNode.splitFeature = newSplitFeatureIndex;\n         }\n         this.featureNames = new String[0];\n+        // Since we are not top level, we no longer need local classification labels\n+        this.classificationLabels = null;\n     }\n \n     @Override\n     public long ramBytesUsed() {\n         long size = SHALLOW_SIZE;\n-        size += RamUsageEstimator.sizeOfCollection(classificationLabels);\n-        size += RamUsageEstimator.sizeOf(featureNames);\n-        size += RamUsageEstimator.shallowSizeOf(nodes);\n-        for (Node node : nodes) {\n-            size += node.ramBytesUsed();\n-        }\n-        size += RamUsageEstimator.sizeOfCollection(Arrays.asList(nodes));\n+        size += sizeOfCollection(classificationLabels);\n+        size += sizeOf(featureNames);\n+        size += sizeOf(nodes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMjY4Mg=="}, "originalCommit": {"oid": "c38fb52ec6e78d32752056fd2c38194f5a5daca7"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzE4MjQ5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/modelsize/ModelSize.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoxNToxNVrOGiahQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoxNToxNVrOGiahQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczOTI2NA==", "bodyText": "nit: no need for qualifying with this", "url": "https://github.com/elastic/elasticsearch/pull/57930#discussion_r438739264", "createdAt": "2020-06-11T12:15:15Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/modelsize/ModelSize.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.ml.inference.modelsize;\n+\n+import org.apache.lucene.util.Accountable;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.xpack.core.ml.inference.trainedmodel.inference.InferenceDefinition;\n+import org.elasticsearch.xpack.core.ml.utils.NamedXContentObjectHelper;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.apache.lucene.util.RamUsageEstimator.alignObjectSize;\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.constructorArg;\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.optionalConstructorArg;\n+\n+public class ModelSize implements Accountable, ToXContentObject {\n+\n+    private static final ParseField PREPROCESSORS = new ParseField(\"preprocessors\");\n+    private static final ParseField TRAINED_MODEL_SIZE = new ParseField(\"trained_model_size\");\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public static ConstructingObjectParser<ModelSize, Void> PARSER = new ConstructingObjectParser<>(\n+        \"model_size\",\n+        false,\n+        a -> new ModelSize((EnsembleSize)a[0], (List<PreprocessorSize>)a[1])\n+    );\n+    static {\n+        PARSER.declareNamedObject(constructorArg(),\n+            (p, c, n) -> p.namedObject(TrainedModelSize.class, n, null),\n+            TRAINED_MODEL_SIZE);\n+        PARSER.declareNamedObjects(optionalConstructorArg(),\n+            (p, c, n) -> p.namedObject(PreprocessorSize.class, n, null),\n+            (val) -> {},\n+            PREPROCESSORS);\n+    }\n+\n+    private final EnsembleSize ensembleSize;\n+    private final List<PreprocessorSize> preprocessorSizes;\n+\n+    public ModelSize(EnsembleSize ensembleSize, List<PreprocessorSize> preprocessorSizes) {\n+        this.ensembleSize = ensembleSize;\n+        this.preprocessorSizes = preprocessorSizes == null ? Collections.emptyList() : preprocessorSizes;\n+    }\n+\n+    public int numOperations() {\n+        return this.preprocessorSizes.size() + this.ensembleSize.getNumOperations();\n+    }\n+\n+    @Override\n+    public long ramBytesUsed() {\n+        long size = InferenceDefinition.SHALLOW_SIZE;\n+        size += ensembleSize.ramBytesUsed();\n+        size += this.preprocessorSizes.stream().mapToLong(PreprocessorSize::ramBytesUsed).sum();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c38fb52ec6e78d32752056fd2c38194f5a5daca7"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzE4ODA2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/results/AnalyticsResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoxNzowNlrOGiakzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzowODo0OFrOGicR3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0MDE3NQ==", "bodyText": "I wonder if there's a good way to avoid the discrepancy: ModelSize VS. model_size_info. Could the java side by ModelSizeInfo? Or do we rather change the c++ to model_size?", "url": "https://github.com/elastic/elasticsearch/pull/57930#discussion_r438740175", "createdAt": "2020-06-11T12:17:06Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/results/AnalyticsResult.java", "diffHunk": "@@ -56,6 +59,7 @@\n         PARSER.declareObject(optionalConstructorArg(), OutlierDetectionStats.STRICT_PARSER, OUTLIER_DETECTION_STATS);\n         PARSER.declareObject(optionalConstructorArg(), ClassificationStats.STRICT_PARSER, CLASSIFICATION_STATS);\n         PARSER.declareObject(optionalConstructorArg(), RegressionStats.STRICT_PARSER, REGRESSION_STATS);\n+        PARSER.declareObject(optionalConstructorArg(), ModelSize.PARSER, MODEL_SIZE_INFO);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c38fb52ec6e78d32752056fd2c38194f5a5daca7"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2ODA5Mg==", "bodyText": "Sure, I will change the object name :)", "url": "https://github.com/elastic/elasticsearch/pull/57930#discussion_r438768092", "createdAt": "2020-06-11T13:08:48Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/results/AnalyticsResult.java", "diffHunk": "@@ -56,6 +59,7 @@\n         PARSER.declareObject(optionalConstructorArg(), OutlierDetectionStats.STRICT_PARSER, OUTLIER_DETECTION_STATS);\n         PARSER.declareObject(optionalConstructorArg(), ClassificationStats.STRICT_PARSER, CLASSIFICATION_STATS);\n         PARSER.declareObject(optionalConstructorArg(), RegressionStats.STRICT_PARSER, REGRESSION_STATS);\n+        PARSER.declareObject(optionalConstructorArg(), ModelSize.PARSER, MODEL_SIZE_INFO);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0MDE3NQ=="}, "originalCommit": {"oid": "c38fb52ec6e78d32752056fd2c38194f5a5daca7"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDA3MzM4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/modelsize/EnsembleSizeInfoInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTo0MzowM1rOGijY3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjoxMjozN1rOGikunA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDU3NQ==", "bodyText": "Too much information! :-)", "url": "https://github.com/elastic/elasticsearch/pull/57930#discussion_r438884575", "createdAt": "2020-06-11T15:43:03Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/modelsize/EnsembleSizeInfoInfo.java", "diffHunk": "@@ -25,7 +25,7 @@\n import static org.elasticsearch.xpack.ml.inference.modelsize.SizeEstimatorHelper.sizeOfDoubleArray;\n import static org.elasticsearch.xpack.ml.inference.modelsize.SizeEstimatorHelper.sizeOfStringCollection;\n \n-public class EnsembleSize implements TrainedModelSize {\n+public class EnsembleSizeInfoInfo implements TrainedModelSizeInfo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56835128f1a004dbd3ddc7e885116d1a67570f24"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwNjUyNA==", "bodyText": "AGH", "url": "https://github.com/elastic/elasticsearch/pull/57930#discussion_r438906524", "createdAt": "2020-06-11T16:12:37Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/modelsize/EnsembleSizeInfoInfo.java", "diffHunk": "@@ -25,7 +25,7 @@\n import static org.elasticsearch.xpack.ml.inference.modelsize.SizeEstimatorHelper.sizeOfDoubleArray;\n import static org.elasticsearch.xpack.ml.inference.modelsize.SizeEstimatorHelper.sizeOfStringCollection;\n \n-public class EnsembleSize implements TrainedModelSize {\n+public class EnsembleSizeInfoInfo implements TrainedModelSizeInfo {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDU3NQ=="}, "originalCommit": {"oid": "56835128f1a004dbd3ddc7e885116d1a67570f24"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1666, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}