{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNDYyNzU0", "number": 57094, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMjoxNDo0NlrOD_OoEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTowMjo1NFrOD_UMjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjI2NTE1OnYy", "diffSide": "RIGHT", "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMjoxNDo0NlrOGZxmnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMjoxNDo0NlrOGZxmnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY4MDI4NA==", "bodyText": "sorry maybe a naive comment, is it better to name public api getRequestHeaders ?", "url": "https://github.com/elastic/elasticsearch/pull/57094#discussion_r429680284", "createdAt": "2020-05-24T22:14:46Z", "author": {"login": "keypointt"}, "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpResponse.java", "diffHunk": "@@ -45,8 +47,8 @@ public boolean containsHeader(String name) {\n         return headers().contains(name);\n     }\n \n-    public Netty4HttpRequest getRequest() {\n-        return request;\n+    public HttpHeaders requestHeaders() {\n+        return requestHeaders;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd773a6770bc932ae849c99aeb653e1eb53108d"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjgyMzI0OnYy", "diffSide": "RIGHT", "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzowNDozOFrOGZ2v2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzowNDozOFrOGZ2v2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc2NDU2OA==", "bodyText": "I figured if we release the request before using these parts (version and headers) it's a little nicer not to pass the full request around. Also, for non-pooled allocation (this includes all requests that aren't search or bulk) this makes the GC's life a little easier)", "url": "https://github.com/elastic/elasticsearch/pull/57094#discussion_r429764568", "createdAt": "2020-05-25T07:04:38Z", "author": {"login": "original-brownbear"}, "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpResponse.java", "diffHunk": "@@ -20,19 +20,21 @@\n package org.elasticsearch.http.netty4;\n \n import io.netty.handler.codec.http.DefaultFullHttpResponse;\n+import io.netty.handler.codec.http.HttpHeaders;\n import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.netty.handler.codec.http.HttpVersion;\n import org.elasticsearch.common.bytes.BytesReference;\n import org.elasticsearch.http.HttpResponse;\n import org.elasticsearch.rest.RestStatus;\n import org.elasticsearch.transport.netty4.Netty4Utils;\n \n public class Netty4HttpResponse extends DefaultFullHttpResponse implements HttpResponse {\n \n-    private final Netty4HttpRequest request;\n+    private final HttpHeaders requestHeaders;\n \n-    Netty4HttpResponse(Netty4HttpRequest request, RestStatus status, BytesReference content) {\n-        super(request.nettyRequest().protocolVersion(), HttpResponseStatus.valueOf(status.getStatus()), Netty4Utils.toByteBuf(content));\n-        this.request = request;\n+    Netty4HttpResponse(HttpHeaders requestHeaders, HttpVersion version, RestStatus status, BytesReference content) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd773a6770bc932ae849c99aeb653e1eb53108d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzE3Nzc1OnYy", "diffSide": "RIGHT", "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTowMjo1NFrOGZ6Ljg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTowMjo1NFrOGZ6Ljg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgyMDgxNA==", "bodyText": "Do the same for NioCorsHandler here?", "url": "https://github.com/elastic/elasticsearch/pull/57094#discussion_r429820814", "createdAt": "2020-05-25T09:02:54Z", "author": {"login": "ywelsch"}, "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsHandler.java", "diffHunk": "@@ -93,20 +93,20 @@ public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception\n     public void write(ChannelHandlerContext ctx, Object msg, ChannelPromise promise) throws Exception {\n         assert msg instanceof Netty4HttpResponse : \"Invalid message type: \" + msg.getClass();\n         Netty4HttpResponse response = (Netty4HttpResponse) msg;\n-        setCorsResponseHeaders(response.getRequest().nettyRequest(), response, config);\n+        setCorsResponseHeaders(response.requestHeaders(), response, config);\n         ctx.write(response, promise);\n     }\n \n-    public static void setCorsResponseHeaders(HttpRequest request, HttpResponse resp, CorsHandler.Config config) {\n+    public static void setCorsResponseHeaders(HttpHeaders headers, HttpResponse resp, CorsHandler.Config config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd773a6770bc932ae849c99aeb653e1eb53108d"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3930, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}