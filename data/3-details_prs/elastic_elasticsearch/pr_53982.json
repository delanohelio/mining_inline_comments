{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNDE5OTc1", "number": 53982, "title": "Refactor AliasOrIndex abstraction.", "bodyText": "In order to prepare the AliasOrIndex abstraction for the introduction of data streams,\nthe abstraction needs to be made more flexible, because currently it really can be only\nan alias or an index.\nThe following changes were made:\n\nRenamed AliasOrIndex to IndexAbstraction.\nIntroduced a IndexSpace.Type enum to indicate what a IndexSpace instance is.\nReplaced the isAlias() method that returns a boolean with the getType() method that returns the new Type enum.\nMoved getWriteIndex() up from the IndexSpace.Alias to the IndexSpace interface.\nMoved getAliasName() up from the IndexSpace.Alias to the IndexSpace interface and renamed it to getName().\nRemoved unnecessary casting to IndexSpace.Alias by just checking the getType() method.\n\nRelates to #53100", "createdAt": "2020-03-23T14:27:59Z", "url": "https://github.com/elastic/elasticsearch/pull/53982", "merged": true, "mergeCommit": {"oid": "b7af8524228891c305b8868ff7f748ec10cf724c"}, "closed": true, "closedAt": "2020-03-30T06:10:08Z", "author": {"login": "martijnvg"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQfIoGgH2gAyMzkyNDE5OTc1OjMxMGJkYTFkY2EzMzE1OTFlZDU1ZWY2ZGYxOGFkODEyNTkxZmUwYzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRyXRYAH2gAyMzkyNDE5OTc1OjkwZjZhMmRhZGE4ZmEyZWVlMWFiOTZlMzFlOWMwZmU5MmQ1OGM3OGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "310bda1dca331591ed55ef6df18ad812591fe0c2", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/310bda1dca331591ed55ef6df18ad812591fe0c2", "committedDate": "2020-03-23T14:25:21Z", "message": "Refactor AliasOrIndex abstraction.\n\nIn order to prepare the `AliasOrIndex` abstraction for the introduction of data streams,\nthe abstraction needs to be made more flexible, because currently it really can be only\nan alias or an index.\n\n* Introduced a `AliasOrIndex.Type` enum to indicate what a `AliasOrIndex` instance is.\n* Replaced the `isAlias()`` method that returns a boolean with the `getType()`` method that returns the new Type enum.\n* Moved `getWriteIndex()`` up from the `AliasOrIndex.Alias` to the `AliasOrIndex` interface.\n* Moved `g`etAliasName()`` up from the `AliasOrIndex.Alias` to the `AliasOrIndex` interface and renamed it to `getName()``.\n* Removed unnecessary casting to `AliasOrIndex.Alias` by just checking the `getType()`` method.\n\nFinally `AliasOrIndex` should be renamed to reflect that it can be more than just an index or alias, since\nin the near future it can also be a data stream. The name AliasOrIndexOrDataStream is not appealing to me.\nWe can rename it to `Namespace`, but that sounds to generic to me. `ResolvedIndicesExpression` sounds better\nto me, since it reflects more what it is (an expression from api that has been resolved to alias/index/datasteam),\nbut the name itself is a bit on the long side.\n\nRelates to #53100"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdae62b30233bd5361ea505c50aec6df7168719e", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/fdae62b30233bd5361ea505c50aec6df7168719e", "committedDate": "2020-03-23T15:02:44Z", "message": "fixed checkstyle violation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a22b1972d22b3e8a51590f5baf75de86f0366ac", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/7a22b1972d22b3e8a51590f5baf75de86f0366ac", "committedDate": "2020-03-24T11:51:35Z", "message": "tweaked logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39086810d6e001714ab9e8052ca3812151a9dc97", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/39086810d6e001714ab9e8052ca3812151a9dc97", "committedDate": "2020-03-24T13:44:56Z", "message": "Merge remote-tracking branch 'es/master' into improve_alias_or_index_abstraction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d4eb8eef8afc8cce436fc397498de2c2c1b55d7", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/6d4eb8eef8afc8cce436fc397498de2c2c1b55d7", "committedDate": "2020-03-24T13:55:03Z", "message": "fixed compile error after merging in master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a31b65d6012a8f2a0eac9cccbd0afb144eb2e490", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/a31b65d6012a8f2a0eac9cccbd0afb144eb2e490", "committedDate": "2020-03-25T08:00:36Z", "message": "renamed AliasOrIndex to IndexSpace and added jdocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "146535bbd852c4f7ccfafbc759ac4e766059c1b3", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/146535bbd852c4f7ccfafbc759ac4e766059c1b3", "committedDate": "2020-03-25T08:25:46Z", "message": "Merge remote-tracking branch 'es/master' into improve_alias_or_index_abstraction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjQyNzk3", "url": "https://github.com/elastic/elasticsearch/pull/53982#pullrequestreview-381242797", "createdAt": "2020-03-25T15:09:18Z", "commit": {"oid": "146535bbd852c4f7ccfafbc759ac4e766059c1b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTowOToxOVrOF7fwPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTowOToxOVrOF7fwPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzMDU1Nw==", "bodyText": "Looks like a lot of error messages such as this one that assume only alias or index types would benefit from wording changes that accommodate data streams, too.", "url": "https://github.com/elastic/elasticsearch/pull/53982#discussion_r397930557", "createdAt": "2020-03-25T15:09:19Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java", "diffHunk": "@@ -263,16 +263,15 @@ static String generateRolloverIndexName(String sourceIndexName, IndexNameExpress\n     }\n \n     static void validate(MetaData metaData, RolloverRequest request) {\n-        final AliasOrIndex aliasOrIndex = metaData.getAliasAndIndexLookup().get(request.getAlias());\n-        if (aliasOrIndex == null) {\n+        final IndexSpace indexSpace = metaData.getAliasAndIndexLookup().get(request.getAlias());\n+        if (indexSpace == null) {\n             throw new IllegalArgumentException(\"source alias does not exist\");\n         }\n-        if (aliasOrIndex.isAlias() == false) {\n+        if (indexSpace.getType() != IndexSpace.Type.ALIAS) {\n             throw new IllegalArgumentException(\"source alias is a concrete index\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146535bbd852c4f7ccfafbc759ac4e766059c1b3"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjQ4Mjk5", "url": "https://github.com/elastic/elasticsearch/pull/53982#pullrequestreview-381248299", "createdAt": "2020-03-25T15:14:33Z", "commit": {"oid": "146535bbd852c4f7ccfafbc759ac4e766059c1b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToxNDozM1rOF7gA9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToxNDozM1rOF7gA9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzNDgzNw==", "bodyText": "We'll probably want to rename that variable from indexOrAlias. Can be done in a later PR, though.", "url": "https://github.com/elastic/elasticsearch/pull/53982#discussion_r397934837", "createdAt": "2020-03-25T15:14:33Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -281,18 +281,16 @@ static boolean resolvePipelines(final DocWriteRequest<?> originalRequest, final\n             IndexMetaData indexMetaData = metaData.indices().get(originalRequest.index());\n             // check the alias for the index request (this is how normal index requests are modeled)\n             if (indexMetaData == null && indexRequest.index() != null) {\n-                AliasOrIndex indexOrAlias = metaData.getAliasAndIndexLookup().get(indexRequest.index());\n-                if (indexOrAlias != null && indexOrAlias.isAlias()) {\n-                    AliasOrIndex.Alias alias = (AliasOrIndex.Alias) indexOrAlias;\n-                    indexMetaData = alias.getWriteIndex();\n+                IndexSpace indexOrAlias = metaData.getAliasAndIndexLookup().get(indexRequest.index());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146535bbd852c4f7ccfafbc759ac4e766059c1b3"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjUwNTE3", "url": "https://github.com/elastic/elasticsearch/pull/53982#pullrequestreview-381250517", "createdAt": "2020-03-25T15:16:45Z", "commit": {"oid": "146535bbd852c4f7ccfafbc759ac4e766059c1b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToxNjo0NVrOF7gHlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToxNjo0NVrOF7gHlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzNjUzNQ==", "bodyText": "nit: \"may be therefor also be returned\" -> \"may therefore also be returned\"", "url": "https://github.com/elastic/elasticsearch/pull/53982#discussion_r397936535", "createdAt": "2020-03-25T15:16:45Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexSpace.java", "diffHunk": "@@ -35,30 +34,68 @@\n import static org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_HIDDEN_SETTING;\n \n /**\n- * Encapsulates the  {@link IndexMetaData} instances of a concrete index or indices an alias is pointing to.\n+ * An index space is a reference to one or more concrete indices.\n+ * An index space has a unique name and encapsulates all the  {@link IndexMetaData} instances it is pointing to.\n+ * Also depending on type it may refer to a single or many concrete indices and may or may not have a write index.\n  */\n-public interface AliasOrIndex {\n+public interface IndexSpace {\n+\n+    /**\n+     * @return the type of the index space\n+     */\n+    Type getType();\n \n     /**\n-     * @return whether this an alias or concrete index\n+     * @return the name of the index space\n      */\n-    boolean isAlias();\n+    String getName();\n \n     /**\n-     * @return All {@link IndexMetaData} of all concrete indices this alias is referring to\n-     * or if this is a concrete index its {@link IndexMetaData}\n+     * @return All {@link IndexMetaData} of all concrete indices this index space is referring to.\n      */\n     List<IndexMetaData> getIndices();\n \n     /**\n-     * @return whether this alias/index is hidden or not\n+     * A write index is a dedicated concrete index, that accepts all the new documents that belong to an index space.\n+     *\n+     * A write index may also be a regular concrete index of a index space and may be therefor also be returned", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146535bbd852c4f7ccfafbc759ac4e766059c1b3"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjU4NTAw", "url": "https://github.com/elastic/elasticsearch/pull/53982#pullrequestreview-381258500", "createdAt": "2020-03-25T15:24:37Z", "commit": {"oid": "146535bbd852c4f7ccfafbc759ac4e766059c1b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToyNDozN1rOF7ggYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToyNDozN1rOF7ggYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0Mjg4Mw==", "bodyText": "Will we want to eventually rename this class to something like IndexSpaceResolver?", "url": "https://github.com/elastic/elasticsearch/pull/53982#discussion_r397942883", "createdAt": "2020-03-25T15:24:37Z", "author": {"login": "danhermann"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/IndicesAndAliasesResolver.java", "diffHunk": "@@ -14,7 +14,7 @@\n import org.elasticsearch.action.search.SearchRequest;\n import org.elasticsearch.action.support.IndicesOptions;\n import org.elasticsearch.cluster.metadata.AliasMetaData;\n-import org.elasticsearch.cluster.metadata.AliasOrIndex;\n+import org.elasticsearch.cluster.metadata.IndexSpace;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146535bbd852c4f7ccfafbc759ac4e766059c1b3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjYwMTk5", "url": "https://github.com/elastic/elasticsearch/pull/53982#pullrequestreview-381260199", "createdAt": "2020-03-25T15:26:15Z", "commit": {"oid": "146535bbd852c4f7ccfafbc759ac4e766059c1b3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6c053c06525a99834933ec5ccfe3a5336eadc12", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/d6c053c06525a99834933ec5ccfe3a5336eadc12", "committedDate": "2020-03-26T08:58:46Z", "message": "Merge remote-tracking branch 'es/master' into improve_alias_or_index_abstraction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48084dd1808b405d1f5f56eae0f4b5f5267407ff", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/48084dd1808b405d1f5f56eae0f4b5f5267407ff", "committedDate": "2020-03-26T09:39:34Z", "message": "applied review comments and\nrenamed `MetaData#aliasAndIndexLookup` field (and getter) to `MetaData#indexSpaceLookup`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c81a77f3ba4e29efd858c106f17462b526cd27c8", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/c81a77f3ba4e29efd858c106f17462b526cd27c8", "committedDate": "2020-03-27T09:13:18Z", "message": "Merge remote-tracking branch 'es/master' into improve_alias_or_index_abstraction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae07254ab01991f3d0f0a9ea375c3fc062722c56", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/ae07254ab01991f3d0f0a9ea375c3fc062722c56", "committedDate": "2020-03-27T09:21:39Z", "message": "changed MetDataRolloverService to use IndexSpace after merge\nand fixed test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea803a2ab6d6b06afecd86a41e5382d5451ed092", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/ea803a2ab6d6b06afecd86a41e5382d5451ed092", "committedDate": "2020-03-27T10:15:50Z", "message": "renamed IndexSpace to IndexAbstraction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cabb45e5673033f7b679c766e3d5b46c43f9fe9b", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/cabb45e5673033f7b679c766e3d5b46c43f9fe9b", "committedDate": "2020-03-27T10:36:12Z", "message": "tweaked checks to also work if more index abstraction types are introduced."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c47b68fe8a9ee666db7a6d0408667712fb831d7", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/5c47b68fe8a9ee666db7a6d0408667712fb831d7", "committedDate": "2020-03-27T10:36:38Z", "message": "List.of(...) everywhere"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNzYzNDk4", "url": "https://github.com/elastic/elasticsearch/pull/53982#pullrequestreview-382763498", "createdAt": "2020-03-27T11:06:57Z", "commit": {"oid": "5c47b68fe8a9ee666db7a6d0408667712fb831d7"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMTowNjo1OFrOF8siRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjowNzoyMVrOF8uWbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE4ODU1MQ==", "bodyText": "Remove \"Space\" from variable name?", "url": "https://github.com/elastic/elasticsearch/pull/53982#discussion_r399188551", "createdAt": "2020-03-27T11:06:58Z", "author": {"login": "henningandersen"}, "path": "plugins/examples/security-authorization-engine/src/test/java/org/elasticsearch/example/CustomAuthorizationEngineTests.java", "diffHunk": "@@ -130,8 +130,8 @@ public void testAuthorizeClusterAction() {\n \n     public void testAuthorizeIndexAction() {\n         CustomAuthorizationEngine engine = new CustomAuthorizationEngine();\n-        Map<String, AliasOrIndex> aliasOrIndexMap = new HashMap<>();\n-        aliasOrIndexMap.put(\"index\", new Index(IndexMetaData.builder(\"index\")\n+        Map<String, IndexAbstraction> indexSpaceMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c47b68fe8a9ee666db7a6d0408667712fb831d7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMTM0Ng==", "bodyText": "nit: also verify type (since we no longer do the cast).", "url": "https://github.com/elastic/elasticsearch/pull/53982#discussion_r399201346", "createdAt": "2020-03-27T11:32:42Z", "author": {"login": "henningandersen"}, "path": "server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetaDataRolloverServiceTests.java", "diffHunk": "@@ -341,7 +341,7 @@ public void testRolloverClusterState() throws Exception {\n             IndexMetaData rolloverIndexMetaData = rolloverMetaData.index(newIndexName);\n             assertThat(rolloverIndexMetaData.getNumberOfShards(), equalTo(numberOfShards));\n \n-            AliasOrIndex.Alias alias = (AliasOrIndex.Alias) rolloverMetaData.getAliasAndIndexLookup().get(aliasName);\n+            IndexAbstraction alias = rolloverMetaData.getIndicesLookup().get(aliasName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c47b68fe8a9ee666db7a6d0408667712fb831d7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxNTA0MA==", "bodyText": "I think the change to the exception message is not really a big issue. But with data streams also appearing, it could be nice to stick to the old message since that would give you some information on whether it is a datastream or concrete index. I think we could easily generate such a message by adding a display name (\"concrete index\") to the IndexAbstract.Type enum?\nAlso, this does make me wonder if Type.INDEX should be Type.CONCRETE_INDEX for consistency with that display name? Not truly important to me, feel free to ignore this part.", "url": "https://github.com/elastic/elasticsearch/pull/53982#discussion_r399215040", "createdAt": "2020-03-27T12:00:41Z", "author": {"login": "henningandersen"}, "path": "server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetaDataRolloverServiceTests.java", "diffHunk": "@@ -212,7 +212,7 @@ public void testValidation() {\n         assertThat(exception.getMessage(), equalTo(\"source alias [\" + aliasWithNoWriteIndex + \"] does not point to a write index\"));\n         exception = expectThrows(IllegalArgumentException.class, () ->\n             MetaDataRolloverService.validate(metaData, randomFrom(index1, index2)));\n-        assertThat(exception.getMessage(), equalTo(\"source alias is a concrete index\"));\n+        assertThat(exception.getMessage(), equalTo(\"source alias is not an alias\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c47b68fe8a9ee666db7a6d0408667712fb831d7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxNzE4Nw==", "bodyText": "Same comment on retaining the original message here.", "url": "https://github.com/elastic/elasticsearch/pull/53982#discussion_r399217187", "createdAt": "2020-03-27T12:05:03Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/identity-provider/src/main/java/org/elasticsearch/xpack/idp/saml/sp/SamlServiceProviderIndex.java", "diffHunk": "@@ -187,11 +187,11 @@ public void close() {\n         clusterService.removeListener(clusterStateListener);\n     }\n \n-    private void logChangedAliasState(AliasOrIndex aliasInfo) {\n+    private void logChangedAliasState(IndexAbstraction aliasInfo) {\n         if (aliasInfo == null) {\n             logger.warn(\"service provider index/alias [{}] no longer exists\", ALIAS_NAME);\n-        } else if (aliasInfo.isAlias() == false) {\n-            logger.warn(\"service provider index [{}] exists as a concrete index, but it should be an alias\", ALIAS_NAME);\n+        } else if (aliasInfo.getType() != IndexAbstraction.Type.ALIAS) {\n+            logger.warn(\"service provider index [{}] does not exist as an alias, but it should be\", ALIAS_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c47b68fe8a9ee666db7a6d0408667712fb831d7"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxNzcxOQ==", "bodyText": "Remove \"Space\" from variable name?", "url": "https://github.com/elastic/elasticsearch/pull/53982#discussion_r399217719", "createdAt": "2020-03-27T12:06:13Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/MlConfigMigratorIT.java", "diffHunk": "@@ -83,8 +83,8 @@ public void setUpTests() {\n         ClusterSettings clusterSettings = new ClusterSettings(nodeSettings(), new HashSet<>(Collections.singletonList(\n                 MlConfigMigrationEligibilityCheck.ENABLE_CONFIG_MIGRATION)));\n         MetaData metaData = mock(MetaData.class);\n-        SortedMap<String, AliasOrIndex> aliasOrIndexSortedMap = new TreeMap<>();\n-        when(metaData.getAliasAndIndexLookup()).thenReturn(aliasOrIndexSortedMap);\n+        SortedMap<String, IndexAbstraction> indexSpaceSortedMap = new TreeMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c47b68fe8a9ee666db7a6d0408667712fb831d7"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxODI4NQ==", "bodyText": "I think we should also include the display name of the actual type here.", "url": "https://github.com/elastic/elasticsearch/pull/53982#discussion_r399218285", "createdAt": "2020-03-27T12:07:21Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/IndicesAndAliasesResolver.java", "diffHunk": "@@ -228,12 +228,12 @@ static String getPutMappingIndexOrAlias(PutMappingRequest request, List<String>\n         final String concreteIndexName = request.getConcreteIndex().getName();\n \n         // validate that the concrete index exists, otherwise there is no remapping that we could do\n-        final AliasOrIndex aliasOrIndex = metaData.getAliasAndIndexLookup().get(concreteIndexName);\n+        final IndexAbstraction indexAbstraction = metaData.getIndicesLookup().get(concreteIndexName);\n         final String resolvedAliasOrIndex;\n-        if (aliasOrIndex == null) {\n+        if (indexAbstraction == null) {\n             resolvedAliasOrIndex = concreteIndexName;\n-        } else if (aliasOrIndex.isAlias()) {\n-            throw new IllegalStateException(\"concrete index [\" + concreteIndexName + \"] is an alias but should not be\");\n+        } else if (indexAbstraction.getType() != IndexAbstraction.Type.INDEX) {\n+            throw new IllegalStateException(\"concrete index [\" + concreteIndexName + \"] is not an index but should be\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c47b68fe8a9ee666db7a6d0408667712fb831d7"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57ffeafdaf631901ae7d6f0e029d32836ec1d05a", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/57ffeafdaf631901ae7d6f0e029d32836ec1d05a", "committedDate": "2020-03-27T13:04:44Z", "message": "Merge remote-tracking branch 'es/master' into improve_alias_or_index_abstraction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6c9e97fddf81ac291926988a1f0b6c354064823", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/f6c9e97fddf81ac291926988a1f0b6c354064823", "committedDate": "2020-03-27T13:19:52Z", "message": "iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2252334d55a17a7fe66d317cfc6953776cdaf795", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/2252334d55a17a7fe66d317cfc6953776cdaf795", "committedDate": "2020-03-27T15:09:36Z", "message": "fixed checkstyle violation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90f6a2dada8fa2eee1ab96e31e9c0fe92d58c78b", "author": {"user": {"login": "martijnvg", "name": "Martijn van Groningen"}}, "url": "https://github.com/elastic/elasticsearch/commit/90f6a2dada8fa2eee1ab96e31e9c0fe92d58c78b", "committedDate": "2020-03-27T15:23:28Z", "message": "fixed checkstyle violation (2)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1795, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}