{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNjg1ODcz", "number": 56989, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoyODowMFrOD-MRFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoyODowMFrOD-MRFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTM5Mjg2OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/transport/TransportServiceHandshakeTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoyODowMFrOGYJIOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjo0NTo1NlrOGYJyAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2ODU3MQ==", "bodyText": "I think we can do this way shorter as:\n            @Override\n            public StreamInput openOrGetStreamInput() {\n                final StreamInput streamInput = new InputStreamStreamInput(new InputStream() {\n                    @Override\n                    public int read() {\n                        throw new ElasticsearchException(\"unreadable handshake\");\n                    }\n                });\n                streamInput.setVersion(message.getHeader().getVersion());\n                return streamInput;\n            }", "url": "https://github.com/elastic/elasticsearch/pull/56989#discussion_r427968571", "createdAt": "2020-05-20T12:28:00Z", "author": {"login": "original-brownbear"}, "path": "server/src/test/java/org/elasticsearch/transport/TransportServiceHandshakeTests.java", "diffHunk": "@@ -190,4 +307,59 @@ public void testNodeConnectWithDifferentNodeId() {\n         }\n     }\n \n+    private static Version randomCompatibleVersion() {\n+        return VersionUtils.randomVersionBetween(random(), Version.CURRENT.minimumCompatibilityVersion(), Version.CURRENT);\n+    }\n+\n+    private static InboundMessage unreadableHandshake(InboundMessage message) {\n+        return new InboundMessage(message.getHeader(), false) {\n+            @Override\n+            public int getContentLength() {\n+                return message.getContentLength();\n+            }\n+\n+            @Override\n+            public StreamInput openOrGetStreamInput() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ce006b88d3c9265b713f40c1dada6c18577f98"}, "originalPosition": 240}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk3OTI2Nw==", "bodyText": "Thanks, I was pretty sure there was a way to do this by overriding a single method somewhere.", "url": "https://github.com/elastic/elasticsearch/pull/56989#discussion_r427979267", "createdAt": "2020-05-20T12:45:56Z", "author": {"login": "DaveCTurner"}, "path": "server/src/test/java/org/elasticsearch/transport/TransportServiceHandshakeTests.java", "diffHunk": "@@ -190,4 +307,59 @@ public void testNodeConnectWithDifferentNodeId() {\n         }\n     }\n \n+    private static Version randomCompatibleVersion() {\n+        return VersionUtils.randomVersionBetween(random(), Version.CURRENT.minimumCompatibilityVersion(), Version.CURRENT);\n+    }\n+\n+    private static InboundMessage unreadableHandshake(InboundMessage message) {\n+        return new InboundMessage(message.getHeader(), false) {\n+            @Override\n+            public int getContentLength() {\n+                return message.getContentLength();\n+            }\n+\n+            @Override\n+            public StreamInput openOrGetStreamInput() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2ODU3MQ=="}, "originalCommit": {"oid": "08ce006b88d3c9265b713f40c1dada6c18577f98"}, "originalPosition": 240}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 245, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}