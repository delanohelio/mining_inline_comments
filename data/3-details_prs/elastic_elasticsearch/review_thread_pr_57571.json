{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODg2NDg4", "number": 57571, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzo1Mzo0M1rOEB9N_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjozNTo1NVrOECO_6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDg3MDM2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzo1Mzo0M1rOGeHqxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzo1Mzo0M1rOGeHqxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzNjEwMg==", "bodyText": "Unfortunately this refactor didn't actually cut down on the number of instanceof checks. But I feel better about this one, because it's very common for us to check instanceof against FieldMapper or ObjectMapper -- it's just part of how mappings + document parsing currently work.", "url": "https://github.com/elastic/elasticsearch/pull/57571#discussion_r434236102", "createdAt": "2020-06-02T23:53:43Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java", "diffHunk": "@@ -562,6 +562,10 @@ private static void parseArray(ParseContext context, ObjectMapper parentMapper,\n         }\n     }\n \n+    private static boolean parsesArrayValue(Mapper mapper) {\n+        return mapper instanceof FieldMapper && ((FieldMapper) mapper).parsesArrayValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2932918c3acb347bd5c68e442310fc2d11ee1e88"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzc4MzQ1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/mapper/DenseVectorFieldMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjozNTo1NVrOGekOxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzozNToyOVrOGemahw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwNDA2OA==", "bodyText": "Should this be final, like AbstractGeometryFieldMapper does?", "url": "https://github.com/elastic/elasticsearch/pull/57571#discussion_r434704068", "createdAt": "2020-06-03T16:35:55Z", "author": {"login": "markharwood"}, "path": "x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/mapper/DenseVectorFieldMapper.java", "diffHunk": "@@ -173,6 +172,11 @@ public DenseVectorFieldType fieldType() {\n         return (DenseVectorFieldType) super.fieldType();\n     }\n \n+    @Override\n+    public boolean parsesArrayValue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2932918c3acb347bd5c68e442310fc2d11ee1e88"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDczOTg0Nw==", "bodyText": "To me this could be a bit confusing, because no other methods on DenseVectorFieldType are final and it wasn't designed for extension.", "url": "https://github.com/elastic/elasticsearch/pull/57571#discussion_r434739847", "createdAt": "2020-06-03T17:35:29Z", "author": {"login": "jtibshirani"}, "path": "x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/mapper/DenseVectorFieldMapper.java", "diffHunk": "@@ -173,6 +172,11 @@ public DenseVectorFieldType fieldType() {\n         return (DenseVectorFieldType) super.fieldType();\n     }\n \n+    @Override\n+    public boolean parsesArrayValue() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwNDA2OA=="}, "originalCommit": {"oid": "2932918c3acb347bd5c68e442310fc2d11ee1e88"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3742, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}