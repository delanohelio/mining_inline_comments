{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NTIyNDM3", "number": 64757, "title": "[Test] Add resilience in TokenAuthIntegTests", "bodyText": "The testExpiredTokensDeletedAfterExpiration method assumed that\ninvalidating a refresh token immediately after the delete task was run\nwould behave as if the token did not exist.\nHowever, the Elasticsearch concurrency controls do not guarantee that\nbehaviour. It is possible for the request that searches for the token\ndocument the corresponds to the refresh token to find an invalidated\nbut not yet deleted document which is reflected in the API response.\nThis change makes the test resilient to this behaviour by wrapping the\nassertion in an assertBusy\nResolves: #56903", "createdAt": "2020-11-09T06:48:14Z", "url": "https://github.com/elastic/elasticsearch/pull/64757", "merged": true, "mergeCommit": {"oid": "a24bc6e1a7ebd0b0ee5c50e33f3bb0c3417be0b2"}, "closed": true, "closedAt": "2020-11-25T04:12:22Z", "author": {"login": "tvernum"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdaucrAgH2gAyNTE3NTIyNDM3OjFhMGM2N2Q2NjE4YzYzY2FkMWI5MTcxZWI4MTAwMWZlNzE0OTlkODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdf1oy-gH2gAyNTE3NTIyNDM3OjZkOTk3YjFmMmI3ODBiMDhiODA0MGQ2ZDQ5NmQyNjMyZDY3Njg1ZWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1a0c67d6618c63cad1b9171eb81001fe71499d81", "author": {"user": {"login": "tvernum", "name": "Tim Vernum"}}, "url": "https://github.com/elastic/elasticsearch/commit/1a0c67d6618c63cad1b9171eb81001fe71499d81", "committedDate": "2020-11-09T06:06:13Z", "message": "Add resilience in TokenAuthIntegTests\n\nThe testExpiredTokensDeletedAfterExpiration method assumed that\ninvalidating a refresh token immediately after the delete task was run\nwould behave as if the token did not exist.\n\nHowever, the Elasticsearch concurrency controls do not guarantee that\nbehaviour. It is possible for the request that searches for the token\ndocument the corresponds to the refresh token to find an invalidated\nbut not yet deleted document which is reflected in the API response.\n\nThis change makes the test resilient to this behaviour by wrapping the\nassertion in an assertBusy\n\nResolves: #56903"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDYwNTM1", "url": "https://github.com/elastic/elasticsearch/pull/64757#pullrequestreview-526060535", "createdAt": "2020-11-09T09:22:38Z", "commit": {"oid": "1a0c67d6618c63cad1b9171eb81001fe71499d81"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToyMjozOFrOHvli6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToyMjozOFrOHvli6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY2MDI2NQ==", "bodyText": "It is worthwhile to link #64259 here because that is what actually fixed this assertion (original error of #56903).", "url": "https://github.com/elastic/elasticsearch/pull/64757#discussion_r519660265", "createdAt": "2020-11-09T09:22:38Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/TokenAuthIntegTests.java", "diffHunk": "@@ -194,11 +194,26 @@ public void testExpiredTokensDeletedAfterExpiration() throws Exception {\n         assertThat(invalidateAccessTokenResponse.getPreviouslyInvalidatedTokens(), equalTo(0));\n         assertThat(invalidateAccessTokenResponse.getErrors(), empty());\n \n+        // Weird testing behaviour ahead...\n+        // invalidating by access token (above) is a Get, but invalidating by refresh token (below) is a Search\n+        // In a multi node cluster, in a small % of cases, the search might find a document that has been invalidated but not yet deleted\n+        // from that node's shard.\n+        // Our assertion, therefore, is that an attempt to invalidate the (already invalidated) refresh token must not actually invalidate\n+        // anything (concurrency controls must prevent that), nor may return any errors,\n+        // but it might _temporarily_ find an \"already invalidated\" token.\n+        final InvalidateTokenRequest invalidateRefreshTokenRequest = InvalidateTokenRequest.refreshToken(refreshToken);\n         InvalidateTokenResponse invalidateRefreshTokenResponse = restClient.security().invalidateToken(\n-            InvalidateTokenRequest.refreshToken(refreshToken), SECURITY_REQUEST_OPTIONS);\n+            invalidateRefreshTokenRequest, SECURITY_REQUEST_OPTIONS);\n         assertThat(invalidateRefreshTokenResponse.getInvalidatedTokens(), equalTo(0));\n-        assertThat(invalidateRefreshTokenResponse.getPreviouslyInvalidatedTokens(), equalTo(0));\n         assertThat(invalidateRefreshTokenResponse.getErrors(), empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a0c67d6618c63cad1b9171eb81001fe71499d81"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d997b1f2b780b08b8040d6d496d2632d67685ea", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/6d997b1f2b780b08b8040d6d496d2632d67685ea", "committedDate": "2020-11-25T03:18:25Z", "message": "Merge branch 'master' into fix/56903-test-resilience"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1263, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}