{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1ODI3Njcz", "number": 51304, "title": "Log when probe succeeds but full connection fails", "bodyText": "It is permitted for nodes to accept transport connections at addresses other\nthan their publish address, which allows a good deal of flexibility when\nconfiguring discovery. However, it is not unusual for users to misconfigure\nnodes to pick a publish address which is inaccessible to other nodes. We see\nthis happen a lot if the nodes are on different networks separated by a proxy,\nor if the nodes are running in Docker with the wrong kind of network config.\nIn this case we offer no useful feedback to the user unless they enable\nTRACE-level logs. It's particularly tricky to diagnose because if we test\nconnectivity between the nodes (using their discovery addresses) then all will\nappear well.\nThis commit adds a WARN-level log if this kind of misconfiguration is detected:\nthe probe connection has succeeded (to indicate that we are really talking to a\nhealthy Elasticsearch node) but the followup connection attempt fails.\nIt also tidies up some loose ends in HandshakingTransportAddressConnector,\nremoving some TODOs that need not be completed, and registering its\naccidentally-unregistered timeout settings.", "createdAt": "2020-01-22T12:27:37Z", "url": "https://github.com/elastic/elasticsearch/pull/51304", "merged": true, "mergeCommit": {"oid": "ff6f509c63d9aac3efe959b7f4cf5b7a3e700e60"}, "closed": true, "closedAt": "2020-01-23T14:49:53Z", "author": {"login": "DaveCTurner"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb800N4gH2gAyMzY1ODI3NjczOjYxNjcxMDEwODE4NDUyODY1MDJlYzY0MjQ5ODI1ZDdjZThlYmNlMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb84LVdgFqTM0NjcxNjcwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6167101081845286502ec64249825d7ce8ebce05", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/6167101081845286502ec64249825d7ce8ebce05", "committedDate": "2020-01-22T12:22:29Z", "message": "Log when probe succeeds but full connection fails\n\nIt is permitted for nodes to accept transport connections at addresses other\nthan their publish address, which allows a good deal of flexibility when\nconfiguring discovery. However, it is not unusual for users to misconfigure\nnodes to pick a publish address which is inaccessible to other nodes. We see\nthis happen a lot if the nodes are on different networks separated by a proxy,\nor if the nodes are running in Docker with the wrong kind of network config.\n\nIn this case we offer no useful feedback to the user unless they enable\nTRACE-level logs. It's particularly tricky to diagnose because if we test\nconnectivity between the nodes (using their discovery addresses) then all will\nappear well.\n\nThis commit adds a WARN-level log if this kind of misconfiguration is detected:\nthe probe connection has succeeded (to indicate that we are really talking to a\nhealthy Elasticsearch node) but the followup connection attempt fails.\n\nIt also tidies up some loose ends in `HandshakingTransportAddressConnector`,\nremoving some TODOs that need not be completed, and registering its\naccidentally-unregistered timeout settings."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b10b474fced35881d31057204aa062aeb22a3acb", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/b10b474fced35881d31057204aa062aeb22a3acb", "committedDate": "2020-01-22T13:15:32Z", "message": "Meh let's always log the stack trace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bd1c8ede0a6cc1936c4613fca968b88b728982e", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/1bd1c8ede0a6cc1936c4613fca968b88b728982e", "committedDate": "2020-01-22T13:16:13Z", "message": "Fix level and message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e787138641585b3e090d89ef49de78cd7e0d0165", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/e787138641585b3e090d89ef49de78cd7e0d0165", "committedDate": "2020-01-22T13:33:58Z", "message": "\ud83d\ude16"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2Njg3NDYz", "url": "https://github.com/elastic/elasticsearch/pull/51304#pullrequestreview-346687463", "createdAt": "2020-01-22T15:42:00Z", "commit": {"oid": "e787138641585b3e090d89ef49de78cd7e0d0165"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTo0MjowMFrOFgg0_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTo0MjowMFrOFgg0_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYzNjYwNA==", "bodyText": "Why move to wrap here? We (mostly Henning :)) are currently trying to remove the number of instances of passing broken listeners to transport APIs that don't handle their own exceptions and this seems like a step in the wrong direction. Can we fix the listener to handle its exception instead?", "url": "https://github.com/elastic/elasticsearch/pull/51304#discussion_r369636604", "createdAt": "2020-01-22T15:42:00Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/discovery/HandshakingTransportAddressConnector.java", "diffHunk": "@@ -99,17 +100,23 @@ protected void innerOnResponse(DiscoveryNode remoteNode) {\n                                     IOUtils.closeWhileHandlingException(connection);\n \n                                     if (remoteNode.equals(transportService.getLocalNode())) {\n-                                        // TODO cache this result for some time? forever?\n                                         listener.onFailure(new ConnectTransportException(remoteNode, \"local node found\"));\n                                     } else if (remoteNode.isMasterNode() == false) {\n-                                        // TODO cache this result for some time?\n                                         listener.onFailure(new ConnectTransportException(remoteNode, \"non-master-eligible node found\"));\n                                     } else {\n-                                        transportService.connectToNode(remoteNode, ActionListener.delegateFailure(listener,\n-                                            (l, ignored) -> {\n-                                                logger.trace(\"[{}] full connection successful: {}\", thisConnectionAttempt, remoteNode);\n-                                                listener.onResponse(remoteNode);\n-                                            }));\n+                                        transportService.connectToNode(remoteNode, ActionListener.wrap(ignored -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787138641585b3e090d89ef49de78cd7e0d0165"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd87bcba8108c9b9041b8cf459b47e9f517a599b", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/bd87bcba8108c9b9041b8cf459b47e9f517a599b", "committedDate": "2020-01-22T16:16:05Z", "message": "Raw ActionListener, no trappy exception handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NzE2NzA3", "url": "https://github.com/elastic/elasticsearch/pull/51304#pullrequestreview-346716707", "createdAt": "2020-01-22T16:17:27Z", "commit": {"oid": "bd87bcba8108c9b9041b8cf459b47e9f517a599b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2846, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}