{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4Nzg5OTQ2", "number": 62567, "title": "EQL: Disallow chained comparisons", "bodyText": "Expressions like 1 = 2 = 3 = 4 or 1 < 2 = 3 >= 4 were treated with\nleftmost priority: ((1 = 2) = 3) = 4 which can lead to confusing\nresults. Since such expressions don't make so much change for EQL\nfilters we disallow them in the parser to prevent unexpected results\nfrom their bad usage.\nMajor DBs like PostgreSQL and Oracle also disallow them in their SQL\nsyntax. (counter example would be MySQL which interprets them as we did\nbefore with leftmost priority).\nFixes: #61654", "createdAt": "2020-09-17T16:26:03Z", "url": "https://github.com/elastic/elasticsearch/pull/62567", "merged": true, "mergeCommit": {"oid": "8f94981bb093f104228d267b532e0a3d5b7f6a38"}, "closed": true, "closedAt": "2020-09-18T08:00:53Z", "author": {"login": "matriv"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJzd-PgH2gAyNDg4Nzg5OTQ2OjQ0YmVjNGFkODM4ODUzOGYxNDkwMDFhYTcxMDZlZTVkZjY0YTU3ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLCOi7AFqTQ5MjUyOTA4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "44bec4ad8388538f149001aa7106ee5df64a5784", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/44bec4ad8388538f149001aa7106ee5df64a5784", "committedDate": "2020-09-17T16:20:27Z", "message": "EQL: Disallow chained comparisons\n\nExpressions like `1 = 2 = 3 = 4` or `1 < 2 = 3 >= 4` were treated with\nleftmost priority: ((1 = 2) = 3) = 4 which can lead to confusing\nresults. Since such expressions don't make so much change for EQL\nfilters we disallow them in the parser to prevent unexpected results\nfrom their bad usage.\n\nMajor DBs like PostgreSQL and Oracle also disallow them in their SQL\nsyntax. (counter example would be MySQL which interprets them as we did\nbefore with leftmost priority).\n\nFixes: #61654"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNzgxNzM3", "url": "https://github.com/elastic/elasticsearch/pull/62567#pullrequestreview-490781737", "createdAt": "2020-09-17T16:27:06Z", "commit": {"oid": "44bec4ad8388538f149001aa7106ee5df64a5784"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjoyNzowNlrOHTrdcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjoyNzowNlrOHTrdcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM5NzA0Mg==", "bodyText": "Please let me know of a better suggestion for this name as I really couldn't come up with one.", "url": "https://github.com/elastic/elasticsearch/pull/62567#discussion_r490397042", "createdAt": "2020-09-17T16:27:06Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -84,11 +84,15 @@ booleanExpression\n \n \n valueExpression\n-    : primaryExpression predicate?                                                      #valueExpressionDefault\n-    | operator=(MINUS | PLUS) valueExpression                                           #arithmeticUnary\n-    | left=valueExpression operator=(ASTERISK | SLASH | PERCENT) right=valueExpression  #arithmeticBinary\n-    | left=valueExpression operator=(PLUS | MINUS) right=valueExpression                #arithmeticBinary\n-    | left=valueExpression comparisonOperator right=valueExpression                     #comparison\n+    : defaultExpression                                                                     #valueExpressionDefault\n+    | left=defaultExpression comparisonOperator right=defaultExpression                     #comparison\n+    ;\n+\n+defaultExpression", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44bec4ad8388538f149001aa7106ee5df64a5784"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNzgyOTM1", "url": "https://github.com/elastic/elasticsearch/pull/62567#pullrequestreview-490782935", "createdAt": "2020-09-17T16:28:37Z", "commit": {"oid": "44bec4ad8388538f149001aa7106ee5df64a5784"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjoyODozN1rOHTrhLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjoyODozN1rOHTrhLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM5Nzk5Nw==", "bodyText": "Can you add a test for something like 1 * 2 <= 3 * 4, just to make sure these operators are still playing nicely with precedence for other operators. Even better would be to verify the AST matches this: (1 * 2) <= (3 * 4)", "url": "https://github.com/elastic/elasticsearch/pull/62567#discussion_r490397997", "createdAt": "2020-09-17T16:28:37Z", "author": {"login": "rw-access"}, "path": "x-pack/plugin/eql/src/test/java/org/elasticsearch/xpack/eql/parser/ExpressionTests.java", "diffHunk": "@@ -221,4 +221,25 @@ public void testInEmptySet() {\n         expectThrows(ParsingException.class, \"Expected syntax error\",\n             () -> expr(\"name in ()\"));\n     }\n+\n+    public void testChainedComparisons() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44bec4ad8388538f149001aa7106ee5df64a5784"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2480ff92dc449d0b127c65eb956c7f5a8cc04eea", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/2480ff92dc449d0b127c65eb956c7f5a8cc04eea", "committedDate": "2020-09-17T16:50:27Z", "message": "add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba8db83085c72175faf0a3eba7ca9f238e66a67f", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/ba8db83085c72175faf0a3eba7ca9f238e66a67f", "committedDate": "2020-09-17T16:55:24Z", "message": "revert parser prediction mode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODA0ODY4", "url": "https://github.com/elastic/elasticsearch/pull/62567#pullrequestreview-490804868", "createdAt": "2020-09-17T16:56:02Z", "commit": {"oid": "2480ff92dc449d0b127c65eb956c7f5a8cc04eea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjo1NjowMlrOHTslpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjo1NjowMlrOHTslpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxNTUyNA==", "bodyText": "could also do this, although it doesn't make assertions on what the underlying trees are, just that they are equivalent\nassertEquals(expr(\"1 * -2 <= -3 * 4\"), expr(\"(1 * -2) <= (-3 * 4)\"))", "url": "https://github.com/elastic/elasticsearch/pull/62567#discussion_r490415524", "createdAt": "2020-09-17T16:56:02Z", "author": {"login": "rw-access"}, "path": "x-pack/plugin/eql/src/test/java/org/elasticsearch/xpack/eql/parser/ExpressionTests.java", "diffHunk": "@@ -221,4 +222,43 @@ public void testInEmptySet() {\n         expectThrows(ParsingException.class, \"Expected syntax error\",\n             () -> expr(\"name in ()\"));\n     }\n+\n+    public void testComplexComparison() {\n+        String comparison;\n+        if (randomBoolean()) {\n+            comparison = \"1 * -2 <= -3 * 4\";\n+        } else {\n+            comparison = \"(1 * -2) <= (-3 * 4)\";\n+        }\n+\n+        Mul left = new Mul(null,\n+                new Literal(null, 1, DataTypes.INTEGER),\n+                new Neg(null, new Literal(null, 2, DataTypes.INTEGER)));\n+        Mul right = new Mul(null,\n+                new Neg(null, new Literal(null, 3, DataTypes.INTEGER)),\n+                new Literal(null, 4, DataTypes.INTEGER));\n+\n+        assertEquals(new LessThanOrEqual(null, left, right, UTC), expr(comparison));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2480ff92dc449d0b127c65eb956c7f5a8cc04eea"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c38e5e7340087cfa28c7393d15f00c9351dbad63", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/c38e5e7340087cfa28c7393d15f00c9351dbad63", "committedDate": "2020-09-17T16:56:05Z", "message": "Merge remote-tracking branch 'upstream/master' into fix-61654"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODA1NjI3", "url": "https://github.com/elastic/elasticsearch/pull/62567#pullrequestreview-490805627", "createdAt": "2020-09-17T16:56:56Z", "commit": {"oid": "c38e5e7340087cfa28c7393d15f00c9351dbad63"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODc0MTYy", "url": "https://github.com/elastic/elasticsearch/pull/62567#pullrequestreview-490874162", "createdAt": "2020-09-17T18:26:43Z", "commit": {"oid": "c38e5e7340087cfa28c7393d15f00c9351dbad63"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoyNjo0M1rOHTv0Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoyNzozNFrOHTv2Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2ODQxOA==", "bodyText": "I opt for operators (operatorExpression) since the block contains arithmetic and comparison operators, the latter being logical not arithmetic.", "url": "https://github.com/elastic/elasticsearch/pull/62567#discussion_r490468418", "createdAt": "2020-09-17T18:26:43Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -84,11 +84,15 @@ booleanExpression\n \n \n valueExpression\n-    : primaryExpression predicate?                                                      #valueExpressionDefault\n-    | operator=(MINUS | PLUS) valueExpression                                           #arithmeticUnary\n-    | left=valueExpression operator=(ASTERISK | SLASH | PERCENT) right=valueExpression  #arithmeticBinary\n-    | left=valueExpression operator=(PLUS | MINUS) right=valueExpression                #arithmeticBinary\n-    | left=valueExpression comparisonOperator right=valueExpression                     #comparison\n+    : defaultExpression                                                                     #valueExpressionDefault\n+    | left=defaultExpression comparisonOperator right=defaultExpression                     #comparison\n+    ;\n+\n+defaultExpression", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM5NzA0Mg=="}, "originalCommit": {"oid": "44bec4ad8388538f149001aa7106ee5df64a5784"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2ODkyMg==", "bodyText": "defaultExpressionDefault -> operatorExpressionDefault", "url": "https://github.com/elastic/elasticsearch/pull/62567#discussion_r490468922", "createdAt": "2020-09-17T18:27:34Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -84,11 +84,15 @@ booleanExpression\n \n \n valueExpression\n-    : primaryExpression predicate?                                                      #valueExpressionDefault\n-    | operator=(MINUS | PLUS) valueExpression                                           #arithmeticUnary\n-    | left=valueExpression operator=(ASTERISK | SLASH | PERCENT) right=valueExpression  #arithmeticBinary\n-    | left=valueExpression operator=(PLUS | MINUS) right=valueExpression                #arithmeticBinary\n-    | left=valueExpression comparisonOperator right=valueExpression                     #comparison\n+    : defaultExpression                                                                     #valueExpressionDefault\n+    | left=defaultExpression comparisonOperator right=defaultExpression                     #comparison\n+    ;\n+\n+defaultExpression\n+    : primaryExpression predicate?                                                          #defaultExpressionDefault", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c38e5e7340087cfa28c7393d15f00c9351dbad63"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a437240db976af8b4c4f0febd13c14c90ce152ef", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/a437240db976af8b4c4f0febd13c14c90ce152ef", "committedDate": "2020-09-17T19:52:36Z", "message": "rename new intermediate expression in grammar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc7f1e32614b8a9c8bb328a88001cb8329b487bb", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/bc7f1e32614b8a9c8bb328a88001cb8329b487bb", "committedDate": "2020-09-17T20:14:27Z", "message": "remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9909a2300ebfb5503cee3f8aa18cfa237eb84626", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/9909a2300ebfb5503cee3f8aa18cfa237eb84626", "committedDate": "2020-09-18T07:13:55Z", "message": "Merge remote-tracking branch 'upstream/master' into fix-61654"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNTI5MDgz", "url": "https://github.com/elastic/elasticsearch/pull/62567#pullrequestreview-492529083", "createdAt": "2020-09-21T12:06:06Z", "commit": {"oid": "9909a2300ebfb5503cee3f8aa18cfa237eb84626"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3659, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}