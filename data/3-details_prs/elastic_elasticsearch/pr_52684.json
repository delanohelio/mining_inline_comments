{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NzY3Mzcy", "number": 52684, "title": "Simplify ml license checking with XpackLicenseState internals", "bodyText": "This change reduces TrainedModelConfig#isAvailableWithLicense method to a single call to XPackLicenseState#isAllowedByLicense. It is made possible by the recent enhancements to license checking logic.\nPlease note there are subtle change to the code logic. But they seem to be the right changes:\n\nTrial license is always allowed.\nPlatinum license no longer guarantees availability since there is now a dedicated Enterprise license.\nNo explicit check when the license requirement is basic. Since basic license is always available, this check is unnecessary.", "createdAt": "2020-02-23T23:56:03Z", "url": "https://github.com/elastic/elasticsearch/pull/52684", "merged": true, "mergeCommit": {"oid": "a629efebc503b8db34ae3c38007fed7a7f3a4498"}, "closed": true, "closedAt": "2020-02-26T04:24:56Z", "author": {"login": "ywangd"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHRoQ3gH2gAyMzc4NzY3MzcyOjVjYzk0ZTY2ZWRlNjQzN2YwNDUxOGQxZjZkYjhhMmM2NzQyNzJkOTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHcsn1AFqTM2MzM1NDIzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5cc94e66ede6437f04518d1f6db8a2c674272d98", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/5cc94e66ede6437f04518d1f6db8a2c674272d98", "committedDate": "2020-02-23T23:35:55Z", "message": "Simplify license checking with XpackLicenseState internals"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMjQ5MDk2", "url": "https://github.com/elastic/elasticsearch/pull/52684#pullrequestreview-363249096", "createdAt": "2020-02-24T09:23:40Z", "commit": {"oid": "5cc94e66ede6437f04518d1f6db8a2c674272d98"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOToyMzo0MFrOFtZs5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOToyNTo0N1rOFtZwpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MTMzMg==", "bodyText": "isAllowedByLicense(OperationMode) calls isAllowedByLicense(minimumMode, true, true) which is different to the previous code.", "url": "https://github.com/elastic/elasticsearch/pull/52684#discussion_r383151332", "createdAt": "2020-02-24T09:23:40Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/TrainedModelConfig.java", "diffHunk": "@@ -237,18 +237,7 @@ public long getEstimatedOperations() {\n     }\n \n     public boolean isAvailableWithLicense(XPackLicenseState licenseState) {\n-        // Basic is always true\n-        if (licenseLevel.equals(License.OperationMode.BASIC)) {\n-            return true;\n-        }\n-\n-        // The model license does not matter, Platinum license gets the same functions as the highest license\n-        if (licenseState.isAllowedByLicense(License.OperationMode.PLATINUM)) {\n-            return true;\n-        }\n-\n-        // catch the rest, if the license is active and is at least the required model license\n-        return licenseState.isAllowedByLicense(licenseLevel, true, false);\n+        return licenseState.isAllowedByLicense(licenseLevel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cc94e66ede6437f04518d1f6db8a2c674272d98"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MjI5Mw==", "bodyText": "The licensing for inference models is not straightforward as different models can be licensed at different levels can we keep these assertions please so we know exactly what the behaviour is. The test that this code calls another piece of code is not sufficient. And for the gold tests below please", "url": "https://github.com/elastic/elasticsearch/pull/52684#discussion_r383152293", "createdAt": "2020-02-24T09:25:47Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/inference/TrainedModelConfigTests.java", "diffHunk": "@@ -307,65 +306,12 @@ public void testSerializationWithCompressedLazyDefinition() throws IOException {\n             .test();\n     }\n \n-    public void testIsAvailableWithLicense() {\n+    public void testIsAvailableWithLicenseWillDelegate() {\n         TrainedModelConfig.Builder builder = createTestInstance(randomAlphaOfLength(10));\n         XPackLicenseState licenseState = mock(XPackLicenseState.class);\n-\n-        // Reject everything\n-        when(licenseState.isAllowedByLicense(any(License.OperationMode.class), anyBoolean(), anyBoolean())).thenAnswer(\n-            invocationOnMock -> {\n-                final Object[] arguments = invocationOnMock.getArguments();\n-                assertTrue((boolean) arguments[1]); // ensure the call is made to require active license\n-                return false;\n-            }\n-        );\n-        assertFalse(builder.setLicenseLevel(License.OperationMode.ENTERPRISE.description()).build().isAvailableWithLicense(licenseState));\n-        assertFalse(builder.setLicenseLevel(License.OperationMode.PLATINUM.description()).build().isAvailableWithLicense(licenseState));\n-        assertFalse(builder.setLicenseLevel(License.OperationMode.GOLD.description()).build().isAvailableWithLicense(licenseState));\n-        // Basic license always works not matter what\n-        assertTrue(builder.setLicenseLevel(License.OperationMode.BASIC.description()).build().isAvailableWithLicense(licenseState));\n-    }\n-\n-    public void testActivePlatinumLicenseAlwaysWorks() {\n-        TrainedModelConfig.Builder builder = createTestInstance(randomAlphaOfLength(10));\n-        XPackLicenseState licenseState = mock(XPackLicenseState.class);\n-\n-        when(licenseState.isAllowedByLicense(License.OperationMode.PLATINUM)).thenReturn(true);\n-\n-        // Active Platinum license functions the same as Enterprise license (highest) and should always work\n-        when(licenseState.isAllowedByLicense(any(License.OperationMode.class), anyBoolean(), anyBoolean())).thenAnswer(\n-            invocationOnMock -> {\n-                final Object[] arguments = invocationOnMock.getArguments();\n-                assertEquals(License.OperationMode.PLATINUM, arguments[0]);\n-                assertTrue((boolean) arguments[1]); // ensure the call is made to require active license\n-                assertTrue((boolean) arguments[2]);\n-                return true;\n-            }\n-        );\n-        assertTrue(builder.setLicenseLevel(License.OperationMode.ENTERPRISE.description()).build().isAvailableWithLicense(licenseState));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cc94e66ede6437f04518d1f6db8a2c674272d98"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "169c50ca0ea5badd9c6770e1b6a81a4050de283e", "author": {"user": {"login": "ywangd", "name": "Yang Wang"}}, "url": "https://github.com/elastic/elasticsearch/commit/169c50ca0ea5badd9c6770e1b6a81a4050de283e", "committedDate": "2020-02-24T11:46:34Z", "message": "Address feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMzM0NTk0", "url": "https://github.com/elastic/elasticsearch/pull/52684#pullrequestreview-363334594", "createdAt": "2020-02-24T11:50:57Z", "commit": {"oid": "169c50ca0ea5badd9c6770e1b6a81a4050de283e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMzU0MjM3", "url": "https://github.com/elastic/elasticsearch/pull/52684#pullrequestreview-363354237", "createdAt": "2020-02-24T12:29:38Z", "commit": {"oid": "169c50ca0ea5badd9c6770e1b6a81a4050de283e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2101, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}