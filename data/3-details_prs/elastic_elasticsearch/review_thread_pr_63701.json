{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTc2NjYy", "number": 63701, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMToxMjoxNFrOEtqeqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMToxNDo0NFrOEtqhdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzE3MzUzOnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/LicenseHeadersTask.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMToxMjoxNFrOHhlOVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODoyNDoxMVrOHh68Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3NDkzMg==", "bodyText": "Should we be using these \"managed\" properties more often?", "url": "https://github.com/elastic/elasticsearch/pull/63701#discussion_r504974932", "createdAt": "2020-10-14T21:12:14Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/LicenseHeadersTask.groovy", "diffHunk": "@@ -178,4 +180,7 @@ class LicenseHeadersTask extends AntTask {\n             throw new IllegalStateException(\"License header problems were found! Full details: \" + reportFile.absolutePath)\n         }\n     }\n+\n+    @Internal\n+    abstract ListProperty<FileCollection> getSourceFolders();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192509209029c8d70513ec03968248f2e3f68b92"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMzMDczMA==", "bodyText": "I think it makes sense to move our build towards using these", "url": "https://github.com/elastic/elasticsearch/pull/63701#discussion_r505330730", "createdAt": "2020-10-15T08:24:11Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/LicenseHeadersTask.groovy", "diffHunk": "@@ -178,4 +180,7 @@ class LicenseHeadersTask extends AntTask {\n             throw new IllegalStateException(\"License header problems were found! Full details: \" + reportFile.absolutePath)\n         }\n     }\n+\n+    @Internal\n+    abstract ListProperty<FileCollection> getSourceFolders();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3NDkzMg=="}, "originalCommit": {"oid": "192509209029c8d70513ec03968248f2e3f68b92"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzE3Nzk5OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMToxMzo1NFrOHhlRLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMToxMzo1NFrOHhlRLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3NTY2MQ==", "bodyText": "Why not use a DirectoryProperty here?", "url": "https://github.com/elastic/elasticsearch/pull/63701#discussion_r504975661", "createdAt": "2020-10-14T21:13:54Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.java", "diffHunk": "@@ -164,4 +173,11 @@ public void rule(Map<String, String> props) {\n         // TODO: fail if pattern contains a newline, it won't work (currently)\n         patterns.put(name, pattern);\n     }\n+\n+    @Internal\n+    abstract ListProperty<FileTree> getSourceFolders();\n+\n+    void setRootDir(File rootDir) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192509209029c8d70513ec03968248f2e3f68b92"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzE4MDY5OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMToxNDo0NVrOHhlS2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODoyNjozMFrOHh7GSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3NjA4OQ==", "bodyText": "Where did we land on using method injection vs constructor injection? Should we standardize on one vs the other?", "url": "https://github.com/elastic/elasticsearch/pull/63701#discussion_r504976089", "createdAt": "2020-10-14T21:14:45Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitTask.java", "diffHunk": "@@ -31,12 +33,16 @@\n \n     @OutputFile\n     public File getSuccessMarker() {\n-        return new File(getProject().getBuildDir(), \"markers/\" + this.getName());\n+        return new File(getProjectLayout().getBuildDirectory().getAsFile().get(), \"markers/\" + this.getName());\n     }\n \n     @TaskAction\n     public void writeMarker() throws IOException {\n         Files.write(getSuccessMarker().toPath(), new byte[] {}, StandardOpenOption.CREATE);\n     }\n \n+    @Inject\n+    protected ProjectLayout getProjectLayout() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192509209029c8d70513ec03968248f2e3f68b92"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMzMzMyMQ==", "bodyText": "I think by default we agreed on ctor injection. In this case I went with method injection due to keeping this local as this is an abstract task and all its descends would need to pass the injected service down here", "url": "https://github.com/elastic/elasticsearch/pull/63701#discussion_r505333321", "createdAt": "2020-10-15T08:26:30Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitTask.java", "diffHunk": "@@ -31,12 +33,16 @@\n \n     @OutputFile\n     public File getSuccessMarker() {\n-        return new File(getProject().getBuildDir(), \"markers/\" + this.getName());\n+        return new File(getProjectLayout().getBuildDirectory().getAsFile().get(), \"markers/\" + this.getName());\n     }\n \n     @TaskAction\n     public void writeMarker() throws IOException {\n         Files.write(getSuccessMarker().toPath(), new byte[] {}, StandardOpenOption.CREATE);\n     }\n \n+    @Inject\n+    protected ProjectLayout getProjectLayout() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3NjA4OQ=="}, "originalCommit": {"oid": "192509209029c8d70513ec03968248f2e3f68b92"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2873, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}