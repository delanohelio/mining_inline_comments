{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1Njg2MDEy", "number": 63093, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjowODo0OFrOEpU6zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTozMzo1NFrOEv2CNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNzY5ODA2OnYy", "diffSide": "RIGHT", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/transform/GetTransformRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjowODo0OFrOHa7sBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjowODo0OFrOHa7sBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAwMjk0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String FOR_EXPORT = \"for_export\";\n          \n          \n            \n                public static final String ALLOW_NO_MATCH = \"allow_no_match\";\n          \n          \n            \n                public static final String ALLOW_NO_MATCH = \"allow_no_match\";\n          \n          \n            \n                public static final String FOR_EXPORT = \"for_export\";", "url": "https://github.com/elastic/elasticsearch/pull/63093#discussion_r498002949", "createdAt": "2020-10-01T06:08:48Z", "author": {"login": "przemekwitek"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/transform/GetTransformRequest.java", "diffHunk": "@@ -30,6 +30,7 @@\n \n public class GetTransformRequest implements Validatable {\n \n+    public static final String FOR_EXPORT = \"for_export\";\n     public static final String ALLOW_NO_MATCH = \"allow_no_match\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95d9500f217ecf6d5184e34baa97fd498a87dff8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODY2NzM3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDo0ODo1M1rOHbE1iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDo0ODo1M1rOHbE1iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE1Mjg0Mw==", "bodyText": "for source it would be nice to omit the default match_all query, we added it there for visibility, for export it would be nice to remove it. For that we need to pass the params here.", "url": "https://github.com/elastic/elasticsearch/pull/63093#discussion_r498152843", "createdAt": "2020-10-01T10:48:53Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformConfig.java", "diffHunk": "@@ -343,7 +343,25 @@ public void writeTo(final StreamOutput out) throws IOException {\n     @Override\n     public XContentBuilder toXContent(final XContentBuilder builder, final Params params) throws IOException {\n         builder.startObject();\n-        builder.field(TransformField.ID.getPreferredName(), id);\n+        if (params.paramAsBoolean(TransformField.FOR_EXPORT, false) == false) {\n+            builder.field(TransformField.ID.getPreferredName(), id);\n+            if (headers.isEmpty() == false && params.paramAsBoolean(TransformField.FOR_INTERNAL_STORAGE, false)) {\n+                builder.field(HEADERS.getPreferredName(), headers);\n+            }\n+            if (transformVersion != null) {\n+                builder.field(TransformField.VERSION.getPreferredName(), transformVersion);\n+            }\n+            if (createTime != null) {\n+                builder.timeField(\n+                    TransformField.CREATE_TIME.getPreferredName(),\n+                    TransformField.CREATE_TIME.getPreferredName() + \"_string\",\n+                    createTime.toEpochMilli()\n+                );\n+            }\n+            if (params.paramAsBoolean(TransformField.FOR_INTERNAL_STORAGE, false)) {\n+                builder.field(TransformField.INDEX_DOC_TYPE.getPreferredName(), NAME);\n+            }\n+        }\n         builder.field(TransformField.SOURCE.getPreferredName(), source);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95d9500f217ecf6d5184e34baa97fd498a87dff8"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODY3MTMyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDo0OTo1NFrOHbE35A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDo0OTo1NFrOHbE35A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE1MzQ0NA==", "bodyText": "nit: assert for_internal_storage && for_export == false", "url": "https://github.com/elastic/elasticsearch/pull/63093#discussion_r498153444", "createdAt": "2020-10-01T10:49:54Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformConfig.java", "diffHunk": "@@ -343,7 +343,25 @@ public void writeTo(final StreamOutput out) throws IOException {\n     @Override\n     public XContentBuilder toXContent(final XContentBuilder builder, final Params params) throws IOException {\n         builder.startObject();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95d9500f217ecf6d5184e34baa97fd498a87dff8"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDU3NDUzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoyMDozN1rOHk1P6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoyMDozN1rOHk1P6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4MzIxMQ==", "bodyText": "nit: assert forInternalStorage  && excludeGenerated == false:", "url": "https://github.com/elastic/elasticsearch/pull/63093#discussion_r508383211", "createdAt": "2020-10-20T10:20:37Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/TransformConfig.java", "diffHunk": "@@ -342,9 +342,32 @@ public void writeTo(final StreamOutput out) throws IOException {\n \n     @Override\n     public XContentBuilder toXContent(final XContentBuilder builder, final Params params) throws IOException {\n+        final boolean excludeGenerated = params.paramAsBoolean(TransformField.EXCLUDE_GENERATED, false);\n+        final boolean forInternalStorage = params.paramAsBoolean(TransformField.FOR_INTERNAL_STORAGE, false);\n+        if (forInternalStorage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb75eb4fcb951520f1fe376e382f11b3dca86c5d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDYwODg0OnYy", "diffSide": "RIGHT", "path": "docs/reference/transform/apis/get-transform.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoyOTo1MlrOHk1lvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoyOTo1MlrOHk1lvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4ODc5Ng==", "bodyText": "\"certain fields\" is a bit vague\n\"Exclude fields automatically added to the configuration when the transform is created.\"", "url": "https://github.com/elastic/elasticsearch/pull/63093#discussion_r508388796", "createdAt": "2020-10-20T10:29:52Z", "author": {"login": "davidkyle"}, "path": "docs/reference/transform/apis/get-transform.asciidoc", "diffHunk": "@@ -65,6 +65,12 @@ include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=from-transforms]\n (Optional, integer)\n include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=size-transforms]\n \n+`exclude_generated`::\n+(Optional, boolean)\n+Indicates if certain fields should be removed from the configuration on", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb75eb4fcb951520f1fe376e382f11b3dca86c5d"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjAzODI4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/SourceConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTozMzo1NFrOHlDgng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTozMzo1NFrOHlDgng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYxNjg2Mg==", "bodyText": "nit: this could be done with an or and 1 if", "url": "https://github.com/elastic/elasticsearch/pull/63093#discussion_r508616862", "createdAt": "2020-10-20T15:33:54Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/SourceConfig.java", "diffHunk": "@@ -113,7 +114,11 @@ public void writeTo(StreamOutput out) throws IOException {\n     public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n         builder.startObject();\n         builder.array(INDEX.getPreferredName(), index);\n-        builder.field(QUERY.getPreferredName(), queryConfig);\n+        if (params.paramAsBoolean(TransformField.EXCLUDE_GENERATED, false) == false) {\n+            builder.field(QUERY.getPreferredName(), queryConfig);\n+        } else if(queryConfig.equals(QueryConfig.matchAll()) == false) {\n+            builder.field(QUERY.getPreferredName(), queryConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66c53a176758f5415f9067f770c63efbe500f799"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3333, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}