{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNzE1NzIz", "number": 54043, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDowNDoxNlrODrJCcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDowODo0NlrODrJI0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTYzNDQzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/filter/SecurityActionFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDowNDoxNlrOF7T0hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDowNDoxNlrOF7T0hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzczNTA0Ng==", "bodyText": "This one looks to be backwards.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (licenseState.isSecurityEnabled()) {\n          \n          \n            \n                        if (licenseState.isSecurityEnabled() == false) {", "url": "https://github.com/elastic/elasticsearch/pull/54043#discussion_r397735046", "createdAt": "2020-03-25T10:04:16Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/filter/SecurityActionFilter.java", "diffHunk": "@@ -111,7 +111,7 @@ public SecurityActionFilter(AuthenticationService authcService, AuthorizationSer\n                 listener.onFailure(e);\n             }\n         } else if (SECURITY_ACTION_MATCHER.test(action)) {\n-            if (licenseState.isSecurityDisabledByLicenseDefaults()) {\n+            if (licenseState.isSecurityEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d09ef1f02331a8e1e1b2c534c1afb45634a2d1c2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTY1MDc1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityInfoTransportActionTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDowODo0NlrOF7T-8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo1NDowNlrOF7v0wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzczNzcxMg==", "bodyText": "I don't follow how this works. We don't seem to configure the value security.enabled based on explicitlyDisabled.", "url": "https://github.com/elastic/elasticsearch/pull/54043#discussion_r397737712", "createdAt": "2020-03-25T10:08:46Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityInfoTransportActionTests.java", "diffHunk": "@@ -226,8 +227,13 @@ public void testUsage() throws Exception {\n                 // FIPS 140\n                 assertThat(source.getValue(\"fips_140.enabled\"), is(fips140Enabled));\n             } else {\n+                if (explicitlyDisabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d09ef1f02331a8e1e1b2c534c1afb45634a2d1c2"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5Mzg1OA==", "bodyText": "Oops you're right, I need to explicitly set the settings as well since SecurityUsageTransportAction checks it as well.", "url": "https://github.com/elastic/elasticsearch/pull/54043#discussion_r398193858", "createdAt": "2020-03-25T21:54:06Z", "author": {"login": "rjernst"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityInfoTransportActionTests.java", "diffHunk": "@@ -226,8 +227,13 @@ public void testUsage() throws Exception {\n                 // FIPS 140\n                 assertThat(source.getValue(\"fips_140.enabled\"), is(fips140Enabled));\n             } else {\n+                if (explicitlyDisabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzczNzcxMg=="}, "originalCommit": {"oid": "d09ef1f02331a8e1e1b2c534c1afb45634a2d1c2"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4144, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}