{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyODUxOTY0", "number": 58868, "title": "Make Inference processor field_map and inference_config optional", "bodyText": "Drop the requirement that the inference ingest processor has a field_map and inference_config defined even if they are empty.\nThe model defaults are usually sufficient meaning that often an empty inference_config was added just to satisfy a validation step.\nNow the following is valid configuration despite the fact the field_map and inference_config settings are not present.\n{\n  \"inference\": {\n    \"model_id\": \"flight_delay_regression-1571767128603\",\n    \"target_field\": \"FlightDelayMin_prediction_infer\"\n  }\n}", "createdAt": "2020-07-01T17:54:03Z", "url": "https://github.com/elastic/elasticsearch/pull/58868", "merged": true, "mergeCommit": {"oid": "bf245e4c072309c03d78cb35fede9d27d17517ce"}, "closed": true, "closedAt": "2020-07-03T07:36:58Z", "author": {"login": "davidkyle"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwwFlBgFqTQ0MTE2ODAwNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxEDkCgH2gAyNDQyODUxOTY0OjIxYjZhZTFlOWJjN2ZhMjRmYThmODJlNzJiYTgwMTQyMzNjOTNiYjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTY4MDA2", "url": "https://github.com/elastic/elasticsearch/pull/58868#pullrequestreview-441168006", "createdAt": "2020-07-01T20:15:58Z", "commit": {"oid": "19224ccb5fe30a576bbce043bbe9005814e3a654"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDoxNTo1OVrOGrz-Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDoxNTo1OVrOGrz-Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5MzQzOQ==", "bodyText": "This will blow up if the user is attempting to infer against a classification model and the InternalInferModelAction has to serialize to a node before 7.8.0.", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r448593439", "createdAt": "2020-07-01T20:15:59Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/EmptyConfigUpdate.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n+\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+\n+import java.io.IOException;\n+\n+public class EmptyConfigUpdate implements InferenceConfigUpdate {\n+\n+    public static final ParseField NAME = new ParseField(\"empty\");\n+\n+    private static final ObjectParser<EmptyConfigUpdate, Void> PARSER =\n+        new ObjectParser<>(NAME.getPreferredName(), EmptyConfigUpdate::new);\n+\n+    public static EmptyConfigUpdate fromXContent(XContentParser parser) {\n+        return PARSER.apply(parser, null);\n+    }\n+\n+    public EmptyConfigUpdate() {\n+    }\n+\n+    public EmptyConfigUpdate(StreamInput in) {\n+    }\n+\n+    @Override\n+    public InferenceConfig apply(InferenceConfig originalConfig) {\n+        return originalConfig;\n+    }\n+\n+    @Override\n+    public InferenceConfig toConfig() {\n+        return RegressionConfig.EMPTY_PARAMS;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19224ccb5fe30a576bbce043bbe9005814e3a654"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzE1OTg2", "url": "https://github.com/elastic/elasticsearch/pull/58868#pullrequestreview-441715986", "createdAt": "2020-07-02T14:10:10Z", "commit": {"oid": "2d4b19c53b3c2bf7f7e2036eb3c71dc7d7493804"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxMDoxMFrOGsOnhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxMDoxMFrOGsOnhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzMDAyMw==", "bodyText": "With this change, I am wondering if toConfig() should throw for EmptyConfigUpdate. IIRC, toConfig is only used for BWC serialization.", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r449030023", "createdAt": "2020-07-02T14:10:10Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/ingest/InferenceProcessor.java", "diffHunk": "@@ -302,12 +302,17 @@ public InferenceProcessor create(Map<String, Processor.Factory> processorFactori\n                 fieldMap = Collections.emptyMap();\n             }\n \n-            InferenceConfigUpdate inferenceConfig;\n+            InferenceConfigUpdate inferenceConfigUpdate;\n             Map<String, Object> inferenceConfigMap = ConfigurationUtils.readOptionalMap(TYPE, tag, config, INFERENCE_CONFIG);\n             if (inferenceConfigMap == null) {\n-                inferenceConfig = new EmptyConfigUpdate();\n+                if (minNodeVersion.before(EmptyConfigUpdate.minimumSupportedVersion())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d4b19c53b3c2bf7f7e2036eb3c71dc7d7493804"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9996393f55689a157aa6e59656b5423fa3d48a97", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/9996393f55689a157aa6e59656b5423fa3d48a97", "committedDate": "2020-07-02T14:20:44Z", "message": "Make field_map and inference_config optional"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "619fdb9da272d2401e1860ee978a1266d5ab2b1d", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/619fdb9da272d2401e1860ee978a1266d5ab2b1d", "committedDate": "2020-07-02T14:20:45Z", "message": "doc update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03612fb26286f477b0e9c68d47f57be8bb73e2b5", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/03612fb26286f477b0e9c68d47f57be8bb73e2b5", "committedDate": "2020-07-02T14:20:45Z", "message": "Check nodes support updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f881ecd30dfa400ae6453e98559889ae666094a4", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/f881ecd30dfa400ae6453e98559889ae666094a4", "committedDate": "2020-07-02T15:25:31Z", "message": "Fixing tests after rebase"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d4b19c53b3c2bf7f7e2036eb3c71dc7d7493804", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/2d4b19c53b3c2bf7f7e2036eb3c71dc7d7493804", "committedDate": "2020-07-02T13:02:18Z", "message": "Check nodes support updates"}, "afterCommit": {"oid": "f881ecd30dfa400ae6453e98559889ae666094a4", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/f881ecd30dfa400ae6453e98559889ae666094a4", "committedDate": "2020-07-02T15:25:31Z", "message": "Fixing tests after rebase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODA2Njk1", "url": "https://github.com/elastic/elasticsearch/pull/58868#pullrequestreview-441806695", "createdAt": "2020-07-02T15:34:59Z", "commit": {"oid": "f881ecd30dfa400ae6453e98559889ae666094a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTozNDo1OVrOGsSdfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTozNDo1OVrOGsSdfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA5Mjk5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    XPackLicenseState licenseState = mock(XPackLicenseState.class);\n          \n          \n            \n                    when(licenseState.checkFeature(XPackLicenseState.Feature.MACHINE_LEARNING)).thenReturn(true);\n          \n      \n    \n    \n  \n\nSince they aren't used anywhere", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r449092990", "createdAt": "2020-07-02T15:34:59Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/inference/ingest/InferenceProcessorFactoryTests.java", "diffHunk": "@@ -68,7 +67,7 @@ public void setUpVariables() {\n                 ClusterService.USER_DEFINED_METADATA,\n                 ClusterApplierService.CLUSTER_SERVICE_SLOW_TASK_LOGGING_THRESHOLD_SETTING)));\n         clusterService = new ClusterService(settings, clusterSettings, tp);\n-        licenseState = mock(XPackLicenseState.class);\n+        XPackLicenseState licenseState = mock(XPackLicenseState.class);\n         when(licenseState.checkFeature(XPackLicenseState.Feature.MACHINE_LEARNING)).thenReturn(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f881ecd30dfa400ae6453e98559889ae666094a4"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc9ae05026ec5996478533c6c713b9d1770c318f", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/fc9ae05026ec5996478533c6c713b9d1770c318f", "committedDate": "2020-07-02T18:47:17Z", "message": "Config updates don't implement toxcontent"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTQ1NzE3", "url": "https://github.com/elastic/elasticsearch/pull/58868#pullrequestreview-441945717", "createdAt": "2020-07-02T18:52:44Z", "commit": {"oid": "fc9ae05026ec5996478533c6c713b9d1770c318f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo1Mjo0NVrOGsZjZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo1Mjo0NVrOGsZjZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwOTE4OA==", "bodyText": "Since the 7.9 branch was cut this code won't be hit from the master branch. I will make the adjustments on the backport", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r449209188", "createdAt": "2020-07-02T18:52:45Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/action/InternalInferModelActionRequestTests.java", "diffHunk": "@@ -66,23 +70,4 @@ protected NamedWriteableRegistry getNamedWriteableRegistry() {\n         entries.addAll(new MlInferenceNamedXContentProvider().getNamedWriteables());\n         return new NamedWriteableRegistry(entries);\n     }\n-\n-    @Override\n-    protected Request mutateInstanceForVersion(Request instance, Version version) {\n-        if (version.before(Version.V_7_8_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9ae05026ec5996478533c6c713b9d1770c318f"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60dbb02f539ad0d20d4a009f76b5ce6ce372d382", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/60dbb02f539ad0d20d4a009f76b5ce6ce372d382", "committedDate": "2020-07-02T18:58:40Z", "message": "precommit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTYwODg2", "url": "https://github.com/elastic/elasticsearch/pull/58868#pullrequestreview-441960886", "createdAt": "2020-07-02T19:18:13Z", "commit": {"oid": "60dbb02f539ad0d20d4a009f76b5ce6ce372d382"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOToxODoxM1rOGsaRMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOToxODoxM1rOGsaRMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyMDkxMw==", "bodyText": "I think we should keep this as AbstractBWCWireSerializationTestCase But the mutateInstanceForVersion clauses could be removed.\nThis way we catch if anything funky changes in serialization between 7.x and 8", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r449220913", "createdAt": "2020-07-02T19:18:13Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/action/InternalInferModelActionRequestTests.java", "diffHunk": "@@ -27,7 +24,7 @@\n import java.util.stream.Stream;\n \n \n-public class InternalInferModelActionRequestTests extends AbstractBWCWireSerializationTestCase<Request> {\n+public class InternalInferModelActionRequestTests extends AbstractWireSerializingTestCase<Request> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60dbb02f539ad0d20d4a009f76b5ce6ce372d382"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21b6ae1e9bc7fa24fa8f82e72ba8014233c93bb1", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/21b6ae1e9bc7fa24fa8f82e72ba8014233c93bb1", "committedDate": "2020-07-02T19:31:53Z", "message": "keep it bwc"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2500, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}