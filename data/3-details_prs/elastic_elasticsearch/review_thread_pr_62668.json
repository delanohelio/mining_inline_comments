{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NTQyNzcy", "number": 62668, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDoxMzoxOVrOEmxAHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTowNjozMFrOEm_VTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDg0MTg5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/exporter/Exporters.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDoxMzoxOVrOHW_RGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxOTo1NDozMVrOHXqZxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NzI4OQ==", "bodyText": "should #getSettings() also return this new setting ? (I think it is only really used for testing, but seems more correct to return all the settings up through the plugin).", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r493867289", "createdAt": "2020-09-23T20:13:19Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/exporter/Exporters.java", "diffHunk": "@@ -62,7 +63,9 @@ public Exporters(Settings settings, Map<String, Exporter.Factory> factories,\n \n         final List<Setting.AffixSetting<?>> dynamicSettings =\n             getSettings().stream().filter(Setting::isDynamic).collect(Collectors.toList());\n-        clusterService.getClusterSettings().addSettingsUpdateConsumer(this::setExportersSetting, dynamicSettings);\n+        final List<Setting<?>> updateSettings = new ArrayList<Setting<?>>(dynamicSettings);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3NDAyMg==", "bodyText": "It seems I missed that step, good catch!", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r494574022", "createdAt": "2020-09-24T19:54:31Z", "author": {"login": "jbaiera"}, "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/exporter/Exporters.java", "diffHunk": "@@ -62,7 +63,9 @@ public Exporters(Settings settings, Map<String, Exporter.Factory> factories,\n \n         final List<Setting.AffixSetting<?>> dynamicSettings =\n             getSettings().stream().filter(Setting::isDynamic).collect(Collectors.toList());\n-        clusterService.getClusterSettings().addSettingsUpdateConsumer(this::setExportersSetting, dynamicSettings);\n+        final List<Setting<?>> updateSettings = new ArrayList<Setting<?>>(dynamicSettings);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NzI4OQ=="}, "originalCommit": {"oid": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDg4MzU5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/Monitoring.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDoyNTo1N1rOHW_rAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoxNTo0OFrOHZKNyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3MzkyMw==", "bodyText": "It feels kinda weird to have this AND xpack.monitoring.exporters.*.cluster_alerts.management.enabled setting.\nI wonder if makes sense to\n\nexpose a POST _monitoring/cluster_alert/disable endpoint (or whatever the name is)\nwhen that is called iterate through all of the current exporters and set xpack.monitoring.exporters.<i>.cluster_alerts.management.enabled=false and set some cluster state to no longer try to install cluster alerts (and reach out to delete the cluster alerts for those exporters)\nIf a new exporter is created, set xpack.monitoring.exporters.<new_exporter>.cluster_alerts.management.enabled=false based on the cluster state.\nexpose a POST _monitoring/cluster_alert/enable\n\nthoughts ?", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r493873923", "createdAt": "2020-09-23T20:25:57Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/Monitoring.java", "diffHunk": "@@ -77,6 +77,9 @@\n     public static final Setting<Boolean> CLEAN_WATCHER_HISTORY = boolSetting(\"xpack.watcher.history.cleaner_service.enabled\",\n         true, Setting.Property.Dynamic, Setting.Property.NodeScope, Setting.Property.Deprecated);\n \n+    public static final Setting<Boolean> MIGRATION_DECOMMISSION_ALERTS = boolSetting(\"xpack.monitoring.migration.decommission_alerts\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIzNjAwNA==", "bodyText": "I'd be in favour of less settings but OTOH current flow with this setting seems simpler and less error-prone. And currently you can't enable single exporter back (with xpack.monitoring.exporters.<i>.cluster_alerts.management.enabled=true) which I think is good thing (easier to reason about cluster state).\nWe can still expose _monitoring/cluster_alert/disable endpoint if needed though if we want, it may be easier for the user to just call API than looking up setting to use", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r494236004", "createdAt": "2020-09-24T11:24:31Z", "author": {"login": "probakowski"}, "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/Monitoring.java", "diffHunk": "@@ -77,6 +77,9 @@\n     public static final Setting<Boolean> CLEAN_WATCHER_HISTORY = boolSetting(\"xpack.watcher.history.cleaner_service.enabled\",\n         true, Setting.Property.Dynamic, Setting.Property.NodeScope, Setting.Property.Deprecated);\n \n+    public static final Setting<Boolean> MIGRATION_DECOMMISSION_ALERTS = boolSetting(\"xpack.monitoring.migration.decommission_alerts\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3MzkyMw=="}, "originalCommit": {"oid": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3MzQ2MQ==", "bodyText": "I consider this more of a first step with a new action that performs the migration to follow. If the exporters are disabled, this setting only ensures that the alerts are not created if they are turned back on (since alerts are created lazily much to my chagrin).\nThe main concern that was raised in the migration issue was that if a new exporter is configured, either on purpose or by accident, the cluster alerts for that exporter will not be installed. A global setting to control the existence of the alerts is the easiest way to fix that, even if it overlaps with other settings.", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r494573461", "createdAt": "2020-09-24T19:53:25Z", "author": {"login": "jbaiera"}, "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/Monitoring.java", "diffHunk": "@@ -77,6 +77,9 @@\n     public static final Setting<Boolean> CLEAN_WATCHER_HISTORY = boolSetting(\"xpack.watcher.history.cleaner_service.enabled\",\n         true, Setting.Property.Dynamic, Setting.Property.NodeScope, Setting.Property.Deprecated);\n \n+    public static final Setting<Boolean> MIGRATION_DECOMMISSION_ALERTS = boolSetting(\"xpack.monitoring.migration.decommission_alerts\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3MzkyMw=="}, "originalCommit": {"oid": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0MzgxOA==", "bodyText": "that makes sense, thanks for explaining.", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r496143818", "createdAt": "2020-09-28T18:15:48Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/Monitoring.java", "diffHunk": "@@ -77,6 +77,9 @@\n     public static final Setting<Boolean> CLEAN_WATCHER_HISTORY = boolSetting(\"xpack.watcher.history.cleaner_service.enabled\",\n         true, Setting.Property.Dynamic, Setting.Property.NodeScope, Setting.Property.Deprecated);\n \n+    public static final Setting<Boolean> MIGRATION_DECOMMISSION_ALERTS = boolSetting(\"xpack.monitoring.migration.decommission_alerts\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3MzkyMw=="}, "originalCommit": {"oid": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDkwMzgyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/HttpExporterResourceTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDozMjowMlrOHW_3dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDozMjowMlrOHW_3dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3NzExMQ==", "bodyText": "I think this name is bit misleading ? (maybe testDeployClusterAlerts) ?", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r493877111", "createdAt": "2020-09-23T20:32:02Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/HttpExporterResourceTests.java", "diffHunk": "@@ -484,6 +488,56 @@ public void testWatchPublishBlocksAfterSuccessfulWatcherCheck() {\n         verifyNoMoreInteractions(client);\n     }\n \n+    public void testWatchRemovalOnDecomissionAlerts() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzE4OTg4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/exporter/local/LocalExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTowNjozMFrOHXVMfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTowNjozMFrOHXVMfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyNjU1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean alertsProcessed = !canUseWatcher() || watcherSetup.get();\n          \n          \n            \n                    boolean alertsProcessed = canUseWatcher() == false || watcherSetup.get();", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r494226559", "createdAt": "2020-09-24T11:06:30Z", "author": {"login": "probakowski"}, "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/exporter/local/LocalExporter.java", "diffHunk": "@@ -159,8 +162,10 @@ public void licenseStateChanged() {\n     boolean isExporterReady() {\n         // forces the setup to occur if it hasn't already\n         final boolean running = resolveBulk(clusterService.state(), false) != null;\n+        // Report on watcher readiness\n+        boolean alertsProcessed = !canUseWatcher() || watcherSetup.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3493, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}