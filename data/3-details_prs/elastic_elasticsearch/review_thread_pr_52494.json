{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2ODUyNjEz", "number": 52494, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwOTo1NzowMFrODhAdDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwOTo1NzowMFrODhAdDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTM3MDM4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/ilm/DeleteStepTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwOTo1NzowMFrOFrhySw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwOTo1NzowMFrOFrhySw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE4NjYzNQ==", "bodyText": "as this scenario would be fairly straightforward to create in an integration test I propose we convert this to one. What do you think?", "url": "https://github.com/elastic/elasticsearch/pull/52494#discussion_r381186635", "createdAt": "2020-02-19T09:57:00Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/ilm/DeleteStepTests.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ilm;\n+\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.ClusterStateObserver;\n+import org.elasticsearch.cluster.metadata.IndexMetaData;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.test.ESSingleNodeTestCase;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.elasticsearch.xpack.core.ilm.AsyncActionStep;\n+import org.elasticsearch.xpack.core.ilm.DeleteStep;\n+import org.elasticsearch.xpack.core.ilm.Step.StepKey;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_READ_ONLY;\n+import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_READ_ONLY_ALLOW_DELETE;\n+import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;\n+import static org.hamcrest.Matchers.is;\n+\n+public class DeleteStepTests extends ESSingleNodeTestCase {\n+\n+    public void testDeleteStepRetriesOnError() throws Exception {\n+        assertAcked(client().admin().indices().prepareCreate(\"test\")\n+            .setSettings(Settings.builder().put(SETTING_READ_ONLY_ALLOW_DELETE, false).put(SETTING_READ_ONLY, true))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3b765f8aebe1427aa6d12c8ad0ad9cec4fb5de8"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3964, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}