{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NjQzNzI5", "number": 51627, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNzowMDo1NFrODbpgBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNzowMDo1NFrODbpgBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzE4MDg1OnYy", "diffSide": "RIGHT", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/TransformIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNzowMDo1NFrOFjQL5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNzo1OTowOVrOFjSDgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUwOTY2OA==", "bodyText": "The same can be achieved with new searchRequest.indicesOptions(IndicesOptions.LENIENT_EXPAND_OPEN)", "url": "https://github.com/elastic/elasticsearch/pull/51627#discussion_r372509668", "createdAt": "2020-01-29T17:00:54Z", "author": {"login": "davidkyle"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/TransformIT.java", "diffHunk": "@@ -144,19 +151,36 @@ private void indexData(String indexName) throws IOException {\n     }\n \n     @After\n-    public void cleanUpTransforms() throws Exception {\n+    public void cleanUpTransformsAndLogAudits() throws Exception {\n         for (String transformId : transformsToClean) {\n-            highLevelClient().transform().stopTransform(\n-                    new StopTransformRequest(transformId, Boolean.TRUE, null, false), RequestOptions.DEFAULT);\n+            highLevelClient().transform()\n+                .stopTransform(new StopTransformRequest(transformId, Boolean.TRUE, null, false), RequestOptions.DEFAULT);\n         }\n \n         for (String transformId : transformsToClean) {\n-            highLevelClient().transform().deleteTransform(\n-                    new DeleteTransformRequest(transformId), RequestOptions.DEFAULT);\n+            highLevelClient().transform().deleteTransform(new DeleteTransformRequest(transformId), RequestOptions.DEFAULT);\n         }\n \n         transformsToClean = new ArrayList<>();\n         waitForPendingTasks(adminClient());\n+\n+        // using '*' to make this lenient and do not fail if the audit index does not exist", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b93094a30444498ca882287ad4a4fc739669027a"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU0MDI4OA==", "bodyText": "searchAll does a index refresh which would fail if you give it an explicit index name.", "url": "https://github.com/elastic/elasticsearch/pull/51627#discussion_r372540288", "createdAt": "2020-01-29T17:59:09Z", "author": {"login": "hendrikmuhs"}, "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/TransformIT.java", "diffHunk": "@@ -144,19 +151,36 @@ private void indexData(String indexName) throws IOException {\n     }\n \n     @After\n-    public void cleanUpTransforms() throws Exception {\n+    public void cleanUpTransformsAndLogAudits() throws Exception {\n         for (String transformId : transformsToClean) {\n-            highLevelClient().transform().stopTransform(\n-                    new StopTransformRequest(transformId, Boolean.TRUE, null, false), RequestOptions.DEFAULT);\n+            highLevelClient().transform()\n+                .stopTransform(new StopTransformRequest(transformId, Boolean.TRUE, null, false), RequestOptions.DEFAULT);\n         }\n \n         for (String transformId : transformsToClean) {\n-            highLevelClient().transform().deleteTransform(\n-                    new DeleteTransformRequest(transformId), RequestOptions.DEFAULT);\n+            highLevelClient().transform().deleteTransform(new DeleteTransformRequest(transformId), RequestOptions.DEFAULT);\n         }\n \n         transformsToClean = new ArrayList<>();\n         waitForPendingTasks(adminClient());\n+\n+        // using '*' to make this lenient and do not fail if the audit index does not exist", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUwOTY2OA=="}, "originalCommit": {"oid": "b93094a30444498ca882287ad4a4fc739669027a"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 102, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}