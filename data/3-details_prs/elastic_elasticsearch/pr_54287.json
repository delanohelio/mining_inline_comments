{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MjgxMjc5", "number": 54287, "title": "Add XContentHelper.childBytes() method", "bodyText": "We have a number of places where we want to read a fairly complex object from\nXContent, but aren't interested in its contents; for example, mappings are often\nserialized and deserialized between several objects before they are actually built\ninto a MappingMetaData object.  This means that potentially large maps of maps\nare constructed several times, only to immediately be re-serialized again.\nThis commit adds a new helper method to XContentHelper that reads the children\nof an xcontent object directly to a BytesReference, serialized via the same xcontenttype\nas the parent parser, avoiding the construction of intermediary maps or lists.", "createdAt": "2020-03-26T16:33:06Z", "url": "https://github.com/elastic/elasticsearch/pull/54287", "merged": true, "mergeCommit": {"oid": "acb4edacbe19d80448877786c3905b089ce081f9"}, "closed": true, "closedAt": "2020-03-27T14:21:14Z", "author": {"login": "romseygeek"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcReqi2gH2gAyMzk0MjgxMjc5OmU2MTY2NzMzYmUzMzU5MDk4MDEwYmQ5MWZmMzFiZWI1NGFiMmNmZmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRw4SRgFqTM4Mjg2NDgzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e6166733be3359098010bd91ff31beb54ab2cffb", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/e6166733be3359098010bd91ff31beb54ab2cffb", "committedDate": "2020-03-26T16:26:25Z", "message": "Add XContentHelper.childBytes() method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMTkxMzA2", "url": "https://github.com/elastic/elasticsearch/pull/54287#pullrequestreview-382191306", "createdAt": "2020-03-26T16:34:08Z", "commit": {"oid": "e6166733be3359098010bd91ff31beb54ab2cffb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjozNDowOFrOF8Pu2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjozNDo1NlrOF8PxJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcxNjYzMw==", "bodyText": "This is in XContentHelper rather than directly on XContentParser because we want to use BytesReference here, which is in server due to its lucene dependency :(", "url": "https://github.com/elastic/elasticsearch/pull/54287#discussion_r398716633", "createdAt": "2020-03-26T16:34:08Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java", "diffHunk": "@@ -383,4 +383,58 @@ public static XContentType xContentType(BytesReference bytes) {\n         BytesRef br = bytes.toBytesRef();\n         return XContentFactory.xContentType(br.bytes, br.offset, br.length);\n     }\n+\n+    /**\n+     * Returns the contents of an object as an unparsed BytesReference\n+     *\n+     * This is useful for things like mappings where we're copying bytes around but don't\n+     * actually need to parse their contents, and so avoids building large maps of maps\n+     * unnecessarily\n+     */\n+    public static BytesReference childBytes(XContentParser parser) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6166733be3359098010bd91ff31beb54ab2cffb"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcxNzIyMw==", "bodyText": "I'm not sure that this is correct, and I have a TODO in the corresponding test because I'm not sure under what circumstances we actually get an embedded object in xcontent.", "url": "https://github.com/elastic/elasticsearch/pull/54287#discussion_r398717223", "createdAt": "2020-03-26T16:34:56Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java", "diffHunk": "@@ -383,4 +383,58 @@ public static XContentType xContentType(BytesReference bytes) {\n         BytesRef br = bytes.toBytesRef();\n         return XContentFactory.xContentType(br.bytes, br.offset, br.length);\n     }\n+\n+    /**\n+     * Returns the contents of an object as an unparsed BytesReference\n+     *\n+     * This is useful for things like mappings where we're copying bytes around but don't\n+     * actually need to parse their contents, and so avoids building large maps of maps\n+     * unnecessarily\n+     */\n+    public static BytesReference childBytes(XContentParser parser) throws IOException {\n+        if (parser.currentToken() == null) {\n+            parser.nextToken();\n+        }\n+        XContentBuilder builder = XContentBuilder.builder(parser.contentType().xContent());\n+        int depth = 0;\n+        do {\n+            switch (parser.nextToken()) {\n+                case START_OBJECT:\n+                    depth++;\n+                    builder.startObject();\n+                    break;\n+                case END_OBJECT:\n+                    depth--;\n+                    builder.endObject();\n+                    break;\n+                case START_ARRAY:\n+                    builder.startArray();\n+                    break;\n+                case END_ARRAY:\n+                    builder.endArray();\n+                    break;\n+                case FIELD_NAME:\n+                    builder.field(parser.currentName());\n+                    break;\n+                case VALUE_STRING:\n+                    builder.value(parser.text());\n+                    break;\n+                case VALUE_NUMBER:\n+                    builder.value(parser.numberValue());\n+                    break;\n+                case VALUE_BOOLEAN:\n+                    builder.value(parser.booleanValue());\n+                    break;\n+                case VALUE_EMBEDDED_OBJECT:\n+                    builder.value(parser.binaryValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6166733be3359098010bd91ff31beb54ab2cffb"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17183905e1e4e0a0a54719dfdd70d19206bc007e", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/17183905e1e4e0a0a54719dfdd70d19206bc007e", "committedDate": "2020-03-26T16:44:23Z", "message": "precommit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMjAxMzYx", "url": "https://github.com/elastic/elasticsearch/pull/54287#pullrequestreview-382201361", "createdAt": "2020-03-26T16:44:53Z", "commit": {"oid": "e6166733be3359098010bd91ff31beb54ab2cffb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo0NDo1M1rOF8QOig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo0NDo1M1rOF8QOig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNDc0Ng==", "bodyText": "Its pretty rare. IIRC json doesn't send it to us.\nI wonder if we can use copyCurrentStructure for this actually.", "url": "https://github.com/elastic/elasticsearch/pull/54287#discussion_r398724746", "createdAt": "2020-03-26T16:44:53Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java", "diffHunk": "@@ -383,4 +383,58 @@ public static XContentType xContentType(BytesReference bytes) {\n         BytesRef br = bytes.toBytesRef();\n         return XContentFactory.xContentType(br.bytes, br.offset, br.length);\n     }\n+\n+    /**\n+     * Returns the contents of an object as an unparsed BytesReference\n+     *\n+     * This is useful for things like mappings where we're copying bytes around but don't\n+     * actually need to parse their contents, and so avoids building large maps of maps\n+     * unnecessarily\n+     */\n+    public static BytesReference childBytes(XContentParser parser) throws IOException {\n+        if (parser.currentToken() == null) {\n+            parser.nextToken();\n+        }\n+        XContentBuilder builder = XContentBuilder.builder(parser.contentType().xContent());\n+        int depth = 0;\n+        do {\n+            switch (parser.nextToken()) {\n+                case START_OBJECT:\n+                    depth++;\n+                    builder.startObject();\n+                    break;\n+                case END_OBJECT:\n+                    depth--;\n+                    builder.endObject();\n+                    break;\n+                case START_ARRAY:\n+                    builder.startArray();\n+                    break;\n+                case END_ARRAY:\n+                    builder.endArray();\n+                    break;\n+                case FIELD_NAME:\n+                    builder.field(parser.currentName());\n+                    break;\n+                case VALUE_STRING:\n+                    builder.value(parser.text());\n+                    break;\n+                case VALUE_NUMBER:\n+                    builder.value(parser.numberValue());\n+                    break;\n+                case VALUE_BOOLEAN:\n+                    builder.value(parser.booleanValue());\n+                    break;\n+                case VALUE_EMBEDDED_OBJECT:\n+                    builder.value(parser.binaryValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcxNzIyMw=="}, "originalCommit": {"oid": "e6166733be3359098010bd91ff31beb54ab2cffb"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6adc5e7f4e1934e89555c81448be8b63804ee7c2", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/6adc5e7f4e1934e89555c81448be8b63804ee7c2", "committedDate": "2020-03-26T17:01:29Z", "message": "Use copyConcurrentStructure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMjM1MTUz", "url": "https://github.com/elastic/elasticsearch/pull/54287#pullrequestreview-382235153", "createdAt": "2020-03-26T17:21:39Z", "commit": {"oid": "6adc5e7f4e1934e89555c81448be8b63804ee7c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyMTozOVrOF8R4PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyMTozOVrOF8R4PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1MTgwNA==", "bodyText": "Is this something we need to think about in this PR?", "url": "https://github.com/elastic/elasticsearch/pull/54287#discussion_r398751804", "createdAt": "2020-03-26T17:21:39Z", "author": {"login": "pugnascotia"}, "path": "server/src/test/java/org/elasticsearch/common/xcontent/support/XContentHelperTests.java", "diffHunk": "@@ -105,4 +106,104 @@ public void testToXContent() throws IOException {\n             }\n         }\n     }\n+\n+    public void testChildBytes() throws IOException {\n+\n+        for (XContentType xContentType : XContentType.values()) {\n+\n+            // TODO how to deal with embedded objects?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6adc5e7f4e1934e89555c81448be8b63804ee7c2"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMjM2ODM3", "url": "https://github.com/elastic/elasticsearch/pull/54287#pullrequestreview-382236837", "createdAt": "2020-03-26T17:23:37Z", "commit": {"oid": "6adc5e7f4e1934e89555c81448be8b63804ee7c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyMzozN1rOF8R9yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyMzozN1rOF8R9yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1MzIyNg==", "bodyText": "When this code is (eventually) reformatted, the indentation for all these builder lines will be normalised. If you want to keep the indent, you could use extra braces to create new indent levels. Or you could build it from JSON.", "url": "https://github.com/elastic/elasticsearch/pull/54287#discussion_r398753226", "createdAt": "2020-03-26T17:23:37Z", "author": {"login": "pugnascotia"}, "path": "server/src/test/java/org/elasticsearch/common/xcontent/support/XContentHelperTests.java", "diffHunk": "@@ -105,4 +106,104 @@ public void testToXContent() throws IOException {\n             }\n         }\n     }\n+\n+    public void testChildBytes() throws IOException {\n+\n+        for (XContentType xContentType : XContentType.values()) {\n+\n+            // TODO how to deal with embedded objects?\n+\n+            XContentBuilder builder = XContentBuilder.builder(xContentType.xContent());\n+            builder.startObject();\n+                builder.startObject(\"level1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6adc5e7f4e1934e89555c81448be8b63804ee7c2"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cb5522503731c1f5ac833647e99ac87d2d2cd23", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/8cb5522503731c1f5ac833647e99ac87d2d2cd23", "committedDate": "2020-03-27T10:39:40Z", "message": "Add test for embedded binary objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c811ff2dd841bdc86f49bab80a4718f159769294", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/c811ff2dd841bdc86f49bab80a4718f159769294", "committedDate": "2020-03-27T11:51:10Z", "message": "Merge branch 'master' into xcontent/readobjectasstring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODY0ODM3", "url": "https://github.com/elastic/elasticsearch/pull/54287#pullrequestreview-382864837", "createdAt": "2020-03-27T13:39:43Z", "commit": {"oid": "c811ff2dd841bdc86f49bab80a4718f159769294"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1633, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}