{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MTA0ODc1", "number": 58162, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODo1NTozOFrOEGegRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToxNjoxNVrOEGe-Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjI2Njk1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/DynamicKeyFieldTypeLookup.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODo1NTozOVrOGlTIeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODo1NTozOVrOGlTIeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc2Mzk2MQ==", "bodyText": "Could we simplify to this?\nthis.mappers = newMappers;\nthis.aliasToConcreteName = aliasToConcreteName;\n\nand remove the inline initialization above?", "url": "https://github.com/elastic/elasticsearch/pull/58162#discussion_r441763961", "createdAt": "2020-06-17T18:55:39Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DynamicKeyFieldTypeLookup.java", "diffHunk": "@@ -36,34 +34,20 @@\n  * Flattened object fields live in the 'mapper-flattened' module.\n  */\n class DynamicKeyFieldTypeLookup {\n-    private final CopyOnWriteHashMap<String, DynamicKeyFieldMapper> mappers;\n-    private final Map<String, String> aliasToConcreteName;\n+    private final Map<String, DynamicKeyFieldMapper> mappers = new HashMap<>();\n+    private final Map<String, String> aliasToConcreteName = new HashMap<>();\n \n     /**\n      * The maximum field depth of any dynamic key mapper. Allows us to stop searching for\n      * a dynamic key mapper as soon as we've passed the maximum possible field depth.\n      */\n     private final int maxKeyDepth;\n \n-    DynamicKeyFieldTypeLookup() {\n-        this.mappers = new CopyOnWriteHashMap<>();\n-        this.aliasToConcreteName = Collections.emptyMap();\n-        this.maxKeyDepth = 0;\n-    }\n-\n-    private DynamicKeyFieldTypeLookup(CopyOnWriteHashMap<String, DynamicKeyFieldMapper> mappers,\n-                                      Map<String, String> aliasToConcreteName,\n-                                      int maxKeyDepth) {\n-        this.mappers = mappers;\n-        this.aliasToConcreteName = aliasToConcreteName;\n-        this.maxKeyDepth = maxKeyDepth;\n-    }\n-\n-    DynamicKeyFieldTypeLookup copyAndAddAll(Map<String, DynamicKeyFieldMapper> newMappers,\n-                                            Map<String, String> aliasToConcreteName) {\n-        CopyOnWriteHashMap<String, DynamicKeyFieldMapper> combinedMappers = this.mappers.copyAndPutAll(newMappers);\n-        int maxKeyDepth = getMaxKeyDepth(combinedMappers, aliasToConcreteName);\n-        return new DynamicKeyFieldTypeLookup(combinedMappers, aliasToConcreteName, maxKeyDepth);\n+    DynamicKeyFieldTypeLookup(Map<String, DynamicKeyFieldMapper> newMappers,\n+                              Map<String, String> aliasToConcreteName) {\n+        this.mappers.putAll(newMappers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b5dcc95a7535637c3387aba62d7bad2403af0f"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjI3MDAzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/FieldTypeLookup.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODo1NjowOVrOGlTKiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODo1NjowOVrOGlTKiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc2NDQ4OQ==", "bodyText": "indentation is off here", "url": "https://github.com/elastic/elasticsearch/pull/58162#discussion_r441764489", "createdAt": "2020-06-17T18:56:09Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/FieldTypeLookup.java", "diffHunk": "@@ -19,64 +19,39 @@\n \n package org.elasticsearch.index.mapper;\n \n-import org.elasticsearch.common.collect.CopyOnWriteHashMap;\n import org.elasticsearch.common.collect.Iterators;\n import org.elasticsearch.common.regex.Regex;\n \n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Map;\n-import java.util.Objects;\n import java.util.Set;\n \n /**\n  * An immutable container for looking up {@link MappedFieldType}s by their name.\n  */\n class FieldTypeLookup implements Iterable<MappedFieldType> {\n \n-    final CopyOnWriteHashMap<String, MappedFieldType> fullNameToFieldType;\n-    private final CopyOnWriteHashMap<String, String> aliasToConcreteName;\n+    private final Map<String, MappedFieldType> fullNameToFieldType = new HashMap<>();\n+    private final Map<String, String> aliasToConcreteName = new HashMap<>();\n     private final DynamicKeyFieldTypeLookup dynamicKeyLookup;\n \n-\n     FieldTypeLookup() {\n-        fullNameToFieldType = new CopyOnWriteHashMap<>();\n-        aliasToConcreteName = new CopyOnWriteHashMap<>();\n-        dynamicKeyLookup = new DynamicKeyFieldTypeLookup();\n-    }\n-\n-    private FieldTypeLookup(CopyOnWriteHashMap<String, MappedFieldType> fullNameToFieldType,\n-                            CopyOnWriteHashMap<String, String> aliasToConcreteName,\n-                            DynamicKeyFieldTypeLookup dynamicKeyLookup) {\n-        this.fullNameToFieldType = fullNameToFieldType;\n-        this.aliasToConcreteName = aliasToConcreteName;\n-        this.dynamicKeyLookup = dynamicKeyLookup;\n+        this(Collections.emptyList(), Collections.emptyList());\n     }\n \n-    /**\n-     * Return a new instance that contains the union of this instance and the field types\n-     * from the provided mappers. If a field already exists, its field type will be updated\n-     * to use the new type from the given field mapper. Similarly if an alias already\n-     * exists, it will be updated to reference the field type from the new mapper.\n-     */\n-    public FieldTypeLookup copyAndAddAll(Collection<FieldMapper> fieldMappers,\n-                                         Collection<FieldAliasMapper> fieldAliasMappers) {\n+    FieldTypeLookup(Collection<FieldMapper> fieldMappers,\n+                           Collection<FieldAliasMapper> fieldAliasMappers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b5dcc95a7535637c3387aba62d7bad2403af0f"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjM0MzQyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/MapperService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToxNjoxNVrOGlT6qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToxNjoxNVrOGlT6qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NjgxMQ==", "bodyText": "I think we can initialize in-line now?\nFieldTypeLookup newFieldTypes = new FieldTypeLookup(...)", "url": "https://github.com/elastic/elasticsearch/pull/58162#discussion_r441776811", "createdAt": "2020-06-17T19:16:15Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MapperService.java", "diffHunk": "@@ -362,11 +362,11 @@ private synchronized DocumentMapper internalMerge(DocumentMapper mapper, MergeRe\n         Collections.addAll(fieldMappers, metadataMappers);\n         MapperUtils.collect(newMapper.mapping().root(), objectMappers, fieldMappers, fieldAliasMappers);\n \n-        MapperMergeValidator.validateNewMappers(objectMappers, fieldMappers, fieldAliasMappers, fieldTypes);\n+        MapperMergeValidator.validateNewMappers(objectMappers, fieldMappers, fieldAliasMappers);\n         checkPartitionedIndexConstraints(newMapper);\n \n         // update lookup data-structures\n-        fieldTypes = fieldTypes.copyAndAddAll(fieldMappers, fieldAliasMappers);\n+        fieldTypes = new FieldTypeLookup(fieldMappers, fieldAliasMappers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b5dcc95a7535637c3387aba62d7bad2403af0f"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1499, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}