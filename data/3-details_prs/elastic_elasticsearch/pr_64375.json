{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNDk1NzY5", "number": 64375, "title": "[DOCS] Clarify field data cache behavior", "bodyText": "After talking with @jtibshirani about how the field data cache is used in practice, I have created this PR to clarify all of the small issues I saw in the docs about this:\n\nThe field data cache docs did not say that global ordinals were included in the cache size\nThe cache docs did not describe the need to clear the cache if the limit is reached\nThe cache docs did not recommend setting an explicit limit #59829\nThe LRU behavior of the cache under certain conditions was not documented\nThe _id field docs previously said they supported aggregation, which was changed in 7.0 #49166\nThere was a separate page for the fielddata mapping parameter, but it was easier to understand by combining with the docs on the text field.\nLack of cross-linking in general", "createdAt": "2020-10-29T19:01:26Z", "url": "https://github.com/elastic/elasticsearch/pull/64375", "merged": true, "mergeCommit": {"oid": "10ee0f2878f21396739f569e676f7c9b478d6f27"}, "closed": true, "closedAt": "2020-11-20T21:53:23Z", "author": {"login": "wylieconlon"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXW1bpAH2gAyNTEyNDk1NzY5Ojc0MzA5OTMzZTM0NzAxMjg1NWYzZThjYzc3MDExNmZmOWIzNTg2Yjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdecMclAH2gAyNTEyNDk1NzY5OmI4M2IwODAzNmZjMDcwOWQxZWYyNzkzYWE2MzQ4M2NlYTdlNGQ2YWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "74309933e347012855f3e8cc770116ff9b3586b7", "author": {"user": {"login": "wylieconlon", "name": "Wylie Conlon"}}, "url": "https://github.com/elastic/elasticsearch/commit/74309933e347012855f3e8cc770116ff9b3586b7", "committedDate": "2020-10-29T18:53:46Z", "message": "Clarify field data cache behavior"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5OTk3NjYx", "url": "https://github.com/elastic/elasticsearch/pull/64375#pullrequestreview-519997661", "createdAt": "2020-10-29T19:19:35Z", "commit": {"oid": "74309933e347012855f3e8cc770116ff9b3586b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOToxOTozNlrOHqrCrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOToxOTozNlrOHqrCrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUwNzQzOA==", "bodyText": "Although the source files are in the same repo, this technically is a separate doc book. Across books, we have to use the external link syntax. This should fix the docs build error.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The `annotated-text` tokenizes text content as per the more common <<text, `text` field>> (see \n          \n          \n            \n            The `annotated-text` tokenizes text content as per the more common {ref}/text.html[`text`] field (see", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r514507438", "createdAt": "2020-10-29T19:19:36Z", "author": {"login": "jrodewig"}, "path": "docs/plugins/mapper-annotated-text.asciidoc", "diffHunk": "@@ -18,7 +18,7 @@ include::install_remove.asciidoc[]\n [[mapper-annotated-text-usage]]\n ==== Using the `annotated-text` field\n \n-The `annotated-text` tokenizes text content as per the more common `text` field (see \n+The `annotated-text` tokenizes text content as per the more common <<text, `text` field>> (see ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74309933e347012855f3e8cc770116ff9b3586b7"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57411deb06d4d3880b63607207062b987024a58f", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/57411deb06d4d3880b63607207062b987024a58f", "committedDate": "2020-10-29T19:19:41Z", "message": "Update docs/plugins/mapper-annotated-text.asciidoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "391ab35414f190530d240a554831b17b48ac0803", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/391ab35414f190530d240a554831b17b48ac0803", "committedDate": "2020-11-02T16:15:07Z", "message": "[DOCS] Add redirect for `fielddata`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c121d75cee297a5cabf41e657e1c740c67287b92", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/c121d75cee297a5cabf41e657e1c740c67287b92", "committedDate": "2020-11-02T16:24:22Z", "message": "[DOCS] Add anchor for redirect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87e148aa7f3358484c05bcbc7a92db38dc26af1f", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/87e148aa7f3358484c05bcbc7a92db38dc26af1f", "committedDate": "2020-11-02T16:25:18Z", "message": "Merge branch 'master' into clarify-fielddata"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzg5MzE2", "url": "https://github.com/elastic/elasticsearch/pull/64375#pullrequestreview-521789316", "createdAt": "2020-11-02T16:26:53Z", "commit": {"oid": "87e148aa7f3358484c05bcbc7a92db38dc26af1f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoyNjo1M1rOHsL1Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoyNjo1M1rOHsL1Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5MzI1MQ==", "bodyText": "It's best practice to add redirects for any removed pages. I added a redirect for this page with 391ab35 and c121d75", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516093251", "createdAt": "2020-11-02T16:26:53Z", "author": {"login": "jrodewig"}, "path": "docs/reference/mapping/params/fielddata.asciidoc", "diffHunk": "@@ -1,134 +0,0 @@\n-[[fielddata]]\n-=== `fielddata`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87e148aa7f3358484c05bcbc7a92db38dc26af1f"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTE0NzMw", "url": "https://github.com/elastic/elasticsearch/pull/64375#pullrequestreview-520914730", "createdAt": "2020-10-30T18:00:57Z", "commit": {"oid": "57411deb06d4d3880b63607207062b987024a58f"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxODowMDo1N1rOHrak2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODo1NjoyN1rOHsRrrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI4NjIzNQ==", "bodyText": "A few small comments to make the language more precise:\n\nSaying \"in order to increase aggregation speed\" isn't quite accurate because global ordinals help a lot with memory usage. Maybe we could say \"Global ordinals are a data structure that are used to optimize the performance of certain aggregations?\"\n\"you can tell {es} to add to the cache\" -> \"you can tell {es} to construct and cache the global ordinals...\"\n\"until the cache is created\" -> \"until the global ordinals are constructed\"\nmappping -> mapping", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r515286235", "createdAt": "2020-10-30T18:00:57Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/how-to/search-speed.asciidoc", "diffHunk": "@@ -303,13 +303,14 @@ may become much worse.\n [discrete]\n === Warm up global ordinals\n \n-Global ordinals are a data-structure that is used in order to run\n-<<search-aggregations-bucket-terms-aggregation,`terms`>> aggregations on\n-<<keyword,`keyword`>> fields. They are loaded lazily in memory because\n-Elasticsearch does not know which fields will be used in `terms` aggregations\n-and which fields won't. You can tell Elasticsearch to load global ordinals\n-eagerly when starting or refreshing a shard by configuring mappings as\n-described below:\n+<<eager-global-ordinals,Global ordinals>> are a data structure that is used in\n+order to increase aggregation speed. They are calculated lazily and stored in\n+the JVM heap as part of the <<modules-fielddata, field data cache>>. For fields\n+that are heavily used for bucketing aggregations, you can tell {es} to add to\n+the cache before requests are received. This should be done carefully because it\n+will increase heap usage and delay indexing until the cache is created. This can\n+be set dynamically on an existing mapping by setting the\n+<<eager-global-ordinals, eager global ordinals>> mappping parameter:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57411deb06d4d3880b63607207062b987024a58f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI4NjYzMg==", "bodyText": "Really small comment, the link text is usually just the parameter name: <<copy-to, `copy_to`>>", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r515286632", "createdAt": "2020-10-30T18:01:44Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/mapping/fields/id-field.asciidoc", "diffHunk": "@@ -33,12 +33,14 @@ GET my-index-000001/_search\n \n <1> Querying on the `_id` field (also see the <<query-dsl-ids-query,`ids` query>>)\n \n-The value of the `_id` field is also accessible in aggregations or for sorting,\n-but doing so is discouraged as it requires to load a lot of data in memory. In\n-case sorting or aggregating on the `_id` field is required, it is advised to\n-duplicate the content of the `_id` field in another field that has `doc_values`\n-enabled.\n-\n+The `_id` field is by default not available by default for use with aggregations or sorting.\n+To aggregate or sort by the `_id` field, it is recommended to \n+duplicate the `_id` field onto a `keyword` field using the <<copy-to, `copy_to` mapping parameter>>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57411deb06d4d3880b63607207062b987024a58f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI4ODM0NQ==", "bodyText": "I like this consolidation, it makes it clear this description only applies to text.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r515288345", "createdAt": "2020-10-30T18:05:04Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/mapping/types/text.asciidoc", "diffHunk": "@@ -141,3 +141,112 @@ The following parameters are accepted by `text` fields:\n <<mapping-field-meta,`meta`>>::\n \n     Metadata about the field.\n+\n+[[fielddata]]\n+==== `fielddata`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57411deb06d4d3880b63607207062b987024a58f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4NjEwMA==", "bodyText": "Since we soon plan to entirely remove the ability to sort/ aggregate on _id, I think it'd be best not to mention the cluster setting. It mostly just helps with the 7.x -> 8.x upgrade.\nIt looks like we forgot to mention _id field data in the 8.0 breaking changes docs though. I can fix that in a follow-up.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r515386100", "createdAt": "2020-10-30T21:14:48Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/mapping/fields/id-field.asciidoc", "diffHunk": "@@ -33,12 +33,14 @@ GET my-index-000001/_search\n \n <1> Querying on the `_id` field (also see the <<query-dsl-ids-query,`ids` query>>)\n \n-The value of the `_id` field is also accessible in aggregations or for sorting,\n-but doing so is discouraged as it requires to load a lot of data in memory. In\n-case sorting or aggregating on the `_id` field is required, it is advised to\n-duplicate the content of the `_id` field in another field that has `doc_values`\n-enabled.\n-\n+The `_id` field is by default not available by default for use with aggregations or sorting.\n+To aggregate or sort by the `_id` field, it is recommended to \n+duplicate the `_id` field onto a `keyword` field using the <<copy-to, `copy_to` mapping parameter>>.\n+\n+It is not recommended to enable `_id` fields to be aggregated using the <<modules-fielddata, in-memory field data cache>>,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57411deb06d4d3880b63607207062b987024a58f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0MjA5NQ==", "bodyText": "We are actually still discussing this recommendation in #59829, perhaps we could hold off on adding this sentence until we have a conclusion.\nAlso maybe \"Aggregations that include high cardinality values\" -> \"Aggregations on high cardinality fields\"  ?", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516142095", "createdAt": "2020-11-02T17:32:28Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/mapping/params/eager-global-ordinals.asciidoc", "diffHunk": "@@ -34,11 +34,12 @@ to be enabled.\n * Operations on parent and child documents from a `join` field, including\n `has_child` queries and `parent` aggregations.\n \n-NOTE: The global ordinal mapping is an on-heap data structure. When measuring\n-memory usage, Elasticsearch counts the memory from global ordinals as\n-'fielddata'. Global ordinals memory is included in the\n-<<fielddata-circuit-breaker, fielddata circuit breaker>>, and is returned\n-under `fielddata` in the <<cluster-nodes-stats, node stats>> response.\n+NOTE: The global ordinal mapping use heap memory as part of the\n+<<modules-fielddata, field data cache>>. Aggregations that include high\n+cardinality values can use a significant amount of heap memory, and\n+could exceed the threshold of the\n+<<fielddata-circuit-breaker, field data circuit breaker>>.\n+It is recommended to set a specific limit for the field data cache size.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87e148aa7f3358484c05bcbc7a92db38dc26af1f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE4Mzk4Mw==", "bodyText": "I'm not actually sure it's a significant contributor to heap usage, since only one join mapping is allowed per index? But it's helpful to know that it produces field data, maybe we could just say \"It can also trigger <<eager-global-ordinals, global ordinals>> to be built.\"", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516183983", "createdAt": "2020-11-02T18:46:51Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/mapping/types/parent-join.asciidoc", "diffHunk": "@@ -120,11 +120,12 @@ PUT my-index-000001/_doc/4?routing=1&refresh\n <2> `answer` is the name of the join for this document\n <3> The parent id of this child document\n \n-==== Parent-join and performance.\n+==== Parent-join and performance\n \n The join field shouldn't be used like joins in a relation database. In Elasticsearch the key to good performance\n is to de-normalize your data into documents. Each join field, `has_child` or `has_parent` query adds a\n-significant tax to your query performance.\n+significant tax to your query performance. It also increases the usage of the JVM heap on the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87e148aa7f3358484c05bcbc7a92db38dc26af1f"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE4NjMwMw==", "bodyText": "I find the new wording a little confusing: we say it's built on-demand but then below say \"other than fields where the cache is built ahead of time\".\nMaybe we could open with \"The field data cache contains field data and global ordinals, which are both used to support aggregations on certain field types. Since these are on-heap data structures, it is important to monitor the cache's use ...\" This avoids a discussion of when the field data is built, for details users can refer to eager-global-ordinals.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516186303", "createdAt": "2020-11-02T18:50:58Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/modules/indices/fielddata.asciidoc", "diffHunk": "@@ -1,16 +1,41 @@\n [[modules-fielddata]]\n === Field data cache settings\n \n-The field data cache is used mainly when sorting on or computing aggregations\n-on a field. It loads all the field values to memory in order to provide fast\n-document based access to those values. The field data cache can be\n-expensive to build for a field, so its recommended to have enough memory\n-to allocate it, and to keep it loaded.\n+The field data cache is an in-memory data structure, built on demand\n+based on the type of query that is being run. It contains both\n+<<fielddata, `fielddata`>> and <<eager-global-ordinals, global ordinals>>,\n+which serve similar functions for different types of queries.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87e148aa7f3358484c05bcbc7a92db38dc26af1f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE4ODMwNQ==", "bodyText": "This section duplicates the one from eager-global-ordinals -- I think it'd be good to avoid this duplication, otherwise the sections can easily become inconsistent. Maybe the newly-added link to eager-global-ordinals above is enough?", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516188305", "createdAt": "2020-11-02T18:54:53Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/modules/indices/fielddata.asciidoc", "diffHunk": "@@ -1,16 +1,41 @@\n [[modules-fielddata]]\n === Field data cache settings\n \n-The field data cache is used mainly when sorting on or computing aggregations\n-on a field. It loads all the field values to memory in order to provide fast\n-document based access to those values. The field data cache can be\n-expensive to build for a field, so its recommended to have enough memory\n-to allocate it, and to keep it loaded.\n+The field data cache is an in-memory data structure, built on demand\n+based on the type of query that is being run. It contains both\n+<<fielddata, `fielddata`>> and <<eager-global-ordinals, global ordinals>>,\n+which serve similar functions for different types of queries.\n+The cache uses the JVM heap, so it is important to monitor its use\n+and not to overload your cluster.\n \n-The amount of memory used for the field\n-data cache can be controlled using `indices.fielddata.cache.size`. Note:\n-reloading  the field data which does not fit into your cache will be expensive\n-and  perform poorly.\n+Other than fields where the cache is built ahead of time, it is populated as needed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87e148aa7f3358484c05bcbc7a92db38dc26af1f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE4OTEwMA==", "bodyText": "Same comment here about the recommendation, we are still discussing it so maybe we could hold off for now. The other information you added here is great though!", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516189100", "createdAt": "2020-11-02T18:56:27Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/modules/indices/fielddata.asciidoc", "diffHunk": "@@ -1,16 +1,41 @@\n [[modules-fielddata]]\n === Field data cache settings\n \n-The field data cache is used mainly when sorting on or computing aggregations\n-on a field. It loads all the field values to memory in order to provide fast\n-document based access to those values. The field data cache can be\n-expensive to build for a field, so its recommended to have enough memory\n-to allocate it, and to keep it loaded.\n+The field data cache is an in-memory data structure, built on demand\n+based on the type of query that is being run. It contains both\n+<<fielddata, `fielddata`>> and <<eager-global-ordinals, global ordinals>>,\n+which serve similar functions for different types of queries.\n+The cache uses the JVM heap, so it is important to monitor its use\n+and not to overload your cluster.\n \n-The amount of memory used for the field\n-data cache can be controlled using `indices.fielddata.cache.size`. Note:\n-reloading  the field data which does not fit into your cache will be expensive\n-and  perform poorly.\n+Other than fields where the cache is built ahead of time, it is populated as needed\n+on request. This includes:\n+\n+* Certain bucket aggregations on `keyword`, `ip`, and `flattened` fields. This\n+includes `terms` aggregations, as well as `composite`, `diversified_sampler`,\n+and `significant_terms`.\n+* Bucket aggregations on `text` fields that have <<fielddata, `fielddata`>>\n+ enabled.\n+* Bucket aggregations on the <<mapping-id-field, `_id` field>> when it is enabled for aggregation\n+* Operations on parent and child documents from a `join` field, including\n+`has_child` queries and `parent` aggregations.\n+\n+[discrete]\n+[[fielddata-sizing]]\n+==== Cache size\n+\n+The entries in the cache are expensive to build, so the default behavior is\n+to keep the cache loaded in memory\n+\n+The default cache size is unlimited, causing the cache to grow until it\n+reaches the limit set by the <<fielddata-circuit-breaker, field data circuit breaker>>.\n+It is recommended to set a cache size limit that is smaller than the circuit breaker", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87e148aa7f3358484c05bcbc7a92db38dc26af1f"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODE2NjI1", "url": "https://github.com/elastic/elasticsearch/pull/64375#pullrequestreview-521816625", "createdAt": "2020-11-02T16:54:26Z", "commit": {"oid": "87e148aa7f3358484c05bcbc7a92db38dc26af1f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjo1NDoyNlrOHsNEVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowMzoyN1rOHsNepg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjExMzQ5NQ==", "bodyText": "Minor fix to add a missing article, fix punctuation and use consistent names:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<cluster-nodes-stats,Nodes Stats API>> or the <<cat-fielddata, _cat/fielddata API>>\n          \n          \n            \n            the <<cluster-nodes-stats,nodes stats API>> or the <<cat-fielddata,cat fielddata API>>.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516113495", "createdAt": "2020-11-02T16:54:26Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/indices/fielddata.asciidoc", "diffHunk": "@@ -24,5 +49,4 @@ absolute value, eg `12GB`. Defaults to unbounded.  Also see\n \n You can monitor memory usage for field data as well as the field data circuit\n breaker using\n-<<cluster-nodes-stats,Nodes Stats API>>\n-\n+<<cluster-nodes-stats,Nodes Stats API>> or the <<cat-fielddata, _cat/fielddata API>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87e148aa7f3358484c05bcbc7a92db38dc26af1f"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMDIzMA==", "bodyText": "Not part of your change, but I don't think we need to repeat the default limit here.\nHere's a suggestion to streamline. Feel free to ignore if wanted. The text is fine as is.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The field data circuit breaker allows Elasticsearch to estimate the amount of\n          \n          \n            \n            memory a field will require to be loaded into memory. It can then prevent the\n          \n          \n            \n            field data loading by raising an exception. By default the limit is configured\n          \n          \n            \n            to 40% of the maximum JVM heap. It can be configured with the following\n          \n          \n            \n            memory a field will require to be loaded into the <<modules-fielddata, field data cache>>.\n          \n          \n            \n            It can then prevent the field data loading by raising an exception. By default the\n          \n          \n            \n            limit is configured to 40% of the maximum JVM heap. It can be configured with the following\n          \n          \n            \n            parameters:\n          \n          \n            \n            The field data circuit breaker estimates the heap memory required to load a\n          \n          \n            \n            field into the <<modules-fielddata,field data cache>>. If loading the field would\n          \n          \n            \n            cause the cache to exceed a predefined memory limit, the circuit breaker stops the\n          \n          \n            \n            operation and returns an error.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516120230", "createdAt": "2020-11-02T17:03:27Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/indices/circuit_breaker.asciidoc", "diffHunk": "@@ -33,9 +33,9 @@ The parent-level breaker can be configured with the following settings:\n [discrete]\n ==== Field data circuit breaker\n The field data circuit breaker allows Elasticsearch to estimate the amount of\n-memory a field will require to be loaded into memory. It can then prevent the\n-field data loading by raising an exception. By default the limit is configured\n-to 40% of the maximum JVM heap. It can be configured with the following\n+memory a field will require to be loaded into the <<modules-fielddata, field data cache>>.\n+It can then prevent the field data loading by raising an exception. By default the\n+limit is configured to 40% of the maximum JVM heap. It can be configured with the following\n parameters:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87e148aa7f3358484c05bcbc7a92db38dc26af1f"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a", "author": {"user": {"login": "wylieconlon", "name": "Wylie Conlon"}}, "url": "https://github.com/elastic/elasticsearch/commit/784de588a4c5cf17b3fa060f78b68fc6c3cd993a", "committedDate": "2020-11-03T19:08:50Z", "message": "Review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyODIxOTU3", "url": "https://github.com/elastic/elasticsearch/pull/64375#pullrequestreview-522821957", "createdAt": "2020-11-03T19:43:14Z", "commit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxOTo0MzoxNFrOHs95oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxOTo1Mjo1MFrOHs-N2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkxMzU2OA==", "bodyText": "I liked the wording 'duplicate the content', I thought it made the recommendation more clear.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516913568", "createdAt": "2020-11-03T19:43:14Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/mapping/fields/id-field.asciidoc", "diffHunk": "@@ -3,10 +3,14 @@\n \n Each document has an `_id` that uniquely identifies it, which is indexed\n so that documents can be looked up either with the <<docs-get,GET API>> or the\n-<<query-dsl-ids-query,`ids` query>>.\n+<<query-dsl-ids-query,`ids` query>>. The `_id` can either be assigned at\n+indexing time, or a unique `_id` can be generated by {es}. This field is not\n+configurable.\n \n-The value of the `_id` field is accessible in certain queries (`term`,\n-`terms`, `match`, `query_string`, `simple_query_string`).\n+The value of the `_id` field is only accessible in certain queries (`term`,\n+`terms`, `match`, `query_string`, `simple_query_string`), but is restricted\n+from use in aggregations, sorting, or scripting. For those use cases the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkxNDAzNg==", "bodyText": "I think we should undo this change, it feels weird to be mixing auto-generated and custom IDs ?", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516914036", "createdAt": "2020-11-03T19:44:09Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/mapping/fields/id-field.asciidoc", "diffHunk": "@@ -16,30 +20,23 @@ PUT my-index-000001/_doc/1\n   \"text\": \"Document with ID 1\"\n }\n \n-PUT my-index-000001/_doc/2?refresh=true\n+POST my-index-000001/_doc/?refresh=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkxODc0NA==", "bodyText": "shoul -> should", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516918744", "createdAt": "2020-11-03T19:52:50Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/modules/indices/fielddata.asciidoc", "diffHunk": "@@ -1,28 +1,35 @@\n [[modules-fielddata]]\n === Field data cache settings\n \n-The field data cache is used mainly when sorting on or computing aggregations\n-on a field. It loads all the field values to memory in order to provide fast\n-document based access to those values. The field data cache can be\n-expensive to build for a field, so its recommended to have enough memory\n-to allocate it, and to keep it loaded.\n+The field data cache contains <<fielddata-mapping-param, field data>> and <<eager-global-ordinals, global ordinals>>,\n+which are both used to support aggregations on certain field types.\n+Since these are on-heap data structures, it is important to monitor the cache's use.\n \n-The amount of memory used for the field\n-data cache can be controlled using `indices.fielddata.cache.size`. Note:\n-reloading  the field data which does not fit into your cache will be expensive\n-and  perform poorly.\n+[discrete]\n+[[fielddata-sizing]]\n+==== Cache size\n+\n+The entries in the cache are expensive to build, so the default behavior is\n+to keep the cache loaded in memory. The default cache size is unlimited,\n+causing the cache to grow until it reaches the limit set by the <<fielddata-circuit-breaker, field data circuit breaker>>. This behavior can be configured.\n+\n+If the cache size limit is set, the cache will begin clearing the least-recently-updated\n+entries in the cache. This setting can automatically avoid the circuit breaker limit,\n+at the cost of rebuilding the cache as needed.\n+\n+If the circuit breaker limit is reached, further requests that increase the cache\n+size will be prevented. In this case you shoul manually <<indices-clearcache, clear the cache>>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyODQxNTU3", "url": "https://github.com/elastic/elasticsearch/pull/64375#pullrequestreview-522841557", "createdAt": "2020-11-03T20:13:32Z", "commit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMDoxMzozMlrOHs-4dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMDozMDoxNFrOHs_YXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkyOTY1Mg==", "bodyText": "It's not clear whether if set applies to the circuit breaker or this setting.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            absolute value, eg `12GB`. Defaults to unbounded. Should be set smaller than the\n          \n          \n            \n            <<fielddata-circuit-breaker>>, if set.\n          \n          \n            \n            absolute value, eg `12GB`. Defaults to unbounded. This value should not\n          \n          \n            \n            exceed the <<fielddata-circuit-breaker,`indices.breaker.fielddata.limit`>>.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516929652", "createdAt": "2020-11-03T20:13:32Z", "author": {"login": "jrodewig"}, "path": "docs/reference/modules/indices/fielddata.asciidoc", "diffHunk": "@@ -1,28 +1,35 @@\n [[modules-fielddata]]\n === Field data cache settings\n \n-The field data cache is used mainly when sorting on or computing aggregations\n-on a field. It loads all the field values to memory in order to provide fast\n-document based access to those values. The field data cache can be\n-expensive to build for a field, so its recommended to have enough memory\n-to allocate it, and to keep it loaded.\n+The field data cache contains <<fielddata-mapping-param, field data>> and <<eager-global-ordinals, global ordinals>>,\n+which are both used to support aggregations on certain field types.\n+Since these are on-heap data structures, it is important to monitor the cache's use.\n \n-The amount of memory used for the field\n-data cache can be controlled using `indices.fielddata.cache.size`. Note:\n-reloading  the field data which does not fit into your cache will be expensive\n-and  perform poorly.\n+[discrete]\n+[[fielddata-sizing]]\n+==== Cache size\n+\n+The entries in the cache are expensive to build, so the default behavior is\n+to keep the cache loaded in memory. The default cache size is unlimited,\n+causing the cache to grow until it reaches the limit set by the <<fielddata-circuit-breaker, field data circuit breaker>>. This behavior can be configured.\n+\n+If the cache size limit is set, the cache will begin clearing the least-recently-updated\n+entries in the cache. This setting can automatically avoid the circuit breaker limit,\n+at the cost of rebuilding the cache as needed.\n+\n+If the circuit breaker limit is reached, further requests that increase the cache\n+size will be prevented. In this case you shoul manually <<indices-clearcache, clear the cache>>.\n \n `indices.fielddata.cache.size`::\n (<<static-cluster-setting,Static>>)\n-The max size of the field data cache, eg `30%` of node heap space, or an\n-absolute value, eg `12GB`. Defaults to unbounded.  Also see\n-<<fielddata-circuit-breaker>>.\n+The max size of the field data cache, eg `38%` of node heap space, or an\n+absolute value, eg `12GB`. Defaults to unbounded. Should be set smaller than the\n+<<fielddata-circuit-breaker>>, if set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkzNjc1OA==", "bodyText": "I don't know if configurable is clear here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<query-dsl-ids-query,`ids` query>>. The `_id` can either be assigned at\n          \n          \n            \n            indexing time, or a unique `_id` can be generated by {es}. This field is not\n          \n          \n            \n            configurable.\n          \n          \n            \n            <<query-dsl-ids-query,`ids` query>>. You can specify a unique `_id` in the\n          \n          \n            \n            indexing request or let {es} generate the `_id`. However, you can't change an\n          \n          \n            \n            existing document's `_id`.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516936758", "createdAt": "2020-11-03T20:28:04Z", "author": {"login": "jrodewig"}, "path": "docs/reference/mapping/fields/id-field.asciidoc", "diffHunk": "@@ -3,10 +3,14 @@\n \n Each document has an `_id` that uniquely identifies it, which is indexed\n so that documents can be looked up either with the <<docs-get,GET API>> or the\n-<<query-dsl-ids-query,`ids` query>>.\n+<<query-dsl-ids-query,`ids` query>>. The `_id` can either be assigned at\n+indexing time, or a unique `_id` can be generated by {es}. This field is not\n+configurable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkzNzM2Mg==", "bodyText": "use -> uses\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: The global ordinal mapping use heap memory as part of the\n          \n          \n            \n            NOTE: The global ordinal mapping uses heap memory as part of the", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516937362", "createdAt": "2020-11-03T20:29:19Z", "author": {"login": "jrodewig"}, "path": "docs/reference/mapping/params/eager-global-ordinals.asciidoc", "diffHunk": "@@ -34,11 +34,10 @@ to be enabled.\n * Operations on parent and child documents from a `join` field, including\n `has_child` queries and `parent` aggregations.\n \n-NOTE: The global ordinal mapping is an on-heap data structure. When measuring\n-memory usage, Elasticsearch counts the memory from global ordinals as\n-'fielddata'. Global ordinals memory is included in the\n-<<fielddata-circuit-breaker, fielddata circuit breaker>>, and is returned\n-under `fielddata` in the <<cluster-nodes-stats, node stats>> response.\n+NOTE: The global ordinal mapping use heap memory as part of the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkzNzgyMw==", "bodyText": "I'd simplify this a little:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            can use a significant amount of heap memory, and could exceed the threshold\n          \n          \n            \n            of the <<fielddata-circuit-breaker, field data circuit breaker>>.\n          \n          \n            \n            can use a lot of memory and trigger the <<fielddata-circuit-breaker, field data\n          \n          \n            \n            circuit breaker>>.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r516937823", "createdAt": "2020-11-03T20:30:14Z", "author": {"login": "jrodewig"}, "path": "docs/reference/mapping/params/eager-global-ordinals.asciidoc", "diffHunk": "@@ -34,11 +34,10 @@ to be enabled.\n * Operations on parent and child documents from a `join` field, including\n `has_child` queries and `parent` aggregations.\n \n-NOTE: The global ordinal mapping is an on-heap data structure. When measuring\n-memory usage, Elasticsearch counts the memory from global ordinals as\n-'fielddata'. Global ordinals memory is included in the\n-<<fielddata-circuit-breaker, fielddata circuit breaker>>, and is returned\n-under `fielddata` in the <<cluster-nodes-stats, node stats>> response.\n+NOTE: The global ordinal mapping use heap memory as part of the\n+<<modules-fielddata, field data cache>>. Aggregations on high cardinality fields\n+can use a significant amount of heap memory, and could exceed the threshold\n+of the <<fielddata-circuit-breaker, field data circuit breaker>>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMTM0OTEx", "url": "https://github.com/elastic/elasticsearch/pull/64375#pullrequestreview-523134911", "createdAt": "2020-11-04T08:30:11Z", "commit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODozMDoxMVrOHtNmzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODozNzoyOFrOHtN2KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MDg5NQ==", "bodyText": "It wouldn't delay indexing but refreshing. Indexing can keep going while the index is being refreshed and builds global ordinals.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r517170895", "createdAt": "2020-11-04T08:30:11Z", "author": {"login": "jpountz"}, "path": "docs/reference/how-to/search-speed.asciidoc", "diffHunk": "@@ -303,13 +303,14 @@ may become much worse.\n [discrete]\n === Warm up global ordinals\n \n-Global ordinals are a data-structure that is used in order to run\n-<<search-aggregations-bucket-terms-aggregation,`terms`>> aggregations on\n-<<keyword,`keyword`>> fields. They are loaded lazily in memory because\n-Elasticsearch does not know which fields will be used in `terms` aggregations\n-and which fields won't. You can tell Elasticsearch to load global ordinals\n-eagerly when starting or refreshing a shard by configuring mappings as\n-described below:\n+<<eager-global-ordinals,Global ordinals>> are a data structure that is used to\n+optimize the performance of aggregations. They are calculated lazily and stored in\n+the JVM heap as part of the <<modules-fielddata, field data cache>>. For fields\n+that are heavily used for bucketing aggregations, you can tell {es} to construct\n+and cache the global ordinals before requests are received. This should be done\n+carefully because it will increase heap usage and delay indexing until the global", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MTMzMg==", "bodyText": "I think that Wylie means that you con't configure the mapping of the _id field as opposed to the value of the _id field.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r517171332", "createdAt": "2020-11-04T08:30:59Z", "author": {"login": "jpountz"}, "path": "docs/reference/mapping/fields/id-field.asciidoc", "diffHunk": "@@ -3,10 +3,14 @@\n \n Each document has an `_id` that uniquely identifies it, which is indexed\n so that documents can be looked up either with the <<docs-get,GET API>> or the\n-<<query-dsl-ids-query,`ids` query>>.\n+<<query-dsl-ids-query,`ids` query>>. The `_id` can either be assigned at\n+indexing time, or a unique `_id` can be generated by {es}. This field is not\n+configurable.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkzNjc1OA=="}, "originalCommit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3NDgyNQ==", "bodyText": "As @jtibshirani mentioned, I'd avoid recommending size-based eviction for this cache.", "url": "https://github.com/elastic/elasticsearch/pull/64375#discussion_r517174825", "createdAt": "2020-11-04T08:37:28Z", "author": {"login": "jpountz"}, "path": "docs/reference/modules/indices/fielddata.asciidoc", "diffHunk": "@@ -1,28 +1,35 @@\n [[modules-fielddata]]\n === Field data cache settings\n \n-The field data cache is used mainly when sorting on or computing aggregations\n-on a field. It loads all the field values to memory in order to provide fast\n-document based access to those values. The field data cache can be\n-expensive to build for a field, so its recommended to have enough memory\n-to allocate it, and to keep it loaded.\n+The field data cache contains <<fielddata-mapping-param, field data>> and <<eager-global-ordinals, global ordinals>>,\n+which are both used to support aggregations on certain field types.\n+Since these are on-heap data structures, it is important to monitor the cache's use.\n \n-The amount of memory used for the field\n-data cache can be controlled using `indices.fielddata.cache.size`. Note:\n-reloading  the field data which does not fit into your cache will be expensive\n-and  perform poorly.\n+[discrete]\n+[[fielddata-sizing]]\n+==== Cache size\n+\n+The entries in the cache are expensive to build, so the default behavior is\n+to keep the cache loaded in memory. The default cache size is unlimited,\n+causing the cache to grow until it reaches the limit set by the <<fielddata-circuit-breaker, field data circuit breaker>>. This behavior can be configured.\n+\n+If the cache size limit is set, the cache will begin clearing the least-recently-updated\n+entries in the cache. This setting can automatically avoid the circuit breaker limit,\n+at the cost of rebuilding the cache as needed.\n+\n+If the circuit breaker limit is reached, further requests that increase the cache\n+size will be prevented. In this case you shoul manually <<indices-clearcache, clear the cache>>.\n \n `indices.fielddata.cache.size`::\n (<<static-cluster-setting,Static>>)\n-The max size of the field data cache, eg `30%` of node heap space, or an\n-absolute value, eg `12GB`. Defaults to unbounded.  Also see\n-<<fielddata-circuit-breaker>>.\n+The max size of the field data cache, eg `38%` of node heap space, or an\n+absolute value, eg `12GB`. Defaults to unbounded. Should be set smaller than the\n+<<fielddata-circuit-breaker>>, if set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784de588a4c5cf17b3fa060f78b68fc6c3cd993a"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b83b08036fc0709d1ef2793aa63483cea7e4d6aa", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/b83b08036fc0709d1ef2793aa63483cea7e4d6aa", "committedDate": "2020-11-20T19:05:54Z", "message": "Address review comments."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 847, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}