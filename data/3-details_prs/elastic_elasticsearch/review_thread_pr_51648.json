{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NzY4NzQ4", "number": 51648, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODoxODoyMlrODb1FjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODoxOTozN1rODb1GxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTA3OTE2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/ensemble/WeightedMode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODoxODoyMlrOFjidzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODoxODoyMlrOFjidzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgwOTE2NA==", "bodyText": "Probably it's ok here but I'd reverse the order so that the constant is first (useful if we suspect null argument):\nreturn TargetType.CLASSIFICATION.equals(targetType);", "url": "https://github.com/elastic/elasticsearch/pull/51648#discussion_r372809164", "createdAt": "2020-01-30T08:18:22Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/ensemble/WeightedMode.java", "diffHunk": "@@ -133,7 +146,7 @@ public String getName() {\n \n     @Override\n     public boolean compatibleWith(TargetType targetType) {\n-        return true;\n+        return targetType.equals(TargetType.CLASSIFICATION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5814f7b4700c2f3fce40fbbeb793173557141c04"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTA4MjI4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/inference/TrainedModelDefinitionTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODoxOTozN1rOFjiflg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMjoyMDowMlrOFjpEPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgwOTYyMg==", "bodyText": "Where does this string come from? Could we have a resource file with plain text instead?", "url": "https://github.com/elastic/elasticsearch/pull/51648#discussion_r372809622", "createdAt": "2020-01-30T08:19:37Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/inference/TrainedModelDefinitionTests.java", "diffHunk": "@@ -302,4 +306,67 @@ public void testRamUsageEstimation() {\n         assertThat(test.ramBytesUsed(), greaterThan(0L));\n     }\n \n+    public void testMultiClassIrisInference() throws IOException {\n+        // Fairly simple, random forest classification model built to fit in our format\n+        // Trained on the well known Iris dataset\n+        String compressedDef = \"H4sIAMHqMV4C/+1b7Y6bOhB9lVV+b5HHX9h9g/sMVYVo4iRIbBIBaXtV9d0vJr23uzGKJwwsu\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5814f7b4700c2f3fce40fbbeb793173557141c04"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkxNzMwOQ==", "bodyText": "Its a model, the comment says as much. Writing a multi-class model by hand that adequately test paths in a semi-non-trivial way was becoming frustrating.\nThis model was specifically trained in scikit-learn and transformed into our format.\nThis is the only test that utilizes this string. It is not out of the ordinary to have tests access an immutable string.", "url": "https://github.com/elastic/elasticsearch/pull/51648#discussion_r372917309", "createdAt": "2020-01-30T12:20:02Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/inference/TrainedModelDefinitionTests.java", "diffHunk": "@@ -302,4 +306,67 @@ public void testRamUsageEstimation() {\n         assertThat(test.ramBytesUsed(), greaterThan(0L));\n     }\n \n+    public void testMultiClassIrisInference() throws IOException {\n+        // Fairly simple, random forest classification model built to fit in our format\n+        // Trained on the well known Iris dataset\n+        String compressedDef = \"H4sIAMHqMV4C/+1b7Y6bOhB9lVV+b5HHX9h9g/sMVYVo4iRIbBIBaXtV9d0vJr23uzGKJwwsu\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgwOTYyMg=="}, "originalCommit": {"oid": "5814f7b4700c2f3fce40fbbeb793173557141c04"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 125, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}