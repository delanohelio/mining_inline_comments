{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2OTIzMDQ2", "number": 54572, "title": "Compatible logic for Removes typed endpoint from search and related APIs", "bodyText": "This adds a compatible APIs for typed endpoints removed in #41640\n202 failing tests\nThese 2 tests are explicitly fixed by this PR\nCompatRestIT. test {yaml=mtermvectors/21_deprecated_with_types/Deprecated camel case and _ parameters should fail in Term Vectors query}\nCompatRestIT. test {yaml=mtermvectors/30_mix_typeless_typeful/mtermvectors without types on an index that has types}\nI think more yml tests should be added to 7.x to cover these endpoints\n17th june\n1306tests | 197failures | 16ignored | 10m56.91sduration", "createdAt": "2020-04-01T11:04:09Z", "url": "https://github.com/elastic/elasticsearch/pull/54572", "merged": true, "mergeCommit": {"oid": "2df6157aa9847fffa8c542a41ea35923f4f4e958"}, "closed": true, "closedAt": "2020-07-14T06:37:06Z", "author": {"login": "pgomulka"}, "timelineItems": {"totalCount": 55, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRJYeAAH2gAyMzk2OTIzMDQ2Ojk2ZWJiNWMzMzc2ZGM1MzA5ZTI3ZTQxODkwYWIwNDFmMmJjZWVlYzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy6O6ugH2gAyMzk2OTIzMDQ2OjI0YTQ0YThlZmY0ODJhYjNmMmFmMzQ4OTBmNDYxYzBlMzZiNTRlZDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "96ebb5c3376dc5309e27e41890ab041f2bceeec6", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/96ebb5c3376dc5309e27e41890ab041f2bceeec6", "committedDate": "2020-03-25T15:38:40Z", "message": "init work. 221 vs 231 failing\n\nfixed get/index tests\nCompatRestIT. test {yaml=get/21_stored_fields_with_types/Stored fields}\nCompatRestIT. test {yaml=get/71_source_filtering_with_types/Source\nfiltering}\n\nCompatRestIT. test {yaml=index/70_mix_typeless_typeful/Index call that\nintroduces new field mappings}\nCompatRestIT. test {yaml=index/70_mix_typeless_typeful/Index with\ntypeless API on an index that has types}\n\nhowever the last one from get is still failing\nCompatRestIT. test {yaml=get/100_mix_typeless_typeful/GET with typeless\nAPI on an index that has"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e922bf77ab08d48a8c2c48f8073b082275cbf10", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/2e922bf77ab08d48a8c2c48f8073b082275cbf10", "committedDate": "2020-03-27T13:57:42Z", "message": "allow registering multiple rest actions under the same path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7eda970edfec379bba6e91b8ba66495ebdedd67", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/e7eda970edfec379bba6e91b8ba66495ebdedd67", "committedDate": "2020-03-27T14:07:44Z", "message": "revert out dirs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dac4b9cbcd77ffbc662d2912067f4d6f49555b6", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/5dac4b9cbcd77ffbc662d2912067f4d6f49555b6", "committedDate": "2020-03-27T14:15:22Z", "message": "Merge branch 'compat_rest_api' into compat/create_index_include_type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a213e6c7cc8ebb86d9c467155afe82348faff43e", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a213e6c7cc8ebb86d9c467155afe82348faff43e", "committedDate": "2020-03-27T14:29:45Z", "message": "extend restcreateindexaction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1ad6779f0eb699d3623e055cb932ec041abd39b", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f1ad6779f0eb699d3623e055cb932ec041abd39b", "committedDate": "2020-03-27T15:14:13Z", "message": "code style and discovery nodes in indexaction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ff3463f7558256da4aba434f14ba8446e1ebce8", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/8ff3463f7558256da4aba434f14ba8446e1ebce8", "committedDate": "2020-03-30T08:03:58Z", "message": "fix double registration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b8a26a46dc516fe88e1361e48cb276fdfeb5fd1", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/9b8a26a46dc516fe88e1361e48cb276fdfeb5fd1", "committedDate": "2020-03-30T18:24:40Z", "message": "add search action v7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0a12bdb082498a62a5befa5b881e123a1858d39", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/b0a12bdb082498a62a5befa5b881e123a1858d39", "committedDate": "2020-03-31T12:30:27Z", "message": "search & multisearch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b94be5c2150d2c2cf93a1c290582bc850a1d394e", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/b94be5c2150d2c2cf93a1c290582bc850a1d394e", "committedDate": "2020-04-01T07:24:50Z", "message": "types with consumer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f78e0211fb9c83949b6b161b071db548e829b8be", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f78e0211fb9c83949b6b161b071db548e829b8be", "committedDate": "2020-04-01T08:18:31Z", "message": "cleanup type funciton"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eb1c68fd15f8910cbf029ec41b9daa146dcdb4d", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/9eb1c68fd15f8910cbf029ec41b9daa146dcdb4d", "committedDate": "2020-04-01T10:10:09Z", "message": "packages fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a421d56a4e914f3ea676ee14e4023a3b1e2a81cb", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a421d56a4e914f3ea676ee14e4023a3b1e2a81cb", "committedDate": "2020-04-01T11:01:23Z", "message": "update by query, delete by query, multi term and term"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "336414170a8bd11237ccaf473e2e57ddaacf7279", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/336414170a8bd11237ccaf473e2e57ddaacf7279", "committedDate": "2020-04-01T11:07:15Z", "message": "package rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8abcc0a255f9d03eebc5ed765333d33c807eefa1", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/8abcc0a255f9d03eebc5ed765333d33c807eefa1", "committedDate": "2020-04-01T11:54:32Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6efdb306a31cb4ef5a0a5c0e8954a6665f1f674d", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/6efdb306a31cb4ef5a0a5c0e8954a6665f1f674d", "committedDate": "2020-04-01T12:06:41Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90c37e21d4e4894cdf10c2f4d507ad3021fe1073", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/90c37e21d4e4894cdf10c2f4d507ad3021fe1073", "committedDate": "2020-04-01T13:37:43Z", "message": "fake request build iwth compat"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "484e4aca9c8d11b923fa24a98c45fb9fead89409", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/484e4aca9c8d11b923fa24a98c45fb9fead89409", "committedDate": "2020-04-01T13:52:26Z", "message": "fixing some tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6184a9d07d97fb884601af6c0bb05b910b2e04c5", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/6184a9d07d97fb884601af6c0bb05b910b2e04c5", "committedDate": "2020-04-02T07:05:43Z", "message": "term vector body not finished"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ee448754484179e05ab14815bbaa21ba02dca0a", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/1ee448754484179e05ab14815bbaa21ba02dca0a", "committedDate": "2020-04-02T12:07:12Z", "message": "additional testing and using version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abe1d2864ad79f409f01f301255af6f4ca7f51c6", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/abe1d2864ad79f409f01f301255af6f4ca7f51c6", "committedDate": "2020-04-02T12:08:45Z", "message": "unused method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8fc2e554bcdd809d471fbb2543bdfe9c6ae423f", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/d8fc2e554bcdd809d471fbb2543bdfe9c6ae423f", "committedDate": "2020-04-02T13:16:15Z", "message": "method handlers - returning null when no handler under a method was registered"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Njk0NzU4", "url": "https://github.com/elastic/elasticsearch/pull/54572#pullrequestreview-386694758", "createdAt": "2020-04-02T18:36:20Z", "commit": {"oid": "6184a9d07d97fb884601af6c0bb05b910b2e04c5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxODozNjoyMVrOF_4bfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToxOTo0MFrOF_5-NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUyOTE1MA==", "bodyText": "should the the above non-typed endpoints be here ?  Shouldn't the this error trying to register the route ?", "url": "https://github.com/elastic/elasticsearch/pull/54572#discussion_r402529150", "createdAt": "2020-04-02T18:36:21Z", "author": {"login": "jakelandis"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/rest/action/document/RestMultiTermVectorsActionV7.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest.action.document;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.action.termvectors.MultiTermVectorsRequest;\n+import org.elasticsearch.action.termvectors.TermVectorsRequest;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.compat.TypeConsumer;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.action.RestToXContentListener;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static org.elasticsearch.rest.RestRequest.Method.GET;\n+import static org.elasticsearch.rest.RestRequest.Method.POST;\n+\n+public class RestMultiTermVectorsActionV7 extends RestMultiTermVectorsAction {\n+    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(RestTermVectorsAction.class));\n+    static final String TYPES_DEPRECATION_MESSAGE = \"[types removal] \" + \"Specifying types in multi term vector requests is deprecated.\";\n+\n+    @Override\n+    public List<Route> routes() {\n+        return List.of(new Route(GET, \"/_mtermvectors\"),\n+            new Route(POST, \"/_mtermvectors\"),\n+            new Route(GET, \"/{index}/_mtermvectors\"),\n+            new Route(POST, \"/{index}/_mtermvectors\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6184a9d07d97fb884601af6c0bb05b910b2e04c5"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzMjY4Nw==", "bodyText": "can this be re-named keyAllowed ? (or the like)\nA function used to validate if a provided xContent key is allowed. This is useful for xContent compatibility to determine if a key is allowed to be present in version agnostic manner. The provided function should return false if the key is not allowed. \n\n(it is does not use the Consumer interface, and I believe it more general purpose then the just for types)", "url": "https://github.com/elastic/elasticsearch/pull/54572#discussion_r402532687", "createdAt": "2020-04-02T18:42:29Z", "author": {"login": "jakelandis"}, "path": "modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestMultiSearchTemplateAction.java", "diffHunk": "@@ -79,6 +80,18 @@ public RestChannelConsumer prepareRequest(RestRequest request, NodeClient client\n      * Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest}\n      */\n     public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {\n+        return parseRequest(restRequest,allowExplicitIndex, k->false);\n+    }\n+\n+    /**\n+     * Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest}\n+     * @param typeConsumer - is a function used when parsing a request body. if it contains a types field it will consume it,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6184a9d07d97fb884601af6c0bb05b910b2e04c5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0OTk1Ng==", "bodyText": "I think this class has a couple problems...\nit is named Consumer, but actually a Function with a side effect\nit requires an ordering between methods. (e.g. if you call hasTypes can yield different results then calling apply then hasTypes)\nhasTypes() method feels utility like, and apply is a pure function (which shouldn't have side effects even local to it's own class).\nCan we separate this into two classes , a utility class and pure function class. If you need to hold to the state returned by the function, whoever calls that function can take that responsibility.\nAlso, in tangent with my other comment on renaming the variable, I think the function class be be generalized as well KeyAllowed ?", "url": "https://github.com/elastic/elasticsearch/pull/54572#discussion_r402549956", "createdAt": "2020-04-02T19:11:51Z", "author": {"login": "jakelandis"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/compat/TypeConsumer.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.rest.RestRequest;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.function.Function;\n+\n+public class TypeConsumer implements Function<String, Boolean> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6184a9d07d97fb884601af6c0bb05b910b2e04c5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1MjAzNA==", "bodyText": "Do you plan another round of PRs to issue deprecation and compatibility warnings ?", "url": "https://github.com/elastic/elasticsearch/pull/54572#discussion_r402552034", "createdAt": "2020-04-02T19:15:21Z", "author": {"login": "jakelandis"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/index/reindex/RestDeleteByQueryActionV7.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.reindex;\n+\n+import org.elasticsearch.Version;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.rest.RestRequest;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static org.elasticsearch.rest.RestRequest.Method.POST;\n+\n+public class RestDeleteByQueryActionV7 extends RestDeleteByQueryAction {\n+    @Override\n+    public List<Route> routes() {\n+        return List.of(new Route(POST, \"/{index}/{type}/_delete_by_query\"));\n+    }\n+\n+    @Override\n+    public String compatibleWithVersion() {\n+        return String.valueOf(Version.V_7_0_0.major);\n+    }\n+\n+    @Override\n+    public RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException {\n+        request.param(\"type\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6184a9d07d97fb884601af6c0bb05b910b2e04c5"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1MjYwMA==", "bodyText": "are the non-typed endpoints needed ?", "url": "https://github.com/elastic/elasticsearch/pull/54572#discussion_r402552600", "createdAt": "2020-04-02T19:16:22Z", "author": {"login": "jakelandis"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/rest/action/document/RestTermVectorsActionV7.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest.action.document;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.action.termvectors.TermVectorsRequest;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.compat.TypeConsumer;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.action.RestToXContentListener;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static org.elasticsearch.rest.RestRequest.Method.GET;\n+import static org.elasticsearch.rest.RestRequest.Method.POST;\n+\n+public class RestTermVectorsActionV7 extends RestTermVectorsAction {\n+    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(RestTermVectorsAction.class));\n+    public static final String TYPES_DEPRECATION_MESSAGE = \"[types removal] \" + \"Specifying types in term vector requests is deprecated.\";\n+\n+    @Override\n+    public List<Route> routes() {\n+        return List.of(\n+            new Route(GET, \"/{index}/_termvectors\"),\n+            new Route(POST, \"/{index}/_termvectors\"),\n+            new Route(GET, \"/{index}/_termvectors/{id}\"),\n+            new Route(POST, \"/{index}/_termvectors/{id}\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6184a9d07d97fb884601af6c0bb05b910b2e04c5"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1MzM3Ng==", "bodyText": "If you move hasTypes a static method in a utility class, maybe we can push this logic (consume the type and log) there ?", "url": "https://github.com/elastic/elasticsearch/pull/54572#discussion_r402553376", "createdAt": "2020-04-02T19:17:49Z", "author": {"login": "jakelandis"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/rest/action/document/RestTermVectorsActionV7.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest.action.document;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.action.termvectors.TermVectorsRequest;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.compat.TypeConsumer;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.action.RestToXContentListener;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static org.elasticsearch.rest.RestRequest.Method.GET;\n+import static org.elasticsearch.rest.RestRequest.Method.POST;\n+\n+public class RestTermVectorsActionV7 extends RestTermVectorsAction {\n+    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(RestTermVectorsAction.class));\n+    public static final String TYPES_DEPRECATION_MESSAGE = \"[types removal] \" + \"Specifying types in term vector requests is deprecated.\";\n+\n+    @Override\n+    public List<Route> routes() {\n+        return List.of(\n+            new Route(GET, \"/{index}/_termvectors\"),\n+            new Route(POST, \"/{index}/_termvectors\"),\n+            new Route(GET, \"/{index}/_termvectors/{id}\"),\n+            new Route(POST, \"/{index}/_termvectors/{id}\"),\n+            // Deprecated typed endpoints.\n+            new Route(GET, \"/{index}/{type}/_termvectors\"),\n+            new Route(POST, \"/{index}/{type}/_termvectors\"),\n+            new Route(GET, \"/{index}/{type}/{id}/_termvectors\"),\n+            new Route(POST, \"/{index}/{type}/{id}/_termvectors\")\n+        );\n+    }\n+\n+    @Override\n+    public String compatibleWithVersion() {\n+        return String.valueOf(Version.V_7_0_0.major);\n+    }\n+\n+    @Override\n+    public RestChannelConsumer prepareRequest(final RestRequest request, final NodeClient client) throws IOException {\n+        TypeConsumer typeConsumer = new TypeConsumer(request,\"_type\");\n+\n+        TermVectorsRequest termVectorsRequest = new TermVectorsRequest(request.param(\"index\"), request.param(\"id\"));\n+\n+        if (request.hasContentOrSourceParam()) {\n+            try (XContentParser parser = request.contentOrSourceParamParser()) {\n+                TermVectorsRequest.parseRequest(termVectorsRequest, parser, typeConsumer);\n+            }\n+        }\n+        readURIParameters(termVectorsRequest, request);\n+\n+        if (typeConsumer.hasTypes()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6184a9d07d97fb884601af6c0bb05b910b2e04c5"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1MzUzNw==", "bodyText": "are the non-typed end points needed ?", "url": "https://github.com/elastic/elasticsearch/pull/54572#discussion_r402553537", "createdAt": "2020-04-02T19:18:09Z", "author": {"login": "jakelandis"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchActionV7.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest.action.search;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.elasticsearch.compat.TypeConsumer;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.action.search.MultiSearchRequest;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.action.RestToXContentListener;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static org.elasticsearch.rest.RestRequest.Method.GET;\n+import static org.elasticsearch.rest.RestRequest.Method.POST;\n+\n+public class RestMultiSearchActionV7 extends RestMultiSearchAction {\n+    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(RestMultiSearchAction.class));\n+    static final String TYPES_DEPRECATION_MESSAGE = \"[types removal]\" + \" Specifying types in multi search requests is deprecated.\";\n+\n+    public RestMultiSearchActionV7(Settings settings) {\n+        super(settings);\n+    }\n+\n+    @Override\n+    public String compatibleWithVersion() {\n+        return String.valueOf(Version.V_7_0_0.major);\n+    }\n+\n+    @Override\n+    public List<Route> routes() {\n+        return List.of(\n+            new Route(GET, \"/_msearch\"),\n+            new Route(POST, \"/_msearch\"),\n+            new Route(GET, \"/{index}/_msearch\"),\n+            new Route(POST, \"/{index}/_msearch\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6184a9d07d97fb884601af6c0bb05b910b2e04c5"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1MzcyOQ==", "bodyText": "non-typed endpoints ?", "url": "https://github.com/elastic/elasticsearch/pull/54572#discussion_r402553729", "createdAt": "2020-04-02T19:18:27Z", "author": {"login": "jakelandis"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/rest/action/search/RestSearchActionV7.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest.action.search;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.rest.RestRequest;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static org.elasticsearch.rest.RestRequest.Method.GET;\n+import static org.elasticsearch.rest.RestRequest.Method.POST;\n+\n+public class RestSearchActionV7 extends RestSearchAction {\n+    public static final String INCLUDE_TYPE_NAME_PARAMETER = \"include_type_name\";\n+    public static final String TYPES_DEPRECATION_MESSAGE = \"[types removal]\" + \" Specifying types in search requests is deprecated.\";\n+\n+    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(RestSearchAction.class));\n+\n+    @Override\n+    public List<Route> routes() {\n+        return List.of(\n+            new Route(GET, \"/_search\"),\n+            new Route(POST, \"/_search\"),\n+            new Route(GET, \"/{index}/_search\"),\n+            new Route(POST, \"/{index}/_search\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6184a9d07d97fb884601af6c0bb05b910b2e04c5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1NDQyMQ==", "bodyText": "non-typed endpoints ?", "url": "https://github.com/elastic/elasticsearch/pull/54572#discussion_r402554421", "createdAt": "2020-04-02T19:19:40Z", "author": {"login": "jakelandis"}, "path": "modules/rest-compatibility/src/main/java/org/elasticsearch/script/mustache/RestMultiSearchTemplateActionV7.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.script.mustache;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.elasticsearch.compat.TypeConsumer;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.logging.DeprecationLogger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.action.RestToXContentListener;\n+import org.elasticsearch.rest.action.search.RestMultiSearchAction;\n+import org.elasticsearch.rest.action.search.RestSearchAction;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static org.elasticsearch.rest.RestRequest.Method.GET;\n+import static org.elasticsearch.rest.RestRequest.Method.POST;\n+\n+public class RestMultiSearchTemplateActionV7 extends RestMultiSearchTemplateAction {\n+    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(\n+        LogManager.getLogger(RestMultiSearchTemplateAction.class)\n+    );\n+    static final String TYPES_DEPRECATION_MESSAGE = \"[types removal]\"\n+        + \" Specifying types in multi search template requests is deprecated.\";\n+\n+    public RestMultiSearchTemplateActionV7(Settings settings) {\n+        super(settings);\n+    }\n+\n+    @Override\n+    public String compatibleWithVersion() {\n+        return String.valueOf(Version.V_7_0_0.major);\n+    }\n+\n+    @Override\n+    public List<Route> routes() {\n+        return List.of(\n+            new Route(GET, \"/_msearch/template\"),\n+            new Route(POST, \"/_msearch/template\"),\n+            new Route(GET, \"/{index}/_msearch/template\"),\n+            new Route(POST, \"/{index}/_msearch/template\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6184a9d07d97fb884601af6c0bb05b910b2e04c5"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d998555f99189f305bce708946f0a72dcff9c1d0", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/d998555f99189f305bce708946f0a72dcff9c1d0", "committedDate": "2020-04-03T09:32:05Z", "message": "comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec8df43b08348e8edf9556a3cb3844aee18b69cc", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/ec8df43b08348e8edf9556a3cb3844aee18b69cc", "committedDate": "2020-04-03T11:25:47Z", "message": "remove unused constant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8602f6566dd0dc366358cf84bfd26f5bb508ecea", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/8602f6566dd0dc366358cf84bfd26f5bb508ecea", "committedDate": "2020-04-20T09:17:28Z", "message": "Merge branch 'compat_rest_api' into compat/create_index_include_type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2Mjg3NzY2", "url": "https://github.com/elastic/elasticsearch/pull/54572#pullrequestreview-396287766", "createdAt": "2020-04-20T09:29:05Z", "commit": {"oid": "d998555f99189f305bce708946f0a72dcff9c1d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwOToyOTowNlrOGILixw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwOToyOTowNlrOGILixw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIzMDkxOQ==", "bodyText": "these two dependencies are to allow making compatible versions of Actions from these modules", "url": "https://github.com/elastic/elasticsearch/pull/54572#discussion_r411230919", "createdAt": "2020-04-20T09:29:06Z", "author": {"login": "pgomulka"}, "path": "modules/rest-compatibility/build.gradle", "diffHunk": "@@ -19,7 +19,12 @@\n \n esplugin {\n   description 'Adds a compatiblity layer for the prior major versions REST API'\n-  classname 'org.elasticsearch.rest.compat.RestCompatPlugin'\n+  classname 'org.elasticsearch.compat.RestCompatPlugin'\n+}\n+\n+dependencies {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d998555f99189f305bce708946f0a72dcff9c1d0"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3d25e0e8667ab937889205a9006967e161b270a", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f3d25e0e8667ab937889205a9006967e161b270a", "committedDate": "2020-04-20T09:45:47Z", "message": "fix javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7024913f90f98f9aae7284b406c901545032f0b2", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/7024913f90f98f9aae7284b406c901545032f0b2", "committedDate": "2020-04-20T11:45:19Z", "message": "compile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "446c114a972a6d8a93459acd8c92af64a500c2e5", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/446c114a972a6d8a93459acd8c92af64a500c2e5", "committedDate": "2020-04-20T11:49:15Z", "message": "Merge branch 'compat/create_index_include_type' into compat/search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cafee2f346ac70b965f39a06d6c611858d32b650", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/cafee2f346ac70b965f39a06d6c611858d32b650", "committedDate": "2020-04-20T13:46:31Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f52dbc1de09ac72c4cb6ca3c5f69e10bcc6ff24c", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f52dbc1de09ac72c4cb6ca3c5f69e10bcc6ff24c", "committedDate": "2020-04-20T13:56:59Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b07539562a5cfc9e8cc128bea316d3a249974bf", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/0b07539562a5cfc9e8cc128bea316d3a249974bf", "committedDate": "2020-04-21T11:38:15Z", "message": "Merge branch 'compat_rest_api' into compat/create_index_include_type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07a5dbc65714f2754158979297634d2c9b261f60", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/07a5dbc65714f2754158979297634d2c9b261f60", "committedDate": "2020-04-21T11:44:43Z", "message": "Merge branch 'compat/create_index_include_type' into compat/search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "813579444254bced0082b7994642124ee27b4cc1", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/813579444254bced0082b7994642124ee27b4cc1", "committedDate": "2020-04-22T09:22:28Z", "message": "v7 name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2087c6a013742c3d7dbb154df6150ea50b66ab09", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/2087c6a013742c3d7dbb154df6150ea50b66ab09", "committedDate": "2020-04-22T09:36:40Z", "message": "Merge branch 'compat/create_index_include_type' into compat/search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e7ed6315a1f1ef65e361eea50da8f72fa40332f", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/7e7ed6315a1f1ef65e361eea50da8f72fa40332f", "committedDate": "2020-04-22T09:55:20Z", "message": "versions and names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81a62fe38400672c0d2ed278555c0774778b05a0", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/81a62fe38400672c0d2ed278555c0774778b05a0", "committedDate": "2020-04-22T10:26:38Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d65a4a26d09dde9e9d82f6f486f62d264651d531", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/d65a4a26d09dde9e9d82f6f486f62d264651d531", "committedDate": "2020-04-22T11:40:19Z", "message": "import fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adb1a1e6d6de18804910e6a6ca1d69f367b2e546", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/adb1a1e6d6de18804910e6a6ca1d69f367b2e546", "committedDate": "2020-04-22T13:33:28Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8193132a056cb9ebdf0b587f52a6096fa2d5967", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f8193132a056cb9ebdf0b587f52a6096fa2d5967", "committedDate": "2020-04-22T13:35:36Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e28d245c7e79681c5a092f45db50188e6d33e6d", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/6e28d245c7e79681c5a092f45db50188e6d33e6d", "committedDate": "2020-04-22T14:34:10Z", "message": "javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a77716e7a19bccff0c07e64c651b706133f23e65", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a77716e7a19bccff0c07e64c651b706133f23e65", "committedDate": "2020-04-23T16:11:46Z", "message": "Merge branch 'compat_rest_api' into compat/create_index_include_type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcf588c6ad0d3925ec0266ca3965e6fc6f601953", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/dcf588c6ad0d3925ec0266ca3965e6fc6f601953", "committedDate": "2020-04-23T16:23:02Z", "message": "Merge branch 'compat/create_index_include_type' into compat/search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da0edd76d567322d6e27de23ed63938048b0213b", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/da0edd76d567322d6e27de23ed63938048b0213b", "committedDate": "2020-04-28T13:31:15Z", "message": "Merge branch 'compat_rest_api' into compat/search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42b40ecd6cb6ebf8b661bf44be2df8fe8b56af95", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/42b40ecd6cb6ebf8b661bf44be2df8fe8b56af95", "committedDate": "2020-04-29T08:49:19Z", "message": "fix merge problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8912c6059433a7d23180afdb1acf43f6e2db7a23", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/8912c6059433a7d23180afdb1acf43f6e2db7a23", "committedDate": "2020-04-29T10:44:02Z", "message": "Merge branch 'compat_rest_api' into compat/search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c67db34489fc5c9c54e907e2325944528658a9b", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/6c67db34489fc5c9c54e907e2325944528658a9b", "committedDate": "2020-04-29T13:02:06Z", "message": "Merge branch 'compat_rest_api' into compat/search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a720c5510ce1253febd4d35f978e6afc9323c25", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/5a720c5510ce1253febd4d35f978e6afc9323c25", "committedDate": "2020-06-17T09:33:58Z", "message": "Merge branch 'compat_rest_api' into compat/search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f3158ce9725bc79e081505d7cc4ec67b8a53bb7", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/5f3158ce9725bc79e081505d7cc4ec67b8a53bb7", "committedDate": "2020-06-17T10:21:30Z", "message": "compile fix for deprecate method rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8b28d6e13e69aaed89f504f40cdca5a0f89666c", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/e8b28d6e13e69aaed89f504f40cdca5a0f89666c", "committedDate": "2020-07-07T08:55:07Z", "message": "Merge branch 'compat_rest_api' into compat/search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83afde4684d46f39209a9b3ac870eaf8fd29c553", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/83afde4684d46f39209a9b3ac870eaf8fd29c553", "committedDate": "2020-07-07T11:55:53Z", "message": "fix after merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "660f0868ce5b0ca2a63b1dda6336fba84e99ff83", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/660f0868ce5b0ca2a63b1dda6336fba84e99ff83", "committedDate": "2020-07-07T12:10:24Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f04044bfad536af90d8ee211384d3f716c76d2a", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/1f04044bfad536af90d8ee211384d3f716c76d2a", "committedDate": "2020-07-08T07:47:55Z", "message": "Merge branch 'compat_rest_api' into compat/search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24a44a8eff482ab3f2af34890f461c0e36b54ed0", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/24a44a8eff482ab3f2af34890f461c0e36b54ed0", "committedDate": "2020-07-08T13:13:05Z", "message": "Merge branch 'compat_rest_api' into compat/search"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1245, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}