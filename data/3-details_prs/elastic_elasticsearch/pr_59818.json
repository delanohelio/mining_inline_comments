{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxNTQ4Nzg2", "number": 59818, "title": "[DOCS] Fix data stream docs", "bodyText": "Updates the data streams documentation based on feedback.\nChanges:\n\nRemoves collapsible sections. Snippets are now visible without additional clicks.\nCombines the intro and overview pages\nReplaces several bulleted lists with headings and sections\nOverhauls the index template section of 'Set up a data stream'\n\nAny additional feedback is welcome.\nPreviews\n\nIntro: https://elasticsearch_59818.docs-preview.app.elstc.co/guide/en/elasticsearch/reference/master/data-streams.html\nSet up a data stream: https://elasticsearch_59818.docs-preview.app.elstc.co/guide/en/elasticsearch/reference/master/set-up-a-data-stream.html\nUse a data stream: https://elasticsearch_59818.docs-preview.app.elstc.co/guide/en/elasticsearch/reference/master/use-a-data-stream.html", "createdAt": "2020-07-17T23:32:54Z", "url": "https://github.com/elastic/elasticsearch/pull/59818", "merged": true, "mergeCommit": {"oid": "4a45c2dafbb5437f577e7b4339f12ac5e7f7910b"}, "closed": true, "closedAt": "2020-07-21T19:42:07Z", "author": {"login": "jrodewig"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc18eXCAH2gAyNDUxNTQ4Nzg2OjczMWE0NmRhODQwMDQ3MjllNGMwY2MzMTMyNDc1NTA2N2NmODNhYTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3KK4PgFqTQ1MjcwMzkxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "731a46da84004729e4c0cc31324755067cf83aa7", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/731a46da84004729e4c0cc31324755067cf83aa7", "committedDate": "2020-07-17T23:31:32Z", "message": "[DOCS] Fix data stream docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03064508500cf32c56bf138f2ae58082486e4f29", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/03064508500cf32c56bf138f2ae58082486e4f29", "committedDate": "2020-07-17T23:44:48Z", "message": "Remove another collapsible section"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9848378c650e98cff38520fb81d6aa15d1b7cabb", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/9848378c650e98cff38520fb81d6aa15d1b7cabb", "committedDate": "2020-07-18T00:54:48Z", "message": "wording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/6bc1c21fda765b138a401c4a366b3330ec7b4184", "committedDate": "2020-07-18T01:52:32Z", "message": "reword"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDIwMTE0", "url": "https://github.com/elastic/elasticsearch/pull/59818#pullrequestreview-452020114", "createdAt": "2020-07-20T23:10:55Z", "commit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoxMDo1NVrOG0iYNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoxMDo1NVrOG0iYNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0MjM4OQ==", "bodyText": "Would the more detailed information on supported APIs fit better in the 'Use a data stream' docs, to keep this shorter and high level?", "url": "https://github.com/elastic/elasticsearch/pull/59818#discussion_r457742389", "createdAt": "2020-07-20T23:10:55Z", "author": {"login": "jtibshirani"}, "path": "docs/reference/data-streams/data-streams.asciidoc", "diffHunk": "@@ -47,16 +46,152 @@ We recommend using data streams if you:\n \n \n [discrete]\n-[[data-streams-toc]]\n-== In this section\n+[[backing-indices]]\n+== Backing indices\n+A data stream consists of one or more _backing indices_. Backing indices are\n+<<index-hidden,hidden>>, auto-generated indices used to store a stream's\n+documents.\n \n-* <<data-streams-overview>>\n-* <<set-up-a-data-stream>>\n-* <<use-a-data-stream>>\n-* <<data-streams-change-mappings-and-settings>>\n+image::images/data-streams/data-streams-diagram.svg[align=\"center\"]\n \n+To create backing indices, each data stream requires a matching\n+<<indices-templates,index template>>. This template acts as a blueprint for the\n+stream's backing indices. It contains:\n+\n+* The mappings and settings applied to each backing index when it's created.\n+\n+* A name or wildcard (`*`) pattern that matches the data stream's name.\n+\n+* A `data_stream` object with an empty body (`{ }`). This object indicates the\n+template is used for data streams.\n+\n+A `@timestamp` field must be included in every document indexed to the data\n+stream. This field can be mapped as a <<date,`date`>> or\n+<<date_nanos,`date_nanos`>> field data type in the stream's matching index\n+template. If no mapping is specified in the template, the `date` field data type\n+with default options is used.\n+\n+The same index template can be used to create multiple data streams.\n+\n+\n+[discrete]\n+[[data-streams-generation]]\n+== Generation\n+\n+Each data stream tracks its _generation_: a six-digit, zero-padded integer\n+that acts as a cumulative count of the data stream's backing indices. This count\n+includes any deleted indices for the stream. The generation is incremented\n+whenever a new backing index is added to the stream.\n+\n+When a backing index is created, the index is named using the following\n+convention:\n+\n+[source,text]\n+----\n+.ds-<data-stream>-<generation>\n+----\n+\n+For example, the `web_server_logs` data stream has a generation of `34`. The\n+most recently created backing index for this data stream is named\n+`.ds-web_server_logs-000034`.\n+\n+Because the generation increments with each new backing index, backing indices\n+with a higher generation contain more recent data. Backing indices with a lower\n+generation contain older data.\n+\n+A backing index's name can change after its creation due to a\n+<<indices-shrink-index,shrink>>, <<snapshots-restore-snapshot,restore>>, or\n+other operations.\n+\n+[discrete]\n+[[data-stream-write-index]]\n+== Write index\n+\n+When a read request is sent to a data stream, it routes the request to all its\n+backing indices. For example, a search request sent to a data stream would query\n+all its backing indices.\n+\n+image::images/data-streams/data-streams-search-request.svg[align=\"center\"]\n+\n+However, the most recently created backing index is the data stream\u2019s only\n+_write index_. The data stream routes all indexing requests for new documents to\n+this index.\n+\n+image::images/data-streams/data-streams-index-request.svg[align=\"center\"]\n+\n+You cannot add new documents to a stream's other backing indices, even by\n+sending requests directly to the index. This means you cannot submit the\n+following requests directly to any backing index except the write index:\n+\n+* An <<docs-index_,index API>> request with an\n+  <<docs-index-api-op_type,`op_type`>> of `create`. The `op_type` parameter\n+  defaults to `create` when adding new documents.\n+* A <<docs-bulk,bulk API>> request using a `create` action\n+\n+Because it's the only index capable of ingesting new documents, you cannot\n+perform operations on a write index that might hinder indexing. These\n+prohibited operations include:\n+\n+* <<indices-clone-index,Clone>>\n+* <<indices-close,Close>>\n+* <<indices-delete-index,Delete>>\n+* <<freeze-index-api,Freeze>>\n+* <<indices-shrink-index,Shrink>>\n+* <<indices-split-index,Split>>\n+\n+[discrete]\n+[[data-streams-rollover]]\n+== Rollover\n+\n+When a data stream is created, one backing index is automatically created.\n+Because this single index is also the most recently created backing index, it\n+acts as the stream's write index.\n+\n+A <<indices-rollover-index,rollover>> creates a new backing index for a data\n+stream. This new backing index becomes the stream's write index, replacing\n+the current one, and increments the stream's generation.\n+\n+In most cases, we recommend using <<index-lifecycle-management,{ilm}\n+({ilm-init})>> to automate rollovers for data streams. This lets you\n+automatically roll over the current write index when it meets specified\n+criteria, such as a maximum age or size.\n+\n+However, you can also use the <<indices-rollover-index,rollover API>> to\n+manually perform a rollover. See <<manually-roll-over-a-data-stream>>.\n+\n+[discrete]\n+[[data-streams-append-only]]\n+== Append-only\n+\n+For most time-series use cases, existing data is rarely, if ever, updated.\n+Because of this, data streams are designed to be append-only.\n+\n+You can send <<add-documents-to-a-data-stream,indexing requests for new", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "originalPosition": 155}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDAzNTgw", "url": "https://github.com/elastic/elasticsearch/pull/59818#pullrequestreview-452003580", "createdAt": "2020-07-20T22:30:33Z", "commit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "state": "APPROVED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMjozMDozM1rOG0hgBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzozMToyNFrOG0ixDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcyODAwNQ==", "bodyText": "I don't think \"scale\" is quite right here. Maybe \"to manage the backing indices associated with a data stream\"?\nAlso, it feels awkward to lead with an optional non-data stream step. I see why you did, but maybe if it's referenced from the template set up, it could be moved down?", "url": "https://github.com/elastic/elasticsearch/pull/59818#discussion_r457728005", "createdAt": "2020-07-20T22:30:33Z", "author": {"login": "debadair"}, "path": "docs/reference/data-streams/set-up-a-data-stream.asciidoc", "diffHunk": "@@ -52,9 +52,6 @@ triggers for such actions.\n TIP: While optional, we recommend using {ilm-init} to scale data streams in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcyODY3NQ==", "bodyText": "I'd lead with why you need the template, rather than the fact that it's required. Something like:\nA data stream uses an index template to configure its backing indices. A template for a data stream must specify:\n\nAn index pattern that matches the name of the stream.\nAn empty data_stream object that indicates the template is for a data stream.\nThe settings, mappings, and aliases for the stream's backing indices.", "url": "https://github.com/elastic/elasticsearch/pull/59818#discussion_r457728675", "createdAt": "2020-07-20T22:32:34Z", "author": {"login": "debadair"}, "path": "docs/reference/data-streams/set-up-a-data-stream.asciidoc", "diffHunk": "@@ -86,83 +83,40 @@ PUT /_ilm/policy/logs_policy\n   }\n }\n ----\n-====\n \n \n [discrete]\n [[create-a-data-stream-template]]\n === Create an index template for a data stream\n \n-Each data stream requires an <<indices-templates,index template>>. The data\n-stream uses this template to create its backing indices.\n+Each data stream requires a matching <<indices-templates,index template>>. The", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczNjUwMw==", "bodyText": "I'd flip this around.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A `@timestamp` field must be included in every document indexed to the data\n          \n          \n            \n            stream. This field can be mapped as a <<date,`date`>> or\n          \n          \n            \n            <<date_nanos,`date_nanos`>> field data type in the stream's matching index\n          \n          \n            \n            template. This mapping can include other <<mapping-params,mapping parameters>>,\n          \n          \n            \n            such as <<mapping-date-format,`format`>>. If no mapping is specified in the\n          \n          \n            \n            template, the `date` field data type with default options is used.\n          \n          \n            \n            Every document indexed to a data\n          \n          \n            \n            stream must have a `@timestamp` field. The timestamp can be mapped as a <<date,`date`>> or\n          \n          \n            \n            <<date_nanos,`date_nanos`>> field by the stream's index\n          \n          \n            \n            template. The template can also configure <<mapping-params,Mapping parameters>>,\n          \n          \n            \n            such as <<mapping-date-format,`format`>>. If the template does not define a mapping, the timestamp is mapped to a `date` field by default.", "url": "https://github.com/elastic/elasticsearch/pull/59818#discussion_r457736503", "createdAt": "2020-07-20T22:53:18Z", "author": {"login": "debadair"}, "path": "docs/reference/data-streams/set-up-a-data-stream.asciidoc", "diffHunk": "@@ -86,83 +83,40 @@ PUT /_ilm/policy/logs_policy\n   }\n }\n ----\n-====\n \n \n [discrete]\n [[create-a-data-stream-template]]\n === Create an index template for a data stream\n \n-Each data stream requires an <<indices-templates,index template>>. The data\n-stream uses this template to create its backing indices.\n+Each data stream requires a matching <<indices-templates,index template>>. The\n+data stream uses this template to apply settings and mappings to its backing\n+indices. This index template contains:\n \n-An index template for a data stream must contain:\n+* The mappings and settings you'd like to apply to the stream's backing indices.\n \n-* A name or wildcard (`*`) pattern for the data stream in the `index_patterns`\n-property.\n-+\n-You can use the resolve index API to check if the name or pattern\n-matches any existing indices, index aliases, or data streams. If so, you should\n-consider using another name or pattern.\n-+\n-.*Example*\n-[%collapsible]\n-====\n-The following resolve index API request checks for any existing indices, index\n-aliases, or data streams that start with `logs`. If not, the `logs*`\n-wildcard pattern can be used to create a new data stream.\n-\n-[source,console]\n-----\n-GET /_resolve/index/logs*\n-----\n-// TEST[continued]\n-\n-The API returns the following response, indicating no existing targets match\n-this pattern.\n-\n-[source,console-result]\n-----\n-{\n-  \"indices\" : [ ],\n-  \"aliases\" : [ ],\n-  \"data_streams\" : [ ]\n-}\n-----\n-====\n+* A name or wildcard (`*`) pattern that matches the data stream's name in the\n+`index_patterns` property.\n \n-* A `data_stream` object with an empty body (`{ }`).\n+* A required `data_stream` object with an empty body (`{ }`).  This object\n+indicates the template is used for data streams.\n \n-The template can also contain:\n+A `@timestamp` field must be included in every document indexed to the data\n+stream. This field can be mapped as a <<date,`date`>> or\n+<<date_nanos,`date_nanos`>> field data type in the stream's matching index\n+template. This mapping can include other <<mapping-params,mapping parameters>>,\n+such as <<mapping-date-format,`format`>>. If no mapping is specified in the\n+template, the `date` field data type with default options is used.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczNzQ0OQ==", "bodyText": "Do we want to make a stronger statement here? \"We recommend using ILM to manage a data stream's backing indices. Specify the name of the lifecycle policy with the index.lifecycle.name setting.\"", "url": "https://github.com/elastic/elasticsearch/pull/59818#discussion_r457737449", "createdAt": "2020-07-20T22:56:05Z", "author": {"login": "debadair"}, "path": "docs/reference/data-streams/set-up-a-data-stream.asciidoc", "diffHunk": "@@ -86,83 +83,40 @@ PUT /_ilm/policy/logs_policy\n   }\n }\n ----\n-====\n \n \n [discrete]\n [[create-a-data-stream-template]]\n === Create an index template for a data stream\n \n-Each data stream requires an <<indices-templates,index template>>. The data\n-stream uses this template to create its backing indices.\n+Each data stream requires a matching <<indices-templates,index template>>. The\n+data stream uses this template to apply settings and mappings to its backing\n+indices. This index template contains:\n \n-An index template for a data stream must contain:\n+* The mappings and settings you'd like to apply to the stream's backing indices.\n \n-* A name or wildcard (`*`) pattern for the data stream in the `index_patterns`\n-property.\n-+\n-You can use the resolve index API to check if the name or pattern\n-matches any existing indices, index aliases, or data streams. If so, you should\n-consider using another name or pattern.\n-+\n-.*Example*\n-[%collapsible]\n-====\n-The following resolve index API request checks for any existing indices, index\n-aliases, or data streams that start with `logs`. If not, the `logs*`\n-wildcard pattern can be used to create a new data stream.\n-\n-[source,console]\n-----\n-GET /_resolve/index/logs*\n-----\n-// TEST[continued]\n-\n-The API returns the following response, indicating no existing targets match\n-this pattern.\n-\n-[source,console-result]\n-----\n-{\n-  \"indices\" : [ ],\n-  \"aliases\" : [ ],\n-  \"data_streams\" : [ ]\n-}\n-----\n-====\n+* A name or wildcard (`*`) pattern that matches the data stream's name in the\n+`index_patterns` property.\n \n-* A `data_stream` object with an empty body (`{ }`).\n+* A required `data_stream` object with an empty body (`{ }`).  This object\n+indicates the template is used for data streams.\n \n-The template can also contain:\n+A `@timestamp` field must be included in every document indexed to the data\n+stream. This field can be mapped as a <<date,`date`>> or\n+<<date_nanos,`date_nanos`>> field data type in the stream's matching index\n+template. This mapping can include other <<mapping-params,mapping parameters>>,\n+such as <<mapping-date-format,`format`>>. If no mapping is specified in the\n+template, the `date` field data type with default options is used.\n \n-* An optional field mapping for the `@timestamp` field. Both the <<date,`date`>> and\n-<<date_nanos,`date_nanos`>> field data types are supported. If no mapping is specified,\n-a <<date,`date`>> field data type with default options is used.\n-+\n-This mapping can include other <<mapping-params,mapping parameters>>, such as\n-<<mapping-date-format,`format`>>.\n-+\n-IMPORTANT: Carefully consider the `@timestamp` field's mapping, including\n-its <<mapping-params,mapping parameters>>.\n-Once the stream is created, you can only update the `@timestamp` field's mapping\n-by reindexing the data stream. See\n-<<data-streams-use-reindex-to-change-mappings-settings>>.\n-\n-* If you intend to use {ilm-init}, the\n-  <<configure-a-data-stream-ilm-policy,lifecycle policy>> in the\n-  `index.lifecycle.name` setting.\n-\n-You can also specify other mappings and settings you'd like to apply to the\n-stream's backing indices.\n+If you intend to use {ilm-init}, include the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczODYxMQ==", "bodyText": "You don't really create a data stream with a template & needing a template for a data stream is kind of orthogonal to how you create a data stream. However, if attempting to create a data stream without a matching template fails, I'd call that out after the two options.", "url": "https://github.com/elastic/elasticsearch/pull/59818#discussion_r457738611", "createdAt": "2020-07-20T22:59:48Z", "author": {"login": "debadair"}, "path": "docs/reference/data-streams/set-up-a-data-stream.asciidoc", "diffHunk": "@@ -220,21 +173,24 @@ This would prevent the data stream from creating new backing indices.\n With an index template, you can create a data stream using one of two", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0MjcxNw==", "bodyText": "Maybe:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A backing index's name can change after its creation due to a\n          \n          \n            \n            <<indices-shrink-index,shrink>>, <<snapshots-restore-snapshot,restore>>, or\n          \n          \n            \n            other operations.\n          \n          \n            \n            Performing operations such as a <<indices-shrink-index,shrink>> or <<snapshots-restore-snapshot,restore>> can change the name of a backing index.\n          \n      \n    \n    \n  \n\nIt feels like maybe there's another point here--like changing the name of a backing index sort of \"detaches\" it from the data stream.", "url": "https://github.com/elastic/elasticsearch/pull/59818#discussion_r457742717", "createdAt": "2020-07-20T23:11:59Z", "author": {"login": "debadair"}, "path": "docs/reference/data-streams/data-streams.asciidoc", "diffHunk": "@@ -47,16 +46,152 @@ We recommend using data streams if you:\n \n \n [discrete]\n-[[data-streams-toc]]\n-== In this section\n+[[backing-indices]]\n+== Backing indices\n+A data stream consists of one or more _backing indices_. Backing indices are\n+<<index-hidden,hidden>>, auto-generated indices used to store a stream's\n+documents.\n \n-* <<data-streams-overview>>\n-* <<set-up-a-data-stream>>\n-* <<use-a-data-stream>>\n-* <<data-streams-change-mappings-and-settings>>\n+image::images/data-streams/data-streams-diagram.svg[align=\"center\"]\n \n+To create backing indices, each data stream requires a matching\n+<<indices-templates,index template>>. This template acts as a blueprint for the\n+stream's backing indices. It contains:\n+\n+* The mappings and settings applied to each backing index when it's created.\n+\n+* A name or wildcard (`*`) pattern that matches the data stream's name.\n+\n+* A `data_stream` object with an empty body (`{ }`). This object indicates the\n+template is used for data streams.\n+\n+A `@timestamp` field must be included in every document indexed to the data\n+stream. This field can be mapped as a <<date,`date`>> or\n+<<date_nanos,`date_nanos`>> field data type in the stream's matching index\n+template. If no mapping is specified in the template, the `date` field data type\n+with default options is used.\n+\n+The same index template can be used to create multiple data streams.\n+\n+\n+[discrete]\n+[[data-streams-generation]]\n+== Generation\n+\n+Each data stream tracks its _generation_: a six-digit, zero-padded integer\n+that acts as a cumulative count of the data stream's backing indices. This count\n+includes any deleted indices for the stream. The generation is incremented\n+whenever a new backing index is added to the stream.\n+\n+When a backing index is created, the index is named using the following\n+convention:\n+\n+[source,text]\n+----\n+.ds-<data-stream>-<generation>\n+----\n+\n+For example, the `web_server_logs` data stream has a generation of `34`. The\n+most recently created backing index for this data stream is named\n+`.ds-web_server_logs-000034`.\n+\n+Because the generation increments with each new backing index, backing indices\n+with a higher generation contain more recent data. Backing indices with a lower\n+generation contain older data.\n+\n+A backing index's name can change after its creation due to a\n+<<indices-shrink-index,shrink>>, <<snapshots-restore-snapshot,restore>>, or\n+other operations.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0MzQzMA==", "bodyText": "I would lead with this part and move the part about federating the search across all of the backing indices afterward. Otherwise, it's a bit jarring to start reading about read requests in a section about write requests.", "url": "https://github.com/elastic/elasticsearch/pull/59818#discussion_r457743430", "createdAt": "2020-07-20T23:14:21Z", "author": {"login": "debadair"}, "path": "docs/reference/data-streams/data-streams.asciidoc", "diffHunk": "@@ -47,16 +46,152 @@ We recommend using data streams if you:\n \n \n [discrete]\n-[[data-streams-toc]]\n-== In this section\n+[[backing-indices]]\n+== Backing indices\n+A data stream consists of one or more _backing indices_. Backing indices are\n+<<index-hidden,hidden>>, auto-generated indices used to store a stream's\n+documents.\n \n-* <<data-streams-overview>>\n-* <<set-up-a-data-stream>>\n-* <<use-a-data-stream>>\n-* <<data-streams-change-mappings-and-settings>>\n+image::images/data-streams/data-streams-diagram.svg[align=\"center\"]\n \n+To create backing indices, each data stream requires a matching\n+<<indices-templates,index template>>. This template acts as a blueprint for the\n+stream's backing indices. It contains:\n+\n+* The mappings and settings applied to each backing index when it's created.\n+\n+* A name or wildcard (`*`) pattern that matches the data stream's name.\n+\n+* A `data_stream` object with an empty body (`{ }`). This object indicates the\n+template is used for data streams.\n+\n+A `@timestamp` field must be included in every document indexed to the data\n+stream. This field can be mapped as a <<date,`date`>> or\n+<<date_nanos,`date_nanos`>> field data type in the stream's matching index\n+template. If no mapping is specified in the template, the `date` field data type\n+with default options is used.\n+\n+The same index template can be used to create multiple data streams.\n+\n+\n+[discrete]\n+[[data-streams-generation]]\n+== Generation\n+\n+Each data stream tracks its _generation_: a six-digit, zero-padded integer\n+that acts as a cumulative count of the data stream's backing indices. This count\n+includes any deleted indices for the stream. The generation is incremented\n+whenever a new backing index is added to the stream.\n+\n+When a backing index is created, the index is named using the following\n+convention:\n+\n+[source,text]\n+----\n+.ds-<data-stream>-<generation>\n+----\n+\n+For example, the `web_server_logs` data stream has a generation of `34`. The\n+most recently created backing index for this data stream is named\n+`.ds-web_server_logs-000034`.\n+\n+Because the generation increments with each new backing index, backing indices\n+with a higher generation contain more recent data. Backing indices with a lower\n+generation contain older data.\n+\n+A backing index's name can change after its creation due to a\n+<<indices-shrink-index,shrink>>, <<snapshots-restore-snapshot,restore>>, or\n+other operations.\n+\n+[discrete]\n+[[data-stream-write-index]]\n+== Write index\n+\n+When a read request is sent to a data stream, it routes the request to all its\n+backing indices. For example, a search request sent to a data stream would query\n+all its backing indices.\n+\n+image::images/data-streams/data-streams-search-request.svg[align=\"center\"]\n+\n+However, the most recently created backing index is the data stream\u2019s only", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0NTIwNQ==", "bodyText": "I might say, \"If necessary\" rather than \"Alternatively\". It seems like we don't want to encourage folks to directly poke at the backing indices. Their interactions should be almost always be through the data stream, I would think.", "url": "https://github.com/elastic/elasticsearch/pull/59818#discussion_r457745205", "createdAt": "2020-07-20T23:19:58Z", "author": {"login": "debadair"}, "path": "docs/reference/data-streams/data-streams.asciidoc", "diffHunk": "@@ -47,16 +46,152 @@ We recommend using data streams if you:\n \n \n [discrete]\n-[[data-streams-toc]]\n-== In this section\n+[[backing-indices]]\n+== Backing indices\n+A data stream consists of one or more _backing indices_. Backing indices are\n+<<index-hidden,hidden>>, auto-generated indices used to store a stream's\n+documents.\n \n-* <<data-streams-overview>>\n-* <<set-up-a-data-stream>>\n-* <<use-a-data-stream>>\n-* <<data-streams-change-mappings-and-settings>>\n+image::images/data-streams/data-streams-diagram.svg[align=\"center\"]\n \n+To create backing indices, each data stream requires a matching\n+<<indices-templates,index template>>. This template acts as a blueprint for the\n+stream's backing indices. It contains:\n+\n+* The mappings and settings applied to each backing index when it's created.\n+\n+* A name or wildcard (`*`) pattern that matches the data stream's name.\n+\n+* A `data_stream` object with an empty body (`{ }`). This object indicates the\n+template is used for data streams.\n+\n+A `@timestamp` field must be included in every document indexed to the data\n+stream. This field can be mapped as a <<date,`date`>> or\n+<<date_nanos,`date_nanos`>> field data type in the stream's matching index\n+template. If no mapping is specified in the template, the `date` field data type\n+with default options is used.\n+\n+The same index template can be used to create multiple data streams.\n+\n+\n+[discrete]\n+[[data-streams-generation]]\n+== Generation\n+\n+Each data stream tracks its _generation_: a six-digit, zero-padded integer\n+that acts as a cumulative count of the data stream's backing indices. This count\n+includes any deleted indices for the stream. The generation is incremented\n+whenever a new backing index is added to the stream.\n+\n+When a backing index is created, the index is named using the following\n+convention:\n+\n+[source,text]\n+----\n+.ds-<data-stream>-<generation>\n+----\n+\n+For example, the `web_server_logs` data stream has a generation of `34`. The\n+most recently created backing index for this data stream is named\n+`.ds-web_server_logs-000034`.\n+\n+Because the generation increments with each new backing index, backing indices\n+with a higher generation contain more recent data. Backing indices with a lower\n+generation contain older data.\n+\n+A backing index's name can change after its creation due to a\n+<<indices-shrink-index,shrink>>, <<snapshots-restore-snapshot,restore>>, or\n+other operations.\n+\n+[discrete]\n+[[data-stream-write-index]]\n+== Write index\n+\n+When a read request is sent to a data stream, it routes the request to all its\n+backing indices. For example, a search request sent to a data stream would query\n+all its backing indices.\n+\n+image::images/data-streams/data-streams-search-request.svg[align=\"center\"]\n+\n+However, the most recently created backing index is the data stream\u2019s only\n+_write index_. The data stream routes all indexing requests for new documents to\n+this index.\n+\n+image::images/data-streams/data-streams-index-request.svg[align=\"center\"]\n+\n+You cannot add new documents to a stream's other backing indices, even by\n+sending requests directly to the index. This means you cannot submit the\n+following requests directly to any backing index except the write index:\n+\n+* An <<docs-index_,index API>> request with an\n+  <<docs-index-api-op_type,`op_type`>> of `create`. The `op_type` parameter\n+  defaults to `create` when adding new documents.\n+* A <<docs-bulk,bulk API>> request using a `create` action\n+\n+Because it's the only index capable of ingesting new documents, you cannot\n+perform operations on a write index that might hinder indexing. These\n+prohibited operations include:\n+\n+* <<indices-clone-index,Clone>>\n+* <<indices-close,Close>>\n+* <<indices-delete-index,Delete>>\n+* <<freeze-index-api,Freeze>>\n+* <<indices-shrink-index,Shrink>>\n+* <<indices-split-index,Split>>\n+\n+[discrete]\n+[[data-streams-rollover]]\n+== Rollover\n+\n+When a data stream is created, one backing index is automatically created.\n+Because this single index is also the most recently created backing index, it\n+acts as the stream's write index.\n+\n+A <<indices-rollover-index,rollover>> creates a new backing index for a data\n+stream. This new backing index becomes the stream's write index, replacing\n+the current one, and increments the stream's generation.\n+\n+In most cases, we recommend using <<index-lifecycle-management,{ilm}\n+({ilm-init})>> to automate rollovers for data streams. This lets you\n+automatically roll over the current write index when it meets specified\n+criteria, such as a maximum age or size.\n+\n+However, you can also use the <<indices-rollover-index,rollover API>> to\n+manually perform a rollover. See <<manually-roll-over-a-data-stream>>.\n+\n+[discrete]\n+[[data-streams-append-only]]\n+== Append-only\n+\n+For most time-series use cases, existing data is rarely, if ever, updated.\n+Because of this, data streams are designed to be append-only.\n+\n+You can send <<add-documents-to-a-data-stream,indexing requests for new\n+documents>> directly to a data stream. However, you cannot send the following\n+requests for existing documents directly to a data stream:\n+\n+* An <<docs-index_,index API>> request with an\n+  <<docs-index-api-op_type,`op_type`>> of `index`. The `op_type` parameter\n+  defaults to `index` for existing documents.\n+\n+* A <<docs-bulk,bulk API>> request using the `delete`, `index`, or `update`\n+  action.\n+\n+* A <<docs-delete,delete API>> request\n+\n+Instead, you can use the <<docs-update-by-query,update by query>> and\n+<<docs-delete-by-query,delete by query>> APIs to update or delete existing\n+documents in a data stream. See <<update-docs-in-a-data-stream-by-query>> and <<delete-docs-in-a-data-stream-by-query>>.\n+\n+Alternatively, you can update or delete a document by submitting requests to the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0ODc0OA==", "bodyText": "Maybe Data stream generations? On it's own, it brings to mind generating data streams.", "url": "https://github.com/elastic/elasticsearch/pull/59818#discussion_r457748748", "createdAt": "2020-07-20T23:31:24Z", "author": {"login": "debadair"}, "path": "docs/reference/data-streams/data-streams.asciidoc", "diffHunk": "@@ -47,16 +46,152 @@ We recommend using data streams if you:\n \n \n [discrete]\n-[[data-streams-toc]]\n-== In this section\n+[[backing-indices]]\n+== Backing indices\n+A data stream consists of one or more _backing indices_. Backing indices are\n+<<index-hidden,hidden>>, auto-generated indices used to store a stream's\n+documents.\n \n-* <<data-streams-overview>>\n-* <<set-up-a-data-stream>>\n-* <<use-a-data-stream>>\n-* <<data-streams-change-mappings-and-settings>>\n+image::images/data-streams/data-streams-diagram.svg[align=\"center\"]\n \n+To create backing indices, each data stream requires a matching\n+<<indices-templates,index template>>. This template acts as a blueprint for the\n+stream's backing indices. It contains:\n+\n+* The mappings and settings applied to each backing index when it's created.\n+\n+* A name or wildcard (`*`) pattern that matches the data stream's name.\n+\n+* A `data_stream` object with an empty body (`{ }`). This object indicates the\n+template is used for data streams.\n+\n+A `@timestamp` field must be included in every document indexed to the data\n+stream. This field can be mapped as a <<date,`date`>> or\n+<<date_nanos,`date_nanos`>> field data type in the stream's matching index\n+template. If no mapping is specified in the template, the `date` field data type\n+with default options is used.\n+\n+The same index template can be used to create multiple data streams.\n+\n+\n+[discrete]\n+[[data-streams-generation]]\n+== Generation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc1c21fda765b138a401c4a366b3330ec7b4184"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dce3369a1718adcbb803fb057e3be456f199f99", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/7dce3369a1718adcbb803fb057e3be456f199f99", "committedDate": "2020-07-21T15:58:58Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78ac57964da0d9a477398cffca497982444a967f", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/78ac57964da0d9a477398cffca497982444a967f", "committedDate": "2020-07-21T16:01:44Z", "message": "reword"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55bc76007a77d9dc0274931df6e246540af292c7", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/55bc76007a77d9dc0274931df6e246540af292c7", "committedDate": "2020-07-21T16:21:51Z", "message": "Merge branch 'master' into docs__ds-feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "249cb83671b2e247d95f2cc12940526cf8600f9b", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/249cb83671b2e247d95f2cc12940526cf8600f9b", "committedDate": "2020-07-21T17:39:15Z", "message": "reorg based on feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1351ace4052d5d9fc8dc8d18ee03844dba0aea7", "author": {"user": {"login": "jrodewig", "name": "James Rodewig"}}, "url": "https://github.com/elastic/elasticsearch/commit/e1351ace4052d5d9fc8dc8d18ee03844dba0aea7", "committedDate": "2020-07-21T17:40:32Z", "message": "fix xref"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNzAzOTEy", "url": "https://github.com/elastic/elasticsearch/pull/59818#pullrequestreview-452703912", "createdAt": "2020-07-21T18:02:51Z", "commit": {"oid": "e1351ace4052d5d9fc8dc8d18ee03844dba0aea7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4220, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}