{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2ODU1ODcz", "number": 63173, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzozODozNFrOErnlCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzozODozNFrOErnlCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTcyNjgzOnYy", "diffSide": "RIGHT", "path": "buildSrc/src/integTest/groovy/org/elasticsearch/gradle/internal/InternalBwcGitPluginFuncTest.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzozODozNFrOHefBeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzozODozNFrOHefBeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcyNzYwOQ==", "bodyText": "@jakelandis this functional test basically shows an example on how to resolve the checkoutDir as artifact. you can declare a dependency in the es build by declaring\ndependencies {\n    myConfig project(path:':distribution:bwc:minor', configuration:'checkoutDir')\n}", "url": "https://github.com/elastic/elasticsearch/pull/63173#discussion_r501727609", "createdAt": "2020-10-08T13:38:34Z", "author": {"login": "breskeby"}, "path": "buildSrc/src/integTest/groovy/org/elasticsearch/gradle/internal/InternalBwcGitPluginFuncTest.groovy", "diffHunk": "@@ -19,33 +19,60 @@\n \n package org.elasticsearch.gradle.internal\n \n-import org.elasticsearch.gradle.fixtures.AbstractGradleFuncTest\n+import org.elasticsearch.gradle.fixtures.AbstractGitAwareGradleFuncTest\n import org.gradle.testkit.runner.TaskOutcome\n \n-class InternalBwcGitPluginFuncTest extends AbstractGradleFuncTest {\n+class InternalBwcGitPluginFuncTest extends AbstractGitAwareGradleFuncTest {\n \n     def setup() {\n-        setupLocalGitRepo()\n-    }\n-\n-    def \"current repository can be cloned\"() {\n-        given:\n-        internalBuild();\n+        internalBuild()\n         buildFile << \"\"\"\n             import org.elasticsearch.gradle.Version;\n             apply plugin: org.elasticsearch.gradle.internal.InternalBwcGitPlugin  \n             \n             bwcGitConfig {\n-                 bwcVersion = project.provider { Version.fromString(\"7.10.0\") }\n-                 bwcBranch = project.provider { \"7.x\" }\n+                 bwcVersion = project.provider { Version.fromString(\"8.1.0\") }\n+                 bwcBranch = project.provider { \"8.0\" }\n                  checkoutDir = project.provider{file(\"build/checkout\")}\n             }\n         \"\"\"\n+    }\n+\n+    def \"current repository can be cloned\"() {\n         when:\n         def result = gradleRunner(\"createClone\", '--stacktrace').build()\n         then:\n         result.task(\":createClone\").outcome == TaskOutcome.SUCCESS\n-        file(\"build/checkout/build.gradle\").exists()\n-        file(\"build/checkout/settings.gradle\").exists()\n+        file(\"cloned/build/checkout/build.gradle\").exists()\n+        file(\"cloned/build/checkout/settings.gradle\").exists()\n+    }\n+\n+    def \"can resolve checkout folder as project artifact\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1807ec0436d6a7faac86eb68f11f2eb256a97e37"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3234, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}