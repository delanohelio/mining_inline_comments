{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MTg2ODgw", "number": 64751, "title": "Add plugin permission validation", "bodyText": "Security manager policies within plugins currently can ask to grant any\npermission (though we block some within the security manager itself at\nruntime). Yet most of these permissions should never be necessary, and\nsome we would actively not want any plugins to be allowed to use. This\ncommit adds validation of plugins' policy files to restrict the\npermissions allowed to be granted to a subset that is reasonable for\nplugins to need. The allowed permissions are not ideal (still containing\nthings like suppressAccessChecks), but it is a step forward in defining\na stricter model for plugins that reduces the surface area of potential\nabuse.", "createdAt": "2020-11-07T20:13:02Z", "url": "https://github.com/elastic/elasticsearch/pull/64751", "merged": true, "mergeCommit": {"oid": "23a47cebf166126f5b640eb03c232d75011f5e15"}, "closed": true, "closedAt": "2020-11-19T22:21:35Z", "author": {"login": "rjernst"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdaRWt-AH2gAyNTE3MTg2ODgwOjcxNzFlNzQyYjNlNTQ5YmY0MTliOTRmOWQ0MmMxYWFiMzU3ZDYwYTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeGY_AgFqTUzNDY5Mjc5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7171e742b3e549bf419b94f9d42c1aab357d60a2", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/7171e742b3e549bf419b94f9d42c1aab357d60a2", "committedDate": "2020-11-07T20:12:28Z", "message": "Add plugin permission validation\n\nSecurity manager policies within plugins currently can ask to grant any\npermission (though we block some within the security manager itself at\nruntime). Yet most of these permissions should never be necessary, and\nsome we would actively not want any plugins to be allowed to use. This\ncommit adds validation of plugins' policy files to restrict the\npermissions allowed to be granted to a subset that is reasonable for\nplugins to need. The allowed permissions are not ideal (still containing\nthings like suppressAccessChecks), but it is a step forward in defining\na stricter model for plugins that reduces the surface area of potential\nabuse."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f441fbb61be04756e628fb91c8b3c2b2ecbfc430", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/f441fbb61be04756e628fb91c8b3c2b2ecbfc430", "committedDate": "2020-11-07T20:25:59Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "531ae66a17ad85bf9e535155f242f873a9d30e01", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/531ae66a17ad85bf9e535155f242f873a9d30e01", "committedDate": "2020-11-07T20:38:24Z", "message": "allow scripting class permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "316e62176f78230f5b26a65cea8f106f4026977e", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/316e62176f78230f5b26a65cea8f106f4026977e", "committedDate": "2020-11-08T22:59:12Z", "message": "forbidden apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1098ff96d572cd9f8a415e68ecdc3634aca6907c", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/1098ff96d572cd9f8a415e68ecdc3634aca6907c", "committedDate": "2020-11-08T22:59:22Z", "message": "fix rest test to install xpack as modules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2703a60705a5250d1d059b6f9897a478e0e8324", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/b2703a60705a5250d1d059b6f9897a478e0e8324", "committedDate": "2020-11-09T16:29:58Z", "message": "fix permission definition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8e9847c59dab69ac33490ee2a54bc30b19a98f2", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/a8e9847c59dab69ac33490ee2a54bc30b19a98f2", "committedDate": "2020-11-09T17:34:44Z", "message": "remove unneeded perms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d8129eb9f5ef8c7c7a4f63d4624befd44fc7528", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/3d8129eb9f5ef8c7c7a4f63d4624befd44fc7528", "committedDate": "2020-11-09T18:19:56Z", "message": "Merge branch 'master' into plugin_permission_list2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa007db007362e2c0df20d5549fc28520a2d259c", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/fa007db007362e2c0df20d5549fc28520a2d259c", "committedDate": "2020-11-09T19:01:37Z", "message": "User newer permission name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28e8bb0294f66cba19bc4cfddf026d06b9db8b1f", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/28e8bb0294f66cba19bc4cfddf026d06b9db8b1f", "committedDate": "2020-11-09T19:38:12Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c290408507d0700eeeca054c6206691f3f37722f", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/c290408507d0700eeeca054c6206691f3f37722f", "committedDate": "2020-11-09T21:29:09Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64aa588c0079b4e2a95bf3b3d960767ba92d6734", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/64aa588c0079b4e2a95bf3b3d960767ba92d6734", "committedDate": "2020-11-09T23:07:43Z", "message": "tweak more perms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "050dd0fa82d4ec21e0536bd804bdd53c4db60c75", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/050dd0fa82d4ec21e0536bd804bdd53c4db60c75", "committedDate": "2020-11-09T23:32:31Z", "message": "fix missing perms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a155f6c6ac0bbae6c3107d46fd0a8acfb349390e", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/a155f6c6ac0bbae6c3107d46fd0a8acfb349390e", "committedDate": "2020-11-10T00:31:28Z", "message": "Merge branch 'master' into plugin_permission_list2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f316bc506154190228adec814b5453a045c7a242", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/f316bc506154190228adec814b5453a045c7a242", "committedDate": "2020-11-10T00:36:19Z", "message": "allow property write...because hadoop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7aaada33d0c52914c8e1b7cfbb7b5f1e4c296b1e", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/7aaada33d0c52914c8e1b7cfbb7b5f1e4c296b1e", "committedDate": "2020-11-10T01:06:52Z", "message": "tweak tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adbcb57a49394bd5af20b779c08e96f5f6128385", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/adbcb57a49394bd5af20b779c08e96f5f6128385", "committedDate": "2020-11-10T01:34:41Z", "message": "add back read and write..."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf0d7c262315eca0fb363b1560c7d21d4b251dd0", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf0d7c262315eca0fb363b1560c7d21d4b251dd0", "committedDate": "2020-11-10T22:03:00Z", "message": "Merge branch 'master' into plugin_permission_list2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36faa9c294808b3b26e877888fde307c9a9a29b1", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/36faa9c294808b3b26e877888fde307c9a9a29b1", "committedDate": "2020-11-10T23:24:55Z", "message": "Remove shutdown hook permission from hdfs plugin\n\nThe hadoop library we use to connect with hdfs expects is is running in\na jvm dedicated to hadoop, as if it was an hdfs node. This means the\nshutdown hooks hadoop tries to register expect to work; there is no\nhandling of a lack of permissions to add shutdown hooks. This commit\nremoves the shutdown hook permission currently granted to\nrepository-hdfs by replacing the ShutdownHookManager class with one of\nthe same api, but having no-ops for the public methods."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02a11414f1f01185ee52e0a2d21ccb3bb859a9c6", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/02a11414f1f01185ee52e0a2d21ccb3bb859a9c6", "committedDate": "2020-11-11T01:14:55Z", "message": "fix example check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccd6335f46f678fc9a95787c5088480790c1588e", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/ccd6335f46f678fc9a95787c5088480790c1588e", "committedDate": "2020-11-13T00:26:12Z", "message": "Merge branch 'master' into plugin_permission_list2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ec7f6e584b0dc0c5ec51d06479a6f663e006707", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/9ec7f6e584b0dc0c5ec51d06479a6f663e006707", "committedDate": "2020-11-13T00:27:18Z", "message": "Merge branch 'master' into plugin_permission_list2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be9e1043524fa4dd3d86fb292a554c681d7bbd4d", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/be9e1043524fa4dd3d86fb292a554c681d7bbd4d", "committedDate": "2020-11-13T00:33:03Z", "message": "fix plugin test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17b00ceadb21ead4e108522be646cd45af3e15f1", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/17b00ceadb21ead4e108522be646cd45af3e15f1", "committedDate": "2020-11-13T03:10:14Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa7766a7a879e1d367ff867a89988c95258555e1", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/aa7766a7a879e1d367ff867a89988c95258555e1", "committedDate": "2020-11-17T22:44:52Z", "message": "Merge branch 'master' into plugin_permission_list2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NjkyNzkz", "url": "https://github.com/elastic/elasticsearch/pull/64751#pullrequestreview-534692793", "createdAt": "2020-11-19T17:38:56Z", "commit": {"oid": "aa7766a7a879e1d367ff867a89988c95258555e1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozODo1NlrOH2qHjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozODo1NlrOH2qHjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NTIxMg==", "bodyText": "Is there a reason we don't just build the map with the canonical class name?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, List<String>> classPermissions = Map.of(\n          \n          \n            \n                        URLPermission.class, ALLOW_ALL_NAMES,\n          \n          \n            \n                        DelegationPermission.class, ALLOW_ALL_NAMES,\n          \n          \n            \n                        ServicePermission.class, ALLOW_ALL_NAMES,\n          \n          \n            \n                        PrivateCredentialPermission.class, ALLOW_ALL_NAMES,\n          \n          \n            \n                        SQLPermission.class, List.of(\"callAbort\", \"setNetworkTimeout\"),\n          \n          \n            \n                        ClassPermission.class, ALLOW_ALL_NAMES\n          \n          \n            \n                    ).entrySet().stream().collect(Collectors.toMap(e -> e.getKey().getCanonicalName(), Map.Entry::getValue));\n          \n          \n            \n                    Map<String, List<String>> classPermissions = Map.of(\n          \n          \n            \n                        URLPermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\n          \n          \n            \n                        DelegationPermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\n          \n          \n            \n                        ServicePermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\n          \n          \n            \n                        PrivateCredentialPermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\n          \n          \n            \n                        SQLPermission.class.getCanonicalName(), List.of(\"callAbort\", \"setNetworkTimeout\"),\n          \n          \n            \n                        ClassPermission.class.getCanonicalName(), ALLOW_ALL_NAMES\n          \n          \n            \n                    );", "url": "https://github.com/elastic/elasticsearch/pull/64751#discussion_r527075212", "createdAt": "2020-11-19T17:38:56Z", "author": {"login": "jaymode"}, "path": "server/src/main/java/org/elasticsearch/bootstrap/PolicyUtil.java", "diffHunk": "@@ -23,31 +23,170 @@\n import org.elasticsearch.common.io.PathUtils;\n import org.elasticsearch.core.internal.io.IOUtils;\n import org.elasticsearch.plugins.PluginInfo;\n+import org.elasticsearch.script.ClassPermission;\n \n+import javax.security.auth.AuthPermission;\n+import javax.security.auth.PrivateCredentialPermission;\n+import javax.security.auth.kerberos.DelegationPermission;\n+import javax.security.auth.kerberos.ServicePermission;\n+import java.io.FilePermission;\n import java.io.IOException;\n+import java.lang.reflect.ReflectPermission;\n+import java.net.NetPermission;\n+import java.net.SocketPermission;\n import java.net.URISyntaxException;\n import java.net.URL;\n+import java.net.URLPermission;\n import java.nio.file.DirectoryStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\n import java.security.CodeSource;\n import java.security.NoSuchAlgorithmException;\n import java.security.Permission;\n import java.security.PermissionCollection;\n+import java.security.Permissions;\n import java.security.Policy;\n import java.security.ProtectionDomain;\n+import java.security.SecurityPermission;\n import java.security.URIParameter;\n+import java.security.UnresolvedPermission;\n import java.security.cert.Certificate;\n+import java.sql.SQLPermission;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.LinkedHashMap;\n import java.util.LinkedHashSet;\n+import java.util.List;\n import java.util.Map;\n+import java.util.PropertyPermission;\n import java.util.Properties;\n import java.util.Set;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n \n public class PolicyUtil {\n+\n+    // this object is checked by reference, so the value in the list does not matter\n+    static final List<String> ALLOW_ALL_NAMES = List.of(\"ALLOW ALL NAMES SENTINEL\");\n+\n+    static class PermissionMatcher implements Predicate<Permission> {\n+\n+        PermissionCollection namedPermissions;\n+        Map<String, List<String>> classPermissions;\n+\n+        PermissionMatcher(PermissionCollection namedPermissions,\n+                          Map<String, List<String>> classPermissions) {\n+            this.namedPermissions = namedPermissions;\n+            this.classPermissions = classPermissions;\n+        }\n+\n+        @Override\n+        public boolean test(Permission permission) {\n+            if (namedPermissions.implies(permission)) {\n+                return true;\n+            }\n+            String clazz = permission.getClass().getCanonicalName();\n+            String name = permission.getName();\n+            if (permission.getClass().equals(UnresolvedPermission.class)) {\n+                UnresolvedPermission up = (UnresolvedPermission) permission;\n+                clazz = up.getUnresolvedType();\n+                name = up.getUnresolvedName();\n+            }\n+            List<String> allowedNames = classPermissions.get(clazz);\n+            return allowedNames != null && (allowedNames == ALLOW_ALL_NAMES || allowedNames.contains(name));\n+        }\n+    }\n+\n+    private static final PermissionMatcher ALLOWED_PLUGIN_PERMISSIONS;\n+    private static final PermissionMatcher ALLOWED_MODULE_PERMISSIONS;\n+    static {\n+        List<Permission> namedPermissions = List.of(\n+            new ReflectPermission(\"suppressAccessChecks\"),\n+            new RuntimePermission(\"createClassLoader\"),\n+            new RuntimePermission(\"getClassLoader\"),\n+            new RuntimePermission(\"setContextClassLoader\"),\n+            new RuntimePermission(\"setFactory\"),\n+            new RuntimePermission(\"loadLibrary.*\"),\n+            new RuntimePermission(\"accessClassInPackage.*\"),\n+            new RuntimePermission(\"accessDeclaredMembers\"),\n+            new NetPermission(\"requestPasswordAuthentication\"),\n+            new NetPermission(\"getProxySelector\"),\n+            new NetPermission(\"getCookieHandler\"),\n+            new NetPermission(\"getResponseCache\"),\n+            new SocketPermission(\"*\", \"accept,connect,listen,resolve\"),\n+            new SecurityPermission(\"createAccessControlContext\"),\n+            new SecurityPermission(\"insertProvider\"),\n+            new SecurityPermission(\"putProviderProperty.*\"),\n+            // apache abuses the SecurityPermission class for it's own purposes\n+            new SecurityPermission(\"org.apache.*\"),\n+            // write is needed because of HdfsPlugin\n+            new PropertyPermission(\"*\", \"read,write\"),\n+            new AuthPermission(\"doAs\"),\n+            new AuthPermission(\"doAsPrivileged\"),\n+            new AuthPermission(\"getSubject\"),\n+            new AuthPermission(\"getSubjectFromDomainCombiner\"),\n+            new AuthPermission(\"setReadOnly\"),\n+            new AuthPermission(\"modifyPrincipals\"),\n+            new AuthPermission(\"modifyPublicCredentials\"),\n+            new AuthPermission(\"modifyPrivateCredentials\"),\n+            new AuthPermission(\"refreshCredential\"),\n+            new AuthPermission(\"destroyCredential\"),\n+            new AuthPermission(\"createLoginContext.*\"),\n+            new AuthPermission(\"getLoginConfiguration\"),\n+            new AuthPermission(\"setLoginConfiguration\"),\n+            new AuthPermission(\"createLoginConfiguration.*\"),\n+            new AuthPermission(\"refreshLoginConfiguration\")\n+        );\n+        // While it would be ideal to represent all allowed permissions with concrete instances so that we can\n+        // use the builtin implies method to match them against the parsed policy, this does not work in all\n+        // cases for two reasons:\n+        // (1) Some permissions classes do not have a name argument that can represent all possible variants.\n+        //     For example, FilePermission has \"<< ALL FILES >>\" so all paths can be matched, but DelegationPermission\n+        //     does not have anything to represent all principals.\n+        // (2) Some permissions classes are in java modules that are not accessible from the classloader used by\n+        //     the policy parser. This results in those permissions being in UnresolvedPermission instances. Those\n+        //     are normally resolved at runtime when that permission is checked by SecurityManager. But there is\n+        //     no general purpose utility to resolve those permissions, so we must be able to match those\n+        //     unresolved permissions in the policy by class and name values.\n+        // Given the above, the below map is from permission class to the list of allowed name values. A sentinel value\n+        // is used to mean names are accepted. We do not use this model for all permissions because many permission\n+        // classes have their own meaning for some form of wildcard matching of the name, which we want to delegate\n+        // to those permissions if possible.\n+        Map<String, List<String>> classPermissions = Map.of(\n+            URLPermission.class, ALLOW_ALL_NAMES,\n+            DelegationPermission.class, ALLOW_ALL_NAMES,\n+            ServicePermission.class, ALLOW_ALL_NAMES,\n+            PrivateCredentialPermission.class, ALLOW_ALL_NAMES,\n+            SQLPermission.class, List.of(\"callAbort\", \"setNetworkTimeout\"),\n+            ClassPermission.class, ALLOW_ALL_NAMES\n+        ).entrySet().stream().collect(Collectors.toMap(e -> e.getKey().getCanonicalName(), Map.Entry::getValue));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa7766a7a879e1d367ff867a89988c95258555e1"}, "originalPosition": 141}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1252, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}