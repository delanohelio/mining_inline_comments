{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NTYzOTY3", "number": 54530, "title": "Get data stream accepts single search parameter", "bodyText": "Changes the GET /_data_streams endpoint to accept a single search parameter.\nIf the search parameter contains wildcards, a list of matching data streams will be returned or the empty list if there are no matches. If the search parameter does not contain wildcards, the single matching data stream, if any, will be returned. If there are no matches, the response code of 404 will be returned.\nThe GET /_data_streams request without an explicit search parameter will be treated as GET /_data_streams/*.\nRelates to #53100", "createdAt": "2020-03-31T19:54:39Z", "url": "https://github.com/elastic/elasticsearch/pull/54530", "merged": true, "mergeCommit": {"oid": "959f41e3d1a460584fc453a5a0deda471c7d2205"}, "closed": true, "closedAt": "2020-04-03T14:32:43Z", "author": {"login": "danhermann"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTGw7bgH2gAyMzk2NTYzOTY3OjEwMDdkMWIwZTdhMjMyZTM1NTdkMjk4OTJjMTJkZDBjYzZkMzkyMmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUBO7tgH2gAyMzk2NTYzOTY3OjZlOGI4YjM5NGY0N2YzNTlkNWJlYmJlMDlmMWQxZjk5NDQxODBkZWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1007d1b0e7a232e3557d29892c12dd0cc6d3922a", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/1007d1b0e7a232e3557d29892c12dd0cc6d3922a", "committedDate": "2020-03-31T17:43:31Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4295de2df6305e29a34dc9f80579094eecbc128f", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/4295de2df6305e29a34dc9f80579094eecbc128f", "committedDate": "2020-03-31T19:47:14Z", "message": "get data stream with single search parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/c68d0b35662b2aa3952e0f897320bba537afff21", "committedDate": "2020-03-31T20:00:17Z", "message": "Merge branch 'master' into get_single_data_stream"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MjgzMzAy", "url": "https://github.com/elastic/elasticsearch/pull/54530#pullrequestreview-385283302", "createdAt": "2020-04-01T05:56:35Z", "commit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNTo1NjozNVrOF-xymQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjowMDo0OFrOF-x4Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM3MTgwMQ==", "bodyText": "This should be readOptionalString() instead of readString(), since the name maybe null.\nThis is also why I think the test fails.", "url": "https://github.com/elastic/elasticsearch/pull/54530#discussion_r401371801", "createdAt": "2020-04-01T05:56:35Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamsAction.java", "diffHunk": "@@ -72,26 +73,26 @@ public ActionRequestValidationException validate() {\n \n         public Request(StreamInput in) throws IOException {\n             super(in);\n-            this.names = in.readStringArray();\n+            this.name = in.readString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM3MTk2OA==", "bodyText": "This should be writeOptionalString() instead of writeString()", "url": "https://github.com/elastic/elasticsearch/pull/54530#discussion_r401371968", "createdAt": "2020-04-01T05:57:07Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamsAction.java", "diffHunk": "@@ -72,26 +73,26 @@ public ActionRequestValidationException validate() {\n \n         public Request(StreamInput in) throws IOException {\n             super(in);\n-            this.names = in.readStringArray();\n+            this.name = in.readString();\n         }\n \n         @Override\n         public void writeTo(StreamOutput out) throws IOException {\n             super.writeTo(out);\n-            out.writeStringArray(names);\n+            out.writeString(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM3MjE4Nw==", "bodyText": "Objects.equals(...) should be used here.", "url": "https://github.com/elastic/elasticsearch/pull/54530#discussion_r401372187", "createdAt": "2020-04-01T05:57:51Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamsAction.java", "diffHunk": "@@ -72,26 +73,26 @@ public ActionRequestValidationException validate() {\n \n         public Request(StreamInput in) throws IOException {\n             super(in);\n-            this.names = in.readStringArray();\n+            this.name = in.readString();\n         }\n \n         @Override\n         public void writeTo(StreamOutput out) throws IOException {\n             super.writeTo(out);\n-            out.writeStringArray(names);\n+            out.writeString(name);\n         }\n \n         @Override\n         public boolean equals(Object o) {\n             if (this == o) return true;\n             if (o == null || getClass() != o.getClass()) return false;\n             Request request = (Request) o;\n-            return Arrays.equals(names, request.names);\n+            return name.equals(request.name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM3MjMwMw==", "bodyText": "Objects.hashCode(...) should be used here.", "url": "https://github.com/elastic/elasticsearch/pull/54530#discussion_r401372303", "createdAt": "2020-04-01T05:58:08Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamsAction.java", "diffHunk": "@@ -72,26 +73,26 @@ public ActionRequestValidationException validate() {\n \n         public Request(StreamInput in) throws IOException {\n             super(in);\n-            this.names = in.readStringArray();\n+            this.name = in.readString();\n         }\n \n         @Override\n         public void writeTo(StreamOutput out) throws IOException {\n             super.writeTo(out);\n-            out.writeStringArray(names);\n+            out.writeString(name);\n         }\n \n         @Override\n         public boolean equals(Object o) {\n             if (this == o) return true;\n             if (o == null || getClass() != o.getClass()) return false;\n             Request request = (Request) o;\n-            return Arrays.equals(names, request.names);\n+            return name.equals(request.name);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Arrays.hashCode(names);\n+            return name.hashCode();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM3MzI0Nw==", "bodyText": "maybe also specify null as a value here?", "url": "https://github.com/elastic/elasticsearch/pull/54530#discussion_r401373247", "createdAt": "2020-04-01T06:00:48Z", "author": {"login": "martijnvg"}, "path": "server/src/test/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamsRequestTests.java", "diffHunk": "@@ -42,21 +43,15 @@\n \n     @Override\n     protected Request createTestInstance() {\n-        return new Request(generateRandomStringArray(8, 8, false));\n-    }\n-\n-    public void testValidateRequest() {\n-        GetDataStreamsAction.Request req = new GetDataStreamsAction.Request(new String[]{});\n-        ActionRequestValidationException e = req.validate();\n-        assertNull(e);\n+        return new Request(randomAlphaOfLength(8) + (randomBoolean() ? \"*\" : \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzA0MzU1", "url": "https://github.com/elastic/elasticsearch/pull/54530#pullrequestreview-385304355", "createdAt": "2020-04-01T06:47:00Z", "commit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjo0NzowMFrOF-y5Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwOToxNTo0M1rOF-3xgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM4OTgzOA==", "bodyText": "I should think it works without this line too? I think I prefer to remove that line, we normally do not specify optional parameters as null in rest tests.", "url": "https://github.com/elastic/elasticsearch/pull/54530#discussion_r401389838", "createdAt": "2020-04-01T06:47:00Z", "author": {"login": "henningandersen"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/indices.data_stream/10_basic.yml", "diffHunk": "@@ -47,3 +53,60 @@\n \n   - match: { status: 400 }\n   - match: { error.root_cause.0.type: \"illegal_argument_exception\" }\n+\n+---\n+\"Get data stream\":\n+  - skip:\n+      version: \" - 7.99.99\"\n+      reason: available only in 7.7+\n+\n+  - do:\n+      indices.create_data_stream:\n+        name: get-data-stream1\n+        body:\n+          timestamp_field: \"@timestamp\"\n+  - is_true: acknowledged\n+\n+  - do:\n+      indices.create_data_stream:\n+        name: get-data-stream2\n+        body:\n+          timestamp_field: \"@timestamp2\"\n+  - is_true: acknowledged\n+\n+  - do:\n+      indices.get_data_streams:\n+        name: null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM5MDMyNQ==", "bodyText": "Would be nice to also test that GET _data_stream/get-data-stream* works and returns both streams?", "url": "https://github.com/elastic/elasticsearch/pull/54530#discussion_r401390325", "createdAt": "2020-04-01T06:48:10Z", "author": {"login": "henningandersen"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/indices.data_stream/10_basic.yml", "diffHunk": "@@ -47,3 +53,60 @@\n \n   - match: { status: 400 }\n   - match: { error.root_cause.0.type: \"illegal_argument_exception\" }\n+\n+---\n+\"Get data stream\":\n+  - skip:\n+      version: \" - 7.99.99\"\n+      reason: available only in 7.7+\n+\n+  - do:\n+      indices.create_data_stream:\n+        name: get-data-stream1\n+        body:\n+          timestamp_field: \"@timestamp\"\n+  - is_true: acknowledged\n+\n+  - do:\n+      indices.create_data_stream:\n+        name: get-data-stream2\n+        body:\n+          timestamp_field: \"@timestamp2\"\n+  - is_true: acknowledged\n+\n+  - do:\n+      indices.get_data_streams:\n+        name: null\n+  - match: { 0.name: get-data-stream1 }\n+  - match: { 0.timestamp_field: '@timestamp' }\n+  - match: { 1.name: get-data-stream2 }\n+  - match: { 1.timestamp_field: '@timestamp2' }\n+\n+  - do:\n+      indices.get_data_streams:\n+        name: get-data-stream1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ2MzgyOA==", "bodyText": "I think there is a BWC issue here since the original code is in the 7.7 branch? Probably easiest to just make it 7.7 compatible here (and in the read above) rather than other workarounds.", "url": "https://github.com/elastic/elasticsearch/pull/54530#discussion_r401463828", "createdAt": "2020-04-01T09:05:41Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamsAction.java", "diffHunk": "@@ -72,26 +73,26 @@ public ActionRequestValidationException validate() {\n \n         public Request(StreamInput in) throws IOException {\n             super(in);\n-            this.names = in.readStringArray();\n+            this.name = in.readString();\n         }\n \n         @Override\n         public void writeTo(StreamOutput out) throws IOException {\n             super.writeTo(out);\n-            out.writeStringArray(names);\n+            out.writeString(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ2NzE4OQ==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testGetDataStreams() {\n          \n          \n            \n                public void testGetDataStream() {", "url": "https://github.com/elastic/elasticsearch/pull/54530#discussion_r401467189", "createdAt": "2020-04-01T09:11:20Z", "author": {"login": "henningandersen"}, "path": "server/src/test/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamsRequestTests.java", "diffHunk": "@@ -42,21 +43,15 @@\n \n     @Override\n     protected Request createTestInstance() {\n-        return new Request(generateRandomStringArray(8, 8, false));\n-    }\n-\n-    public void testValidateRequest() {\n-        GetDataStreamsAction.Request req = new GetDataStreamsAction.Request(new String[]{});\n-        ActionRequestValidationException e = req.validate();\n-        assertNull(e);\n+        return new Request(randomAlphaOfLength(8) + (randomBoolean() ? \"*\" : \"\"));\n     }\n \n     public void testGetDataStreams() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ2ODIyNQ==", "bodyText": "maybe also randomly specify just \"*\" here?", "url": "https://github.com/elastic/elasticsearch/pull/54530#discussion_r401468225", "createdAt": "2020-04-01T09:13:04Z", "author": {"login": "henningandersen"}, "path": "server/src/test/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamsRequestTests.java", "diffHunk": "@@ -42,21 +43,15 @@\n \n     @Override\n     protected Request createTestInstance() {\n-        return new Request(generateRandomStringArray(8, 8, false));\n-    }\n-\n-    public void testValidateRequest() {\n-        GetDataStreamsAction.Request req = new GetDataStreamsAction.Request(new String[]{});\n-        ActionRequestValidationException e = req.validate();\n-        assertNull(e);\n+        return new Request(randomAlphaOfLength(8) + (randomBoolean() ? \"*\" : \"\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM3MzI0Nw=="}, "originalCommit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ2OTgyNQ==", "bodyText": "I think we should add a bit more tests:\n\nGet non existent data stream based on wildcard (which should return empty array).\nGet data stream based on wildcard, returning multiple.", "url": "https://github.com/elastic/elasticsearch/pull/54530#discussion_r401469825", "createdAt": "2020-04-01T09:15:43Z", "author": {"login": "henningandersen"}, "path": "server/src/test/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamsRequestTests.java", "diffHunk": "@@ -65,8 +60,9 @@ public void testGetDataStreams() {\n     public void testGetNonexistentDataStream() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c68d0b35662b2aa3952e0f897320bba537afff21"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4adb826148e503f79dc0e401e8170a6129e5e448", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/4adb826148e503f79dc0e401e8170a6129e5e448", "committedDate": "2020-04-01T17:02:31Z", "message": "review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aae22e6bf3a003302f273aa2d6541085cfc786d", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/4aae22e6bf3a003302f273aa2d6541085cfc786d", "committedDate": "2020-04-01T17:11:26Z", "message": "Merge branch 'master' into get_single_data_stream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ee21eca88e3a76dd9d6e8d7e10f4857e683a1e9", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/2ee21eca88e3a76dd9d6e8d7e10f4857e683a1e9", "committedDate": "2020-04-01T17:34:52Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a12c75c0522a6e75afe8e11a74cd5f67708c11e", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/8a12c75c0522a6e75afe8e11a74cd5f67708c11e", "committedDate": "2020-04-02T16:00:08Z", "message": "Merge branch 'master' into get_single_data_stream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f37811e7d4934807d93ffb92c860281a500875da", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/f37811e7d4934807d93ffb92c860281a500875da", "committedDate": "2020-04-02T16:22:04Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2b7ff4e54c8de834c68d5ae60dd208211998151", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/a2b7ff4e54c8de834c68d5ae60dd208211998151", "committedDate": "2020-04-02T17:17:53Z", "message": "Merge branch 'master' into get_single_data_stream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e8b8b394f47f359d5bebbe09f1d1f9944180dea", "author": {"user": {"login": "danhermann", "name": "Dan Hermann"}}, "url": "https://github.com/elastic/elasticsearch/commit/6e8b8b394f47f359d5bebbe09f1d1f9944180dea", "committedDate": "2020-04-03T13:50:47Z", "message": "remove explicit null"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1417, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}