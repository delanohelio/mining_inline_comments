{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMzUwMjcy", "number": 65791, "title": "Allow more legit cases in Metadata.Builder.validateDataStreams", "bodyText": "This change simplifies logic and allow more legit cases in Metadata.Builder.validateDataStreams.\nIt will only show conflict on names that are in form of .ds-<data stream name>-<[0-9]+> and will allow any names like .ds-<data stream name>-something-else-<[0-9]+>.\nThis fixes problem with rollover when you have 2 data streams with names like a and a-b - currently if a-b has generation greater than a you won't be able to rollover a anymore.", "createdAt": "2020-12-02T23:19:34Z", "url": "https://github.com/elastic/elasticsearch/pull/65791", "merged": true, "mergeCommit": {"oid": "20b3a8bd249db3fd0aa3a5c838b306018114912d"}, "closed": true, "closedAt": "2020-12-07T12:26:11Z", "author": {"login": "probakowski"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiW6GdAH2gAyNTMxMzUwMjcyOjNiMzczZjVlODhkYzA3ODI4MDNkZmIxZjg0Y2NhMDQzM2I4NWE0MGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj0c-nAFqTU0NjA4OTg5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3b373f5e88dc0782803dfb1f84cca0433b85a40f", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/3b373f5e88dc0782803dfb1f84cca0433b85a40f", "committedDate": "2020-12-02T23:12:02Z", "message": "Allow more legit cases in Metadata.Builder.validateDataStreams"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe6b7d0df481987e9e0352d0d8cf1e4cfe4548f0", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/fe6b7d0df481987e9e0352d0d8cf1e4cfe4548f0", "committedDate": "2020-12-02T23:19:14Z", "message": "formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNzA4Nzc3", "url": "https://github.com/elastic/elasticsearch/pull/65791#pullrequestreview-543708777", "createdAt": "2020-12-03T08:29:47Z", "commit": {"oid": "fe6b7d0df481987e9e0352d0d8cf1e4cfe4548f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODoyOTo0N1rOH-IfQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODoyOTo0N1rOH-IfQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkxMjgzNA==", "bodyText": "Should the pattern be [0-9]+$ instead?  (so that it only matches if the generation is at the end of the index name)\nAlso maybe turn the pattern into a static pattern?", "url": "https://github.com/elastic/elasticsearch/pull/65791#discussion_r534912834", "createdAt": "2020-12-03T08:29:47Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java", "diffHunk": "@@ -1481,29 +1481,18 @@ public Metadata build() {\n         static void validateDataStreams(SortedMap<String, IndexAbstraction> indicesLookup, @Nullable DataStreamMetadata dsMetadata) {\n             if (dsMetadata != null) {\n                 for (DataStream ds : dsMetadata.dataStreams().values()) {\n-                    Map<String, IndexAbstraction> conflicts =\n-                        indicesLookup.subMap(DataStream.BACKING_INDEX_PREFIX + ds.getName() + \"-\",\n-                            DataStream.BACKING_INDEX_PREFIX + ds.getName() + \".\") // '.' is the char after '-'\n-                            .entrySet().stream()\n-                            .filter(entry -> {\n-                                if (entry.getValue().getType() != IndexAbstraction.Type.CONCRETE_INDEX) {\n-                                    return true;\n-                                } else {\n-                                    int indexNameCounter;\n-                                    try {\n-                                        indexNameCounter = IndexMetadata.parseIndexNameCounter(entry.getKey());\n-                                    } catch (IllegalArgumentException e) {\n-                                        // index name is not in the %s-%d+ format so it will not crash with backing indices\n-                                        return false;\n-                                    }\n-                                    return indexNameCounter > ds.getGeneration();\n-                                }\n-                            }).collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n+                    String prefix = DataStream.BACKING_INDEX_PREFIX + ds.getName() + \"-\";\n+                    Set<String> conflicts =\n+                        indicesLookup.subMap(prefix, DataStream.BACKING_INDEX_PREFIX + ds.getName() + \".\") // '.' is the char after '-'\n+                            .keySet().stream()\n+                            .filter(s -> s.substring(prefix.length()).matches(\"[0-9]+\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe6b7d0df481987e9e0352d0d8cf1e4cfe4548f0"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69eab07e52a40ebab861f0be286030ec3606cd00", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/69eab07e52a40ebab861f0be286030ec3606cd00", "committedDate": "2020-12-03T12:15:41Z", "message": "review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MDk5MzEx", "url": "https://github.com/elastic/elasticsearch/pull/65791#pullrequestreview-544099311", "createdAt": "2020-12-03T15:46:18Z", "commit": {"oid": "69eab07e52a40ebab861f0be286030ec3606cd00"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40e6cd9d8a1c5193ac2466ef98e1dc05f3ac0036", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/40e6cd9d8a1c5193ac2466ef98e1dc05f3ac0036", "committedDate": "2020-12-07T11:05:46Z", "message": "Merge branch 'master' into validate-datastream-name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MDMzNDk1", "url": "https://github.com/elastic/elasticsearch/pull/65791#pullrequestreview-546033495", "createdAt": "2020-12-07T10:52:43Z", "commit": {"oid": "69eab07e52a40ebab861f0be286030ec3606cd00"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo1Mjo0NFrOIAg7-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMToxNDoxNlrOIAhxBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQxMDU1Mg==", "bodyText": "nit: this needs formatting", "url": "https://github.com/elastic/elasticsearch/pull/65791#discussion_r537410552", "createdAt": "2020-12-07T10:52:44Z", "author": {"login": "andreidan"}, "path": "server/src/test/java/org/elasticsearch/cluster/metadata/MetadataTests.java", "diffHunk": "@@ -1148,11 +1148,25 @@ public void testValidateDataStreamsIgnoresIndicesWithoutCounter() {\n \n             )\n             .build();\n-        // don't expect any exception when validating against non-backing indinces that don't conform to the backing indices naming\n+        // don't expect any exception when validating against non-backing indices that don't conform to the backing indices naming\n         // convention\n         validateDataStreams(metadata.getIndicesLookup(), (DataStreamMetadata) metadata.customs().get(DataStreamMetadata.TYPE));\n     }\n \n+    public void testValidateDataStreamsAllowsNamesThatStartsWithPrefix() {\n+        String dataStreamName = \"foo-datastream\";\n+        Metadata metadata = Metadata.builder(createIndices(10, 10, dataStreamName).metadata)\n+            .put(\n+                new IndexMetadata.Builder(DataStream.BACKING_INDEX_PREFIX+dataStreamName + \"-something-000012\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69eab07e52a40ebab861f0be286030ec3606cd00"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyNDEzNQ==", "bodyText": "I don't think I understand this fix. Can you please document it a bit? I see we don't check the non concrete index anymore, but what else has changed?\nI also ported the testValidateDataStreamsAllowsNamesThatStartsWithPrefix on master and the test passes. Maybe this is supported already?", "url": "https://github.com/elastic/elasticsearch/pull/65791#discussion_r537424135", "createdAt": "2020-12-07T11:14:16Z", "author": {"login": "andreidan"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java", "diffHunk": "@@ -1481,29 +1483,18 @@ public Metadata build() {\n         static void validateDataStreams(SortedMap<String, IndexAbstraction> indicesLookup, @Nullable DataStreamMetadata dsMetadata) {\n             if (dsMetadata != null) {\n                 for (DataStream ds : dsMetadata.dataStreams().values()) {\n-                    Map<String, IndexAbstraction> conflicts =\n-                        indicesLookup.subMap(DataStream.BACKING_INDEX_PREFIX + ds.getName() + \"-\",\n-                            DataStream.BACKING_INDEX_PREFIX + ds.getName() + \".\") // '.' is the char after '-'\n-                            .entrySet().stream()\n-                            .filter(entry -> {\n-                                if (entry.getValue().getType() != IndexAbstraction.Type.CONCRETE_INDEX) {\n-                                    return true;\n-                                } else {\n-                                    int indexNameCounter;\n-                                    try {\n-                                        indexNameCounter = IndexMetadata.parseIndexNameCounter(entry.getKey());\n-                                    } catch (IllegalArgumentException e) {\n-                                        // index name is not in the %s-%d+ format so it will not crash with backing indices\n-                                        return false;\n-                                    }\n-                                    return indexNameCounter > ds.getGeneration();\n-                                }\n-                            }).collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n+                    String prefix = DataStream.BACKING_INDEX_PREFIX + ds.getName() + \"-\";\n+                    Set<String> conflicts =\n+                        indicesLookup.subMap(prefix, DataStream.BACKING_INDEX_PREFIX + ds.getName() + \".\") // '.' is the char after '-'\n+                            .keySet().stream()\n+                            .filter(s -> NUMBER_PATTERN.matcher(s.substring(prefix.length())).matches())\n+                            .filter(s -> IndexMetadata.parseIndexNameCounter(s) > ds.getGeneration())\n+                            .collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40e6cd9d8a1c5193ac2466ef98e1dc05f3ac0036"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16796ca618759e54568ea7d4dd1d4db57ff766c2", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/16796ca618759e54568ea7d4dd1d4db57ff766c2", "committedDate": "2020-12-07T11:38:19Z", "message": "make test actually testing anything"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50a8d701f506337ba55d479a70070479f3ee13ea", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/50a8d701f506337ba55d479a70070479f3ee13ea", "committedDate": "2020-12-07T11:43:48Z", "message": "formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MDg5ODkz", "url": "https://github.com/elastic/elasticsearch/pull/65791#pullrequestreview-546089893", "createdAt": "2020-12-07T12:11:18Z", "commit": {"oid": "50a8d701f506337ba55d479a70070479f3ee13ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4134, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}