{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NzUxNzY3", "number": 60433, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1ODowMVrOETesng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDo1MzozMVrOEVCXKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODYxMzQyOnYy", "diffSide": "RIGHT", "path": "modules/ingest-common/src/yamlRestTest/resources/rest-api-spec/test/ingest/90_simulate.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1ODowMVrOG5PSjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1ODowMVrOG5PSjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MjUyNw==", "bodyText": "because we now always return status and processor_type", "url": "https://github.com/elastic/elasticsearch/pull/60433#discussion_r462672527", "createdAt": "2020-07-30T00:58:01Z", "author": {"login": "jakelandis"}, "path": "modules/ingest-common/src/yamlRestTest/resources/rest-api-spec/test/ingest/90_simulate.yml", "diffHunk": "@@ -591,11 +595,16 @@ teardown:\n           }\n   - length: { docs: 1 }\n   - length: { docs.0.processor_results: 2 }\n+  - length: { docs.0.processor_results.0: 4 }\n   - match: { docs.0.processor_results.0.tag: \"setstatus-1\" }\n+  - match: { docs.0.processor_results.0.status: \"success\" }\n+  - match: { docs.0.processor_results.0.processor_type: \"set\" }\n   - match: { docs.0.processor_results.0.doc._source.field1: \"123.42 400 <foo>\" }\n   - match: { docs.0.processor_results.0.doc._source.status: 200 }\n-  - length: { docs.0.processor_results.1: 2 }\n+  - length: { docs.0.processor_results.1: 4 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374b7ae44efc0149a08094d749a85c6ce92baba9"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODYxNDg4OnYy", "diffSide": "RIGHT", "path": "modules/ingest-common/src/yamlRestTest/resources/rest-api-spec/test/ingest/90_simulate.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1ODo1NFrOG5PTbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1ODo1NFrOG5PTbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3Mjc0OA==", "bodyText": "because we now show the pipeline processor in the results", "url": "https://github.com/elastic/elasticsearch/pull/60433#discussion_r462672748", "createdAt": "2020-07-30T00:58:54Z", "author": {"login": "jakelandis"}, "path": "modules/ingest-common/src/yamlRestTest/resources/rest-api-spec/test/ingest/90_simulate.yml", "diffHunk": "@@ -731,16 +741,25 @@ teardown:\n           ]\n         }\n - length: { docs: 1 }\n-- length: { docs.0.processor_results: 3 }\n+- length: { docs.0.processor_results: 5 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374b7ae44efc0149a08094d749a85c6ce92baba9"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODYyMTEwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/ingest/TrackingResultProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMTowMjowMlrOG5PW2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMTowMjowMlrOG5PW2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MzYyNQ==", "bodyText": "I think we never added the pipeline processor in the past because there would have been nothing to display, but now that we always show the type (pipeline) and status (i.e. success) there is something to display, so this line is what adds this to the output. The addition of this output caused a few tests to need to be updated", "url": "https://github.com/elastic/elasticsearch/pull/60433#discussion_r462673625", "createdAt": "2020-07-30T01:02:02Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/ingest/TrackingResultProcessor.java", "diffHunk": "@@ -58,24 +65,32 @@ public void execute(IngestDocument ingestDocument, BiConsumer<IngestDocument, Ex\n             Pipeline pipeline = pipelineProcessor.getPipeline(ingestDocument);\n             //runtime check for cycles against a copy of the document. This is needed to properly handle conditionals around pipelines\n             IngestDocument ingestDocumentCopy = new IngestDocument(ingestDocument);\n-            ingestDocumentCopy.executePipeline(pipelineProcessor.getPipeline(ingestDocument), (result, e) -> {\n+            Pipeline pipelineToCall = pipelineProcessor.getPipeline(ingestDocument);\n+            if (pipelineToCall == null) {\n+                throw new IllegalArgumentException(\"Pipeline processor configured for non-existent pipeline [\" +\n+                    pipelineProcessor.getPipelineToCallName(ingestDocument) + ']');\n+            }\n+            ingestDocumentCopy.executePipeline(pipelineToCall, (result, e) -> {\n                 // do nothing, let the tracking processors throw the exception while recording the path up to the failure\n                 if (e instanceof ElasticsearchException) {\n                     ElasticsearchException elasticsearchException = (ElasticsearchException) e;\n                     //else do nothing, let the tracking processors throw the exception while recording the path up to the failure\n                     if (elasticsearchException.getCause() instanceof IllegalStateException) {\n                         if (ignoreFailure) {\n-                            processorResultList.add(new SimulateProcessorResult(pipelineProcessor.getTag(),\n-                                pipelineProcessor.getDescription(), new IngestDocument(ingestDocument), e));\n+                            processorResultList.add(new SimulateProcessorResult(pipelineProcessor.getType(), pipelineProcessor.getTag(),\n+                                pipelineProcessor.getDescription(), new IngestDocument(ingestDocument), e, conditionalWithResult));\n                         } else {\n-                            processorResultList.add(new SimulateProcessorResult(pipelineProcessor.getTag(),\n-                                pipelineProcessor.getDescription(), e));\n+                            processorResultList.add(new SimulateProcessorResult(pipelineProcessor.getType(), pipelineProcessor.getTag(),\n+                                pipelineProcessor.getDescription(), e, conditionalWithResult));\n                         }\n                         handler.accept(null, elasticsearchException);\n                     }\n                 } else {\n                     //now that we know that there are no cycles between pipelines, decorate the processors for this pipeline and execute it\n                     CompoundProcessor verbosePipelineProcessor = decorate(pipeline.getCompoundProcessor(), null, processorResultList);\n+                    //add the pipeline process to the results\n+                    processorResultList.add(new SimulateProcessorResult(actualProcessor.getType(), actualProcessor.getTag(),\n+                        actualProcessor.getDescription(), conditionalWithResult));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374b7ae44efc0149a08094d749a85c6ce92baba9"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDk0MjQ4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/ingest/TrackingResultProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDo1MzozMVrOG7kK4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoyMjozMFrOG7n7wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTExMTc3Ng==", "bodyText": "Seems like this could be a local variable in the execute function?", "url": "https://github.com/elastic/elasticsearch/pull/60433#discussion_r465111776", "createdAt": "2020-08-04T14:53:31Z", "author": {"login": "jbaiera"}, "path": "server/src/main/java/org/elasticsearch/ingest/TrackingResultProcessor.java", "diffHunk": "@@ -35,6 +36,7 @@\n     private final ConditionalProcessor conditionalProcessor;\n     private final List<SimulateProcessorResult> processorResultList;\n     private final boolean ignoreFailure;\n+    private Tuple<String, Boolean> conditionalWithResult = null; //null = no conditional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3d4a02d9210e466c067a3d36fde9cd03e3b4bb"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3MzQ0Mg==", "bodyText": "thanks @jbaiera , indeed. updated 5c26a6b", "url": "https://github.com/elastic/elasticsearch/pull/60433#discussion_r465173442", "createdAt": "2020-08-04T16:22:30Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/ingest/TrackingResultProcessor.java", "diffHunk": "@@ -35,6 +36,7 @@\n     private final ConditionalProcessor conditionalProcessor;\n     private final List<SimulateProcessorResult> processorResultList;\n     private final boolean ignoreFailure;\n+    private Tuple<String, Boolean> conditionalWithResult = null; //null = no conditional", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTExMTc3Ng=="}, "originalCommit": {"oid": "cb3d4a02d9210e466c067a3d36fde9cd03e3b4bb"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2743, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}