{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMDE4ODIw", "number": 56936, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDo1NToyMVrOD9-CPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMTowMDozMFrOD9-Ihg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzA2MTExOnYy", "diffSide": "RIGHT", "path": "plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDo1NToyMVrOGXySNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODoyMjowM1rOGYAgTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDI5NA==", "bodyText": "queryParams.contains(\"comp=blocklist\") is redundant isn't it?\nMight be safer to require a blockid= as well if we just see a comp=block just to make sure we're in line with expectations on the API requests we'll see here?", "url": "https://github.com/elastic/elasticsearch/pull/56936#discussion_r427594294", "createdAt": "2020-05-19T20:55:21Z", "author": {"login": "original-brownbear"}, "path": "plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java", "diffHunk": "@@ -101,15 +102,26 @@ public AzureBlobStore(RepositoryMetadata metadata, AzureStorageService service,\n         final Map<String, AzureStorageSettings> prevSettings = this.service.refreshAndClearCache(emptyMap());\n         final Map<String, AzureStorageSettings> newSettings = AzureStorageSettings.overrideLocationMode(prevSettings, this.locationMode);\n         this.service.refreshAndClearCache(newSettings);\n-        this.getMetricsCollector = (requestMethod) -> {\n-            if (requestMethod.equalsIgnoreCase(\"HEAD\")) {\n+        this.getMetricsCollector = (httpURLConnection) -> {\n+            if (httpURLConnection.getRequestMethod().equalsIgnoreCase(\"HEAD\")) {\n                 stats.headOperations.incrementAndGet();\n                 return;\n             }\n \n             stats.getOperations.incrementAndGet();\n         };\n-        this.listMetricsCollector = (requestMethod) -> stats.listOperations.incrementAndGet();\n+        this.listMetricsCollector = (httpURLConnection) -> stats.listOperations.incrementAndGet();\n+        this.uploadMetricsCollector = (httpURLConnection -> {\n+           assert httpURLConnection.getRequestMethod().equals(\"PUT\");\n+            String queryParams = httpURLConnection.getURL().getQuery();\n+            // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block\n+            // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-list\n+            if (queryParams != null && (queryParams.contains(\"comp=block\") || queryParams.contains(\"comp=blocklist\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48739a665c177aefe1480bcacf20b86a00af39f7"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgyNzI3Nw==", "bodyText": "You're right, I've just added an additional condition to ensure that we're really matching against a PutBlock request. Thanks!", "url": "https://github.com/elastic/elasticsearch/pull/56936#discussion_r427827277", "createdAt": "2020-05-20T08:22:03Z", "author": {"login": "fcofdez"}, "path": "plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java", "diffHunk": "@@ -101,15 +102,26 @@ public AzureBlobStore(RepositoryMetadata metadata, AzureStorageService service,\n         final Map<String, AzureStorageSettings> prevSettings = this.service.refreshAndClearCache(emptyMap());\n         final Map<String, AzureStorageSettings> newSettings = AzureStorageSettings.overrideLocationMode(prevSettings, this.locationMode);\n         this.service.refreshAndClearCache(newSettings);\n-        this.getMetricsCollector = (requestMethod) -> {\n-            if (requestMethod.equalsIgnoreCase(\"HEAD\")) {\n+        this.getMetricsCollector = (httpURLConnection) -> {\n+            if (httpURLConnection.getRequestMethod().equalsIgnoreCase(\"HEAD\")) {\n                 stats.headOperations.incrementAndGet();\n                 return;\n             }\n \n             stats.getOperations.incrementAndGet();\n         };\n-        this.listMetricsCollector = (requestMethod) -> stats.listOperations.incrementAndGet();\n+        this.listMetricsCollector = (httpURLConnection) -> stats.listOperations.incrementAndGet();\n+        this.uploadMetricsCollector = (httpURLConnection -> {\n+           assert httpURLConnection.getRequestMethod().equals(\"PUT\");\n+            String queryParams = httpURLConnection.getURL().getQuery();\n+            // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block\n+            // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-list\n+            if (queryParams != null && (queryParams.contains(\"comp=block\") || queryParams.contains(\"comp=blocklist\"))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDI5NA=="}, "originalCommit": {"oid": "48739a665c177aefe1480bcacf20b86a00af39f7"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzA2NDI3OnYy", "diffSide": "RIGHT", "path": "plugins/repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureBlobStoreRepositoryTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDo1NjoyMlrOGXyUSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDo1NjoyMlrOGXyUSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDgyNA==", "bodyText": "Sam as in the production code, matching on comp=blocklist seems redundant when matching comp=block?", "url": "https://github.com/elastic/elasticsearch/pull/56936#discussion_r427594824", "createdAt": "2020-05-19T20:56:22Z", "author": {"login": "original-brownbear"}, "path": "plugins/repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureBlobStoreRepositoryTests.java", "diffHunk": "@@ -186,7 +186,18 @@ protected void maybeTrack(String request, Headers headers) {\n                 trackRequest(\"HEAD\");\n             } else if (listPattern.test(request)) {\n                 trackRequest(\"LIST\");\n+            } else if (isBlockUpload(request)) {\n+                trackRequest(\"PUT_BLOCK\");\n+            } else if (Regex.simpleMatch(\"PUT /*/*\", request)) {\n+                trackRequest(\"PUT\");\n             }\n         }\n+\n+        // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block\n+        // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-list\n+        private boolean isBlockUpload(String request) {\n+            return Regex.simpleMatch(\"PUT /*/*?*comp=blocklist*\", request)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48739a665c177aefe1480bcacf20b86a00af39f7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzA3NzE4OnYy", "diffSide": "RIGHT", "path": "plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMTowMDozMFrOGXyc7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMTowMDozMFrOGXyc7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NzAzNg==", "bodyText": "Semi-related to this PR since you did it in the new collector, let's add assertions in spots like this one to make sure, we're actually seeing a GET here :) Can probably do the same for the list collector also.", "url": "https://github.com/elastic/elasticsearch/pull/56936#discussion_r427597036", "createdAt": "2020-05-19T21:00:30Z", "author": {"login": "original-brownbear"}, "path": "plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java", "diffHunk": "@@ -101,15 +102,26 @@ public AzureBlobStore(RepositoryMetadata metadata, AzureStorageService service,\n         final Map<String, AzureStorageSettings> prevSettings = this.service.refreshAndClearCache(emptyMap());\n         final Map<String, AzureStorageSettings> newSettings = AzureStorageSettings.overrideLocationMode(prevSettings, this.locationMode);\n         this.service.refreshAndClearCache(newSettings);\n-        this.getMetricsCollector = (requestMethod) -> {\n-            if (requestMethod.equalsIgnoreCase(\"HEAD\")) {\n+        this.getMetricsCollector = (httpURLConnection) -> {\n+            if (httpURLConnection.getRequestMethod().equalsIgnoreCase(\"HEAD\")) {\n                 stats.headOperations.incrementAndGet();\n                 return;\n             }\n \n             stats.getOperations.incrementAndGet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48739a665c177aefe1480bcacf20b86a00af39f7"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 378, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}