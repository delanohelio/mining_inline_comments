{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NjIzNDYx", "number": 57302, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzoxODo0MVrOEAmjlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjo0NToxN1rOEBb7lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDY3MTU4OnYy", "diffSide": "RIGHT", "path": "libs/grok/src/main/java/org/elasticsearch/grok/Grok.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzoxODo0MVrOGb_FYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxOTowNToyOFrOGcCsZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5ODMwNg==", "bodyText": "^^ this line is only substantive change here. (it implements the callback so that it does not default to Std.err)", "url": "https://github.com/elastic/elasticsearch/pull/57302#discussion_r431998306", "createdAt": "2020-05-28T17:18:41Z", "author": {"login": "jakelandis"}, "path": "libs/grok/src/main/java/org/elasticsearch/grok/Grok.java", "diffHunk": "@@ -101,7 +106,8 @@ private Grok(Map<String, String> patternBank, String grokPattern, boolean namedC\n \n         String expression = toRegex(grokPattern);\n         byte[] expressionBytes = expression.getBytes(StandardCharsets.UTF_8);\n-        this.compiledExpression = new Regex(expressionBytes, 0, expressionBytes.length, Option.DEFAULT, UTF8Encoding.INSTANCE);\n+        this.compiledExpression = new Regex(expressionBytes, 0, expressionBytes.length, Option.DEFAULT, UTF8Encoding.INSTANCE,\n+            message -> logger.log(Level.DEBUG, message));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f64eb74e14b74119798a661c300f63edaa350e9"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1NzQ0NA==", "bodyText": "Thanks Jake! I'm happy that this is an easy change.", "url": "https://github.com/elastic/elasticsearch/pull/57302#discussion_r432057444", "createdAt": "2020-05-28T19:05:28Z", "author": {"login": "martijnvg"}, "path": "libs/grok/src/main/java/org/elasticsearch/grok/Grok.java", "diffHunk": "@@ -101,7 +106,8 @@ private Grok(Map<String, String> patternBank, String grokPattern, boolean namedC\n \n         String expression = toRegex(grokPattern);\n         byte[] expressionBytes = expression.getBytes(StandardCharsets.UTF_8);\n-        this.compiledExpression = new Regex(expressionBytes, 0, expressionBytes.length, Option.DEFAULT, UTF8Encoding.INSTANCE);\n+        this.compiledExpression = new Regex(expressionBytes, 0, expressionBytes.length, Option.DEFAULT, UTF8Encoding.INSTANCE,\n+            message -> logger.log(Level.DEBUG, message));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5ODMwNg=="}, "originalCommit": {"oid": "2f64eb74e14b74119798a661c300f63edaa350e9"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NzA2MTk2OnYy", "diffSide": "RIGHT", "path": "modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQyMjoxODoxNlrOGc7oCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQyMjoxODoxNlrOGc7oCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk5MDIxNw==", "bodyText": "this is kinda weird, but hopefully the comment explains why. This allows Joni warnings to be emitted at WARN level on PUT of the pipeline, but DEBUG for normal running.\nIf we put a WARN for normal running we can flood the log (and what this PR seeks to address)", "url": "https://github.com/elastic/elasticsearch/pull/57302#discussion_r432990217", "createdAt": "2020-05-31T22:18:16Z", "author": {"login": "jakelandis"}, "path": "modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessor.java", "diffHunk": "@@ -48,9 +51,12 @@\n         super(tag);\n         this.matchField = matchField;\n         this.matchPatterns = matchPatterns;\n-        this.grok = new Grok(patternBank, combinePatterns(matchPatterns, traceMatch), matcherWatchdog);\n+        this.grok = new Grok(patternBank, combinePatterns(matchPatterns, traceMatch), matcherWatchdog, logger::debug);\n         this.traceMatch = traceMatch;\n         this.ignoreMissing = ignoreMissing;\n+        // Joni warnings are only emitted on an attempt to match, and the warning emitted for every call to match which is too verbose\n+        // so here we emit a warning (if there is one) to the logfile at warn level on construction / processor creation.\n+        new Grok(patternBank, combinePatterns(matchPatterns, traceMatch), matcherWatchdog, logger::warn).match(\"___nomatch___\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56437624d2016ae1b19a0491049e076eb4f1d7e9"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTQxNDI0OnYy", "diffSide": "RIGHT", "path": "modules/ingest-common/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjo0NDozM1rOGdR-_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzozMzo0NFrOGgo47A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM1NjU0MQ==", "bodyText": "This is already included as a compileOnly dep through server, so it shouldn't be needed here?", "url": "https://github.com/elastic/elasticsearch/pull/57302#discussion_r433356541", "createdAt": "2020-06-01T16:44:33Z", "author": {"login": "rjernst"}, "path": "modules/ingest-common/build.gradle", "diffHunk": "@@ -27,6 +27,7 @@ dependencies {\n   compileOnly project(':modules:lang-painless')\n   compile project(':libs:elasticsearch-grok')\n   compile project(':libs:elasticsearch-dissect')\n+  compile \"org.apache.logging.log4j:log4j-api:${versions.log4j}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eea02311bbca37638816f234f4c38c6d88d7ab02"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3NzU0OA==", "bodyText": "thanks, I missed that this was already a dependency", "url": "https://github.com/elastic/elasticsearch/pull/57302#discussion_r436877548", "createdAt": "2020-06-08T17:33:44Z", "author": {"login": "jakelandis"}, "path": "modules/ingest-common/build.gradle", "diffHunk": "@@ -27,6 +27,7 @@ dependencies {\n   compileOnly project(':modules:lang-painless')\n   compile project(':libs:elasticsearch-grok')\n   compile project(':libs:elasticsearch-dissect')\n+  compile \"org.apache.logging.log4j:log4j-api:${versions.log4j}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM1NjU0MQ=="}, "originalCommit": {"oid": "eea02311bbca37638816f234f4c38c6d88d7ab02"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTQxNjUzOnYy", "diffSide": "RIGHT", "path": "modules/ingest-common/license/log4j-api-LICENSE.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjo0NToxN1rOGdSAfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzozMzo1OFrOGgo5dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM1NjkyNQ==", "bodyText": "the license file should not be needed since the log4j jar is not actually bundled in this module; it is part of server", "url": "https://github.com/elastic/elasticsearch/pull/57302#discussion_r433356925", "createdAt": "2020-06-01T16:45:17Z", "author": {"login": "rjernst"}, "path": "modules/ingest-common/license/log4j-api-LICENSE.txt", "diffHunk": "@@ -0,0 +1,202 @@\n+\n+                                 Apache License", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eea02311bbca37638816f234f4c38c6d88d7ab02"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3NzY4NQ==", "bodyText": "fixed. thanks", "url": "https://github.com/elastic/elasticsearch/pull/57302#discussion_r436877685", "createdAt": "2020-06-08T17:33:58Z", "author": {"login": "jakelandis"}, "path": "modules/ingest-common/license/log4j-api-LICENSE.txt", "diffHunk": "@@ -0,0 +1,202 @@\n+\n+                                 Apache License", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM1NjkyNQ=="}, "originalCommit": {"oid": "eea02311bbca37638816f234f4c38c6d88d7ab02"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3858, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}