{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NDQ5MDAw", "number": 63063, "title": "[ML] Auditor ensures template is installed before writes", "bodyText": "After upgrade the various auditors should not index messages until the latest template has been installed.\nIf the template is not present this change buffers the audit messages while a PUT template request is made then writes the back log of messages.", "createdAt": "2020-09-30T11:43:40Z", "url": "https://github.com/elastic/elasticsearch/pull/63063", "merged": true, "mergeCommit": {"oid": "08f1f96d3bff7cc02d18ec00ad797532a52b5717"}, "closed": true, "closedAt": "2020-10-05T20:05:22Z", "author": {"login": "davidkyle"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOjbmeABqjM4MzMzNTQ2MTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPjQo2gFqTUwMjAyMTUzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f18c02abc61cd8f43cd63b89d17def0f1796fe9c", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/f18c02abc61cd8f43cd63b89d17def0f1796fe9c", "committedDate": "2020-09-30T11:24:36Z", "message": "auditor test"}, "afterCommit": {"oid": "fd5ad54b6500b6bf4c97bc60766b25848c89df4b", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/fd5ad54b6500b6bf4c97bc60766b25848c89df4b", "committedDate": "2020-10-02T10:28:29Z", "message": "tidy up"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "62c3d0560ddba50c50b4d9f86c9645982b11abc8", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/62c3d0560ddba50c50b4d9f86c9645982b11abc8", "committedDate": "2020-10-02T13:47:36Z", "message": "code style"}, "afterCommit": {"oid": "243c49a640c81213a76db094725b4f878227d386", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/243c49a640c81213a76db094725b4f878227d386", "committedDate": "2020-10-02T15:22:41Z", "message": "code style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMjM2MTI3", "url": "https://github.com/elastic/elasticsearch/pull/63063#pullrequestreview-501236127", "createdAt": "2020-10-02T15:29:24Z", "commit": {"oid": "243c49a640c81213a76db094725b4f878227d386"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNToyOToyNFrOHbyDdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNTozMDo1MlrOHbyG7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5MzY4NQ==", "bodyText": "The retrying bulk persister (ResultsPersisterService) would be useful here but is not accessible in this package.\n#62779 fixes that by moving the persister to core but there is some debate about exactly what we should do with ResultsPersisterService and it probably isn't necessary here.", "url": "https://github.com/elastic/elasticsearch/pull/63063#discussion_r498893685", "createdAt": "2020-10-02T15:29:24Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditor.java", "diffHunk": "@@ -83,4 +168,21 @@ private XContentBuilder toXContentBuilder(ToXContent toXContent) {\n             throw new RuntimeException(e);\n         }\n     }\n+\n+    private void writeBacklog() {\n+        BulkRequest bulkRequest = new BulkRequest();\n+        ToXContent doc = backlog.poll();\n+        while (doc != null) {\n+            bulkRequest.add(indexRequest(doc));\n+            doc = backlog.poll();\n+        }\n+\n+        client.bulk(bulkRequest, ActionListener.wrap(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "243c49a640c81213a76db094725b4f878227d386"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5NDU3Mw==", "bodyText": "#63024 changes transforms to use a registry which would make this code much simpler", "url": "https://github.com/elastic/elasticsearch/pull/63063#discussion_r498894573", "createdAt": "2020-10-02T15:30:52Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/notifications/TransformAuditor.java", "diffHunk": "@@ -17,7 +28,38 @@\n  */\n public class TransformAuditor extends AbstractAuditor<TransformAuditMessage> {\n \n-    public TransformAuditor(Client client, String nodeName) {\n-        super(client, nodeName, TransformInternalIndexConstants.AUDIT_INDEX, TRANSFORM_ORIGIN, TransformAuditMessage::new);\n+    public TransformAuditor(Client client, String nodeName, ClusterService clusterService) {\n+        super(new OriginSettingClient(client, TRANSFORM_ORIGIN), TransformInternalIndexConstants.AUDIT_INDEX,\n+            TransformInternalIndexConstants.AUDIT_INDEX,\n+            () -> {\n+                try {\n+                    IndexTemplateMetadata templateMeta = TransformInternalIndex.getAuditIndexTemplateMetadata();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "243c49a640c81213a76db094725b4f878227d386"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMjYxODg4", "url": "https://github.com/elastic/elasticsearch/pull/63063#pullrequestreview-501261888", "createdAt": "2020-10-02T16:03:10Z", "commit": {"oid": "243c49a640c81213a76db094725b4f878227d386"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjowMzoxMVrOHbzMGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjoxNDo0M1rOHbzjNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxMjI4MA==", "bodyText": "I know there will be complexity, but we should make sure we don't breach some limit (10k, etc.) The size of the messages will probably be small enough so we don't have to worry about the bulk index byte size.\nBut the queue length is unbounded. We should check bounds somewhere.", "url": "https://github.com/elastic/elasticsearch/pull/63063#discussion_r498912280", "createdAt": "2020-10-02T16:03:11Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditor.java", "diffHunk": "@@ -83,4 +168,21 @@ private XContentBuilder toXContentBuilder(ToXContent toXContent) {\n             throw new RuntimeException(e);\n         }\n     }\n+\n+    private void writeBacklog() {\n+        BulkRequest bulkRequest = new BulkRequest();\n+        ToXContent doc = backlog.poll();\n+        while (doc != null) {\n+            bulkRequest.add(indexRequest(doc));\n+            doc = backlog.poll();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "243c49a640c81213a76db094725b4f878227d386"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxMzA1Nw==", "bodyText": "Is it possible that we empty the backlog, but then have to add something else to it?\nI know this only happens on template changes, but it seems like setting it to null here is unnecessary and risks an NPE.", "url": "https://github.com/elastic/elasticsearch/pull/63063#discussion_r498913057", "createdAt": "2020-10-02T16:04:40Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditor.java", "diffHunk": "@@ -83,4 +168,21 @@ private XContentBuilder toXContentBuilder(ToXContent toXContent) {\n             throw new RuntimeException(e);\n         }\n     }\n+\n+    private void writeBacklog() {\n+        BulkRequest bulkRequest = new BulkRequest();\n+        ToXContent doc = backlog.poll();\n+        while (doc != null) {\n+            bulkRequest.add(indexRequest(doc));\n+            doc = backlog.poll();\n+        }\n+\n+        client.bulk(bulkRequest, ActionListener.wrap(\n+            bulkItemResponses -> {\n+                backlog = null;\n+                logger.trace(\"Successfully wrote audit message backlog after upgrading template\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "243c49a640c81213a76db094725b4f878227d386"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxMzQ1MQ==", "bodyText": "Also, it would be good to log if there were failures. we could just write a warning, and then have the full failure stack be debug or something.", "url": "https://github.com/elastic/elasticsearch/pull/63063#discussion_r498913451", "createdAt": "2020-10-02T16:05:22Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditor.java", "diffHunk": "@@ -83,4 +168,21 @@ private XContentBuilder toXContentBuilder(ToXContent toXContent) {\n             throw new RuntimeException(e);\n         }\n     }\n+\n+    private void writeBacklog() {\n+        BulkRequest bulkRequest = new BulkRequest();\n+        ToXContent doc = backlog.poll();\n+        while (doc != null) {\n+            bulkRequest.add(indexRequest(doc));\n+            doc = backlog.poll();\n+        }\n+\n+        client.bulk(bulkRequest, ActionListener.wrap(\n+            bulkItemResponses -> {\n+                backlog = null;\n+                logger.trace(\"Successfully wrote audit message backlog after upgrading template\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxMzA1Nw=="}, "originalCommit": {"oid": "243c49a640c81213a76db094725b4f878227d386"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxNDYwOQ==", "bodyText": "This synchronized block seems unnecessary.", "url": "https://github.com/elastic/elasticsearch/pull/63063#discussion_r498914609", "createdAt": "2020-10-02T16:07:44Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditor.java", "diffHunk": "@@ -64,16 +100,65 @@ private void onIndexFailure(Exception exception) {\n     }\n \n     private void indexDoc(ToXContent toXContent) {\n+        if (hasLatestTemplate.get()) {\n+            writeDoc(toXContent);\n+            return;\n+        }\n+\n+        if (MlIndexAndAlias.hasIndexTemplate(clusterService.state(), templateName)) {\n+            synchronized (this) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "243c49a640c81213a76db094725b4f878227d386"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxNDY4Ng==", "bodyText": "This synchronized block seems unnecessary.", "url": "https://github.com/elastic/elasticsearch/pull/63063#discussion_r498914686", "createdAt": "2020-10-02T16:07:53Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditor.java", "diffHunk": "@@ -64,16 +100,65 @@ private void onIndexFailure(Exception exception) {\n     }\n \n     private void indexDoc(ToXContent toXContent) {\n+        if (hasLatestTemplate.get()) {\n+            writeDoc(toXContent);\n+            return;\n+        }\n+\n+        if (MlIndexAndAlias.hasIndexTemplate(clusterService.state(), templateName)) {\n+            synchronized (this) {\n+                hasLatestTemplate.set(true);\n+            }\n+            writeDoc(toXContent);\n+            return;\n+        }\n+\n+        ActionListener<Boolean> putTemplateListener = ActionListener.wrap(\n+            r -> {\n+                synchronized (this) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "243c49a640c81213a76db094725b4f878227d386"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxNTg0MQ==", "bodyText": "This synchronize block makes sense as we don't want multiple callers to put the new template.\nBut, I don't think the if (hasLatestTemplate.get() == false) { warrants the sync blocks for the atomic booleans elsewhere.\nThe read and writes to this value are already protected and none of the other checks do anything mutable to the system.", "url": "https://github.com/elastic/elasticsearch/pull/63063#discussion_r498915841", "createdAt": "2020-10-02T16:10:00Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditor.java", "diffHunk": "@@ -64,16 +100,65 @@ private void onIndexFailure(Exception exception) {\n     }\n \n     private void indexDoc(ToXContent toXContent) {\n+        if (hasLatestTemplate.get()) {\n+            writeDoc(toXContent);\n+            return;\n+        }\n+\n+        if (MlIndexAndAlias.hasIndexTemplate(clusterService.state(), templateName)) {\n+            synchronized (this) {\n+                hasLatestTemplate.set(true);\n+            }\n+            writeDoc(toXContent);\n+            return;\n+        }\n+\n+        ActionListener<Boolean> putTemplateListener = ActionListener.wrap(\n+            r -> {\n+                synchronized (this) {\n+                    hasLatestTemplate.set(true);\n+                }\n+                logger.info(\"Auditor template [{}] successfully installed\", templateName);\n+                writeBacklog();\n+                putTemplateInProgress.set(false);\n+            },\n+            e -> {\n+                logger.warn(\"Error putting latest template [{}]\", templateName);\n+                putTemplateInProgress.set(false);\n+            }\n+        );\n+\n+        synchronized (this) {\n+            if (hasLatestTemplate.get() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "243c49a640c81213a76db094725b4f878227d386"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxODE5OQ==", "bodyText": "Seems like it could be a single exchange request.", "url": "https://github.com/elastic/elasticsearch/pull/63063#discussion_r498918199", "createdAt": "2020-10-02T16:14:43Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/notifications/AbstractAuditor.java", "diffHunk": "@@ -64,16 +100,65 @@ private void onIndexFailure(Exception exception) {\n     }\n \n     private void indexDoc(ToXContent toXContent) {\n+        if (hasLatestTemplate.get()) {\n+            writeDoc(toXContent);\n+            return;\n+        }\n+\n+        if (MlIndexAndAlias.hasIndexTemplate(clusterService.state(), templateName)) {\n+            synchronized (this) {\n+                hasLatestTemplate.set(true);\n+            }\n+            writeDoc(toXContent);\n+            return;\n+        }\n+\n+        ActionListener<Boolean> putTemplateListener = ActionListener.wrap(\n+            r -> {\n+                synchronized (this) {\n+                    hasLatestTemplate.set(true);\n+                }\n+                logger.info(\"Auditor template [{}] successfully installed\", templateName);\n+                writeBacklog();\n+                putTemplateInProgress.set(false);\n+            },\n+            e -> {\n+                logger.warn(\"Error putting latest template [{}]\", templateName);\n+                putTemplateInProgress.set(false);\n+            }\n+        );\n+\n+        synchronized (this) {\n+            if (hasLatestTemplate.get() == false) {\n+                // synchronized so that hasLatestTemplate does not change value\n+                // between the read and adding to the backlog\n+                backlog.add(toXContent);\n+\n+                // stop multiple invocations\n+                if (putTemplateInProgress.get() == false) {\n+                    putTemplateInProgress.set(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "243c49a640c81213a76db094725b4f878227d386"}, "originalPosition": 126}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7b4093b5c3b6e8e68cbab68385d9785b591ad13", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/f7b4093b5c3b6e8e68cbab68385d9785b591ad13", "committedDate": "2020-10-05T10:18:46Z", "message": "Use originsettingclient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b5a6b8e11f25c3edd8427a2029aaab90a308664", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/8b5a6b8e11f25c3edd8427a2029aaab90a308664", "committedDate": "2020-10-05T10:18:46Z", "message": "Add backlog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f72c7ce221c0c2bc7f8e0f0cb047905de383d7d2", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/f72c7ce221c0c2bc7f8e0f0cb047905de383d7d2", "committedDate": "2020-10-05T10:18:46Z", "message": "just need the template now"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0440cb1e576a18b2e4f9fa6a047279a67d70ff20", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/0440cb1e576a18b2e4f9fa6a047279a67d70ff20", "committedDate": "2020-10-05T10:18:46Z", "message": "Use IndexTemplateConfig in auditors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1bb0e6fb21b6181243a64c74aea15c3ced49999", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/b1bb0e6fb21b6181243a64c74aea15c3ced49999", "committedDate": "2020-10-05T10:18:46Z", "message": "Fix test compilation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a969b1e85dc18622c92433545ce19310506b7d2", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/4a969b1e85dc18622c92433545ce19310506b7d2", "committedDate": "2020-10-05T10:18:46Z", "message": "auditor test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "896e5ca10dab6e74af84b88f0aea1be3638dbbf3", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/896e5ca10dab6e74af84b88f0aea1be3638dbbf3", "committedDate": "2020-10-05T10:18:46Z", "message": "More hacking for tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d25edd2e87488184661cc9bd0b3428447cf10495", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/d25edd2e87488184661cc9bd0b3428447cf10495", "committedDate": "2020-10-05T10:18:46Z", "message": "cluster change?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efd8407192dd6ccd056484b0c9e3ef50b75d8cfd", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/efd8407192dd6ccd056484b0c9e3ef50b75d8cfd", "committedDate": "2020-10-05T10:18:46Z", "message": "Revert \"cluster change?\"\n\nThis reverts commit 6a121da64baf897d228fdc9cc83325bb92f893fe."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0944d860a769d917677bb03db08e40efc09b33cb", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/0944d860a769d917677bb03db08e40efc09b33cb", "committedDate": "2020-10-05T10:18:46Z", "message": "tidy up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cb88490e9d639fe1be9f0f6b8bc1243d7a29958", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/8cb88490e9d639fe1be9f0f6b8bc1243d7a29958", "committedDate": "2020-10-05T10:18:46Z", "message": "Use Put Template supplier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f697ec4995096180f77ee08ad5f9ebc6c67d1a4c", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/f697ec4995096180f77ee08ad5f9ebc6c67d1a4c", "committedDate": "2020-10-05T10:18:46Z", "message": "code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3d6e73933adbca57d302ce7a538a5e42645c7dd", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/c3d6e73933adbca57d302ce7a538a5e42645c7dd", "committedDate": "2020-10-05T10:18:46Z", "message": "Review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00b89abd0d4f1dbca0668092d1641ed7766b5342", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/00b89abd0d4f1dbca0668092d1641ed7766b5342", "committedDate": "2020-10-05T10:18:46Z", "message": "Actually use the null backlog object to detect errors in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d74aa5000ba2b7738e37d770cd884dab2a7596be", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/d74aa5000ba2b7738e37d770cd884dab2a7596be", "committedDate": "2020-10-05T10:18:46Z", "message": "drop oldest entries if queue it too large"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "681728be4807642684fa919e9e691ed3f5613bb9", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/681728be4807642684fa919e9e691ed3f5613bb9", "committedDate": "2020-10-02T18:12:32Z", "message": "Actually use the null backlog object to detect errors in test"}, "afterCommit": {"oid": "d74aa5000ba2b7738e37d770cd884dab2a7596be", "author": {"user": {"login": "davidkyle", "name": "David Kyle"}}, "url": "https://github.com/elastic/elasticsearch/commit/d74aa5000ba2b7738e37d770cd884dab2a7596be", "committedDate": "2020-10-05T10:18:46Z", "message": "drop oldest entries if queue it too large"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMDIxNTMx", "url": "https://github.com/elastic/elasticsearch/pull/63063#pullrequestreview-502021531", "createdAt": "2020-10-05T12:50:57Z", "commit": {"oid": "d74aa5000ba2b7738e37d770cd884dab2a7596be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4557, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}