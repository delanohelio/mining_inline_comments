{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MjA3NTEz", "number": 66109, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOTowOToyNFrOFEIS0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMDo1MjozMVrOFK2O5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODc0NTEyOnYy", "diffSide": "RIGHT", "path": "gradle/ide.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOTowOToyNFrOIEGrJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTozMzo1OFrOIFMU5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE3NDU2Nw==", "bodyText": "can we have proper up-to-date checking for this in case nothing changed?", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r541174567", "createdAt": "2020-12-11T19:09:24Z", "author": {"login": "breskeby"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -21,6 +24,38 @@ allprojects {\n   }\n }\n \n+tasks.register('configureIdeCheckstyle') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ee3d4057302d0615cb5654879a65973370ce5c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1ODUzMw==", "bodyText": "I've defined inputs and outputs, hopefully that's what you were looking for?", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r542258533", "createdAt": "2020-12-14T10:04:22Z", "author": {"login": "pugnascotia"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -21,6 +24,38 @@ allprojects {\n   }\n }\n \n+tasks.register('configureIdeCheckstyle') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE3NDU2Nw=="}, "originalCommit": {"oid": "c6ee3d4057302d0615cb5654879a65973370ce5c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxNTc1MQ==", "bodyText": "yes. thx", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r542315751", "createdAt": "2020-12-14T11:33:58Z", "author": {"login": "breskeby"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -21,6 +24,38 @@ allprojects {\n   }\n }\n \n+tasks.register('configureIdeCheckstyle') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE3NDU2Nw=="}, "originalCommit": {"oid": "c6ee3d4057302d0615cb5654879a65973370ce5c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODg0NDU4OnYy", "diffSide": "RIGHT", "path": "gradle/ide.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOToyMzoyM1rOIEHrvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDowNDo0MFrOIFI2Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE5MTEwMQ==", "bodyText": "generated files should live in the build folder in general. any particular reason its not", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r541191101", "createdAt": "2020-12-11T19:23:23Z", "author": {"login": "breskeby"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -21,6 +24,38 @@ allprojects {\n   }\n }\n \n+tasks.register('configureIdeCheckstyle') {\n+  group = 'ide'\n+  description = 'Generated a suitable checkstyle config for IDEs'\n+\n+  doLast {\n+    // Create an IDE-specific checkstyle config by first copying the standard config\n+    Files.copy(\n+      Paths.get(project.file(\"buildSrc/src/main/resources/checkstyle.xml\").getPath()),\n+      Paths.get(project.file(\"buildSrc/src/main/resources/checkstyle_ide.xml\").getPath()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ee3d4057302d0615cb5654879a65973370ce5c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIwMTQxMA==", "bodyText": "Otherwise we tangle with the up-to-date check for the processResources task here as src/main/resources is considered its input", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r541201410", "createdAt": "2020-12-11T19:34:15Z", "author": {"login": "breskeby"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -21,6 +24,38 @@ allprojects {\n   }\n }\n \n+tasks.register('configureIdeCheckstyle') {\n+  group = 'ide'\n+  description = 'Generated a suitable checkstyle config for IDEs'\n+\n+  doLast {\n+    // Create an IDE-specific checkstyle config by first copying the standard config\n+    Files.copy(\n+      Paths.get(project.file(\"buildSrc/src/main/resources/checkstyle.xml\").getPath()),\n+      Paths.get(project.file(\"buildSrc/src/main/resources/checkstyle_ide.xml\").getPath()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE5MTEwMQ=="}, "originalCommit": {"oid": "c6ee3d4057302d0615cb5654879a65973370ce5c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1ODc2Mg==", "bodyText": "I've moved the generated config to 'build'.", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r542258762", "createdAt": "2020-12-14T10:04:40Z", "author": {"login": "pugnascotia"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -21,6 +24,38 @@ allprojects {\n   }\n }\n \n+tasks.register('configureIdeCheckstyle') {\n+  group = 'ide'\n+  description = 'Generated a suitable checkstyle config for IDEs'\n+\n+  doLast {\n+    // Create an IDE-specific checkstyle config by first copying the standard config\n+    Files.copy(\n+      Paths.get(project.file(\"buildSrc/src/main/resources/checkstyle.xml\").getPath()),\n+      Paths.get(project.file(\"buildSrc/src/main/resources/checkstyle_ide.xml\").getPath()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE5MTEwMQ=="}, "originalCommit": {"oid": "c6ee3d4057302d0615cb5654879a65973370ce5c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODg5Njc1OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOTozMjowNlrOIEIMag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDowNDo1MlrOIFI24A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE5OTQ2Ng==", "bodyText": "the settings path is '... Other Settings > Eclipse Code Formatter'", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r541199466", "createdAt": "2020-12-11T19:32:06Z", "author": {"login": "breskeby"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -164,6 +164,47 @@ You can import the Elasticsearch project into IntelliJ IDEA via:\n  - In the subsequent dialog navigate to the root `build.gradle` file\n  - In the subsequent dialog select **Open as Project**\n \n+#### Checkstyle\n+\n+If you have the [Checkstyle] plugin installed, you can configure IntelliJ to\n+check the Elasticsearch code. However, the Checkstyle configuration file does\n+not work by default with the IntelliJ plugin, so instead a IDE-specific config\n+file is generated automatically after IntelliJ finishes syncing.\n+\n+   - Open **Preferences > Tools > Checkstyle**\n+   - Change the \"Scan Scope\" to \"Only Java sources (including tests)\"\n+   - Check the \"+\" under \"Configuration file\"\n+   - Set \"Description\" to \"Elasticsearch\" (or whatever you want)\n+   - Select \"Use a local Checkstyle file\"\n+   - For the \"File\", navigate to `buildSrc/src/main/resources/checkstyle_ide.xml`\n+   - Tick \"Store relative to project location\"\n+   - Click \"Next\"\n+   - The Checkstyle config file contains the variable `config_loc`, and\n+     IntelliJ will ask for a value. Fill in `buildSrc/src/main/resources`\n+   - Click \"Next\", then \"Finish\".\n+   - Click the box next to the new configuration to make it \"Active\". Without doing this,\n+     you'll have to explicitly choose the \"Elasticsearch\" configuration in the Checkstyle\n+     tool window and run the check manually. You can still do this with an active config,\n+     of course.\n+   - Click \"OK\" to apply the new preferences\n+\n+#### Formatting\n+\n+We are in the process of migrating towards automatic formatting Java file\n+using [spotless], backed by the Eclipse formatter. If you have the [Eclipse\n+Code Formatter] installed, you can apply formatting directly in IntelliJ.\n+\n+   - Open **Preferences > Other Settings > Checkstyle**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ee3d4057302d0615cb5654879a65973370ce5c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1ODkxMg==", "bodyText": "Ah, copy-paste error.", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r542258912", "createdAt": "2020-12-14T10:04:52Z", "author": {"login": "pugnascotia"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -164,6 +164,47 @@ You can import the Elasticsearch project into IntelliJ IDEA via:\n  - In the subsequent dialog navigate to the root `build.gradle` file\n  - In the subsequent dialog select **Open as Project**\n \n+#### Checkstyle\n+\n+If you have the [Checkstyle] plugin installed, you can configure IntelliJ to\n+check the Elasticsearch code. However, the Checkstyle configuration file does\n+not work by default with the IntelliJ plugin, so instead a IDE-specific config\n+file is generated automatically after IntelliJ finishes syncing.\n+\n+   - Open **Preferences > Tools > Checkstyle**\n+   - Change the \"Scan Scope\" to \"Only Java sources (including tests)\"\n+   - Check the \"+\" under \"Configuration file\"\n+   - Set \"Description\" to \"Elasticsearch\" (or whatever you want)\n+   - Select \"Use a local Checkstyle file\"\n+   - For the \"File\", navigate to `buildSrc/src/main/resources/checkstyle_ide.xml`\n+   - Tick \"Store relative to project location\"\n+   - Click \"Next\"\n+   - The Checkstyle config file contains the variable `config_loc`, and\n+     IntelliJ will ask for a value. Fill in `buildSrc/src/main/resources`\n+   - Click \"Next\", then \"Finish\".\n+   - Click the box next to the new configuration to make it \"Active\". Without doing this,\n+     you'll have to explicitly choose the \"Elasticsearch\" configuration in the Checkstyle\n+     tool window and run the check manually. You can still do this with an active config,\n+     of course.\n+   - Click \"OK\" to apply the new preferences\n+\n+#### Formatting\n+\n+We are in the process of migrating towards automatic formatting Java file\n+using [spotless], backed by the Eclipse formatter. If you have the [Eclipse\n+Code Formatter] installed, you can apply formatting directly in IntelliJ.\n+\n+   - Open **Preferences > Other Settings > Checkstyle**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE5OTQ2Ng=="}, "originalCommit": {"oid": "c6ee3d4057302d0615cb5654879a65973370ce5c"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODkwMjc4OnYy", "diffSide": "RIGHT", "path": ".gitignore", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOTozMzoxNVrOIEIQOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOTozMzoxNVrOIEIQOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIwMDQ0MA==", "bodyText": "as said I think generated files should live in buildSrc/build instead. then we can remove this line again", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r541200440", "createdAt": "2020-12-11T19:33:15Z", "author": {"login": "breskeby"}, "path": ".gitignore", "diffHunk": "@@ -56,3 +56,6 @@ testfixtures_shared/\n \n # These are generated from .ci/jobs.t\n .ci/jobs/\n+\n+# Generated file\n+buildSrc/src/main/resources/checkstyle_ide.xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ee3d4057302d0615cb5654879a65973370ce5c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2OTE4NjMxOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMDo1MjozMVrOINtVlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMTowMzoyOFrOINtqTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0NTIwNQ==", "bodyText": "I wonder what this means in practice: if we configure the formatter, formatting will be applied everywhere which will cause noise within projects that are not yet automatically formatted? Been seeing this with imports order and I am wondering if this is what's causing it.", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r551245205", "createdAt": "2021-01-04T10:52:31Z", "author": {"login": "javanna"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -164,6 +164,47 @@ You can import the Elasticsearch project into IntelliJ IDEA via:\n  - In the subsequent dialog navigate to the root `build.gradle` file\n  - In the subsequent dialog select **Open as Project**\n \n+#### Checkstyle\n+\n+If you have the [Checkstyle] plugin installed, you can configure IntelliJ to\n+check the Elasticsearch code. However, the Checkstyle configuration file does\n+not work by default with the IntelliJ plugin, so instead an IDE-specific config\n+file is generated automatically after IntelliJ finishes syncing.\n+\n+   1. Open **Preferences > Tools > Checkstyle**\n+   2. Change the \"Scan Scope\" to \"Only Java sources (including tests)\"\n+   3. Check the \"+\" under \"Configuration file\"\n+   4. Set \"Description\" to \"Elasticsearch\" (or whatever you want)\n+   5. Select \"Use a local Checkstyle file\"\n+   6. For the \"File\", navigate to `build/checkstyle_ide.xml`\n+   7. Tick \"Store relative to project location\"\n+   8. Click \"Next\"\n+   9. The Checkstyle config file contains the variable `config_loc`, and\n+      IntelliJ will ask for a value. Fill in `buildSrc/src/main/resources`.\n+      This allows the config file to reference the exclusions file in that directory.\n+   10. Click \"Next\", then \"Finish\".\n+   11. Click the box next to the new configuration to make it \"Active\". Without doing this,\n+       you'll have to explicitly choose the \"Elasticsearch\" configuration in the Checkstyle\n+       tool window and run the check manually. You can still do this with an active config.\n+   12. Click \"OK\" to apply the new preferences\n+\n+#### Formatting\n+\n+We are in the process of migrating towards automatic formatting Java file\n+using [spotless], backed by the Eclipse formatter. If you have the [Eclipse\n+Code Formatter] installed, you can apply formatting directly in IntelliJ.\n+\n+   1. Open **Preferences > Other Settings > Eclipse Code Formatter**\n+   2. Click \"Use the Eclipse Code Formatter\"\n+   3. Under \"Eclipse formatter config\", select \"Eclipse workspace/project\n+      folder or config file\"\n+   4. Click \"Browse\", and navigate to the file `buildSrc/formatterConfig.xml`\n+   5. Click \"OK\"\n+\n+Note that only some sub-projects in the Elasticsearch project are currently\n+fully-formatted. You can see a list of project that **are not**\n+automatically formatted in [gradle/formatting.gradle](gradle/formatting.gradle).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f058f07323cdc43103a4cfd422387d4cc0dd525"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0Nzc1NA==", "bodyText": "The policy is that only new projects are opted-in to formatting. If you're seeing issues with imports in an project that is listed in gradle/formatting.gradle, then either that's a bug that I haven't seen before, or something else is messing with your imports. Let me know when this comes up next and we can look into it.", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r551247754", "createdAt": "2021-01-04T10:57:24Z", "author": {"login": "pugnascotia"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -164,6 +164,47 @@ You can import the Elasticsearch project into IntelliJ IDEA via:\n  - In the subsequent dialog navigate to the root `build.gradle` file\n  - In the subsequent dialog select **Open as Project**\n \n+#### Checkstyle\n+\n+If you have the [Checkstyle] plugin installed, you can configure IntelliJ to\n+check the Elasticsearch code. However, the Checkstyle configuration file does\n+not work by default with the IntelliJ plugin, so instead an IDE-specific config\n+file is generated automatically after IntelliJ finishes syncing.\n+\n+   1. Open **Preferences > Tools > Checkstyle**\n+   2. Change the \"Scan Scope\" to \"Only Java sources (including tests)\"\n+   3. Check the \"+\" under \"Configuration file\"\n+   4. Set \"Description\" to \"Elasticsearch\" (or whatever you want)\n+   5. Select \"Use a local Checkstyle file\"\n+   6. For the \"File\", navigate to `build/checkstyle_ide.xml`\n+   7. Tick \"Store relative to project location\"\n+   8. Click \"Next\"\n+   9. The Checkstyle config file contains the variable `config_loc`, and\n+      IntelliJ will ask for a value. Fill in `buildSrc/src/main/resources`.\n+      This allows the config file to reference the exclusions file in that directory.\n+   10. Click \"Next\", then \"Finish\".\n+   11. Click the box next to the new configuration to make it \"Active\". Without doing this,\n+       you'll have to explicitly choose the \"Elasticsearch\" configuration in the Checkstyle\n+       tool window and run the check manually. You can still do this with an active config.\n+   12. Click \"OK\" to apply the new preferences\n+\n+#### Formatting\n+\n+We are in the process of migrating towards automatic formatting Java file\n+using [spotless], backed by the Eclipse formatter. If you have the [Eclipse\n+Code Formatter] installed, you can apply formatting directly in IntelliJ.\n+\n+   1. Open **Preferences > Other Settings > Eclipse Code Formatter**\n+   2. Click \"Use the Eclipse Code Formatter\"\n+   3. Under \"Eclipse formatter config\", select \"Eclipse workspace/project\n+      folder or config file\"\n+   4. Click \"Browse\", and navigate to the file `buildSrc/formatterConfig.xml`\n+   5. Click \"OK\"\n+\n+Note that only some sub-projects in the Elasticsearch project are currently\n+fully-formatted. You can see a list of project that **are not**\n+automatically formatted in [gradle/formatting.gradle](gradle/formatting.gradle).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0NTIwNQ=="}, "originalCommit": {"oid": "6f058f07323cdc43103a4cfd422387d4cc0dd525"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0OTkwMQ==", "bodyText": "I believe what happened is that once I enabled the Eclipse Code Formatter, I also had Optimize Imports on, which messes up imports order as I touch files. I don't recall if I enabled it explicitly, I disabled it now.", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r551249901", "createdAt": "2021-01-04T11:02:07Z", "author": {"login": "javanna"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -164,6 +164,47 @@ You can import the Elasticsearch project into IntelliJ IDEA via:\n  - In the subsequent dialog navigate to the root `build.gradle` file\n  - In the subsequent dialog select **Open as Project**\n \n+#### Checkstyle\n+\n+If you have the [Checkstyle] plugin installed, you can configure IntelliJ to\n+check the Elasticsearch code. However, the Checkstyle configuration file does\n+not work by default with the IntelliJ plugin, so instead an IDE-specific config\n+file is generated automatically after IntelliJ finishes syncing.\n+\n+   1. Open **Preferences > Tools > Checkstyle**\n+   2. Change the \"Scan Scope\" to \"Only Java sources (including tests)\"\n+   3. Check the \"+\" under \"Configuration file\"\n+   4. Set \"Description\" to \"Elasticsearch\" (or whatever you want)\n+   5. Select \"Use a local Checkstyle file\"\n+   6. For the \"File\", navigate to `build/checkstyle_ide.xml`\n+   7. Tick \"Store relative to project location\"\n+   8. Click \"Next\"\n+   9. The Checkstyle config file contains the variable `config_loc`, and\n+      IntelliJ will ask for a value. Fill in `buildSrc/src/main/resources`.\n+      This allows the config file to reference the exclusions file in that directory.\n+   10. Click \"Next\", then \"Finish\".\n+   11. Click the box next to the new configuration to make it \"Active\". Without doing this,\n+       you'll have to explicitly choose the \"Elasticsearch\" configuration in the Checkstyle\n+       tool window and run the check manually. You can still do this with an active config.\n+   12. Click \"OK\" to apply the new preferences\n+\n+#### Formatting\n+\n+We are in the process of migrating towards automatic formatting Java file\n+using [spotless], backed by the Eclipse formatter. If you have the [Eclipse\n+Code Formatter] installed, you can apply formatting directly in IntelliJ.\n+\n+   1. Open **Preferences > Other Settings > Eclipse Code Formatter**\n+   2. Click \"Use the Eclipse Code Formatter\"\n+   3. Under \"Eclipse formatter config\", select \"Eclipse workspace/project\n+      folder or config file\"\n+   4. Click \"Browse\", and navigate to the file `buildSrc/formatterConfig.xml`\n+   5. Click \"OK\"\n+\n+Note that only some sub-projects in the Elasticsearch project are currently\n+fully-formatted. You can see a list of project that **are not**\n+automatically formatted in [gradle/formatting.gradle](gradle/formatting.gradle).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0NTIwNQ=="}, "originalCommit": {"oid": "6f058f07323cdc43103a4cfd422387d4cc0dd525"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI1MDUwOQ==", "bodyText": "Aha, yes, I've run into that too. I disable the imports option in the Eclipse formatter plugin.", "url": "https://github.com/elastic/elasticsearch/pull/66109#discussion_r551250509", "createdAt": "2021-01-04T11:03:28Z", "author": {"login": "pugnascotia"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -164,6 +164,47 @@ You can import the Elasticsearch project into IntelliJ IDEA via:\n  - In the subsequent dialog navigate to the root `build.gradle` file\n  - In the subsequent dialog select **Open as Project**\n \n+#### Checkstyle\n+\n+If you have the [Checkstyle] plugin installed, you can configure IntelliJ to\n+check the Elasticsearch code. However, the Checkstyle configuration file does\n+not work by default with the IntelliJ plugin, so instead an IDE-specific config\n+file is generated automatically after IntelliJ finishes syncing.\n+\n+   1. Open **Preferences > Tools > Checkstyle**\n+   2. Change the \"Scan Scope\" to \"Only Java sources (including tests)\"\n+   3. Check the \"+\" under \"Configuration file\"\n+   4. Set \"Description\" to \"Elasticsearch\" (or whatever you want)\n+   5. Select \"Use a local Checkstyle file\"\n+   6. For the \"File\", navigate to `build/checkstyle_ide.xml`\n+   7. Tick \"Store relative to project location\"\n+   8. Click \"Next\"\n+   9. The Checkstyle config file contains the variable `config_loc`, and\n+      IntelliJ will ask for a value. Fill in `buildSrc/src/main/resources`.\n+      This allows the config file to reference the exclusions file in that directory.\n+   10. Click \"Next\", then \"Finish\".\n+   11. Click the box next to the new configuration to make it \"Active\". Without doing this,\n+       you'll have to explicitly choose the \"Elasticsearch\" configuration in the Checkstyle\n+       tool window and run the check manually. You can still do this with an active config.\n+   12. Click \"OK\" to apply the new preferences\n+\n+#### Formatting\n+\n+We are in the process of migrating towards automatic formatting Java file\n+using [spotless], backed by the Eclipse formatter. If you have the [Eclipse\n+Code Formatter] installed, you can apply formatting directly in IntelliJ.\n+\n+   1. Open **Preferences > Other Settings > Eclipse Code Formatter**\n+   2. Click \"Use the Eclipse Code Formatter\"\n+   3. Under \"Eclipse formatter config\", select \"Eclipse workspace/project\n+      folder or config file\"\n+   4. Click \"Browse\", and navigate to the file `buildSrc/formatterConfig.xml`\n+   5. Click \"OK\"\n+\n+Note that only some sub-projects in the Elasticsearch project are currently\n+fully-formatted. You can see a list of project that **are not**\n+automatically formatted in [gradle/formatting.gradle](gradle/formatting.gradle).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0NTIwNQ=="}, "originalCommit": {"oid": "6f058f07323cdc43103a4cfd422387d4cc0dd525"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4703, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}