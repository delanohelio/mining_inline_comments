{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MjE1MjM3", "number": 51564, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzoyMTozOFrODbeWFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwODoxMDowN1rODbe9fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTM1MzE5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzoyMTozOFrOFi-rTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTo1NzoyOFrOFmrn5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyMjc5Ng==", "bodyText": "This is probably fine, only wanted to be sure we want xpack in the name. Seems most xpack components have that, except ilm, slm and transform, so I am guessing yes?", "url": "https://github.com/elastic/elasticsearch/pull/51564#discussion_r372222796", "createdAt": "2020-01-29T07:21:38Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling.action;\n+\n+import org.elasticsearch.action.ActionRequestValidationException;\n+import org.elasticsearch.action.ActionResponse;\n+import org.elasticsearch.action.ActionType;\n+import org.elasticsearch.action.support.master.AcknowledgedRequest;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+public class GetAutoscalingDecisionAction extends ActionType<GetAutoscalingDecisionAction.Response> {\n+\n+    public static final GetAutoscalingDecisionAction INSTANCE = new GetAutoscalingDecisionAction();\n+    public static final String NAME = \"cluster:admin/xpack/autoscaling/get_autoscaling_decision\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee28d8ca1b11961675aa255cb1a1d317d47672a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwNDkzNA==", "bodyText": "I'm good leaving it out. I pushed 0db163a.", "url": "https://github.com/elastic/elasticsearch/pull/51564#discussion_r376104934", "createdAt": "2020-02-06T21:57:28Z", "author": {"login": "jasontedor"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling.action;\n+\n+import org.elasticsearch.action.ActionRequestValidationException;\n+import org.elasticsearch.action.ActionResponse;\n+import org.elasticsearch.action.ActionType;\n+import org.elasticsearch.action.support.master.AcknowledgedRequest;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+public class GetAutoscalingDecisionAction extends ActionType<GetAutoscalingDecisionAction.Response> {\n+\n+    public static final GetAutoscalingDecisionAction INSTANCE = new GetAutoscalingDecisionAction();\n+    public static final String NAME = \"cluster:admin/xpack/autoscaling/get_autoscaling_decision\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyMjc5Ng=="}, "originalCommit": {"oid": "2ee28d8ca1b11961675aa255cb1a1d317d47672a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTM1Nzc0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzoyNDoyNVrOFi-uDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzoyNDoyNVrOFi-uDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyMzUwMQ==", "bodyText": "I would opt to remove the second autoscaling in the name, i.e., just:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String NAME = \"cluster:admin/xpack/autoscaling/get_autoscaling_decision\";\n          \n          \n            \n                public static final String NAME = \"cluster:admin/xpack/autoscaling/get_decision\";", "url": "https://github.com/elastic/elasticsearch/pull/51564#discussion_r372223501", "createdAt": "2020-01-29T07:24:25Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling.action;\n+\n+import org.elasticsearch.action.ActionRequestValidationException;\n+import org.elasticsearch.action.ActionResponse;\n+import org.elasticsearch.action.ActionType;\n+import org.elasticsearch.action.support.master.AcknowledgedRequest;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+public class GetAutoscalingDecisionAction extends ActionType<GetAutoscalingDecisionAction.Response> {\n+\n+    public static final GetAutoscalingDecisionAction INSTANCE = new GetAutoscalingDecisionAction();\n+    public static final String NAME = \"cluster:admin/xpack/autoscaling/get_autoscaling_decision\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee28d8ca1b11961675aa255cb1a1d317d47672a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTM2OTkyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzozMDo1NFrOFi-1OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzozMDo1NFrOFi-1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyNTMzNw==", "bodyText": "nit: whitespace", "url": "https://github.com/elastic/elasticsearch/pull/51564#discussion_r372225337", "createdAt": "2020-01-29T07:30:54Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling.action;\n+\n+import org.elasticsearch.action.ActionRequestValidationException;\n+import org.elasticsearch.action.ActionResponse;\n+import org.elasticsearch.action.ActionType;\n+import org.elasticsearch.action.support.master.AcknowledgedRequest;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+public class GetAutoscalingDecisionAction extends ActionType<GetAutoscalingDecisionAction.Response> {\n+\n+    public static final GetAutoscalingDecisionAction INSTANCE = new GetAutoscalingDecisionAction();\n+    public static final String NAME = \"cluster:admin/xpack/autoscaling/get_autoscaling_decision\";\n+\n+    private GetAutoscalingDecisionAction() {\n+        super(NAME, Response::new);\n+    }\n+\n+    public static class Request extends AcknowledgedRequest<GetAutoscalingDecisionAction.Request> implements ToXContentObject {\n+\n+        public Request() {\n+\n+        }\n+\n+        public Request(final StreamInput in) throws IOException {\n+            super(in);\n+        }\n+\n+        @Override\n+        public void writeTo(final StreamOutput out) throws IOException {\n+            super.writeTo(out);\n+        }\n+\n+        @Override\n+        public ActionRequestValidationException validate() {\n+            return null;\n+        }\n+\n+        @Override\n+        public XContentBuilder toXContent(final XContentBuilder builder, final Params params) throws IOException {\n+            builder.startObject();\n+            {\n+\n+            }\n+            builder.endObject();\n+            return builder;\n+        }\n+\n+    }\n+\n+    public static class Response extends ActionResponse implements ToXContentObject {\n+\n+        public Response() {\n+\n+        }\n+\n+        public Response(final StreamInput in) throws IOException {\n+            super(in);\n+        }\n+\n+        @Override\n+        public void writeTo(final StreamOutput out) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee28d8ca1b11961675aa255cb1a1d317d47672a"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTM3MDI1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzozMTowN1rOFi-1bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzozMTowN1rOFi-1bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyNTM4OQ==", "bodyText": "nit: whitespace", "url": "https://github.com/elastic/elasticsearch/pull/51564#discussion_r372225389", "createdAt": "2020-01-29T07:31:07Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling.action;\n+\n+import org.elasticsearch.action.ActionRequestValidationException;\n+import org.elasticsearch.action.ActionResponse;\n+import org.elasticsearch.action.ActionType;\n+import org.elasticsearch.action.support.master.AcknowledgedRequest;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+public class GetAutoscalingDecisionAction extends ActionType<GetAutoscalingDecisionAction.Response> {\n+\n+    public static final GetAutoscalingDecisionAction INSTANCE = new GetAutoscalingDecisionAction();\n+    public static final String NAME = \"cluster:admin/xpack/autoscaling/get_autoscaling_decision\";\n+\n+    private GetAutoscalingDecisionAction() {\n+        super(NAME, Response::new);\n+    }\n+\n+    public static class Request extends AcknowledgedRequest<GetAutoscalingDecisionAction.Request> implements ToXContentObject {\n+\n+        public Request() {\n+\n+        }\n+\n+        public Request(final StreamInput in) throws IOException {\n+            super(in);\n+        }\n+\n+        @Override\n+        public void writeTo(final StreamOutput out) throws IOException {\n+            super.writeTo(out);\n+        }\n+\n+        @Override\n+        public ActionRequestValidationException validate() {\n+            return null;\n+        }\n+\n+        @Override\n+        public XContentBuilder toXContent(final XContentBuilder builder, final Params params) throws IOException {\n+            builder.startObject();\n+            {\n+\n+            }\n+            builder.endObject();\n+            return builder;\n+        }\n+\n+    }\n+\n+    public static class Response extends ActionResponse implements ToXContentObject {\n+\n+        public Response() {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee28d8ca1b11961675aa255cb1a1d317d47672a"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTM3MDYwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzozMToxN1rOFi-1oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzozMToxN1rOFi-1oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyNTQ0MQ==", "bodyText": "nit: whitespace", "url": "https://github.com/elastic/elasticsearch/pull/51564#discussion_r372225441", "createdAt": "2020-01-29T07:31:17Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling.action;\n+\n+import org.elasticsearch.action.ActionRequestValidationException;\n+import org.elasticsearch.action.ActionResponse;\n+import org.elasticsearch.action.ActionType;\n+import org.elasticsearch.action.support.master.AcknowledgedRequest;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+public class GetAutoscalingDecisionAction extends ActionType<GetAutoscalingDecisionAction.Response> {\n+\n+    public static final GetAutoscalingDecisionAction INSTANCE = new GetAutoscalingDecisionAction();\n+    public static final String NAME = \"cluster:admin/xpack/autoscaling/get_autoscaling_decision\";\n+\n+    private GetAutoscalingDecisionAction() {\n+        super(NAME, Response::new);\n+    }\n+\n+    public static class Request extends AcknowledgedRequest<GetAutoscalingDecisionAction.Request> implements ToXContentObject {\n+\n+        public Request() {\n+\n+        }\n+\n+        public Request(final StreamInput in) throws IOException {\n+            super(in);\n+        }\n+\n+        @Override\n+        public void writeTo(final StreamOutput out) throws IOException {\n+            super.writeTo(out);\n+        }\n+\n+        @Override\n+        public ActionRequestValidationException validate() {\n+            return null;\n+        }\n+\n+        @Override\n+        public XContentBuilder toXContent(final XContentBuilder builder, final Params params) throws IOException {\n+            builder.startObject();\n+            {\n+\n+            }\n+            builder.endObject();\n+            return builder;\n+        }\n+\n+    }\n+\n+    public static class Response extends ActionResponse implements ToXContentObject {\n+\n+        public Response() {\n+\n+        }\n+\n+        public Response(final StreamInput in) throws IOException {\n+            super(in);\n+        }\n+\n+        @Override\n+        public void writeTo(final StreamOutput out) {\n+\n+        }\n+\n+        @Override\n+        public XContentBuilder toXContent(final XContentBuilder builder, final Params params) throws IOException {\n+            builder.startObject();\n+            {\n+\n+            }\n+            builder.endObject();\n+            return builder;\n+        }\n+\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee28d8ca1b11961675aa255cb1a1d317d47672a"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTM3MTA2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzozMTozN1rOFi-15A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzozMTozN1rOFi-15A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyNTUwOA==", "bodyText": "nit: whitespace", "url": "https://github.com/elastic/elasticsearch/pull/51564#discussion_r372225508", "createdAt": "2020-01-29T07:31:37Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/GetAutoscalingDecisionAction.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling.action;\n+\n+import org.elasticsearch.action.ActionRequestValidationException;\n+import org.elasticsearch.action.ActionResponse;\n+import org.elasticsearch.action.ActionType;\n+import org.elasticsearch.action.support.master.AcknowledgedRequest;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+\n+public class GetAutoscalingDecisionAction extends ActionType<GetAutoscalingDecisionAction.Response> {\n+\n+    public static final GetAutoscalingDecisionAction INSTANCE = new GetAutoscalingDecisionAction();\n+    public static final String NAME = \"cluster:admin/xpack/autoscaling/get_autoscaling_decision\";\n+\n+    private GetAutoscalingDecisionAction() {\n+        super(NAME, Response::new);\n+    }\n+\n+    public static class Request extends AcknowledgedRequest<GetAutoscalingDecisionAction.Request> implements ToXContentObject {\n+\n+        public Request() {\n+\n+        }\n+\n+        public Request(final StreamInput in) throws IOException {\n+            super(in);\n+        }\n+\n+        @Override\n+        public void writeTo(final StreamOutput out) throws IOException {\n+            super.writeTo(out);\n+        }\n+\n+        @Override\n+        public ActionRequestValidationException validate() {\n+            return null;\n+        }\n+\n+        @Override\n+        public XContentBuilder toXContent(final XContentBuilder builder, final Params params) throws IOException {\n+            builder.startObject();\n+            {\n+\n+            }\n+            builder.endObject();\n+            return builder;\n+        }\n+\n+    }\n+\n+    public static class Response extends ActionResponse implements ToXContentObject {\n+\n+        public Response() {\n+\n+        }\n+\n+        public Response(final StreamInput in) throws IOException {\n+            super(in);\n+        }\n+\n+        @Override\n+        public void writeTo(final StreamOutput out) {\n+\n+        }\n+\n+        @Override\n+        public XContentBuilder toXContent(final XContentBuilder builder, final Params params) throws IOException {\n+            builder.startObject();\n+            {\n+\n+            }\n+            builder.endObject();\n+            return builder;\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee28d8ca1b11961675aa255cb1a1d317d47672a"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTM3MTU3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/TransportGetAutoscalingDecisionAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzozMTo1NFrOFi-2Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzozMTo1NFrOFi-2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyNTU4Ng==", "bodyText": "nit: whitespace", "url": "https://github.com/elastic/elasticsearch/pull/51564#discussion_r372225586", "createdAt": "2020-01-29T07:31:54Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/autoscaling/src/main/java/org/elasticsearch/xpack/autoscaling/action/TransportGetAutoscalingDecisionAction.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.autoscaling.action;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.support.ActionFilters;\n+import org.elasticsearch.action.support.master.TransportMasterNodeAction;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.block.ClusterBlockException;\n+import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.tasks.Task;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.elasticsearch.transport.TransportService;\n+\n+import java.io.IOException;\n+\n+public class TransportGetAutoscalingDecisionAction extends TransportMasterNodeAction<\n+    GetAutoscalingDecisionAction.Request,\n+    GetAutoscalingDecisionAction.Response> {\n+\n+    @Inject\n+    public TransportGetAutoscalingDecisionAction(\n+        final TransportService transportService,\n+        final ClusterService clusterService,\n+        final ThreadPool threadPool,\n+        final ActionFilters actionFilters,\n+        final IndexNameExpressionResolver indexNameExpressionResolver\n+    ) {\n+        super(\n+            GetAutoscalingDecisionAction.NAME,\n+            transportService,\n+            clusterService,\n+            threadPool,\n+            actionFilters,\n+            GetAutoscalingDecisionAction.Request::new,\n+            indexNameExpressionResolver\n+        );\n+    }\n+\n+    @Override\n+    protected String executor() {\n+        return ThreadPool.Names.SAME;\n+    }\n+\n+    @Override\n+    protected GetAutoscalingDecisionAction.Response read(final StreamInput in) throws IOException {\n+        return new GetAutoscalingDecisionAction.Response(in);\n+    }\n+\n+    @Override\n+    protected void masterOperation(\n+        final Task task,\n+        final GetAutoscalingDecisionAction.Request request,\n+        final ClusterState state,\n+        final ActionListener<GetAutoscalingDecisionAction.Response> listener\n+    ) {\n+        listener.onResponse(new GetAutoscalingDecisionAction.Response());\n+    }\n+\n+    @Override\n+    protected ClusterBlockException checkBlock(final GetAutoscalingDecisionAction.Request request, final ClusterState state) {\n+        return null;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee28d8ca1b11961675aa255cb1a1d317d47672a"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTQ1NDA1OnYy", "diffSide": "RIGHT", "path": "x-pack/docs/en/rest-api/security/get-builtin-privileges.asciidoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwODoxMDowN1rOFi_m1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwODoxMDowN1rOFi_m1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIzODAzNg==", "bodyText": "I think this leaks a bit of docs on autoscaling into release builds. I think this is fair (completely hiding it is probably too much trouble), but maybe we need a short alternative autoscaling docs description explaining this (in a follow-up)?", "url": "https://github.com/elastic/elasticsearch/pull/51564#discussion_r372238036", "createdAt": "2020-01-29T08:10:07Z", "author": {"login": "henningandersen"}, "path": "x-pack/docs/en/rest-api/security/get-builtin-privileges.asciidoc", "diffHunk": "@@ -66,6 +66,7 @@ A successful call returns an object with \"cluster\" and \"index\" fields.\n     \"delegate_pki\",\n     \"manage\",\n     \"manage_api_key\",\n+    \"manage_autoscaling\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee28d8ca1b11961675aa255cb1a1d317d47672a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 211, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}