{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzOTQ4OTEx", "number": 55265, "title": "Add open reader contexts API", "bodyText": "This commit adds a new API that allows opening reader contexts in a separate step before using them in subsequent search requests. Some advantages of this API over the previous approach:\n\nThe flow is clearer: open readers -> use readers in search requests -> close readers\nOpening readers separately is faster than with a search request\nBetter error handling: opening readers requires all shards available, and both reader.id and reader.keep_alive must be provided in search requests.", "createdAt": "2020-04-15T19:33:29Z", "url": "https://github.com/elastic/elasticsearch/pull/55265", "merged": true, "mergeCommit": {"oid": "aa14abee1c1c28c084664a64fd193bff27af334b"}, "closed": true, "closedAt": "2020-04-21T20:03:51Z", "author": {"login": "dnhatn"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX9S5BgH2gAyNDAzOTQ4OTExOjViNzc5NTQ1NmU1ZGMxZTRhNzE0MDU2MGVmN2JiMjY0NDRhODkxZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ0xXDAFqTM5NzQwMTkzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5b7795456e5dc1e4a7140560ef7bb26444a891ef", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/5b7795456e5dc1e4a7140560ef7bb26444a891ef", "committedDate": "2020-04-15T19:31:11Z", "message": "Add open reader contexts API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e6ecf685e94695c75f0944a5cbcecbed42df0dc", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/0e6ecf685e94695c75f0944a5cbcecbed42df0dc", "committedDate": "2020-04-15T21:27:11Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a06793f84471f8fae8cc449c548d5805b207471", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/5a06793f84471f8fae8cc449c548d5805b207471", "committedDate": "2020-04-15T21:47:17Z", "message": "Merge branch 'feature/reader-context' into create-reader-contexts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00b13d9fa148ab4cd978d3ef583aaee35c64b369", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/00b13d9fa148ab4cd978d3ef583aaee35c64b369", "committedDate": "2020-04-15T22:45:51Z", "message": "bypass shard_open_reader action"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "295dfc432d04e0d607b7740212fd9a0f2c27b32a", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/295dfc432d04e0d607b7740212fd9a0f2c27b32a", "committedDate": "2020-04-17T19:42:41Z", "message": "Merge branch 'feature/reader-context' into create-reader-contexts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52a6d15a5b523047c3f375e6e63110e1d1831194", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/52a6d15a5b523047c3f375e6e63110e1d1831194", "committedDate": "2020-04-17T19:58:36Z", "message": "stronger check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7008ed6b3e95b7b25f02dbf203e261f586145beb", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/7008ed6b3e95b7b25f02dbf203e261f586145beb", "committedDate": "2020-04-17T21:03:04Z", "message": "fix single session"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfa0881a806a83eab397f3443fe13dfb9c07648f", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/cfa0881a806a83eab397f3443fe13dfb9c07648f", "committedDate": "2020-04-18T02:40:20Z", "message": "request with reader ignore can_match phase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDY2Njk5", "url": "https://github.com/elastic/elasticsearch/pull/55265#pullrequestreview-396066699", "createdAt": "2020-04-19T22:00:37Z", "commit": {"oid": "cfa0881a806a83eab397f3443fe13dfb9c07648f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQyMjowMDozOFrOGH9hbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQyMjoxMjoxNVrOGH9obA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAwMTE5Ng==", "bodyText": "I wonder if we should always throw an error if there is no concrete indices that match ?", "url": "https://github.com/elastic/elasticsearch/pull/55265#discussion_r411001196", "createdAt": "2020-04-19T22:00:38Z", "author": {"login": "jimczi"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/api/open_reader.json", "diffHunk": "@@ -0,0 +1,65 @@\n+{\n+  \"open_reader\":{\n+    \"documentation\":{\n+      \"url\":\"https://www.elastic.co/guide/en/elasticsearch/reference/master/reader-context.html\",\n+      \"description\":\"Open and keep point-in-time readers that can be used in subsequent search requests\"\n+    },\n+    \"stability\":\"beta\",\n+    \"url\":{\n+      \"paths\":[\n+        {\n+          \"path\":\"/_open_reader\",\n+          \"methods\":[\n+            \"POST\"\n+          ]\n+        },\n+        {\n+          \"path\":\"/{index}/_open_reader\",\n+          \"methods\":[\n+            \"POST\"\n+          ],\n+          \"parts\":{\n+            \"index\":{\n+              \"type\":\"list\",\n+              \"description\":\"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\"\n+            }\n+          }\n+        }\n+      ]\n+    },\n+    \"params\":{\n+      \"preference\":{\n+        \"type\":\"string\",\n+        \"description\":\"Specify the node or shard the operation should be performed on (default: random)\"\n+      },\n+      \"routing\":{\n+        \"type\":\"string\",\n+        \"description\":\"Specific routing value\"\n+      },\n+      \"ignore_unavailable\":{\n+        \"type\":\"boolean\",\n+        \"description\":\"Whether specified concrete indices should be ignored when unavailable (missing or closed)\"\n+      },\n+      \"allow_no_indices\":{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa0881a806a83eab397f3443fe13dfb9c07648f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAwMTQ1Mg==", "bodyText": "We should also check if scroll is not set ?", "url": "https://github.com/elastic/elasticsearch/pull/55265#discussion_r411001452", "createdAt": "2020-04-19T22:02:12Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -283,9 +283,15 @@ public ActionRequestValidationException validate() {\n                 validationException = source.aggregations().validate(validationException);\n             }\n         }\n-        if (reader() != null && reader().getId() != null) {\n+        if (reader() != null) {\n             if (indices.length > 0) {\n-                validationException = addValidationError(\"[indices] cannot be used with reader contexts\", validationException);\n+                validationException = addValidationError(\"[index] cannot be used with reader contexts\", validationException);\n+            }\n+            if (routing() != null) {\n+                validationException = addValidationError(\"[routing] cannot be used with reader contexts\", validationException);\n+            }\n+            if (preference() != null) {\n+                validationException = addValidationError(\"[preference] cannot be used with reader contexts\", validationException);\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa0881a806a83eab397f3443fe13dfb9c07648f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAwMTgxMw==", "bodyText": "We should force indices ?", "url": "https://github.com/elastic/elasticsearch/pull/55265#discussion_r411001813", "createdAt": "2020-04-19T22:04:16Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/rest/action/search/RestOpenReaderAction.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.rest.action.search;\n+\n+import org.elasticsearch.action.search.OpenReaderRequest;\n+import org.elasticsearch.action.search.TransportOpenReaderAction;\n+import org.elasticsearch.action.support.IndicesOptions;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.unit.TimeValue;\n+import org.elasticsearch.rest.BaseRestHandler;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.action.RestToXContentListener;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static org.elasticsearch.rest.RestRequest.Method.POST;\n+\n+public class RestOpenReaderAction extends BaseRestHandler {\n+\n+    @Override\n+    public String getName() {\n+        return \"open_reader_action\";\n+    }\n+\n+    @Override\n+    public List<Route> routes() {\n+        return List.of(\n+            new Route(POST, \"/_open_reader\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa0881a806a83eab397f3443fe13dfb9c07648f"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAwMjEzMA==", "bodyText": "Is it temporary ? We've said that it should be possible to run the can_match phase as long as we retrieve the reader and extend the keep alive if the request cannot match ?", "url": "https://github.com/elastic/elasticsearch/pull/55265#discussion_r411002130", "createdAt": "2020-04-19T22:06:15Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "diffHunk": "@@ -1085,6 +1120,7 @@ public AliasFilter buildAliasFilter(ClusterState state, String index, Set<String\n      */\n     public CanMatchResponse canMatch(ShardSearchRequest request) throws IOException {\n         assert request.searchType() == SearchType.QUERY_THEN_FETCH : \"unexpected search type: \" + request.searchType();\n+        assert request.readerId() == null : \"request with reader_id bypass can_match phase\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa0881a806a83eab397f3443fe13dfb9c07648f"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAwMjk4OA==", "bodyText": "I don't think we should do this for ShardOpenReaderRequest. Can we implement IndicesRequest instead so that opening a reader also checks the index permissions ?", "url": "https://github.com/elastic/elasticsearch/pull/55265#discussion_r411002988", "createdAt": "2020-04-19T22:12:15Z", "author": {"login": "jimczi"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/RBACEngine.java", "diffHunk": "@@ -278,7 +278,7 @@ public void authorizeIndexAction(RequestInfo requestInfo, AuthorizationInfo auth\n                     // the same as the user that submitted the original request so we can skip security here.\n                     listener.onResponse(new IndexAuthorizationResult(true, IndicesAccessControl.ALLOW_NO_INDICES));\n                 }\n-            } else if (action.equals(ClearReaderAction.NAME)) {\n+            } else if (isReaderContextsRelatedAction(action)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa0881a806a83eab397f3443fe13dfb9c07648f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c7d13c43580b8798977723d107329560cdf7201", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/6c7d13c43580b8798977723d107329560cdf7201", "committedDate": "2020-04-20T15:12:31Z", "message": "Merge branch 'feature/reader-context' into create-reader-contexts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8e523de874d57a0c9572c513e5915fda5b596ad", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/b8e523de874d57a0c9572c513e5915fda5b596ad", "committedDate": "2020-04-20T15:32:22Z", "message": "not allow scroll with reader context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51ddf7759d11214fa602a84290414a5f5f0b3233", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/51ddf7759d11214fa602a84290414a5f5f0b3233", "committedDate": "2020-04-20T15:44:38Z", "message": "do not allow no_indices"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a74b98471a42da415744728821093bdbadee29e4", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/a74b98471a42da415744728821093bdbadee29e4", "committedDate": "2020-04-20T15:46:58Z", "message": "require index explicitly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "791008740df068447f5269ff05a126216eaad70b", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/791008740df068447f5269ff05a126216eaad70b", "committedDate": "2020-04-20T15:49:13Z", "message": "Make it IndicesRequest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab7086bd534c673e4b5e7945bee43cc87c0b71f4", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/ab7086bd534c673e4b5e7945bee43cc87c0b71f4", "committedDate": "2020-04-20T15:53:10Z", "message": "add TODO"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NDAxOTM4", "url": "https://github.com/elastic/elasticsearch/pull/55265#pullrequestreview-397401938", "createdAt": "2020-04-21T14:43:10Z", "commit": {"oid": "ab7086bd534c673e4b5e7945bee43cc87c0b71f4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3405, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}