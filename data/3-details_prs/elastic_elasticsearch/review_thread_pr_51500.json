{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NjY1NTgz", "number": 51500, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDo0ODowMVrODbhzqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDo1Mzo1OVrODbh6gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTkyMDQyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/rest/cat/RestCatDatafeedsAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDo0ODowMVrOFjEE3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDo0ODowMVrOFjEE3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxMTI2MQ==", "bodyText": "I thought this was GetDatafeeds not stats but stats makes a lot more sense \ud83d\udc4d. I suppose naming the endpoint _cat/ml/datafeeds_stats isn't great. All good here.", "url": "https://github.com/elastic/elasticsearch/pull/51500#discussion_r372311261", "createdAt": "2020-01-29T10:48:01Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/rest/cat/RestCatDatafeedsAction.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ml.rest.cat;\n+\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.cluster.node.DiscoveryNode;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.Table;\n+import org.elasticsearch.common.unit.TimeValue;\n+import org.elasticsearch.rest.RestController;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.RestResponse;\n+import org.elasticsearch.rest.action.RestResponseListener;\n+import org.elasticsearch.rest.action.cat.AbstractCatAction;\n+import org.elasticsearch.rest.action.cat.RestTable;\n+import org.elasticsearch.xpack.core.ml.action.GetDatafeedsStatsAction;\n+import org.elasticsearch.xpack.core.ml.datafeed.DatafeedConfig;\n+import org.elasticsearch.xpack.core.ml.datafeed.DatafeedTimingStats;\n+\n+import static org.elasticsearch.rest.RestRequest.Method.GET;\n+\n+public class RestCatDatafeedsAction extends AbstractCatAction {\n+\n+    public RestCatDatafeedsAction(RestController controller) {\n+        controller.registerHandler(GET, \"_cat/ml/datafeeds/{\" + DatafeedConfig.ID.getPreferredName() + \"}\", this);\n+        controller.registerHandler(GET, \"_cat/ml/datafeeds\", this);\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"cat_ml_get_datafeeds_action\";\n+    }\n+\n+    @Override\n+    protected RestChannelConsumer doCatRequest(RestRequest restRequest, NodeClient client) {\n+        String datafeedId = restRequest.param(DatafeedConfig.ID.getPreferredName());\n+        if (Strings.isNullOrEmpty(datafeedId)) {\n+            datafeedId = GetDatafeedsStatsAction.ALL;\n+        }\n+        GetDatafeedsStatsAction.Request request = new GetDatafeedsStatsAction.Request(datafeedId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cc94fca4cf862d66054c77588881a00320a5d3"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTkzNzkzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/src/test/resources/rest-api-spec/api/cat.ml.datafeeds.json", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDo1Mzo1OVrOFjEP7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOToyNToxOVrOFk9DOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxNDA5NQ==", "bodyText": "Are there any byte units returned?", "url": "https://github.com/elastic/elasticsearch/pull/51500#discussion_r372314095", "createdAt": "2020-01-29T10:53:59Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/api/cat.ml.datafeeds.json", "diffHunk": "@@ -0,0 +1,89 @@\n+{\n+  \"cat.ml.datafeeds\":{\n+    \"documentation\":{\n+      \"url\":\"http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html\"\n+    },\n+    \"stability\":\"stable\",\n+    \"url\":{\n+      \"paths\":[\n+        {\n+          \"path\":\"/_cat/ml/datafeeds\",\n+          \"methods\":[\n+            \"GET\"\n+          ]\n+        },\n+        {\n+          \"path\":\"/_cat/ml/datafeeds/{datafeed_id}\",\n+          \"methods\":[\n+            \"GET\"\n+          ],\n+          \"parts\":{\n+            \"datafeed_id\":{\n+              \"type\":\"string\",\n+              \"description\":\"The ID of the datafeeds stats to fetch\"\n+            }\n+          }\n+        }\n+      ]\n+    },\n+    \"params\":{\n+      \"allow_no_datafeeds\":{\n+        \"type\":\"boolean\",\n+        \"required\":false,\n+        \"description\":\"Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)\"\n+      },\n+      \"bytes\":{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cc94fca4cf862d66054c77588881a00320a5d3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI1MzAxOQ==", "bodyText": "Don't think so, these options are a catch all as these parameters come by default with _cat APIs.", "url": "https://github.com/elastic/elasticsearch/pull/51500#discussion_r374253019", "createdAt": "2020-02-03T18:02:41Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/api/cat.ml.datafeeds.json", "diffHunk": "@@ -0,0 +1,89 @@\n+{\n+  \"cat.ml.datafeeds\":{\n+    \"documentation\":{\n+      \"url\":\"http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html\"\n+    },\n+    \"stability\":\"stable\",\n+    \"url\":{\n+      \"paths\":[\n+        {\n+          \"path\":\"/_cat/ml/datafeeds\",\n+          \"methods\":[\n+            \"GET\"\n+          ]\n+        },\n+        {\n+          \"path\":\"/_cat/ml/datafeeds/{datafeed_id}\",\n+          \"methods\":[\n+            \"GET\"\n+          ],\n+          \"parts\":{\n+            \"datafeed_id\":{\n+              \"type\":\"string\",\n+              \"description\":\"The ID of the datafeeds stats to fetch\"\n+            }\n+          }\n+        }\n+      ]\n+    },\n+    \"params\":{\n+      \"allow_no_datafeeds\":{\n+        \"type\":\"boolean\",\n+        \"required\":false,\n+        \"description\":\"Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)\"\n+      },\n+      \"bytes\":{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxNDA5NQ=="}, "originalCommit": {"oid": "d1cc94fca4cf862d66054c77588881a00320a5d3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MzMwNw==", "bodyText": "There is also a default size parameter https://www.elastic.co/guide/en/elasticsearch/reference/current/cat.html that is only used by cat thread pool\nMy preference would be to remove this but it's not a deal breaker", "url": "https://github.com/elastic/elasticsearch/pull/51500#discussion_r374293307", "createdAt": "2020-02-03T19:25:19Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/src/test/resources/rest-api-spec/api/cat.ml.datafeeds.json", "diffHunk": "@@ -0,0 +1,89 @@\n+{\n+  \"cat.ml.datafeeds\":{\n+    \"documentation\":{\n+      \"url\":\"http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html\"\n+    },\n+    \"stability\":\"stable\",\n+    \"url\":{\n+      \"paths\":[\n+        {\n+          \"path\":\"/_cat/ml/datafeeds\",\n+          \"methods\":[\n+            \"GET\"\n+          ]\n+        },\n+        {\n+          \"path\":\"/_cat/ml/datafeeds/{datafeed_id}\",\n+          \"methods\":[\n+            \"GET\"\n+          ],\n+          \"parts\":{\n+            \"datafeed_id\":{\n+              \"type\":\"string\",\n+              \"description\":\"The ID of the datafeeds stats to fetch\"\n+            }\n+          }\n+        }\n+      ]\n+    },\n+    \"params\":{\n+      \"allow_no_datafeeds\":{\n+        \"type\":\"boolean\",\n+        \"required\":false,\n+        \"description\":\"Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)\"\n+      },\n+      \"bytes\":{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxNDA5NQ=="}, "originalCommit": {"oid": "d1cc94fca4cf862d66054c77588881a00320a5d3"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4380, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}