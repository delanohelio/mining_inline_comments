{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTg5Njg1", "number": 52861, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDowNjowMlrODjwkXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDowNjowMlrODjwkXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODIyNDk0OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoCentroidIT.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDowNjowMlrOFvvp0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwOToxNToyN1rOFwYKAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYwODE0NA==", "bodyText": "Not sure if am reading this correctly. If you mix index with different versions then we do not fail? Is this the expected behavior?", "url": "https://github.com/elastic/elasticsearch/pull/52861#discussion_r385608144", "createdAt": "2020-02-28T10:06:02Z", "author": {"login": "iverase"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoCentroidIT.java", "diffHunk": "@@ -45,6 +48,31 @@\n public class GeoCentroidIT extends AbstractGeoTestCase {\n     private static final String aggName = \"geoCentroid\";\n \n+    public void test7xIndexOnly() {\n+        SearchPhaseExecutionException exception = expectThrows(SearchPhaseExecutionException.class,\n+            () -> client().prepareSearch(IDX_NAME_7x) .addAggregation(geoCentroid(aggName).field(SINGLE_VALUED_GEOSHAPE_FIELD_NAME))\n+            .get());\n+        assertNotNull(exception.getRootCause());\n+        assertThat(exception.getRootCause().getMessage(),\n+            equalTo(\"Can't load fielddata on [geoshape_value] because fielddata is unsupported on fields of type [geo_shape].\" +\n+                \" Use doc values instead.\"));\n+    }\n+\n+    public void test7xIndexWith8Index() {\n+        SearchResponse response = client().prepareSearch(IDX_NAME_7x, IDX_NAME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d2431d450667063089c45ed0057cd45d32b64a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4NTAwMA==", "bodyText": "I think this is intentional? We fail shards that do not have doc-values, but since the other index is valid, the aggregation result is consistent.\nIt errors out if queried against an index with no geo_shape field at all.\nI will double check other aggregations to see what is the most consistent behavior. I assume it is the same as is shown here", "url": "https://github.com/elastic/elasticsearch/pull/52861#discussion_r385885000", "createdAt": "2020-02-28T19:38:29Z", "author": {"login": "talevy"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoCentroidIT.java", "diffHunk": "@@ -45,6 +48,31 @@\n public class GeoCentroidIT extends AbstractGeoTestCase {\n     private static final String aggName = \"geoCentroid\";\n \n+    public void test7xIndexOnly() {\n+        SearchPhaseExecutionException exception = expectThrows(SearchPhaseExecutionException.class,\n+            () -> client().prepareSearch(IDX_NAME_7x) .addAggregation(geoCentroid(aggName).field(SINGLE_VALUED_GEOSHAPE_FIELD_NAME))\n+            .get());\n+        assertNotNull(exception.getRootCause());\n+        assertThat(exception.getRootCause().getMessage(),\n+            equalTo(\"Can't load fielddata on [geoshape_value] because fielddata is unsupported on fields of type [geo_shape].\" +\n+                \" Use doc values instead.\"));\n+    }\n+\n+    public void test7xIndexWith8Index() {\n+        SearchResponse response = client().prepareSearch(IDX_NAME_7x, IDX_NAME)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYwODE0NA=="}, "originalCommit": {"oid": "21d2431d450667063089c45ed0057cd45d32b64a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI3MTc0NA==", "bodyText": "I see, and this assertion checks that some shards were not successful:\n  assertThat(response.getSuccessfulShards(), lessThan(response.getTotalShards()));", "url": "https://github.com/elastic/elasticsearch/pull/52861#discussion_r386271744", "createdAt": "2020-03-02T09:15:27Z", "author": {"login": "iverase"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoCentroidIT.java", "diffHunk": "@@ -45,6 +48,31 @@\n public class GeoCentroidIT extends AbstractGeoTestCase {\n     private static final String aggName = \"geoCentroid\";\n \n+    public void test7xIndexOnly() {\n+        SearchPhaseExecutionException exception = expectThrows(SearchPhaseExecutionException.class,\n+            () -> client().prepareSearch(IDX_NAME_7x) .addAggregation(geoCentroid(aggName).field(SINGLE_VALUED_GEOSHAPE_FIELD_NAME))\n+            .get());\n+        assertNotNull(exception.getRootCause());\n+        assertThat(exception.getRootCause().getMessage(),\n+            equalTo(\"Can't load fielddata on [geoshape_value] because fielddata is unsupported on fields of type [geo_shape].\" +\n+                \" Use doc values instead.\"));\n+    }\n+\n+    public void test7xIndexWith8Index() {\n+        SearchResponse response = client().prepareSearch(IDX_NAME_7x, IDX_NAME)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYwODE0NA=="}, "originalCommit": {"oid": "21d2431d450667063089c45ed0057cd45d32b64a"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3673, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}