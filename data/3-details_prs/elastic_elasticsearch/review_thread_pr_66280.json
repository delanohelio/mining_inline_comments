{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5Njk2OTcz", "number": 66280, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMToyNjoyOFrOFHJSUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzoxNToyOFrOFHLd5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDM2NDk5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/QueryPhaseResultConsumer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMToyNjoyOFrOIIfOFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMTozMzoxMVrOIIfaSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc3MTAzMQ==", "bodyText": "Is it needed both conditions? I would expect that if reducePhase.aggregations is not null, then hasAggs is always true?", "url": "https://github.com/elastic/elasticsearch/pull/66280#discussion_r545771031", "createdAt": "2020-12-18T11:26:28Z", "author": {"login": "iverase"}, "path": "server/src/main/java/org/elasticsearch/action/search/QueryPhaseResultConsumer.java", "diffHunk": "@@ -140,7 +140,7 @@ public void consumeResult(SearchPhaseResult result, Runnable next) {\n         }\n         SearchPhaseController.ReducedQueryPhase reducePhase = controller.reducedQueryPhase(results.asList(), aggsList,\n             topDocsList, topDocsStats, pendingMerges.numReducePhases, false, aggReduceContextBuilder, performFinalReduce);\n-        if (hasAggs) {\n+        if (hasAggs && reducePhase.aggregations != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ffd623ec49d5364aa938ca3d2c65dab88b4a7a5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc3NDE1NQ==", "bodyText": "I added a comment in baabbbd, it can be null if all shards failed.", "url": "https://github.com/elastic/elasticsearch/pull/66280#discussion_r545774155", "createdAt": "2020-12-18T11:33:11Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/QueryPhaseResultConsumer.java", "diffHunk": "@@ -140,7 +140,7 @@ public void consumeResult(SearchPhaseResult result, Runnable next) {\n         }\n         SearchPhaseController.ReducedQueryPhase reducePhase = controller.reducedQueryPhase(results.asList(), aggsList,\n             topDocsList, topDocsStats, pendingMerges.numReducePhases, false, aggReduceContextBuilder, performFinalReduce);\n-        if (hasAggs) {\n+        if (hasAggs && reducePhase.aggregations != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc3MTAzMQ=="}, "originalCommit": {"oid": "9ffd623ec49d5364aa938ca3d2c65dab88b4a7a5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDcyMjI5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/QueryPhaseResultConsumer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzoxNToyOFrOIIibbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxOTowMzoxOFrOIIvKVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgyMzU5OQ==", "bodyText": "I find this change hard to follow, I am sure I am missing something. Why do we need the conditional compared to before? And why do we call asSerialized when the aggregation is already serialized?", "url": "https://github.com/elastic/elasticsearch/pull/66280#discussion_r545823599", "createdAt": "2020-12-18T13:15:28Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/action/search/QueryPhaseResultConsumer.java", "diffHunk": "@@ -290,9 +293,13 @@ long ramBytesUsedQueryResult(QuerySearchResult result) {\n             if (hasAggs == false) {\n                 return 0;\n             }\n-            return result.aggregations()\n-                .asSerialized(InternalAggregations::readFrom, namedWriteableRegistry)\n-                .ramBytesUsed();\n+            if (result.aggregations().isSerialized()) {\n+                return result.aggregations()\n+                    .asSerialized(InternalAggregations::readFrom, namedWriteableRegistry)\n+                    .ramBytesUsed();\n+            } else {\n+                return result.aggregations().expand().getSerializedSize();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d465d3bfb8d860f1234d2595c8ef9d0376135961"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgzNzM1Nw==", "bodyText": "This is just to avoid serializing on a real buffer since we don't need to keep the result if the aggregations is already expanded. However I agree that it can be confusing so I pushed c867307 to address your concerns. Does it look better ?", "url": "https://github.com/elastic/elasticsearch/pull/66280#discussion_r545837357", "createdAt": "2020-12-18T13:41:22Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/QueryPhaseResultConsumer.java", "diffHunk": "@@ -290,9 +293,13 @@ long ramBytesUsedQueryResult(QuerySearchResult result) {\n             if (hasAggs == false) {\n                 return 0;\n             }\n-            return result.aggregations()\n-                .asSerialized(InternalAggregations::readFrom, namedWriteableRegistry)\n-                .ramBytesUsed();\n+            if (result.aggregations().isSerialized()) {\n+                return result.aggregations()\n+                    .asSerialized(InternalAggregations::readFrom, namedWriteableRegistry)\n+                    .ramBytesUsed();\n+            } else {\n+                return result.aggregations().expand().getSerializedSize();\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgyMzU5OQ=="}, "originalCommit": {"oid": "d465d3bfb8d860f1234d2595c8ef9d0376135961"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAzMjIxMg==", "bodyText": "yea much better thanks", "url": "https://github.com/elastic/elasticsearch/pull/66280#discussion_r546032212", "createdAt": "2020-12-18T19:03:18Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/action/search/QueryPhaseResultConsumer.java", "diffHunk": "@@ -290,9 +293,13 @@ long ramBytesUsedQueryResult(QuerySearchResult result) {\n             if (hasAggs == false) {\n                 return 0;\n             }\n-            return result.aggregations()\n-                .asSerialized(InternalAggregations::readFrom, namedWriteableRegistry)\n-                .ramBytesUsed();\n+            if (result.aggregations().isSerialized()) {\n+                return result.aggregations()\n+                    .asSerialized(InternalAggregations::readFrom, namedWriteableRegistry)\n+                    .ramBytesUsed();\n+            } else {\n+                return result.aggregations().expand().getSerializedSize();\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgyMzU5OQ=="}, "originalCommit": {"oid": "d465d3bfb8d860f1234d2595c8ef9d0376135961"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4677, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}