{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MTEyMjA0", "number": 64481, "title": "Introduce Compatible Version plugin", "bodyText": "A RestCompatibilityPlugin and its xpack implementation allow to calculate a version requested on REST request. It uses accept, content-type headers to return a version.\nIt also performs a validation of allowed combinations of versions and values provided on accept/content-type headers\nrelates #51816", "createdAt": "2020-11-02T14:52:13Z", "url": "https://github.com/elastic/elasticsearch/pull/64481", "merged": true, "mergeCommit": {"oid": "91df1b8edf140157b1262a513c115b5d5db80566"}, "closed": true, "closedAt": "2020-11-23T13:19:24Z", "author": {"login": "pgomulka"}, "timelineItems": {"totalCount": 46, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXjWiJgH2gAyNTE0MTEyMjA0OmU0NjhmZGYzNTBjNTRiY2ZkNjNlZTlhMWYyMjEyMzI0NzhjMTExYmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfUFmFAH2gAyNTE0MTEyMjA0OjQ0NTAzMmMxMGRkNGI5YmQ3OTE1MjNiYTk0MWY2YzNjMmY1MTUwZGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e468fdf350c54bcfd63ee9a1f221232478c111bc", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/e468fdf350c54bcfd63ee9a1f221232478c111bc", "committedDate": "2020-10-30T09:28:47Z", "message": "Introduce per endpoint media types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cfa11e9db3416a4f7920806977f1333b1c837fa", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/5cfa11e9db3416a4f7920806977f1333b1c837fa", "committedDate": "2020-10-30T09:45:06Z", "message": "Merge branch 'master' into compat/parsed_media_type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66224e74f5ede806080c282914870ebac7a8c508", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/66224e74f5ede806080c282914870ebac7a8c508", "committedDate": "2020-10-30T10:14:20Z", "message": "allow smile and cbor to parse charset param. See ClientYamlTestExecutionContext:L122"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29b27e805f8e31f7b2e21cd54ae9a2342d9398aa", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/29b27e805f8e31f7b2e21cd54ae9a2342d9398aa", "committedDate": "2020-10-30T12:37:26Z", "message": "javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46903625a056c3f615d0c593370e3c442b1a99b5", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/46903625a056c3f615d0c593370e3c442b1a99b5", "committedDate": "2020-10-30T12:42:38Z", "message": "fix javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7866a982d18f3beecc26a217b600f0fc96ba110", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/e7866a982d18f3beecc26a217b600f0fc96ba110", "committedDate": "2020-10-30T15:59:56Z", "message": "Allow registration of compatible version-1 handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0330d97d2c3722f09530e2ab0546d738981536ef", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/0330d97d2c3722f09530e2ab0546d738981536ef", "committedDate": "2020-11-02T12:27:48Z", "message": "add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3cb8586c1bec73030696912e1d32cb3f736ec58", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/d3cb8586c1bec73030696912e1d32cb3f736ec58", "committedDate": "2020-11-02T14:47:22Z", "message": "Introduce CompatibleVersion plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78d46603e02134a026b95ac48bfb76704a998e1c", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/78d46603e02134a026b95ac48bfb76704a998e1c", "committedDate": "2020-11-02T15:00:13Z", "message": "Merge branch 'master' into compat/register_compatible_handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc5de8b5c53664ab70e3e0c45342ea7b3af7398b", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/bc5de8b5c53664ab70e3e0c45342ea7b3af7398b", "committedDate": "2020-11-02T15:19:00Z", "message": "pass version to xcontentbuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f958cdd0d4e1118048051bf20dd7748f517f34bc", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f958cdd0d4e1118048051bf20dd7748f517f34bc", "committedDate": "2020-11-02T16:47:19Z", "message": "Merge branch 'master' into compat/register_compatible_handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e829b17e763faf06168cf0188005f143560a8b20", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/e829b17e763faf06168cf0188005f143560a8b20", "committedDate": "2020-11-02T16:47:39Z", "message": "Merge branch 'master' into compat/compatible_plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f32cf70b1f0f0a0369e2cb571e664a27d1bf7cac", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f32cf70b1f0f0a0369e2cb571e664a27d1bf7cac", "committedDate": "2020-11-02T16:48:47Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bda74f773d6b682deaa0c256a3568cbc0c1956c", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/2bda74f773d6b682deaa0c256a3568cbc0c1956c", "committedDate": "2020-11-03T12:15:42Z", "message": "code review follow up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7779083b4e5ed3301bd75bfc340bff51bae2042c", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/7779083b4e5ed3301bd75bfc340bff51bae2042c", "committedDate": "2020-11-03T12:52:14Z", "message": "minor tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd26408343b5633d4981d15207c5a714a8a44e7e", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/dd26408343b5633d4981d15207c5a714a8a44e7e", "committedDate": "2020-11-03T12:52:41Z", "message": "Merge branch 'master' into compat/introduce_per_endpoint_media_types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94b4a0a85ece16e597818e815d958675e5879125", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/94b4a0a85ece16e597818e815d958675e5879125", "committedDate": "2020-11-03T13:41:27Z", "message": "fix test after exception msg rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43855911ed3ec0ad1d245cc398e7d67f59acb975", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/43855911ed3ec0ad1d245cc398e7d67f59acb975", "committedDate": "2020-11-03T15:30:35Z", "message": "rename to header value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc61731ba05c6d2338ff46cf3f3bf665b334c525", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/dc61731ba05c6d2338ff46cf3f3bf665b334c525", "committedDate": "2020-11-04T09:24:25Z", "message": "remove charset validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a3138dd46c7826e902f0375e2a61d5aef036c70", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/4a3138dd46c7826e902f0375e2a61d5aef036c70", "committedDate": "2020-11-05T07:33:33Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Jay Modi <jaymode@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b565e566cfb0555b25d02e082105bb482e7e6fd", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/0b565e566cfb0555b25d02e082105bb482e7e6fd", "committedDate": "2020-11-05T08:02:03Z", "message": "javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b35ad2ce54f0577edd332d8ebedb4fa817475e71", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/b35ad2ce54f0577edd332d8ebedb4fa817475e71", "committedDate": "2020-11-05T08:02:35Z", "message": "Merge branch 'master' into compat/introduce_per_endpoint_media_types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b908bfebd14c7157aeb7592f17c4907d8e9c6a7f", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/b908bfebd14c7157aeb7592f17c4907d8e9c6a7f", "committedDate": "2020-11-05T08:03:20Z", "message": "Merge branch 'compat/introduce_per_endpoint_media_types' of github.com:pgomulka/elasticsearch into compat/introduce_per_endpoint_media_types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "950ba7b922b323db01e225855604f90d8dcc5286", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/950ba7b922b323db01e225855604f90d8dcc5286", "committedDate": "2020-11-05T08:50:14Z", "message": "Merge branch 'compat/introduce_per_endpoint_media_types' into compat/register_compatible_handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "310b735cbeecb65ee6e212ea46d655948236269a", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/310b735cbeecb65ee6e212ea46d655948236269a", "committedDate": "2020-11-05T08:51:21Z", "message": "Merge branch 'master' into compat/register_compatible_handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cf408aec87ae94be972436b326747efeb3c3281", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/3cf408aec87ae94be972436b326747efeb3c3281", "committedDate": "2020-11-05T08:53:40Z", "message": "Merge branch 'compat/introduce_per_endpoint_media_types' into compat/compatible_plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c880c08845c6da8800c4778bd6bff841e5ef261", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/4c880c08845c6da8800c4778bd6bff841e5ef261", "committedDate": "2020-11-05T08:55:53Z", "message": "Merge branch 'master' into compat/compatible_plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afba70d3cd862b7b3a83536381bf32e5cea575e6", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/afba70d3cd862b7b3a83536381bf32e5cea575e6", "committedDate": "2020-11-05T09:57:15Z", "message": "javadoc and cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "385f5a9a7538dc44a7052c1c029ac24c70dd20ce", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/385f5a9a7538dc44a7052c1c029ac24c70dd20ce", "committedDate": "2020-11-06T06:59:03Z", "message": "Merge branch 'master' into compat/register_compatible_handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "836fe0f1b842929aa6c6e46694aa4e8ca8dead95", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/836fe0f1b842929aa6c6e46694aa4e8ca8dead95", "committedDate": "2020-11-06T08:09:28Z", "message": "tests and javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f2ea927874ce0e737322b6cfc9f348e1f31fa5b", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/8f2ea927874ce0e737322b6cfc9f348e1f31fa5b", "committedDate": "2020-11-09T12:05:40Z", "message": "javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d70a0712bc4578e4351e6deb29a6adbb60fd69b6", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/d70a0712bc4578e4351e6deb29a6adbb60fd69b6", "committedDate": "2020-11-09T12:13:22Z", "message": "do not set compatible version twice"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87d762f66c418dd238fc1c02d7f7bafc7de0bb34", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/87d762f66c418dd238fc1c02d7f7bafc7de0bb34", "committedDate": "2020-11-09T13:12:41Z", "message": "Merge branch 'master' into compat/register_compatible_handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "deff73987b4db898044e43ffae89a02a2ac66b2e", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/deff73987b4db898044e43ffae89a02a2ac66b2e", "committedDate": "2020-11-09T15:06:50Z", "message": "javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee4069709cc258459b817e5225c4a71bb830ab2b", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/ee4069709cc258459b817e5225c4a71bb830ab2b", "committedDate": "2020-11-09T15:26:07Z", "message": "Merge branch 'compat/register_compatible_handlers' into compat/compatible_plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8eb296ae4ee03a579f7da30990cd97737b89441", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a8eb296ae4ee03a579f7da30990cd97737b89441", "committedDate": "2020-11-16T08:47:44Z", "message": "Merge branch 'master' into compat/compatible_plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63c2987f7f65e1d8532f41a30c9ea0389918909a", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/63c2987f7f65e1d8532f41a30c9ea0389918909a", "committedDate": "2020-11-16T09:42:41Z", "message": "line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aab691bfd2e369cba0d97ee8482fe0c16f078ae1", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/aab691bfd2e369cba0d97ee8482fe0c16f078ae1", "committedDate": "2020-11-16T12:10:30Z", "message": "testcase for textformat versioned"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2e12ec8e812b3bfedc56e0f339f01e30a625578", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/b2e12ec8e812b3bfedc56e0f339f01e30a625578", "committedDate": "2020-11-16T12:18:50Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16a1b837a8b1edd04188017f0acc7aec23781f8c", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/16a1b837a8b1edd04188017f0acc7aec23781f8c", "committedDate": "2020-11-17T08:17:36Z", "message": "minimum rest compat"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyOTA3NDk0", "url": "https://github.com/elastic/elasticsearch/pull/64481#pullrequestreview-532907494", "createdAt": "2020-11-17T23:51:47Z", "commit": {"oid": "16a1b837a8b1edd04188017f0acc7aec23781f8c"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMzo1MTo0N1rOH1QNTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDowNDoyMlrOH1Qe6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwMjEyNw==", "bodyText": "nit: can we use Version.CURRENT.minimumRestCompatibilityVersion() instead of Version.CURRENT.major -1 ? (to help encapsulate the logic)", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525602127", "createdAt": "2020-11-17T23:51:47Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a1b837a8b1edd04188017f0acc7aec23781f8c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwMzQ3NA==", "bodyText": "nit: rather then saying \"must be equal or less then the current version\" , can it say \"must be either version {} or {}, but found {}. Accept={}\" ,  Version.CURRENT.major, Version.CURRENT.minimumRestCompatibilityVersion() , acceptVersion, acceptHeader (no need to put content-type here)", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525603474", "createdAt": "2020-11-17T23:55:18Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {\n+            throw new ElasticsearchStatusException(\n+                \"Compatible version must be equal or less then the current version. Accept={}} Content-Type={}}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a1b837a8b1edd04188017f0acc7aec23781f8c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNDA1Mw==", "bodyText": "same nitpicks as above... use the minumRestCompatibltyVersion and tweak the error message to be more precise (and no need for the accept header here)", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525604053", "createdAt": "2020-11-17T23:56:57Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {\n+            throw new ElasticsearchStatusException(\n+                \"Compatible version must be equal or less then the current version. Accept={}} Content-Type={}}\",\n+                RestStatus.BAD_REQUEST,\n+                acceptHeader,\n+                contentTypeHeader\n+            );\n+        }\n+        if (hasContent) {\n+\n+            // content-type version must be current or prior\n+            if (contentTypeVersion > Version.CURRENT.major || contentTypeVersion < Version.CURRENT.major - 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a1b837a8b1edd04188017f0acc7aec23781f8c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNTE0Ng==", "bodyText": "nit: A compatible version is required on both Content-Type and Accept headers if either one has requested a compatible version. Accept={}, Content-Type={}", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525605146", "createdAt": "2020-11-18T00:00:01Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {\n+            throw new ElasticsearchStatusException(\n+                \"Compatible version must be equal or less then the current version. Accept={}} Content-Type={}}\",\n+                RestStatus.BAD_REQUEST,\n+                acceptHeader,\n+                contentTypeHeader\n+            );\n+        }\n+        if (hasContent) {\n+\n+            // content-type version must be current or prior\n+            if (contentTypeVersion > Version.CURRENT.major || contentTypeVersion < Version.CURRENT.major - 1) {\n+                throw new ElasticsearchStatusException(\n+                    \"Compatible version must be equal or less then the current version. Accept={} Content-Type={}\",\n+                    RestStatus.BAD_REQUEST,\n+                    acceptHeader,\n+                    contentTypeHeader,\n+                    RestStatus.BAD_REQUEST\n+                );\n+            }\n+            // if both accept and content-type are sent, the version must match\n+            if (contentTypeVersion != acceptVersion) {\n+                throw new ElasticsearchStatusException(\n+                    \"Content-Type and Accept version requests have to match. Accept={} Content-Type={}\",\n+                    RestStatus.BAD_REQUEST,\n+                    acceptHeader,\n+                    contentTypeHeader\n+                );\n+            }\n+            // both headers should be versioned or none\n+            if ((cVersion == null && aVersion != null) || (aVersion == null && cVersion != null)) {\n+                throw new ElasticsearchStatusException(\n+                    \"Versioning is required on both Content-Type and Accept headers. Accept={} Content-Type={}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a1b837a8b1edd04188017f0acc7aec23781f8c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNTk4Mw==", "bodyText": "nit: A compatible version is required on both Content-Type and Accept headers if either one has requested a compatible version and the compatible versions must match. Accept={}, Content-Type={}", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525605983", "createdAt": "2020-11-18T00:02:21Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {\n+            throw new ElasticsearchStatusException(\n+                \"Compatible version must be equal or less then the current version. Accept={}} Content-Type={}}\",\n+                RestStatus.BAD_REQUEST,\n+                acceptHeader,\n+                contentTypeHeader\n+            );\n+        }\n+        if (hasContent) {\n+\n+            // content-type version must be current or prior\n+            if (contentTypeVersion > Version.CURRENT.major || contentTypeVersion < Version.CURRENT.major - 1) {\n+                throw new ElasticsearchStatusException(\n+                    \"Compatible version must be equal or less then the current version. Accept={} Content-Type={}\",\n+                    RestStatus.BAD_REQUEST,\n+                    acceptHeader,\n+                    contentTypeHeader,\n+                    RestStatus.BAD_REQUEST\n+                );\n+            }\n+            // if both accept and content-type are sent, the version must match\n+            if (contentTypeVersion != acceptVersion) {\n+                throw new ElasticsearchStatusException(\n+                    \"Content-Type and Accept version requests have to match. Accept={} Content-Type={}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a1b837a8b1edd04188017f0acc7aec23781f8c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNjYzNQ==", "bodyText": "Can this ever evaluate true ? wouldn't the above if catch any this case ?", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525606635", "createdAt": "2020-11-18T00:04:22Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {\n+            throw new ElasticsearchStatusException(\n+                \"Compatible version must be equal or less then the current version. Accept={}} Content-Type={}}\",\n+                RestStatus.BAD_REQUEST,\n+                acceptHeader,\n+                contentTypeHeader\n+            );\n+        }\n+        if (hasContent) {\n+\n+            // content-type version must be current or prior\n+            if (contentTypeVersion > Version.CURRENT.major || contentTypeVersion < Version.CURRENT.major - 1) {\n+                throw new ElasticsearchStatusException(\n+                    \"Compatible version must be equal or less then the current version. Accept={} Content-Type={}\",\n+                    RestStatus.BAD_REQUEST,\n+                    acceptHeader,\n+                    contentTypeHeader,\n+                    RestStatus.BAD_REQUEST\n+                );\n+            }\n+            // if both accept and content-type are sent, the version must match\n+            if (contentTypeVersion != acceptVersion) {\n+                throw new ElasticsearchStatusException(\n+                    \"Content-Type and Accept version requests have to match. Accept={} Content-Type={}\",\n+                    RestStatus.BAD_REQUEST,\n+                    acceptHeader,\n+                    contentTypeHeader\n+                );\n+            }\n+            // both headers should be versioned or none\n+            if ((cVersion == null && aVersion != null) || (aVersion == null && cVersion != null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a1b837a8b1edd04188017f0acc7aec23781f8c"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b75d415738b7179933dcf70c6d6c34b5e1f0b2c6", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/b75d415738b7179933dcf70c6d6c34b5e1f0b2c6", "committedDate": "2020-11-18T14:39:01Z", "message": "code review follow up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3b7b511c3c6ecc11924cee036aa294cc1d64853", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/c3b7b511c3c6ecc11924cee036aa294cc1d64853", "committedDate": "2020-11-19T13:34:39Z", "message": "fix messages and toString for parsedmediatype"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NjI1MzIx", "url": "https://github.com/elastic/elasticsearch/pull/64481#pullrequestreview-535625321", "createdAt": "2020-11-20T17:18:24Z", "commit": {"oid": "c3b7b511c3c6ecc11924cee036aa294cc1d64853"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoxODoyNFrOH3Y2uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoxODoyNFrOH3Y2uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0MDk1Mw==", "bodyText": "can you check the message? We've had tests like this before and didn't check the message and there was some other cause of the exception rather than the true cause.", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r527840953", "createdAt": "2020-11-20T17:18:24Z", "author": {"login": "jaymode"}, "path": "server/src/test/java/org/elasticsearch/node/NodeTests.java", "diffHunk": "@@ -339,4 +343,55 @@ public void setCircuitBreaker(CircuitBreaker circuitBreaker) {\n             myCircuitBreaker.set(circuitBreaker);\n         }\n     }\n+\n+    public static class TestRestCompatibility1 extends Plugin implements RestCompatibilityPlugin {\n+        @Override\n+        public Version getCompatibleVersion(ParsedMediaType acceptHeader, ParsedMediaType contentTypeHeader, boolean hasContent) {\n+            return Version.CURRENT.previousMajor();\n+        }\n+    }\n+\n+    public static class TestRestCompatibility2 extends Plugin implements RestCompatibilityPlugin {\n+        @Override\n+        public Version getCompatibleVersion(ParsedMediaType acceptHeader, ParsedMediaType contentTypeHeader, boolean hasContent) {\n+            return null;\n+        }\n+    }\n+\n+    public void testLoadingMultipleRestCompatibilityPlugins() throws IOException {\n+        Settings.Builder settings = baseSettings();\n+\n+        // throw an exception when two plugins are registered\n+        List<Class<? extends Plugin>> plugins = basePlugins();\n+        plugins.add(TestRestCompatibility1.class);\n+        plugins.add(TestRestCompatibility2.class);\n+\n+        expectThrows(IllegalStateException.class, () -> new MockNode(settings.build(), plugins));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3b7b511c3c6ecc11924cee036aa294cc1d64853"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51de734589a0ef13a2fff26003786f7139bb77bc", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/51de734589a0ef13a2fff26003786f7139bb77bc", "committedDate": "2020-11-23T08:56:26Z", "message": "assertion on message in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "445032c10dd4b9bd791523ba941f6c3c2f5150de", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/445032c10dd4b9bd791523ba941f6c3c2f5150de", "committedDate": "2020-11-23T12:13:06Z", "message": "Merge branch 'master' into compat/compatible_plugin"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 920, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}