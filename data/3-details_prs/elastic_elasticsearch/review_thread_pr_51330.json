{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDIzNTU2", "number": 51330, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjo0NjoxN1rODaKDPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjo0OToxNFrODaKGZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NzU0MjM2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjo0NjoxN1rOFg86BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjo1OToxNVrOFg9P6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5NjY0NQ==", "bodyText": "Why do we need to verify that it has all the tags?\nIsn't the bool query with tag filters enough?", "url": "https://github.com/elastic/elasticsearch/pull/51330#discussion_r370096645", "createdAt": "2020-01-23T12:46:17Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -404,13 +414,23 @@ public void expandIds(String idExpression,\n                 indicesOptions.expandWildcardsClosed(),\n                 indicesOptions))\n             .source(sourceBuilder);\n+        Set<String> foundResourceIds = new LinkedHashSet<>();\n+        if (tags.isEmpty()) {\n+            foundResourceIds.addAll(matchedResourceIds(tokens));\n+        } else {\n+            for(String resourceId : matchedResourceIds(tokens)) {\n+                // Does the model as a resource have all the tags?\n+                if (Sets.newHashSet(loadModelFromResource(resourceId, true).getTags()).containsAll(tags)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "260fa074864847fd9db3990aa0aacb6fecc64b6b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwMjI1MA==", "bodyText": "no, as that is an or and the decision was to make it an and", "url": "https://github.com/elastic/elasticsearch/pull/51330#discussion_r370102250", "createdAt": "2020-01-23T12:59:15Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -404,13 +414,23 @@ public void expandIds(String idExpression,\n                 indicesOptions.expandWildcardsClosed(),\n                 indicesOptions))\n             .source(sourceBuilder);\n+        Set<String> foundResourceIds = new LinkedHashSet<>();\n+        if (tags.isEmpty()) {\n+            foundResourceIds.addAll(matchedResourceIds(tokens));\n+        } else {\n+            for(String resourceId : matchedResourceIds(tokens)) {\n+                // Does the model as a resource have all the tags?\n+                if (Sets.newHashSet(loadModelFromResource(resourceId, true).getTags()).containsAll(tags)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5NjY0NQ=="}, "originalCommit": {"oid": "260fa074864847fd9db3990aa0aacb6fecc64b6b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NzU0OTQxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjo0ODo1M1rOFg8-Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMzowMDoyOVrOFg9R4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5NzczNQ==", "bodyText": "Alternatively you could drop this filter part altogether if there are no tags.\nOne more thought: would the following query be equivalent to what you have right now:\nQueryBuilder query = QueryBuilders.boolQuery()\n    .filter(buildQueryIdExpressionQuery(tokens, TrainedModelConfig.MODEL_ID.getPreferredName())));\nfor (String tag : tags) {\n  query.filter(QueryBuilders.termQuery(TrainedModelConfig.TAGS.getPreferredName(), tag));\n}\n\n?\nThis way we can get rid of the ternary operator ? altogether.", "url": "https://github.com/elastic/elasticsearch/pull/51330#discussion_r370097735", "createdAt": "2020-01-23T12:48:53Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -381,14 +381,24 @@ public void deleteTrainedModel(String modelId, ActionListener<Boolean> listener)\n     public void expandIds(String idExpression,\n                           boolean allowNoResources,\n                           @Nullable PageParams pageParams,\n+                          Set<String> tags,\n                           ActionListener<Tuple<Long, Set<String>>> idsListener) {\n         String[] tokens = Strings.tokenizeToStringArray(idExpression, \",\");\n+        BoolQueryBuilder tagQuery = QueryBuilders.boolQuery();\n+        for(String tag : tags) {\n+            tagQuery.filter(QueryBuilders.termQuery(TrainedModelConfig.TAGS.getPreferredName(), tag));\n+        }\n+\n+        QueryBuilder query = QueryBuilders.constantScoreQuery(\n+            QueryBuilders.boolQuery()\n+                .filter(tagQuery.hasClauses() ? tagQuery : QueryBuilders.matchAllQuery())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "260fa074864847fd9db3990aa0aacb6fecc64b6b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwMjc1Mg==", "bodyText": "Ah, I do think your query building is better. Will see about refactoring :)", "url": "https://github.com/elastic/elasticsearch/pull/51330#discussion_r370102752", "createdAt": "2020-01-23T13:00:29Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -381,14 +381,24 @@ public void deleteTrainedModel(String modelId, ActionListener<Boolean> listener)\n     public void expandIds(String idExpression,\n                           boolean allowNoResources,\n                           @Nullable PageParams pageParams,\n+                          Set<String> tags,\n                           ActionListener<Tuple<Long, Set<String>>> idsListener) {\n         String[] tokens = Strings.tokenizeToStringArray(idExpression, \",\");\n+        BoolQueryBuilder tagQuery = QueryBuilders.boolQuery();\n+        for(String tag : tags) {\n+            tagQuery.filter(QueryBuilders.termQuery(TrainedModelConfig.TAGS.getPreferredName(), tag));\n+        }\n+\n+        QueryBuilder query = QueryBuilders.constantScoreQuery(\n+            QueryBuilders.boolQuery()\n+                .filter(tagQuery.hasClauses() ? tagQuery : QueryBuilders.matchAllQuery())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5NzczNQ=="}, "originalCommit": {"oid": "260fa074864847fd9db3990aa0aacb6fecc64b6b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NzU1MDQ1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjo0OToxNFrOFg8-4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMDowMjo0OFrOFhK-fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5Nzg4OA==", "bodyText": "Could you add a unit test to TrainedModelProviderTests for the new functionality?", "url": "https://github.com/elastic/elasticsearch/pull/51330#discussion_r370097888", "createdAt": "2020-01-23T12:49:14Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -381,14 +381,24 @@ public void deleteTrainedModel(String modelId, ActionListener<Boolean> listener)\n     public void expandIds(String idExpression,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "260fa074864847fd9db3990aa0aacb6fecc64b6b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMyNzE2Ng==", "bodyText": "I did add a test verifying that filters are added to the expansion query.", "url": "https://github.com/elastic/elasticsearch/pull/51330#discussion_r370327166", "createdAt": "2020-01-23T20:02:48Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/persistence/TrainedModelProvider.java", "diffHunk": "@@ -381,14 +381,24 @@ public void deleteTrainedModel(String modelId, ActionListener<Boolean> listener)\n     public void expandIds(String idExpression,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5Nzg4OA=="}, "originalCommit": {"oid": "260fa074864847fd9db3990aa0aacb6fecc64b6b"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4450, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}