{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNjcxMDk4", "number": 66713, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNzo0NzoyMVrOFL1hvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMzo1NDowNlrOFMJE-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3OTU1NjQ2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/internal/ShardSearchContextId.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNzo0NzoyMVrOIPPeng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNzo0NzoyMVrOIPPeng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg1MzE1MA==", "bodyText": "I will remove this constructor in a follow-up.", "url": "https://github.com/elastic/elasticsearch/pull/66713#discussion_r552853150", "createdAt": "2021-01-06T17:47:21Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/search/internal/ShardSearchContextId.java", "diffHunk": "@@ -30,10 +30,17 @@\n public final class ShardSearchContextId implements Writeable {\n     private final String sessionId;\n     private final long id;\n+    private final String searcherId;\n \n+    // TODO: Remove this constructor\n     public ShardSearchContextId(String sessionId, long id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a14cf1876d878bd8fecd9d6616edeb5a9124406"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4Mjc1OTMyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMzo1Mzo1OVrOIPtMaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMzo1Mzo1OVrOIPtMaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM0MDAxMQ==", "bodyText": "Do we need to apply the same logic when deleting the PIT ? We cannot assume that all replicas are present in the PIT that is used for the final deletion so we have to check them all ?", "url": "https://github.com/elastic/elasticsearch/pull/66713#discussion_r553340011", "createdAt": "2021-01-07T13:53:59Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java", "diffHunk": "@@ -580,7 +581,15 @@ private void executeLocalSearch(Task task, SearchTimeProvider timeProvider, Sear\n                 final String clusterAlias = entry.getKey();\n                 final SearchContextIdForNode perNode = searchContextId.shards().get(shardId);\n                 assert clusterAlias.equals(perNode.getClusterAlias()) : clusterAlias + \" != \" + perNode.getClusterAlias();\n-                final List<String> targetNodes = List.of(perNode.getNode());\n+                final List<String> targetNodes = new ArrayList<>(group.getShards().length);\n+                targetNodes.add(perNode.getNode());\n+                if (perNode.getSearchContextId().getSearcherId() != null) {\n+                    for (ShardRouting shard : group.getShards()) {\n+                        if (shard.currentNodeId().equals(perNode.getNode()) == false) {\n+                            targetNodes.add(shard.currentNodeId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a14cf1876d878bd8fecd9d6616edeb5a9124406"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4Mjc1OTYxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMzo1NDowNlrOIPtMmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMzo1NDowNlrOIPtMmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM0MDA1Nw==", "bodyText": "Same here ?", "url": "https://github.com/elastic/elasticsearch/pull/66713#discussion_r553340057", "createdAt": "2021-01-07T13:54:06Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java", "diffHunk": "@@ -914,8 +923,16 @@ private static RemoteTransportException wrapRemoteClusterFailure(String clusterA\n             final SearchContextIdForNode perNode = entry.getValue();\n             if (Strings.isEmpty(perNode.getClusterAlias())) {\n                 final ShardId shardId = entry.getKey();\n-                OperationRouting.getShards(clusterState, shardId);\n-                final List<String> targetNodes = List.of(perNode.getNode());\n+                final ShardIterator shards = OperationRouting.getShards(clusterState, shardId);\n+                final List<String> targetNodes = new ArrayList<>(shards.size());\n+                targetNodes.add(perNode.getNode());\n+                if (perNode.getSearchContextId().getSearcherId() != null) {\n+                    for (ShardRouting shard : shards) {\n+                        if (shard.currentNodeId().equals(perNode.getNode()) == false) {\n+                            targetNodes.add(shard.currentNodeId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a14cf1876d878bd8fecd9d6616edeb5a9124406"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4404, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}