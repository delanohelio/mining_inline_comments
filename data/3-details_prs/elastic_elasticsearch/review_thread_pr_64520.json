{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NjM4MDQ1", "number": 64520, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMTo0Mzo1NFrOE0xSCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMTo0Mzo1NFrOE0xSCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzY4ODQwOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMTo0Mzo1NFrOHsrJ1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMTo0Mzo1NFrOHsrJ1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYwNjQyMw==", "bodyText": "Can we have this as two separate tests that are always run? Randomization here just reduces coverage on an individual test run, which makes debugging a pain later IME.", "url": "https://github.com/elastic/elasticsearch/pull/64520#discussion_r516606423", "createdAt": "2020-11-03T11:43:54Z", "author": {"login": "romseygeek"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorTests.java", "diffHunk": "@@ -141,6 +141,58 @@ public void testSignificance() throws IOException {\n         }\n     }\n \n+    /**\n+     * Uses the significant text aggregation to find the keywords in text fields and include/exclude selected terms\n+     */\n+    public void testIncludeExcludes() throws IOException {\n+        TextFieldType textFieldType = new TextFieldType(\"text\");\n+        textFieldType.setIndexAnalyzer(new NamedAnalyzer(\"my_analyzer\", AnalyzerScope.GLOBAL, new StandardAnalyzer()));\n+        \n+        IndexWriterConfig indexWriterConfig = newIndexWriterConfig();\n+        indexWriterConfig.setMaxBufferedDocs(100);\n+        indexWriterConfig.setRAMBufferSizeMB(100); // flush on open to have a single segment\n+        try (Directory dir = newDirectory(); IndexWriter w = new IndexWriter(dir, indexWriterConfig)) {\n+            indexDocuments(w);\n+\n+            String [] excludeValues = {\"duplicate\"};\n+            String [] includeValues = {\"duplicate\"};\n+\n+            boolean inclusive = randomBoolean();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f01705d94ae889763a89ac1f59a2da36ccbb8c3"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4039, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}