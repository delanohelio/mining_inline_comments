{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2ODM2Mzk1", "number": 62338, "title": "Allocate new indices on \"hot\" or \"content\" tier depending on data stream inclusion", "bodyText": "This commit changes the default allocation on the \"hot\" tier to allocating the newly created index\nto the \"hot\" tier if it is part of a new or existing data stream, and to the \"content\" tier if it is\nnot part of a data stream.\nOverriding any of the index.routing.allocation.(include|exclude|require).* settings continues to\ncause the initial allocation not to be set (no change in behavior).\nRelates to #60848", "createdAt": "2020-09-14T19:31:41Z", "url": "https://github.com/elastic/elasticsearch/pull/62338", "merged": true, "mergeCommit": {"oid": "22d54656a2d10602bff034a78f7d7e56ca0d8200"}, "closed": true, "closedAt": "2020-09-17T14:52:56Z", "author": {"login": "dakrone"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI4XNkAH2gAyNDg2ODM2Mzk1Ojg2NTBjYTA4YTNhNTc5ODRkNTliZWU3YjI3ODFjYThmYTNlYTU0NDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJxhpNgH2gAyNDg2ODM2Mzk1OmM4NTE0NGZkNTM4M2M1YzVlNjhjYmYyNTkzYjgxNmUwNzUxOWQzM2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8650ca08a3a57984d59bee7b2781ca8fa3ea5441", "author": {"user": {"login": "dakrone", "name": "Lee Hinman"}}, "url": "https://github.com/elastic/elasticsearch/commit/8650ca08a3a57984d59bee7b2781ca8fa3ea5441", "committedDate": "2020-09-14T19:28:40Z", "message": "Allocate new indices on \"hot\" or \"content\" tier depending on data stream inclusion\n\nThis commit changes the default allocation on the \"hot\" tier to allocating the newly created index\nto the \"hot\" tier if it is part of a new or existing data stream, and to the \"content\" tier if it is\nnot part of a data stream.\n\nOverriding any of the `index.routing.allocation.(include|exclude|require).*` settings continues to\ncause the initial allocation not to be set (no change in behavior).\n\nRelates to #60848"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "849cef6bfca54a7f6ff1ac26bd3264a678bd76f7", "author": {"user": {"login": "dakrone", "name": "Lee Hinman"}}, "url": "https://github.com/elastic/elasticsearch/commit/849cef6bfca54a7f6ff1ac26bd3264a678bd76f7", "committedDate": "2020-09-14T19:39:06Z", "message": "Fixup docs expecting data_hot now data_content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aa5c4ca9ddf10485d4cda4e732e55918d331343", "author": {"user": {"login": "dakrone", "name": "Lee Hinman"}}, "url": "https://github.com/elastic/elasticsearch/commit/8aa5c4ca9ddf10485d4cda4e732e55918d331343", "committedDate": "2020-09-14T19:39:20Z", "message": "Spotless \u0ca0_\u0ca0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e5145f51633afccb812c8327ea71c4a2faf0563", "author": {"user": {"login": "dakrone", "name": "Lee Hinman"}}, "url": "https://github.com/elastic/elasticsearch/commit/4e5145f51633afccb812c8327ea71c4a2faf0563", "committedDate": "2020-09-14T19:51:11Z", "message": "Fix line length"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "645cd19f26a41f4c68f918d8b32b38fb94dbaba2", "author": {"user": {"login": "dakrone", "name": "Lee Hinman"}}, "url": "https://github.com/elastic/elasticsearch/commit/645cd19f26a41f4c68f918d8b32b38fb94dbaba2", "committedDate": "2020-09-14T20:17:48Z", "message": "Merge remote-tracking branch 'origin/master' into dt-allocate-on-hot-or-content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NjI0OTE0", "url": "https://github.com/elastic/elasticsearch/pull/62338#pullrequestreview-489624914", "createdAt": "2020-09-16T13:28:39Z", "commit": {"oid": "645cd19f26a41f4c68f918d8b32b38fb94dbaba2"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzoyODozOVrOHSw3Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzozNDo1NVrOHSxJRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQzNzAzMA==", "bodyText": "nit: this log message should be moved inside the if/else below and adapted accordinly", "url": "https://github.com/elastic/elasticsearch/pull/62338#discussion_r489437030", "createdAt": "2020-09-16T13:28:39Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/cluster/routing/allocation/DataTierIT.java", "diffHunk": "@@ -33,13 +33,42 @@\n         return Collections.singleton(LocalStateCompositeXPackPlugin.class);\n     }\n \n-    public void testDefaultAllocateToHot() {\n+    public void testDefaultIndexAllocateToContent() {\n         startWarmOnlyNode();\n         startColdOnlyNode();\n         ensureGreen();\n \n         client().admin().indices().prepareCreate(index).setWaitForActiveShards(0).get();\n \n+        Settings idxSettings = client().admin().indices().prepareGetIndex().addIndices(index).get().getSettings().get(index);\n+        assertThat(DataTierAllocationDecider.INDEX_ROUTING_INCLUDE_SETTING.get(idxSettings), equalTo(DataTier.DATA_CONTENT));\n+\n+        // index should be red\n+        assertThat(client().admin().cluster().prepareHealth(index).get().getIndices().get(index).getStatus(),\n+            equalTo(ClusterHealthStatus.RED));\n+\n+        logger.info(\"--> starting hot node\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "645cd19f26a41f4c68f918d8b32b38fb94dbaba2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0MTYwNg==", "bodyText": "I believe DataTierIT needs to be moved under internalClusterTest as otherwise, the tests don't run", "url": "https://github.com/elastic/elasticsearch/pull/62338#discussion_r489441606", "createdAt": "2020-09-16T13:34:55Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/cluster/routing/allocation/DataTierIT.java", "diffHunk": "@@ -33,13 +33,42 @@\n         return Collections.singleton(LocalStateCompositeXPackPlugin.class);\n     }\n \n-    public void testDefaultAllocateToHot() {\n+    public void testDefaultIndexAllocateToContent() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "645cd19f26a41f4c68f918d8b32b38fb94dbaba2"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NjMyMjY2", "url": "https://github.com/elastic/elasticsearch/pull/62338#pullrequestreview-489632266", "createdAt": "2020-09-16T13:36:17Z", "commit": {"oid": "645cd19f26a41f4c68f918d8b32b38fb94dbaba2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzozNjoxOFrOHSxNcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzozNjoxOFrOHSxNcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0MjY3NQ==", "bodyText": "very nice \ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/62338#discussion_r489442675", "createdAt": "2020-09-16T13:36:18Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/data-streams/src/internalClusterTest/java/org/elasticsearch/xpack/datastreams/DataTierDataStreamIT.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.datastreams;\n+\n+import org.elasticsearch.action.admin.indices.template.put.PutComposableIndexTemplateAction;\n+import org.elasticsearch.cluster.metadata.ComposableIndexTemplate;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.test.ESIntegTestCase;\n+import org.elasticsearch.xpack.cluster.routing.allocation.DataTierAllocationDecider;\n+import org.elasticsearch.xpack.core.DataTier;\n+import org.elasticsearch.xpack.core.LocalStateCompositeXPackPlugin;\n+import org.elasticsearch.xpack.core.action.DeleteDataStreamAction;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+\n+@ESIntegTestCase.ClusterScope(scope = ESIntegTestCase.Scope.TEST, numDataNodes = 0, numClientNodes = 0)\n+public class DataTierDataStreamIT extends ESIntegTestCase {\n+    private static final String index = \"myindex\";\n+\n+    @Override\n+    protected Collection<Class<? extends Plugin>> nodePlugins() {\n+        return Arrays.asList(LocalStateCompositeXPackPlugin.class, DataStreamsPlugin.class);\n+    }\n+\n+    public void testDefaultDataStreamAllocateToHot() {\n+        startHotOnlyNode();\n+        ensureGreen();\n+\n+        ComposableIndexTemplate template = new ComposableIndexTemplate(\n+            Collections.singletonList(index),\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            new ComposableIndexTemplate.DataStreamTemplate()\n+        );\n+        client().execute(\n+            PutComposableIndexTemplateAction.INSTANCE,\n+            new PutComposableIndexTemplateAction.Request(\"template\").indexTemplate(template)\n+        ).actionGet();\n+        client().prepareIndex(index).setCreate(true).setId(\"1\").setSource(\"@timestamp\", \"2020-09-09\").setWaitForActiveShards(0).get();\n+\n+        Settings idxSettings = client().admin()\n+            .indices()\n+            .prepareGetIndex()\n+            .addIndices(index)\n+            .get()\n+            .getSettings()\n+            .get(\".ds-\" + index + \"-000001\");\n+        assertThat(DataTierAllocationDecider.INDEX_ROUTING_INCLUDE_SETTING.get(idxSettings), equalTo(DataTier.DATA_HOT));\n+\n+        logger.info(\"--> waiting for {} to be yellow\", index);\n+        ensureYellow(index);\n+\n+        // Roll over index and ensure the second index also went to the \"hot\" tier\n+        client().admin().indices().prepareRolloverIndex(index).get();\n+        idxSettings = client().admin().indices().prepareGetIndex().addIndices(index).get().getSettings().get(\".ds-\" + index + \"-000002\");\n+        assertThat(DataTierAllocationDecider.INDEX_ROUTING_INCLUDE_SETTING.get(idxSettings), equalTo(DataTier.DATA_HOT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "645cd19f26a41f4c68f918d8b32b38fb94dbaba2"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NjMzMjYy", "url": "https://github.com/elastic/elasticsearch/pull/62338#pullrequestreview-489633262", "createdAt": "2020-09-16T13:37:17Z", "commit": {"oid": "645cd19f26a41f4c68f918d8b32b38fb94dbaba2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzozNzoxN1rOHSxQWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzozNzoxN1rOHSxQWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0MzQxOA==", "bodyText": "I'd recommend using DataStream.getDefaultBackingIndexName here and below when referencing the backing indices by name (in case the naming scheme ever changes)", "url": "https://github.com/elastic/elasticsearch/pull/62338#discussion_r489443418", "createdAt": "2020-09-16T13:37:17Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/data-streams/src/internalClusterTest/java/org/elasticsearch/xpack/datastreams/DataTierDataStreamIT.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.datastreams;\n+\n+import org.elasticsearch.action.admin.indices.template.put.PutComposableIndexTemplateAction;\n+import org.elasticsearch.cluster.metadata.ComposableIndexTemplate;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.test.ESIntegTestCase;\n+import org.elasticsearch.xpack.cluster.routing.allocation.DataTierAllocationDecider;\n+import org.elasticsearch.xpack.core.DataTier;\n+import org.elasticsearch.xpack.core.LocalStateCompositeXPackPlugin;\n+import org.elasticsearch.xpack.core.action.DeleteDataStreamAction;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+\n+@ESIntegTestCase.ClusterScope(scope = ESIntegTestCase.Scope.TEST, numDataNodes = 0, numClientNodes = 0)\n+public class DataTierDataStreamIT extends ESIntegTestCase {\n+    private static final String index = \"myindex\";\n+\n+    @Override\n+    protected Collection<Class<? extends Plugin>> nodePlugins() {\n+        return Arrays.asList(LocalStateCompositeXPackPlugin.class, DataStreamsPlugin.class);\n+    }\n+\n+    public void testDefaultDataStreamAllocateToHot() {\n+        startHotOnlyNode();\n+        ensureGreen();\n+\n+        ComposableIndexTemplate template = new ComposableIndexTemplate(\n+            Collections.singletonList(index),\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            new ComposableIndexTemplate.DataStreamTemplate()\n+        );\n+        client().execute(\n+            PutComposableIndexTemplateAction.INSTANCE,\n+            new PutComposableIndexTemplateAction.Request(\"template\").indexTemplate(template)\n+        ).actionGet();\n+        client().prepareIndex(index).setCreate(true).setId(\"1\").setSource(\"@timestamp\", \"2020-09-09\").setWaitForActiveShards(0).get();\n+\n+        Settings idxSettings = client().admin()\n+            .indices()\n+            .prepareGetIndex()\n+            .addIndices(index)\n+            .get()\n+            .getSettings()\n+            .get(\".ds-\" + index + \"-000001\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "645cd19f26a41f4c68f918d8b32b38fb94dbaba2"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cabed3d77413b451687243fe3d5c9076b5355356", "author": {"user": {"login": "dakrone", "name": "Lee Hinman"}}, "url": "https://github.com/elastic/elasticsearch/commit/cabed3d77413b451687243fe3d5c9076b5355356", "committedDate": "2020-09-16T16:45:03Z", "message": "Move logging into 'if' statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "706a217a8afc8be26a5475a563ca79cef3b5ad0d", "author": {"user": {"login": "dakrone", "name": "Lee Hinman"}}, "url": "https://github.com/elastic/elasticsearch/commit/706a217a8afc8be26a5475a563ca79cef3b5ad0d", "committedDate": "2020-09-16T17:08:38Z", "message": "Move DataTierIT into internalClusterTest folder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b4c445952da1f951afd3d67c1c0ee3431453d07", "author": {"user": {"login": "dakrone", "name": "Lee Hinman"}}, "url": "https://github.com/elastic/elasticsearch/commit/1b4c445952da1f951afd3d67c1c0ee3431453d07", "committedDate": "2020-09-16T17:15:58Z", "message": "Use DataStream.getDefaultBackingIndexName instead of hardcoding index name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2331eb9cb500beac23896eaceb0545a980b57f86", "author": {"user": {"login": "dakrone", "name": "Lee Hinman"}}, "url": "https://github.com/elastic/elasticsearch/commit/2331eb9cb500beac23896eaceb0545a980b57f86", "committedDate": "2020-09-16T17:20:20Z", "message": "Spotless \u0ca0_\u0ca0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52ee047abee9fcf3877aa668f2b08b0ad6c1463b", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/52ee047abee9fcf3877aa668f2b08b0ad6c1463b", "committedDate": "2020-09-16T18:46:25Z", "message": "Merge branch 'master' into dt-allocate-on-hot-or-content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4b0c8509e3a4a194c5a5262015dff728f53bc47", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/a4b0c8509e3a4a194c5a5262015dff728f53bc47", "committedDate": "2020-09-16T23:29:43Z", "message": "Merge branch 'master' into dt-allocate-on-hot-or-content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c85144fd5383c5c5e68cbf2593b816e07519d33b", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/c85144fd5383c5c5e68cbf2593b816e07519d33b", "committedDate": "2020-09-17T14:04:39Z", "message": "Merge branch 'master' into dt-allocate-on-hot-or-content"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4605, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}