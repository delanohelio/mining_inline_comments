{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NDM1Mjg1", "number": 59355, "title": "[DOCS] Adding get snapshot status API docs", "bodyText": "Adds a new page for the Get snapshot status API.\nBackports:\n\n7.x #59670\n7.9 #59711\n7.8 #59712\n\nRelates to #56069", "createdAt": "2020-07-10T13:18:35Z", "url": "https://github.com/elastic/elasticsearch/pull/59355", "merged": true, "mergeCommit": {"oid": "556f19d55de1ac1f890b366e27657445c4bd10bd"}, "closed": true, "closedAt": "2020-07-15T20:28:43Z", "author": {"login": "lockewritesdocs"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczQIXHAH2gAyNDQ3NDM1Mjg1OjA5ZjhhODU2YjBmNjRiNDE4ZjA2YjJmMjhkMTU2OWNkMDQxM2Y4YzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1PSIfgFqTQ0OTI0MDQ5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "09f8a856b0f64b418f06b2f28d1569cd0413f8c0", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/09f8a856b0f64b418f06b2f28d1569cd0413f8c0", "committedDate": "2020-07-09T14:43:50Z", "message": "Adding get snapshot status API docs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3884c0db9b54ee18b49922738aae658f45252cfc", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/3884c0db9b54ee18b49922738aae658f45252cfc", "committedDate": "2020-07-09T22:52:03Z", "message": "Adding more fields and a link to the new page."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTIwMDEw", "url": "https://github.com/elastic/elasticsearch/pull/59355#pullrequestreview-446520010", "createdAt": "2020-07-10T16:03:08Z", "commit": {"oid": "3884c0db9b54ee18b49922738aae658f45252cfc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjowMzowOFrOGv872A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjowMzowOFrOGv872A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNDYxNg==", "bodyText": "Couple of errors here:\n\nThe response includes a space between the property name and the :. However your comments don't include this space. To fix, change either so they're consistent.\nThe start_time_in_millis and time_in_millis properties are nested in the stats property. You'll need to add this property to the respective comments.\n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // TESTRESPONSE[s/\"uuid\": \"ITWHQY2fR2OqX-TYt6mUNA\"/\"uuid\": $body.snapshots.0.uuid/]\n          \n          \n            \n            // TESTRESPONSE[s/\"start_time_in_millis\": 1594158151205/\"start_time_in_millis\": $body.snapshots.0.start_time_in_millis/]\n          \n          \n            \n            // TESTRESPONSE[s/\"time_in_millis\": 0/\"time_in_millis\": $body.snapshots.0.time_in_millis/]\n          \n          \n            \n            // TESTRESPONSE[s/\"uuid\" : \"ITWHQY2fR2OqX-TYt6mUNA\"/\"uuid\" : $body.snapshots.0.uuid/]\n          \n          \n            \n            // TESTRESPONSE[s/\"start_time_in_millis\" : 1594158151205/\"start_time_in_millis\" : $body.snapshots.0.stats.start_time_in_millis/]\n          \n          \n            \n            // TESTRESPONSE[s/\"time_in_millis\" : 0/\"time_in_millis\" : $body.snapshots.0.stats.time_in_millis/]", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r452934616", "createdAt": "2020-07-10T16:03:08Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,228 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a complete breakdown of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+The snapshot `state` can be one of the following values:\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.\n+\n+`total`::\n+(object)\n+Total number and size of files that are referenced by the snapshot.\n+\n+`start_time_in_millis`::\n+(long)\n+The time, in milliseconds, when the snapshot creation process started.\n+\n+`time_in_millis`::\n+(long)\n+The total time, in milliseconds, that\n+====\n+\n+`indices`::\n+(list of objects)\n+List of objects containing information about the\n+indices included in the snapshot.\n++\n+Detailed information for each index includes:\n+\n+* `shards_stats`\n+* `stats`\n+* `shards`\n+\n+[[get-snapshot-status-api-example]]\n+==== {api-example-title}\n+\n+The following request returns information for `snapshot_2` in the `my_repository` repository.\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/snapshot_2/_status\n+----\n+\n+The API returns the following response:\n+\n+[source,console-result]\n+----\n+{\n+  \"snapshots\" : [\n+    {\n+      \"snapshot\" : \"snapshot_2\",\n+      \"repository\" : \"my_repository\",\n+      \"uuid\" : \"ITWHQY2fR2OqX-TYt6mUNA\",\n+      \"state\" : \"SUCCESS\",\n+      \"include_global_state\" : true,\n+      \"shards_stats\" : {\n+        \"initializing\" : 0,\n+        \"started\" : 0,\n+        \"finalizing\" : 0,\n+        \"done\" : 0,\n+        \"failed\" : 0,\n+        \"total\" : 0\n+      },\n+      \"stats\" : {\n+        \"incremental\" : {\n+          \"file_count\" : 0,\n+          \"size_in_bytes\" : 0\n+        },\n+        \"total\" : {\n+          \"file_count\" : 0,\n+          \"size_in_bytes\" : 0\n+        },\n+        \"start_time_in_millis\" : 1594158151205,\n+        \"time_in_millis\" : 0\n+      },\n+      \"indices\" : { }\n+    }\n+  ]\n+}\n+----\n+// TESTRESPONSE[s/\"uuid\": \"ITWHQY2fR2OqX-TYt6mUNA\"/\"uuid\": $body.snapshots.0.uuid/]\n+// TESTRESPONSE[s/\"start_time_in_millis\": 1594158151205/\"start_time_in_millis\": $body.snapshots.0.start_time_in_millis/]\n+// TESTRESPONSE[s/\"time_in_millis\": 0/\"time_in_millis\": $body.snapshots.0.time_in_millis/]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3884c0db9b54ee18b49922738aae658f45252cfc"}, "originalPosition": 228}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f633204a7fd76e3bfa305417504700af6dd0822c", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/f633204a7fd76e3bfa305417504700af6dd0822c", "committedDate": "2020-07-13T01:49:27Z", "message": "Adding missing spaces in TESTRESPONSES\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/a72f137607b1a13e345e4098056334f7ab89969c", "committedDate": "2020-07-13T19:18:50Z", "message": "Adding more parameters and making some edits."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTY1NDEx", "url": "https://github.com/elastic/elasticsearch/pull/59355#pullrequestreview-447565411", "createdAt": "2020-07-13T20:10:55Z", "commit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "state": "APPROVED", "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDoxNDo1NVrOGw4LQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDozMToyNlrOGw4udA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkwNTIxNw==", "bodyText": "This should be optional based on the Omitting... sentence below.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            (Required, string)\n          \n          \n            \n            (Optional, string)", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453905217", "createdAt": "2020-07-13T20:14:55Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkwNjAwNw==", "bodyText": "You also need to omit the <snapshot> param, right?\nI'd reword this so it's imperative and places the desired info at the beginning:\nTo get a list of all snapshots currently running in the cluster, omit this and the ` parameter.\nAlso: are wildcard expressions supported?", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453906007", "createdAt": "2020-07-13T20:16:15Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkwNjA2MQ==", "bodyText": "This param looks to be optional\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            (Required, string)\n          \n          \n            \n            (Optional, string)\n          \n      \n    \n    \n  \n\nAlso: are wildcard expressions supported?", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453906061", "createdAt": "2020-07-13T20:16:23Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkwOTMxNA==", "bodyText": "It'd be good to create a couple of indices and add some documents to them so this is a little more realistic.\nCurrently, all the stats are zero and there are no indices, which is where a good bit of the stats are located.", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453909314", "createdAt": "2020-07-13T20:22:43Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.\n+\n+`total`::\n+(object)\n+Total number and size of files that are referenced by the snapshot.\n+\n+`start_time_in_millis`::\n+(long)\n+The time, in milliseconds, when the snapshot creation process started.\n+\n+`time_in_millis`::\n+(long)\n+The total time, in milliseconds, that\n+====\n+\n+`indices`::\n+(list of objects)\n+List of objects containing information about the\n+indices included in the snapshot.\n++\n+.Properties of `indices`\n+[%collapsible%open]\n+====\n+`shards_stats`::\n+See <<get-snapshot-status-shards-stats,`shards_stats`>>.\n+\n+`stats`::\n+See <<get-snapshot-status-stats,`stats`>>.\n+\n+`shards`::\n+(list of objects)\n+List of objects containing information about the\n+shards that include the snapshot.\n++\n+.Properties of `shards`\n+[%collapsible%open]\n+=====\n+`stage`::\n+(string)\n+Indicates the current state of the shards that include the snapshot.\n++\n+.Properties of `stage`\n+[%collapsible%open]\n+======\n+`DONE`::\n+Number of shards containing a completed copy of the snapshot.\n+\n+`FAILURE`::\n+Number of shards containing a failed copy of the snapshot.\n+\n+`FINALIZE`::\n+Number of shards containing a copy of the snapshot in the finalizing stage.\n+\n+`INIT`::\n+Number of shards containing a copy of the snapshot in the initializing stage.\n+\n+`STARTED`::\n+Number of shards containing a copy of the snapshot in the started stage.\n+======\n+=====\n+====\n+\n+[[get-snapshot-status-api-example]]\n+==== {api-example-title}\n+\n+The following request returns information for `snapshot_2` in the `my_repository` repository.\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/snapshot_2/_status\n+----\n+\n+The API returns the following response:\n+\n+[source,console-result]\n+----\n+{\n+  \"snapshots\" : [\n+    {\n+      \"snapshot\" : \"snapshot_2\",\n+      \"repository\" : \"my_repository\",\n+      \"uuid\" : \"ITWHQY2fR2OqX-TYt6mUNA\",\n+      \"state\" : \"SUCCESS\",\n+      \"include_global_state\" : true,\n+      \"shards_stats\" : {\n+        \"initializing\" : 0,\n+        \"started\" : 0,\n+        \"finalizing\" : 0,\n+        \"done\" : 0,\n+        \"failed\" : 0,\n+        \"total\" : 0\n+      },\n+      \"stats\" : {\n+        \"incremental\" : {\n+          \"file_count\" : 0,\n+          \"size_in_bytes\" : 0\n+        },\n+        \"total\" : {\n+          \"file_count\" : 0,\n+          \"size_in_bytes\" : 0\n+        },\n+        \"start_time_in_millis\" : 1594158151205,\n+        \"time_in_millis\" : 0\n+      },\n+      \"indices\" : { }\n+    }\n+  ]\n+}\n+----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 263}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkwOTU0OA==", "bodyText": "Missing the repository property.", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453909548", "createdAt": "2020-07-13T20:23:11Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkwOTc4Mg==", "bodyText": "Looks like a copy/paste error.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [[get-snapshot-status-shards-stats]]", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453909782", "createdAt": "2020-07-13T20:23:34Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMDM1Ng==", "bodyText": "I'd nest another collapsible section here to document the file_count and size_in_bytes properties.", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453910356", "createdAt": "2020-07-13T20:24:31Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMDgxNA==", "bodyText": "Same comment here about documenting the nested properties.", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453910814", "createdAt": "2020-07-13T20:25:16Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMDk4NQ==", "bodyText": "Same about documenting the nested properties.", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453910985", "createdAt": "2020-07-13T20:25:36Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.\n+\n+`total`::\n+(object)\n+Total number and size of files that are referenced by the snapshot.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMTI4NQ==", "bodyText": "We generally try to avoid using Java-specific data types.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `start_time_in_millis`::\n          \n          \n            \n            (long)\n          \n          \n            \n            The time, in milliseconds, when the snapshot creation process started.\n          \n          \n            \n            \n          \n          \n            \n            `time_in_millis`::\n          \n          \n            \n            (long)\n          \n          \n            \n            The total time, in milliseconds, that\n          \n          \n            \n            `start_time_in_millis`::\n          \n          \n            \n            (integer)\n          \n          \n            \n            The time, in milliseconds, when the snapshot creation process started.\n          \n          \n            \n            \n          \n          \n            \n            `time_in_millis`::\n          \n          \n            \n            (integer)\n          \n          \n            \n            The total time, in milliseconds, that", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453911285", "createdAt": "2020-07-13T20:26:06Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.\n+\n+`total`::\n+(object)\n+Total number and size of files that are referenced by the snapshot.\n+\n+`start_time_in_millis`::\n+(long)\n+The time, in milliseconds, when the snapshot creation process started.\n+\n+`time_in_millis`::\n+(long)\n+The total time, in milliseconds, that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 167}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMTgzNA==", "bodyText": "Technically these are properties of <index>. I'd document the <index> property and nest accordingly.", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453911834", "createdAt": "2020-07-13T20:26:59Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.\n+\n+`total`::\n+(object)\n+Total number and size of files that are referenced by the snapshot.\n+\n+`start_time_in_millis`::\n+(long)\n+The time, in milliseconds, when the snapshot creation process started.\n+\n+`time_in_millis`::\n+(long)\n+The total time, in milliseconds, that\n+====\n+\n+`indices`::\n+(list of objects)\n+List of objects containing information about the\n+indices included in the snapshot.\n++\n+.Properties of `indices`\n+[%collapsible%open]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMjE1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `shards_stats`::\n          \n          \n            \n            See <<get-snapshot-status-shards-stats,`shards_stats`>>.\n          \n          \n            \n            `shards_stats`::\n          \n          \n            \n            (object)\n          \n          \n            \n            See <<get-snapshot-status-shards-stats,`shards_stats`>>.", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453912153", "createdAt": "2020-07-13T20:27:35Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.\n+\n+`total`::\n+(object)\n+Total number and size of files that are referenced by the snapshot.\n+\n+`start_time_in_millis`::\n+(long)\n+The time, in milliseconds, when the snapshot creation process started.\n+\n+`time_in_millis`::\n+(long)\n+The total time, in milliseconds, that\n+====\n+\n+`indices`::\n+(list of objects)\n+List of objects containing information about the\n+indices included in the snapshot.\n++\n+.Properties of `indices`\n+[%collapsible%open]\n+====\n+`shards_stats`::\n+See <<get-snapshot-status-shards-stats,`shards_stats`>>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMjIyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `stats`::\n          \n          \n            \n            `stats`::\n          \n          \n            \n            (object)", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453912228", "createdAt": "2020-07-13T20:27:43Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.\n+\n+`total`::\n+(object)\n+Total number and size of files that are referenced by the snapshot.\n+\n+`start_time_in_millis`::\n+(long)\n+The time, in milliseconds, when the snapshot creation process started.\n+\n+`time_in_millis`::\n+(long)\n+The total time, in milliseconds, that\n+====\n+\n+`indices`::\n+(list of objects)\n+List of objects containing information about the\n+indices included in the snapshot.\n++\n+.Properties of `indices`\n+[%collapsible%open]\n+====\n+`shards_stats`::\n+See <<get-snapshot-status-shards-stats,`shards_stats`>>.\n+\n+`stats`::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 181}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMzg5MA==", "bodyText": "Missing a few <shard> properties:\n\nstats and its child properties\ntotal and its child properties\nstart_time_in_millis\ntime_in_millis\n\nEven though these are somewhat redundant, it's helpful for devs to know what schema to expect.", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453913890", "createdAt": "2020-07-13T20:30:50Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.\n+\n+`total`::\n+(object)\n+Total number and size of files that are referenced by the snapshot.\n+\n+`start_time_in_millis`::\n+(long)\n+The time, in milliseconds, when the snapshot creation process started.\n+\n+`time_in_millis`::\n+(long)\n+The total time, in milliseconds, that\n+====\n+\n+`indices`::\n+(list of objects)\n+List of objects containing information about the\n+indices included in the snapshot.\n++\n+.Properties of `indices`\n+[%collapsible%open]\n+====\n+`shards_stats`::\n+See <<get-snapshot-status-shards-stats,`shards_stats`>>.\n+\n+`stats`::\n+See <<get-snapshot-status-stats,`stats`>>.\n+\n+`shards`::\n+(list of objects)\n+List of objects containing information about the\n+shards that include the snapshot.\n++\n+.Properties of `shards`\n+[%collapsible%open]\n+=====\n+`stage`::\n+(string)\n+Indicates the current state of the shards that include the snapshot.\n++\n+.Properties of `stage`\n+[%collapsible%open]\n+======\n+`DONE`::\n+Number of shards containing a completed copy of the snapshot.\n+\n+`FAILURE`::\n+Number of shards containing a failed copy of the snapshot.\n+\n+`FINALIZE`::\n+Number of shards containing a copy of the snapshot in the finalizing stage.\n+\n+`INIT`::\n+Number of shards containing a copy of the snapshot in the initializing stage.\n+\n+`STARTED`::\n+Number of shards containing a copy of the snapshot in the started stage.\n+======\n+=====", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxNDIyOA==", "bodyText": "I'd reword to differentiate between this and the get snapshot API.", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r453914228", "createdAt": "2020-07-13T20:31:26Z", "author": {"login": "jrodewig"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,266 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request.\n++\n+Omitting a repository name retrieves a list of all snapshots currently running in the cluster.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.\n+\n+`total`::\n+(object)\n+Total number and size of files that are referenced by the snapshot.\n+\n+`start_time_in_millis`::\n+(long)\n+The time, in milliseconds, when the snapshot creation process started.\n+\n+`time_in_millis`::\n+(long)\n+The total time, in milliseconds, that\n+====\n+\n+`indices`::\n+(list of objects)\n+List of objects containing information about the\n+indices included in the snapshot.\n++\n+.Properties of `indices`\n+[%collapsible%open]\n+====\n+`shards_stats`::\n+See <<get-snapshot-status-shards-stats,`shards_stats`>>.\n+\n+`stats`::\n+See <<get-snapshot-status-stats,`stats`>>.\n+\n+`shards`::\n+(list of objects)\n+List of objects containing information about the\n+shards that include the snapshot.\n++\n+.Properties of `shards`\n+[%collapsible%open]\n+=====\n+`stage`::\n+(string)\n+Indicates the current state of the shards that include the snapshot.\n++\n+.Properties of `stage`\n+[%collapsible%open]\n+======\n+`DONE`::\n+Number of shards containing a completed copy of the snapshot.\n+\n+`FAILURE`::\n+Number of shards containing a failed copy of the snapshot.\n+\n+`FINALIZE`::\n+Number of shards containing a copy of the snapshot in the finalizing stage.\n+\n+`INIT`::\n+Number of shards containing a copy of the snapshot in the initializing stage.\n+\n+`STARTED`::\n+Number of shards containing a copy of the snapshot in the started stage.\n+======\n+=====\n+====\n+\n+[[get-snapshot-status-api-example]]\n+==== {api-example-title}\n+\n+The following request returns information for `snapshot_2` in the `my_repository` repository.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72f137607b1a13e345e4098056334f7ab89969c"}, "originalPosition": 220}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f245a50c1ce1dc5d565b7e7da068b8a9f47a3b9", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/7f245a50c1ce1dc5d565b7e7da068b8a9f47a3b9", "committedDate": "2020-07-13T20:58:08Z", "message": "Marking snapshot as optional\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62bdd12173846cc91f14d923d3503cc01dc26e54", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/62bdd12173846cc91f14d923d3503cc01dc26e54", "committedDate": "2020-07-13T20:58:31Z", "message": "Marking repository as optional\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1988ebfde88a1ced3ef10afdb5571b1c10431bea", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/1988ebfde88a1ced3ef10afdb5571b1c10431bea", "committedDate": "2020-07-13T21:04:18Z", "message": "Add data type for stats\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7de5b12aef14e43fee369dd5e2c4d7bda496a7d9", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/7de5b12aef14e43fee369dd5e2c4d7bda496a7d9", "committedDate": "2020-07-13T21:04:49Z", "message": "Add data type for shard_stats\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c26d39b479a9f0e155d7a862af52d1b9cec44ffb", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/c26d39b479a9f0e155d7a862af52d1b9cec44ffb", "committedDate": "2020-07-13T22:11:54Z", "message": "Incorporating review feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3ODk3ODQ4", "url": "https://github.com/elastic/elasticsearch/pull/59355#pullrequestreview-447897848", "createdAt": "2020-07-14T08:29:22Z", "commit": {"oid": "c26d39b479a9f0e155d7a862af52d1b9cec44ffb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODoyOToyMlrOGxJqfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODozNDo1N1rOGxJ25g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5MTc0MA==", "bodyText": "This is not correct. processed tracks those files that have already been uploaded. We increment the stats here after we upload a file", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r454191740", "createdAt": "2020-07-14T08:29:22Z", "author": {"login": "original-brownbear"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,273 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request. Wildcard (`*`) expressions are supported.\n++\n+To retrieve a list of all snapshots in the cluster, omit this and the `<snapshot>` parameter.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n++\n+To retrieve a list of all snapshots in a specified repository, omit this parameter.\n++\n+NOTE: Wildcard (`*`) expressions are not supported for `<snapshot>`.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+`repository`::\n+(string)\n+Name of the repository that includes the snapshot.\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26d39b479a9f0e155d7a862af52d1b9cec44ffb"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5MzA3OQ==", "bodyText": "This needs to be worded a little differently. If you run this API for an already complete snapshot then it would be\n\nNumber and size of files that were not already in the repository and needed to be copied as part of the incremental snapshot.\n\nI think we should explain both cases here in the wording somehow.", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r454193079", "createdAt": "2020-07-14T08:31:38Z", "author": {"login": "original-brownbear"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,273 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request. Wildcard (`*`) expressions are supported.\n++\n+To retrieve a list of all snapshots in the cluster, omit this and the `<snapshot>` parameter.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n++\n+To retrieve a list of all snapshots in a specified repository, omit this parameter.\n++\n+NOTE: Wildcard (`*`) expressions are not supported for `<snapshot>`.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+`repository`::\n+(string)\n+Name of the repository that includes the snapshot.\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26d39b479a9f0e155d7a862af52d1b9cec44ffb"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5NDkxOA==", "bodyText": "This is confusing (same for the other stage explanations here). i think something along the lines of the following would be better:\n\nNumber of shards in the snapshot that were successfully stored in the repository.", "url": "https://github.com/elastic/elasticsearch/pull/59355#discussion_r454194918", "createdAt": "2020-07-14T08:34:57Z", "author": {"login": "original-brownbear"}, "path": "docs/reference/snapshot-restore/apis/get-snapshot-status-api.asciidoc", "diffHunk": "@@ -0,0 +1,273 @@\n+[[get-snapshot-status-api]]\n+=== Get snapshot status API\n+++++\n+<titleabbrev>Get snapshot status</titleabbrev>\n+++++\n+\n+Retrieves a detailed description of the current state for each shard participating in the snapshot.\n+\n+////\n+[source,console]\n+----\n+PUT /_snapshot/my_repository\n+{\n+  \"type\": \"fs\",\n+  \"settings\": {\n+    \"location\": \"my_backup_location\"\n+  }\n+}\n+\n+PUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n+\n+PUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n+----\n+// TESTSETUP\n+////\n+\n+[source,console]\n+----\n+GET /_snapshot/my_repository/my_snapshot/_status\n+----\n+\n+[[get-snapshot-status-api-request]]\n+==== {api-request-title}\n+\n+`GET /_snapshot/<repository>/<snapshot>/_status`\n+\n+[[get-snapshot-status-api-desc]]\n+==== {api-description-title}\n+\n+Use the get snapshot status API to retrieve detailed information about snapshots currently running in the cluster.\n+\n+If you specify both the repository name and snapshot, the request retrieves detailed status information for the given snapshot, even if not currently running.\n+\n+[[get-snapshot-status-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<repository>`::\n+(Required, string)\n+Snapshot repository name used to limit the request. Wildcard (`*`) expressions are supported.\n++\n+To retrieve a list of all snapshots in the cluster, omit this and the `<snapshot>` parameter.\n+\n+`<snapshot>`::\n+(Required, string)\n+Comma-separated list of snapshot names to retrieve status for.\n++\n+To retrieve a list of all snapshots in a specified repository, omit this parameter.\n++\n+NOTE: Wildcard (`*`) expressions are not supported for `<snapshot>`.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-request-body]]\n+==== {api-request-body-title}\n+\n+`ignore_unavailable`::\n+(Optional, boolean)\n+If `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n++\n+If `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n+\n+[role=\"child_attributes\"]\n+[[get-snapshot-status-api-response-body]]\n+==== {api-response-body-title}\n+`repository`::\n+(string)\n+Name of the repository that includes the snapshot.\n+\n+`snapshot`::\n+(string)\n+Name of the snapshot.\n+\n+`uuid`::\n+(string)\n+Universally unique identifier (UUID) of the snapshot.\n+\n+`state`::\n++\n+--\n+(string)\n+Indicates the current snapshot state.\n+\n+.Values for `state`\n+[%collapsible%open]\n+====\n+`FAILED`::\n+  The snapshot finished with an error and failed to store any data.\n+\n+`IN_PROGRESS`::\n+  The snapshot is currently running.\n+\n+`PARTIAL`::\n+  The global cluster state was stored, but data of at least one shard was not stored successfully.\n+  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n+  that were not processed correctly.\n+\n+`SUCCESS`::\n+  The snapshot finished and all shards were stored successfully.\n+====\n+--\n+\n+`include_global_state`::\n+(boolean)\n+Indicates whether the current cluster state is included in the snapshot.\n+\n+[[get-snapshot-status-shards-stats]]\n+`shards_stats`::\n+(object)\n+Contains a count of shards in the snapshot.\n++\n+.Properties of `shards_stats`\n+[%collapsible%open]\n+====\n+`initializing`::\n+(integer)\n+Number of shards that are still initializing.\n+\n+`started`::\n+(integer)\n+Number of shards that have started but not are not finalized.\n+\n+`finalizing`::\n+(integer)\n+Number of shards that are finalizing but are not done.\n+\n+`done`::\n+(integer)\n+Number of shards that initialized, started, and finalized successfully.\n+\n+`failed`::\n+(integer)\n+Number of shards that failed to be included in the snapshot.\n+\n+`total`::\n+(integer)\n+Total number of shards included in the snapshot.\n+====\n+\n+[[get-snapshot-status-stats]]\n+`stats`::\n+(object)\n+Provides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n++\n+.Properties of `stats`\n+[%collapsible%open]\n+====\n+`incremental`::\n+(object)\n+Number and size of files that are not already in the repository and need to be copied as part of the incremental snapshot.\n+\n+`processed`::\n+(object)\n+Number and size of files that are still being copied.\n+\n+`total`::\n+(object)\n+Total number and size of files that are referenced by the snapshot.\n+\n+`start_time_in_millis`::\n+(long)\n+The time, in milliseconds, when the snapshot creation process started.\n+\n+`time_in_millis`::\n+(long)\n+The total time, in milliseconds, that\n+====\n+\n+`indices`::\n+(list of objects)\n+List of objects containing information about the\n+indices included in the snapshot.\n++\n+.Properties of `indices`\n+[%collapsible%open]\n+====\n+`shards_stats`::\n+See <<get-snapshot-status-shards-stats,`shards_stats`>>.\n+\n+`stats`::\n+See <<get-snapshot-status-stats,`stats`>>.\n+\n+`shards`::\n+(list of objects)\n+List of objects containing information about the\n+shards that include the snapshot.\n++\n+.Properties of `shards`\n+[%collapsible%open]\n+=====\n+`stage`::\n+(string)\n+Indicates the current state of the shards that include the snapshot.\n++\n+.Properties of `stage`\n+[%collapsible%open]\n+======\n+`DONE`::\n+Number of shards containing a completed copy of the snapshot.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26d39b479a9f0e155d7a862af52d1b9cec44ffb"}, "originalPosition": 207}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a50d962aead9adb79ad949d8ebb8462b6ff8df7", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/6a50d962aead9adb79ad949d8ebb8462b6ff8df7", "committedDate": "2020-07-14T21:50:42Z", "message": "Lots of review feedback incorporated."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39b86a6b32c63586a63c284aab68056baa53e3b0", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/39b86a6b32c63586a63c284aab68056baa53e3b0", "committedDate": "2020-07-15T17:02:22Z", "message": "Fixing tests to unbreak CI builds."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db21692ef5b7dbdb5fc64b995547614604b50906", "author": {"user": {"login": "lockewritesdocs", "name": "Adam Locke"}}, "url": "https://github.com/elastic/elasticsearch/commit/db21692ef5b7dbdb5fc64b995547614604b50906", "committedDate": "2020-07-15T17:13:47Z", "message": "Changing indices to index."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MjQwNDkz", "url": "https://github.com/elastic/elasticsearch/pull/59355#pullrequestreview-449240493", "createdAt": "2020-07-15T18:52:27Z", "commit": {"oid": "db21692ef5b7dbdb5fc64b995547614604b50906"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2156, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}