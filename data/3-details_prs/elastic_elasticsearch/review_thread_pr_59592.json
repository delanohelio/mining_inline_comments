{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MzM4NjQ3", "number": 59592, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOToyNToxM1rOEOmjoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOToyNToxM1rOEOmjoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzQ3MjMyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOToyNToxM1rOGx121Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTozMzo1MlrOGx2K8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkxNTc5Nw==", "bodyText": "Do you think that we could find the \"best\" value here if we don't randomize anything when indexing documents later in this test so that we have more predictable shard file sizes?", "url": "https://github.com/elastic/elasticsearch/pull/59592#discussion_r454915797", "createdAt": "2020-07-15T09:25:13Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -350,13 +350,12 @@ public void testCanMountSnapshotTakenWhileConcurrentlyIndexing() throws Exceptio\n         ensureGreen(restoredIndexName);\n     }\n \n-    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/59287\")\n     public void testMaxRestoreBytesPerSecIsUsed() throws Exception {\n         final String repositoryName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n         final Settings.Builder repositorySettings = Settings.builder().put(\"location\", randomRepoPath());\n         final boolean useRateLimits = randomBoolean();\n         if (useRateLimits) {\n-            repositorySettings.put(\"max_restore_bytes_per_sec\", new ByteSizeValue(10, ByteSizeUnit.KB));\n+            repositorySettings.put(\"max_restore_bytes_per_sec\", new ByteSizeValue(5, ByteSizeUnit.KB));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d753908cbf72095b07188e8ddee0464ff82cf04c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkxODg1OA==", "bodyText": "Alternatively, could we defer repository creation until after we've created the index and then compute a good value for the throttle based on the index size?", "url": "https://github.com/elastic/elasticsearch/pull/59592#discussion_r454918858", "createdAt": "2020-07-15T09:30:24Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -350,13 +350,12 @@ public void testCanMountSnapshotTakenWhileConcurrentlyIndexing() throws Exceptio\n         ensureGreen(restoredIndexName);\n     }\n \n-    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/59287\")\n     public void testMaxRestoreBytesPerSecIsUsed() throws Exception {\n         final String repositoryName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n         final Settings.Builder repositorySettings = Settings.builder().put(\"location\", randomRepoPath());\n         final boolean useRateLimits = randomBoolean();\n         if (useRateLimits) {\n-            repositorySettings.put(\"max_restore_bytes_per_sec\", new ByteSizeValue(10, ByteSizeUnit.KB));\n+            repositorySettings.put(\"max_restore_bytes_per_sec\", new ByteSizeValue(5, ByteSizeUnit.KB));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkxNTc5Nw=="}, "originalCommit": {"oid": "d753908cbf72095b07188e8ddee0464ff82cf04c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyMDk0Ng==", "bodyText": "Good idea, it also takes care of any future Lucene change that would impact file sizes.", "url": "https://github.com/elastic/elasticsearch/pull/59592#discussion_r454920946", "createdAt": "2020-07-15T09:33:52Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -350,13 +350,12 @@ public void testCanMountSnapshotTakenWhileConcurrentlyIndexing() throws Exceptio\n         ensureGreen(restoredIndexName);\n     }\n \n-    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/59287\")\n     public void testMaxRestoreBytesPerSecIsUsed() throws Exception {\n         final String repositoryName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT);\n         final Settings.Builder repositorySettings = Settings.builder().put(\"location\", randomRepoPath());\n         final boolean useRateLimits = randomBoolean();\n         if (useRateLimits) {\n-            repositorySettings.put(\"max_restore_bytes_per_sec\", new ByteSizeValue(10, ByteSizeUnit.KB));\n+            repositorySettings.put(\"max_restore_bytes_per_sec\", new ByteSizeValue(5, ByteSizeUnit.KB));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkxNTc5Nw=="}, "originalCommit": {"oid": "d753908cbf72095b07188e8ddee0464ff82cf04c"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2317, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}