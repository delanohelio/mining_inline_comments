{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDg5MTQ2", "number": 59342, "title": "Add license feature usage api", "bodyText": "This commit adds a new api to track when gold+ features are used within\nx-pack. The tracking is done internally whenever a feature is checked\nagainst the current license. The output of the api is a list of each\nused feature, which includes the name, license level, and last time it\nwas used. In addition to a unit test for the tracking, a rest test is\nadded which ensures starting up a default configured node does not\nresult in any features registering as used.\nThere are a couple features which currently do not work well with the\ntracking, as they are checked in a manner that makes them look always\nused. Those features will be fixed in followups, and in this PR they are\nomitted from the feature usage output.", "createdAt": "2020-07-09T20:55:17Z", "url": "https://github.com/elastic/elasticsearch/pull/59342", "merged": true, "mergeCommit": {"oid": "5d6a2dd35beff59db27f90aee77792dc5af7029f"}, "closed": true, "closedAt": "2020-07-14T19:25:37Z", "author": {"login": "rjernst"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczVWGfAH2gAyNDQ3MDg5MTQ2OjgxMTI4NmQ1YTdjNWI0ZTM1MjY0MTMzYTI3ZTBmYmJmOGYzNWI0MmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc05Lz5AH2gAyNDQ3MDg5MTQ2OmZiNjk5OGQzMmUxZmY2YzAwNTAzNmFiNGExMmU5NzBkYjJjZWY4Yzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "811286d5a7c5b4e35264133a27e0fbbf8f35b42c", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/811286d5a7c5b4e35264133a27e0fbbf8f35b42c", "committedDate": "2020-07-09T20:48:22Z", "message": "Add license feature usage api\n\nThis commit adds a new api to track when gold+ features are used within\nx-pack. The tracking is done internally whenever a feature is checked\nagainst the current license. The output of the api is a list of each\nused feature, which includes the name, license level, and last time it\nwas used. In addition to a unit test for the tracking, a rest test is\nadded which ensures starting up a default configured node does not\nresult in any features registering as used.\n\nThere are a couple features which currently do not work well with the\ntracking, as they are checked in a manner that makes them look always\nused. Those features will be fixed in followups, and in this PR they are\nomitted from the feature usage output."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c389b18ffd06f08e8de300d62ed82ebfad02ceb", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/9c389b18ffd06f08e8de300d62ed82ebfad02ceb", "committedDate": "2020-07-09T21:04:01Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc144235611493d536ce60db1e130087725b69dd", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/bc144235611493d536ce60db1e130087725b69dd", "committedDate": "2020-07-09T21:26:04Z", "message": "fix compile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f36787e78340d49cafc0c0e4cff439b2695044a", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/2f36787e78340d49cafc0c0e4cff439b2695044a", "committedDate": "2020-07-09T21:55:53Z", "message": "fix local state insanity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d54ff1adc8bd2567ccfc145397fb73ab0f63bf27", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/d54ff1adc8bd2567ccfc145397fb73ab0f63bf27", "committedDate": "2020-07-09T22:40:44Z", "message": "testing conventions..."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "057b83b99d8993b7308f5aeed99a594c2a0e3ff4", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/057b83b99d8993b7308f5aeed99a594c2a0e3ff4", "committedDate": "2020-07-09T23:12:20Z", "message": "unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bcbfb2fc3f5e52563bccf3865d04b643cf28f7d", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/5bcbfb2fc3f5e52563bccf3865d04b643cf28f7d", "committedDate": "2020-07-09T23:31:06Z", "message": "iter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTI2MTMw", "url": "https://github.com/elastic/elasticsearch/pull/59342#pullrequestreview-446126130", "createdAt": "2020-07-10T05:14:47Z", "commit": {"oid": "5bcbfb2fc3f5e52563bccf3865d04b643cf28f7d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNToxNDo0N1rOGvqGKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNToxNDo0N1rOGvqGKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyNTk2MQ==", "bodyText": "The existing expression of licenseState.isSecurityEnabled() && licenseState.checkFeature(Feature.SECURITY_DLS_FLS) has a potential racing issue between the two license checks. I noticed we have been somewhat inconsistent in handling this. In some places, e.g. ResizeRequestInterceptor, we use licenseState.copyCurrentLicenseState() to ensure checks are always done against the same license. In other places including this one, no special handling is done. The new changes also retain this behaviour. My question is: what is our recommend approach for this subtle issue? I am OK with either approach as long as it is consistently applied.\nI am also curious about the benefit of the new MemoizedSupplier. Why do we need to check the license deeper in the loop? Isn't it sufficient and more efficient to check in the outermost if statement?", "url": "https://github.com/elastic/elasticsearch/pull/59342#discussion_r452625961", "createdAt": "2020-07-10T05:14:47Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/interceptor/BulkShardRequestInterceptor.java", "diffHunk": "@@ -41,7 +42,8 @@ public BulkShardRequestInterceptor(ThreadPool threadPool, XPackLicenseState lice\n     @Override\n     public void intercept(RequestInfo requestInfo, AuthorizationEngine authzEngine, AuthorizationInfo authorizationInfo,\n                           ActionListener<Void> listener) {\n-        boolean shouldIntercept = licenseState.isSecurityEnabled() && licenseState.checkFeature(Feature.SECURITY_DLS_FLS);\n+        boolean shouldIntercept = licenseState.isSecurityEnabled();\n+        var licenseChecker = new MemoizedSupplier<>(() -> licenseState.checkFeature(Feature.SECURITY_DLS_FLS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bcbfb2fc3f5e52563bccf3865d04b643cf28f7d"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTI3OTMx", "url": "https://github.com/elastic/elasticsearch/pull/59342#pullrequestreview-446127931", "createdAt": "2020-07-10T05:21:21Z", "commit": {"oid": "5bcbfb2fc3f5e52563bccf3865d04b643cf28f7d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNToyMToyMVrOGvqMbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNToyMToyMVrOGvqMbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyNzU2Ng==", "bodyText": "Ah I see, the license checking is moved here because we need to accurately tracking the usage, i.e. only check it when it is absolutely necessary. In this case, I wonder whether we should check it after the instanceof, i.e. bulkItemRequest.request() instanceof UpdateRequest && licenseChecker.get().", "url": "https://github.com/elastic/elasticsearch/pull/59342#discussion_r452627566", "createdAt": "2020-07-10T05:21:21Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/interceptor/BulkShardRequestInterceptor.java", "diffHunk": "@@ -54,7 +56,7 @@ public void intercept(RequestInfo requestInfo, AuthorizationEngine authzEngine,\n                     boolean fls = indexAccessControl.getFieldPermissions().hasFieldLevelSecurity();\n                     boolean dls = indexAccessControl.getDocumentPermissions().hasDocumentLevelPermissions();\n                     if (fls || dls) {\n-                        if (bulkItemRequest.request() instanceof UpdateRequest) {\n+                        if (licenseChecker.get() && bulkItemRequest.request() instanceof UpdateRequest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bcbfb2fc3f5e52563bccf3865d04b643cf28f7d"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTI5MTcz", "url": "https://github.com/elastic/elasticsearch/pull/59342#pullrequestreview-446129173", "createdAt": "2020-07-10T05:25:49Z", "commit": {"oid": "5bcbfb2fc3f5e52563bccf3865d04b643cf28f7d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNToyNTo0OVrOGvqQpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNToyNTo0OVrOGvqQpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyODY0Nw==", "bodyText": "IIUC, the feature usage is reported for the local node only? So in cloud with coordinating node setup, how can user get the feature usages for nodes other than the coordinating ones?", "url": "https://github.com/elastic/elasticsearch/pull/59342#discussion_r452628647", "createdAt": "2020-07-10T05:25:49Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/TransportGetFeatureUsageAction.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.license;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.ActionType;\n+import org.elasticsearch.action.support.ActionFilters;\n+import org.elasticsearch.action.support.HandledTransportAction;\n+import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.tasks.Task;\n+import org.elasticsearch.transport.TransportService;\n+\n+import java.time.Instant;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+\n+public class TransportGetFeatureUsageAction extends HandledTransportAction<GetFeatureUsageRequest, GetFeatureUsageResponse> {\n+\n+    public static final ActionType<GetFeatureUsageResponse> TYPE =\n+        new ActionType<>(\"cluster:admin/xpack/license/feature_usage\", GetFeatureUsageResponse::new);\n+\n+    private final XPackLicenseState licenseState;\n+\n+    @Inject\n+    public TransportGetFeatureUsageAction(TransportService transportService, ActionFilters actionFilters,\n+                                          XPackLicenseState licenseState) {\n+        super(TYPE.name(), transportService, actionFilters, GetFeatureUsageRequest::new);\n+        this.licenseState = licenseState;\n+    }\n+\n+\n+    @Override\n+    protected void doExecute(Task task, GetFeatureUsageRequest request, ActionListener<GetFeatureUsageResponse> listener) {\n+        Map<XPackLicenseState.Feature, Long> featureUsage = licenseState.getLastUsed();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bcbfb2fc3f5e52563bccf3865d04b643cf28f7d"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c23c2e78bbdb7c8a74d3f0536cfb2529ebaf0b54", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/c23c2e78bbdb7c8a74d3f0536cfb2529ebaf0b54", "committedDate": "2020-07-10T19:09:26Z", "message": "tests iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2c04bf8012bef1eac4cf97c3a703f527abae2eb", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/e2c04bf8012bef1eac4cf97c3a703f527abae2eb", "committedDate": "2020-07-13T19:30:45Z", "message": "Merge branch 'master' into refactor_license13"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70042a7219d03b3efb76b7a001c20861d5a7e7cf", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/70042a7219d03b3efb76b7a001c20861d5a7e7cf", "committedDate": "2020-07-13T20:35:50Z", "message": "another test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d95a4ea679c38db714143c23915c95faddc82f30", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/d95a4ea679c38db714143c23915c95faddc82f30", "committedDate": "2020-07-13T21:37:16Z", "message": "fix a bunch of missed checkFeature -> isAllowed for telmetry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NzMyNDYz", "url": "https://github.com/elastic/elasticsearch/pull/59342#pullrequestreview-447732463", "createdAt": "2020-07-14T02:01:04Z", "commit": {"oid": "d95a4ea679c38db714143c23915c95faddc82f30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjowMTowNVrOGxBLew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjowMTowNVrOGxBLew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1MjczMQ==", "bodyText": "This worries me a bit since a copy can now mutate the original object. It is not an issue for the time being since no such usage exists. But might be a confusing behaviour in future?", "url": "https://github.com/elastic/elasticsearch/pull/59342#discussion_r454052731", "createdAt": "2020-07-14T02:01:05Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -564,7 +607,7 @@ public static boolean isAllowedByOperationMode(\n      */\n     public XPackLicenseState copyCurrentLicenseState() {\n         return executeAgainstStatus(status ->\n-            new XPackLicenseState(listeners, isSecurityEnabled, isSecurityExplicitlyEnabled, status));\n+            new XPackLicenseState(listeners, isSecurityEnabled, isSecurityExplicitlyEnabled, status, lastUsed, epochMillisProvider));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95a4ea679c38db714143c23915c95faddc82f30"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NzM2MTU2", "url": "https://github.com/elastic/elasticsearch/pull/59342#pullrequestreview-447736156", "createdAt": "2020-07-14T02:13:10Z", "commit": {"oid": "d95a4ea679c38db714143c23915c95faddc82f30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjoxMzoxMFrOGxBYhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjoxMzoxMFrOGxBYhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1NjA2OA==", "bodyText": "We are using both frozenLicenseState here and the original licenseState with MemoizedSupplier below. Given the current change, there is no benefit of having frozenLicenseState anymore. It can probably just be removed.", "url": "https://github.com/elastic/elasticsearch/pull/59342#discussion_r454056068", "createdAt": "2020-07-14T02:13:10Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/interceptor/IndicesAliasesRequestInterceptor.java", "diffHunk": "@@ -52,23 +53,22 @@ public void intercept(RequestInfo requestInfo, AuthorizationEngine authorization\n             final XPackLicenseState frozenLicenseState = licenseState.copyCurrentLicenseState();\n             final AuditTrail auditTrail = auditTrailService.get();\n             if (frozenLicenseState.isSecurityEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95a4ea679c38db714143c23915c95faddc82f30"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NzM2MzI3", "url": "https://github.com/elastic/elasticsearch/pull/59342#pullrequestreview-447736327", "createdAt": "2020-07-14T02:13:42Z", "commit": {"oid": "d95a4ea679c38db714143c23915c95faddc82f30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjoxMzo0M1rOGxBZDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjoxMzo0M1rOGxBZDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1NjIwNA==", "bodyText": "Same here for using frozenLicenseState and licenseState together.", "url": "https://github.com/elastic/elasticsearch/pull/59342#discussion_r454056204", "createdAt": "2020-07-14T02:13:43Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/interceptor/ResizeRequestInterceptor.java", "diffHunk": "@@ -48,19 +49,18 @@ public void intercept(RequestInfo requestInfo, AuthorizationEngine authorization\n             final XPackLicenseState frozenLicenseState = licenseState.copyCurrentLicenseState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95a4ea679c38db714143c23915c95faddc82f30"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NzQwNzAz", "url": "https://github.com/elastic/elasticsearch/pull/59342#pullrequestreview-447740703", "createdAt": "2020-07-14T02:27:53Z", "commit": {"oid": "d95a4ea679c38db714143c23915c95faddc82f30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjoyNzo1M1rOGxBpEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjoyNzo1M1rOGxBpEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA2MDMwNA==", "bodyText": "This method does not seem to be used anywhere? But the inner class VotingOnlyNodeFeatureSet#UsageInfoAction also has a availabe() method which internally uses licenseState.checkFeature. But all other XPackInfoFeatureTransportAction uses licenseState.isAllowed. Is this inconsistency intended?", "url": "https://github.com/elastic/elasticsearch/pull/59342#discussion_r454060304", "createdAt": "2020-07-14T02:27:53Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/voting-only-node/src/main/java/org/elasticsearch/cluster/coordination/VotingOnlyNodeFeatureSet.java", "diffHunk": "@@ -43,7 +43,7 @@ public String name() {\n \n     @Override\n     public boolean available() {\n-        return licenseState != null && licenseState.isAllowed(Feature.VOTING_ONLY);\n+        return licenseState != null && licenseState.checkFeature(Feature.VOTING_ONLY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95a4ea679c38db714143c23915c95faddc82f30"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NzQxMzMx", "url": "https://github.com/elastic/elasticsearch/pull/59342#pullrequestreview-447741331", "createdAt": "2020-07-14T02:29:56Z", "commit": {"oid": "d95a4ea679c38db714143c23915c95faddc82f30"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "228d882756b3234795b651429dd97608433a09cd", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/228d882756b3234795b651429dd97608433a09cd", "committedDate": "2020-07-14T17:07:08Z", "message": "address more feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb6998d32e1ff6c005036ab4a12e970db2cef8c7", "author": {"user": {"login": "rjernst", "name": "Ryan Ernst"}}, "url": "https://github.com/elastic/elasticsearch/commit/fb6998d32e1ff6c005036ab4a12e970db2cef8c7", "committedDate": "2020-07-14T17:07:38Z", "message": "Merge branch 'master' into refactor_license13"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2152, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}