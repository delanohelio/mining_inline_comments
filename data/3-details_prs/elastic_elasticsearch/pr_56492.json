{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NzI4NDQ2", "number": 56492, "title": "SQL: Fix serialization of JDBC prep statement date/time params", "bodyText": "The Date/Time related query params of a JDBC prepared statement\nserialized using java.util.Date. The rules for serializing\njava.util.Date objects though reside in\nXContentElasticsearchExtension which is not available in the\njdbc jar as this class is in server module. Therefore, a\ncustom extension of the XContentBuilderExtension iface has been\nadded to the jdbc module/jar.\nMoreover the sql's qa project had as dependency the sql-action\nmodule which depends on server so the XContentBuilderExtension\nwas available for the integ tests hiding the real problem.\nFixes: #56084", "createdAt": "2020-05-10T14:26:52Z", "url": "https://github.com/elastic/elasticsearch/pull/56492", "merged": true, "mergeCommit": {"oid": "f8d8e971bd2c85fa4aea44b5b3ba0cdcc950a4ed"}, "closed": true, "closedAt": "2020-05-12T09:46:38Z", "author": {"login": "matriv"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcf70WlgH2gAyNDE1NzI4NDQ2OjhhNGViNjBhNzU2OTRkNzZmYjkxZDM3NTdhZjliYzIyNTE5ZWZiMzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgglB4AFqTQwOTg0NzM4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a4eb60a75694d76fb91d3757af9bc22519efb39", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/8a4eb60a75694d76fb91d3757af9bc22519efb39", "committedDate": "2020-05-10T14:19:19Z", "message": "SQL: Fix serialization of JDBC prep statement date/time params\n\nThe Date/Time related query params of a JDBC prepared statement\nserialized using java.util.Date. The rules for serializing\n`java.util.Date` objects though reside in\n`XContentElasticsearchExtension` which is not available in the\njdbc jar as this class is in `server` module. Therefore, a\ncustom extension of the `XContentBuilderExtension` iface has been\nadded to the jdbc module/jar.\n\nMoreover the sql's `qa` project had as dependency the `sql-action`\nmodule which depends on `server` so the `XContentBuilderExtension`\nwas available for the integ tests hiding the real problem.\n\nFixes: #56084"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f818a593d9d230f0337b46d741b9d216a3f62019", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/f818a593d9d230f0337b46d741b9d216a3f62019", "committedDate": "2020-05-11T12:29:53Z", "message": "Fix issue with TIME data type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MTQ1ODM3", "url": "https://github.com/elastic/elasticsearch/pull/56492#pullrequestreview-409145837", "createdAt": "2020-05-11T12:57:43Z", "commit": {"oid": "f818a593d9d230f0337b46d741b9d216a3f62019"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1Nzo0M1rOGTbDmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1Nzo0M1rOGTbDmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxOTQxNg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/56492#discussion_r423019416", "createdAt": "2020-05-11T12:57:43Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/PreparedStatementTestCase.java", "diffHunk": "@@ -32,10 +47,23 @@ public void testSupportedTypes() throws Exception {\n         byte byteVal = randomByte();\n         short shortVal = randomShort();\n         BigDecimal bigDecimalVal = BigDecimal.valueOf(randomDouble());\n+        long millis = randomNonNegativeLong();\n+        Calendar calendarVal = Calendar.getInstance(randomTimeZone(), Locale.ROOT);\n+        Timestamp timestampVal = new Timestamp(millis);\n+        Timestamp timestampValWithCal = new Timestamp(convertFromCalendarToUTC(timestampVal.getTime(), calendarVal));\n+        Date dateVal = asDate(millis, UTC);\n+        Date dateValWithCal = asDate(convertFromCalendarToUTC(dateVal.getTime(), calendarVal), UTC);\n+        Time timeVal = asTime(millis, UTC);\n+        Time timeValWithCal = asTime(convertFromCalendarToUTC(timeVal.getTime(), calendarVal), UTC);\n+        java.util.Date utilDateVal = new java.util.Date(millis);\n+        LocalDateTime localDateTimeVal = LocalDateTime.ofInstant(Instant.ofEpochMilli(millis), UTC);\n \n         try (Connection connection = esJdbc()) {\n-            try (PreparedStatement statement = connection.prepareStatement(\n-                    \"SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?, ?\")) {\n+            StringJoiner sql = new StringJoiner(\",\", \"SELECT \", \"\");\n+            for (int i = 0; i < 19; i++) {\n+                sql.add(\"?\");\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f818a593d9d230f0337b46d741b9d216a3f62019"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MTQ1OTk0", "url": "https://github.com/elastic/elasticsearch/pull/56492#pullrequestreview-409145994", "createdAt": "2020-05-11T12:57:56Z", "commit": {"oid": "f818a593d9d230f0337b46d741b9d216a3f62019"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1Nzo1NlrOGTbEDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1Nzo1NlrOGTbEDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxOTUzMw==", "bodyText": "Did you want to eventually remove this?", "url": "https://github.com/elastic/elasticsearch/pull/56492#discussion_r423019533", "createdAt": "2020-05-11T12:57:56Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/qa/build.gradle", "diffHunk": "@@ -9,7 +9,7 @@ dependencies {\n   // JDBC testing dependencies\n   compile project(path: xpackModule('sql:jdbc'))\n \n-  compile project(path: xpackModule('sql:sql-action'))\n+//  compile project(path: xpackModule('sql:sql-action'))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f818a593d9d230f0337b46d741b9d216a3f62019"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MTQ2MTc4", "url": "https://github.com/elastic/elasticsearch/pull/56492#pullrequestreview-409146178", "createdAt": "2020-05-11T12:58:10Z", "commit": {"oid": "f818a593d9d230f0337b46d741b9d216a3f62019"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1ODoxMFrOGTbEkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1ODoxMFrOGTbEkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxOTY2Ng==", "bodyText": "Just a more concise alternative suggestion: return randomMillis - 2 + i (tho not perfectly equivalent).", "url": "https://github.com/elastic/elasticsearch/pull/56492#discussion_r423019666", "createdAt": "2020-05-11T12:58:10Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/PreparedStatementTestCase.java", "diffHunk": "@@ -207,4 +301,28 @@ public void testSingleParameterMultipleTypes() throws Exception {\n             return result;\n         }\n     }\n+\n+    private static long convertFromCalendarToUTC(long value, Calendar cal) {\n+        if (cal == null) {\n+            return value;\n+        }\n+        Calendar c = (Calendar) cal.clone();\n+        c.setTimeInMillis(value);\n+\n+        ZonedDateTime convertedDateTime = ZonedDateTime\n+            .ofInstant(c.toInstant(), c.getTimeZone().toZoneId())\n+            .withZoneSameLocal(ZoneOffset.UTC);\n+\n+        return convertedDateTime.toInstant().toEpochMilli();\n+    }\n+\n+    private static long testMillis(long randomMillis, int i) {\n+        long millis = randomMillis;\n+        if (i == 1) {\n+            millis -= 1;\n+        } else if (i == 3) {\n+            millis += 1;\n+        }\n+        return millis;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f818a593d9d230f0337b46d741b9d216a3f62019"}, "originalPosition": 225}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MTQ2NzU1", "url": "https://github.com/elastic/elasticsearch/pull/56492#pullrequestreview-409146755", "createdAt": "2020-05-11T12:58:52Z", "commit": {"oid": "f818a593d9d230f0337b46d741b9d216a3f62019"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fdc2a4f5483c95c91e7a97cd8b92cd32eb2875d", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/2fdc2a4f5483c95c91e7a97cd8b92cd32eb2875d", "committedDate": "2020-05-11T13:16:41Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDM5OTA5", "url": "https://github.com/elastic/elasticsearch/pull/56492#pullrequestreview-409439909", "createdAt": "2020-05-11T18:50:39Z", "commit": {"oid": "2fdc2a4f5483c95c91e7a97cd8b92cd32eb2875d"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1MDozOVrOGTo-5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1NzoyNlrOGTpOjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI0NzU4OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/56492#discussion_r423247588", "createdAt": "2020-05-11T18:50:39Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcPreparedStatement.java", "diffHunk": "@@ -381,12 +384,9 @@ private void setObject(int parameterIndex, Object x, EsType dataType, String typ\n                     dateToSet = ((Calendar) x).getTime();\n                 } else if (x instanceof Date) {\n                     dateToSet = new java.util.Date(((Date) x).getTime());\n-                } else if (x instanceof LocalDateTime){\n+                } else if (x instanceof LocalDateTime) {\n                     LocalDateTime ldt = (LocalDateTime) x;\n-                    Calendar cal = getDefaultCalendar();\n-                    cal.set(ldt.getYear(), ldt.getMonthValue() - 1, ldt.getDayOfMonth(), ldt.getHour(), ldt.getMinute(), ldt.getSecond());\n-\n-                    dateToSet = cal.getTime();\n+                    dateToSet = new java.util.Date(ldt.toInstant(UTC).toEpochMilli());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fdc2a4f5483c95c91e7a97cd8b92cd32eb2875d"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI0ODEyNQ==", "bodyText": "The javadoc is out of place.", "url": "https://github.com/elastic/elasticsearch/pull/56492#discussion_r423248125", "createdAt": "2020-05-11T18:51:36Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/XContentSqlExtension.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.sql.jdbc;\n+\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentBuilderExtension;\n+\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+/**\n+ * SPI extensions for Elasticsearch-specific classes (like the Lucene or Joda", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fdc2a4f5483c95c91e7a97cd8b92cd32eb2875d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI0OTUzNQ==", "bodyText": "Can you please break this method down into 3 different tests? This way if one of them breaks, it will be easier to identify the test that did it.", "url": "https://github.com/elastic/elasticsearch/pull/56492#discussion_r423249535", "createdAt": "2020-05-11T18:54:09Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/PreparedStatementTestCase.java", "diffHunk": "@@ -66,13 +103,70 @@ public void testSupportedTypes() throws Exception {\n                     assertEquals(byteVal, results.getByte(8));\n                     assertEquals(shortVal, results.getShort(9));\n                     assertEquals(bigDecimalVal, results.getBigDecimal(10));\n+                    assertEquals(timestampVal, results.getTimestamp(11));\n+                    assertEquals(timestampValWithCal, results.getTimestamp(12));\n+                    assertEquals(dateVal, results.getDate(13));\n+                    assertEquals(dateValWithCal, results.getDate(14));\n+                    assertEquals(timeVal, results.getTime(15));\n+                    assertEquals(timeValWithCal, results.getTime(16));\n+                    assertEquals(new Timestamp(calendarVal.getTimeInMillis()), results.getObject(17));\n+                    assertEquals(timestampVal, results.getObject(18));\n+                    assertEquals(timestampVal, results.getObject(19));\n+                    assertFalse(results.next());\n+                }\n+            }\n+        }\n+    }\n+\n+    public void testDateTime() throws IOException, SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fdc2a4f5483c95c91e7a97cd8b92cd32eb2875d"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MTI2MQ==", "bodyText": "The exception change for this method and the rest are noise likely introduced by IDE changes.\nI'm not a fan since it implies the author does not know the type of exception used - it's more valuable to do that in a separate step instead of a regular basis.", "url": "https://github.com/elastic/elasticsearch/pull/56492#discussion_r423251261", "createdAt": "2020-05-11T18:56:50Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/PreparedStatementTestCase.java", "diffHunk": "@@ -66,13 +103,70 @@ public void testSupportedTypes() throws Exception {\n                     assertEquals(byteVal, results.getByte(8));\n                     assertEquals(shortVal, results.getShort(9));\n                     assertEquals(bigDecimalVal, results.getBigDecimal(10));\n+                    assertEquals(timestampVal, results.getTimestamp(11));\n+                    assertEquals(timestampValWithCal, results.getTimestamp(12));\n+                    assertEquals(dateVal, results.getDate(13));\n+                    assertEquals(dateValWithCal, results.getDate(14));\n+                    assertEquals(timeVal, results.getTime(15));\n+                    assertEquals(timeValWithCal, results.getTime(16));\n+                    assertEquals(new Timestamp(calendarVal.getTimeInMillis()), results.getObject(17));\n+                    assertEquals(timestampVal, results.getObject(18));\n+                    assertEquals(timestampVal, results.getObject(19));\n+                    assertFalse(results.next());\n+                }\n+            }\n+        }\n+    }\n+\n+    public void testDateTime() throws IOException, SQLException {\n+        String mapping = \"\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"birth_date\\\":{\\\"type\\\":\\\"date\\\"}}\";\n+        createIndex(\"emps\", Settings.EMPTY, mapping);\n+        long randomMillis = randomNonNegativeLong();\n+        for (int i = 1; i <= 3; i++) {\n+            int id = 1000 + i;\n+            long testMillis = testMillis(randomMillis, i);\n+            index(\"emps\", \"\" + i, builder -> {\n+                builder.field(\"id\", id);\n+                builder.field(\"birth_date\", testMillis);\n+            });\n+        }\n+\n+        try (Connection connection = esJdbc()) {\n+            try (PreparedStatement statement = connection.prepareStatement(\"SELECT id, birth_date FROM emps WHERE birth_date = ?\")) {\n+                Object dateTimeParam = randomFrom(new Timestamp(randomMillis), new Date(randomMillis));\n+                statement.setObject(1, dateTimeParam);\n+                try (ResultSet results = statement.executeQuery()) {\n+                    assertTrue(results.next());\n+                    assertEquals(1002, results.getInt(1));\n+                    assertEquals(new Timestamp(randomMillis), results.getTimestamp(2));\n+                    assertFalse(results.next());\n+                }\n+            }\n+            try (PreparedStatement statement = connection.prepareStatement(\"SELECT id, birth_date FROM emps WHERE birth_date::date = ?\")) {\n+                statement.setDate(1, new Date(asDate(randomMillis, UTC).getTime()));\n+                try (ResultSet results = statement.executeQuery()) {\n+                    for (int i = 1; i <= 3; i++) {\n+                        assertTrue(results.next());\n+                        assertEquals(1000 + i, results.getInt(1));\n+                        assertEquals(new Timestamp(testMillis(randomMillis, i)), results.getTimestamp(2));\n+                    }\n+                    assertFalse(results.next());\n+                }\n+            }\n+            try (PreparedStatement statement = connection.prepareStatement(\"SELECT id, birth_date FROM emps WHERE birth_date::time = ?\")) {\n+                Time time = JdbcTestUtils.asTime(randomMillis, UTC);\n+                statement.setObject(1, time);\n+                try (ResultSet results = statement.executeQuery()) {\n+                    assertTrue(results.next());\n+                    assertEquals(1002, results.getInt(1));\n+                    assertEquals(new Timestamp(randomMillis), results.getTimestamp(2));\n                     assertFalse(results.next());\n                 }\n             }\n         }\n     }\n \n-    public void testOutOfRangeBigDecimal() throws Exception {\n+    public void testOutOfRangeBigDecimal() throws SQLException {\n         try (Connection connection = esJdbc()) {\n             try (PreparedStatement statement = connection.prepareStatement(\"SELECT ?\")) {\n                 BigDecimal tooLarge = BigDecimal.valueOf(Double.MAX_VALUE).add(BigDecimal.ONE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fdc2a4f5483c95c91e7a97cd8b92cd32eb2875d"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MTU5OA==", "bodyText": "Is this something used somewhere else that could be moved into a DateUtils/TestUtils of sorts?", "url": "https://github.com/elastic/elasticsearch/pull/56492#discussion_r423251598", "createdAt": "2020-05-11T18:57:26Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/PreparedStatementTestCase.java", "diffHunk": "@@ -207,4 +301,22 @@ public void testSingleParameterMultipleTypes() throws Exception {\n             return result;\n         }\n     }\n+\n+    private static long convertFromCalendarToUTC(long value, Calendar cal) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fdc2a4f5483c95c91e7a97cd8b92cd32eb2875d"}, "originalPosition": 204}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00d80c3100f8725d8facac76e834bfd09509e364", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/00d80c3100f8725d8facac76e834bfd09509e364", "committedDate": "2020-05-12T07:45:11Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e66e487dbf6e0929b2048dd42c6817b85a46c7a", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/1e66e487dbf6e0929b2048dd42c6817b85a46c7a", "committedDate": "2020-05-12T08:04:50Z", "message": "fix imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "448c9b66c9709efacf0e2532cce83e077b57c8e7", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/448c9b66c9709efacf0e2532cce83e077b57c8e7", "committedDate": "2020-05-12T08:44:15Z", "message": "Merge remote-tracking branch 'upstream/master' into fix-56084"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5ODQ3Mzg3", "url": "https://github.com/elastic/elasticsearch/pull/56492#pullrequestreview-409847387", "createdAt": "2020-05-12T09:09:04Z", "commit": {"oid": "448c9b66c9709efacf0e2532cce83e077b57c8e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 121, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}