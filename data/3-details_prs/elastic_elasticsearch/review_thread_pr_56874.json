{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MTUzNzc1", "number": 56874, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxODozNzowMVrOD9MEVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxODo0Mzo1OFrOD9MGbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDg3NDQ1OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxODozNzowMVrOGWiv6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxODozNzowMVrOGWiv6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5MTE3OA==", "bodyText": "This was really evil for large snapshots (even more so in the context of concurrent snapshots). We would iterate all the shards even if no nodes were removed or the snapshot finished already.", "url": "https://github.com/elastic/elasticsearch/pull/56874#discussion_r426291178", "createdAt": "2020-05-17T18:37:01Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -678,11 +633,26 @@ private static boolean waitingShardsStartedOrUnassigned(SnapshotsInProgress snap\n     }\n \n     private static boolean removedNodesCleanupNeeded(SnapshotsInProgress snapshotsInProgress, List<DiscoveryNode> removedNodes) {\n-        // If at least one shard was running on a removed node - we need to fail it\n-        return removedNodes.isEmpty() == false && snapshotsInProgress.entries().stream().flatMap(snapshot ->\n-                StreamSupport.stream(((Iterable<ShardSnapshotStatus>) () -> snapshot.shards().valuesIt()).spliterator(), false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4dd86c5bb28b2955fe80ef0e3d62d76651c2256"}, "originalPosition": 247}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDg3NTcxOnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxODozODoyNFrOGWiwew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxODozODoyNFrOGWiwew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5MTMyMw==", "bodyText": "This is unnecessary now, we will not pass a snapshot with UNKNOWN_REPO_GEN to this method any longer, we just remove it from the cluster state in processWaitingShardsAndRemovedNodes and are done with it.", "url": "https://github.com/elastic/elasticsearch/pull/56874#discussion_r426291323", "createdAt": "2020-05-17T18:38:24Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -697,12 +667,6 @@ private void endSnapshot(SnapshotsInProgress.Entry entry, Metadata metadata) {\n             return;\n         }\n         final Snapshot snapshot = entry.snapshot();\n-        if (entry.repositoryStateId() == RepositoryData.UNKNOWN_REPO_GEN) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4dd86c5bb28b2955fe80ef0e3d62d76651c2256"}, "originalPosition": 277}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDg3NzEzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxODo0MDoyM1rOGWixMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxODo0MDoyM1rOGWixMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5MTUwNw==", "bodyText": "This was a bug introduced in #56669 , we could NPE here if a data node were to resend a state update for an already finished snapshot (master fail-over or node disconnect can easily lead to this) causing an NPE here needlessly.", "url": "https://github.com/elastic/elasticsearch/pull/56874#discussion_r426291507", "createdAt": "2020-05-17T18:40:23Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -1424,7 +1388,8 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n                             if (endingSnapshots.contains(request.snapshot()) == false) {\n                                 final SnapshotsInProgress snapshotsInProgress = newState.custom(SnapshotsInProgress.TYPE);\n                                 final SnapshotsInProgress.Entry updatedEntry = snapshotsInProgress.snapshot(request.snapshot());\n-                                if (updatedEntry.state().completed()) {\n+                                // If the entry is still in the cluster state and is completed, try finalizing the snapshot in the repo\n+                                if (updatedEntry != null && updatedEntry.state().completed()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4dd86c5bb28b2955fe80ef0e3d62d76651c2256"}, "originalPosition": 292}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDg3OTgzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxODo0Mzo1OFrOGWiyhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxODo0Mzo1OFrOGWiyhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5MTg0NQ==", "bodyText": "Combining both node removal and shard starting into one method saves us iterating all the shards twice for the relevant updates to each snapshot.", "url": "https://github.com/elastic/elasticsearch/pull/56874#discussion_r426291845", "createdAt": "2020-05-17T18:43:58Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -616,8 +560,8 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n         });\n     }\n \n-    private static ImmutableOpenMap<ShardId, ShardSnapshotStatus> processWaitingShards(\n-            ImmutableOpenMap<ShardId, ShardSnapshotStatus> snapshotShards, RoutingTable routingTable) {\n+    private static ImmutableOpenMap<ShardId, ShardSnapshotStatus> processWaitingShardsAndRemovedNodes(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4dd86c5bb28b2955fe80ef0e3d62d76651c2256"}, "originalPosition": 218}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 326, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}