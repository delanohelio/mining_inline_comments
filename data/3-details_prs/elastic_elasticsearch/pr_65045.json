{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNDg2MTI0", "number": 65045, "title": "Optimize shard sorting logic for allocation.", "bodyText": "Secondary comparator orders:\n\nIndex priority.\nIndex creation date.\nIndex name.\n\nSo if secondary comparator returns 0, then index name must be equal, that means indexCmp must be 0 and first comparator would be returned in L775.\nSo we could remove the redundant condition checks.", "createdAt": "2020-11-16T08:00:02Z", "url": "https://github.com/elastic/elasticsearch/pull/65045", "merged": true, "mergeCommit": {"oid": "62e1d113b7153180c4a68af330629d388bef4b7a"}, "closed": true, "closedAt": "2020-11-16T10:25:01Z", "author": {"login": "howardhuanghua"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddAFHzAH2gAyNTIxNDg2MTI0OmJlNTNhMWI2ZGM1Y2VkNmNjNmJhNzY3NzEyMTc0NzBkOTg2YTM0OTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddAznYgFqTUzMTA5Mjc0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "be53a1b6dc5ced6cc6ba76771217470d986a3498", "author": {"user": {"login": "howardhuanghua", "name": "Howard"}}, "url": "https://github.com/elastic/elasticsearch/commit/be53a1b6dc5ced6cc6ba76771217470d986a3498", "committedDate": "2020-11-16T07:46:38Z", "message": "Optimize shard sort logic for allocation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMDUwNzY5", "url": "https://github.com/elastic/elasticsearch/pull/65045#pullrequestreview-531050769", "createdAt": "2020-11-16T08:15:32Z", "commit": {"oid": "be53a1b6dc5ced6cc6ba76771217470d986a3498"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODoxNTozMlrOHzsAIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODoxNTozMlrOHzsAIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk2MDM1NQ==", "bodyText": "What you're saying is that this line always returns something nonzero. I think you're right, but would you add an assertion to that effect?", "url": "https://github.com/elastic/elasticsearch/pull/65045#discussion_r523960355", "createdAt": "2020-11-16T08:15:32Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java", "diffHunk": "@@ -770,16 +770,14 @@ private void allocateUnassigned() {\n                 if (o1.primary() ^ o2.primary()) {\n                     return o1.primary() ? -1 : 1;\n                 }\n-                final int indexCmp;\n-                if ((indexCmp = o1.getIndexName().compareTo(o2.getIndexName())) == 0) {\n+                if (o1.getIndexName().compareTo(o2.getIndexName()) == 0) {\n                     return o1.getId() - o2.getId();\n                 }\n                 // this comparator is more expensive than all the others up there\n                 // that's why it's added last even though it could be easier to read\n                 // if we'd apply it earlier. this comparator will only differentiate across\n                 // indices all shards of the same index is treated equally.\n-                final int secondary = secondaryComparator.compare(o1, o2);\n-                return secondary == 0 ? indexCmp : secondary;\n+                return secondaryComparator.compare(o1, o2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be53a1b6dc5ced6cc6ba76771217470d986a3498"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69c94a678ad0d77001a843fa9c460677ce84e03f", "author": {"user": {"login": "howardhuanghua", "name": "Howard"}}, "url": "https://github.com/elastic/elasticsearch/commit/69c94a678ad0d77001a843fa9c460677ce84e03f", "committedDate": "2020-11-16T08:28:28Z", "message": "add assertion to make sure index names are not equal."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMDkyNzQ4", "url": "https://github.com/elastic/elasticsearch/pull/65045#pullrequestreview-531092748", "createdAt": "2020-11-16T08:37:25Z", "commit": {"oid": "69c94a678ad0d77001a843fa9c460677ce84e03f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1091, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}