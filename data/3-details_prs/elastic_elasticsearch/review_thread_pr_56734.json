{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3Njk3MzI1", "number": 56734, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMTozNDo0NFrOD8SttQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMjoyMToxMVrOD8qzxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTQ3NzY1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/template/IndexTemplateRegistry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMTozNDo0NFrOGVJF1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMTozNDo0NFrOGVJF1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyMjIyOA==", "bodyText": "I bumped this up to info to better match the upgrading index template message. The adding of the template gets logged on the master node (at info level) but having this at info level helps to make the upgrade/add consistent (since this doesn't always happen on master).", "url": "https://github.com/elastic/elasticsearch/pull/56734#discussion_r424822228", "createdAt": "2020-05-14T01:34:44Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/template/IndexTemplateRegistry.java", "diffHunk": "@@ -154,7 +154,7 @@ private void addTemplatesIfMissing(ClusterState state) {\n             if (creationCheck.compareAndSet(false, true)) {\n                 IndexTemplateMetadata currentTemplate = state.metadata().getTemplates().get(templateName);\n                 if (Objects.isNull(currentTemplate)) {\n-                    logger.debug(\"adding index template [{}] for [{}], because it doesn't exist\", templateName, getOrigin());\n+                    logger.info(\"adding index template [{}] for [{}], because it doesn't exist\", templateName, getOrigin());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd67002dc0c125883dc96a440f10fbc3e9af8308"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTM4ODE3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/watcher/src/test/java/org/elasticsearch/xpack/watcher/history/HistoryStoreTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMjowNTozM1rOGVv24g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDozNjowN1rOGWHiDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ1NzM3OA==", "bodyText": "Why don't we about we extract this boolean to a parameter and always run both, rather than randomizing? This is a unit test, so it should be too expensive to do so, and that way the suite is guaranteed to catch breakage in a single test run.", "url": "https://github.com/elastic/elasticsearch/pull/56734#discussion_r425457378", "createdAt": "2020-05-14T22:05:33Z", "author": {"login": "gwbrown"}, "path": "x-pack/plugin/watcher/src/test/java/org/elasticsearch/xpack/watcher/history/HistoryStoreTests.java", "diffHunk": "@@ -105,14 +120,21 @@ public void testPut() throws Exception {\n     }\n \n     public void testIndexNameGeneration() {\n-        String indexTemplateVersion = Integer.toString(INDEX_TEMPLATE_VERSION);\n-        assertThat(getHistoryIndexNameForTime(Instant.ofEpochMilli((long) 0).atZone(ZoneOffset.UTC)),\n-            equalTo(\".watcher-history-\"+ indexTemplateVersion +\"-1970.01.01\"));\n-        assertThat(getHistoryIndexNameForTime(Instant.ofEpochMilli(100000000000L).atZone(ZoneOffset.UTC)),\n+        String indexTemplateVersion;\n+        if (randomBoolean()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd67002dc0c125883dc96a440f10fbc3e9af8308"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg0NTI2MQ==", "bodyText": "done", "url": "https://github.com/elastic/elasticsearch/pull/56734#discussion_r425845261", "createdAt": "2020-05-15T14:36:07Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/watcher/src/test/java/org/elasticsearch/xpack/watcher/history/HistoryStoreTests.java", "diffHunk": "@@ -105,14 +120,21 @@ public void testPut() throws Exception {\n     }\n \n     public void testIndexNameGeneration() {\n-        String indexTemplateVersion = Integer.toString(INDEX_TEMPLATE_VERSION);\n-        assertThat(getHistoryIndexNameForTime(Instant.ofEpochMilli((long) 0).atZone(ZoneOffset.UTC)),\n-            equalTo(\".watcher-history-\"+ indexTemplateVersion +\"-1970.01.01\"));\n-        assertThat(getHistoryIndexNameForTime(Instant.ofEpochMilli(100000000000L).atZone(ZoneOffset.UTC)),\n+        String indexTemplateVersion;\n+        if (randomBoolean()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ1NzM3OA=="}, "originalCommit": {"oid": "fd67002dc0c125883dc96a440f10fbc3e9af8308"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTQwMzU5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/history/HistoryStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMjoxMToyOVrOGVwAaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDozNjowNlrOGWHiBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ1OTgxOQ==", "bodyText": "Do you think it might be better to change this to a Supplier<ClusterState> so that it's clearer that we just need to access the current ClusterState? That would let us simplify the mocking a bit and make it clearer that we're not e.g. adding listeners here.", "url": "https://github.com/elastic/elasticsearch/pull/56734#discussion_r425459819", "createdAt": "2020-05-14T22:11:29Z", "author": {"login": "gwbrown"}, "path": "x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/history/HistoryStore.java", "diffHunk": "@@ -31,17 +32,19 @@\n     private static final Logger logger = LogManager.getLogger(HistoryStore.class);\n \n     private final BulkProcessor bulkProcessor;\n+    private final ClusterService clusterService;\n \n-    public HistoryStore(BulkProcessor bulkProcessor) {\n+    public HistoryStore(BulkProcessor bulkProcessor, ClusterService clusterService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd67002dc0c125883dc96a440f10fbc3e9af8308"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg0NTI1Mw==", "bodyText": "done", "url": "https://github.com/elastic/elasticsearch/pull/56734#discussion_r425845253", "createdAt": "2020-05-15T14:36:06Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/history/HistoryStore.java", "diffHunk": "@@ -31,17 +32,19 @@\n     private static final Logger logger = LogManager.getLogger(HistoryStore.class);\n \n     private final BulkProcessor bulkProcessor;\n+    private final ClusterService clusterService;\n \n-    public HistoryStore(BulkProcessor bulkProcessor) {\n+    public HistoryStore(BulkProcessor bulkProcessor, ClusterService clusterService) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ1OTgxOQ=="}, "originalCommit": {"oid": "fd67002dc0c125883dc96a440f10fbc3e9af8308"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTQwODY1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMjoxMzo0M1rOGVwDtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDozNjoxMFrOGWHiJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2MDY2MA==", "bodyText": "We should get the state once and pass the same state to each check, to ensure the behavior is consistent if the state changes out from under us.", "url": "https://github.com/elastic/elasticsearch/pull/56734#discussion_r425460660", "createdAt": "2020-05-14T22:13:43Z", "author": {"login": "gwbrown"}, "path": "x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java", "diffHunk": "@@ -623,14 +623,14 @@ static void validAutoCreateIndex(Settings settings, Logger logger) {\n         indices.add(\".watches\");\n         indices.add(\".triggered_watches\");\n         ZonedDateTime now = ZonedDateTime.now(ZoneOffset.UTC);\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusDays(1)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(1)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(2)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(3)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(4)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(5)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(6)));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now, clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusDays(1), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(1), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(2), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(3), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(4), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(5), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(6), clusterService.state()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd67002dc0c125883dc96a440f10fbc3e9af8308"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg0NTI4NQ==", "bodyText": "done", "url": "https://github.com/elastic/elasticsearch/pull/56734#discussion_r425845285", "createdAt": "2020-05-15T14:36:10Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java", "diffHunk": "@@ -623,14 +623,14 @@ static void validAutoCreateIndex(Settings settings, Logger logger) {\n         indices.add(\".watches\");\n         indices.add(\".triggered_watches\");\n         ZonedDateTime now = ZonedDateTime.now(ZoneOffset.UTC);\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusDays(1)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(1)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(2)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(3)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(4)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(5)));\n-        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(6)));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now, clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusDays(1), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(1), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(2), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(3), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(4), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(5), clusterService.state()));\n+        indices.add(HistoryStoreField.getHistoryIndexNameForTime(now.plusMonths(6), clusterService.state()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2MDY2MA=="}, "originalCommit": {"oid": "fd67002dc0c125883dc96a440f10fbc3e9af8308"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTQyNTM1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMjoyMToxMVrOGVwOhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDoyNDowMVrOGWHDtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2MzQzMQ==", "bodyText": "Just double checking: This doesn't result in different behavior, right? Just makes the failure occur (if it occurs) at a different time during node startup.\n(also, my assumption is that this moved because at the time the constructor is called we don't have a cluster state yet, correct?)", "url": "https://github.com/elastic/elasticsearch/pull/56734#discussion_r425463431", "createdAt": "2020-05-14T22:21:11Z", "author": {"login": "gwbrown"}, "path": "x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java", "diffHunk": "@@ -259,6 +255,10 @@ public Watcher(final Settings settings) {\n                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry,\n                                                IndexNameExpressionResolver expressionResolver,\n                                                Supplier<RepositoriesService> repositoriesServiceSupplier) {\n+        if (enabled && transportClient == false) {\n+            validAutoCreateIndex(settings, logger, clusterService);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd67002dc0c125883dc96a440f10fbc3e9af8308"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgzNzQ5NA==", "bodyText": "correct, same behavior and moved to allow access the the cluster state.", "url": "https://github.com/elastic/elasticsearch/pull/56734#discussion_r425837494", "createdAt": "2020-05-15T14:24:01Z", "author": {"login": "jakelandis"}, "path": "x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java", "diffHunk": "@@ -259,6 +255,10 @@ public Watcher(final Settings settings) {\n                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry,\n                                                IndexNameExpressionResolver expressionResolver,\n                                                Supplier<RepositoriesService> repositoriesServiceSupplier) {\n+        if (enabled && transportClient == false) {\n+            validAutoCreateIndex(settings, logger, clusterService);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2MzQzMQ=="}, "originalCommit": {"oid": "fd67002dc0c125883dc96a440f10fbc3e9af8308"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 404, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}