{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzI3MzM4", "number": 54214, "title": "[ML] add num_matches and preferred_to_categories to category defintion objects", "bodyText": "This adds two new fields to category definitions.\n\nnum_matches indicating how many documents have been seen by this category\npreferred_to_categories indicating which other categories this particular category supersedes when messages are categorized.\n\nThese fields are only guaranteed to be up to date after a _flush or _close\nnative change: elastic/ml-cpp#1062", "createdAt": "2020-03-25T17:33:40Z", "url": "https://github.com/elastic/elasticsearch/pull/54214", "merged": true, "mergeCommit": {"oid": "bbd6e943de2480623db531ae1ba2056aaf011b5d"}, "closed": true, "closedAt": "2020-04-02T11:49:10Z", "author": {"login": "benwtrent"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRLmveAH2gAyMzkzNzI3MzM4OmQzMzhhY2Q2YjVkODkzNzNjMDk0NmYzNWNjMzU5ZDJlY2NkMWI1YzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTn2e3gFqTM4NjIwMDIxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d338acd6b5d89373c0946f35cc359d2eccd1b5c2", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/d338acd6b5d89373c0946f35cc359d2eccd1b5c2", "committedDate": "2020-03-25T18:14:04Z", "message": "[ML] add new category object fields"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d9c09e414cc380ea6ad61b435e5ebe5971b9bf8", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/7d9c09e414cc380ea6ad61b435e5ebe5971b9bf8", "committedDate": "2020-03-25T17:25:15Z", "message": "[ML] add new category object fields"}, "afterCommit": {"oid": "d338acd6b5d89373c0946f35cc359d2eccd1b5c2", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/d338acd6b5d89373c0946f35cc359d2eccd1b5c2", "committedDate": "2020-03-25T18:14:04Z", "message": "[ML] add new category object fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cba91ed3322dc36472a1372f1c6972736acb4ff3", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/cba91ed3322dc36472a1372f1c6972736acb4ff3", "committedDate": "2020-03-31T18:46:50Z", "message": "adding documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/4581f01dc182b9c4efbd0822324dd85b6d98e177", "committedDate": "2020-03-31T18:46:56Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/ml-adding-new-category-fields"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzU4MDU3", "url": "https://github.com/elastic/elasticsearch/pull/54214#pullrequestreview-385358057", "createdAt": "2020-04-01T08:15:13Z", "commit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODoxNToxM1rOF-1kzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODoyMzoyMFrOF-12yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMzgwNA==", "bodyText": "I think you could simplify this to:\nLongStream.generate(ESTestCase::randomNonNegativeLong).limit(10).toArray()", "url": "https://github.com/elastic/elasticsearch/pull/54214#discussion_r401433804", "createdAt": "2020-04-01T08:15:13Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/job/results/CategoryDefinitionTests.java", "diffHunk": "@@ -28,6 +31,15 @@ public CategoryDefinition createTestInstance(String jobId) {\n         if (randomBoolean()) {\n             categoryDefinition.setGrokPattern(randomAlphaOfLength(50));\n         }\n+        if (randomBoolean()) {\n+            categoryDefinition.setNumMatches(randomNonNegativeLong());\n+        }\n+        if (randomBoolean()) {\n+            categoryDefinition.setPreferredToCategories(Stream.generate(ESTestCase::randomNonNegativeLong)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNDE3Mw==", "bodyText": "Just out of curiosity: Is this something new? I haven't seen this before.", "url": "https://github.com/elastic/elasticsearch/pull/54214#discussion_r401434173", "createdAt": "2020-04-01T08:15:51Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/job/results/CategoryDefinitionTests.java", "diffHunk": "@@ -5,18 +5,21 @@\n  */\n package org.elasticsearch.xpack.ml.job.results;\n \n+import org.elasticsearch.Version;\n import org.elasticsearch.common.io.stream.Writeable;\n import org.elasticsearch.common.xcontent.XContentParser;\n import org.elasticsearch.common.xcontent.json.JsonXContent;\n-import org.elasticsearch.test.AbstractSerializingTestCase;\n+import org.elasticsearch.test.ESTestCase;\n+import org.elasticsearch.xpack.core.ml.AbstractBWCSerializationTestCase;\n import org.elasticsearch.xpack.core.ml.job.results.CategoryDefinition;\n \n import java.io.IOException;\n import java.util.Arrays;\n+import java.util.stream.Stream;\n \n import static org.hamcrest.Matchers.containsString;\n \n-public class CategoryDefinitionTests extends AbstractSerializingTestCase<CategoryDefinition> {\n+public class CategoryDefinitionTests extends AbstractBWCSerializationTestCase<CategoryDefinition> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNDMzMQ==", "bodyText": "guaranteed", "url": "https://github.com/elastic/elasticsearch/pull/54214#discussion_r401434331", "createdAt": "2020-04-01T08:16:06Z", "author": {"login": "przemekwitek"}, "path": "docs/reference/ml/anomaly-detection/apis/get-category.asciidoc", "diffHunk": "@@ -93,6 +93,16 @@ category.\n (string) A space separated list of the common tokens that are matched in values\n of the category.\n \n+`num_matches`::\n+(long) The number of messages that have been matched by this category. This is\n+only guarunteed to have the latest accurate count after a job `_flush` or `_close`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNTQ5OA==", "bodyText": "guaranteed", "url": "https://github.com/elastic/elasticsearch/pull/54214#discussion_r401435498", "createdAt": "2020-04-01T08:18:06Z", "author": {"login": "przemekwitek"}, "path": "docs/reference/ml/anomaly-detection/apis/get-category.asciidoc", "diffHunk": "@@ -93,6 +93,16 @@ category.\n (string) A space separated list of the common tokens that are matched in values\n of the category.\n \n+`num_matches`::\n+(long) The number of messages that have been matched by this category. This is\n+only guarunteed to have the latest accurate count after a job `_flush` or `_close`\n+\n+`preferred_to_categories`::\n+(list) A list of `category_id` entries that this current category encompasses.\n+Any new message that is processed by the categorizer will match against this\n+category and not any of the categories in this list. This is only guarunteed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNjI0NQ==", "bodyText": "I would feel better if preferredToCategories.isEmpty() == false was in parentheses, just in case ;)", "url": "https://github.com/elastic/elasticsearch/pull/54214#discussion_r401436245", "createdAt": "2020-04-01T08:19:25Z", "author": {"login": "przemekwitek"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/results/CategoryDefinition.java", "diffHunk": "@@ -140,6 +163,10 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         if (grokPattern != null) {\n             builder.field(GROK_PATTERN.getPreferredName(), grokPattern);\n         }\n+        builder.field(NUM_MATCHES.getPreferredName(), numMatches);\n+        if (preferredToCategories != null && preferredToCategories.isEmpty() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNjc1NQ==", "bodyText": "Is it ok to pass array reference here? Should we make a copy maybe?", "url": "https://github.com/elastic/elasticsearch/pull/54214#discussion_r401436755", "createdAt": "2020-04-01T08:20:23Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/results/CategoryDefinition.java", "diffHunk": "@@ -152,6 +167,26 @@ public void setGrokPattern(String grokPattern) {\n         this.grokPattern = grokPattern;\n     }\n \n+    public long[] getPreferredToCategories() {\n+        return preferredToCategories;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzODI2Mw==", "bodyText": "You could use hasSize here for brevity.", "url": "https://github.com/elastic/elasticsearch/pull/54214#discussion_r401438263", "createdAt": "2020-04-01T08:23:02Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/CategorizationIT.java", "diffHunk": "@@ -205,6 +205,93 @@ public void testCategorizationPerformance() {\n                 (MachineLearning.CATEGORIZATION_TOKENIZATION_IN_JAVA ? \"Java\" : \"C++\") + \" took \" + duration + \"ms\");\n     }\n \n+    @AwaitsFix(bugUrl = \"https://github.com/elastic/ml-cpp/pull/1062\")\n+    public void testNumMatchesAndCategoryPreference() throws Exception {\n+        String index = \"hadoop_logs\";\n+        client().admin().indices().prepareCreate(index)\n+            .setMapping(\"time\", \"type=date,format=epoch_millis\",\n+                \"msg\", \"type=text\")\n+            .get();\n+\n+        nowMillis = System.currentTimeMillis();\n+\n+        BulkRequestBuilder bulkRequestBuilder = client().prepareBulk();\n+        IndexRequest indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(8).millis(),\n+            \"msg\", \"2015-10-18 18:01:51,963 INFO [main] org.mortbay.log: jetty-6.1.26\");\n+        bulkRequestBuilder.add(indexRequest);\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(7).millis(),\n+            \"msg\",\n+            \"2015-10-18 18:01:52,728 INFO [main] org.mortbay.log: Started HttpServer2$SelectChannelConnectorWithSafeStartup@0.0.0.0:62267\");\n+        bulkRequestBuilder.add(indexRequest);\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(6).millis(),\n+            \"msg\", \"2015-10-18 18:01:53,400 INFO [main] org.apache.hadoop.yarn.webapp.WebApps: Registered webapp guice modules\");\n+        bulkRequestBuilder.add(indexRequest);\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(5).millis(),\n+            \"msg\",\n+            \"2015-10-18 18:01:53,447 INFO [main] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: nodeBlacklistingEnabled:true\");\n+        bulkRequestBuilder.add(indexRequest);\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(4).millis(),\n+            \"msg\",\n+            \"2015-10-18 18:01:52,728 INFO [main] org.apache.hadoop.yarn.webapp.WebApps: Web app /mapreduce started at 62267\");\n+        bulkRequestBuilder.add(indexRequest);\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(2).millis(),\n+            \"msg\",\n+            \"2015-10-18 18:01:53,557 INFO [main] org.apache.hadoop.yarn.client.RMProxy: \" +\n+                \"Connecting to ResourceManager at msra-sa-41/10.190.173.170:8030\");\n+        bulkRequestBuilder.add(indexRequest);\n+\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(1).millis(),\n+            \"msg\",\n+            \"2015-10-18 18:01:53,713 INFO [main] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: \" +\n+                \"maxContainerCapability: <memory:8192, vCores:32>\");\n+        bulkRequestBuilder.add(indexRequest);\n+\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis,\n+            \"msg\",\n+            \"2015-10-18 18:01:53,713 INFO [main] org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: \" +\n+                \"yarn.client.max-cached-nodemanagers-proxies : 0\");\n+        bulkRequestBuilder.add(indexRequest);\n+\n+\n+        BulkResponse bulkResponse = bulkRequestBuilder\n+            .setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE)\n+            .get();\n+        assertThat(bulkResponse.hasFailures(), is(false));\n+\n+        Job.Builder job = newJobBuilder(\"categorization-with-preferred-categories\", Collections.emptyList());\n+        registerJob(job);\n+        putJob(job);\n+        openJob(job.getId());\n+\n+        String datafeedId = job.getId() + \"-feed\";\n+        DatafeedConfig.Builder datafeedConfig = new DatafeedConfig.Builder(datafeedId, job.getId());\n+        datafeedConfig.setIndices(Collections.singletonList(index));\n+        DatafeedConfig datafeed = datafeedConfig.build();\n+        registerDatafeed(datafeed);\n+        putDatafeed(datafeed);\n+        startDatafeed(datafeedId, 0, nowMillis + 1);\n+        waitUntilJobIsClosed(job.getId());\n+\n+        List<CategoryDefinition> categories = getCategories(job.getId());\n+        assertThat(categories.size(), equalTo(7));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzODQwOA==", "bodyText": "You could use arrayWithSize matcher here.", "url": "https://github.com/elastic/elasticsearch/pull/54214#discussion_r401438408", "createdAt": "2020-04-01T08:23:20Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/CategorizationIT.java", "diffHunk": "@@ -205,6 +205,93 @@ public void testCategorizationPerformance() {\n                 (MachineLearning.CATEGORIZATION_TOKENIZATION_IN_JAVA ? \"Java\" : \"C++\") + \" took \" + duration + \"ms\");\n     }\n \n+    @AwaitsFix(bugUrl = \"https://github.com/elastic/ml-cpp/pull/1062\")\n+    public void testNumMatchesAndCategoryPreference() throws Exception {\n+        String index = \"hadoop_logs\";\n+        client().admin().indices().prepareCreate(index)\n+            .setMapping(\"time\", \"type=date,format=epoch_millis\",\n+                \"msg\", \"type=text\")\n+            .get();\n+\n+        nowMillis = System.currentTimeMillis();\n+\n+        BulkRequestBuilder bulkRequestBuilder = client().prepareBulk();\n+        IndexRequest indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(8).millis(),\n+            \"msg\", \"2015-10-18 18:01:51,963 INFO [main] org.mortbay.log: jetty-6.1.26\");\n+        bulkRequestBuilder.add(indexRequest);\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(7).millis(),\n+            \"msg\",\n+            \"2015-10-18 18:01:52,728 INFO [main] org.mortbay.log: Started HttpServer2$SelectChannelConnectorWithSafeStartup@0.0.0.0:62267\");\n+        bulkRequestBuilder.add(indexRequest);\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(6).millis(),\n+            \"msg\", \"2015-10-18 18:01:53,400 INFO [main] org.apache.hadoop.yarn.webapp.WebApps: Registered webapp guice modules\");\n+        bulkRequestBuilder.add(indexRequest);\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(5).millis(),\n+            \"msg\",\n+            \"2015-10-18 18:01:53,447 INFO [main] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: nodeBlacklistingEnabled:true\");\n+        bulkRequestBuilder.add(indexRequest);\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(4).millis(),\n+            \"msg\",\n+            \"2015-10-18 18:01:52,728 INFO [main] org.apache.hadoop.yarn.webapp.WebApps: Web app /mapreduce started at 62267\");\n+        bulkRequestBuilder.add(indexRequest);\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(2).millis(),\n+            \"msg\",\n+            \"2015-10-18 18:01:53,557 INFO [main] org.apache.hadoop.yarn.client.RMProxy: \" +\n+                \"Connecting to ResourceManager at msra-sa-41/10.190.173.170:8030\");\n+        bulkRequestBuilder.add(indexRequest);\n+\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis - TimeValue.timeValueHours(1).millis(),\n+            \"msg\",\n+            \"2015-10-18 18:01:53,713 INFO [main] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: \" +\n+                \"maxContainerCapability: <memory:8192, vCores:32>\");\n+        bulkRequestBuilder.add(indexRequest);\n+\n+        indexRequest = new IndexRequest(index);\n+        indexRequest.source(\"time\", nowMillis,\n+            \"msg\",\n+            \"2015-10-18 18:01:53,713 INFO [main] org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: \" +\n+                \"yarn.client.max-cached-nodemanagers-proxies : 0\");\n+        bulkRequestBuilder.add(indexRequest);\n+\n+\n+        BulkResponse bulkResponse = bulkRequestBuilder\n+            .setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE)\n+            .get();\n+        assertThat(bulkResponse.hasFailures(), is(false));\n+\n+        Job.Builder job = newJobBuilder(\"categorization-with-preferred-categories\", Collections.emptyList());\n+        registerJob(job);\n+        putJob(job);\n+        openJob(job.getId());\n+\n+        String datafeedId = job.getId() + \"-feed\";\n+        DatafeedConfig.Builder datafeedConfig = new DatafeedConfig.Builder(datafeedId, job.getId());\n+        datafeedConfig.setIndices(Collections.singletonList(index));\n+        DatafeedConfig datafeed = datafeedConfig.build();\n+        registerDatafeed(datafeed);\n+        putDatafeed(datafeed);\n+        startDatafeed(datafeedId, 0, nowMillis + 1);\n+        waitUntilJobIsClosed(job.getId());\n+\n+        List<CategoryDefinition> categories = getCategories(job.getId());\n+        assertThat(categories.size(), equalTo(7));\n+\n+        CategoryDefinition category1 = categories.get(0);\n+        assertThat(category1.getNumMatches(), equalTo(2L));\n+        long[] expectedPreferenceTo = new long[]{2L, 3L, 4L, 5L, 6L};\n+        assertThat(category1.getPreferredToCategories().length, equalTo(5));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NDM0MjM2", "url": "https://github.com/elastic/elasticsearch/pull/54214#pullrequestreview-385434236", "createdAt": "2020-04-01T09:56:06Z", "commit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwOTo1NjowNlrOF-5TyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwOTo1NzoyMVrOF-5WsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ5NDk4NA==", "bodyText": "Since the value is being serialized using writeVLong() this should throw if passed a negative number.", "url": "https://github.com/elastic/elasticsearch/pull/54214#discussion_r401494984", "createdAt": "2020-04-01T09:56:06Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/results/CategoryDefinition.java", "diffHunk": "@@ -152,6 +167,26 @@ public void setGrokPattern(String grokPattern) {\n         this.grokPattern = grokPattern;\n     }\n \n+    public long[] getPreferredToCategories() {\n+        return preferredToCategories;\n+    }\n+\n+    public void setPreferredToCategories(long[] preferredToCategories) {\n+        this.preferredToCategories = preferredToCategories;\n+    }\n+\n+    private void setPreferredToCategories(List<Long> preferredToCategories) {\n+        setPreferredToCategories(preferredToCategories.stream().mapToLong(Long::longValue).toArray());\n+    }\n+\n+    public long getNumMatches() {\n+        return numMatches;\n+    }\n+\n+    public void setNumMatches(long numMatches) {\n+        this.numMatches = numMatches;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ5NTcyOA==", "bodyText": "Since the value is being serialized using writeVLongArray() this should throw if any value in the array is negative.", "url": "https://github.com/elastic/elasticsearch/pull/54214#discussion_r401495728", "createdAt": "2020-04-01T09:57:21Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/results/CategoryDefinition.java", "diffHunk": "@@ -152,6 +167,26 @@ public void setGrokPattern(String grokPattern) {\n         this.grokPattern = grokPattern;\n     }\n \n+    public long[] getPreferredToCategories() {\n+        return preferredToCategories;\n+    }\n+\n+    public void setPreferredToCategories(long[] preferredToCategories) {\n+        this.preferredToCategories = preferredToCategories;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4581f01dc182b9c4efbd0822324dd85b6d98e177"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f066325b4701ccbec65e8e9793a444fc204e9fd", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/8f066325b4701ccbec65e8e9793a444fc204e9fd", "committedDate": "2020-04-01T12:56:25Z", "message": "addressing PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NzM5NTIw", "url": "https://github.com/elastic/elasticsearch/pull/54214#pullrequestreview-385739520", "createdAt": "2020-04-01T16:13:29Z", "commit": {"oid": "8f066325b4701ccbec65e8e9793a444fc204e9fd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MjAwMjE5", "url": "https://github.com/elastic/elasticsearch/pull/54214#pullrequestreview-386200219", "createdAt": "2020-04-02T08:16:27Z", "commit": {"oid": "8f066325b4701ccbec65e8e9793a444fc204e9fd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1567, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}