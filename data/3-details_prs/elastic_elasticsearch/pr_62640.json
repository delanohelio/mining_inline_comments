{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5Mzc5MTg5", "number": 62640, "title": "Prioritise recovery of system index shards", "bodyText": "Closes #61660. When ordering shard for recovery, ensure system index shards are ordered first so that their recovery will be started first.\nNote that I rewrote PriorityComparatorTests to use IndexMetadata instead of its local IndexMeta POJO.", "createdAt": "2020-09-18T15:12:05Z", "url": "https://github.com/elastic/elasticsearch/pull/62640", "merged": true, "mergeCommit": {"oid": "39a6deccea9082adb21b2d52833d6db3976829d0"}, "closed": true, "closedAt": "2020-09-22T14:47:42Z", "author": {"login": "pugnascotia"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKHCoKgH2gAyNDg5Mzc5MTg5OjQ0NWJmNjc2NzFiMDFmNWY2NDBjMzEzYmU1YzhkMjdkYzNmNjlhZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLV1MxgH2gAyNDg5Mzc5MTg5OmU3ZjMwODI0NDFkZTk1NmQ0MWNlNDU1OTA5YWM1ZTVmODJlNDQzZmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "445bf67671b01f5f640c313be5c8d27dc3f69aea", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/445bf67671b01f5f640c313be5c8d27dc3f69aea", "committedDate": "2020-09-18T15:08:41Z", "message": "Prioritise recovery of system index shards\n\nCloses #61660. When ordering shard for recovery, ensure system index\nshards are ordered first."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15d2b69b51533b8f77418e8836eb8dfae8bf1461", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/15d2b69b51533b8f77418e8836eb8dfae8bf1461", "committedDate": "2020-09-18T15:47:30Z", "message": "Checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzQ0ODE5", "url": "https://github.com/elastic/elasticsearch/pull/62640#pullrequestreview-491744819", "createdAt": "2020-09-18T19:58:10Z", "commit": {"oid": "15d2b69b51533b8f77418e8836eb8dfae8bf1461"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67f7711bb3644be1ed2fdd936e6122e6cc392094", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/67f7711bb3644be1ed2fdd936e6122e6cc392094", "committedDate": "2020-09-22T09:08:32Z", "message": "Merge branch 'master' into 61660-prioritize-recovery-of-system-indices"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjg0MzMy", "url": "https://github.com/elastic/elasticsearch/pull/62640#pullrequestreview-493284332", "createdAt": "2020-09-22T09:35:26Z", "commit": {"oid": "67f7711bb3644be1ed2fdd936e6122e6cc392094"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNToyN1rOHVx8lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTo0MTo0NVrOHVyLMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDQ3MA==", "bodyText": "nit: since i can span to 99 using a prefix like \"idx_\" makes more sense", "url": "https://github.com/elastic/elasticsearch/pull/62640#discussion_r492600470", "createdAt": "2020-09-22T09:35:27Z", "author": {"login": "tlrx"}, "path": "server/src/test/java/org/elasticsearch/gateway/PriorityComparatorTests.java", "diffHunk": "@@ -106,75 +147,102 @@ protected Settings getIndexSettings(Index index) {\n     public void testPriorityComparatorSort() {\n         RoutingNodes.UnassignedShards shards = new RoutingNodes.UnassignedShards(mock(RoutingNodes.class));\n         int numIndices = randomIntBetween(3, 99);\n-        IndexMeta[] indices = new IndexMeta[numIndices];\n-        final Map<String, IndexMeta> map = new HashMap<>();\n+        IndexMetadata[] indices = new IndexMetadata[numIndices];\n+        final Map<String, IndexMetadata> map = new HashMap<>();\n \n         for (int i = 0; i < indices.length; i++) {\n+            int priority = 0;\n+            int creationDate = 0;\n+            boolean isSystem = false;\n+\n             if (frequently()) {\n-                indices[i] = new IndexMeta(\"idx_2015_04_\" + String.format(Locale.ROOT, \"%02d\", i), randomIntBetween(1, 1000),\n-                    randomIntBetween(1, 10000));\n-            } else { // sometimes just use defaults\n-                indices[i] = new IndexMeta(\"idx_2015_04_\" +  String.format(Locale.ROOT, \"%02d\", i));\n+                priority = randomIntBetween(1, 1000);\n+                creationDate = randomIntBetween(1, 10000);\n             }\n-            map.put(indices[i].name, indices[i]);\n+            if (rarely()) {\n+                isSystem = true;\n+            }\n+            // else sometimes just use the defaults\n+\n+            indices[i] = IndexMetadata.builder(\"idx_2015_04_\" + String.format(Locale.ROOT, \"%02d\", i))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67f7711bb3644be1ed2fdd936e6122e6cc392094"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwNDIwOA==", "bodyText": "Maybe\nassertThat(\"system mismatch, expected:\" + currentMeta.isSystem() + \" after \" + prevMeta.isSystem(),\nBoolean.compare(prevMeta.isSystem(), currentMeta.isSystem()), greaterThanOrEqualTo(0));", "url": "https://github.com/elastic/elasticsearch/pull/62640#discussion_r492604208", "createdAt": "2020-09-22T09:41:45Z", "author": {"login": "tlrx"}, "path": "server/src/test/java/org/elasticsearch/gateway/PriorityComparatorTests.java", "diffHunk": "@@ -106,75 +147,102 @@ protected Settings getIndexSettings(Index index) {\n     public void testPriorityComparatorSort() {\n         RoutingNodes.UnassignedShards shards = new RoutingNodes.UnassignedShards(mock(RoutingNodes.class));\n         int numIndices = randomIntBetween(3, 99);\n-        IndexMeta[] indices = new IndexMeta[numIndices];\n-        final Map<String, IndexMeta> map = new HashMap<>();\n+        IndexMetadata[] indices = new IndexMetadata[numIndices];\n+        final Map<String, IndexMetadata> map = new HashMap<>();\n \n         for (int i = 0; i < indices.length; i++) {\n+            int priority = 0;\n+            int creationDate = 0;\n+            boolean isSystem = false;\n+\n             if (frequently()) {\n-                indices[i] = new IndexMeta(\"idx_2015_04_\" + String.format(Locale.ROOT, \"%02d\", i), randomIntBetween(1, 1000),\n-                    randomIntBetween(1, 10000));\n-            } else { // sometimes just use defaults\n-                indices[i] = new IndexMeta(\"idx_2015_04_\" +  String.format(Locale.ROOT, \"%02d\", i));\n+                priority = randomIntBetween(1, 1000);\n+                creationDate = randomIntBetween(1, 10000);\n             }\n-            map.put(indices[i].name, indices[i]);\n+            if (rarely()) {\n+                isSystem = true;\n+            }\n+            // else sometimes just use the defaults\n+\n+            indices[i] = IndexMetadata.builder(\"idx_2015_04_\" + String.format(Locale.ROOT, \"%02d\", i))\n+                .system(isSystem)\n+                .settings(buildSettings(creationDate, priority))\n+                .build();\n+\n+            map.put(indices[i].getIndex().getName(), indices[i]);\n         }\n         int numShards = randomIntBetween(10, 100);\n         for (int i = 0; i < numShards; i++) {\n-            IndexMeta indexMeta = randomFrom(indices);\n-            shards.add(TestShardRouting.newShardRouting(indexMeta.name, randomIntBetween(1, 5), null, null,\n+            IndexMetadata indexMeta = randomFrom(indices);\n+            shards.add(TestShardRouting.newShardRouting(indexMeta.getIndex().getName(), randomIntBetween(1, 5), null, null,\n                     randomBoolean(), ShardRoutingState.UNASSIGNED, new UnassignedInfo(randomFrom(UnassignedInfo.Reason.values()),\n                     \"foobar\")));\n         }\n         shards.sort(new PriorityComparator() {\n             @Override\n-            protected Settings getIndexSettings(Index index) {\n-                IndexMeta indexMeta = map.get(index.getName());\n-                return indexMeta.settings;\n+            protected IndexMetadata getMetadata(Index index) {\n+                return map.get(index.getName());\n             }\n         });\n         ShardRouting previous = null;\n         for (ShardRouting routing : shards) {\n             if (previous != null) {\n-                IndexMeta prevMeta = map.get(previous.getIndexName());\n-                IndexMeta currentMeta = map.get(routing.getIndexName());\n-                if (prevMeta.priority == currentMeta.priority) {\n-                    if (prevMeta.creationDate == currentMeta.creationDate) {\n-                        if (prevMeta.name.equals(currentMeta.name) == false) {\n-                            assertTrue(\"indexName mismatch, expected:\" + currentMeta.name + \" after \" + prevMeta.name + \" \" +\n-                                prevMeta.name.compareTo(currentMeta.name), prevMeta.name.compareTo(currentMeta.name) > 0);\n+                IndexMetadata prevMeta = map.get(previous.getIndexName());\n+                IndexMetadata currentMeta = map.get(routing.getIndexName());\n+\n+                if (prevMeta.isSystem() == currentMeta.isSystem()) {\n+                    final int prevPriority = prevMeta.getSettings().getAsInt(IndexMetadata.SETTING_PRIORITY, -1);\n+                    final int currentPriority = currentMeta.getSettings().getAsInt(IndexMetadata.SETTING_PRIORITY, -1);\n+\n+                    if (prevPriority == currentPriority) {\n+                        final int prevCreationDate = prevMeta.getSettings().getAsInt(IndexMetadata.SETTING_CREATION_DATE, -1);\n+                        final int currentCreationDate = currentMeta.getSettings().getAsInt(IndexMetadata.SETTING_CREATION_DATE, -1);\n+\n+                        if (prevCreationDate == currentCreationDate) {\n+                            final String prevName = prevMeta.getIndex().getName();\n+                            final String currentName = currentMeta.getIndex().getName();\n+\n+                            if (prevName.equals(currentName) == false) {\n+                                assertTrue(\n+                                    \"indexName mismatch, expected:\"\n+                                        + currentName\n+                                        + \" after \"\n+                                        + prevName\n+                                        + \" \"\n+                                        + prevName.compareTo(currentName),\n+                                    prevName.compareTo(currentName) > 0\n+                                );\n+                            }\n+                        } else {\n+                            assertTrue(\n+                                \"creationDate mismatch, expected:\" + currentCreationDate + \" after \" + prevCreationDate,\n+                                prevCreationDate > currentCreationDate\n+                            );\n                         }\n                     } else {\n-                        assertTrue(\"creationDate mismatch, expected:\" + currentMeta.creationDate + \" after \" + prevMeta.creationDate,\n-                            prevMeta.creationDate > currentMeta.creationDate);\n+                        assertTrue(\n+                            \"priority mismatch, expected:\" + currentPriority + \" after \" + prevPriority,\n+                            prevPriority > currentPriority\n+                        );\n                     }\n                 } else {\n-                    assertTrue(\"priority mismatch, expected:\" +  currentMeta.priority + \" after \" + prevMeta.priority,\n-                        prevMeta.priority > currentMeta.priority);\n+                    assertTrue(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67f7711bb3644be1ed2fdd936e6122e6cc392094"}, "originalPosition": 198}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1906210360d39afb1cf42d24228f474f7229d16f", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/1906210360d39afb1cf42d24228f474f7229d16f", "committedDate": "2020-09-22T10:50:15Z", "message": "Test tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7f3082441de956d41ce455909ac5e5f82e443fb", "author": {"user": {"login": "pugnascotia", "name": "Rory Hunter"}}, "url": "https://github.com/elastic/elasticsearch/commit/e7f3082441de956d41ce455909ac5e5f82e443fb", "committedDate": "2020-09-22T10:56:31Z", "message": "Drop date part of index name in PriorityComparatorTests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3561, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}