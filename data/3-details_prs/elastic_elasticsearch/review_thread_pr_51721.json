{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MzcyNDIw", "number": 51721, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyMzo1OFrODcXJ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyMzo1OFrODcXJ1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDY2MDY4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/fieldcaps/IndexFieldCapabilities.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyMzo1OFrOFkYWDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyMzo1OFrOFkYWDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MTkxNg==", "bodyText": "The serialization turned out to be a bit messy unfortunately.", "url": "https://github.com/elastic/elasticsearch/pull/51721#discussion_r373691916", "createdAt": "2020-01-31T21:23:58Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/action/fieldcaps/IndexFieldCapabilities.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.action.fieldcaps;\n+\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Describes the capabilities of a field in a single index.\n+ */\n+public class IndexFieldCapabilities implements Writeable {\n+\n+    private final String name;\n+    private final String type;\n+    private final boolean isSearchable;\n+    private final boolean isAggregatable;\n+    private final Map<String, String> meta;\n+\n+    /**\n+     * @param name The name of the field.\n+     * @param type The type associated with the field.\n+     * @param isSearchable Whether this field is indexed for search.\n+     * @param isAggregatable Whether this field can be aggregated on.\n+     * @param meta Metadata about the field.\n+     */\n+    IndexFieldCapabilities(String name, String type,\n+                           boolean isSearchable, boolean isAggregatable,\n+                           Map<String, String> meta) {\n+\n+        this.name = name;\n+        this.type = type;\n+        this.isSearchable = isSearchable;\n+        this.isAggregatable = isAggregatable;\n+        this.meta = meta;\n+    }\n+\n+    IndexFieldCapabilities(StreamInput in) throws IOException {\n+        this.name = in.readString();\n+        this.type = in.readString();\n+        this.isSearchable = in.readBoolean();\n+        this.isAggregatable = in.readBoolean();\n+\n+        // Previously we also stored placeholders for the 'indices' arrays.\n+        if (in.getVersion().onOrAfter(Version.V_8_0_0)) {\n+            // Do nothing.\n+        } else {\n+            in.readOptionalStringArray();\n+            in.readOptionalStringArray();\n+            in.readOptionalStringArray();\n+        }\n+\n+        if (in.getVersion().onOrAfter(Version.V_8_0_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8364937fb9124d0406a1121cc89dd25bcd02797a"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 170, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}