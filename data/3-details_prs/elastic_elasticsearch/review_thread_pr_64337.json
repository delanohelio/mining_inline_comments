{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMjQ3NjAy", "number": 64337, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzozMzowN1rOEzTKPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMDo1Mjo0NlrOE1K_zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjI2NzQ5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzozMzowN1rOHqb-Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwOTo0NTo1MlrOHrHwcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI2MDUxNA==", "bodyText": "The many different shard not available exceptions have a variety of rest status codes. I wonder if it is best to wrap them or just create a NoShardAvailableActionException with the message from the inner exception - to get a 503 out every time. Otherwise we risk seeing among others a 400 NOT FOUND, which is a bit weird. Also, whether the shard was unavailable at the beginning of search or we detected it during the first phase of search is largely irrelevant to clients I think, using the same exception in all those cases could allow clients to filter out those specific errors if they want to.", "url": "https://github.com/elastic/elasticsearch/pull/64337#discussion_r514260514", "createdAt": "2020-10-29T13:33:07Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java", "diffHunk": "@@ -437,10 +437,10 @@ protected void onShardGroupFailure(int shardIndex, SearchShardTarget shardTarget\n      * @param e the failure reason\n      */\n     @Override\n-    public final void onShardFailure(final int shardIndex, @Nullable SearchShardTarget shardTarget, Exception e) {\n-        // we don't aggregate shard failures on non active shards and failures due to the internal cancellation,\n+    public final void onShardFailure(final int shardIndex, SearchShardTarget shardTarget, Exception e) {\n+        // we don't aggregate shard on failures due to the internal cancellation,\n         // but do keep the header counts right\n-        if (TransportActions.isShardNotAvailableException(e) == false && (requestCancelled.get() && isTaskCancelledException(e)) == false) {\n+        if ((requestCancelled.get() && isTaskCancelledException(e)) == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae283b3bf95764b5ecd4f72206ea74dec7f4bf8d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk3NzkwNg==", "bodyText": "++, I pushed 1427b5c that creates a NoShardAvailableActionException with the message from the inner exception.", "url": "https://github.com/elastic/elasticsearch/pull/64337#discussion_r514977906", "createdAt": "2020-10-30T09:45:52Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java", "diffHunk": "@@ -437,10 +437,10 @@ protected void onShardGroupFailure(int shardIndex, SearchShardTarget shardTarget\n      * @param e the failure reason\n      */\n     @Override\n-    public final void onShardFailure(final int shardIndex, @Nullable SearchShardTarget shardTarget, Exception e) {\n-        // we don't aggregate shard failures on non active shards and failures due to the internal cancellation,\n+    public final void onShardFailure(final int shardIndex, SearchShardTarget shardTarget, Exception e) {\n+        // we don't aggregate shard on failures due to the internal cancellation,\n         // but do keep the header counts right\n-        if (TransportActions.isShardNotAvailableException(e) == false && (requestCancelled.get() && isTaskCancelledException(e)) == false) {\n+        if ((requestCancelled.get() && isTaskCancelledException(e)) == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI2MDUxNA=="}, "originalCommit": {"oid": "ae283b3bf95764b5ecd4f72206ea74dec7f4bf8d"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjIzMjA2OnYy", "diffSide": "RIGHT", "path": "server/src/internalClusterTest/java/org/elasticsearch/search/basic/SearchRedStateIndexIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNzoyOToxMFrOHrD0GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwOTo0NjoxMVrOHrHxLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkxMzMwNQ==", "bodyText": "Could we also validate that a failure is returned here in the failures field (as well as it being the right kind of failure)?", "url": "https://github.com/elastic/elasticsearch/pull/64337#discussion_r514913305", "createdAt": "2020-10-30T07:29:10Z", "author": {"login": "henningandersen"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/search/basic/SearchRedStateIndexIT.java", "diffHunk": "@@ -52,7 +54,7 @@ public void testAllowPartialsWithRedState() throws Exception {\n         SearchResponse searchResponse = client().prepareSearch().setSize(0).setAllowPartialSearchResults(true)\n                 .get();\n         assertThat(RestStatus.OK, equalTo(searchResponse.status()));\n-        assertThat(\"Expect no shards failed\", searchResponse.getFailedShards(), equalTo(0));\n+        assertThat(\"Expect some shards failed\", searchResponse.getFailedShards(), allOf(greaterThan(0), lessThanOrEqualTo(numShards)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ae20cc1b2dbc16b0632a2f003f4501445ecf93a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk3ODA5Mg==", "bodyText": "I pushed 1427b5c", "url": "https://github.com/elastic/elasticsearch/pull/64337#discussion_r514978092", "createdAt": "2020-10-30T09:46:11Z", "author": {"login": "jimczi"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/search/basic/SearchRedStateIndexIT.java", "diffHunk": "@@ -52,7 +54,7 @@ public void testAllowPartialsWithRedState() throws Exception {\n         SearchResponse searchResponse = client().prepareSearch().setSize(0).setAllowPartialSearchResults(true)\n                 .get();\n         assertThat(RestStatus.OK, equalTo(searchResponse.status()));\n-        assertThat(\"Expect no shards failed\", searchResponse.getFailedShards(), equalTo(0));\n+        assertThat(\"Expect some shards failed\", searchResponse.getFailedShards(), allOf(greaterThan(0), lessThanOrEqualTo(numShards)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkxMzMwNQ=="}, "originalCommit": {"oid": "5ae20cc1b2dbc16b0632a2f003f4501445ecf93a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MTkwMTU3OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/action/search/SearchResponse.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMDo1Mjo0NlrOHtS7hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzo0ODozNVrOH4vubw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI1ODExOQ==", "bodyText": "I think we can now add an assertion to the constructor that shardFailures.length + successfullShards == totalShards?", "url": "https://github.com/elastic/elasticsearch/pull/64337#discussion_r517258119", "createdAt": "2020-11-04T10:52:46Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchResponse.java", "diffHunk": "@@ -204,8 +204,6 @@ public int getSkippedShards() {\n      * The failed number of shards the search was executed on.\n      */\n     public int getFailedShards() {\n-        // we don't return totalShards - successfulShards, we don't count \"no shards available\" as a failed shard, just don't", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce3b4e65eca2f03abede78dbe3680c814d971e45"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk3MDQ5OQ==", "bodyText": "We use the SearchResponse as partial response in _async_search so that's not possible.\nThis change is useful though because it clarifies that shardFailures.length + successfullShards != totalShards represents a partial response where some shard requests are still in-flight.", "url": "https://github.com/elastic/elasticsearch/pull/64337#discussion_r517970499", "createdAt": "2020-11-05T11:10:11Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchResponse.java", "diffHunk": "@@ -204,8 +204,6 @@ public int getSkippedShards() {\n      * The failed number of shards the search was executed on.\n      */\n     public int getFailedShards() {\n-        // we don't return totalShards - successfulShards, we don't count \"no shards available\" as a failed shard, just don't", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI1ODExOQ=="}, "originalCommit": {"oid": "ce3b4e65eca2f03abede78dbe3680c814d971e45"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIyNjg4Mw==", "bodyText": "Ah, ok. Perhaps we can add the assertion at the callsites creating the full SearchResponse instead? Like AbstractSearchAsyncAction.buildSearchResponse.", "url": "https://github.com/elastic/elasticsearch/pull/64337#discussion_r521226883", "createdAt": "2020-11-11T09:28:47Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchResponse.java", "diffHunk": "@@ -204,8 +204,6 @@ public int getSkippedShards() {\n      * The failed number of shards the search was executed on.\n      */\n     public int getFailedShards() {\n-        // we don't return totalShards - successfulShards, we don't count \"no shards available\" as a failed shard, just don't", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI1ODExOQ=="}, "originalCommit": {"oid": "ce3b4e65eca2f03abede78dbe3680c814d971e45"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI2NDIzOQ==", "bodyText": "Added in 2354165", "url": "https://github.com/elastic/elasticsearch/pull/64337#discussion_r529264239", "createdAt": "2020-11-24T07:48:35Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/action/search/SearchResponse.java", "diffHunk": "@@ -204,8 +204,6 @@ public int getSkippedShards() {\n      * The failed number of shards the search was executed on.\n      */\n     public int getFailedShards() {\n-        // we don't return totalShards - successfulShards, we don't count \"no shards available\" as a failed shard, just don't", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI1ODExOQ=="}, "originalCommit": {"oid": "ce3b4e65eca2f03abede78dbe3680c814d971e45"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4177, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}