{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3OTMyOTU5", "number": 62444, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo1Mjo1MlrOEkBN8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjo0ODozMlrOEkCefw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjA0MTQ3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/transport/InboundHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo1Mjo1MlrOHStN_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo1Mjo1MlrOHStN_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3NzI3Ng==", "bodyText": "Admittedly the chain of setters here is a little hacky but:\n\nDoing it this way made this a much much smaller change than passing the cluster settings directly to the InboundHandler\nI'd do a follow-up of this logic for the outbound path and that would require handling the threshold setting in the TransportService anyway.", "url": "https://github.com/elastic/elasticsearch/pull/62444#discussion_r489377276", "createdAt": "2020-09-16T11:52:52Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/InboundHandler.java", "diffHunk": "@@ -71,6 +74,10 @@ void setMessageListener(TransportMessageListener listener) {\n         }\n     }\n \n+    void setSlowLogThreshold(TimeValue slowLogThreshold) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be1d0b3d0884f1d74d7fe43d616bc114094bc0ea"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjA0OTg3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/transport/TransportSettings.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo1NTowNlrOHStTIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNToyODo0M1rOHS2cpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3ODU5Mw==", "bodyText": "300ms since our default resolution on the timer thread is 200ms. This is already plenty IMO (3 requests per second isn't great on a transport thread) but not so low that any cgroup throttling or other system slowness instantly results in massive log spam.", "url": "https://github.com/elastic/elasticsearch/pull/62444#discussion_r489378593", "createdAt": "2020-09-16T11:55:06Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/TransportSettings.java", "diffHunk": "@@ -132,6 +132,12 @@\n             Arrays.asList(\"internal:coordination/fault_detection/*\"),\n             Function.identity(), Setting.Property.Dynamic, Setting.Property.NodeScope);\n \n+    // Time that processing an inbound message on a transport thread may take at the most before a warning is logged\n+    public static final Setting<TimeValue> SLOW_OPERATION_THRESHOLD_SETTING =\n+            Setting.positiveTimeSetting(\"transport.slow_operation_logging_threshold\", TimeValue.timeValueMillis(300),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be1d0b3d0884f1d74d7fe43d616bc114094bc0ea"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQyMTgzNQ==", "bodyText": "I'm still a bit concerned about log spam -- we aren't aware of anything that blocks the transport threads for so long today but that might just be because we don't surface it yet, and some configs might be hitting this a lot. #processors threads times 3 messages per second is too much for my taste. WDYT about a simple rate limit to avoid logging more than one of these per ten seconds or something? That'd be enough to point us in the right direction.", "url": "https://github.com/elastic/elasticsearch/pull/62444#discussion_r489421835", "createdAt": "2020-09-16T13:07:19Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/transport/TransportSettings.java", "diffHunk": "@@ -132,6 +132,12 @@\n             Arrays.asList(\"internal:coordination/fault_detection/*\"),\n             Function.identity(), Setting.Property.Dynamic, Setting.Property.NodeScope);\n \n+    // Time that processing an inbound message on a transport thread may take at the most before a warning is logged\n+    public static final Setting<TimeValue> SLOW_OPERATION_THRESHOLD_SETTING =\n+            Setting.positiveTimeSetting(\"transport.slow_operation_logging_threshold\", TimeValue.timeValueMillis(300),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3ODU5Mw=="}, "originalCommit": {"oid": "be1d0b3d0884f1d74d7fe43d616bc114094bc0ea"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ2NzM2Nw==", "bodyText": "I think it might be kind of nice to be able to see bursts here (thinking about spotting something like CPU throttling)? (if you have a time period where there's a bunch of logging across multiple threads for all kinds of messages without a clear pattern or so). I guess we could use something like the log4j burst filter here to capture that kind of thing and still rate limit but what this:\nWe could just do something like a hard 5s timeout above which we always WARN and make this a DEBUG at 300ms?", "url": "https://github.com/elastic/elasticsearch/pull/62444#discussion_r489467367", "createdAt": "2020-09-16T14:09:23Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/TransportSettings.java", "diffHunk": "@@ -132,6 +132,12 @@\n             Arrays.asList(\"internal:coordination/fault_detection/*\"),\n             Function.identity(), Setting.Property.Dynamic, Setting.Property.NodeScope);\n \n+    // Time that processing an inbound message on a transport thread may take at the most before a warning is logged\n+    public static final Setting<TimeValue> SLOW_OPERATION_THRESHOLD_SETTING =\n+            Setting.positiveTimeSetting(\"transport.slow_operation_logging_threshold\", TimeValue.timeValueMillis(300),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3ODU5Mw=="}, "originalCommit": {"oid": "be1d0b3d0884f1d74d7fe43d616bc114094bc0ea"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUxODE5MQ==", "bodyText": "I'd be happy with 5s -- I think this would surface problems bad enough to drop nodes from the cluster without risking too much junk.\nNo need for a separate debug logging threshold IMO -- given that it would need user involvement to see more events in the logs, they may as well just reduce transport.slow_operation_logging_threshold.", "url": "https://github.com/elastic/elasticsearch/pull/62444#discussion_r489518191", "createdAt": "2020-09-16T15:15:07Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/transport/TransportSettings.java", "diffHunk": "@@ -132,6 +132,12 @@\n             Arrays.asList(\"internal:coordination/fault_detection/*\"),\n             Function.identity(), Setting.Property.Dynamic, Setting.Property.NodeScope);\n \n+    // Time that processing an inbound message on a transport thread may take at the most before a warning is logged\n+    public static final Setting<TimeValue> SLOW_OPERATION_THRESHOLD_SETTING =\n+            Setting.positiveTimeSetting(\"transport.slow_operation_logging_threshold\", TimeValue.timeValueMillis(300),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3ODU5Mw=="}, "originalCommit": {"oid": "be1d0b3d0884f1d74d7fe43d616bc114094bc0ea"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUyODQ4NQ==", "bodyText": "Fair point -> pushed the change to 5s :)", "url": "https://github.com/elastic/elasticsearch/pull/62444#discussion_r489528485", "createdAt": "2020-09-16T15:28:43Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/TransportSettings.java", "diffHunk": "@@ -132,6 +132,12 @@\n             Arrays.asList(\"internal:coordination/fault_detection/*\"),\n             Function.identity(), Setting.Property.Dynamic, Setting.Property.NodeScope);\n \n+    // Time that processing an inbound message on a transport thread may take at the most before a warning is logged\n+    public static final Setting<TimeValue> SLOW_OPERATION_THRESHOLD_SETTING =\n+            Setting.positiveTimeSetting(\"transport.slow_operation_logging_threshold\", TimeValue.timeValueMillis(300),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3ODU5Mw=="}, "originalCommit": {"oid": "be1d0b3d0884f1d74d7fe43d616bc114094bc0ea"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjIwMDQ1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/transport/InboundHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjozNjoyN1rOHSuumg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNDowOTo0M1rOHSyuvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwMjAxMA==", "bodyText": "It'd be useful to include the phrase warn threshold as this is a useful search term for the logs when investigating general slowness/instability problems:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            logger.warn(\"Slow handling of transport message [{}] took [{}ms]\", message, took);\n          \n          \n            \n                            logger.warn(\"handling inbound transport message [{}] took [{}ms] which is above the warn threshold of [{}ms]\", message, took, logThreshold);", "url": "https://github.com/elastic/elasticsearch/pull/62444#discussion_r489402010", "createdAt": "2020-09-16T12:36:27Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/transport/InboundHandler.java", "diffHunk": "@@ -138,6 +146,12 @@ private void messageReceived(TcpChannel channel, InboundMessage message) throws\n                     }\n                 }\n             }\n+        } finally {\n+            final long took = threadPool.relativeTimeInMillis() - startTime;\n+            final long logThreshold = slowLogThresholdMs;\n+            if (logThreshold > 0 && took > logThreshold) {\n+                logger.warn(\"Slow handling of transport message [{}] took [{}ms]\", message, took);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be1d0b3d0884f1d74d7fe43d616bc114094bc0ea"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ2NzU4Mw==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/62444#discussion_r489467583", "createdAt": "2020-09-16T14:09:43Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/InboundHandler.java", "diffHunk": "@@ -138,6 +146,12 @@ private void messageReceived(TcpChannel channel, InboundMessage message) throws\n                     }\n                 }\n             }\n+        } finally {\n+            final long took = threadPool.relativeTimeInMillis() - startTime;\n+            final long logThreshold = slowLogThresholdMs;\n+            if (logThreshold > 0 && took > logThreshold) {\n+                logger.warn(\"Slow handling of transport message [{}] took [{}ms]\", message, took);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwMjAxMA=="}, "originalCommit": {"oid": "be1d0b3d0884f1d74d7fe43d616bc114094bc0ea"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjI0NzY3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/transport/InboundHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjo0ODozMlrOHSvL3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNDowOTo0MFrOHSyupw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwOTUwMA==", "bodyText": "Could we move the timing up to this level, since the logging on this line may also be a source of slowness?", "url": "https://github.com/elastic/elasticsearch/pull/62444#discussion_r489409500", "createdAt": "2020-09-16T12:48:32Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/transport/InboundHandler.java", "diffHunk": "@@ -71,6 +74,10 @@ void setMessageListener(TransportMessageListener listener) {\n         }\n     }\n \n+    void setSlowLogThreshold(TimeValue slowLogThreshold) {\n+        this.slowLogThresholdMs = slowLogThreshold.getMillis();\n+    }\n+\n     void inboundMessage(TcpChannel channel, InboundMessage message) throws Exception {\n         channel.getChannelStats().markAccessed(threadPool.relativeTimeInMillis());\n         TransportLogger.logInboundMessage(channel, message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be1d0b3d0884f1d74d7fe43d616bc114094bc0ea"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ2NzU1OQ==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/62444#discussion_r489467559", "createdAt": "2020-09-16T14:09:40Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/InboundHandler.java", "diffHunk": "@@ -71,6 +74,10 @@ void setMessageListener(TransportMessageListener listener) {\n         }\n     }\n \n+    void setSlowLogThreshold(TimeValue slowLogThreshold) {\n+        this.slowLogThresholdMs = slowLogThreshold.getMillis();\n+    }\n+\n     void inboundMessage(TcpChannel channel, InboundMessage message) throws Exception {\n         channel.getChannelStats().markAccessed(threadPool.relativeTimeInMillis());\n         TransportLogger.logInboundMessage(channel, message);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwOTUwMA=="}, "originalCommit": {"oid": "be1d0b3d0884f1d74d7fe43d616bc114094bc0ea"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1470, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}