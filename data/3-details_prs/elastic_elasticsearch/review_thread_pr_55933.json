{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNzA1ODAy", "number": 55933, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTowNjoxNFrOD3q8dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjowMDo0MlrOD3seFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzAxODc4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/aggregations/metrics/AnalyticsAggregatorFactory.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTowNjoxNFrOGODakQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoyMDoxNFrOGOriAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4OTIwMQ==", "bodyText": "@not-napoleon and I've been favoring changing the ctor so you can just to (MetricAggregatorSupplier) HistoBackedSumAggregator::new. It is less \"big\".", "url": "https://github.com/elastic/elasticsearch/pull/55933#discussion_r417389201", "createdAt": "2020-04-29T15:06:14Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/aggregations/metrics/AnalyticsAggregatorFactory.java", "diffHunk": "@@ -65,6 +68,24 @@ public static void registerPercentileRanksAggregator(ValuesSourceRegistry.Builde\n     public static void registerHistoBackedSumAggregator(ValuesSourceRegistry.Builder builder) {\n         builder.register(SumAggregationBuilder.NAME,\n             AnalyticsValuesSourceType.HISTOGRAM,\n-            (MetricAggregatorSupplier) HistoBackedSumAggregator::new);\n+            (MetricAggregatorSupplier) (name, valuesSource, format, context, parent, metadata) ->\n+                new HistoBackedSumAggregator(name, (HistogramValuesSource.Histogram) valuesSource, format, context, parent, metadata)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2671d5c2a3980193bf162338cb4d5c9c9400d66e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1NTQyNw==", "bodyText": "(MetricAggregatorSupplier) HistoBackedSumAggregator::new is definitely better looking and I would prefer it as well.\nThe problem is that MetricAggregatorSupplier passes a ValuesSource argument\nAggregator build(String name,\n                     ValuesSource valuesSource,\n                     DocValueFormat format,\n                     SearchContext context,\n                     Aggregator parent,\n                     Map<String, Object> metadata) throws IOException;\n\nwhile HistoBackedSumAggregator constructor expects a HistogramValuesSource.Histogram\nHistoBackedSumAggregator(String name, HistogramValuesSource.Histogram valuesSource, DocValueFormat formatter, SearchContext context,\n            Aggregator parent, Map<String, Object> metadata) throws IOException \n\nSo I had 3 options:\n\nKeep the ValuesSource parameter in the HistoBackedSumAggregator constructor and do a type cast later when I would use the HistogramValuesSource.Histogram object.\nCreate a separate HistoBackedMetricAggregatorSupplier that would match the arguments of the HistoBackedSumAggregator\nDo the cast of ValuesSource to HistogramValuesSource.Histogram in the registrar method changing the admittedly prettier (MetricAggregatorSupplier) HistoBackedSumAggregator::new to the longer lambda expression.\n\nI chose the third option because it seemed cleaner to do the type cast at the registrar method where it is obvious that the VS is a histogram. On the other hand, I didn't  want to create yet another AggregatorSupplier sub-class", "url": "https://github.com/elastic/elasticsearch/pull/55933#discussion_r417555427", "createdAt": "2020-04-29T19:23:19Z", "author": {"login": "csoulios"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/aggregations/metrics/AnalyticsAggregatorFactory.java", "diffHunk": "@@ -65,6 +68,24 @@ public static void registerPercentileRanksAggregator(ValuesSourceRegistry.Builde\n     public static void registerHistoBackedSumAggregator(ValuesSourceRegistry.Builder builder) {\n         builder.register(SumAggregationBuilder.NAME,\n             AnalyticsValuesSourceType.HISTOGRAM,\n-            (MetricAggregatorSupplier) HistoBackedSumAggregator::new);\n+            (MetricAggregatorSupplier) (name, valuesSource, format, context, parent, metadata) ->\n+                new HistoBackedSumAggregator(name, (HistogramValuesSource.Histogram) valuesSource, format, context, parent, metadata)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4OTIwMQ=="}, "originalCommit": {"oid": "2671d5c2a3980193bf162338cb4d5c9c9400d66e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA0NjQ2NA==", "bodyText": "I've been favoring having generic ValuesSource in the supplier and doing the cast in the aggregator constructor instead.  Really the suppliers shouldn't care about the ValuesSource subclass, since the whole idea is to be able to add new ones in, and having to subclass a supplier to do that is a lot of boiler plate.  I know I haven't been perfectly consistent about that so far, but I'm working on cleaning it up as I can.", "url": "https://github.com/elastic/elasticsearch/pull/55933#discussion_r418046464", "createdAt": "2020-04-30T14:20:14Z", "author": {"login": "not-napoleon"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/aggregations/metrics/AnalyticsAggregatorFactory.java", "diffHunk": "@@ -65,6 +68,24 @@ public static void registerPercentileRanksAggregator(ValuesSourceRegistry.Builde\n     public static void registerHistoBackedSumAggregator(ValuesSourceRegistry.Builder builder) {\n         builder.register(SumAggregationBuilder.NAME,\n             AnalyticsValuesSourceType.HISTOGRAM,\n-            (MetricAggregatorSupplier) HistoBackedSumAggregator::new);\n+            (MetricAggregatorSupplier) (name, valuesSource, format, context, parent, metadata) ->\n+                new HistoBackedSumAggregator(name, (HistogramValuesSource.Histogram) valuesSource, format, context, parent, metadata)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4OTIwMQ=="}, "originalCommit": {"oid": "2671d5c2a3980193bf162338cb4d5c9c9400d66e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzI2NTAxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/analytics/src/test/java/org/elasticsearch/xpack/analytics/aggregations/metrics/HistoBackedAvgAggregatorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTo1OTo1MlrOGOF3ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTo1OTo1MlrOGOF3ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyOTM1NA==", "bodyText": "You probably can merge master and remove this now.", "url": "https://github.com/elastic/elasticsearch/pull/55933#discussion_r417429354", "createdAt": "2020-04-29T15:59:52Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/analytics/src/test/java/org/elasticsearch/xpack/analytics/aggregations/metrics/HistoBackedAvgAggregatorTests.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.analytics.aggregations.metrics;\n+\n+import com.tdunning.math.stats.Centroid;\n+import com.tdunning.math.stats.TDigest;\n+import org.apache.lucene.document.BinaryDocValuesField;\n+import org.apache.lucene.document.Field;\n+import org.apache.lucene.document.StringField;\n+import org.apache.lucene.index.RandomIndexWriter;\n+import org.apache.lucene.index.Term;\n+import org.apache.lucene.search.MatchAllDocsQuery;\n+import org.apache.lucene.search.Query;\n+import org.apache.lucene.search.TermQuery;\n+import org.elasticsearch.common.CheckedConsumer;\n+import org.elasticsearch.common.io.stream.BytesStreamOutput;\n+import org.elasticsearch.index.mapper.MappedFieldType;\n+import org.elasticsearch.plugins.SearchPlugin;\n+import org.elasticsearch.search.aggregations.AggregationBuilder;\n+import org.elasticsearch.search.aggregations.AggregatorTestCase;\n+import org.elasticsearch.search.aggregations.metrics.AvgAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.InternalAvg;\n+import org.elasticsearch.search.aggregations.metrics.TDigestState;\n+import org.elasticsearch.search.aggregations.support.AggregationInspectionHelper;\n+import org.elasticsearch.search.aggregations.support.CoreValuesSourceType;\n+import org.elasticsearch.search.aggregations.support.ValuesSourceType;\n+import org.elasticsearch.xpack.analytics.AnalyticsPlugin;\n+import org.elasticsearch.xpack.analytics.aggregations.support.AnalyticsValuesSourceType;\n+import org.elasticsearch.xpack.analytics.mapper.HistogramFieldMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+import static java.util.Collections.singleton;\n+import static org.elasticsearch.search.aggregations.AggregationBuilders.avg;\n+\n+public class HistoBackedAvgAggregatorTests extends AggregatorTestCase {\n+\n+    private static final String FIELD_NAME = \"field\";\n+\n+    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/55824\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2671d5c2a3980193bf162338cb4d5c9c9400d66e"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzI2ODcwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/analytics/src/test/java/org/elasticsearch/xpack/analytics/aggregations/metrics/HistoBackedSumAggregatorTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjowMDo0MlrOGOF5yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjowMDo0MlrOGOF5yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyOTk2MQ==", "bodyText": "I think this is merged, right?", "url": "https://github.com/elastic/elasticsearch/pull/55933#discussion_r417429961", "createdAt": "2020-04-29T16:00:42Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/analytics/src/test/java/org/elasticsearch/xpack/analytics/aggregations/metrics/HistoBackedSumAggregatorTests.java", "diffHunk": "@@ -49,6 +45,7 @@\n \n     private static final String FIELD_NAME = \"field\";\n \n+    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/55824\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2671d5c2a3980193bf162338cb4d5c9c9400d66e"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2513, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}