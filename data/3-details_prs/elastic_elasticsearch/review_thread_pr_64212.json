{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNzIyNTg5", "number": 64212, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTozNjowOVrOEyaj3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTozODoxNFrOEyao3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMjk5NDIxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/plugin/RestEqlSearchAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTozNjowOVrOHpCrlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTozNjowOVrOHpCrlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc5NzU4OQ==", "bodyText": "Would be good to add a comment on why this is needed.", "url": "https://github.com/elastic/elasticsearch/pull/64212#discussion_r512797589", "createdAt": "2020-10-27T15:36:09Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/plugin/RestEqlSearchAction.java", "diffHunk": "@@ -59,12 +64,33 @@ protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient cli\n \n         return channel -> {\n             RestCancellableNodeClient cancellableClient = new RestCancellableNodeClient(client, request.getHttpChannel());\n-            cancellableClient.execute(EqlSearchAction.INSTANCE, eqlRequest, new RestResponseListener<>(channel) {\n+            cancellableClient.execute(EqlSearchAction.INSTANCE, eqlRequest, new ActionListener<>() {\n                 @Override\n-                public RestResponse buildResponse(EqlSearchResponse response) throws Exception {\n-                    XContentBuilder builder = channel.newBuilder(request.getXContentType(), XContentType.JSON, true);\n-                    response.toXContent(builder, request);\n-                    return new BytesRestResponse(RestStatus.OK, builder);\n+                public void onResponse(EqlSearchResponse response) {\n+                    try {\n+                        XContentBuilder builder = channel.newBuilder(request.getXContentType(), XContentType.JSON, true);\n+                        response.toXContent(builder, request);\n+                        channel.sendResponse(new BytesRestResponse(RestStatus.OK, builder));\n+                    } catch (Exception e) {\n+                        onFailure(e);\n+                    }\n+                }\n+\n+                @Override\n+                public void onFailure(Exception e) {\n+                    Exception finalException = e;\n+                    if (e instanceof IndexNotFoundException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e25ab3b916e632ed945090accf776ab0e3a3b5d"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzAwNzAwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/analysis/PreAnalyzer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTozODoxNFrOHpCzgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTozODoxNFrOHpCzgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc5OTYxOQ==", "bodyText": "A comment is useful to indicate why the Verification exception is wrapped inside an infe", "url": "https://github.com/elastic/elasticsearch/pull/64212#discussion_r512799619", "createdAt": "2020-10-27T15:38:14Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/analysis/PreAnalyzer.java", "diffHunk": "@@ -17,9 +18,9 @@\n public class PreAnalyzer {\n \n     public LogicalPlan preAnalyze(LogicalPlan plan, IndexResolution indices) {\n-        // wrap a potential index_not_found_exception with a VerificationException (expected by client)\n         if (indices.isValid() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e25ab3b916e632ed945090accf776ab0e3a3b5d"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4216, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}