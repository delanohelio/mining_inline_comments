{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0NTIxMzA2", "number": 62261, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzowNTowN1rOEjHaKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNTowNDo1NVrOEjLwAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjU3MDAzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzowNTowN1rOHRSy1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzowNTowN1rOHRSy1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTc2Ng==", "bodyText": "I would also exercise the condition that remote indices are wildcards (it could be a random)", "url": "https://github.com/elastic/elasticsearch/pull/62261#discussion_r487895766", "createdAt": "2020-09-14T13:05:07Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java", "diffHunk": "@@ -479,6 +484,46 @@ public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOExcep\n         verifyNoMoreInteractions(auditTrail);\n     }\n \n+    public void testUserWithNoRolesOpenPointInTimeWithRemoteIndices() {\n+        final boolean hasLocalIndices = randomBoolean();\n+        final String[] indices = new String[]{\n+            hasLocalIndices ? randomAlphaOfLength(5) : \"other_cluster:\" + randomAlphaOfLength(5),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0e2ace69f0c94ccfa67820eb2f8b377f6d23694"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjU3MTQ5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzowNTozMVrOHRSztQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzowNTozMVrOHRSztQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTk4OQ==", "bodyText": "set this to both values in a for-each.", "url": "https://github.com/elastic/elasticsearch/pull/62261#discussion_r487895989", "createdAt": "2020-09-14T13:05:31Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java", "diffHunk": "@@ -479,6 +484,46 @@ public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOExcep\n         verifyNoMoreInteractions(auditTrail);\n     }\n \n+    public void testUserWithNoRolesOpenPointInTimeWithRemoteIndices() {\n+        final boolean hasLocalIndices = randomBoolean();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0e2ace69f0c94ccfa67820eb2f8b377f6d23694"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjYwODg0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzoxNDowN1rOHRTKLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzoxNDowN1rOHRTKLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkwMTc0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(ClosePointInTimeAction.NAME), eq(closePointInTimeRequest),\n          \n          \n            \n                    verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(indices:data/read/close_point_in_time), eq(closePointInTimeRequest),\n          \n      \n    \n    \n  \n\nIf you wanna be consistent with the previous test.", "url": "https://github.com/elastic/elasticsearch/pull/62261#discussion_r487901743", "createdAt": "2020-09-14T13:14:07Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java", "diffHunk": "@@ -479,6 +484,46 @@ public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOExcep\n         verifyNoMoreInteractions(auditTrail);\n     }\n \n+    public void testUserWithNoRolesOpenPointInTimeWithRemoteIndices() {\n+        final boolean hasLocalIndices = randomBoolean();\n+        final String[] indices = new String[]{\n+            hasLocalIndices ? randomAlphaOfLength(5) : \"other_cluster:\" + randomAlphaOfLength(5),\n+            \"other_cluster:\" + randomAlphaOfLength(5)\n+        };\n+        final OpenPointInTimeRequest openPointInTimeRequest = new OpenPointInTimeRequest(\n+            indices, OpenPointInTimeRequest.DEFAULT_INDICES_OPTIONS, TimeValue.timeValueMinutes(randomLongBetween(1, 10)),\n+            randomAlphaOfLength(5), randomAlphaOfLength(5)\n+        );\n+        final Authentication authentication = createAuthentication(new User(\"test user\"));\n+        mockEmptyMetadata();\n+        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext);\n+        if (hasLocalIndices) {\n+            assertThrowsAuthorizationException(\n+                () -> authorize(authentication, OpenPointInTimeAction.NAME, openPointInTimeRequest),\n+                \"indices:data/read/open_point_in_time\", \"test user\"\n+            );\n+            verify(auditTrail).accessDenied(eq(requestId), eq(authentication),\n+                                            eq(\"indices:data/read/open_point_in_time\"), eq(openPointInTimeRequest),\n+                                            authzInfoRoles(Role.EMPTY.names()));\n+        } else {\n+            authorize(authentication, OpenPointInTimeAction.NAME, openPointInTimeRequest);\n+            verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(OpenPointInTimeAction.NAME), eq(openPointInTimeRequest),\n+                                             authzInfoRoles(Role.EMPTY.names()));\n+        }\n+        verifyNoMoreInteractions(auditTrail);\n+    }\n+\n+    public void testUserWithNoRolesCanClosePointInTime() {\n+        final ClosePointInTimeRequest closePointInTimeRequest = new ClosePointInTimeRequest(randomAlphaOfLength(8));\n+        final Authentication authentication = createAuthentication(new User(\"test user\"));\n+        mockEmptyMetadata();\n+        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext);\n+        authorize(authentication, ClosePointInTimeAction.NAME, closePointInTimeRequest);\n+        verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(ClosePointInTimeAction.NAME), eq(closePointInTimeRequest),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0e2ace69f0c94ccfa67820eb2f8b377f6d23694"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MzI4MTMxOnYy", "diffSide": "RIGHT", "path": "x-pack/qa/multi-cluster-search-security/src/test/resources/rest-api-spec/test/multi_cluster/80_point_in_time.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNTowNDo1NVrOHRZbWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNTowNDo1NVrOHRZbWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAwNDQ0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  headers: { Authorization: \"Basic am9lOnMza3JpdA==\" }\n          \n          \n            \n                  headers: { Authorization: \"Basic cmVtb3RlOnMza3JpdA==\" }\n          \n      \n    \n    \n  \n\nNot only opening the PIT requires no privs on the local cluster but also using it (and closing), no?", "url": "https://github.com/elastic/elasticsearch/pull/62261#discussion_r488004440", "createdAt": "2020-09-14T15:04:55Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/qa/multi-cluster-search-security/src/test/resources/rest-api-spec/test/multi_cluster/80_point_in_time.yml", "diffHunk": "@@ -111,3 +111,39 @@ teardown:\n       close_point_in_time:\n         body:\n           id: \"$pit_id\"\n+\n+---\n+\"Point in time CCS with only remote indices requires no privileges on local cluster\":\n+\n+  - do:\n+      headers: { Authorization: \"Basic cmVtb3RlOnMza3JpdA==\" }\n+      open_point_in_time:\n+        index: \"my_*:point_in_time_index\"\n+        keep_alive: 5m\n+  - set: {id: pit_id}\n+\n+  - do:\n+      headers: { Authorization: \"Basic am9lOnMza3JpdA==\" }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0e2ace69f0c94ccfa67820eb2f8b377f6d23694"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1512, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}