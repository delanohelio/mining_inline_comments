{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNDI3OTUx", "number": 50737, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMTowNTowNlrODW0KYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMTowNTowNlrODW0KYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjQ5ODkwOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/geo/GeoPointShapeQueryTests.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMTowNTowNlrOFbyUuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNDoxMjowMFrOFdYxyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4MDM3OQ==", "bodyText": "I think this test should be in GeoQueryTests? I guess the idea of the subclass is that all test with points should be in that class so they are called with geo_point fields and geo_shape field?", "url": "https://github.com/elastic/elasticsearch/pull/50737#discussion_r364680379", "createdAt": "2020-01-09T11:05:06Z", "author": {"login": "iverase"}, "path": "server/src/test/java/org/elasticsearch/search/geo/GeoPointShapeQueryTests.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.search.geo;\n+\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.geo.builders.*;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.locationtech.jts.geom.Coordinate;\n+\n+import static org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE;\n+import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;\n+\n+public class GeoPointShapeQueryTests extends GeoQueryTests {\n+\n+    @Override\n+    protected XContentBuilder createMapping() throws Exception {\n+        XContentBuilder xcb = XContentFactory.jsonBuilder().startObject()\n+            .startObject(\"properties\").startObject(\"location\")\n+            .field(\"type\", \"geo_point\")\n+            .endObject().endObject().endObject();\n+\n+        return xcb;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7f2218a3ca3fa0d87e888d68bd6ec5ed1db6afb"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg5NTE0MA==", "bodyText": "Thanks @iverase\nI've pushed all tests that may be candidates for both geo shape and geo point up to the parent class, reordered geo shape so these are more easily visible and created test stubs in geo point for the expected tests\ntests passing in both geo shape and geo point", "url": "https://github.com/elastic/elasticsearch/pull/50737#discussion_r364895140", "createdAt": "2020-01-09T18:31:43Z", "author": {"login": "djptek"}, "path": "server/src/test/java/org/elasticsearch/search/geo/GeoPointShapeQueryTests.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.search.geo;\n+\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.geo.builders.*;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.locationtech.jts.geom.Coordinate;\n+\n+import static org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE;\n+import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;\n+\n+public class GeoPointShapeQueryTests extends GeoQueryTests {\n+\n+    @Override\n+    protected XContentBuilder createMapping() throws Exception {\n+        XContentBuilder xcb = XContentFactory.jsonBuilder().startObject()\n+            .startObject(\"properties\").startObject(\"location\")\n+            .field(\"type\", \"geo_point\")\n+            .endObject().endObject().endObject();\n+\n+        return xcb;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4MDM3OQ=="}, "originalCommit": {"oid": "d7f2218a3ca3fa0d87e888d68bd6ec5ed1db6afb"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIxNjc0NA==", "bodyText": "@djptek Thanks for reworking this butI think the is still not the idea.I would propose to leave GeoShapeQueryTest as it is and only move out the test that is indexing points. This test can be in the abstract class with will be implemented by two classes, one generating a geo_point field and the other generated a geo_shape field. Does it make sense?", "url": "https://github.com/elastic/elasticsearch/pull/50737#discussion_r366216744", "createdAt": "2020-01-14T08:59:55Z", "author": {"login": "iverase"}, "path": "server/src/test/java/org/elasticsearch/search/geo/GeoPointShapeQueryTests.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.search.geo;\n+\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.geo.builders.*;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.locationtech.jts.geom.Coordinate;\n+\n+import static org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE;\n+import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;\n+\n+public class GeoPointShapeQueryTests extends GeoQueryTests {\n+\n+    @Override\n+    protected XContentBuilder createMapping() throws Exception {\n+        XContentBuilder xcb = XContentFactory.jsonBuilder().startObject()\n+            .startObject(\"properties\").startObject(\"location\")\n+            .field(\"type\", \"geo_point\")\n+            .endObject().endObject().endObject();\n+\n+        return xcb;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4MDM3OQ=="}, "originalCommit": {"oid": "d7f2218a3ca3fa0d87e888d68bd6ec5ed1db6afb"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM1ODk4Nw==", "bodyText": "@iverase thanks for clarifying, I've refactored leaving 2 tests in the abstract:\n\ntestNullShape() which is theoretically applicable to both\ntestIndexPointsFilterRectangle() as discussed offline which is the test of interest\n\nThe testIndexPointsFilterRectangle() method is overridden in the subclasses since:\n\ngeo shape requires a random mapping to maintain current test coverage\ngeo point lacks the concept of random mapping therefore uses the default; also this test is comment out since the field mapper has not yet been built so it will fail to build\n\nAlso refactored the mapping helping method function names as discussed\nThanks for your support and feedback", "url": "https://github.com/elastic/elasticsearch/pull/50737#discussion_r366358987", "createdAt": "2020-01-14T14:12:00Z", "author": {"login": "djptek"}, "path": "server/src/test/java/org/elasticsearch/search/geo/GeoPointShapeQueryTests.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.search.geo;\n+\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.geo.builders.*;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.locationtech.jts.geom.Coordinate;\n+\n+import static org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE;\n+import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;\n+\n+public class GeoPointShapeQueryTests extends GeoQueryTests {\n+\n+    @Override\n+    protected XContentBuilder createMapping() throws Exception {\n+        XContentBuilder xcb = XContentFactory.jsonBuilder().startObject()\n+            .startObject(\"properties\").startObject(\"location\")\n+            .field(\"type\", \"geo_point\")\n+            .endObject().endObject().endObject();\n+\n+        return xcb;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4MDM3OQ=="}, "originalCommit": {"oid": "d7f2218a3ca3fa0d87e888d68bd6ec5ed1db6afb"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4930, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}