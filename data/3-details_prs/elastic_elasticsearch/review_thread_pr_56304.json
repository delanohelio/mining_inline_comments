{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MzI1MTk5", "number": 56304, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTowMzoxNFrOD6KHaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOToyNDoxOFrOD6KmhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzA5NzM3OnYy", "diffSide": "LEFT", "path": "docs/reference/search/request-body.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTowMzoxNFrOGR1RIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMjo1MDozNVrOGR8-Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM1MTcxMg==", "bodyText": "On the pages this is moved to, cross-cluster search ({ccs}) as a term isn't mentioned explicitly and the link to the network delays is missing. I don't know if this was left out on purpose to simplify things, but at least spelling out the abreviation might be a good addition.", "url": "https://github.com/elastic/elasticsearch/pull/56304#discussion_r421351712", "createdAt": "2020-05-07T09:03:14Z", "author": {"login": "cbuescher"}, "path": "docs/reference/search/request-body.asciidoc", "diffHunk": "@@ -37,106 +36,10 @@ The search request can be executed with a search DSL, which includes the\n \n include::{docdir}/rest-api/common-parms.asciidoc[tag=index]\n \n-\n [[search-request-body-api-request-body]]\n ==== {api-request-body-title}\n \n-`allow_partial_search_results`:: \n-  (Optional, boolean) Set to `false` to fail the request if only partial results \n-  are available. Defaults to `true`, which returns partial results in the event \n-  of timeouts or partial failures You can override the default behavior for all \n-  requests by setting `search.default_allow_partial_results` to `false` in the \n-  cluster settings.\n-\n-`batched_reduce_size`:: \n-  (Optional, integer) The number of shard results that should be reduced at once \n-  on the coordinating node. This value should be used as a protection mechanism \n-  to reduce the memory overhead per search request if the potential number of \n-  shards in the request can be large.\n-\n-[[ccs-minimize-roundtrips]]\n-`ccs_minimize_roundtrips`::\n-  (Optional, boolean) If `true`, the network round-trips between the \n-  coordinating node and the remote clusters ewill be minimized when executing \n-  {ccs} requests. See <<ccs-network-delays>>. Defaults to `true`. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df2053bc74482f7dc438fcc72f0d9ddc3a300bd1"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ3Nzk1MA==", "bodyText": "Thanks for catching this. I agree this is the better definition and moved it over with 013cca6. As a note: {ccs} expands to cross-cluster search, not CCS, so the full wording renders in the final HTML.", "url": "https://github.com/elastic/elasticsearch/pull/56304#discussion_r421477950", "createdAt": "2020-05-07T12:50:35Z", "author": {"login": "jrodewig"}, "path": "docs/reference/search/request-body.asciidoc", "diffHunk": "@@ -37,106 +36,10 @@ The search request can be executed with a search DSL, which includes the\n \n include::{docdir}/rest-api/common-parms.asciidoc[tag=index]\n \n-\n [[search-request-body-api-request-body]]\n ==== {api-request-body-title}\n \n-`allow_partial_search_results`:: \n-  (Optional, boolean) Set to `false` to fail the request if only partial results \n-  are available. Defaults to `true`, which returns partial results in the event \n-  of timeouts or partial failures You can override the default behavior for all \n-  requests by setting `search.default_allow_partial_results` to `false` in the \n-  cluster settings.\n-\n-`batched_reduce_size`:: \n-  (Optional, integer) The number of shard results that should be reduced at once \n-  on the coordinating node. This value should be used as a protection mechanism \n-  to reduce the memory overhead per search request if the potential number of \n-  shards in the request can be large.\n-\n-[[ccs-minimize-roundtrips]]\n-`ccs_minimize_roundtrips`::\n-  (Optional, boolean) If `true`, the network round-trips between the \n-  coordinating node and the remote clusters ewill be minimized when executing \n-  {ccs} requests. See <<ccs-network-delays>>. Defaults to `true`. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM1MTcxMg=="}, "originalCommit": {"oid": "df2053bc74482f7dc438fcc72f0d9ddc3a300bd1"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzEwNzIwOnYy", "diffSide": "LEFT", "path": "docs/reference/search/request-body.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTowNTo1OFrOGR1Xlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMjo1MDozN1rOGR8-Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM1MzM2Ng==", "bodyText": "is enabled for requests where size is 0\nI don't know if this is useful information, seems to be missing from the target page", "url": "https://github.com/elastic/elasticsearch/pull/56304#discussion_r421353366", "createdAt": "2020-05-07T09:05:58Z", "author": {"login": "cbuescher"}, "path": "docs/reference/search/request-body.asciidoc", "diffHunk": "@@ -37,106 +36,10 @@ The search request can be executed with a search DSL, which includes the\n \n include::{docdir}/rest-api/common-parms.asciidoc[tag=index]\n \n-\n [[search-request-body-api-request-body]]\n ==== {api-request-body-title}\n \n-`allow_partial_search_results`:: \n-  (Optional, boolean) Set to `false` to fail the request if only partial results \n-  are available. Defaults to `true`, which returns partial results in the event \n-  of timeouts or partial failures You can override the default behavior for all \n-  requests by setting `search.default_allow_partial_results` to `false` in the \n-  cluster settings.\n-\n-`batched_reduce_size`:: \n-  (Optional, integer) The number of shard results that should be reduced at once \n-  on the coordinating node. This value should be used as a protection mechanism \n-  to reduce the memory overhead per search request if the potential number of \n-  shards in the request can be large.\n-\n-[[ccs-minimize-roundtrips]]\n-`ccs_minimize_roundtrips`::\n-  (Optional, boolean) If `true`, the network round-trips between the \n-  coordinating node and the remote clusters ewill be minimized when executing \n-  {ccs} requests. See <<ccs-network-delays>>. Defaults to `true`. \n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=from]\n-\n-`request_cache`::\n-  (Optional, boolean) If `true`, the caching of search results is enabled for \n-  requests where `size` is `0`. See <<shard-request-cache>>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df2053bc74482f7dc438fcc72f0d9ddc3a300bd1"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ3Nzk4Nw==", "bodyText": "Another good catch. Moved over with 013cca6.", "url": "https://github.com/elastic/elasticsearch/pull/56304#discussion_r421477987", "createdAt": "2020-05-07T12:50:37Z", "author": {"login": "jrodewig"}, "path": "docs/reference/search/request-body.asciidoc", "diffHunk": "@@ -37,106 +36,10 @@ The search request can be executed with a search DSL, which includes the\n \n include::{docdir}/rest-api/common-parms.asciidoc[tag=index]\n \n-\n [[search-request-body-api-request-body]]\n ==== {api-request-body-title}\n \n-`allow_partial_search_results`:: \n-  (Optional, boolean) Set to `false` to fail the request if only partial results \n-  are available. Defaults to `true`, which returns partial results in the event \n-  of timeouts or partial failures You can override the default behavior for all \n-  requests by setting `search.default_allow_partial_results` to `false` in the \n-  cluster settings.\n-\n-`batched_reduce_size`:: \n-  (Optional, integer) The number of shard results that should be reduced at once \n-  on the coordinating node. This value should be used as a protection mechanism \n-  to reduce the memory overhead per search request if the potential number of \n-  shards in the request can be large.\n-\n-[[ccs-minimize-roundtrips]]\n-`ccs_minimize_roundtrips`::\n-  (Optional, boolean) If `true`, the network round-trips between the \n-  coordinating node and the remote clusters ewill be minimized when executing \n-  {ccs} requests. See <<ccs-network-delays>>. Defaults to `true`. \n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=from]\n-\n-`request_cache`::\n-  (Optional, boolean) If `true`, the caching of search results is enabled for \n-  requests where `size` is `0`. See <<shard-request-cache>>.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM1MzM2Ng=="}, "originalCommit": {"oid": "df2053bc74482f7dc438fcc72f0d9ddc3a300bd1"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzE3NzAxOnYy", "diffSide": "LEFT", "path": "docs/reference/search/request-body.asciidoc", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOToyNDoxOFrOGR2Ebw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzozMToyNVrOGR-pPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2NDg0Nw==", "bodyText": "does this in reverse mean the batched_reduce_size and ccs_minimize_roundtrips should also go to the \"body\" section on the target page? Currently they seem to be only listed under Query Parameters. I don't know if they are allowed in both places tbh but we can check...", "url": "https://github.com/elastic/elasticsearch/pull/56304#discussion_r421364847", "createdAt": "2020-05-07T09:24:18Z", "author": {"login": "cbuescher"}, "path": "docs/reference/search/request-body.asciidoc", "diffHunk": "@@ -37,106 +36,10 @@ The search request can be executed with a search DSL, which includes the\n \n include::{docdir}/rest-api/common-parms.asciidoc[tag=index]\n \n-\n [[search-request-body-api-request-body]]\n ==== {api-request-body-title}\n \n-`allow_partial_search_results`:: \n-  (Optional, boolean) Set to `false` to fail the request if only partial results \n-  are available. Defaults to `true`, which returns partial results in the event \n-  of timeouts or partial failures You can override the default behavior for all \n-  requests by setting `search.default_allow_partial_results` to `false` in the \n-  cluster settings.\n-\n-`batched_reduce_size`:: \n-  (Optional, integer) The number of shard results that should be reduced at once \n-  on the coordinating node. This value should be used as a protection mechanism \n-  to reduce the memory overhead per search request if the potential number of \n-  shards in the request can be large.\n-\n-[[ccs-minimize-roundtrips]]\n-`ccs_minimize_roundtrips`::\n-  (Optional, boolean) If `true`, the network round-trips between the \n-  coordinating node and the remote clusters ewill be minimized when executing \n-  {ccs} requests. See <<ccs-network-delays>>. Defaults to `true`. \n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=from]\n-\n-`request_cache`::\n-  (Optional, boolean) If `true`, the caching of search results is enabled for \n-  requests where `size` is `0`. See <<shard-request-cache>>.\n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=search_type]\n-\n-`size`:: \n-  (Optional, integer) The number of hits to return. Defaults to `10`.\n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=terminate_after]\n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=search_timeout]\n-\n-\n-Out of the above, the `search_type`, `request_cache` and the \n-`allow_partial_search_results` settings must be passed as query-string ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df2053bc74482f7dc438fcc72f0d9ddc3a300bd1"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ3NzM3Nw==", "bodyText": "I tested this by running off the master branch and it appears that neither batched_reduce_size nor ccs_minimize_roundtrips are valid request body parameters. Both work fine as query parameters though.\nSetup\nPUT /my_index/_doc/0\n{\n  \"user\": \"kimchy\"\n}\n\nccs_minimize_roundtrips\nGET /my_index/_search\n{\n    \"ccs_minimize_roundtrips\": false,\n    \"query\" : {\n        \"term\" : { \"user\" : \"kimchy\" }\n    }\n}\n\nResponse:\n{\n  \"error\" : {\n    \"root_cause\" : [\n      {\n        \"type\" : \"parsing_exception\",\n        \"reason\" : \"Unknown key for a VALUE_BOOLEAN in [ccs_minimize_roundtrips].\",\n        \"line\" : 3,\n        \"col\" : 32\n      }\n    ],\n    \"type\" : \"parsing_exception\",\n    \"reason\" : \"Unknown key for a VALUE_BOOLEAN in [ccs_minimize_roundtrips].\",\n    \"line\" : 3,\n    \"col\" : 32\n  },\n  \"status\" : 400\n}\n\nbatched_reduce_size\nGET /my_index/_search\n{\n    \"batched_reduce_size\": 512,\n    \"query\" : {\n        \"term\" : { \"user\" : \"kimchy\" }\n    }\n}\n\nResponse:\n{\n  \"error\" : {\n    \"root_cause\" : [\n      {\n        \"type\" : \"parsing_exception\",\n        \"reason\" : \"Unknown key for a VALUE_NUMBER in [batched_reduce_size].\",\n        \"line\" : 3,\n        \"col\" : 28\n      }\n    ],\n    \"type\" : \"parsing_exception\",\n    \"reason\" : \"Unknown key for a VALUE_NUMBER in [batched_reduce_size].\",\n    \"line\" : 3,\n    \"col\" : 28\n  },\n  \"status\" : 400\n}", "url": "https://github.com/elastic/elasticsearch/pull/56304#discussion_r421477377", "createdAt": "2020-05-07T12:49:41Z", "author": {"login": "jrodewig"}, "path": "docs/reference/search/request-body.asciidoc", "diffHunk": "@@ -37,106 +36,10 @@ The search request can be executed with a search DSL, which includes the\n \n include::{docdir}/rest-api/common-parms.asciidoc[tag=index]\n \n-\n [[search-request-body-api-request-body]]\n ==== {api-request-body-title}\n \n-`allow_partial_search_results`:: \n-  (Optional, boolean) Set to `false` to fail the request if only partial results \n-  are available. Defaults to `true`, which returns partial results in the event \n-  of timeouts or partial failures You can override the default behavior for all \n-  requests by setting `search.default_allow_partial_results` to `false` in the \n-  cluster settings.\n-\n-`batched_reduce_size`:: \n-  (Optional, integer) The number of shard results that should be reduced at once \n-  on the coordinating node. This value should be used as a protection mechanism \n-  to reduce the memory overhead per search request if the potential number of \n-  shards in the request can be large.\n-\n-[[ccs-minimize-roundtrips]]\n-`ccs_minimize_roundtrips`::\n-  (Optional, boolean) If `true`, the network round-trips between the \n-  coordinating node and the remote clusters ewill be minimized when executing \n-  {ccs} requests. See <<ccs-network-delays>>. Defaults to `true`. \n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=from]\n-\n-`request_cache`::\n-  (Optional, boolean) If `true`, the caching of search results is enabled for \n-  requests where `size` is `0`. See <<shard-request-cache>>.\n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=search_type]\n-\n-`size`:: \n-  (Optional, integer) The number of hits to return. Defaults to `10`.\n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=terminate_after]\n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=search_timeout]\n-\n-\n-Out of the above, the `search_type`, `request_cache` and the \n-`allow_partial_search_results` settings must be passed as query-string ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2NDg0Nw=="}, "originalCommit": {"oid": "df2053bc74482f7dc438fcc72f0d9ddc3a300bd1"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUwNTM0MQ==", "bodyText": "Thanks for checking.", "url": "https://github.com/elastic/elasticsearch/pull/56304#discussion_r421505341", "createdAt": "2020-05-07T13:31:25Z", "author": {"login": "cbuescher"}, "path": "docs/reference/search/request-body.asciidoc", "diffHunk": "@@ -37,106 +36,10 @@ The search request can be executed with a search DSL, which includes the\n \n include::{docdir}/rest-api/common-parms.asciidoc[tag=index]\n \n-\n [[search-request-body-api-request-body]]\n ==== {api-request-body-title}\n \n-`allow_partial_search_results`:: \n-  (Optional, boolean) Set to `false` to fail the request if only partial results \n-  are available. Defaults to `true`, which returns partial results in the event \n-  of timeouts or partial failures You can override the default behavior for all \n-  requests by setting `search.default_allow_partial_results` to `false` in the \n-  cluster settings.\n-\n-`batched_reduce_size`:: \n-  (Optional, integer) The number of shard results that should be reduced at once \n-  on the coordinating node. This value should be used as a protection mechanism \n-  to reduce the memory overhead per search request if the potential number of \n-  shards in the request can be large.\n-\n-[[ccs-minimize-roundtrips]]\n-`ccs_minimize_roundtrips`::\n-  (Optional, boolean) If `true`, the network round-trips between the \n-  coordinating node and the remote clusters ewill be minimized when executing \n-  {ccs} requests. See <<ccs-network-delays>>. Defaults to `true`. \n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=from]\n-\n-`request_cache`::\n-  (Optional, boolean) If `true`, the caching of search results is enabled for \n-  requests where `size` is `0`. See <<shard-request-cache>>.\n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=search_type]\n-\n-`size`:: \n-  (Optional, integer) The number of hits to return. Defaults to `10`.\n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=terminate_after]\n-\n-include::{docdir}/rest-api/common-parms.asciidoc[tag=search_timeout]\n-\n-\n-Out of the above, the `search_type`, `request_cache` and the \n-`allow_partial_search_results` settings must be passed as query-string ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2NDg0Nw=="}, "originalCommit": {"oid": "df2053bc74482f7dc438fcc72f0d9ddc3a300bd1"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 701, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}