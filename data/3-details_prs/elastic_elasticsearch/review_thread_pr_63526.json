{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMDA0ODA1", "number": 63526, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODozNjozMFrOEv7KVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODozNjozMFrOEv7KVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Njg3ODI5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODozNjozMFrOHlLzLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxOTo1MDoxNFrOHlOeFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc1MjY4NA==", "bodyText": "Now that we're sure comparators will never be empty, do you think it is worth making these two changes?", "url": "https://github.com/elastic/elasticsearch/pull/63526#discussion_r508752684", "createdAt": "2020-10-20T18:36:30Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java", "diffHunk": "@@ -185,25 +188,27 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n                     .map(oe -> oe.partiallyBuiltBucketComparator(ordinalReader, aggregator))\n                     .collect(toList());\n             return (lhs, rhs) -> {\n-                Iterator<Comparator<T>> itr = comparators.iterator();\n-                int result;\n-                do {\n-                    result = itr.next().compare(lhs, rhs);\n-                } while (result == 0 && itr.hasNext());\n-                return result;\n+                for (Comparator<T> c : comparators) {\n+                    int result = c.compare(lhs, rhs);\n+                    if (result != 0) {\n+                        return result;\n+                    }\n+                }\n+                return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70818166d09f9eecf997f48b21198680dc9fbec2"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc2MDA1Mg==", "bodyText": "These changes aren't necessary, yes. I would keep them because (a) the new code is about the same complexity as the old one and (b) in case the nonempty restriction gets dropped in the future you don't need to remember to update these places.\nBut, it's a minor thing, so I'd say it's up to you if you want it or not.", "url": "https://github.com/elastic/elasticsearch/pull/63526#discussion_r508760052", "createdAt": "2020-10-20T18:45:21Z", "author": {"login": "rgrig"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java", "diffHunk": "@@ -185,25 +188,27 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n                     .map(oe -> oe.partiallyBuiltBucketComparator(ordinalReader, aggregator))\n                     .collect(toList());\n             return (lhs, rhs) -> {\n-                Iterator<Comparator<T>> itr = comparators.iterator();\n-                int result;\n-                do {\n-                    result = itr.next().compare(lhs, rhs);\n-                } while (result == 0 && itr.hasNext());\n-                return result;\n+                for (Comparator<T> c : comparators) {\n+                    int result = c.compare(lhs, rhs);\n+                    if (result != 0) {\n+                        return result;\n+                    }\n+                }\n+                return 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc1MjY4NA=="}, "originalCommit": {"oid": "70818166d09f9eecf997f48b21198680dc9fbec2"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc5NjQzNg==", "bodyText": "Yeah, I think this fine, sure. I'll keep it!", "url": "https://github.com/elastic/elasticsearch/pull/63526#discussion_r508796436", "createdAt": "2020-10-20T19:50:14Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java", "diffHunk": "@@ -185,25 +188,27 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n                     .map(oe -> oe.partiallyBuiltBucketComparator(ordinalReader, aggregator))\n                     .collect(toList());\n             return (lhs, rhs) -> {\n-                Iterator<Comparator<T>> itr = comparators.iterator();\n-                int result;\n-                do {\n-                    result = itr.next().compare(lhs, rhs);\n-                } while (result == 0 && itr.hasNext());\n-                return result;\n+                for (Comparator<T> c : comparators) {\n+                    int result = c.compare(lhs, rhs);\n+                    if (result != 0) {\n+                        return result;\n+                    }\n+                }\n+                return 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc1MjY4NA=="}, "originalCommit": {"oid": "70818166d09f9eecf997f48b21198680dc9fbec2"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3097, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}