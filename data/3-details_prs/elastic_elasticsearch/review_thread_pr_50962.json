{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNTYwMzk0", "number": 50962, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjowOTo1NFrODX5xvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjoxMDowN1rODX5yAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MzkwNDYxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjowOTo1NFrOFddDUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMDowNToyMFrOFdkOfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyOTAxMQ==", "bodyText": "Is this case tested?", "url": "https://github.com/elastic/elasticsearch/pull/50962#discussion_r366429011", "createdAt": "2020-01-14T16:09:54Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "diffHunk": "@@ -21,17 +23,38 @@\n     \n     public enum MathOperation {\n         ABS((Object l) -> {\n-            if (l instanceof Float) {\n-                return Double.valueOf(Math.abs(((Float) l).floatValue()));\n-            }\n             if (l instanceof Double) {\n                 return Math.abs(((Double) l).doubleValue());\n             }\n+            if (l instanceof Float) {\n+                return Double.valueOf(Math.abs(((Float) l).floatValue()));\n+            }\n+\n+            // fallback to integer\n             long lo = ((Number) l).longValue();\n-            //handles the corner-case of Long.MIN_VALUE\n-            return lo >= 0 ? lo : lo == Long.MIN_VALUE ? Double.valueOf(Long.MAX_VALUE) : -lo;\n-        }),\n \n+            if (lo == Long.MIN_VALUE) {\n+                throw new QlIllegalArgumentException(\"[\" + lo + \"] cannot be negated since the result is outside the range\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02340f996b5076d5e1cd6fa267cdf75ca269474b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU0NjU1OQ==", "bodyText": "It is now", "url": "https://github.com/elastic/elasticsearch/pull/50962#discussion_r366546559", "createdAt": "2020-01-14T20:05:20Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "diffHunk": "@@ -21,17 +23,38 @@\n     \n     public enum MathOperation {\n         ABS((Object l) -> {\n-            if (l instanceof Float) {\n-                return Double.valueOf(Math.abs(((Float) l).floatValue()));\n-            }\n             if (l instanceof Double) {\n                 return Math.abs(((Double) l).doubleValue());\n             }\n+            if (l instanceof Float) {\n+                return Double.valueOf(Math.abs(((Float) l).floatValue()));\n+            }\n+\n+            // fallback to integer\n             long lo = ((Number) l).longValue();\n-            //handles the corner-case of Long.MIN_VALUE\n-            return lo >= 0 ? lo : lo == Long.MIN_VALUE ? Double.valueOf(Long.MAX_VALUE) : -lo;\n-        }),\n \n+            if (lo == Long.MIN_VALUE) {\n+                throw new QlIllegalArgumentException(\"[\" + lo + \"] cannot be negated since the result is outside the range\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyOTAxMQ=="}, "originalCommit": {"oid": "02340f996b5076d5e1cd6fa267cdf75ca269474b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MzkwNTI5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjoxMDowN1rOFddDzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMDowNTozNFrOFdkO5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyOTEzMg==", "bodyText": "This also?", "url": "https://github.com/elastic/elasticsearch/pull/50962#discussion_r366429132", "createdAt": "2020-01-14T16:10:07Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "diffHunk": "@@ -21,17 +23,38 @@\n     \n     public enum MathOperation {\n         ABS((Object l) -> {\n-            if (l instanceof Float) {\n-                return Double.valueOf(Math.abs(((Float) l).floatValue()));\n-            }\n             if (l instanceof Double) {\n                 return Math.abs(((Double) l).doubleValue());\n             }\n+            if (l instanceof Float) {\n+                return Double.valueOf(Math.abs(((Float) l).floatValue()));\n+            }\n+\n+            // fallback to integer\n             long lo = ((Number) l).longValue();\n-            //handles the corner-case of Long.MIN_VALUE\n-            return lo >= 0 ? lo : lo == Long.MIN_VALUE ? Double.valueOf(Long.MAX_VALUE) : -lo;\n-        }),\n \n+            if (lo == Long.MIN_VALUE) {\n+                throw new QlIllegalArgumentException(\"[\" + lo + \"] cannot be negated since the result is outside the range\");\n+            }\n+\n+            lo = lo < 0 ? -lo : lo;\n+\n+            if (l instanceof Integer) {\n+                if (lo == Integer.MIN_VALUE) {\n+                    throw new QlIllegalArgumentException(\"[\" + lo + \"] cannot be negated since the result is outside the range\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02340f996b5076d5e1cd6fa267cdf75ca269474b"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU0NjY2Mg==", "bodyText": "Added basic test", "url": "https://github.com/elastic/elasticsearch/pull/50962#discussion_r366546662", "createdAt": "2020-01-14T20:05:34Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "diffHunk": "@@ -21,17 +23,38 @@\n     \n     public enum MathOperation {\n         ABS((Object l) -> {\n-            if (l instanceof Float) {\n-                return Double.valueOf(Math.abs(((Float) l).floatValue()));\n-            }\n             if (l instanceof Double) {\n                 return Math.abs(((Double) l).doubleValue());\n             }\n+            if (l instanceof Float) {\n+                return Double.valueOf(Math.abs(((Float) l).floatValue()));\n+            }\n+\n+            // fallback to integer\n             long lo = ((Number) l).longValue();\n-            //handles the corner-case of Long.MIN_VALUE\n-            return lo >= 0 ? lo : lo == Long.MIN_VALUE ? Double.valueOf(Long.MAX_VALUE) : -lo;\n-        }),\n \n+            if (lo == Long.MIN_VALUE) {\n+                throw new QlIllegalArgumentException(\"[\" + lo + \"] cannot be negated since the result is outside the range\");\n+            }\n+\n+            lo = lo < 0 ? -lo : lo;\n+\n+            if (l instanceof Integer) {\n+                if (lo == Integer.MIN_VALUE) {\n+                    throw new QlIllegalArgumentException(\"[\" + lo + \"] cannot be negated since the result is outside the range\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyOTEzMg=="}, "originalCommit": {"oid": "02340f996b5076d5e1cd6fa267cdf75ca269474b"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4699, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}