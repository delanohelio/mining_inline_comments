{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxODk3NTU0", "number": 65832, "title": "Make AntFixture handling task provider api compliant", "bodyText": "This tweaks the AntFixture handling to make it compliant with the task avoidance api.\nTasks of type StandaloneRestTestTask are now generally finalised by using the typed ant stop task\nwhich allows us to remove of errorprone dependsOn overrides in StandaloneRestTestTask. As a result\nwe also ported more task definitions in the build to task avoidance api.\nNext work item regarding AntFixture handling is porting AntFixture to a plain Gradle task and remove\nGroovy AntBuilder will allow us to port more build logic from Groovy to Java but is out of the scope of\nThis PR.", "createdAt": "2020-12-03T16:11:09Z", "url": "https://github.com/elastic/elasticsearch/pull/65832", "merged": true, "mergeCommit": {"oid": "0911d04467ef3f507321a3b92ec831478a5b66cc"}, "closed": true, "closedAt": "2020-12-08T12:07:36Z", "author": {"login": "breskeby"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjyzAYgFqTU0NjAwNDI1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkHKJwABqjQwODM5MjgwNTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MDA0MjU0", "url": "https://github.com/elastic/elasticsearch/pull/65832#pullrequestreview-546004254", "createdAt": "2020-12-07T10:15:32Z", "commit": {"oid": "39c67ec7126477ed6f7d1ac8fb3796311dde03af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDoxNTozM1rOIAfa5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDoxNTozM1rOIAfa5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM4NTcwMg==", "bodyText": "My Groovy knowledge is weak - does this result in a lazily-evaluated string that returns a PID?", "url": "https://github.com/elastic/elasticsearch/pull/65832#discussion_r537385702", "createdAt": "2020-12-07T10:15:33Z", "author": {"login": "pugnascotia"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/AntFixtureStop.groovy", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle\n+\n+import org.apache.tools.ant.taskdefs.condition.Os\n+import org.elasticsearch.gradle.test.AntFixture\n+import org.gradle.api.file.FileSystemOperations\n+import org.gradle.api.tasks.Internal\n+\n+import javax.inject.Inject\n+\n+class AntFixtureStop extends LoggedExec implements FixtureStop {\n+\n+    @Internal\n+    AntFixture fixture\n+\n+    @Internal\n+    FileSystemOperations fileSystemOperations\n+\n+    @Inject\n+    AntFixtureStop(FileSystemOperations fileSystemOperations) {\n+        super(fileSystemOperations)\n+        this.fileSystemOperations = fileSystemOperations\n+    }\n+\n+    void setFixture(AntFixture fixture) {\n+        assert this.fixture == null\n+        this.fixture = fixture;\n+        final Object pid = \"${ -> this.fixture.pid }\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39c67ec7126477ed6f7d1ac8fb3796311dde03af"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MDE1NDQx", "url": "https://github.com/elastic/elasticsearch/pull/65832#pullrequestreview-546015441", "createdAt": "2020-12-07T10:29:13Z", "commit": {"oid": "39c67ec7126477ed6f7d1ac8fb3796311dde03af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDoyOToxM1rOIAf_WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDoyOToxM1rOIAf_WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM5NTAzMg==", "bodyText": "Does your editor not insert a trailing newline?", "url": "https://github.com/elastic/elasticsearch/pull/65832#discussion_r537395032", "createdAt": "2020-12-07T10:29:13Z", "author": {"login": "pugnascotia"}, "path": "plugins/discovery-ec2/qa/amazon-ec2/build.gradle", "diffHunk": "@@ -64,61 +66,66 @@ yamlRestTest.enabled = false\n  * custom Java security policy to work.\n  */\n ['KeyStore', 'EnvVariables', 'SystemProperties', 'ContainerCredentials', 'InstanceProfile'].forEach { action ->\n-  AntFixture fixture = tasks.create(name: \"ec2Fixture${action}\", type: AntFixture) {\n+  TaskProvider<AntFixture> fixture = tasks.register(\"ec2Fixture${action}\", AntFixture) {\n     dependsOn project.sourceSets.yamlRestTest.runtimeClasspath\n     env 'CLASSPATH', \"${-> project.sourceSets.yamlRestTest.runtimeClasspath.asPath}\"\n     executable = \"${BuildParams.runtimeJavaHome}/bin/java\"\n     args 'org.elasticsearch.discovery.ec2.AmazonEC2Fixture', baseDir, \"${buildDir}/testclusters/yamlRestTest${action}-1/config/unicast_hosts.txt\"\n   }\n \n-  tasks.create(name: \"yamlRestTest${action}\", type: RestIntegTestTask) {\n+  def yamlRestTestTask = tasks.register(\"yamlRestTest${action}\", RestIntegTestTask) {\n     dependsOn fixture\n+    SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+    SourceSet yamlRestTestSourceSet = sourceSets.getByName(YamlRestTestPlugin.SOURCE_SET_NAME)\n+    testClassesDirs = yamlRestTestSourceSet.getOutput().getClassesDirs()\n+    classpath = yamlRestTestSourceSet.getRuntimeClasspath()\n   }\n-  SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n-  SourceSet yamlRestTestSourceSet = sourceSets.getByName(YamlRestTestPlugin.SOURCE_SET_NAME)\n-  \"yamlRestTest${action}\" {\n-    setTestClassesDirs(yamlRestTestSourceSet.getOutput().getClassesDirs())\n-    setClasspath(yamlRestTestSourceSet.getRuntimeClasspath())\n+\n+  tasks.named(\"check\").configure {\n+    dependsOn(yamlRestTestTask)\n   }\n-  check.dependsOn(\"yamlRestTest${action}\")\n \n-  testClusters.\"yamlRestTest${action}\" {\n+  testClusters.matching { it.name == yamlRestTestTask.name}.configureEach {\n     numberOfNodes = ec2NumberOfNodes\n     plugin ':plugins:discovery-ec2'\n \n     setting 'discovery.seed_providers', 'ec2'\n     setting 'network.host', '_ec2_'\n-    setting 'discovery.ec2.endpoint', { \"http://${-> fixture.addressAndPort}\" }, IGNORE_VALUE\n+    setting 'discovery.ec2.endpoint', { \"http://${-> fixture.get().addressAndPort}\" }, IGNORE_VALUE\n \n-    systemProperty \"com.amazonaws.sdk.ec2MetadataServiceEndpointOverride\", { \"http://${-> fixture.addressAndPort}\" }, IGNORE_VALUE\n+    systemProperty \"com.amazonaws.sdk.ec2MetadataServiceEndpointOverride\", { \"http://${-> fixture.get().addressAndPort}\" }, IGNORE_VALUE\n   }\n }\n \n // Extra config for KeyStore\n-testClusters.yamlRestTestKeyStore {\n+testClusters.matching { it.name == \"yamlRestTestKeyStore\" }.configureEach {\n   keystore 'discovery.ec2.access_key', 'ec2_integration_test_access_key'\n   keystore 'discovery.ec2.secret_key', 'ec2_integration_test_secret_key'\n }\n \n // Extra config for EnvVariables\n-testClusters.yamlRestTestEnvVariables {\n+testClusters.matching { it.name == \"yamlRestTestEnvVariables\" }.configureEach {\n   environment 'AWS_ACCESS_KEY_ID', 'ec2_integration_test_access_key'\n   environment 'AWS_SECRET_ACCESS_KEY', 'ec2_integration_test_secret_key'\n }\n \n // Extra config for SystemProperties\n-testClusters.yamlRestTestSystemProperties {\n+testClusters.matching { it.name == \"yamlRestTestSystemProperties\" }.configureEach {\n   systemProperty 'aws.accessKeyId', 'ec2_integration_test_access_key'\n   systemProperty 'aws.secretKey', 'ec2_integration_test_secret_key'\n }\n \n // Extra config for ContainerCredentials\n-ec2FixtureContainerCredentials.env 'ACTIVATE_CONTAINER_CREDENTIALS', true\n+tasks.named(\"ec2FixtureContainerCredentials\").configure {\n+  env 'ACTIVATE_CONTAINER_CREDENTIALS', true\n+}\n \n-testClusters.yamlRestTestContainerCredentials {\n+testClusters.matching { it.name == \"yamlRestTestContainerCredentials\" }.configureEach {\n   environment 'AWS_CONTAINER_CREDENTIALS_FULL_URI',\n     { \"http://${-> tasks.findByName(\"ec2FixtureContainerCredentials\").addressAndPort}/ecs_credentials_endpoint\" }, IGNORE_VALUE\n }\n \n // Extra config for InstanceProfile\n-ec2FixtureInstanceProfile.env 'ACTIVATE_INSTANCE_PROFILE', true\n+tasks.named(\"ec2FixtureInstanceProfile\").configure {\n+  env 'ACTIVATE_INSTANCE_PROFILE', true\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39c67ec7126477ed6f7d1ac8fb3796311dde03af"}, "originalPosition": 101}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MDYxODk5", "url": "https://github.com/elastic/elasticsearch/pull/65832#pullrequestreview-546061899", "createdAt": "2020-12-07T11:31:42Z", "commit": {"oid": "39c67ec7126477ed6f7d1ac8fb3796311dde03af"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45f75a6dc3264799c5917d8194c814ebb0a1b7e2", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/45f75a6dc3264799c5917d8194c814ebb0a1b7e2", "committedDate": "2020-12-08T09:58:10Z", "message": "Port hdfs test fixture creation to use tapi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5e152251798a680767d7986273f6373b580f3b2", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/b5e152251798a680767d7986273f6373b580f3b2", "committedDate": "2020-12-08T09:58:10Z", "message": "Port hdfs fixtures and test tasks to tapi\n\n- Our test fixture setup needs rework to work properly with task avoidance api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ce5e39a39fa5b835c8f7f3a063f396f68117431", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/2ce5e39a39fa5b835c8f7f3a063f396f68117431", "committedDate": "2020-12-08T09:58:11Z", "message": "Add note about tapi incompatible fixture setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34a16cb4097eb4d43d6d993396771b47394fa5d8", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/34a16cb4097eb4d43d6d993396771b47394fa5d8", "committedDate": "2020-12-08T09:58:11Z", "message": "Simplify AntFixture stop task handling\n\n- removes errorprone dependsOn override"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "890fd8242ffe8b6b5579a046b7d3de8f882cbc27", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/890fd8242ffe8b6b5579a046b7d3de8f882cbc27", "committedDate": "2020-12-08T09:58:11Z", "message": "Port more Antfixture task definitions to use tapi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d822d9d8fcc6680ebde0d9f44c10930bd6e0501", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/8d822d9d8fcc6680ebde0d9f44c10930bd6e0501", "committedDate": "2020-12-08T09:58:11Z", "message": "Fix formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78a938e0668c28c366c6b0e9657498be5dab7216", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/78a938e0668c28c366c6b0e9657498be5dab7216", "committedDate": "2020-12-08T09:58:11Z", "message": "Minor formatting issue (trailing new line added)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39c67ec7126477ed6f7d1ac8fb3796311dde03af", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/39c67ec7126477ed6f7d1ac8fb3796311dde03af", "committedDate": "2020-12-06T08:59:36Z", "message": "Fix formatting"}, "afterCommit": {"oid": "78a938e0668c28c366c6b0e9657498be5dab7216", "author": {"user": {"login": "breskeby", "name": "Rene Groeschke"}}, "url": "https://github.com/elastic/elasticsearch/commit/78a938e0668c28c366c6b0e9657498be5dab7216", "committedDate": "2020-12-08T09:58:11Z", "message": "Minor formatting issue (trailing new line added)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4161, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}