{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyOTM0ODc0", "number": 51018, "title": "\"did you mean\" for ObjectParser with top named", "bodyText": "When you declare an ObjectParser with top level named objects like we do\nwith significant_terms we didn't support \"did you mean\". This fixes\nthat.\nRelates #50938", "createdAt": "2020-01-15T03:11:34Z", "url": "https://github.com/elastic/elasticsearch/pull/51018", "merged": true, "mergeCommit": {"oid": "224640a3caea4bd1687b4f060fcf3b9fb410058a"}, "closed": true, "closedAt": "2020-01-17T15:41:15Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6csrqgH2gAyMzYyOTM0ODc0OmQzZjcyODFjNWM1YWIzOTg3MjRmNTBhOWEwM2U0OWM0NTA1NzMyNjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb63L32gFqTM0Mzc5NDQ1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d3f7281c5c5ab398724f50a9a03e49c450573268", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/d3f7281c5c5ab398724f50a9a03e49c450573268", "committedDate": "2020-01-15T03:08:41Z", "message": "\"did you mean\" for ObjectParser with top named\n\nWhen you declare an ObjectParser with top level named objects like we do\nwith `significant_terms` we didn't support \"did you mean\". This fixes\nthat.\n\nRelates #50938"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTY5MjIz", "url": "https://github.com/elastic/elasticsearch/pull/51018#pullrequestreview-342969223", "createdAt": "2020-01-15T03:17:31Z", "commit": {"oid": "d3f7281c5c5ab398724f50a9a03e49c450573268"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMzoxNzozMlrOFdsWYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMzoxNzo0N1rOFdsWlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY3OTY1MQ==", "bodyText": "All of the exceptions that I changed to XContentParseException  are really more development errors than usage errors.", "url": "https://github.com/elastic/elasticsearch/pull/51018#discussion_r366679651", "createdAt": "2020-01-15T03:17:32Z", "author": {"login": "nik9000"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/NamedXContentRegistry.java", "diffHunk": "@@ -123,19 +123,18 @@ public NamedXContentRegistry(List<Entry> entries) {\n         if (parsers == null) {\n             if (registry.isEmpty()) {\n                 // The \"empty\" registry will never work so we throw a better exception as a hint.\n-                throw new NamedObjectNotFoundException(\"named objects are not supported for this parser\");\n+                throw new XContentParseException(\"named objects are not supported for this parser\");\n             }\n-            throw new NamedObjectNotFoundException(\"unknown named object category [\" + categoryClass.getName() + \"]\");\n+            throw new XContentParseException(\"unknown named object category [\" + categoryClass.getName() + \"]\");\n         }\n         Entry entry = parsers.get(name);\n         if (entry == null) {\n-            throw new NamedObjectNotFoundException(parser.getTokenLocation(), \"unable to parse \" + categoryClass.getSimpleName() +\n-                \" with name [\" + name + \"]: parser not found\");\n+            throw new NamedObjectNotFoundException(parser.getTokenLocation(), \"unknown field [\" + name + \"]\", parsers.keySet());\n         }\n         if (false == entry.name.match(name, parser.getDeprecationHandler())) {\n             /* Note that this shouldn't happen because we already looked up the entry using the names but we need to call `match` anyway\n              * because it is responsible for logging deprecation warnings. */\n-            throw new NamedObjectNotFoundException(parser.getTokenLocation(),\n+            throw new XContentParseException(parser.getTokenLocation(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3f7281c5c5ab398724f50a9a03e49c450573268"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY3OTcwMg==", "bodyText": "And they don't have the critical candidates set.", "url": "https://github.com/elastic/elasticsearch/pull/51018#discussion_r366679702", "createdAt": "2020-01-15T03:17:47Z", "author": {"login": "nik9000"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/NamedXContentRegistry.java", "diffHunk": "@@ -123,19 +123,18 @@ public NamedXContentRegistry(List<Entry> entries) {\n         if (parsers == null) {\n             if (registry.isEmpty()) {\n                 // The \"empty\" registry will never work so we throw a better exception as a hint.\n-                throw new NamedObjectNotFoundException(\"named objects are not supported for this parser\");\n+                throw new XContentParseException(\"named objects are not supported for this parser\");\n             }\n-            throw new NamedObjectNotFoundException(\"unknown named object category [\" + categoryClass.getName() + \"]\");\n+            throw new XContentParseException(\"unknown named object category [\" + categoryClass.getName() + \"]\");\n         }\n         Entry entry = parsers.get(name);\n         if (entry == null) {\n-            throw new NamedObjectNotFoundException(parser.getTokenLocation(), \"unable to parse \" + categoryClass.getSimpleName() +\n-                \" with name [\" + name + \"]: parser not found\");\n+            throw new NamedObjectNotFoundException(parser.getTokenLocation(), \"unknown field [\" + name + \"]\", parsers.keySet());\n         }\n         if (false == entry.name.match(name, parser.getDeprecationHandler())) {\n             /* Note that this shouldn't happen because we already looked up the entry using the names but we need to call `match` anyway\n              * because it is responsible for logging deprecation warnings. */\n-            throw new NamedObjectNotFoundException(parser.getTokenLocation(),\n+            throw new XContentParseException(parser.getTokenLocation(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY3OTY1MQ=="}, "originalCommit": {"oid": "d3f7281c5c5ab398724f50a9a03e49c450573268"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49c64ba9d20bd15453e010a9c2eb285cfd48e167", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/49c64ba9d20bd15453e010a9c2eb285cfd48e167", "committedDate": "2020-01-15T15:39:22Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cab84949ff3a5d2897052f182d05210955997ace", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/cab84949ff3a5d2897052f182d05210955997ace", "committedDate": "2020-01-15T19:54:40Z", "message": "Merge branch 'master' into object_parser_did_you_mean_named"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNzk0NDU1", "url": "https://github.com/elastic/elasticsearch/pull/51018#pullrequestreview-343794455", "createdAt": "2020-01-16T10:00:17Z", "commit": {"oid": "cab84949ff3a5d2897052f182d05210955997ace"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3085, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}