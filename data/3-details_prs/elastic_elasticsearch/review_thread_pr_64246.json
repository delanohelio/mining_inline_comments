{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMDM3MDc2", "number": 64246, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNTowMToyMlrOEy2w_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNTowMToyMlrOEy2w_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzYxNTMzOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/NumericHistogramAggregatorTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNTowMToyMlrOHpukvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNTo0ODoxMVrOHpw4aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxNjczMw==", "bodyText": "I'm confused, is this a different test than the one above it?  If so, I'm missing what's different.", "url": "https://github.com/elastic/elasticsearch/pull/64246#discussion_r513516733", "createdAt": "2020-10-28T15:01:22Z", "author": {"login": "not-napoleon"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/NumericHistogramAggregatorTests.java", "diffHunk": "@@ -428,6 +428,53 @@ public void testExtendedBounds() throws Exception {\n         }\n     }\n \n+    public void testHardBoundsOnDouble() throws Exception {\n+        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n+            for (double value : new double[] { 3.2, -5, -4.5, 4.3 }) {\n+                Document doc = new Document();\n+                doc.add(new SortedNumericDocValuesField(\"field\", NumericUtils.doubleToSortableLong(value)));\n+                w.addDocument(doc);\n+            }\n+\n+            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\")\n+                .interval(5)\n+                .hardBounds(new DoubleBounds(0.0, 10.0));\n+            MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.DOUBLE);\n+            try (IndexReader reader = w.getReader()) {\n+                IndexSearcher searcher = new IndexSearcher(reader);\n+                InternalHistogram histogram = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n+                assertEquals(1, histogram.getBuckets().size());\n+                assertEquals(0d, histogram.getBuckets().get(0).getKey());\n+                assertEquals(2, histogram.getBuckets().get(0).getDocCount());\n+                assertTrue(AggregationInspectionHelper.hasValue(histogram));\n+            }\n+        }\n+    }\n+\n+    public void testHardBoundsOnHistogram() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c273d7e94b5ffdc27cfadf239d196b9aa65992b9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU1NDUzOQ==", "bodyText": "No, it's the same, I will remove it. Thanks for catching it! I was going to turn it this into a histogram field test before I realized that I cannot put it here and it needs to go into x-pack because of dependencies.", "url": "https://github.com/elastic/elasticsearch/pull/64246#discussion_r513554539", "createdAt": "2020-10-28T15:48:11Z", "author": {"login": "imotov"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/NumericHistogramAggregatorTests.java", "diffHunk": "@@ -428,6 +428,53 @@ public void testExtendedBounds() throws Exception {\n         }\n     }\n \n+    public void testHardBoundsOnDouble() throws Exception {\n+        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n+            for (double value : new double[] { 3.2, -5, -4.5, 4.3 }) {\n+                Document doc = new Document();\n+                doc.add(new SortedNumericDocValuesField(\"field\", NumericUtils.doubleToSortableLong(value)));\n+                w.addDocument(doc);\n+            }\n+\n+            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\")\n+                .interval(5)\n+                .hardBounds(new DoubleBounds(0.0, 10.0));\n+            MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.DOUBLE);\n+            try (IndexReader reader = w.getReader()) {\n+                IndexSearcher searcher = new IndexSearcher(reader);\n+                InternalHistogram histogram = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n+                assertEquals(1, histogram.getBuckets().size());\n+                assertEquals(0d, histogram.getBuckets().get(0).getKey());\n+                assertEquals(2, histogram.getBuckets().get(0).getDocCount());\n+                assertTrue(AggregationInspectionHelper.hasValue(histogram));\n+            }\n+        }\n+    }\n+\n+    public void testHardBoundsOnHistogram() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxNjczMw=="}, "originalCommit": {"oid": "c273d7e94b5ffdc27cfadf239d196b9aa65992b9"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4232, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}