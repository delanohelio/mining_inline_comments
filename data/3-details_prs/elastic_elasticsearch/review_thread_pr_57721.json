{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NDIxMDQz", "number": 57721, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMDoyODo0NFrOEDFtOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxNDoxODo0NFrOEDPVqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjc0NjgyOnYy", "diffSide": "RIGHT", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/indices.data_stream/10_basic.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMDoyODo0NFrOGf8b0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMDoyODo0NFrOGf8b0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE0OTIwMQ==", "bodyText": "TIL that JSON paths in the YAML tests beginning with . have to be escaped.", "url": "https://github.com/elastic/elasticsearch/pull/57721#discussion_r436149201", "createdAt": "2020-06-05T20:28:44Z", "author": {"login": "danhermann"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/indices.data_stream/10_basic.yml", "diffHunk": "@@ -178,18 +178,18 @@ setup:\n \n   - do:\n       indices.get:\n-        index: ['simple-data-stream1-000001', 'test_index']\n+        index: ['.ds-simple-data-stream1-000001', 'test_index']\n \n   - is_true: test_index.settings\n-  - is_true: simple-data-stream1-000001.settings\n+  - is_true: \\.ds-simple-data-stream1-000001.settings", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56fd4731d3505d97614459527a662930c6ea2bad"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODMyMTg0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxNDoxNDoxOVrOGgJw8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxNDoxNDoxOVrOGgJw8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM2NzYwMA==", "bodyText": "Maybe turn .ds- into a constant?", "url": "https://github.com/elastic/elasticsearch/pull/57721#discussion_r436367600", "createdAt": "2020-06-07T14:14:19Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "diffHunk": "@@ -101,15 +101,15 @@ public DataStream removeBackingIndex(Index index) {\n     }\n \n     /**\n-     * Generates the name of the index that conforms to the naming convention for backing indices\n+     * Generates the name of the index that conforms to the default naming convention for backing indices\n      * on data streams given the specified data stream name and generation.\n      *\n      * @param dataStreamName name of the data stream\n      * @param generation generation of the data stream\n      * @return backing index name\n      */\n-    public static String getBackingIndexName(String dataStreamName, long generation) {\n-        return String.format(Locale.ROOT, \"%s-%06d\", dataStreamName, generation);\n+    public static String getDefaultBackingIndexName(String dataStreamName, long generation) {\n+        return String.format(Locale.ROOT, \".ds-%s-%06d\", dataStreamName, generation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da2cc2b04b83822b0400cd7603ab14f29e23aec4"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODMyNDg4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxNDoxODo0NFrOGgJynA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNToyNzo1NVrOGgPndw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM2ODAyOA==", "bodyText": "Maybe also add a unit test just for this method? This method is used in many unit / integ tests to validate the naming of backing indices and these tests wouldn't fail if an unintended was made to this method. In later stage the rest or docs test would fail.", "url": "https://github.com/elastic/elasticsearch/pull/57721#discussion_r436368028", "createdAt": "2020-06-07T14:18:44Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "diffHunk": "@@ -101,15 +101,15 @@ public DataStream removeBackingIndex(Index index) {\n     }\n \n     /**\n-     * Generates the name of the index that conforms to the naming convention for backing indices\n+     * Generates the name of the index that conforms to the default naming convention for backing indices\n      * on data streams given the specified data stream name and generation.\n      *\n      * @param dataStreamName name of the data stream\n      * @param generation generation of the data stream\n      * @return backing index name\n      */\n-    public static String getBackingIndexName(String dataStreamName, long generation) {\n-        return String.format(Locale.ROOT, \"%s-%06d\", dataStreamName, generation);\n+    public static String getDefaultBackingIndexName(String dataStreamName, long generation) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da2cc2b04b83822b0400cd7603ab14f29e23aec4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNzkzMQ==", "bodyText": "@martijnvg, is the unit test in ec48a95 along the lines of what you were suggesting?", "url": "https://github.com/elastic/elasticsearch/pull/57721#discussion_r436407931", "createdAt": "2020-06-07T22:30:29Z", "author": {"login": "danhermann"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "diffHunk": "@@ -101,15 +101,15 @@ public DataStream removeBackingIndex(Index index) {\n     }\n \n     /**\n-     * Generates the name of the index that conforms to the naming convention for backing indices\n+     * Generates the name of the index that conforms to the default naming convention for backing indices\n      * on data streams given the specified data stream name and generation.\n      *\n      * @param dataStreamName name of the data stream\n      * @param generation generation of the data stream\n      * @return backing index name\n      */\n-    public static String getBackingIndexName(String dataStreamName, long generation) {\n-        return String.format(Locale.ROOT, \"%s-%06d\", dataStreamName, generation);\n+    public static String getDefaultBackingIndexName(String dataStreamName, long generation) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM2ODAyOA=="}, "originalCommit": {"oid": "da2cc2b04b83822b0400cd7603ab14f29e23aec4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2MzQ3OQ==", "bodyText": "yes", "url": "https://github.com/elastic/elasticsearch/pull/57721#discussion_r436463479", "createdAt": "2020-06-08T05:27:55Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "diffHunk": "@@ -101,15 +101,15 @@ public DataStream removeBackingIndex(Index index) {\n     }\n \n     /**\n-     * Generates the name of the index that conforms to the naming convention for backing indices\n+     * Generates the name of the index that conforms to the default naming convention for backing indices\n      * on data streams given the specified data stream name and generation.\n      *\n      * @param dataStreamName name of the data stream\n      * @param generation generation of the data stream\n      * @return backing index name\n      */\n-    public static String getBackingIndexName(String dataStreamName, long generation) {\n-        return String.format(Locale.ROOT, \"%s-%06d\", dataStreamName, generation);\n+    public static String getDefaultBackingIndexName(String dataStreamName, long generation) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM2ODAyOA=="}, "originalCommit": {"oid": "da2cc2b04b83822b0400cd7603ab14f29e23aec4"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3707, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}