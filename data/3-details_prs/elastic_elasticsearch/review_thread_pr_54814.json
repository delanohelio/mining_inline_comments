{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5Njg4NDA2", "number": 54814, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzozNjoxNFrODvq0yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzozNjoxNFrODvq0yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzExMzA1OnYy", "diffSide": "RIGHT", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzozNjoxNFrOGCOs3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxODozNzoxM1rOGDkwaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MTE5Ng==", "bodyText": "component creation (ie services created by plugins) should happen almost last within node initialization. I don't think we should be passing in a Supplier. Instead, we should move the call to createComponents down later, so that we have the RepositoriesService.", "url": "https://github.com/elastic/elasticsearch/pull/54814#discussion_r404991196", "createdAt": "2020-04-07T17:36:14Z", "author": {"login": "rjernst"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java", "diffHunk": "@@ -115,7 +116,8 @@ public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<\n                                                ResourceWatcherService resourceWatcherService, ScriptService scriptService,\n                                                NamedXContentRegistry xContentRegistry, Environment environment,\n                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry,\n-                                               IndexNameExpressionResolver expressionResolver) {\n+                                               IndexNameExpressionResolver expressionResolver,\n+                                               Supplier<RepositoriesService> repositoriesServiceSupplier) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40db591e00381a3cad67c7702e51309ac4e267e4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzODMzNg==", "bodyText": "I tried this (see b2b5333) but e.g. XPackPlugin requires us to call createComponents before initialising ActionModule:\n\u00bb  org.elasticsearch.bootstrap.StartupException: java.lang.IllegalStateException: SSL Service is not constructed yet | \u00a0\n-- | --\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:174) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:161) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:127) ~[elasticsearch-cli-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.cli.Command.main(Command.java:90) ~[elasticsearch-cli-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:126) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:92) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  Caused by: java.lang.IllegalStateException: SSL Service is not constructed yet | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.xpack.core.XPackPlugin.getSharedSslService(XPackPlugin.java:162) ~[?:?] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.xpack.security.Security.getSslService(Security.java:339) ~[?:?] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.xpack.security.Security.getRestHandlerWrapper(Security.java:980) ~[?:?] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.action.ActionModule.<init>(ActionModule.java:455) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.node.Node.<init>(Node.java:468) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.node.Node.<init>(Node.java:256) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Bootstrap$5.<init>(Bootstrap.java:225) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:225) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:387) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:170) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \t... 6 more\n\nWe need the ActionModule to create the TransportService and we need a TransportService to create the RepositoriesService, so we seem to be stuck.", "url": "https://github.com/elastic/elasticsearch/pull/54814#discussion_r405338336", "createdAt": "2020-04-08T08:12:41Z", "author": {"login": "DaveCTurner"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java", "diffHunk": "@@ -115,7 +116,8 @@ public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<\n                                                ResourceWatcherService resourceWatcherService, ScriptService scriptService,\n                                                NamedXContentRegistry xContentRegistry, Environment environment,\n                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry,\n-                                               IndexNameExpressionResolver expressionResolver) {\n+                                               IndexNameExpressionResolver expressionResolver,\n+                                               Supplier<RepositoriesService> repositoriesServiceSupplier) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MTE5Ng=="}, "originalCommit": {"oid": "40db591e00381a3cad67c7702e51309ac4e267e4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwMTEyOA==", "bodyText": "Thanks for trying, @DaveCTurner. The action module part is avoidable by tweaking when the security rest wrapper invokes getSslService(), but the aggressive creation of transport doesn't seem to be resolvable, at least for now. This is all a result of the odd sharing of the ssl service across xpack plugins. I'll take this as a TODO to investigate how we can clean this up with other plugin/node initialization cleanup work.", "url": "https://github.com/elastic/elasticsearch/pull/54814#discussion_r406401128", "createdAt": "2020-04-09T18:37:13Z", "author": {"login": "rjernst"}, "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java", "diffHunk": "@@ -115,7 +116,8 @@ public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<\n                                                ResourceWatcherService resourceWatcherService, ScriptService scriptService,\n                                                NamedXContentRegistry xContentRegistry, Environment environment,\n                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry,\n-                                               IndexNameExpressionResolver expressionResolver) {\n+                                               IndexNameExpressionResolver expressionResolver,\n+                                               Supplier<RepositoriesService> repositoriesServiceSupplier) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MTE5Ng=="}, "originalCommit": {"oid": "40db591e00381a3cad67c7702e51309ac4e267e4"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1241, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}