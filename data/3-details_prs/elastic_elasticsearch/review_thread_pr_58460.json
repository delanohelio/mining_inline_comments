{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4Nzk1OTkw", "number": 58460, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODowMjoyNFrOEIQrjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODowNDoyMFrOEIQtyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDk3MzU3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/Strings.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODowMjoyNVrOGoHShQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODowMjoyNVrOGoHShQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDcxNTY1Mw==", "bodyText": "Please add a comment and unit test.", "url": "https://github.com/elastic/elasticsearch/pull/58460#discussion_r444715653", "createdAt": "2020-06-24T08:02:25Z", "author": {"login": "przemekwitek"}, "path": "server/src/main/java/org/elasticsearch/common/Strings.java", "diffHunk": "@@ -746,6 +746,10 @@ public static boolean isAllOrWildcard(String[] data) {\n                data.length == 1 && (\"_all\".equals(data[0]) || \"*\".equals(data[0]));\n     }\n \n+    public static boolean isAllOrWildcard(String data) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec73f5b004b3ff36eac8ac6751c0fded863eb5e6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDk3OTI5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetCalendarsAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODowNDoyMFrOGoHWMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODowNDoyMFrOGoHWMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDcxNjU5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (request.getCalendarId() != null && Strings.isAllOrWildcard(request.getCalendarId())== false) {\n          \n          \n            \n                    if (request.getCalendarId() != null && Strings.isAllOrWildcard(request.getCalendarId()) == false) {", "url": "https://github.com/elastic/elasticsearch/pull/58460#discussion_r444716594", "createdAt": "2020-06-24T08:04:20Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetCalendarsAction.java", "diffHunk": "@@ -34,7 +35,7 @@ public TransportGetCalendarsAction(TransportService transportService, ActionFilt\n     @Override\n     protected void doExecute(Task task, GetCalendarsAction.Request request, ActionListener<GetCalendarsAction.Response> listener) {\n         final String calendarId = request.getCalendarId();\n-        if (request.getCalendarId() != null && GetCalendarsAction.Request.ALL.equals(request.getCalendarId()) == false) {\n+        if (request.getCalendarId() != null && Strings.isAllOrWildcard(request.getCalendarId())== false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec73f5b004b3ff36eac8ac6751c0fded863eb5e6"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1389, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}