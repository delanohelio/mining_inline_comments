{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNjE0MTg0", "number": 59907, "title": "SQL: Add option to provide the delimiter for the CSV format", "bodyText": "This PR adds the option to provide the desired character as the separator\nfor the CSV format (the default remains comma).\nA set of characters are excluded though - like CR, LF, \" - to avoid\nslipping onto the CSV-dialects slope. The tab is also forbidden, the\nuser needs to choose the tsv format explicitely.\nCloses #41634.", "createdAt": "2020-07-20T16:25:20Z", "url": "https://github.com/elastic/elasticsearch/pull/59907", "merged": true, "mergeCommit": {"oid": "3a8b00cc7480f7ada57fcea3cbac957facac08fc"}, "closed": true, "closedAt": "2020-07-29T14:08:40Z", "author": {"login": "bpintea"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc20DI0gH2gAyNDUzNjE0MTg0OmI5MTBhODk5ZGUwZWI3Mzc1ZThiZmY3NmJmZTU1MzBjYTYzMDVmOTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5nh-DAFqTQ1NzM0NjE1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b910a899de0eb7375e8bff76bfe5530ca6305f98", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/b910a899de0eb7375e8bff76bfe5530ca6305f98", "committedDate": "2020-07-20T16:16:29Z", "message": "Add option to provide the delimiter to the CSV fmt\n\nThis adds the option to provide the desired character as the separator\nfor the CSV format (the default remains comma).\nA set of characters are excluded though - like CR, LF, `\"` - to avoid\nslipping onto the CSV-dialects slope. The tab is also forbidden, the\nuser needs to choose the \"tsv\" format explicitely.\n\nThe TSV format also gets a needed supplemental escaping, that of the '\\'\ncharacter."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMTc4NzM2", "url": "https://github.com/elastic/elasticsearch/pull/59907#pullrequestreview-452178736", "createdAt": "2020-07-21T07:04:09Z", "commit": {"oid": "b910a899de0eb7375e8bff76bfe5530ca6305f98"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzowNDoxMFrOG0qzog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzowOTo0OFrOG0q-TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDQ4Mg==", "bodyText": "I'd say IllegalArgumentException fits better.", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r457880482", "createdAt": "2020-07-21T07:04:10Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -109,15 +109,33 @@ protected String eol() {\n      *\n      */\n     CSV() {\n+        private Character delimiter = ',';\n \n         @Override\n-        protected String delimiter() {\n-            return \",\";\n+        protected Character delimiter() {\n+            return delimiter;\n+        }\n+\n+        @Override\n+        protected void setDelimiter(Character delimiter) {\n+            if (delimiter == null) {\n+                throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b910a899de0eb7375e8bff76bfe5530ca6305f98"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MTkyMQ==", "bodyText": "Minor, a set would be faster.", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r457881921", "createdAt": "2020-07-21T07:07:07Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/plugin/TextFormatTests.java", "diffHunk": "@@ -90,7 +92,25 @@ public void testCsvFormatWithRegularData() {\n         assertEquals(\"string,number\\r\\n\" +\n                 \"Along The River Bank,708\\r\\n\" +\n                 \"Mind Train,280\\r\\n\",\n-                text);\n+            text);\n+    }\n+\n+    public void testCsvFormatWithCustomDelimiterRegularData() {\n+        List<Character> forbidden = Arrays.asList('\"', '\\r', '\\n', '\\t');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b910a899de0eb7375e8bff76bfe5530ca6305f98"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MzIxMw==", "bodyText": "Can we use some static variable for \"delimiter\"?", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r457883213", "createdAt": "2020-07-21T07:09:48Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/RestSqlQueryAction.java", "diffHunk": "@@ -124,6 +128,11 @@ public RestResponse buildResponse(SqlQueryResponse response) throws Exception {\n         });\n     }\n \n+    @Override\n+    protected Set<String> responseParams() {\n+        return textFormat == TextFormat.CSV ? Collections.singleton(\"delimiter\") : Collections.emptySet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b910a899de0eb7375e8bff76bfe5530ca6305f98"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d5b28a776ed071c83caf79ff48f3c8184b65290", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/6d5b28a776ed071c83caf79ff48f3c8184b65290", "committedDate": "2020-07-22T12:32:49Z", "message": "Correct delimiter value propagation. Adress comm.\n\nFix the way the delimiter is being passed around, removing the CSV\nmember - since its instantiation is a singleton - and pushing it through\nfunction arguments.\n\nThe commit fixes a few issues with the \"header\" URL attribute:\n- these was no longer usable, since it wasn't \"consumed\" by\nRestSqlQueryAction before generating the answer (triggering an error\nresponce on use);\n- its value was only checked against \"absent\", so an incorrect value\n(typo like \"abaent\") could have silently generated an unexpected reply.\n- missing\n\nDocumentation for the \"delimiter\" attribute has also been added."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODkyMzU3", "url": "https://github.com/elastic/elasticsearch/pull/59907#pullrequestreview-453892357", "createdAt": "2020-07-23T07:31:00Z", "commit": {"oid": "6d5b28a776ed071c83caf79ff48f3c8184b65290"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNzozMTowMFrOG1_LLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNzozODowMFrOG1_XMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2Mjc2Ng==", "bodyText": "Why did you add that second argument? I don't see it being used, or am I missing something :) ?", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459262766", "createdAt": "2020-07-23T07:31:00Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -235,7 +247,7 @@ String contentType(RestRequest request) {\n         }\n \n         @Override\n-        String maybeEscape(String value) {\n+        String maybeEscape(String value, Character __) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d5b28a776ed071c83caf79ff48f3c8184b65290"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2NDg2NQ==", "bodyText": "Isn't it better to say double quote  instead of apostrophe ?", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459264865", "createdAt": "2020-07-23T07:35:42Z", "author": {"login": "matriv"}, "path": "docs/reference/sql/endpoints/rest.asciidoc", "diffHunk": "@@ -106,6 +106,21 @@ s|Description\n \n |===\n \n+The `CSV` format accepts the following additional formatting URL query attributes:\n+\n+* `header`\n++\n+Controls if the CSV header should be included in the response or not. It can take one of the following values:\n++\n+   - `present` (default): include the header;\n+   - `absent`: exclude the header.\n++\n+* `delimiter` (default: `,`)\n++\n+Indicates which character should be used to separate the CSV values. The following values cannot be used for this attribute:\n+apostrophe (`\"`), carriage-return (`\\r`) and new-line (`\\n`). The tab (`\\t`) can also not be used, the `tsv` format needs to be used", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d5b28a776ed071c83caf79ff48f3c8184b65290"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2NTg0Mg==", "bodyText": "You could also use Set here, but personally I would use a switch statement on the head.toLowerCase(Locale.ROOT) to return true, false, and default => throw the exception.", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459265842", "createdAt": "2020-07-23T07:38:00Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -186,23 +193,28 @@ String maybeEscape(String value) {\n \n         @Override\n         boolean needsHeader(RestRequest request) {\n-            String header = request.param(\"header\");\n+            String header = request.param(URL_PARAM_HEADER);\n             if (header == null) {\n                 List<String> values = request.getAllHeaderValues(\"Accept\");\n                 if (values != null) {\n                     // header values are separated by `;` so try breaking it down\n                     for (String value : values) {\n                         String[] params = Strings.tokenizeToStringArray(value, \";\");\n                         for (String param : params) {\n-                            if (param.toLowerCase(Locale.ROOT).equals(\"header=absent\")) {\n+                            if (param.toLowerCase(Locale.ROOT).equals(URL_PARAM_HEADER + \"=\" + PARAM_HEADER_ABSENT)) {\n                                 return false;\n                             }\n                         }\n                     }\n                 }\n                 return true;\n             } else {\n-                return !header.toLowerCase(Locale.ROOT).equals(\"absent\");\n+                List<String> allowed = List.of(PARAM_HEADER_ABSENT, PARAM_HEADER_PRESENT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d5b28a776ed071c83caf79ff48f3c8184b65290"}, "originalPosition": 133}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b3c3513053df25352ea8bfd2424c9b31f935954", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/2b3c3513053df25352ea8bfd2424c9b31f935954", "committedDate": "2020-07-23T11:25:13Z", "message": "Adress review comments. Unescape param\n\nThe commit unescapes the deliter param. This is required for the\ndoc-sourced tests.\n\nAlso, implement a switch for param value validation and fix docs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9bcff1282f0d0b0870b13dce66c55d93f3fdabd", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/d9bcff1282f0d0b0870b13dce66c55d93f3fdabd", "committedDate": "2020-07-23T11:27:08Z", "message": "Merge branch 'master' into enh/csv_delimiter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDU1ODEz", "url": "https://github.com/elastic/elasticsearch/pull/59907#pullrequestreview-454055813", "createdAt": "2020-07-23T11:51:19Z", "commit": {"oid": "2b3c3513053df25352ea8bfd2424c9b31f935954"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTo1MToyMFrOG2HFnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTo1MToyMFrOG2HFnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5MjQxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            double quotes (`\"`), carriage-return (`\\r`) and new-line (`\\n`). The tab (`\\t`) can also not be used, the `tsv` format needs to be used\n          \n          \n            \n            double quote (`\"`), carriage-return (`\\r`) and new-line (`\\n`). The tab (`\\t`) can also not be used, the `tsv` format needs to be used\n          \n      \n    \n    \n  \n\nsince all the rest are also singular.", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459392413", "createdAt": "2020-07-23T11:51:20Z", "author": {"login": "matriv"}, "path": "docs/reference/sql/endpoints/rest.asciidoc", "diffHunk": "@@ -118,7 +118,7 @@ Controls if the CSV header should be included in the response or not. It can tak\n * `delimiter` (default: `,`)\n +\n Indicates which character should be used to separate the CSV values. The following values cannot be used for this attribute:\n-apostrophe (`\"`), carriage-return (`\\r`) and new-line (`\\n`). The tab (`\\t`) can also not be used, the `tsv` format needs to be used\n+double quotes (`\"`), carriage-return (`\\r`) and new-line (`\\n`). The tab (`\\t`) can also not be used, the `tsv` format needs to be used", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b3c3513053df25352ea8bfd2424c9b31f935954"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDU2MzUy", "url": "https://github.com/elastic/elasticsearch/pull/59907#pullrequestreview-454056352", "createdAt": "2020-07-23T11:52:09Z", "commit": {"oid": "d9bcff1282f0d0b0870b13dce66c55d93f3fdabd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b3958decc61d2036c6122a5a66223df9d7ec5ed", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/1b3958decc61d2036c6122a5a66223df9d7ec5ed", "committedDate": "2020-07-23T11:55:23Z", "message": "Update docs/reference/sql/endpoints/rest.asciidoc\n\nCo-authored-by: Marios Trivyzas <matriv@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODU3NTcw", "url": "https://github.com/elastic/elasticsearch/pull/59907#pullrequestreview-455857570", "createdAt": "2020-07-27T14:50:34Z", "commit": {"oid": "1b3958decc61d2036c6122a5a66223df9d7ec5ed"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDo1MDozNFrOG3mDTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTo0NToyMlrOG3oblg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0ODMwMg==", "bodyText": "Why not using a true/false kind of approach with the csv header? It's simpler to use (true/false values) and less prone to wrong values. Something like include_header=true (the default, which can be omitted) and include_header=false which needs to be specifically mentioned.", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r460948302", "createdAt": "2020-07-27T14:50:34Z", "author": {"login": "astefan"}, "path": "docs/reference/sql/endpoints/rest.asciidoc", "diffHunk": "@@ -106,6 +106,21 @@ s|Description\n \n |===\n \n+The `CSV` format accepts the following additional formatting URL query attributes:\n+\n+* `header`\n++\n+Controls if the CSV header should be included in the response or not. It can take one of the following values:\n++\n+   - `present` (default): include the header;\n+   - `absent`: exclude the header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b3958decc61d2036c6122a5a66223df9d7ec5ed"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTc4OA==", "bodyText": "I would have kept this method name as is.", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r460971788", "createdAt": "2020-07-27T15:23:04Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -162,52 +190,58 @@ String maybeEscape(String value) {\n                 sb.append('\"');\n                 value = sb.toString();\n             }\n+\n             return value;\n         }\n \n         @Override\n-        boolean hasHeader(RestRequest request) {\n-            String header = request.param(\"header\");\n+        boolean needsHeader(RestRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b3958decc61d2036c6122a5a66223df9d7ec5ed"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4NzI4Ng==", "bodyText": "Actually, thinking about this a bit more, why did you expose this request parameter in the first place? It has always been there as an option (to have or not the header in the response), but it was a way of distinguishing between the first page of the response and the subsequent pages of it. Also, the initial request this PR is fixing refers only to the delimiter itself.", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r460987286", "createdAt": "2020-07-27T15:45:22Z", "author": {"login": "astefan"}, "path": "docs/reference/sql/endpoints/rest.asciidoc", "diffHunk": "@@ -106,6 +106,21 @@ s|Description\n \n |===\n \n+The `CSV` format accepts the following additional formatting URL query attributes:\n+\n+* `header`\n++\n+Controls if the CSV header should be included in the response or not. It can take one of the following values:\n++\n+   - `present` (default): include the header;\n+   - `absent`: exclude the header.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0ODMwMg=="}, "originalCommit": {"oid": "1b3958decc61d2036c6122a5a66223df9d7ec5ed"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41c3fbf5f6fe484d56ea42107e395876102deba1", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/41c3fbf5f6fe484d56ea42107e395876102deba1", "committedDate": "2020-07-28T09:29:10Z", "message": "Address review comments\n\n- rip out anything which isn't Delimiter-related.\n- undo 'hasHeader' method renaming."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccf1d866a48ee580cf559e5ec7780918bcd0956c", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/ccf1d866a48ee580cf559e5ec7780918bcd0956c", "committedDate": "2020-07-28T09:34:00Z", "message": "Merge branch 'master' into enh/csv_delimiter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d014df9394ae38787235bb9147be7d05897b396", "author": {"user": {"login": "bpintea", "name": "Bogdan Pintea"}}, "url": "https://github.com/elastic/elasticsearch/commit/6d014df9394ae38787235bb9147be7d05897b396", "committedDate": "2020-07-29T08:27:34Z", "message": "Minor doc update. One more fix revert\n\nUpdate the doc to make it clear that the textual CSV, TSV and TXT\nformats pass the cursor back to the user through the Cursor HTTP header."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5adc138c20c0e976e4827daae66e1a4611368529", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/5adc138c20c0e976e4827daae66e1a4611368529", "committedDate": "2020-07-29T09:04:04Z", "message": "Merge branch 'master' into enh/csv_delimiter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MzQ2MTUx", "url": "https://github.com/elastic/elasticsearch/pull/59907#pullrequestreview-457346151", "createdAt": "2020-07-29T09:23:10Z", "commit": {"oid": "5adc138c20c0e976e4827daae66e1a4611368529"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4133, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}