{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4Mzg1OTkz", "number": 52653, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzoxNjoyMFrODh87aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDowNzo0OFrODkNXCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTI3ODQ4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzoxNjoyMFrOFs-adw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMzoyMToxOVrOFvR6mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDI0Nw==", "bodyText": "Not sure about introducing this string literal here, vs adding a dependency on the frozen-indices module and referring to the setting directly.", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r382704247", "createdAt": "2020-02-21T17:16:20Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -111,7 +111,8 @@ public void onRepositoriesModule(RepositoriesModule repositoriesModule) {\n \n     @Override\n     public Optional<EngineFactory> getEngineFactory(IndexSettings indexSettings) {\n-        if (SearchableSnapshotRepository.SNAPSHOT_DIRECTORY_FACTORY_KEY.equals(INDEX_STORE_TYPE_SETTING.get(indexSettings.getSettings()))) {\n+        if (SearchableSnapshotRepository.SNAPSHOT_DIRECTORY_FACTORY_KEY.equals(INDEX_STORE_TYPE_SETTING.get(indexSettings.getSettings()))\n+                && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ca67a80b987e9d1a2f58ad75f942e160678e6c5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExMzg3NA==", "bodyText": "I would prefer to avoid the dependency and just use the String literal (we have other such cases in our code base).\nI also wonder if we need to handle closed replicated snapshot indices (i.e. use NoOpEngine for those).", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r383113874", "createdAt": "2020-02-24T07:35:31Z", "author": {"login": "ywelsch"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -111,7 +111,8 @@ public void onRepositoriesModule(RepositoriesModule repositoriesModule) {\n \n     @Override\n     public Optional<EngineFactory> getEngineFactory(IndexSettings indexSettings) {\n-        if (SearchableSnapshotRepository.SNAPSHOT_DIRECTORY_FACTORY_KEY.equals(INDEX_STORE_TYPE_SETTING.get(indexSettings.getSettings()))) {\n+        if (SearchableSnapshotRepository.SNAPSHOT_DIRECTORY_FACTORY_KEY.equals(INDEX_STORE_TYPE_SETTING.get(indexSettings.getSettings()))\n+                && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDI0Nw=="}, "originalCommit": {"oid": "2ca67a80b987e9d1a2f58ad75f942e160678e6c5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEyMDkyMA==", "bodyText": "We already bypass this mechanism for closed indices:\n\n  \n    \n      elasticsearch/server/src/main/java/org/elasticsearch/indices/IndicesService.java\n    \n    \n        Lines 622 to 627\n      in\n      0d1e67d\n    \n    \n    \n    \n\n        \n          \n           private EngineFactory getEngineFactory(final IndexSettings idxSettings) { \n        \n\n        \n          \n               final IndexMetaData indexMetaData = idxSettings.getIndexMetaData(); \n        \n\n        \n          \n               if (indexMetaData != null && indexMetaData.getState() == IndexMetaData.State.CLOSE) { \n        \n\n        \n          \n                   // NoOpEngine takes precedence as long as the index is closed \n        \n\n        \n          \n                   return NoOpEngine::new; \n        \n\n        \n          \n               } \n        \n    \n  \n\n\nI added a test case showing that closing and reopening a searchable snapshot index does work.", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r385120920", "createdAt": "2020-02-27T13:21:19Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -111,7 +111,8 @@ public void onRepositoriesModule(RepositoriesModule repositoriesModule) {\n \n     @Override\n     public Optional<EngineFactory> getEngineFactory(IndexSettings indexSettings) {\n-        if (SearchableSnapshotRepository.SNAPSHOT_DIRECTORY_FACTORY_KEY.equals(INDEX_STORE_TYPE_SETTING.get(indexSettings.getSettings()))) {\n+        if (SearchableSnapshotRepository.SNAPSHOT_DIRECTORY_FACTORY_KEY.equals(INDEX_STORE_TYPE_SETTING.get(indexSettings.getSettings()))\n+                && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDI0Nw=="}, "originalCommit": {"oid": "2ca67a80b987e9d1a2f58ad75f942e160678e6c5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTI4MTYxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzoxNzoyNVrOFs-cWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMzowNjo0OFrOFvRdxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDczMA==", "bodyText": "Similarly, not sure this is appropriate in terms of dependencies but I figured these interdependencies were ok for tests.", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r382704730", "createdAt": "2020-02-21T17:17:25Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -21,14 +22,17 @@\n import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.indices.recovery.RecoveryState;\n import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.protocol.xpack.frozen.FreezeRequest;\n import org.elasticsearch.snapshots.SnapshotInfo;\n import org.elasticsearch.test.ESIntegTestCase;\n+import org.elasticsearch.xpack.core.frozen.action.FreezeIndexAction;\n+import org.elasticsearch.xpack.frozen.FrozenIndices;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ca67a80b987e9d1a2f58ad75f942e160678e6c5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExNDEzOQ==", "bodyText": "For tests, it's ok I think", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r383114139", "createdAt": "2020-02-24T07:36:33Z", "author": {"login": "ywelsch"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -21,14 +22,17 @@\n import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.indices.recovery.RecoveryState;\n import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.protocol.xpack.frozen.FreezeRequest;\n import org.elasticsearch.snapshots.SnapshotInfo;\n import org.elasticsearch.test.ESIntegTestCase;\n+import org.elasticsearch.xpack.core.frozen.action.FreezeIndexAction;\n+import org.elasticsearch.xpack.frozen.FrozenIndices;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDczMA=="}, "originalCommit": {"oid": "2ca67a80b987e9d1a2f58ad75f942e160678e6c5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyNDM1NQ==", "bodyText": "I think it's OK too, but I'd like to avoid adding too many test conditionals to this test. Maybe we could test this in AbstractSearchableSnapshotsRestTestCase instead?", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r383124355", "createdAt": "2020-02-24T08:13:35Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -21,14 +22,17 @@\n import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.indices.recovery.RecoveryState;\n import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.protocol.xpack.frozen.FreezeRequest;\n import org.elasticsearch.snapshots.SnapshotInfo;\n import org.elasticsearch.test.ESIntegTestCase;\n+import org.elasticsearch.xpack.core.frozen.action.FreezeIndexAction;\n+import org.elasticsearch.xpack.frozen.FrozenIndices;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDczMA=="}, "originalCommit": {"oid": "2ca67a80b987e9d1a2f58ad75f942e160678e6c5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExMzU0Mw==", "bodyText": "Ok, I moved the tests to the REST suite.", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r385113543", "createdAt": "2020-02-27T13:06:48Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -21,14 +22,17 @@\n import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.indices.recovery.RecoveryState;\n import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.protocol.xpack.frozen.FreezeRequest;\n import org.elasticsearch.snapshots.SnapshotInfo;\n import org.elasticsearch.test.ESIntegTestCase;\n+import org.elasticsearch.xpack.core.frozen.action.FreezeIndexAction;\n+import org.elasticsearch.xpack.frozen.FrozenIndices;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDczMA=="}, "originalCommit": {"oid": "2ca67a80b987e9d1a2f58ad75f942e160678e6c5"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5Mjk0MDY5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDowNzoyNVrOFwZ1rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDowNzoyNVrOFwZ1rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5OTMxMA==", "bodyText": "Can you assertOK() this?", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r386299310", "createdAt": "2020-03-02T10:07:25Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java", "diffHunk": "@@ -154,6 +127,71 @@ public void testSearchableSnapshots() throws Exception {\n             searchableSnapshotStats.size(), equalTo(numberOfShards));\n     }\n \n+    public void testSearchResults() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            for (int i = 0; i < 10; i++) {\n+                assertSearchResults(restoredIndexName, numDocs, randomFrom(Boolean.TRUE, Boolean.FALSE, null));\n+            }\n+        });\n+    }\n+\n+    public void testSearchResultsWhenFrozen() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            final Request freezeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_freeze\");\n+            client().performRequest(freezeRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3d4bf3774803c19237df7edbd662e7d277b8f7"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5Mjk0MTkyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDowNzo0NFrOFwZ2WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDowNzo0NFrOFwZ2WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5OTQ4MQ==", "bodyText": "Can you assertOK() this?", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r386299481", "createdAt": "2020-03-02T10:07:44Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java", "diffHunk": "@@ -154,6 +127,71 @@ public void testSearchableSnapshots() throws Exception {\n             searchableSnapshotStats.size(), equalTo(numberOfShards));\n     }\n \n+    public void testSearchResults() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            for (int i = 0; i < 10; i++) {\n+                assertSearchResults(restoredIndexName, numDocs, randomFrom(Boolean.TRUE, Boolean.FALSE, null));\n+            }\n+        });\n+    }\n+\n+    public void testSearchResultsWhenFrozen() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            final Request freezeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_freeze\");\n+            client().performRequest(freezeRequest);\n+            ensureGreen(restoredIndexName);\n+            for (int i = 0; i < 10; i++) {\n+                assertSearchResults(restoredIndexName, numDocs, Boolean.FALSE);\n+            }\n+        });\n+    }\n+\n+    public void testCloseAndReopen() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            final Request closeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_close\");\n+            client().performRequest(closeRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3d4bf3774803c19237df7edbd662e7d277b8f7"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5Mjk0MjE3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDowNzo0OFrOFwZ2gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDowNzo0OFrOFwZ2gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5OTUyMA==", "bodyText": "Can you assertOK() this?", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r386299520", "createdAt": "2020-03-02T10:07:48Z", "author": {"login": "tlrx"}, "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java", "diffHunk": "@@ -154,6 +127,71 @@ public void testSearchableSnapshots() throws Exception {\n             searchableSnapshotStats.size(), equalTo(numberOfShards));\n     }\n \n+    public void testSearchResults() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            for (int i = 0; i < 10; i++) {\n+                assertSearchResults(restoredIndexName, numDocs, randomFrom(Boolean.TRUE, Boolean.FALSE, null));\n+            }\n+        });\n+    }\n+\n+    public void testSearchResultsWhenFrozen() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            final Request freezeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_freeze\");\n+            client().performRequest(freezeRequest);\n+            ensureGreen(restoredIndexName);\n+            for (int i = 0; i < 10; i++) {\n+                assertSearchResults(restoredIndexName, numDocs, Boolean.FALSE);\n+            }\n+        });\n+    }\n+\n+    public void testCloseAndReopen() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            final Request closeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_close\");\n+            client().performRequest(closeRequest);\n+            ensureGreen(restoredIndexName);\n+\n+            final Request openRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_open\");\n+            client().performRequest(openRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3d4bf3774803c19237df7edbd662e7d277b8f7"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3890, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}