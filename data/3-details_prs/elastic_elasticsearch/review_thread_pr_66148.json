{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1Nzk5MTM0", "number": 66148, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTozMDo0OVrOFE7-3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo0MTozNlrOFE8PiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzIxMzcyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TransformContinuousIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTozMDo0OVrOIFMNsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTozMDo0OVrOIFMNsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxMzkwNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/66148#discussion_r542313904", "createdAt": "2020-12-14T11:30:49Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TransformContinuousIT.java", "diffHunk": "@@ -355,9 +356,66 @@ private void putIndex(String indexName, String dateType, boolean isDataStream) t\n                     .endObject()\n                     .startObject(\"some-timestamp\")\n                     .field(\"type\", dateType)\n+                    .endObject();\n+\n+                builder.endObject(); // properties\n+\n+                // add some runtime fields\n+                builder.startObject(\"runtime\");\n+\n+                builder.startObject(\"metric-rt-2x\")\n+                    .field(\"type\", \"long\")\n+                    .startObject(\"script\")\n+                    .field(\"source\", \"if (params._source.metric != null) {emit(params._source.metric * 2)}\")\n+                    .endObject()\n+                    .endObject()\n+                    .startObject(\"event-upper\")\n+                    .field(\"type\", \"keyword\")\n+                    .startObject(\"script\")\n+                    .field(\"source\", \"if (params._source.event != null) {emit(params._source.event.toUpperCase())}\")\n+                    .endObject()\n+                    .endObject()\n+                    .startObject(\"timestamp-at-runtime\")\n+                    .field(\"type\", \"date\")\n+                    .startObject(\"script\")\n+                    .field(\"source\", \"emit(parse(params._source.get('timestamp')))\")\n                     .endObject()\n                     .endObject()\n+                    .startObject(\"metric-timestamp-5m-earlier\")\n+                    .field(\"type\", \"date\")\n+                    .startObject(\"script\")\n+                    .field(\n+                        \"source\",\n+                        \"if (doc['metric-timestamp'].size()!=0) {emit(doc['metric-timestamp'].value.minus(5, ChronoUnit.MINUTES).toInstant().toEpochMilli())}\"\n+                    )\n+                    .endObject()\n+                    .endObject()\n+                    .startObject(\"some-timestamp-10m-earlier\")\n+                    .field(\"type\", \"date\")\n+                    .startObject(\"script\")\n+                    .field(\n+                        \"source\",\n+                        \"if (doc['some-timestamp'].size()!=0) {emit(doc['some-timestamp'].value.minus(10, ChronoUnit.MINUTES).toInstant().toEpochMilli())}\"\n+                    )\n+                    .endObject()\n                     .endObject();\n+\n+                // random overlay of existing field", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3479f6297dfb0b1f75a1119e1e8f6c4ac1f0deb"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzI1NjQxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TermsGroupByIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo0MTozNlrOIFMmOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDoxNzo1NlrOIFSj5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDE4NQ==", "bodyText": "Shouldn't this be termsField?", "url": "https://github.com/elastic/elasticsearch/pull/66148#discussion_r542320185", "createdAt": "2020-12-14T11:41:36Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TermsGroupByIT.java", "diffHunk": "@@ -55,13 +59,15 @@ public TransformConfig createConfig() {\n \n         PivotConfig.Builder pivotConfigBuilder = new PivotConfig.Builder();\n         pivotConfigBuilder.setGroups(\n-            new GroupConfig.Builder().groupBy(\"event\", new TermsGroupSource.Builder().setField(\"event\").setMissingBucket(missing).build())\n-                .build()\n+            new GroupConfig.Builder().groupBy(\n+                \"event\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3479f6297dfb0b1f75a1119e1e8f6c4ac1f0deb"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxNzg5NA==", "bodyText": "no, this is the output field name, on the next line there is setField(termsField)\nHaving that said, it would be more understandable if input and output use different names", "url": "https://github.com/elastic/elasticsearch/pull/66148#discussion_r542417894", "createdAt": "2020-12-14T14:17:56Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TermsGroupByIT.java", "diffHunk": "@@ -55,13 +59,15 @@ public TransformConfig createConfig() {\n \n         PivotConfig.Builder pivotConfigBuilder = new PivotConfig.Builder();\n         pivotConfigBuilder.setGroups(\n-            new GroupConfig.Builder().groupBy(\"event\", new TermsGroupSource.Builder().setField(\"event\").setMissingBucket(missing).build())\n-                .build()\n+            new GroupConfig.Builder().groupBy(\n+                \"event\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDE4NQ=="}, "originalCommit": {"oid": "e3479f6297dfb0b1f75a1119e1e8f6c4ac1f0deb"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4724, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}