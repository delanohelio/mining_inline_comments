{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzOTk3NjE4", "number": 53144, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTozNzo1NFrODleLLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjoyMToyMVrODlfUkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjE4Mjg3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTozNzo1NFrOFyYfpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMDo1NToxNlrOFyj1ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM3NDQzNg==", "bodyText": "I believe this only skips sibling pipeline aggs?  E.g. \"child\" pipeline aggs (those that extend PipelineAggregator directly) will be included in the internal agg list, iirc", "url": "https://github.com/elastic/elasticsearch/pull/53144#discussion_r388374436", "createdAt": "2020-03-05T15:37:54Z", "author": {"login": "polyfractal"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java", "diffHunk": "@@ -85,6 +85,15 @@ public void writeTo(StreamOutput out) throws IOException {\n         out.writeNamedWriteableList(topLevelPipelineAggregators);\n     }\n \n+    /**\n+     * Make a mutable copy of the aggregation results.\n+     * <p>\n+     * IMPORTANT: The copy doesn't include any pipeline aggregations, if there are any.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc9c2c9cafdf9c77e6c15447a26652a7978c72b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU2MDIzNA==", "bodyText": "Yeah - I added this to make sure no one was surprised that pipeline aggs aren't kept. I mean, they can't be without a Builder, I think. But we throw them out now when we do the rewriting already. But we just don't talk about it. I'll update the comment, for sure.", "url": "https://github.com/elastic/elasticsearch/pull/53144#discussion_r388560234", "createdAt": "2020-03-05T20:55:16Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java", "diffHunk": "@@ -85,6 +85,15 @@ public void writeTo(StreamOutput out) throws IOException {\n         out.writeNamedWriteableList(topLevelPipelineAggregators);\n     }\n \n+    /**\n+     * Make a mutable copy of the aggregation results.\n+     * <p>\n+     * IMPORTANT: The copy doesn't include any pipeline aggregations, if there are any.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM3NDQzNg=="}, "originalCommit": {"oid": "dfc9c2c9cafdf9c77e6c15447a26652a7978c72b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjM2NDQ4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjoxOTo0NlrOFyaSGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMDo1NDoxMFrOFyjyxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwMzczOQ==", "bodyText": "Let's beef up the docs here, it took me a while to really understand what this is doing.\nE.g. an implementer of this will iterate over their internal buckets and apply the rewriter to each bucket, generating a modified/rewritten representation of their buckets which is then returned.\nAlso I think it's probably important to note that this returns a new version of the InternalAggregations... but the callee remains immutable and does not itself change.", "url": "https://github.com/elastic/elasticsearch/pull/53144#discussion_r388403739", "createdAt": "2020-03-05T16:19:46Z", "author": {"login": "polyfractal"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java", "diffHunk": "@@ -127,6 +127,28 @@ public String getName() {\n         return name;\n     }\n \n+    /**\n+     * Rewrite the sub-aggregations in the buckets in this aggregation.\n+     * The default implementation throws an exception because most\n+     * aggregations don't <strong>have</strong> buckets in them. It\n+     * should be overridden by aggregations that contain buckets.\n+     */\n+    public InternalAggregation rewriteBuckets(BucketRewriter rewriter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc9c2c9cafdf9c77e6c15447a26652a7978c72b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxODQ2Mw==", "bodyText": "Perhaps rename the method to copyAndRewriteBuckets() or similar, to help make it clear what's going on?", "url": "https://github.com/elastic/elasticsearch/pull/53144#discussion_r388418463", "createdAt": "2020-03-05T16:42:03Z", "author": {"login": "polyfractal"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java", "diffHunk": "@@ -127,6 +127,28 @@ public String getName() {\n         return name;\n     }\n \n+    /**\n+     * Rewrite the sub-aggregations in the buckets in this aggregation.\n+     * The default implementation throws an exception because most\n+     * aggregations don't <strong>have</strong> buckets in them. It\n+     * should be overridden by aggregations that contain buckets.\n+     */\n+    public InternalAggregation rewriteBuckets(BucketRewriter rewriter) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwMzczOQ=="}, "originalCommit": {"oid": "dfc9c2c9cafdf9c77e6c15447a26652a7978c72b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU1OTU1OA==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/53144#discussion_r388559558", "createdAt": "2020-03-05T20:54:10Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java", "diffHunk": "@@ -127,6 +127,28 @@ public String getName() {\n         return name;\n     }\n \n+    /**\n+     * Rewrite the sub-aggregations in the buckets in this aggregation.\n+     * The default implementation throws an exception because most\n+     * aggregations don't <strong>have</strong> buckets in them. It\n+     * should be overridden by aggregations that contain buckets.\n+     */\n+    public InternalAggregation rewriteBuckets(BucketRewriter rewriter) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwMzczOQ=="}, "originalCommit": {"oid": "dfc9c2c9cafdf9c77e6c15447a26652a7978c72b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjM3MDc1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjoyMToyMVrOFyaWAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMDo1Mzo1OVrOFyjyfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwNDczNg==", "bodyText": "Does this gain us anything over just using Function<InternalAggregations, InternalAggregations>?  Shorter type signature, but it feels like it obfuscates what's going on?\nNot a strong opinion on this, just felt like extra boilerplate.", "url": "https://github.com/elastic/elasticsearch/pull/53144#discussion_r388404736", "createdAt": "2020-03-05T16:21:21Z", "author": {"login": "polyfractal"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java", "diffHunk": "@@ -127,6 +127,28 @@ public String getName() {\n         return name;\n     }\n \n+    /**\n+     * Rewrite the sub-aggregations in the buckets in this aggregation.\n+     * The default implementation throws an exception because most\n+     * aggregations don't <strong>have</strong> buckets in them. It\n+     * should be overridden by aggregations that contain buckets.\n+     */\n+    public InternalAggregation rewriteBuckets(BucketRewriter rewriter) {\n+        throw new IllegalStateException(\n+                \"Aggregation [\" + getName() + \"] must be a bucket aggregation but was [\" + getWriteableName() + \"]\");\n+    }\n+    /**\n+     * Used with {@link InternalAggregation#rewriteBuckets(BucketRewriter)} to\n+     * rewrite the sub-aggregations within buckets.\n+     */\n+    public interface BucketRewriter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc9c2c9cafdf9c77e6c15447a26652a7978c72b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU1OTQ4NA==", "bodyText": "I thought it'd have other things but it turns out it doesn't. \ud83d\udc4d on the Function.", "url": "https://github.com/elastic/elasticsearch/pull/53144#discussion_r388559484", "createdAt": "2020-03-05T20:53:59Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java", "diffHunk": "@@ -127,6 +127,28 @@ public String getName() {\n         return name;\n     }\n \n+    /**\n+     * Rewrite the sub-aggregations in the buckets in this aggregation.\n+     * The default implementation throws an exception because most\n+     * aggregations don't <strong>have</strong> buckets in them. It\n+     * should be overridden by aggregations that contain buckets.\n+     */\n+    public InternalAggregation rewriteBuckets(BucketRewriter rewriter) {\n+        throw new IllegalStateException(\n+                \"Aggregation [\" + getName() + \"] must be a bucket aggregation but was [\" + getWriteableName() + \"]\");\n+    }\n+    /**\n+     * Used with {@link InternalAggregation#rewriteBuckets(BucketRewriter)} to\n+     * rewrite the sub-aggregations within buckets.\n+     */\n+    public interface BucketRewriter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwNDczNg=="}, "originalCommit": {"oid": "dfc9c2c9cafdf9c77e6c15447a26652a7978c72b"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3426, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}