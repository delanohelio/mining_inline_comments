{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NDI5ODA5", "number": 59041, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNDozMzowOFrOELiUmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzowMDo1NFrOELkB1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTMyMTIxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNDozMzowOFrOGtIhFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMTo1NTo1NFrOGtUN2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3ODY0Nw==", "bodyText": "Gosh! Is this a bug!?", "url": "https://github.com/elastic/elasticsearch/pull/59041#discussion_r449978647", "createdAt": "2020-07-06T04:33:08Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java", "diffHunk": "@@ -86,7 +81,7 @@ public IndicesAccessControl authorize(String action, Set<String> requestedIndice\n     @Override\n     public Automaton allowedActionsMatcher(String index) {\n         final Automaton allowedMatcher = super.allowedActionsMatcher(index);\n-        final Automaton limitedByMatcher = super.allowedActionsMatcher(index);\n+        final Automaton limitedByMatcher = limitedBy.allowedActionsMatcher(index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b21a79778ec9484c02e882c67e46bcb732721bae"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5NDE2OQ==", "bodyText": "Yes. At first sight testing for it was not trivial. The bug doesn't seem important though. I'll see what I can do.", "url": "https://github.com/elastic/elasticsearch/pull/59041#discussion_r449994169", "createdAt": "2020-07-06T05:42:25Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java", "diffHunk": "@@ -86,7 +81,7 @@ public IndicesAccessControl authorize(String action, Set<String> requestedIndice\n     @Override\n     public Automaton allowedActionsMatcher(String index) {\n         final Automaton allowedMatcher = super.allowedActionsMatcher(index);\n-        final Automaton limitedByMatcher = super.allowedActionsMatcher(index);\n+        final Automaton limitedByMatcher = limitedBy.allowedActionsMatcher(index);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3ODY0Nw=="}, "originalCommit": {"oid": "b21a79778ec9484c02e882c67e46bcb732721bae"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE3MDMyOA==", "bodyText": "I've pushed a simple unit test 9738963, it is trivial after all.\nThe bug is not consequential. It could manifest when resizing and when adding aliases, when using keys with role descriptors, where it fails to allow the operation, although it should.", "url": "https://github.com/elastic/elasticsearch/pull/59041#discussion_r450170328", "createdAt": "2020-07-06T11:55:54Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java", "diffHunk": "@@ -86,7 +81,7 @@ public IndicesAccessControl authorize(String action, Set<String> requestedIndice\n     @Override\n     public Automaton allowedActionsMatcher(String index) {\n         final Automaton allowedMatcher = super.allowedActionsMatcher(index);\n-        final Automaton limitedByMatcher = super.allowedActionsMatcher(index);\n+        final Automaton limitedByMatcher = limitedBy.allowedActionsMatcher(index);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3ODY0Nw=="}, "originalCommit": {"oid": "b21a79778ec9484c02e882c67e46bcb732721bae"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTMyODQ1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNDozNzo0NFrOGtIlHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNjo1NjoxNVrOGtK8Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3OTY3OA==", "bodyText": "I understand fromRole.names() is close to non-sense. But I wonder whether it is marginally justifiable to still keep them around just in case? I can be easily persuaded. :)", "url": "https://github.com/elastic/elasticsearch/pull/59041#discussion_r449979678", "createdAt": "2020-07-06T04:37:44Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java", "diffHunk": "@@ -187,7 +182,6 @@ public boolean checkRunAs(String runAs) {\n      */\n     public static LimitedRole createLimitedRole(Role fromRole, Role limitedByRole) {\n         Objects.requireNonNull(limitedByRole, \"limited by role is required to create limited role\");\n-        return new LimitedRole(fromRole.names(), fromRole.cluster(), fromRole.indices(), fromRole.application(), fromRole.runAs(),\n-                limitedByRole);\n+        return new LimitedRole(fromRole.cluster(), fromRole.indices(), fromRole.application(), fromRole.runAs(), limitedByRole);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b21a79778ec9484c02e882c67e46bcb732721bae"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5NDQ1NA==", "bodyText": "I wouldn't clutter the code in any way for it. When/if we need that we can make the change.", "url": "https://github.com/elastic/elasticsearch/pull/59041#discussion_r449994454", "createdAt": "2020-07-06T05:43:28Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java", "diffHunk": "@@ -187,7 +182,6 @@ public boolean checkRunAs(String runAs) {\n      */\n     public static LimitedRole createLimitedRole(Role fromRole, Role limitedByRole) {\n         Objects.requireNonNull(limitedByRole, \"limited by role is required to create limited role\");\n-        return new LimitedRole(fromRole.names(), fromRole.cluster(), fromRole.indices(), fromRole.application(), fromRole.runAs(),\n-                limitedByRole);\n+        return new LimitedRole(fromRole.cluster(), fromRole.indices(), fromRole.application(), fromRole.runAs(), limitedByRole);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3OTY3OA=="}, "originalCommit": {"oid": "b21a79778ec9484c02e882c67e46bcb732721bae"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAxODM5MA==", "bodyText": "Ok sounds good as long as you do have an argument for it. Thanks!", "url": "https://github.com/elastic/elasticsearch/pull/59041#discussion_r450018390", "createdAt": "2020-07-06T06:56:15Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java", "diffHunk": "@@ -187,7 +182,6 @@ public boolean checkRunAs(String runAs) {\n      */\n     public static LimitedRole createLimitedRole(Role fromRole, Role limitedByRole) {\n         Objects.requireNonNull(limitedByRole, \"limited by role is required to create limited role\");\n-        return new LimitedRole(fromRole.names(), fromRole.cluster(), fromRole.indices(), fromRole.application(), fromRole.runAs(),\n-                limitedByRole);\n+        return new LimitedRole(fromRole.cluster(), fromRole.indices(), fromRole.application(), fromRole.runAs(), limitedByRole);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3OTY3OA=="}, "originalCommit": {"oid": "b21a79778ec9484c02e882c67e46bcb732721bae"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTU5ODgyOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecurityTestsUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzowMDoxMFrOGtLDfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMDoyMDowNlrOGtRhlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyMDIyMQ==", "bodyText": "Something doesn't feel quite right about this.\nLet's chat, but I'd prefer a public static method on the ApiKeyService (like createKeyForTesting) rather than making existing methods public.", "url": "https://github.com/elastic/elasticsearch/pull/59041#discussion_r450020221", "createdAt": "2020-07-06T07:00:10Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecurityTestsUtils.java", "diffHunk": "@@ -65,6 +83,17 @@ public static void assertThrowsAuthorizationException(LuceneTestCase.ThrowingRun\n         assertAuthorizationException(securityException, messageMatcher);\n     }\n \n+    public static Authentication createApiKeyAuthentication(ApiKeyService apiKeyService, Authentication authentication,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b21a79778ec9484c02e882c67e46bcb732721bae"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDEyNjIyOQ==", "bodyText": "Yeah, I've been ignorant to break the ApiKeyService abstraction for test purposes.\nI've created a public static inner class ApiKeyServiceTests.Utils that translates an authentication for a user to an authentication with an API Key.", "url": "https://github.com/elastic/elasticsearch/pull/59041#discussion_r450126229", "createdAt": "2020-07-06T10:20:06Z", "author": {"login": "albertzaharovits"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecurityTestsUtils.java", "diffHunk": "@@ -65,6 +83,17 @@ public static void assertThrowsAuthorizationException(LuceneTestCase.ThrowingRun\n         assertAuthorizationException(securityException, messageMatcher);\n     }\n \n+    public static Authentication createApiKeyAuthentication(ApiKeyService apiKeyService, Authentication authentication,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyMDIyMQ=="}, "originalCommit": {"oid": "b21a79778ec9484c02e882c67e46bcb732721bae"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTYwMDg1OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzowMDo1NFrOGtLEsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzowMDo1NFrOGtLEsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyMDUzMA==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/59041#discussion_r450020530", "createdAt": "2020-07-06T07:00:54Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java", "diffHunk": "@@ -346,10 +346,9 @@ private void authenticateAsync() {\n         private void checkForApiKey() {\n             apiKeyService.authenticateWithApiKeyIfPresent(threadContext, ActionListener.wrap(authResult -> {\n                     if (authResult.isAuthenticated()) {\n-                        final User user = authResult.getUser();\n-                        authenticatedBy = new RealmRef(ApiKeyService.API_KEY_REALM_NAME, ApiKeyService.API_KEY_REALM_TYPE, nodeName);\n-                        writeAuthToContext(new Authentication(user, authenticatedBy, null, Version.CURRENT,\n-                            Authentication.AuthenticationType.API_KEY, authResult.getMetadata()));\n+                        final Authentication authentication = apiKeyService.createApiKeyAuthentication(authResult, nodeName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b21a79778ec9484c02e882c67e46bcb732721bae"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2049, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}