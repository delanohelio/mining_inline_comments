{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNDgwMTIw", "number": 57855, "title": "Add support for a 'format' option in fields retrieval.", "bodyText": "The new format option allows for passing a custom date format:\nPOST logs-*/_search\n{\n  \"fields\": [\n    \"file.*\",\n    {\n      \"field\": \"event.timestamp\",\n      \"format\": \"epoch_millis\"\n    },\n    ...\n  ]\n}\n\nOther API notes:\n\nWe use the same syntax as docvalue_fields for consistency. Under the hood, both fields and docvalue_fields use the same FieldAndFormat object to share serialization logic.\nOnly date and date_range fields support formatting currently. I really wasn't sure how helpful it was to support a decimal format on numeric fields (as we do with docvalues_fields), and didn't want to add pre-emptive functionality. I'm very happy for feedback on this point.\n\nImplementation notes:\n\nWhile the design is very simple, a downside is that custom date formatter object needs to be re-created for every document.\nI looked into re-using each field's DocValueFormat to perform the formatting, but this didn't seem like the right way to go. DocValueFormat is specifically designed for translating between on-disk docvalues and human-readable values, and it felt like an abuse to start using it for formatting source values.", "createdAt": "2020-06-09T01:26:23Z", "url": "https://github.com/elastic/elasticsearch/pull/57855", "merged": true, "mergeCommit": {"oid": "4788875043e60ac9e626f0741876ab5c40e9e311"}, "closed": true, "closedAt": "2020-06-09T17:42:56Z", "author": {"login": "jtibshirani"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpanqjAH2gAyNDMxNDgwMTIwOjIxMjBhMjkzMGZjMWU1MjUxOTFkNzA4YWQxMzQ2NGE4NDA2YTBjMmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcplQ7IgFqTQyNzE1MTY0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2120a2930fc1e525191d708ad13464a8406a0c2b", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/2120a2930fc1e525191d708ad13464a8406a0c2b", "committedDate": "2020-06-09T01:17:50Z", "message": "Pull FieldAndFormat into its own top-level class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f5b92b7329b874c80e7b70597b58466942da0c5", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/1f5b92b7329b874c80e7b70597b58466942da0c5", "committedDate": "2020-06-09T01:17:59Z", "message": "Only include non-empty field lists in the response."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7d9c08a439ed7b668669d5c9d3778b65b21d0e1", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/a7d9c08a439ed7b668669d5c9d3778b65b21d0e1", "committedDate": "2020-06-09T01:17:59Z", "message": "Pass formats to FieldValueRetriever."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51b7de7954546c576001b683e2f724974143abc0", "author": {"user": {"login": "jtibshirani", "name": "Julie Tibshirani"}}, "url": "https://github.com/elastic/elasticsearch/commit/51b7de7954546c576001b683e2f724974143abc0", "committedDate": "2020-06-09T01:18:00Z", "message": "Add support for passing a custom date format."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MTUxNjQ3", "url": "https://github.com/elastic/elasticsearch/pull/57855#pullrequestreview-427151647", "createdAt": "2020-06-09T13:35:05Z", "commit": {"oid": "51b7de7954546c576001b683e2f724974143abc0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzozNTowNVrOGhKD-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzozNTowNVrOGhKD-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMTA1MQ==", "bodyText": "I'd prefer to avoid this one day, but for now it is cool. And, I think it'd be a bit overboard to try and avoid it now. If I did want to avoid it maybe something like:\npublic Function<Object, String> sourceParser(String format);\n\nI don't know. Just thinking out loud. Not needed now.", "url": "https://github.com/elastic/elasticsearch/pull/57855#discussion_r437421051", "createdAt": "2020-06-09T13:35:05Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "diffHunk": "@@ -628,12 +628,16 @@ protected void parseCreateField(ParseContext context) throws IOException {\n     }\n \n     @Override\n-    public String parseSourceValue(Object value) {\n+    public String parseSourceValue(Object value, String format) {\n         String date = value.toString();\n         long timestamp = fieldType().parse(date);\n-\n         ZonedDateTime dateTime = fieldType().resolution().toInstant(timestamp).atZone(ZoneOffset.UTC);\n-        return fieldType().dateTimeFormatter().format(dateTime);\n+\n+        DateFormatter dateTimeFormatter = fieldType().dateTimeFormatter();\n+        if (format != null) {\n+            dateTimeFormatter = DateFormatter.forPattern(format).withLocale(dateTimeFormatter.locale());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b7de7954546c576001b683e2f724974143abc0"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 799, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}