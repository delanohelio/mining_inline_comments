{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2Nzg2OTMx", "number": 63937, "title": "Move index analyzer management to FieldMapper/MapperService", "bodyText": "Index-time analyzers are currently specified on the MappedFieldType.  This\nhas a number of unfortunate consequences; for example, field mappers that\nindex data into implementation sub-fields, such as prefix or phrase\naccelerators on text fields, need to expose these sub-fields as MappedFieldTypes,\nwhich means that they then appear in field caps, are externally searchable,\netc.  It also adds index-time logic to a class that should only be concerned\nwith search-time behaviour.\nThis commit removes references to the index analyzer from MappedFieldType,\nand instead adds a 'registerIndexAnalyzer' method to FieldMapper; all\nindex-time analysis is mediated through the delegating analyzer wrapper on\nMapperService.  In a follow-up, this will make it possible to register\nmultiple field analyzers from a single FieldMapper, removing the need\nfor 'hidden' mapper implementations on text field, parent joins, and\nelsewhere.", "createdAt": "2020-10-20T13:12:04Z", "url": "https://github.com/elastic/elasticsearch/pull/63937", "merged": true, "mergeCommit": {"oid": "f010269ab797e2502d8145799fc4eb19a954aea6"}, "closed": true, "closedAt": "2020-11-04T13:53:10Z", "author": {"login": "romseygeek"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUYZNvgH2gAyNTA2Nzg2OTMxOjM0OTc3ZTRiZDg2MTdlNDJlY2Y5ZWRkM2I2NzY1YmU2ZWVmMmQ5N2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZOE3wAFqTUyMzM3NTc4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "34977e4bd8617e42ecf9edd3b6765be6eef2d97c", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/34977e4bd8617e42ecf9edd3b6765be6eef2d97c", "committedDate": "2020-10-20T13:00:59Z", "message": "Centralize index analyzer management"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d8dfc708758b9c3396a3a892f8e114d268e6389", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/3d8dfc708758b9c3396a3a892f8e114d268e6389", "committedDate": "2020-10-20T13:03:26Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNjkzMjMx", "url": "https://github.com/elastic/elasticsearch/pull/63937#pullrequestreview-512693231", "createdAt": "2020-10-20T13:14:23Z", "commit": {"oid": "3d8dfc708758b9c3396a3a892f8e114d268e6389"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzoxNDoyM1rOHk7wvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzozMDowNFrOHk8kTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ4OTkxNg==", "bodyText": "These changes are due to position increment handling moving directly into TextParams.Analyzers, which simplifies a lot of the palaver around building analyzers for text fields.  SearchAsYouType doesn't actually expose a position increment field so doesn't get the added benefits here, but it still requires a small refactor.", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r508489916", "createdAt": "2020-10-20T13:14:23Z", "author": {"login": "romseygeek"}, "path": "modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/SearchAsYouTypeFieldMapper.java", "diffHunk": "@@ -95,18 +95,14 @@\n     public static final TypeParser PARSER\n         = new TypeParser((n, c) -> new Builder(n, () -> c.getIndexAnalyzers().getDefaultIndexAnalyzer()));\n \n-    private static SearchAsYouTypeFieldMapper toType(FieldMapper in) {\n-        return (SearchAsYouTypeFieldMapper) in;\n-    }\n-\n-    private static SearchAsYouTypeFieldType ft(FieldMapper in) {\n-        return toType(in).fieldType();\n+    private static Builder builder(FieldMapper in) {\n+        return ((SearchAsYouTypeFieldMapper)in).builder;\n     }\n \n     public static class Builder extends ParametrizedFieldMapper.Builder {\n \n-        private final Parameter<Boolean> index = Parameter.indexParam(m -> toType(m).index, true);\n-        private final Parameter<Boolean> store = Parameter.storeParam(m -> toType(m).store, false);\n+        private final Parameter<Boolean> index = Parameter.indexParam(m -> builder(m).index.get(), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8dfc708758b9c3396a3a892f8e114d268e6389"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5Mzg4NA==", "bodyText": "The upshot of this change is to make the analyze action work in precisely the way this comment says it doesn't... if the analyzer hasn't been built specifically for this request, then we're examining the analyzer for a specific field, and so we use the general index analyzer and pass the field name so that it delegates to the correct field analyzer.", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r508493884", "createdAt": "2020-10-20T13:19:40Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java", "diffHunk": "@@ -220,10 +220,8 @@ private static Analyzer buildCustomAnalyzer(AnalyzeAction.Request request, Analy\n         List<AnalyzeAction.AnalyzeToken> tokens = new ArrayList<>();\n         int lastPosition = -1;\n         int lastOffset = 0;\n-        // Note that we always pass \"\" as the field to the various Analyzer methods, because\n-        // the analyzers we use here are all field-specific and so ignore this parameter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8dfc708758b9c3396a3a892f8e114d268e6389"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NDc1NQ==", "bodyText": "This is moved from the fastvector highlighter - it would be nice to actually fix this in Lucene rather than have this annoying check.", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r508494755", "createdAt": "2020-10-20T13:20:47Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/analysis/FieldNameAnalyzer.java", "diffHunk": "@@ -48,4 +48,20 @@ protected Analyzer getWrappedAnalyzer(String fieldName) {\n         // Fields need to be explicitly added\n         throw new IllegalArgumentException(\"Field [\" + fieldName + \"] has no associated analyzer\");\n     }\n+\n+    public boolean containsBrokenAnalysis(String field) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8dfc708758b9c3396a3a892f8e114d268e6389"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NjY4MA==", "bodyText": "This was an IDE-recommended change, we've just asserted that maxInputLength is smaller than input.length(), so Math.min will always return it.", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r508496680", "createdAt": "2020-10-20T13:22:29Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java", "diffHunk": "@@ -402,7 +376,7 @@ public void parse(ParseContext context) throws IOException {\n             }\n             // truncate input\n             if (input.length() > maxInputLength) {\n-                int len = Math.min(maxInputLength, input.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8dfc708758b9c3396a3a892f8e114d268e6389"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NzM0Mg==", "bodyText": "Nothing calls this anymore (all mappers that use analyzers have been parametrized) so it is safe to remove.", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r508497342", "createdAt": "2020-10-20T13:23:17Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java", "diffHunk": "@@ -400,17 +402,6 @@ private void mergeSharedOptions(FieldMapper mergeWith, List<String> conflicts) {\n         if (fieldType.storeTermVectorPayloads() != other.storeTermVectorPayloads()) {\n             conflicts.add(\"mapper [\" + name() + \"] has different [store_term_vector_payloads] values\");\n         }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8dfc708758b9c3396a3a892f8e114d268e6389"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NzUzNw==", "bodyText": "This is not called from anywhere so can be removed.", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r508497537", "createdAt": "2020-10-20T13:23:32Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java", "diffHunk": "@@ -460,35 +451,6 @@ protected void doXContentBody(XContentBuilder builder, boolean includeDefaults,\n         }\n     }\n \n-    protected final void doXContentAnalyzers(XContentBuilder builder, boolean includeDefaults) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8dfc708758b9c3396a3a892f8e114d268e6389"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5OTA0MA==", "bodyText": "We don't need the default analyzer any more because text-based field mappers now always provide an analyzer even if they're using a default.", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r508499040", "createdAt": "2020-10-20T13:25:23Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MappingLookup.java", "diffHunk": "@@ -42,14 +42,7 @@\n     private final int metadataFieldCount;\n     private final FieldNameAnalyzer indexAnalyzer;\n \n-    private static void put(Map<String, Analyzer> analyzers, String key, Analyzer value, Analyzer defaultValue) {\n-        if (value == null) {\n-            value = defaultValue;\n-        }\n-        analyzers.put(key, value);\n-    }\n-\n-    public static MappingLookup fromMapping(Mapping mapping, Analyzer defaultIndex) {\n+    public static MappingLookup fromMapping(Mapping mapping) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8dfc708758b9c3396a3a892f8e114d268e6389"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUwMDE4OQ==", "bodyText": "We will be able to remove these entirely in a follow-up", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r508500189", "createdAt": "2020-10-20T13:26:44Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java", "diffHunk": "@@ -569,8 +550,11 @@ public Query existsQuery(QueryShardContext context) {\n \n     private static final class PhraseFieldMapper extends FieldMapper {\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8dfc708758b9c3396a3a892f8e114d268e6389"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUwMzExOQ==", "bodyText": "These are a consequence of changing to checking for TextSearchInfo.NONE rather than an index analyzer.  Again, it is sort of accidental that they work, and it may not make any real sense, but they do...", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r508503119", "createdAt": "2020-10-20T13:30:04Z", "author": {"login": "romseygeek"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorTests.java", "diffHunk": "@@ -80,7 +78,10 @@ protected AggregationBuilder createAggBuilderForTypeTest(MappedFieldType fieldTy\n     protected List<ValuesSourceType> getSupportedValuesSourceTypes() {\n         // TODO it is likely accidental that SigText supports anything other than Bytes, and then only text fields\n         return List.of(CoreValuesSourceType.NUMERIC,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8dfc708758b9c3396a3a892f8e114d268e6389"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d098bcdace36fcc663ede0d9e34cbbef748a870d", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/d098bcdace36fcc663ede0d9e34cbbef748a870d", "committedDate": "2020-10-20T13:39:12Z", "message": "precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a8807a8c8c88783409fdf5f5ac61727f5d7765a", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/3a8807a8c8c88783409fdf5f5ac61727f5d7765a", "committedDate": "2020-10-20T14:06:32Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cccf095acf1c7fc9e1cbacf26600e144137fc66", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/4cccf095acf1c7fc9e1cbacf26600e144137fc66", "committedDate": "2020-10-20T17:33:10Z", "message": "delegating analyzers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9437df65f23fa53c62c1b94748e9d1876cb1632", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/c9437df65f23fa53c62c1b94748e9d1876cb1632", "committedDate": "2020-10-21T08:37:41Z", "message": "precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1885058cf535880a619480bde0a21ca73133844d", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/1885058cf535880a619480bde0a21ca73133844d", "committedDate": "2020-10-21T08:37:44Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32382ad10226da332423054c78351e3d10ad688a", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/32382ad10226da332423054c78351e3d10ad688a", "committedDate": "2020-10-21T10:12:39Z", "message": "position increments on annotations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNTQwODU5", "url": "https://github.com/elastic/elasticsearch/pull/63937#pullrequestreview-513540859", "createdAt": "2020-10-21T10:42:34Z", "commit": {"oid": "32382ad10226da332423054c78351e3d10ad688a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMDo0MjozNVrOHlllmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMTowMToxNFrOHlmOTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE3NTE5NA==", "bodyText": "don't we already expose the indexAnalyzer? In that case do we need this additional method in MapperService?", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r509175194", "createdAt": "2020-10-21T10:42:35Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MapperService.java", "diffHunk": "@@ -444,6 +444,10 @@ public Analyzer indexAnalyzer() {\n         return this.indexAnalyzer;\n     }\n \n+    public boolean containsBrokenAnalysis(String field) {\n+        return this.indexAnalyzer.containsBrokenAnalysis(field);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32382ad10226da332423054c78351e3d10ad688a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NDAyNw==", "bodyText": "I think this could be package private.\nCouple more thoughts:  do we need a biconsumer? it seems like every mapper could expose its own analyzers through a Map<String, Analyzer>. This would though be quite a complicated API for the regular case, where a field either registers nothing or registers one analyzer with the same name as the field. Could we simplify things for those cases? I do see that you may want the method as abstract so you don't forget to implement it, but it requires so many empty implementations that I wonder if we should simplify this.\nTo summarize, how about something like this:\n//override this if you need multiple analyzers for the same field\nMap<String, Analyzer> getAnalyzers() {\n    return Collections.singletonMap(name(), getFieldAnalyzer());\n}\n\n//most field mappers implement this one, possibly we could return a placeholder for the case where no analyzer is needed, not sure if we want to not make it abstract, I am undecided on that.\nabstract Analyzer getFieldAnalyzer();\n\nTwo methods would have the advantage that it would be immediately traceable which mappers register multiple fields, if that matters.", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r509184027", "createdAt": "2020-10-21T10:58:18Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java", "diffHunk": "@@ -506,6 +468,8 @@ protected static String indexOptionToString(IndexOptions indexOption) {\n \n     protected abstract String contentType();\n \n+    public abstract void registerIndexAnalyzer(BiConsumer<String, Analyzer> analyzerRegistry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32382ad10226da332423054c78351e3d10ad688a"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NTYxNQ==", "bodyText": "Something that bugs me, not directly related to your change, but that we may want to address: MapperService exposes indexAnalyzer, MappingLookup too. But they are two fundamentally different things. I have issues remembering which is what. Could we name them differently. Also as I am going to need to expose them both in the QueryShardContext. I am calling the new one getFieldNameAnalyzer, but you'll have better ideas.", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r509185615", "createdAt": "2020-10-21T11:01:14Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MapperService.java", "diffHunk": "@@ -121,7 +121,7 @@ public MapperService(IndexSettings indexSettings, IndexAnalyzers indexAnalyzers,\n         super(indexSettings);\n         this.indexVersionCreated = indexSettings.getIndexVersionCreated();\n         this.indexAnalyzers = indexAnalyzers;\n-        this.indexAnalyzer = new MapperAnalyzerWrapper(indexAnalyzers.getDefaultIndexAnalyzer(), MappedFieldType::indexAnalyzer);\n+        this.indexAnalyzer = new MapperAnalyzerWrapper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32382ad10226da332423054c78351e3d10ad688a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b963be352c40d6d22dc664f2ace18b6f851239a", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/0b963be352c40d6d22dc664f2ace18b6f851239a", "committedDate": "2020-10-26T16:21:32Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6adf804bb2a5ceb35aa35062f1ebb35f1bfd1c3", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/d6adf804bb2a5ceb35aa35062f1ebb35f1bfd1c3", "committedDate": "2020-10-27T14:40:06Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1b8095fdddd17457339486d13d1954e89ed8871", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/f1b8095fdddd17457339486d13d1954e89ed8871", "committedDate": "2020-10-27T15:29:11Z", "message": "Move to returning maps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb81e255fc362f3afb43df1666bf0bf495fdcc04", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/bb81e255fc362f3afb43df1666bf0bf495fdcc04", "committedDate": "2020-10-27T15:48:45Z", "message": "imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2585186afbf02d47db257c5b97c382e39eeb3c4d", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/2585186afbf02d47db257c5b97c382e39eeb3c4d", "committedDate": "2020-10-27T16:18:25Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f3da1d43c7615e7ae2c51704a66966485a8791e", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/4f3da1d43c7615e7ae2c51704a66966485a8791e", "committedDate": "2020-10-29T11:42:30Z", "message": "Make everything a NamedAnalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be55995bc711fb6b5c35ffb1fa92a6f7b7fe2b30", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/be55995bc711fb6b5c35ffb1fa92a6f7b7fe2b30", "committedDate": "2020-10-29T11:54:26Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73044b58cab37ba8a4dea29e98332b8bd297eef0", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/73044b58cab37ba8a4dea29e98332b8bd297eef0", "committedDate": "2020-10-29T12:04:05Z", "message": "warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25f3c0d4cc16fff576b1a6c71ad9437253f7e8f8", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/25f3c0d4cc16fff576b1a6c71ad9437253f7e8f8", "committedDate": "2020-10-29T14:53:56Z", "message": "sigtext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c04c7d1bbd124b9dd74fbb9d6706edd14bc940d1", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/c04c7d1bbd124b9dd74fbb9d6706edd14bc940d1", "committedDate": "2020-10-29T16:30:03Z", "message": "Collapse ParametrizedFieldMapper into FieldMapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "639126e07d876bddb7008c98c2cb6617f9c9edca", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/639126e07d876bddb7008c98c2cb6617f9c9edca", "committedDate": "2020-10-29T21:30:14Z", "message": "SAYT shouldn't try to add fields if index=false and store=false"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNDYyMjMw", "url": "https://github.com/elastic/elasticsearch/pull/63937#pullrequestreview-520462230", "createdAt": "2020-10-30T08:35:51Z", "commit": {"oid": "25f3c0d4cc16fff576b1a6c71ad9437253f7e8f8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODozNTo1MlrOHrFhsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODozODo1MlrOHrFnIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk0MTM2Mw==", "bodyText": "should we have an easier path for this common scenario where there is only one analyzer and it is registered with the same name as the field? the mapper in this case only needs to expose which analyzer it is? Having two paths is not optimal, but I think it would help highlighting which mappers are different in that they provide multiple analyzers.", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r514941363", "createdAt": "2020-10-30T08:35:52Z", "author": {"login": "javanna"}, "path": "modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/RankFeaturesFieldMapper.java", "diffHunk": "@@ -161,4 +161,9 @@ protected String contentType() {\n         return CONTENT_TYPE;\n     }\n \n+    @Override\n+    public Map<String, NamedAnalyzer> indexAnalyzers() {\n+        return Collections.singletonMap(name(), Lucene.KEYWORD_ANALYZER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25f3c0d4cc16fff576b1a6c71ad9437253f7e8f8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk0Mjc1NQ==", "bodyText": "I see thanks for explaining", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r514942755", "createdAt": "2020-10-30T08:38:52Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MapperService.java", "diffHunk": "@@ -444,6 +444,10 @@ public Analyzer indexAnalyzer() {\n         return this.indexAnalyzer;\n     }\n \n+    public boolean containsBrokenAnalysis(String field) {\n+        return this.indexAnalyzer.containsBrokenAnalysis(field);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE3NTE5NA=="}, "originalCommit": {"oid": "32382ad10226da332423054c78351e3d10ad688a"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "feea031ef463d700c3598349cf432ff66bc71c38", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/feea031ef463d700c3598349cf432ff66bc71c38", "committedDate": "2020-11-02T12:13:52Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ee7dda1d3d02ee313dd46def7d4e40651517c0c", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/9ee7dda1d3d02ee313dd46def7d4e40651517c0c", "committedDate": "2020-11-02T12:23:36Z", "message": "Merge branch 'mapper/fieldmapper' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88ad7e5dcd9d94f28da59d0831b2e5850211b99a", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/88ad7e5dcd9d94f28da59d0831b2e5850211b99a", "committedDate": "2020-11-02T15:31:22Z", "message": "Make indexAnalyzers passed via constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "040ec026700af36ec70059a4b9d943cfb48a0206", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/040ec026700af36ec70059a4b9d943cfb48a0206", "committedDate": "2020-11-02T15:46:39Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d2a081fe06c0ccbe67f5777a829b05bbbf193d4", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/0d2a081fe06c0ccbe67f5777a829b05bbbf193d4", "committedDate": "2020-11-02T16:59:26Z", "message": "SearchAsYouType tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b28b2c5a606ea8c41620ff387d400accb642149", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/7b28b2c5a606ea8c41620ff387d400accb642149", "committedDate": "2020-11-03T17:42:07Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22357b772908c5a7f08ebc185cb7b7df902b5bdc", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/22357b772908c5a7f08ebc185cb7b7df902b5bdc", "committedDate": "2020-11-03T18:10:19Z", "message": "Merge branch 'master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "479309734141b6006c49bc8268e72e042eba3e94", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/479309734141b6006c49bc8268e72e042eba3e94", "committedDate": "2020-11-04T09:14:49Z", "message": "Merge branch 'master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMjMyODc2", "url": "https://github.com/elastic/elasticsearch/pull/63937#pullrequestreview-523232876", "createdAt": "2020-11-04T10:32:59Z", "commit": {"oid": "479309734141b6006c49bc8268e72e042eba3e94"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMDozMjo1OVrOHtSNiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMDozMjo1OVrOHtSNiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI0NjM0NA==", "bodyText": "this is introducing another usage of FetchContext#mapperService() that we'd like to remove :( could we find a way around it?", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r517246344", "createdAt": "2020-11-04T10:32:59Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/FastVectorHighlighter.java", "diffHunk": "@@ -72,6 +72,7 @@ public HighlightField highlight(FieldHighlightContext fieldContext) throws IOExc\n         FetchSubPhase.HitContext hitContext = fieldContext.hitContext;\n         MappedFieldType fieldType = fieldContext.fieldType;\n         boolean forceSource = fieldContext.forceSource;\n+        boolean fixBrokenAnalysis = fieldContext.context.mapperService().containsBrokenAnalysis(fieldContext.fieldName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "479309734141b6006c49bc8268e72e042eba3e94"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMjQwNjk3", "url": "https://github.com/elastic/elasticsearch/pull/63937#pullrequestreview-523240697", "createdAt": "2020-11-04T10:42:36Z", "commit": {"oid": "479309734141b6006c49bc8268e72e042eba3e94"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9051a48d45912bc7c8054faa9404d3b260a1358", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/a9051a48d45912bc7c8054faa9404d3b260a1358", "committedDate": "2020-11-04T11:26:31Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "342525c7fcf18cfdcbd85b1afe453d5fbdc0cf70", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/342525c7fcf18cfdcbd85b1afe453d5fbdc0cf70", "committedDate": "2020-11-04T11:26:46Z", "message": "Merge remote-tracking branch 'romseygeek/mapper/indexanalyzer' into mapper/indexanalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5099a60e7d3bcf3068f05e388fdd474b88fc7056", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/5099a60e7d3bcf3068f05e388fdd474b88fc7056", "committedDate": "2020-11-04T11:30:07Z", "message": "Don't call FetchContext#mapperService"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMjk2ODI4", "url": "https://github.com/elastic/elasticsearch/pull/63937#pullrequestreview-523296828", "createdAt": "2020-11-04T12:01:44Z", "commit": {"oid": "5099a60e7d3bcf3068f05e388fdd474b88fc7056"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMjowMTo0NFrOHtVKgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMjowMTo0NFrOHtVKgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI5NDcyMg==", "bodyText": "this also calls mapperService() :) can you add the method to QueryShardContext and call it from there?", "url": "https://github.com/elastic/elasticsearch/pull/63937#discussion_r517294722", "createdAt": "2020-11-04T12:01:44Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/FetchContext.java", "diffHunk": "@@ -167,6 +167,14 @@ public SearchHighlightContext highlight() {\n         return searchContext.highlight();\n     }\n \n+    /**\n+     * Does the index analyzer for this field have token filters that may produce\n+     * backwards offsets in term vectors\n+     */\n+    public boolean containsBrokenAnalysis(String field) {\n+        return mapperService().containsBrokenAnalysis(field);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5099a60e7d3bcf3068f05e388fdd474b88fc7056"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4f78828bba7e499c234210e48d7cbdc9e24bbc3", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/e4f78828bba7e499c234210e48d7cbdc9e24bbc3", "committedDate": "2020-11-04T12:05:30Z", "message": "No really, don't use mapperservice"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMzc1Nzg0", "url": "https://github.com/elastic/elasticsearch/pull/63937#pullrequestreview-523375784", "createdAt": "2020-11-04T13:49:20Z", "commit": {"oid": "e4f78828bba7e499c234210e48d7cbdc9e24bbc3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1193, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}