{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3MTg3MTk2", "number": 66207, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwOTo1ODo0NlrOFEXy4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNTo0NjoyOFrOFFDLhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMTI4NDgxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/assembler/Criterion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwOTo1ODo0NlrOIEdSxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwOTo1ODo0NlrOIEdSxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU0NTE1OA==", "bodyText": "You could have used a variable initialized with keys.size() and use that in the Object[] initialization and further down in the for loop.", "url": "https://github.com/elastic/elasticsearch/pull/66207#discussion_r541545158", "createdAt": "2020-12-12T09:58:46Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/assembler/Criterion.java", "diffHunk": "@@ -52,20 +51,14 @@ public Q queryRequest() {\n         return queryRequest;\n     }\n \n-    public int keySize() {\n-        return keys.size();\n-    }\n-\n-    public SequenceKey key(SearchHit hit) {\n-        SequenceKey key;\n-        if (keys.isEmpty()) {\n-            key = SequenceKey.NONE;\n-        } else {\n+    public Object[] key(SearchHit hit) {\n+        Object[] key = null;\n+        if (keys.isEmpty() == false) {\n             Object[] docKeys = new Object[keys.size()];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97e40080029ec6f0d192e41e591d377d39567903"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMTI4NjE3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/TumblingWindow.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwOTo1OTozMVrOIEdTWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo1MDo0MFrOIFDs-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU0NTMwNg==", "bodyText": "The PR description mentioned 64.", "url": "https://github.com/elastic/elasticsearch/pull/66207#discussion_r541545306", "createdAt": "2020-12-12T09:59:31Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/TumblingWindow.java", "diffHunk": "@@ -47,8 +49,23 @@\n  */\n public class TumblingWindow implements Executable {\n \n+    private static final int CACHE_MAX_SIZE = 63;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97e40080029ec6f0d192e41e591d377d39567903"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NDQ1OA==", "bodyText": "I wanted to make sure the eviction occurs before the map gets resized. Checking the code it looks like checking the equality on 64 should work.", "url": "https://github.com/elastic/elasticsearch/pull/66207#discussion_r542174458", "createdAt": "2020-12-14T07:50:40Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/TumblingWindow.java", "diffHunk": "@@ -47,8 +49,23 @@\n  */\n public class TumblingWindow implements Executable {\n \n+    private static final int CACHE_MAX_SIZE = 63;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU0NTMwNg=="}, "originalCommit": {"oid": "97e40080029ec6f0d192e41e591d377d39567903"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTExNDk0OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/TumblingWindow.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QyMjo1NzoyN1rOIE6m4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QyMjo1NzoyN1rOIE6m4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAyNTQ0Mw==", "bodyText": "Since we have a Cache class in the common lib, which is more complex and supports concurrency, could we have a comment here that concurrency is not needed?", "url": "https://github.com/elastic/elasticsearch/pull/66207#discussion_r542025443", "createdAt": "2020-12-13T22:57:27Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/TumblingWindow.java", "diffHunk": "@@ -47,8 +49,23 @@\n  */\n public class TumblingWindow implements Executable {\n \n+    private static final int CACHE_MAX_SIZE = 63;\n+\n     private final Logger log = LogManager.getLogger(TumblingWindow.class);\n \n+    /**\n+     * Simple cache for removing duplicate strings (such as index name or common keys).\n+     * Designed to be low-effort and thus optimistic in nature.\n+     * Thus it has a small, upper limit so that it doesn't require any cleaning up.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97e40080029ec6f0d192e41e591d377d39567903"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODM5MzAzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/TumblingWindow.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNTo0NjoyOFrOIFW4ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNTo0NjoyOFrOIFW4ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ4ODY3Ng==", "bodyText": "One things to consider: Start with the CACHE_MAX_SIZE instead of the default size (16). The HashMap will have to grow anyways, unless you think that the chances of having <= 32 different strings are high.", "url": "https://github.com/elastic/elasticsearch/pull/66207#discussion_r542488676", "createdAt": "2020-12-14T15:46:28Z", "author": {"login": "palesz"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/TumblingWindow.java", "diffHunk": "@@ -47,8 +49,23 @@\n  */\n public class TumblingWindow implements Executable {\n \n+    private static final int CACHE_MAX_SIZE = 64;\n+\n     private final Logger log = LogManager.getLogger(TumblingWindow.class);\n \n+    /**\n+     * Simple cache for removing duplicate strings (such as index name or common keys).\n+     * Designed to be low-effort, non-concurrent (not needed) and thus optimistic in nature.\n+     * Thus it has a small, upper limit so that it doesn't require any cleaning up.\n+     */\n+    // start with the default size and allow growth until the max size\n+    private final Map<String, String> stringCache = new LinkedHashMap<>(16, 0.75f, true) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d0baacef81cdd9c349c336e60e15d4c3f99ff65"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4652, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}