{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI5OTAwOTA2", "number": 57785, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxMDowNzoyNVrOEDOYuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxMDowNzoyNVrOEDOYuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODE2ODg4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxMDowNzoyNVrOGgIe-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxMDowNzoyNVrOGgIe-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM0NjYxOQ==", "bodyText": "There is an obvious and much cleaner fix here by simply caching the compressed form of the already serialized RepositoryData when writing/reading instead of re-serializing that would also improve efficiency. I just went with this approach now to have the smallest possible fix for a safe back-port.", "url": "https://github.com/elastic/elasticsearch/pull/57785#discussion_r436346619", "createdAt": "2020-06-07T10:07:25Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1295,15 +1297,16 @@ private void doGetRepositoryData(ActionListener<RepositoryData> listener) {\n      * generation will always contain the same {@link RepositoryData}.\n      *\n      * @param updated RepositoryData to cache if newer than the cache contents\n+     * @param version version of the repository metadata that was cached\n      */\n-    private void cacheRepositoryData(RepositoryData updated) {\n+    private void cacheRepositoryData(RepositoryData updated, Version version) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f22c5c507d6a0cff3672e59271d393c56d92da0"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3606, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}