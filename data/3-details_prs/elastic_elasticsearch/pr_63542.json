{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNDU1ODQ2", "number": 63542, "title": "[ML] Wait for controller to respond to commands", "bodyText": "This change makes threads that send a command to the ML\ncontroller process wait for it to respond to the command.\nPreviously such threads would block until the command was\nsent, but not until it was actioned.  This was on the\nassumption that the sort of commands being sent would be\nactioned almost instantaneously, but that assumption has\nbeen shown to be false when anti-malware software is\nrunning.\nRelates elastic/ml-cpp#1520\nFixes #62823", "createdAt": "2020-10-12T09:42:36Z", "url": "https://github.com/elastic/elasticsearch/pull/63542", "merged": true, "mergeCommit": {"oid": "65ceee8bf80fe8c900e43bd057e29fe9d08f7f88"}, "closed": true, "closedAt": "2020-10-17T09:28:26Z", "author": {"login": "droberts195"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRwqbYAH2gAyNTAxNDU1ODQ2OmFhYjgwMWEyOTZiNDIxOWNlMzQwMzU5NjAzNDJjMmU5ZGViNmEyY2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTVCRWgH2gAyNTAxNDU1ODQ2OjFkYzhlZjk2ZDE5OTk3YTY5OTY4Y2M3ZWQzMTY5Mjk1N2Y3ZTNiOTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aab801a296b4219ce34035960342c2e9deb6a2cb", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/aab801a296b4219ce34035960342c2e9deb6a2cb", "committedDate": "2020-10-12T09:35:44Z", "message": "[ML] Wait for controller to respond to commands\n\nThis change makes threads that send a command to the ML\ncontroller process wait for it to respond to the command.\nPreviously such threads would block until the command was\nsent, but not until it was actioned.  This was on the\nassumption that the sort of commands being sent would be\nactioned almost instantaneously, but that assumption has\nbeen shown to be false when anti-malware software is\nrunning.\n\nRelates elastic/ml-cpp#1520\nFixes #62823"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NTkxMzM4", "url": "https://github.com/elastic/elasticsearch/pull/63542#pullrequestreview-506591338", "createdAt": "2020-10-12T12:52:28Z", "commit": {"oid": "aab801a296b4219ce34035960342c2e9deb6a2cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NTk2MzMw", "url": "https://github.com/elastic/elasticsearch/pull/63542#pullrequestreview-506596330", "createdAt": "2020-10-12T12:58:58Z", "commit": {"oid": "aab801a296b4219ce34035960342c2e9deb6a2cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMjo1ODo1OFrOHf9r_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMjo1ODo1OFrOHf9r_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI3ODU5MQ==", "bodyText": "I am curious on locking on this and not on ourResponseTracker for the entire while loop.\nIf we lock on this, that means that any other command could not be processed.\nOur commands are always handled in a single thread and could NEVER be processed out of order correct? If they are ever processed out of order, this seems like it would cause a thread lock.", "url": "https://github.com/elastic/elasticsearch/pull/63542#discussion_r503278591", "createdAt": "2020-10-12T12:58:58Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/process/NativeController.java", "diffHunk": "@@ -152,4 +200,75 @@ public void stop() throws IOException {\n         // The C++ process will exit when it gets EOF on the command stream\n         commandStream.close();\n     }\n+\n+    private void setupResponseTracker(int commandId) {\n+        ResponseTracker tracker = new ResponseTracker();\n+        ResponseTracker previous = responseTrackers.put(commandId, tracker);\n+        assert previous == null;\n+    }\n+\n+    private void removeResponseTracker(int commandId) {\n+        responseTrackers.remove(commandId);\n+    }\n+\n+    private void awaitCompletion(int commandId) throws IOException, InterruptedException {\n+\n+        ResponseTracker ourResponseTracker = responseTrackers.get(commandId);\n+        assert ourResponseTracker != null;\n+\n+        // If our response has not been seen already (by another thread), parse messages under lock until it is seen.\n+        // This approach means that of all the threads waiting for controller responses, one is parsing the messages\n+        // on behalf of all of them, and the others are blocked.  When the thread that is parsing gets the response\n+        // it needs another thread will pick up the parsing.\n+        if (ourResponseTracker.hasResponded() == false) {\n+            synchronized (responseIteratorHolder) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab801a296b4219ce34035960342c2e9deb6a2cb"}, "originalPosition": 178}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NTczMjg2", "url": "https://github.com/elastic/elasticsearch/pull/63542#pullrequestreview-506573286", "createdAt": "2020-10-12T12:27:48Z", "commit": {"oid": "aab801a296b4219ce34035960342c2e9deb6a2cb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMjoyNzo0OFrOHf8lyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzoxMToxOVrOHf-Igg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI2MDYxNw==", "bodyText": "Can you use the more standard [job_id] message format here and in the other logged warnings\nLOGGER.warn(\"[{}] Interrupted while launching autodetect\", job.getId());", "url": "https://github.com/elastic/elasticsearch/pull/63542#discussion_r503260617", "createdAt": "2020-10-12T12:27:48Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/NativeAutodetectProcessFactory.java", "diffHunk": "@@ -127,6 +127,9 @@ void createNativeProcess(Job job, AutodetectParams autodetectParams, ProcessPipe\n                 autodetectBuilder.quantiles(autodetectParams.quantiles());\n             }\n             autodetectBuilder.build();\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            LOGGER.warn(\"Interrupted while launching autodetect for job \" + job.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab801a296b4219ce34035960342c2e9deb6a2cb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI2NzU3OQ==", "bodyText": "commandId is set in the first line of the synchronized block I don't see how it could ever be -1. Also will add a tracker to the map whatever the value of commandId", "url": "https://github.com/elastic/elasticsearch/pull/63542#discussion_r503267579", "createdAt": "2020-10-12T12:40:16Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/process/NativeController.java", "diffHunk": "@@ -110,19 +130,31 @@ public void startProcess(List<String> command) throws IOException {\n             throw new ElasticsearchException(msg);\n         }\n \n-        synchronized (commandStream) {\n-            LOGGER.debug(\"Starting process with command: \" + command);\n-            commandStream.write(START_COMMAND.getBytes(StandardCharsets.UTF_8));\n-            for (String arg : command) {\n+        int commandId = -1;\n+        try {\n+            synchronized (commandStream) {\n+                commandId = nextCommandId++;\n+                setupResponseTracker(commandId);\n+                LOGGER.debug(\"Command [{}]: starting process with command {}\", commandId, command);\n+                commandStream.write(Integer.toString(commandId).getBytes(StandardCharsets.UTF_8));\n                 commandStream.write('\\t');\n-                commandStream.write(arg.getBytes(StandardCharsets.UTF_8));\n+                commandStream.write(START_COMMAND.getBytes(StandardCharsets.UTF_8));\n+                for (String arg : command) {\n+                    commandStream.write('\\t');\n+                    commandStream.write(arg.getBytes(StandardCharsets.UTF_8));\n+                }\n+                commandStream.write('\\n');\n+                commandStream.flush();\n+            }\n+            awaitCompletion(commandId);\n+        } finally {\n+            if (commandId != -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab801a296b4219ce34035960342c2e9deb6a2cb"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI4NTg5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (commandId != -1) {\n          \n          \n            \n                        if (awaitCompletion) {", "url": "https://github.com/elastic/elasticsearch/pull/63542#discussion_r503285890", "createdAt": "2020-10-12T13:11:19Z", "author": {"login": "davidkyle"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/process/NativeController.java", "diffHunk": "@@ -137,13 +169,29 @@ public void killProcess(long pid) throws TimeoutException, IOException {\n             throw new ElasticsearchException(msg);\n         }\n \n-        synchronized (commandStream) {\n-            LOGGER.debug(\"Killing process with PID: \" + pid);\n-            commandStream.write(KILL_COMMAND.getBytes(StandardCharsets.UTF_8));\n-            commandStream.write('\\t');\n-            commandStream.write(Long.toString(pid).getBytes(StandardCharsets.UTF_8));\n-            commandStream.write('\\n');\n-            commandStream.flush();\n+        int commandId = -1;\n+        try {\n+            synchronized (commandStream) {\n+                commandId = nextCommandId++;\n+                if (awaitCompletion) {\n+                    setupResponseTracker(commandId);\n+                }\n+                LOGGER.debug(\"Command [{}]: killing process with PID [{}]\", commandId, pid);\n+                commandStream.write(Integer.toString(commandId).getBytes(StandardCharsets.UTF_8));\n+                commandStream.write('\\t');\n+                commandStream.write(KILL_COMMAND.getBytes(StandardCharsets.UTF_8));\n+                commandStream.write('\\t');\n+                commandStream.write(Long.toString(pid).getBytes(StandardCharsets.UTF_8));\n+                commandStream.write('\\n');\n+                commandStream.flush();\n+            }\n+            if (awaitCompletion) {\n+                awaitCompletion(commandId);\n+            }\n+        } finally {\n+            if (commandId != -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab801a296b4219ce34035960342c2e9deb6a2cb"}, "originalPosition": 147}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f768561a65ff4dc0e3fcd839f28f9b658fac04f4", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/f768561a65ff4dc0e3fcd839f28f9b658fac04f4", "committedDate": "2020-10-12T15:49:18Z", "message": "Some review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2ODM2OTAz", "url": "https://github.com/elastic/elasticsearch/pull/63542#pullrequestreview-506836903", "createdAt": "2020-10-12T18:34:16Z", "commit": {"oid": "f768561a65ff4dc0e3fcd839f28f9b658fac04f4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b093276adb1c0dc2ae717986d1bca8265a881247", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/b093276adb1c0dc2ae717986d1bca8265a881247", "committedDate": "2020-10-17T06:32:00Z", "message": "Merge branch 'master' into controller_response_changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dc8ef96d19997a69968cc7ed31692957f7e3b93", "author": {"user": {"login": "droberts195", "name": "David Roberts"}}, "url": "https://github.com/elastic/elasticsearch/commit/1dc8ef96d19997a69968cc7ed31692957f7e3b93", "committedDate": "2020-10-17T06:32:17Z", "message": "Revert \"[ML] Mute all ML tests that may create native processes (#63610)\"\n\nThis reverts commit 16bb39dd752aa8fdad0c5544c7f3d79c522f78b2."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4044, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}