{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NTk1NTAz", "number": 60107, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMDozOToyNVrOERZReA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzo0NTo1M1rOESsVpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Njc1MzIwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMDozOToyNVrOG2FG1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMDozOToyNVrOG2FG1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM1OTk1OA==", "bodyText": "Still kind of awkward to right away serialize what we just read but I didn't want to make the bigger changes required for not having to serialize here in this PR + it's a rare spot to get here anyway and only applies to the first load of repository data on a master node.", "url": "https://github.com/elastic/elasticsearch/pull/60107#discussion_r459359958", "createdAt": "2020-07-23T10:39:25Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1250,9 +1249,11 @@ private void doGetRepositoryData(ActionListener<RepositoryData> listener) {\n                     loaded = repositoryDataFromCachedEntry(cached);\n                 } else {\n                     loaded = getRepositoryData(genToLoad);\n-                    // We can cache in the most recent version here without regard to the actual repository metadata version since we're\n-                    // only caching the information that we just wrote and thus won't accidentally cache any information that isn't safe\n-                    cacheRepositoryData(loaded, Version.CURRENT);\n+                    // We can cache serialized in the most recent version here without regard to the actual repository metadata version\n+                    // since we're only caching the information that we just wrote and thus won't accidentally cache any information that\n+                    // isn't safe\n+                    cacheRepositoryData(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc710ec19c613441288c4cf78ebaf899c57191c7"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDM2MjYyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzo0NTo1M1rOG4ApMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwODowMjoxMFrOG4BNvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4Mzk4Ng==", "bodyText": "I think it's a bit weird to set this only at the very end. I think we shuld set the new genId on the RepositoryData object as soon as we have final long newGen = setPendingStep.result();?", "url": "https://github.com/elastic/elasticsearch/pull/60107#discussion_r461383986", "createdAt": "2020-07-28T07:45:53Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1601,7 +1601,7 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n                             } catch (IOException e) {\n                                 logger.warn(() -> new ParameterizedMessage(\"Failed to clean up old index blobs {}\", oldIndexN), e);\n                             }\n-                            return writtenRepositoryData;\n+                            return filteredRepositoryData.withGenId(newGen);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc710ec19c613441288c4cf78ebaf899c57191c7"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM5MzM0Mw==", "bodyText": "Fair point, I pushed 602e32f to clean this up :)", "url": "https://github.com/elastic/elasticsearch/pull/60107#discussion_r461393343", "createdAt": "2020-07-28T08:02:10Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1601,7 +1601,7 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n                             } catch (IOException e) {\n                                 logger.warn(() -> new ParameterizedMessage(\"Failed to clean up old index blobs {}\", oldIndexN), e);\n                             }\n-                            return writtenRepositoryData;\n+                            return filteredRepositoryData.withGenId(newGen);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4Mzk4Ng=="}, "originalCommit": {"oid": "dc710ec19c613441288c4cf78ebaf899c57191c7"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2134, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}