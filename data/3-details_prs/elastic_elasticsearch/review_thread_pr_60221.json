{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MjI5Nzc0", "number": 60221, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzo0OTozN1rOESsajQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzo0OTozN1rOESsajQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDM3NTE3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/RegressionIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzo0OTozN1rOG4AxOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwODowNTowNFrOG4BUAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4NjA0MQ==", "bodyText": "I'm wondering if we could drop the Math.abs here. This would of course increase the chance of the assertion in line 564 to pass but maybe it is not necessary.", "url": "https://github.com/elastic/elasticsearch/pull/60221#discussion_r461386041", "createdAt": "2020-07-28T07:49:37Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/RegressionIT.java", "diffHunk": "@@ -544,19 +543,26 @@ public void testAliasFields() throws Exception {\n         startAnalytics(jobId);\n         waitUntilAnalyticsIsStopped(jobId);\n \n+        double predictionErrorSum = 0.0;\n+\n         SearchResponse sourceData = client().prepareSearch(sourceIndex).setSize(totalDocCount).get();\n         for (SearchHit hit : sourceData.getHits()) {\n             Map<String, Object> destDoc = getDestDoc(config, hit);\n             Map<String, Object> resultsObject = getMlResultsObjectFromDestDoc(destDoc);\n \n-            int featureValue = (int) destDoc.get(\"field_1\");\n-            double predictionValue = (double) resultsObject.get(predictionField);\n-            assertThat(predictionValue, closeTo(2 * featureValue, 10.0));\n-\n             assertThat(resultsObject.containsKey(predictionField), is(true));\n             assertThat(resultsObject.containsKey(\"is_training\"), is(true));\n+\n+            int featureValue = (int) destDoc.get(\"field_1\");\n+            double predictionValue = (double) resultsObject.get(predictionField);\n+            predictionErrorSum += Math.abs(predictionValue - 2 * featureValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84342b1cad1386c3bfa8887019f1ab07e63d892c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM5NDk0NA==", "bodyText": "We are interested in how far the prediction is from what we expect. Dropping the abs would mean that 2 errors that are opposite direction would cancel each other out and possibly this could hide the fact that the error is too large.", "url": "https://github.com/elastic/elasticsearch/pull/60221#discussion_r461394944", "createdAt": "2020-07-28T08:05:04Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/RegressionIT.java", "diffHunk": "@@ -544,19 +543,26 @@ public void testAliasFields() throws Exception {\n         startAnalytics(jobId);\n         waitUntilAnalyticsIsStopped(jobId);\n \n+        double predictionErrorSum = 0.0;\n+\n         SearchResponse sourceData = client().prepareSearch(sourceIndex).setSize(totalDocCount).get();\n         for (SearchHit hit : sourceData.getHits()) {\n             Map<String, Object> destDoc = getDestDoc(config, hit);\n             Map<String, Object> resultsObject = getMlResultsObjectFromDestDoc(destDoc);\n \n-            int featureValue = (int) destDoc.get(\"field_1\");\n-            double predictionValue = (double) resultsObject.get(predictionField);\n-            assertThat(predictionValue, closeTo(2 * featureValue, 10.0));\n-\n             assertThat(resultsObject.containsKey(predictionField), is(true));\n             assertThat(resultsObject.containsKey(\"is_training\"), is(true));\n+\n+            int featureValue = (int) destDoc.get(\"field_1\");\n+            double predictionValue = (double) resultsObject.get(predictionField);\n+            predictionErrorSum += Math.abs(predictionValue - 2 * featureValue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4NjA0MQ=="}, "originalCommit": {"oid": "84342b1cad1386c3bfa8887019f1ab07e63d892c"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2074, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}