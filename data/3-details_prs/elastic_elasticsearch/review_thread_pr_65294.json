{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MzkwNDYy", "number": 65294, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwOTo0NjoxNFrOE7d2lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwOTo0NjoxNFrOE7d2lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzkwNTQ4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractFieldScript.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwOTo0NjoxNFrOH3IaSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOTo0ODo1MFrOH3em-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU3MTUzMQ==", "bodyText": "Do we actually need this method at all?  All the tests that call it also have access to the leafSearchLookup object so they could just use that?", "url": "https://github.com/elastic/elasticsearch/pull/65294#discussion_r527571531", "createdAt": "2020-11-20T09:46:14Z", "author": {"login": "romseygeek"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractFieldScript.java", "diffHunk": "@@ -88,17 +88,17 @@ public final void setDocument(int docId) {\n     }\n \n     /**\n-     * Expose the {@code _source} to the script.\n+     * Expose field data to the script as {@code doc}.\n      */\n-    protected final Map<String, Object> getSource() {\n-        return leafSearchLookup.source();\n+    public final Map<String, ScriptDocValues<?>> getDoc() {\n+        return leafSearchLookup.doc();\n     }\n \n     /**\n-     * Expose field data to the script as {@code doc}.\n+     * A non-public convenience method that's used in testing.\n      */\n-    public final Map<String, ScriptDocValues<?>> getDoc() {\n-        return leafSearchLookup.doc();\n+    protected final Map<String, Object> getSource() {\n+        return leafSearchLookup.source();\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9890c4ae4f3b3b5e357d0e867a19fa51b25e68e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc4ODE3Mg==", "bodyText": "you mean that we should make leafSearchLookup protected? I don't think the tests have access to it today but maybe they should.", "url": "https://github.com/elastic/elasticsearch/pull/65294#discussion_r527788172", "createdAt": "2020-11-20T15:58:14Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractFieldScript.java", "diffHunk": "@@ -88,17 +88,17 @@ public final void setDocument(int docId) {\n     }\n \n     /**\n-     * Expose the {@code _source} to the script.\n+     * Expose field data to the script as {@code doc}.\n      */\n-    protected final Map<String, Object> getSource() {\n-        return leafSearchLookup.source();\n+    public final Map<String, ScriptDocValues<?>> getDoc() {\n+        return leafSearchLookup.doc();\n     }\n \n     /**\n-     * Expose field data to the script as {@code doc}.\n+     * A non-public convenience method that's used in testing.\n      */\n-    public final Map<String, ScriptDocValues<?>> getDoc() {\n-        return leafSearchLookup.doc();\n+    protected final Map<String, Object> getSource() {\n+        return leafSearchLookup.source();\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU3MTUzMQ=="}, "originalCommit": {"oid": "9890c4ae4f3b3b5e357d0e867a19fa51b25e68e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgzNzk1NQ==", "bodyText": "Right, leafSearchLookup is currently private. I was just thinking of this as a tiny incremental improvement to avoid another person being confused by the javadoc.", "url": "https://github.com/elastic/elasticsearch/pull/65294#discussion_r527837955", "createdAt": "2020-11-20T17:13:26Z", "author": {"login": "jtibshirani"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractFieldScript.java", "diffHunk": "@@ -88,17 +88,17 @@ public final void setDocument(int docId) {\n     }\n \n     /**\n-     * Expose the {@code _source} to the script.\n+     * Expose field data to the script as {@code doc}.\n      */\n-    protected final Map<String, Object> getSource() {\n-        return leafSearchLookup.source();\n+    public final Map<String, ScriptDocValues<?>> getDoc() {\n+        return leafSearchLookup.doc();\n     }\n \n     /**\n-     * Expose field data to the script as {@code doc}.\n+     * A non-public convenience method that's used in testing.\n      */\n-    public final Map<String, ScriptDocValues<?>> getDoc() {\n-        return leafSearchLookup.doc();\n+    protected final Map<String, Object> getSource() {\n+        return leafSearchLookup.source();\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU3MTUzMQ=="}, "originalCommit": {"oid": "9890c4ae4f3b3b5e357d0e867a19fa51b25e68e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1ODM3OQ==", "bodyText": "I mean the tests currently look like this:\nreturn (fieldName, params, lookup) -> (ctx) -> new BooleanFieldScript(fieldName, params, lookup, ctx) {\n                                    @Override\n                                    public void execute() {\n                                        for (Object foo : (List<?>) getSource().get(\"foo\")) {\n                                            emit((Boolean) foo);\n                                        }\n                                    }\n                                };\n\nwhere lookup is passed as a parameter to the lambda, so we could rewrite them like this:\nreturn (fieldName, params, lookup) -> (ctx) -> new BooleanFieldScript(fieldName, params, lookup, ctx) {\n                                    @Override\n                                    public void execute() {\n                                        for (Object foo : (List<?>) lookup.source().get(\"foo\")) {\n                                            emit((Boolean) foo);\n                                        }\n                                    }\n                                };", "url": "https://github.com/elastic/elasticsearch/pull/65294#discussion_r527858379", "createdAt": "2020-11-20T17:39:07Z", "author": {"login": "romseygeek"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractFieldScript.java", "diffHunk": "@@ -88,17 +88,17 @@ public final void setDocument(int docId) {\n     }\n \n     /**\n-     * Expose the {@code _source} to the script.\n+     * Expose field data to the script as {@code doc}.\n      */\n-    protected final Map<String, Object> getSource() {\n-        return leafSearchLookup.source();\n+    public final Map<String, ScriptDocValues<?>> getDoc() {\n+        return leafSearchLookup.doc();\n     }\n \n     /**\n-     * Expose field data to the script as {@code doc}.\n+     * A non-public convenience method that's used in testing.\n      */\n-    public final Map<String, ScriptDocValues<?>> getDoc() {\n-        return leafSearchLookup.doc();\n+    protected final Map<String, Object> getSource() {\n+        return leafSearchLookup.source();\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU3MTUzMQ=="}, "originalCommit": {"oid": "9890c4ae4f3b3b5e357d0e867a19fa51b25e68e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg4OTM3MQ==", "bodyText": "Thanks @romseygeek for the suggestion, I updated the PR to remove AbstractFieldScript#getSource entirely.", "url": "https://github.com/elastic/elasticsearch/pull/65294#discussion_r527889371", "createdAt": "2020-11-20T18:18:16Z", "author": {"login": "jtibshirani"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractFieldScript.java", "diffHunk": "@@ -88,17 +88,17 @@ public final void setDocument(int docId) {\n     }\n \n     /**\n-     * Expose the {@code _source} to the script.\n+     * Expose field data to the script as {@code doc}.\n      */\n-    protected final Map<String, Object> getSource() {\n-        return leafSearchLookup.source();\n+    public final Map<String, ScriptDocValues<?>> getDoc() {\n+        return leafSearchLookup.doc();\n     }\n \n     /**\n-     * Expose field data to the script as {@code doc}.\n+     * A non-public convenience method that's used in testing.\n      */\n-    public final Map<String, ScriptDocValues<?>> getDoc() {\n-        return leafSearchLookup.doc();\n+    protected final Map<String, Object> getSource() {\n+        return leafSearchLookup.source();\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU3MTUzMQ=="}, "originalCommit": {"oid": "9890c4ae4f3b3b5e357d0e867a19fa51b25e68e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkzNTIyNA==", "bodyText": "Makes sense to me too, thanks", "url": "https://github.com/elastic/elasticsearch/pull/65294#discussion_r527935224", "createdAt": "2020-11-20T19:48:50Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractFieldScript.java", "diffHunk": "@@ -88,17 +88,17 @@ public final void setDocument(int docId) {\n     }\n \n     /**\n-     * Expose the {@code _source} to the script.\n+     * Expose field data to the script as {@code doc}.\n      */\n-    protected final Map<String, Object> getSource() {\n-        return leafSearchLookup.source();\n+    public final Map<String, ScriptDocValues<?>> getDoc() {\n+        return leafSearchLookup.doc();\n     }\n \n     /**\n-     * Expose field data to the script as {@code doc}.\n+     * A non-public convenience method that's used in testing.\n      */\n-    public final Map<String, ScriptDocValues<?>> getDoc() {\n-        return leafSearchLookup.doc();\n+    protected final Map<String, Object> getSource() {\n+        return leafSearchLookup.source();\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU3MTUzMQ=="}, "originalCommit": {"oid": "9890c4ae4f3b3b5e357d0e867a19fa51b25e68e9"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2886, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}