{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTU2MjY5", "number": 54966, "title": "Adds the ability to acquire readers in IndexShard", "bodyText": "This change adds the ability to acquire a point in time reader on an engine.\nThis is needed for frozen indices that lazily loads the reader on every\nphase of the search requests.\nAcquiring a reader on a frozen index ensures that the engine will not be closed until the reader is released, leaving the directory reader unopened until a call to acquire a searcher is made.\nWhen the searcher is closed, the underlyinng directory reader is also closed unless another requests on the same frozen shard is in-flight.\nThis ensures that the directory reader of frozen indices is opened only when requests are\nexecuted (they consume a thread in the search throttled pool).", "createdAt": "2020-04-08T16:34:37Z", "url": "https://github.com/elastic/elasticsearch/pull/54966", "merged": true, "mergeCommit": {"oid": "51f9542d25b8e0d0fe9cc80e13d18dae3ecf067d"}, "closed": true, "closedAt": "2020-04-27T22:11:42Z", "author": {"login": "jimczi"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVqh-igH2gAyNDAwOTU2MjY5OmNlZDExYmI4ODRjMzMwNmFiZjg0NGU0MzJjMDdlOGE4Nzk0YTU3YTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcb1qWmAH2gAyNDAwOTU2MjY5Ojc1MmI1NTkwYjUxM2UxOWEzZjExZGM3NGU0ODA1YTE0N2E1MjMyZmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ced11bb884c3306abf844e432c07e8a8794a57a1", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/ced11bb884c3306abf844e432c07e8a8794a57a1", "committedDate": "2020-04-08T16:31:37Z", "message": "Adds the ability to acquire readers in IndexShard\n\nThis change adds the ability to acquire a point in time reader on an engine.\nThis is needed for frozen indices that lazily loads the reader on every\nphase of the search requests. Acquiring a reader on a frozen index ensures\nthat the engine will not be closed until the reader is released, leaving the\ndirectory reader unopened until a call to acquire a searcher is made.\nWhen the searcher is closed, the underlyinng directory reader is also closed\nunless another requests on the same frozen shard is in-flight. This ensures\nthat the directory reader of frozen indices is opened only when requests are\nexecuted (they consume a thread in the search throttled pool)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90cd41b6c7f61fe2370233f3fafcc5e75f48bce2", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/90cd41b6c7f61fe2370233f3fafcc5e75f48bce2", "committedDate": "2020-04-08T17:34:53Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2bb5b8cebc2f7a76a69204c128b2fac29afc4ac", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/e2bb5b8cebc2f7a76a69204c128b2fac29afc4ac", "committedDate": "2020-04-08T18:25:31Z", "message": "avoid illegal access error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4afa8c2f9257d710790e9e0a3217718e023528a", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/d4afa8c2f9257d710790e9e0a3217718e023528a", "committedDate": "2020-04-08T18:38:25Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "403f2da7f2214d574f8a1336009f7692062ac425", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/403f2da7f2214d574f8a1336009f7692062ac425", "committedDate": "2020-04-08T18:39:41Z", "message": "unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a69b48d47972227959863eb66f851817df04eeb", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/1a69b48d47972227959863eb66f851817df04eeb", "committedDate": "2020-04-08T21:34:16Z", "message": "handle scroll correctly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1286a952c63132881d6baca32b29e64c26bc775d", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/1286a952c63132881d6baca32b29e64c26bc775d", "committedDate": "2020-04-09T09:12:08Z", "message": "add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aae7ce2c3ce7561fa3c0aab27ce422db93cccbec", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/aae7ce2c3ce7561fa3c0aab27ce422db93cccbec", "committedDate": "2020-04-09T09:21:15Z", "message": "Merge branch 'feature/reader-context' into reader_context_engine"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMjQ4NDM4", "url": "https://github.com/elastic/elasticsearch/pull/54966#pullrequestreview-393248438", "createdAt": "2020-04-14T19:55:48Z", "commit": {"oid": "4bd17b15130f2743769f86d08ce803e5f568642e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo1NTo0OFrOGFekIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo1NjoyM1rOGFeliQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5NjgzNQ==", "bodyText": "nit: remove space between ++ and from", "url": "https://github.com/elastic/elasticsearch/pull/54966#discussion_r408396835", "createdAt": "2020-04-14T19:55:48Z", "author": {"login": "dnhatn"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/FieldLevelSecurityTests.java", "diffHunk": "@@ -722,6 +725,53 @@ public void testScroll() throws Exception {\n         }\n     }\n \n+    public void testReaderId() throws Exception {\n+        assertAcked(client().admin().indices().prepareCreate(\"test\")\n+            .setSettings(Settings.builder().put(IndexModule.INDEX_QUERY_CACHE_EVERYTHING_SETTING.getKey(), true))\n+            .setMapping(\"field1\", \"type=text\", \"field2\", \"type=text\", \"field3\", \"type=text\")\n+        );\n+\n+        final int numDocs = scaledRandomIntBetween(2, 10);\n+        for (int i = 0; i < numDocs; i++) {\n+            client().prepareIndex(\"test\").setId(String.valueOf(i))\n+                .setSource(\"field1\", \"value1\", \"field2\", \"value2\", \"field3\", \"value3\")\n+                .get();\n+        }\n+        refresh(\"test\");\n+\n+        SearchResponse response = null;\n+        try {\n+            response = client()\n+                .filterWithHeader(Collections.singletonMap(BASIC_AUTH_HEADER, basicAuthHeaderValue(\"user1\", USERS_PASSWD)))\n+                .prepareSearch(\"test\")\n+                .setReader(null, TimeValue.timeValueMinutes(1L))\n+                .setSize(1)\n+                .setQuery(constantScoreQuery(termQuery(\"field1\", \"value1\")))\n+                .setFetchSource(true)\n+                .get();\n+            int from = 0;\n+            do {\n+                assertThat(response.getHits().getTotalHits().value, is((long) numDocs));\n+                assertThat(response.getHits().getHits().length, is(1));\n+                assertThat(response.getHits().getAt(0).getSourceAsMap().size(), is(1));\n+                assertThat(response.getHits().getAt(0).getSourceAsMap().get(\"field1\"), is(\"value1\"));\n+                ++ from;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bd17b15130f2743769f86d08ce803e5f568642e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5NzE5Mw==", "bodyText": "s/InVisible/Invisible", "url": "https://github.com/elastic/elasticsearch/pull/54966#discussion_r408397193", "createdAt": "2020-04-14T19:56:23Z", "author": {"login": "dnhatn"}, "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/integration/DocumentLevelSecurityTests.java", "diffHunk": "@@ -759,6 +761,54 @@ public void testScroll() throws Exception {\n         }\n     }\n \n+    public void testReaderId() throws Exception {\n+        assertAcked(client().admin().indices().prepareCreate(\"test\")\n+            .setSettings(Settings.builder().put(IndicesRequestCache.INDEX_CACHE_REQUEST_ENABLED_SETTING.getKey(), true))\n+            .setMapping(\"field1\", \"type=text\", \"field2\", \"type=text\", \"field3\", \"type=text\")\n+        );\n+        final int numVisible = scaledRandomIntBetween(2, 10);\n+        final int numInVisible = scaledRandomIntBetween(2, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bd17b15130f2743769f86d08ce803e5f568642e"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "058d6635e9bf85b66d535179ae097a6ec2eba74a", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/058d6635e9bf85b66d535179ae097a6ec2eba74a", "committedDate": "2020-04-22T11:06:26Z", "message": "Merge remote-tracking branch 'origin/reader-context' into reader_context_engine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f81d651211155cf3107896766e634521d132b544", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/f81d651211155cf3107896766e634521d132b544", "committedDate": "2020-04-24T13:09:41Z", "message": "Make reader context per-user"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4bd17b15130f2743769f86d08ce803e5f568642e", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/4bd17b15130f2743769f86d08ce803e5f568642e", "committedDate": "2020-04-14T18:36:07Z", "message": "remove reader context on rejection"}, "afterCommit": {"oid": "f81d651211155cf3107896766e634521d132b544", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/f81d651211155cf3107896766e634521d132b544", "committedDate": "2020-04-24T13:09:41Z", "message": "Make reader context per-user"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fb51431fd9e1157e8df9ac773da5442d945e240", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/2fb51431fd9e1157e8df9ac773da5442d945e240", "committedDate": "2020-04-24T13:25:00Z", "message": "address review comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e7d757001dfba71d69979f1c1672109b91e090b", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/7e7d757001dfba71d69979f1c1672109b91e090b", "committedDate": "2020-04-24T13:36:06Z", "message": "fix javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1335d60c9f1d88e9be1ccd9e078b4e9e11e00da", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/e1335d60c9f1d88e9be1ccd9e078b4e9e11e00da", "committedDate": "2020-04-24T14:07:28Z", "message": "fix serialization of original indices in search shard target"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dceccb656e3c085df98d1d32dc77f19aa0977da", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/5dceccb656e3c085df98d1d32dc77f19aa0977da", "committedDate": "2020-04-24T17:17:29Z", "message": "fix serialization of original indices"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22cab6875638a63aa3b82a1014018c10cf582ad8", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/22cab6875638a63aa3b82a1014018c10cf582ad8", "committedDate": "2020-04-24T17:40:29Z", "message": "add missing change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a07c0e1481a0af2b5259d83b7d6c7950599774a3", "author": {"user": {"login": "dnhatn", "name": "Nhat Nguyen"}}, "url": "https://github.com/elastic/elasticsearch/commit/a07c0e1481a0af2b5259d83b7d6c7950599774a3", "committedDate": "2020-04-27T02:10:02Z", "message": "Merge branch 'feature/reader-context' into jimczi/searcher-supplier"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjEyMTA4", "url": "https://github.com/elastic/elasticsearch/pull/54966#pullrequestreview-400612108", "createdAt": "2020-04-27T03:59:26Z", "commit": {"oid": "a07c0e1481a0af2b5259d83b7d6c7950599774a3"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMzo1OToyNlrOGMPtGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNDowNTo0NVrOGMPz0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ5MzQwMQ==", "bodyText": "I think we still need to catch RejectedExecutionException?", "url": "https://github.com/elastic/elasticsearch/pull/54966#discussion_r415493401", "createdAt": "2020-04-27T03:59:26Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "diffHunk": "@@ -414,20 +423,16 @@ public void onFailure(Exception exc) {\n \n     private <T> void runAsync(IndexShard shard, CheckedSupplier<T, Exception> command, ActionListener<T> listener) {\n         Executor executor = getExecutor(shard);\n-        try {\n-            executor.execute(() -> {\n-                T result;\n-                try {\n-                    result = command.get();\n-                } catch (Exception exc) {\n-                    listener.onFailure(exc);\n-                    return;\n-                }\n-                listener.onResponse(result);\n-            });\n-        } catch (Exception exc) {\n-            listener.onFailure(exc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a07c0e1481a0af2b5259d83b7d6c7950599774a3"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ5NDAyMw==", "bodyText": "Should we move the logic here to SearchShardTarget instead?", "url": "https://github.com/elastic/elasticsearch/pull/54966#discussion_r415494023", "createdAt": "2020-04-27T04:01:33Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/action/OriginalIndices.java", "diffHunk": "@@ -57,13 +58,20 @@ public IndicesOptions indicesOptions() {\n     }\n \n     public static OriginalIndices readOriginalIndices(StreamInput in) throws IOException {\n+        if (in.getVersion().onOrAfter(Version.V_8_0_0) && in.readBoolean() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a07c0e1481a0af2b5259d83b7d6c7950599774a3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ5NDczNw==", "bodyText": "Maybe return super.acquireSearcherSupplier(wrapper.andThen(support::wrapSearcher), scope)?", "url": "https://github.com/elastic/elasticsearch/pull/54966#discussion_r415494737", "createdAt": "2020-04-27T04:04:12Z", "author": {"login": "dnhatn"}, "path": "test/framework/src/main/java/org/elasticsearch/test/engine/MockInternalEngine.java", "diffHunk": "@@ -81,4 +82,20 @@ private void flushAndCloseInternal() throws IOException {\n         final Engine.Searcher engineSearcher = super.acquireSearcher(source, scope);\n         return support().wrapSearcher(engineSearcher);\n     }\n+\n+    @Override\n+    public SearcherSupplier acquireSearcherSupplier(Function<Searcher, Searcher> wrapper, SearcherScope scope) throws EngineException {\n+        final SearcherSupplier reader = super.acquireSearcherSupplier(wrapper, scope);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a07c0e1481a0af2b5259d83b7d6c7950599774a3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ5NDg2NQ==", "bodyText": "\ud83d\udcaf", "url": "https://github.com/elastic/elasticsearch/pull/54966#discussion_r415494865", "createdAt": "2020-04-27T04:04:38Z", "author": {"login": "dnhatn"}, "path": "x-pack/plugin/frozen-indices/src/main/java/org/elasticsearch/xpack/frozen/FrozenIndices.java", "diffHunk": "@@ -55,14 +54,6 @@\n         return Arrays.asList(FrozenEngine.INDEX_FROZEN);\n     }\n \n-    @Override\n-    public void onIndexModule(IndexModule indexModule) {\n-        if (FrozenEngine.INDEX_FROZEN.get(indexModule.getSettings())) {\n-            indexModule.addSearchOperationListener(new FrozenEngine.ReacquireEngineSearcherListener());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a07c0e1481a0af2b5259d83b7d6c7950599774a3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ5NTEyMg==", "bodyText": "I think we should validate the authentication of any reader context, not only the reader contexts with scroll?", "url": "https://github.com/elastic/elasticsearch/pull/54966#discussion_r415495122", "createdAt": "2020-04-27T04:05:45Z", "author": {"login": "dnhatn"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/SecuritySearchOperationListener.java", "diffHunk": "@@ -44,25 +45,32 @@ public SecuritySearchOperationListener(SecurityContext securityContext, XPackLic\n         this.auditTrailService = auditTrail;\n     }\n \n+    @Override\n+    public void onNewReaderContext(ReaderContext readerContext) {\n+        if (licenseState.isSecurityEnabled()) {\n+            readerContext.putInContext(AuthenticationField.AUTHENTICATION_KEY, securityContext.getAuthentication());\n+        }\n+    }\n+\n     /**\n-     * Adds the {@link Authentication} to the {@link ScrollContext}\n+     * Adds the {@link Authentication} to the {@link ReaderContext}\n      */\n     @Override\n-    public void onNewScrollContext(ScrollContext scrollContext) {\n+    public void onNewScrollContext(ReaderContext readerContext) {\n         if (licenseState.isSecurityEnabled()) {\n-            scrollContext.putInContext(AuthenticationField.AUTHENTICATION_KEY, securityContext.getAuthentication());\n+            readerContext.putInContext(AuthenticationField.AUTHENTICATION_KEY, securityContext.getAuthentication());\n         }\n     }\n \n     /**\n-     * Checks for the {@link ScrollContext} if it exists and compares the {@link Authentication}\n-     * object from the scroll context with the current authentication context\n+     * compares the {@link Authentication} object from the reader context with the current\n+     * authentication context\n      */\n     @Override\n-    public void validateSearchContext(SearchContext searchContext, TransportRequest request) {\n+    public void validateSearchContext(ReaderContext readerContext, SearchContext searchContext, TransportRequest request) {\n         if (licenseState.isSecurityEnabled()) {\n             if (searchContext.scrollContext() != null) {\n-                final Authentication originalAuth = searchContext.scrollContext().getFromContext(AuthenticationField.AUTHENTICATION_KEY);\n+                final Authentication originalAuth = readerContext.getFromContext(AuthenticationField.AUTHENTICATION_KEY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a07c0e1481a0af2b5259d83b7d6c7950599774a3"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ec84abf64beeae6c5dbb35217306e447ca725d8", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/0ec84abf64beeae6c5dbb35217306e447ca725d8", "committedDate": "2020-04-27T11:41:01Z", "message": "address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f4698831eb0df1f8e9e34f9cd44d3829fb9c81f", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/4f4698831eb0df1f8e9e34f9cd44d3829fb9c81f", "committedDate": "2020-04-27T11:56:48Z", "message": "revert unwanted change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23f2d2aeb475883181298094303d514d8d95a0db", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/23f2d2aeb475883181298094303d514d8d95a0db", "committedDate": "2020-04-27T12:32:01Z", "message": "fix failing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4750a4856e84303aadd4281b4376c55ba05362e2", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/4750a4856e84303aadd4281b4376c55ba05362e2", "committedDate": "2020-04-27T13:10:08Z", "message": "fix precommit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMDYwNjk3", "url": "https://github.com/elastic/elasticsearch/pull/54966#pullrequestreview-401060697", "createdAt": "2020-04-27T15:22:18Z", "commit": {"oid": "4750a4856e84303aadd4281b4376c55ba05362e2"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyMjoxOFrOGMo8rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyMzo0NVrOGMpBhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwNjk5MQ==", "bodyText": "I think we no longer need to put the security for the scroll request as we are doing for all readers.", "url": "https://github.com/elastic/elasticsearch/pull/54966#discussion_r415906991", "createdAt": "2020-04-27T15:22:18Z", "author": {"login": "dnhatn"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/SecuritySearchOperationListener.java", "diffHunk": "@@ -44,36 +43,41 @@ public SecuritySearchOperationListener(SecurityContext securityContext, XPackLic\n         this.auditTrailService = auditTrail;\n     }\n \n+    @Override\n+    public void onNewReaderContext(ReaderContext readerContext) {\n+        if (licenseState.isSecurityEnabled()) {\n+            readerContext.putInContext(AuthenticationField.AUTHENTICATION_KEY, securityContext.getAuthentication());\n+        }\n+    }\n+\n     /**\n-     * Adds the {@link Authentication} to the {@link ScrollContext}\n+     * Adds the {@link Authentication} to the {@link ReaderContext}\n      */\n     @Override\n-    public void onNewScrollContext(ScrollContext scrollContext) {\n+    public void onNewScrollContext(ReaderContext readerContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4750a4856e84303aadd4281b4376c55ba05362e2"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwODIyOA==", "bodyText": "I think we can adjust this assertion and remove TODO :)", "url": "https://github.com/elastic/elasticsearch/pull/54966#discussion_r415908228", "createdAt": "2020-04-27T15:23:45Z", "author": {"login": "dnhatn"}, "path": "x-pack/plugin/frozen-indices/src/test/java/org/elasticsearch/index/engine/FrozenIndexTests.java", "diffHunk": "@@ -100,13 +111,39 @@ public void testCloseFreezeAndOpen() {\n             for (int i = 0; i < 2; i++) {\n                 shard = indexService.getShard(i);\n                 engine = IndexShardTestCase.getEngine(shard);\n-                assertFalse(((FrozenEngine) engine).isReaderOpen());\n+                // TODO: scrolls keep the reader open", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4750a4856e84303aadd4281b4376c55ba05362e2"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7036c101c284be98c1d3350e6488b73c739b84e1", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/7036c101c284be98c1d3350e6488b73c739b84e1", "committedDate": "2020-04-27T19:45:25Z", "message": "remove TODO and fix precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a3ad75532e8672d49592be01e89404aba65531d", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/8a3ad75532e8672d49592be01e89404aba65531d", "committedDate": "2020-04-27T20:48:25Z", "message": "remove reader context on exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "752b5590b513e19a3f11dc74e4805a147a5232fe", "author": {"user": {"login": "jimczi", "name": "Jim Ferenczi"}}, "url": "https://github.com/elastic/elasticsearch/commit/752b5590b513e19a3f11dc74e4805a147a5232fe", "committedDate": "2020-04-27T20:53:16Z", "message": "replace with a try/finally"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3605, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}