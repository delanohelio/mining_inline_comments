{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNjU4MTY2", "number": 58828, "title": "Add basic searchable snapshots usage information", "bodyText": "Adds super basic usage information for searchable snapshots, to be extended later.", "createdAt": "2020-07-01T12:12:00Z", "url": "https://github.com/elastic/elasticsearch/pull/58828", "merged": true, "mergeCommit": {"oid": "6e77e70ba294b7bf7a0e24560c7a786d76c1d32d"}, "closed": true, "closedAt": "2020-07-07T08:41:42Z", "author": {"login": "ywelsch"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwpJ_YAH2gAyNDQyNjU4MTY2OjE0MDYxN2FiOGE1YWE4M2IyN2M1ZDhjNjdlNWZiYWVmN2JhN2M0NGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyhhzUgFqTQ0MzY3MDg0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "140617ab8a5aa83b27c5d8c67e5fbaef7ba7c44b", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/140617ab8a5aa83b27c5d8c67e5fbaef7ba7c44b", "committedDate": "2020-07-01T12:11:28Z", "message": "Add searchable snapshots usage information"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea3dfa184f9e872bb768d546ae76806d8fa13d64", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/ea3dfa184f9e872bb768d546ae76806d8fa13d64", "committedDate": "2020-07-01T13:57:12Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c27e89b33110d9d2edcb6e5e25f1f0d50cf9fc5", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/7c27e89b33110d9d2edcb6e5e25f1f0d50cf9fc5", "committedDate": "2020-07-01T14:25:52Z", "message": "sigh, formatter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed5de0155f8a15b405baffa65a6a733662f01e69", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/ed5de0155f8a15b405baffa65a6a733662f01e69", "committedDate": "2020-07-02T09:18:16Z", "message": "Merge branch 'master' into searchsnapusage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyODMyMTE3", "url": "https://github.com/elastic/elasticsearch/pull/58828#pullrequestreview-442832117", "createdAt": "2020-07-06T07:26:07Z", "commit": {"oid": "ed5de0155f8a15b405baffa65a6a733662f01e69"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzoyNjowN1rOGtLv_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzozMTowOFrOGtL5HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAzMTYxNQ==", "bodyText": "Since it can't be disabled, we may as well inline this argument?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    super(XPackField.SEARCHABLE_SNAPSHOTS, available, enabled);\n          \n          \n            \n                    super(XPackField.SEARCHABLE_SNAPSHOTS, available, true);", "url": "https://github.com/elastic/elasticsearch/pull/58828#discussion_r450031615", "createdAt": "2020-07-06T07:26:07Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/searchablesnapshots/SearchableSnapshotFeatureSetUsage.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.searchablesnapshots;\n+\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.xpack.core.XPackFeatureSet;\n+import org.elasticsearch.xpack.core.XPackField;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+public class SearchableSnapshotFeatureSetUsage extends XPackFeatureSet.Usage {\n+\n+    private final int numberOfSearchableSnapshotIndices;\n+\n+    public SearchableSnapshotFeatureSetUsage(StreamInput input) throws IOException {\n+        super(input);\n+        numberOfSearchableSnapshotIndices = input.readVInt();\n+    }\n+\n+    @Override\n+    public Version getMinimalSupportedVersion() {\n+        return Version.V_8_0_0;\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        super.writeTo(out);\n+        out.writeVInt(numberOfSearchableSnapshotIndices);\n+    }\n+\n+    public SearchableSnapshotFeatureSetUsage(boolean available, boolean enabled,\n+                                             int numberOfSearchableSnapshotIndices) {\n+        super(XPackField.SEARCHABLE_SNAPSHOTS, available, enabled);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed5de0155f8a15b405baffa65a6a733662f01e69"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAzMzk0OQ==", "bodyText": "Would the tests all still pass even without this vital line? Would be good to have something that checks we do return something other than zero here.", "url": "https://github.com/elastic/elasticsearch/pull/58828#discussion_r450033949", "createdAt": "2020-07-06T07:31:08Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsUsageTransportAction.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.searchablesnapshots;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.support.ActionFilters;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.license.XPackLicenseState;\n+import org.elasticsearch.protocol.xpack.XPackUsageRequest;\n+import org.elasticsearch.tasks.Task;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.elasticsearch.transport.TransportService;\n+import org.elasticsearch.xpack.core.action.XPackUsageFeatureAction;\n+import org.elasticsearch.xpack.core.action.XPackUsageFeatureResponse;\n+import org.elasticsearch.xpack.core.action.XPackUsageFeatureTransportAction;\n+import org.elasticsearch.xpack.core.searchablesnapshots.SearchableSnapshotFeatureSetUsage;\n+\n+public class SearchableSnapshotsUsageTransportAction extends XPackUsageFeatureTransportAction {\n+\n+    private final XPackLicenseState licenseState;\n+\n+    @Inject\n+    public SearchableSnapshotsUsageTransportAction(\n+        TransportService transportService,\n+        ClusterService clusterService,\n+        ThreadPool threadPool,\n+        ActionFilters actionFilters,\n+        IndexNameExpressionResolver indexNameExpressionResolver,\n+        XPackLicenseState licenseState\n+    ) {\n+        super(\n+            XPackUsageFeatureAction.SEARCHABLE_SNAPSHOTS.name(),\n+            transportService,\n+            clusterService,\n+            threadPool,\n+            actionFilters,\n+            indexNameExpressionResolver\n+        );\n+        this.licenseState = licenseState;\n+    }\n+\n+    @Override\n+    protected void masterOperation(\n+        Task task,\n+        XPackUsageRequest request,\n+        ClusterState state,\n+        ActionListener<XPackUsageFeatureResponse> listener\n+    ) {\n+        int numSnapIndices = 0;\n+        for (IndexMetadata indexMetadata : state.metadata()) {\n+            if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexMetadata.getSettings())) {\n+                numSnapIndices++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed5de0155f8a15b405baffa65a6a733662f01e69"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyODQxNjcx", "url": "https://github.com/elastic/elasticsearch/pull/58828#pullrequestreview-442841671", "createdAt": "2020-07-06T07:41:59Z", "commit": {"oid": "ed5de0155f8a15b405baffa65a6a733662f01e69"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzo0MTo1OVrOGtMOaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzo0MTo1OVrOGtMOaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAzOTQwMQ==", "bodyText": "Can we have YAML REST tests for this? I know we don't have a good coverage for usage/info REST APIs but I still think it's better than nothing.", "url": "https://github.com/elastic/elasticsearch/pull/58828#discussion_r450039401", "createdAt": "2020-07-06T07:41:59Z", "author": {"login": "tlrx"}, "path": "docs/reference/rest-api/usage.asciidoc", "diffHunk": "@@ -252,6 +252,11 @@ GET /_xpack/usage\n     \"available\" : true,\n     \"enabled\" : true\n   },\n+  \"searchable_snapshots\" : {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed5de0155f8a15b405baffa65a6a733662f01e69"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0839e244675b70c8b38c24ef5bd39acff59ae268", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/0839e244675b70c8b38c24ef5bd39acff59ae268", "committedDate": "2020-07-06T12:40:45Z", "message": "Add usage test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0838ab71fe378fc7797271f4093d9d3567ef7a28", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/0838ab71fe378fc7797271f4093d9d3567ef7a28", "committedDate": "2020-07-06T12:40:49Z", "message": "Merge remote-tracking branch 'elastic/master' into searchsnapusage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af2b70304b50b4b62c95b4aa492d3952c7e57eee", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/af2b70304b50b4b62c95b4aa492d3952c7e57eee", "committedDate": "2020-07-06T12:43:39Z", "message": "inline enabled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d79687c8918f1baf8e6372347695ca5adca8df5", "author": {"user": {"login": "ywelsch", "name": "Yannick Welsch"}}, "url": "https://github.com/elastic/elasticsearch/commit/8d79687c8918f1baf8e6372347695ca5adca8df5", "committedDate": "2020-07-06T15:02:51Z", "message": "Merge remote-tracking branch 'elastic/master' into searchsnapusage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjcwODQx", "url": "https://github.com/elastic/elasticsearch/pull/58828#pullrequestreview-443670841", "createdAt": "2020-07-07T08:26:05Z", "commit": {"oid": "8d79687c8918f1baf8e6372347695ca5adca8df5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2474, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}