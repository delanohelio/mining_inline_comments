{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3ODI1ODAw", "number": 64016, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo1MTo1NVrOEwcldA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo1NTozNVrOEwcvkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjM1NDQ0OnYy", "diffSide": "RIGHT", "path": "modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ParentJoinAggregator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo1MTo1NVrOHmBIqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo1MTo1NVrOHmBIqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYyNjUzNw==", "bodyText": "I renamed this method to make it a bit more clear what it is for.", "url": "https://github.com/elastic/elasticsearch/pull/64016#discussion_r509626537", "createdAt": "2020-10-21T19:51:55Z", "author": {"login": "nik9000"}, "path": "modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ParentJoinAggregator.java", "diffHunk": "@@ -113,12 +113,7 @@ public void collect(int docId, long owningBucketOrd) throws IOException {\n     }\n \n     @Override\n-    public void postCollection() throws IOException {\n-        // Delaying until beforeBuildingBuckets\n-    }\n-\n-    @Override\n-    protected void beforeBuildingBuckets(long[] ordsToCollect) throws IOException {\n+    protected void prepareSubAggs(long[] bucketOrdsToCollect) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d588ddad9003a3061d3a64cf5515f4dc0c2a919b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjM2MDgwOnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo1Mjo1MFrOHmBNNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo1Mjo1MFrOHmBNNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYyNzcwMQ==", "bodyText": "I think this is a more clear variable name. I made this change in a dead end when I was working on this change locally but I kind of like it.", "url": "https://github.com/elastic/elasticsearch/pull/64016#discussion_r509627701", "createdAt": "2020-10-21T19:52:50Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java", "diffHunk": "@@ -142,12 +142,12 @@ public BucketComparator bucketComparator(String key, SortOrder order) {\n \n     /**\n      * Build the results of this aggregation.\n-     * @param owningBucketOrds the ordinals of the buckets that we want to\n+     * @param ordsToCollect the ordinals of the buckets that we want to\n      *        collect from this aggregation\n      * @return the results for each ordinal, in the same order as the array\n      *         of ordinals\n      */\n-    public abstract InternalAggregation[] buildAggregations(long[] owningBucketOrds) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d588ddad9003a3061d3a64cf5515f4dc0c2a919b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjM2NzE1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/BestBucketsDeferringCollector.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo1MzozNFrOHmBSAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo1MzozNFrOHmBSAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYyODkyOA==", "bodyText": "I'm pretty happy about how this turned out! No more finished to check on. It's just all built in now.", "url": "https://github.com/elastic/elasticsearch/pull/64016#discussion_r509628928", "createdAt": "2020-10-21T19:53:34Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/BestBucketsDeferringCollector.java", "diffHunk": "@@ -136,20 +135,12 @@ public void preCollection() throws IOException {\n         collector.preCollection();\n     }\n \n-    @Override\n-    public void postCollection() throws IOException {\n-        finishLeaf();\n-        finished = true;\n-    }\n-\n     /**\n      * Replay the wrapped collector, but only on a selection of buckets.\n      */\n     @Override\n     public void prepareSelectedBuckets(long... selectedBuckets) throws IOException {\n-        if (finished == false) {\n-            throw new IllegalStateException(\"Cannot replay yet, collection is not finished: postCollect() has not been called\");\n-        }\n+        finishLeaf();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d588ddad9003a3061d3a64cf5515f4dc0c2a919b"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjM4MDM1OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/elasticsearch/search/profile/aggregation/ProfilingAggregator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo1NTozNVrOHmBbDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo1NTozNVrOHmBbDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzMTI0NA==", "bodyText": "This is kind of an unfortunate loss here. Now we'll end up having post_collection in the build_aggregation debug phase. I'm wondering if I can have aggregations that do \"interesting\" things opt in to make their own timers or something.", "url": "https://github.com/elastic/elasticsearch/pull/64016#discussion_r509631244", "createdAt": "2020-10-21T19:55:35Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/profile/aggregation/ProfilingAggregator.java", "diffHunk": "@@ -124,17 +124,6 @@ public void preCollection() throws IOException {\n         profiler.pollLastElement();\n     }\n \n-    @Override\n-    public void postCollection() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d588ddad9003a3061d3a64cf5515f4dc0c2a919b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4249, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}