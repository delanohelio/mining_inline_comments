{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMDcwMzQx", "number": 52137, "title": "SQL: Make parsing of date more lenient", "bodyText": "Make the parsing of date more lenient\n\nas an escaped literal: {d '2020-02-10[[T| ]10:20[:30][.123456789][tz]]'}\ncast a string to a date: CAST(2020-02-10[[T| ]10:20[:30][.123456789][tz]]' AS DATE)\n\nCloses: #49379", "createdAt": "2020-02-10T11:00:03Z", "url": "https://github.com/elastic/elasticsearch/pull/52137", "merged": true, "mergeCommit": {"oid": "5863b27500d5e7f6cdd8c6c62b09b84e53ca724a"}, "closed": true, "closedAt": "2020-02-10T20:45:07Z", "author": {"login": "matriv"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcC7B6SgH2gAyMzczMDcwMzQxOjMyODUwZDQwNWQyMzQyY2Y4ZTU2MmU1Y2U5YjVkNTgzMzUyNzAyNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDCiyqAH2gAyMzczMDcwMzQxOjYyZjU5MTlkMDVjNzhkYjdkMzNkNGMzMDc3NDE1Nzg5YjI4YmI4YWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "32850d405d2342cf8e562e5ce9b5d58335270279", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/32850d405d2342cf8e562e5ce9b5d58335270279", "committedDate": "2020-02-10T11:00:25Z", "message": "SQL: Make parsing of date more lenient\n\nMake the parsing of date more lenient\n - as an escaped literal: `{d '2020-02-10[[T| ]10:20[:30][.123456789][tz]]'}`\n - cast a string to a date: `CAST(2020-02-10[[T| ]10:20[:30][.123456789][tz]]' AS DATE)`\n\nCloses: #49379"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "41bfe1f894fd875dcf9e0ebc3c0a0bec3b4a0785", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/41bfe1f894fd875dcf9e0ebc3c0a0bec3b4a0785", "committedDate": "2020-02-10T10:58:27Z", "message": "SQL: Make parsing of date more lenient\n\nMake the parsing of date more lenient\n - as an escaped literal: `{d '2020-02-10[[T| ]10:20[:30][.123456789][tz]]'}`\n - cast a string to a date: `CAST(2020-02-10[[T| ]10:20[:30][.123456789][tz]]' AS DATE)`\n\nCloses: 49379"}, "afterCommit": {"oid": "32850d405d2342cf8e562e5ce9b5d58335270279", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/32850d405d2342cf8e562e5ce9b5d58335270279", "committedDate": "2020-02-10T11:00:25Z", "message": "SQL: Make parsing of date more lenient\n\nMake the parsing of date more lenient\n - as an escaped literal: `{d '2020-02-10[[T| ]10:20[:30][.123456789][tz]]'}`\n - cast a string to a date: `CAST(2020-02-10[[T| ]10:20[:30][.123456789][tz]]' AS DATE)`\n\nCloses: #49379"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTUzMzg5", "url": "https://github.com/elastic/elasticsearch/pull/52137#pullrequestreview-355953389", "createdAt": "2020-02-10T13:56:19Z", "commit": {"oid": "32850d405d2342cf8e562e5ce9b5d58335270279"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MDA0NTU0", "url": "https://github.com/elastic/elasticsearch/pull/52137#pullrequestreview-356004554", "createdAt": "2020-02-10T15:00:39Z", "commit": {"oid": "32850d405d2342cf8e562e5ce9b5d58335270279"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTowMDozOVrOFnpRow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTowMDozOVrOFnpRow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzExNTA0Mw==", "bodyText": "For sake of completeness, I'd suggest a test without the duration separator, but with a timezone (or a Z).", "url": "https://github.com/elastic/elasticsearch/pull/52137#discussion_r377115043", "createdAt": "2020-02-10T15:00:39Z", "author": {"login": "bpintea"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/type/SqlDataTypeConverterTests.java", "diffHunk": "@@ -172,13 +172,19 @@ public void testConversionToDate() {\n             Converter conversion = converterFor(KEYWORD, to);\n             assertNull(conversion.convert(null));\n \n-            assertEquals(date(0L), conversion.convert(\"1970-01-01\"));\n-            assertEquals(date(1483228800000L), conversion.convert(\"2017-01-01\"));\n-            assertEquals(date(-1672531200000L), conversion.convert(\"1917-01-01\"));\n-            assertEquals(date(18000000L), conversion.convert(\"1970-01-01\"));\n+            assertEquals(date(1581292800000L), conversion.convert(\"2020-02-10T10:20\"));\n+            assertEquals(date(-125908819200000L), conversion.convert(\"-2020-02-10T10:20:30.123\"));\n+            assertEquals(date(1581292800000L), conversion.convert(\"2020-02-10T10:20:30.123456789\"));\n \n-            // double check back and forth conversion\n+            assertEquals(date(1581292800000L), conversion.convert(\"2020-02-10 10:20\"));\n+            assertEquals(date(-125908819200000L), conversion.convert(\"-2020-02-10 10:20:30.123\"));\n+            assertEquals(date(1581292800000L), conversion.convert(\"2020-02-10 10:20:30.123456789\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32850d405d2342cf8e562e5ce9b5d58335270279"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MDA0Njc5", "url": "https://github.com/elastic/elasticsearch/pull/52137#pullrequestreview-356004679", "createdAt": "2020-02-10T15:00:47Z", "commit": {"oid": "32850d405d2342cf8e562e5ce9b5d58335270279"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MDc2NDQy", "url": "https://github.com/elastic/elasticsearch/pull/52137#pullrequestreview-356076442", "createdAt": "2020-02-10T16:25:15Z", "commit": {"oid": "32850d405d2342cf8e562e5ce9b5d58335270279"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjoyNToxNVrOFnsoZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjo1NzowMlrOFnt2Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE3MDAyMg==", "bodyText": "I think the name of the formatters could be more descriptive? The fact that time can be added, but it's optional, imo should be reflected in the formatter's name. Also, not to abuse the length of the names, how about DATE_OPTIONAL_TIME_FORMATTER_WHITESPACE? (ie get rid of ESCAPED_LITERAL keep the FORMATTER and mention the whitespace/'T') Same idea could be applied to the rest of the formatters: `DATE_OPTIONAL_OPTIONAL_TIME_FORMATTER_T, ISO_DATE_OPTIONAL_TIME_FORMATTER_WHITESPACE, ISO_DATE_OPTIONAL_TIME_FORMATTER_T.....", "url": "https://github.com/elastic/elasticsearch/pull/52137#discussion_r377170022", "createdAt": "2020-02-10T16:25:15Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/util/DateUtils.java", "diffHunk": "@@ -42,6 +42,30 @@\n             .appendLiteral('T')\n             .append(ISO_LOCAL_TIME)\n             .toFormatter().withZone(UTC);\n+    private static final DateTimeFormatter DATE_ESCAPED_LITERAL_FORMATTER_WHITESPACE = new DateTimeFormatterBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32850d405d2342cf8e562e5ce9b5d58335270279"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE3MTM0NA==", "bodyText": "Since separatorIdx == 0 then the indexOf call should be indexOf('-', 1) right?", "url": "https://github.com/elastic/elasticsearch/pull/52137#discussion_r377171344", "createdAt": "2020-02-10T16:27:23Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/util/DateUtils.java", "diffHunk": "@@ -91,7 +115,17 @@ public static ZonedDateTime asDateTime(long millis, ZoneId id) {\n      * Parses the given string into a Date (SQL DATE type) using UTC as a default timezone.\n      */\n     public static ZonedDateTime asDateOnly(String dateFormat) {\n-        return LocalDate.parse(dateFormat, ISO_LOCAL_DATE).atStartOfDay(UTC);\n+        int separatorIdx = dateFormat.indexOf('-');\n+        if (separatorIdx == 0) { // negative year\n+            separatorIdx = dateFormat.indexOf('-', separatorIdx + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32850d405d2342cf8e562e5ce9b5d58335270279"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE4OTkwMw==", "bodyText": "In which situation is the > valid here? (I refer to separatorIdx >= dateFormat.length()) Isn't == enough to detect a date-only string?", "url": "https://github.com/elastic/elasticsearch/pull/52137#discussion_r377189903", "createdAt": "2020-02-10T16:57:02Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/util/DateUtils.java", "diffHunk": "@@ -91,7 +115,17 @@ public static ZonedDateTime asDateTime(long millis, ZoneId id) {\n      * Parses the given string into a Date (SQL DATE type) using UTC as a default timezone.\n      */\n     public static ZonedDateTime asDateOnly(String dateFormat) {\n-        return LocalDate.parse(dateFormat, ISO_LOCAL_DATE).atStartOfDay(UTC);\n+        int separatorIdx = dateFormat.indexOf('-');\n+        if (separatorIdx == 0) { // negative year\n+            separatorIdx = dateFormat.indexOf('-', separatorIdx + 1);\n+        }\n+        separatorIdx = dateFormat.indexOf('-', separatorIdx + 1) + 3;\n+        // Avoid index out of bounds - it will lead to DateTimeParseException anyways\n+        if (separatorIdx >= dateFormat.length() || dateFormat.charAt(separatorIdx) == 'T') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32850d405d2342cf8e562e5ce9b5d58335270279"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "381741f89e2ffdc7cc783deb31b2e76a10f4b960", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/381741f89e2ffdc7cc783deb31b2e76a10f4b960", "committedDate": "2020-02-10T19:00:36Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e6ef0b61868dec347a663deb136bdd375ed653b", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/6e6ef0b61868dec347a663deb136bdd375ed653b", "committedDate": "2020-02-10T19:00:53Z", "message": "Merge remote-tracking branch 'upstream/master' into fix-49379"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89bf5e8d8af024346e9820d1715492c4ea4a3b74", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/89bf5e8d8af024346e9820d1715492c4ea4a3b74", "committedDate": "2020-02-10T19:36:09Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7241b91cd3b6a7ae1cae8bf80a368418cc2ef96d", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/7241b91cd3b6a7ae1cae8bf80a368418cc2ef96d", "committedDate": "2020-02-10T19:36:19Z", "message": "Merge remote-tracking branch 'upstream/master' into fix-49379"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62f5919d05c78db7d33d4c3077415789b28bb8af", "author": {"user": {"login": "matriv", "name": "Marios Trivyzas"}}, "url": "https://github.com/elastic/elasticsearch/commit/62f5919d05c78db7d33d4c3077415789b28bb8af", "committedDate": "2020-02-10T19:45:40Z", "message": "Add more invalid date parsing tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2747, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}