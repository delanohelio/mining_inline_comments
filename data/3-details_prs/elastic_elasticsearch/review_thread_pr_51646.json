{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NzM2NTc5", "number": 51646, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxOTo1NDowMlrODbs1RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMDowMTowMlrODbs89g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzcyNjc2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxOTo1NDowMlrOFjVkaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxOTo1NDowMlrOFjVkaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5Nzg2NQ==", "bodyText": "Putting in a sleep(100) before this line provokes the NPE.", "url": "https://github.com/elastic/elasticsearch/pull/51646#discussion_r372597865", "createdAt": "2020-01-29T19:54:02Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedManager.java", "diffHunk": "@@ -520,7 +520,12 @@ private void runTask(TransportStartDatafeedAction.DatafeedTask task) {\n             // a context with sufficient permissions would coincidentally be in force in some single node\n             // tests, leading to bugs not caught in CI due to many tests running in single node test clusters.\n             try (ThreadContext.StoredContext ignore = threadPool.getThreadContext().stashContext()) {\n-                innerRun(runningDatafeedsOnThisNode.get(task.getAllocationId()), task.getDatafeedStartTime(), task.getEndTime());\n+                Holder holder = runningDatafeedsOnThisNode.get(task.getAllocationId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d355de538007e14da660e1811257e696e28324"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzc0NjQ2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMDowMTowMlrOFjVxHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMDowMTowMlrOFjVxHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMTExOQ==", "bodyText": "We use the terms \u201cstarted\u201d and \u201cstopped\u201d with datafeeds instead of \u201copened\u201d and \u201cclosed\u201d, so please could you change those two words in this message.", "url": "https://github.com/elastic/elasticsearch/pull/51646#discussion_r372601119", "createdAt": "2020-01-29T20:01:02Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedManager.java", "diffHunk": "@@ -520,7 +520,12 @@ private void runTask(TransportStartDatafeedAction.DatafeedTask task) {\n             // a context with sufficient permissions would coincidentally be in force in some single node\n             // tests, leading to bugs not caught in CI due to many tests running in single node test clusters.\n             try (ThreadContext.StoredContext ignore = threadPool.getThreadContext().stashContext()) {\n-                innerRun(runningDatafeedsOnThisNode.get(task.getAllocationId()), task.getDatafeedStartTime(), task.getEndTime());\n+                Holder holder = runningDatafeedsOnThisNode.get(task.getAllocationId());\n+                if (holder != null) {\n+                    innerRun(holder, task.getDatafeedStartTime(), task.getEndTime());\n+                } else {\n+                    logger.warn(\"Datafeed [{}] was closed while being opened\", task.getDatafeedId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d355de538007e14da660e1811257e696e28324"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 121, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}