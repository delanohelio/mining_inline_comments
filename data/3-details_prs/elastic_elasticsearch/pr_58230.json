{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NzA5Mjg5", "number": 58230, "title": "Add text search information to MappedFieldType", "bodyText": "Now that MappedFieldType no longer extends lucene's FieldType, we need to have a\nway of getting the index information about a field necessary for building text queries,\nbuilding term vectors, highlighting, etc.  This commit introduces a new TextSearchInfo\nabstraction that holds this information, and a getTextSearchInfo() method to\nMappedFieldType to make it available.  Field types that do not support text search can\njust return null here.\nThis allows us to remove the MapperService.getLuceneFieldType() shim method.", "createdAt": "2020-06-17T09:03:25Z", "url": "https://github.com/elastic/elasticsearch/pull/58230", "merged": true, "mergeCommit": {"oid": "57316e26af6495279ddec616751418d899534c8f"}, "closed": true, "closedAt": "2020-06-23T12:37:50Z", "author": {"login": "romseygeek"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsF76dgH2gAyNDM1NzA5Mjg5OjE4YzFkODMwNjliODNiYjBiYzJkNWZmZGU1ZDBjNDZlYzU5Y2JhZjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuEIqkgFqTQzNTcwNjc1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "18c1d83069b83bb0bc2d5ffde5d0c46ec59cbaf8", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/18c1d83069b83bb0bc2d5ffde5d0c46ec59cbaf8", "committedDate": "2020-06-17T08:53:43Z", "message": "Add TextSearchInfo class to wrap up text search details"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ba04c835fff053e19891e9bfefd292f189d7398", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/1ba04c835fff053e19891e9bfefd292f189d7398", "committedDate": "2020-06-17T08:53:53Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/textsearchinfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9852fcd7c0214b627884e2e4b772c79d52c68944", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/9852fcd7c0214b627884e2e4b772c79d52c68944", "committedDate": "2020-06-17T08:59:17Z", "message": "javadocs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMjA0NTk0", "url": "https://github.com/elastic/elasticsearch/pull/58230#pullrequestreview-432204594", "createdAt": "2020-06-17T09:06:10Z", "commit": {"oid": "9852fcd7c0214b627884e2e4b772c79d52c68944"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTowNjoxMFrOGk8ubQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTowNjoxMFrOGk8ubQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5Njg0NQ==", "bodyText": "This is a bit weird, but geometry fields currently let you go all the way through to calling termQuery before throwing an error, so this preserves the current behaviour.  It might allow us to support match queries against geometry fields via WKT or something similar in the future, so I think we should leave it in for now.", "url": "https://github.com/elastic/elasticsearch/pull/58230#discussion_r441396845", "createdAt": "2020-06-17T09:06:10Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java", "diffHunk": "@@ -185,7 +184,7 @@ public T parse(String name, Map<String, Object> node, ParserContext parserContex\n         protected QueryProcessor geometryQueryBuilder;\n \n         protected AbstractGeometryFieldType(String name, boolean indexed, boolean hasDocValues, Map<String, String> meta) {\n-            super(name, indexed, hasDocValues, meta);\n+            super(name, indexed, hasDocValues, TextSearchInfo.GEOMETRY, meta);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9852fcd7c0214b627884e2e4b772c79d52c68944"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMjA4MjI3", "url": "https://github.com/elastic/elasticsearch/pull/58230#pullrequestreview-432208227", "createdAt": "2020-06-17T09:10:47Z", "commit": {"oid": "9852fcd7c0214b627884e2e4b772c79d52c68944"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToxMDo0N1rOGk85Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToxMDo0N1rOGk85Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5OTU5OQ==", "bodyText": "TextSearchInfo.NUMERIC always returns stored as false.  I thought about making this configurable, but the only place in the code that uses this is in highlighting, and numeric fields can't be highlighted, so I think it's OK to be slightly incorrect here.", "url": "https://github.com/elastic/elasticsearch/pull/58230#discussion_r441399599", "createdAt": "2020-06-17T09:10:47Z", "author": {"login": "romseygeek"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/GenericStoreDynamicTemplateTests.java", "diffHunk": "@@ -51,16 +51,13 @@ public void testSimple() throws Exception {\n         assertThat(f.stringValue(), equalTo(\"some name\"));\n         assertThat(f.fieldType().stored(), equalTo(true));\n \n-        FieldType fieldType = mapperService.getLuceneFieldType(\"name\");\n+        FieldType fieldType = mapperService.fieldType(\"name\").getTextSearchInfo().getLuceneFieldType();\n         assertThat(fieldType.stored(), equalTo(true));\n \n         boolean stored = false;\n         for (IndexableField field : doc.getFields(\"age\")) {\n             stored |=  field.fieldType().stored();\n         }\n         assertTrue(stored);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9852fcd7c0214b627884e2e4b772c79d52c68944"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTYwNTY5", "url": "https://github.com/elastic/elasticsearch/pull/58230#pullrequestreview-432560569", "createdAt": "2020-06-17T16:14:51Z", "commit": {"oid": "9852fcd7c0214b627884e2e4b772c79d52c68944"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjoxNDo1MlrOGlNHVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjoxNDo1MlrOGlNHVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2NTM2NA==", "bodyText": "Add javadocs explaining what are the implications of a null return value?", "url": "https://github.com/elastic/elasticsearch/pull/58230#discussion_r441665364", "createdAt": "2020-06-17T16:14:52Z", "author": {"login": "jpountz"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java", "diffHunk": "@@ -411,4 +408,8 @@ public static Term extractTerm(Query termQuery) {\n     public void updateMeta(Map<String, String> meta) {\n         this.meta = Map.copyOf(Objects.requireNonNull(meta));\n     }\n+\n+    public TextSearchInfo getTextSearchInfo() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9852fcd7c0214b627884e2e4b772c79d52c68944"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d304670ce8c87be4208aaf967ae90468ecd96cb", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/9d304670ce8c87be4208aaf967ae90468ecd96cb", "committedDate": "2020-06-18T13:01:23Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/textsearchinfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "842883d440daff35e6c3605ae4c90ebac239e357", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/842883d440daff35e6c3605ae4c90ebac239e357", "committedDate": "2020-06-18T14:47:07Z", "message": "Don't expose lucene FieldType directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cedf0cfaaa66fa17b1fa7badc4826e45b54d899a", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/cedf0cfaaa66fa17b1fa7badc4826e45b54d899a", "committedDate": "2020-06-18T15:17:10Z", "message": "rationalise; javadocs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd62cd3a27fd84d18e75d2d303ede77e94d119ed", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/bd62cd3a27fd84d18e75d2d303ede77e94d119ed", "committedDate": "2020-06-18T15:00:37Z", "message": "rationalise; javadocs"}, "afterCommit": {"oid": "cedf0cfaaa66fa17b1fa7badc4826e45b54d899a", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/cedf0cfaaa66fa17b1fa7badc4826e45b54d899a", "committedDate": "2020-06-18T15:17:10Z", "message": "rationalise; javadocs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNTk4NzQw", "url": "https://github.com/elastic/elasticsearch/pull/58230#pullrequestreview-433598740", "createdAt": "2020-06-18T19:50:21Z", "commit": {"oid": "cedf0cfaaa66fa17b1fa7badc4826e45b54d899a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxOTo1MDoyMlrOGl98yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxOTo1MjowMlrOGl-AQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ2NTQ4MQ==", "bodyText": "would it make sense to avoid null values and replace them with a TestSearchInfo.NONE that always returns false? I feel like that may make it easier to trace where it's used and it will avoid NPEs :)", "url": "https://github.com/elastic/elasticsearch/pull/58230#discussion_r442465481", "createdAt": "2020-06-18T19:50:22Z", "author": {"login": "javanna"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/TextSearchInfo.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.mapper;\n+\n+import org.apache.lucene.document.FieldType;\n+import org.apache.lucene.index.IndexOptions;\n+\n+/**\n+ * Encapsulates information about how to perform text searches over a field\n+ */\n+public class TextSearchInfo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cedf0cfaaa66fa17b1fa7badc4826e45b54d899a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ2NjM3MA==", "bodyText": "does it make sense to add this as a comment somewhere?", "url": "https://github.com/elastic/elasticsearch/pull/58230#discussion_r442466370", "createdAt": "2020-06-18T19:52:02Z", "author": {"login": "javanna"}, "path": "server/src/test/java/org/elasticsearch/index/mapper/GenericStoreDynamicTemplateTests.java", "diffHunk": "@@ -51,16 +51,13 @@ public void testSimple() throws Exception {\n         assertThat(f.stringValue(), equalTo(\"some name\"));\n         assertThat(f.fieldType().stored(), equalTo(true));\n \n-        FieldType fieldType = mapperService.getLuceneFieldType(\"name\");\n+        FieldType fieldType = mapperService.fieldType(\"name\").getTextSearchInfo().getLuceneFieldType();\n         assertThat(fieldType.stored(), equalTo(true));\n \n         boolean stored = false;\n         for (IndexableField field : doc.getFields(\"age\")) {\n             stored |=  field.fieldType().stored();\n         }\n         assertTrue(stored);\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5OTU5OQ=="}, "originalCommit": {"oid": "9852fcd7c0214b627884e2e4b772c79d52c68944"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dcbc22a2fa84c7611303a8c694de9df686ffd6f", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/0dcbc22a2fa84c7611303a8c694de9df686ffd6f", "committedDate": "2020-06-23T09:12:23Z", "message": "Merge remote-tracking branch 'origin/master' into mapper/textsearchinfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c44158f900627fcdbe0e14ccb87678f95b428f5b", "author": {"user": {"login": "romseygeek", "name": "Alan Woodward"}}, "url": "https://github.com/elastic/elasticsearch/commit/c44158f900627fcdbe0e14ccb87678f95b428f5b", "committedDate": "2020-06-23T09:33:19Z", "message": "Add TextSearchInfo.NONE"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NzA2NzUw", "url": "https://github.com/elastic/elasticsearch/pull/58230#pullrequestreview-435706750", "createdAt": "2020-06-23T11:55:41Z", "commit": {"oid": "c44158f900627fcdbe0e14ccb87678f95b428f5b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 578, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}