{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMzg5NzAy", "number": 61348, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMjo1NTo0MFrOEag8Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMjo1NjozMlrOEag9pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjM4MTU5OnYy", "diffSide": "RIGHT", "path": "server/src/internalClusterTest/java/org/elasticsearch/indices/settings/UpdateSettingsIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMjo1NTo0MFrOHD_d9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNzowMjoyOFrOHELQMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk0NzYzNw==", "bodyText": "Is there a reason we do not want this to be the same? With the block already in place, this could be a no-op?", "url": "https://github.com/elastic/elasticsearch/pull/61348#discussion_r473947637", "createdAt": "2020-08-20T12:55:40Z", "author": {"login": "henningandersen"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/indices/settings/UpdateSettingsIT.java", "diffHunk": "@@ -687,4 +690,40 @@ private void runTestDefaultNumberOfReplicasTest(final boolean closeIndex) {\n         assertThat(IndexMetadata.INDEX_NUMBER_OF_REPLICAS_SETTING.get(response.getIndexToSettings().get(\"test\")), equalTo(1));\n     }\n \n+    public void testNoopUpdate() {\n+        internalCluster().ensureAtLeastNumDataNodes(2);\n+        final ClusterService clusterService = internalCluster().getMasterNodeInstance(ClusterService.class);\n+        assertAcked(client().admin().indices().prepareCreate(\"test\")\n+            .setSettings(Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 2)));\n+        client().admin().cluster().prepareHealth()\n+            .setWaitForNoInitializingShards(true)\n+            .setWaitForEvents(Priority.LANGUID)\n+            .setTimeout(TimeValue.MAX_VALUE)\n+            .get();\n+\n+        ClusterState currentState = clusterService.state();\n+        assertAcked(client().admin().indices().prepareUpdateSettings(\"test\")\n+            .setSettings(Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 1)));\n+        assertNotSame(currentState, clusterService.state());\n+        currentState = clusterService.state();\n+\n+        assertAcked(client().admin().indices().prepareUpdateSettings(\"test\")\n+            .setSettings(Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 1)));\n+        assertSame(clusterService.state(), currentState);\n+\n+        assertAcked(client().admin().indices().prepareUpdateSettings(\"test\")\n+            .setSettings(Settings.builder().putNull(IndexMetadata.SETTING_NUMBER_OF_REPLICAS)));\n+        assertSame(clusterService.state(), currentState);\n+\n+        assertAcked(client().admin().indices().prepareUpdateSettings(\"test\")\n+            .setSettings(Settings.builder()\n+                .put(SETTING_BLOCKS_READ, true)\n+                .put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 1)));\n+        assertNotSame(currentState, clusterService.state());\n+        currentState = clusterService.state();\n+\n+        assertAcked(client().admin().indices().prepareUpdateSettings(\"test\")\n+            .setSettings(Settings.builder().put(SETTING_BLOCKS_READ, true)));\n+        assertNotSame(currentState, clusterService.state());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0729616f6112b7b3e700fadf22771ee12bd7f0b2"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MDcyMw==", "bodyText": "Addressed in f43c2ea.", "url": "https://github.com/elastic/elasticsearch/pull/61348#discussion_r474140723", "createdAt": "2020-08-20T17:02:28Z", "author": {"login": "dnhatn"}, "path": "server/src/internalClusterTest/java/org/elasticsearch/indices/settings/UpdateSettingsIT.java", "diffHunk": "@@ -687,4 +690,40 @@ private void runTestDefaultNumberOfReplicasTest(final boolean closeIndex) {\n         assertThat(IndexMetadata.INDEX_NUMBER_OF_REPLICAS_SETTING.get(response.getIndexToSettings().get(\"test\")), equalTo(1));\n     }\n \n+    public void testNoopUpdate() {\n+        internalCluster().ensureAtLeastNumDataNodes(2);\n+        final ClusterService clusterService = internalCluster().getMasterNodeInstance(ClusterService.class);\n+        assertAcked(client().admin().indices().prepareCreate(\"test\")\n+            .setSettings(Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 2)));\n+        client().admin().cluster().prepareHealth()\n+            .setWaitForNoInitializingShards(true)\n+            .setWaitForEvents(Priority.LANGUID)\n+            .setTimeout(TimeValue.MAX_VALUE)\n+            .get();\n+\n+        ClusterState currentState = clusterService.state();\n+        assertAcked(client().admin().indices().prepareUpdateSettings(\"test\")\n+            .setSettings(Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 1)));\n+        assertNotSame(currentState, clusterService.state());\n+        currentState = clusterService.state();\n+\n+        assertAcked(client().admin().indices().prepareUpdateSettings(\"test\")\n+            .setSettings(Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 1)));\n+        assertSame(clusterService.state(), currentState);\n+\n+        assertAcked(client().admin().indices().prepareUpdateSettings(\"test\")\n+            .setSettings(Settings.builder().putNull(IndexMetadata.SETTING_NUMBER_OF_REPLICAS)));\n+        assertSame(clusterService.state(), currentState);\n+\n+        assertAcked(client().admin().indices().prepareUpdateSettings(\"test\")\n+            .setSettings(Settings.builder()\n+                .put(SETTING_BLOCKS_READ, true)\n+                .put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 1)));\n+        assertNotSame(currentState, clusterService.state());\n+        currentState = clusterService.state();\n+\n+        assertAcked(client().admin().indices().prepareUpdateSettings(\"test\")\n+            .setSettings(Settings.builder().put(SETTING_BLOCKS_READ, true)));\n+        assertNotSame(currentState, clusterService.state());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk0NzYzNw=="}, "originalCommit": {"oid": "0729616f6112b7b3e700fadf22771ee12bd7f0b2"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjM4NTAyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataUpdateSettingsService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMjo1NjozMlrOHD_f8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNzowMjoxNVrOHELP0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk0ODE0NQ==", "bodyText": "This sets changed=true regardless of whether block was in place or not. I think we should handle that too - mainly for completeness more than necessity.", "url": "https://github.com/elastic/elasticsearch/pull/61348#discussion_r473948145", "createdAt": "2020-08-20T12:56:32Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataUpdateSettingsService.java", "diffHunk": "@@ -304,8 +311,10 @@ private static void maybeUpdateClusterBlock(String[] actualIndices, ClusterBlock\n                 } else {\n                     blocks.removeIndexBlock(index, block);\n                 }\n+                changed = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0729616f6112b7b3e700fadf22771ee12bd7f0b2"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MDYyNg==", "bodyText": "I was focusing on the optimization for CCR. I've adjusted this in f43c2ea.", "url": "https://github.com/elastic/elasticsearch/pull/61348#discussion_r474140626", "createdAt": "2020-08-20T17:02:15Z", "author": {"login": "dnhatn"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataUpdateSettingsService.java", "diffHunk": "@@ -304,8 +311,10 @@ private static void maybeUpdateClusterBlock(String[] actualIndices, ClusterBlock\n                 } else {\n                     blocks.removeIndexBlock(index, block);\n                 }\n+                changed = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk0ODE0NQ=="}, "originalCommit": {"oid": "0729616f6112b7b3e700fadf22771ee12bd7f0b2"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 860, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}