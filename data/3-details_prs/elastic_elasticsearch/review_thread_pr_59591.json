{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MzMzMDkz", "number": 59591, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMDowNDowNlrOERYlpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjowOToxNlrOESx-uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjY0MTAxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/CompositeBucketsChangeCollector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMDowNDowNlrOG2EDbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMToxMDowMFrOG2F9NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM0MjcwMg==", "bodyText": "Is this enforced anywhere in the config parsing?\nAnd do the randomTransformConfig methods in the tests enforce this?  I guess if they choose completely random field names for each section of the config then it's highly unlikely the time field in the sync config would randomly be the same as the time field for the date histogram.  So maybe this problem can be ignored.", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r459342702", "createdAt": "2020-07-23T10:04:06Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/CompositeBucketsChangeCollector.java", "diffHunk": "@@ -175,7 +227,10 @@ public boolean collectChanges(Collection<? extends Bucket> buckets) {\n \n         @Override\n         public QueryBuilder filterByChanges(long lastCheckpointTimestamp, long nextcheckpointTimestamp) {\n+\n             if (isSynchronizationField && lastCheckpointTimestamp > 0) {\n+                // missing bucket can't be enabled as it would be an illegal combination", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc3d3f9920409666e8b4d28b679c7788726c1c07"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3Mzg3Nw==", "bodyText": "good spot!\nI should instead disable the isSynchronizationField optimization on line 214 in case missingBucket == true:\nthis.isSynchronizationField = isSynchronizationField && (missingBucket == false);", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r459373877", "createdAt": "2020-07-23T11:10:00Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/CompositeBucketsChangeCollector.java", "diffHunk": "@@ -175,7 +227,10 @@ public boolean collectChanges(Collection<? extends Bucket> buckets) {\n \n         @Override\n         public QueryBuilder filterByChanges(long lastCheckpointTimestamp, long nextcheckpointTimestamp) {\n+\n             if (isSynchronizationField && lastCheckpointTimestamp > 0) {\n+                // missing bucket can't be enabled as it would be an illegal combination", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM0MjcwMg=="}, "originalCommit": {"oid": "fc3d3f9920409666e8b4d28b679c7788726c1c07"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTI4MzU3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjowODoxMFrOG4JgXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjowODoxMFrOG4JgXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUyOTE4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        + \"this transform might run slow, please check your configuration.\",\n          \n          \n            \n                                        + \"this transform might run slowly, please check your configuration.\",", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r461529180", "createdAt": "2020-07-28T12:08:10Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "diffHunk": "@@ -347,6 +347,21 @@ protected void initializeFunction() {\n \n         if (isContinuous()) {\n             changeCollector = function.buildChangeCollector(getConfig().getSyncConfig().getField());\n+\n+            if (changeCollector.isOptimized() == false) {\n+                logger.warn(\n+                    new ParameterizedMessage(\n+                        \"[{}] could not find any optimizations for continuous execution, \"\n+                            + \"this transform might run slow, please check your configuration.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d71db41306a660215b4fec9e661ac648c7d84d8"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTI4NDM2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjowODoyMlrOG4Jg2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjowODoyMlrOG4Jg2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUyOTMwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    + \"this transform might run slow, please check your configuration.\"\n          \n          \n            \n                                    + \"this transform might run slowly, please check your configuration.\"", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r461529307", "createdAt": "2020-07-28T12:08:22Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "diffHunk": "@@ -347,6 +347,21 @@ protected void initializeFunction() {\n \n         if (isContinuous()) {\n             changeCollector = function.buildChangeCollector(getConfig().getSyncConfig().getField());\n+\n+            if (changeCollector.isOptimized() == false) {\n+                logger.warn(\n+                    new ParameterizedMessage(\n+                        \"[{}] could not find any optimizations for continuous execution, \"\n+                            + \"this transform might run slow, please check your configuration.\",\n+                        getJobId()\n+                    )\n+                );\n+                auditor.warning(\n+                    getJobId(),\n+                    \"could not find any optimizations for continuous execution, \"\n+                        + \"this transform might run slow, please check your configuration.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d71db41306a660215b4fec9e661ac648c7d84d8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTI4Njk2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjowOToxNlrOG4JijA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODoxMDoyOVrOG4tbbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUyOTc0MA==", "bodyText": "It would be nice to say which pivot values are causing the the optimization to be false. Each collector could respond with a reason.", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r461529740", "createdAt": "2020-07-28T12:09:16Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "diffHunk": "@@ -347,6 +347,21 @@ protected void initializeFunction() {\n \n         if (isContinuous()) {\n             changeCollector = function.buildChangeCollector(getConfig().getSyncConfig().getField());\n+\n+            if (changeCollector.isOptimized() == false) {\n+                logger.warn(\n+                    new ParameterizedMessage(\n+                        \"[{}] could not find any optimizations for continuous execution, \"\n+                            + \"this transform might run slow, please check your configuration.\",\n+                        getJobId()\n+                    )\n+                );\n+                auditor.warning(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d71db41306a660215b4fec9e661ac648c7d84d8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExNzc0MQ==", "bodyText": "created #60364 to follow up on this", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r462117741", "createdAt": "2020-07-29T08:10:29Z", "author": {"login": "hendrikmuhs"}, "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "diffHunk": "@@ -347,6 +347,21 @@ protected void initializeFunction() {\n \n         if (isContinuous()) {\n             changeCollector = function.buildChangeCollector(getConfig().getSyncConfig().getField());\n+\n+            if (changeCollector.isOptimized() == false) {\n+                logger.warn(\n+                    new ParameterizedMessage(\n+                        \"[{}] could not find any optimizations for continuous execution, \"\n+                            + \"this transform might run slow, please check your configuration.\",\n+                        getJobId()\n+                    )\n+                );\n+                auditor.warning(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUyOTc0MA=="}, "originalCommit": {"oid": "2d71db41306a660215b4fec9e661ac648c7d84d8"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2314, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}