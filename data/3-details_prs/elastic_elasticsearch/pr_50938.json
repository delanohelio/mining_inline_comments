{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMzA1MDY1", "number": 50938, "title": "Add \"did you mean\" to ObjectParser", "bodyText": "Check it out:\n$ curl -u elastic:password -HContent-Type:application/json -XPOST localhost:9200/test/_update/foo?pretty -d'{\n  \"dac\": {}\n}'\n\n{\n  \"error\" : {\n    \"root_cause\" : [\n      {\n        \"type\" : \"x_content_parse_exception\",\n        \"reason\" : \"[2:3] [UpdateRequest] unknown field [dac] did you mean [doc]?\"\n      }\n    ],\n    \"type\" : \"x_content_parse_exception\",\n    \"reason\" : \"[2:3] [UpdateRequest] unknown field [dac] did you mean [doc]?\"\n  },\n  \"status\" : 400\n}\n\nThe tricky thing about implementing this is that x-content doesn't\ndepend on Lucene. So this works by creating an extension point for the\nerror message using SPI. Elasticsearch's server module provides the\n\"spell checking\" implementation.", "createdAt": "2020-01-13T20:25:13Z", "url": "https://github.com/elastic/elasticsearch/pull/50938", "merged": true, "mergeCommit": {"oid": "5da5f44de4a6aa6bdd4e2d50d811af5518ed239c"}, "closed": true, "closedAt": "2020-01-14T15:42:06Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6CTRmAH2gAyMzYyMzA1MDY1OjExY2NkMTE1YWM1ZWZlZTA2MTBkYWZiZDZiYmQ3ZGY5MDk4OTE0NTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6RrnpAH2gAyMzYyMzA1MDY1OjQ3N2U5ZWZjZTBkOWIxMjNlYWEzZTllYjIwNjk4Y2YxNWI4YmJlNjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "11ccd115ac5efee0610dafbd6bbd7df909891459", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/11ccd115ac5efee0610dafbd6bbd7df909891459", "committedDate": "2020-01-13T20:23:24Z", "message": "Add \"did you mean\" to ObjectParser\n\nCheck it out:\n```\n$ curl -u elastic:password -HContent-Type:application/json -XPOST localhost:9200/test/_update/foo?pretty -d'{\n  \"dac\": {}\n}'\n\n{\n  \"error\" : {\n    \"root_cause\" : [\n      {\n        \"type\" : \"x_content_parse_exception\",\n        \"reason\" : \"[2:3] [UpdateRequest] unknown field [dac] did you mean [doc]?\"\n      }\n    ],\n    \"type\" : \"x_content_parse_exception\",\n    \"reason\" : \"[2:3] [UpdateRequest] unknown field [dac] did you mean [doc]?\"\n  },\n  \"status\" : 400\n}\n```\n\nThe tricky thing about implementing this is that x-content doesn't\ndepend on Lucene. So this works by creating an extension point for the\nerror message using SPI. Elasticsearch's server module provides the\n\"spell checking\" implementation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMTE2NDky", "url": "https://github.com/elastic/elasticsearch/pull/50938#pullrequestreview-342116492", "createdAt": "2020-01-13T20:26:12Z", "commit": {"oid": "11ccd115ac5efee0610dafbd6bbd7df909891459"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDoyNjoxMlrOFdDhpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDoyNzozNFrOFdDjpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAxMDc4OA==", "bodyText": "I think passing ObjectParser here is ok because the interface is entirely private already. I could certainly be convinced otherwise though.", "url": "https://github.com/elastic/elasticsearch/pull/50938#discussion_r366010788", "createdAt": "2020-01-13T20:26:12Z", "author": {"login": "nik9000"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java", "diffHunk": "@@ -81,18 +81,17 @@\n     }\n \n     private interface UnknownFieldParser<Value, Context> {\n-\n-        void acceptUnknownField(String parserName, String field, XContentLocation location, XContentParser parser,\n-                                Value value, Context context) throws IOException;\n+        void acceptUnknownField(ObjectParser<Value, Context> objectParser, String field, XContentLocation location, XContentParser parser,\n+                Value value, Context context) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11ccd115ac5efee0610dafbd6bbd7df909891459"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAxMDk2MA==", "bodyText": "I could preserve this bit of the message, but I don't think it was really helping anything.", "url": "https://github.com/elastic/elasticsearch/pull/50938#discussion_r366010960", "createdAt": "2020-01-13T20:26:37Z", "author": {"login": "nik9000"}, "path": "libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java", "diffHunk": "@@ -206,7 +206,7 @@ public void setTest(int test) {\n         {\n             XContentParser parser = createParser(JsonXContent.jsonXContent, \"{\\\"not_supported_field\\\" : \\\"foo\\\"}\");\n             XContentParseException ex = expectThrows(XContentParseException.class, () -> objectParser.parse(parser, s, null));\n-            assertEquals(ex.getMessage(), \"[1:2] [the_parser] unknown field [not_supported_field], parser not found\");\n+            assertEquals(ex.getMessage(), \"[1:2] [the_parser] unknown field [not_supported_field]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11ccd115ac5efee0610dafbd6bbd7df909891459"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAxMTEzOQ==", "bodyText": "I wanted some end to end test and a surprising number of things don't use ObjectParser in the server.", "url": "https://github.com/elastic/elasticsearch/pull/50938#discussion_r366011139", "createdAt": "2020-01-13T20:27:07Z", "author": {"login": "nik9000"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/update/90_error.yml", "diffHunk": "@@ -0,0 +1,10 @@\n+---\n+'Misspelled fields get \"did you mean\"':\n+  - do:\n+      catch: /\\[1:2\\] \\[UpdateRequest\\] unknown field \\[dac\\] did you mean \\[doc\\]\\?/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11ccd115ac5efee0610dafbd6bbd7df909891459"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAxMTMwMg==", "bodyText": "This seems like a problem for a follow up PR. I don't think it'd be hard, but a little fiddly.", "url": "https://github.com/elastic/elasticsearch/pull/50938#discussion_r366011302", "createdAt": "2020-01-13T20:27:34Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/common/xcontent/SuggestingErrorOnUnknown.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.common.xcontent;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.lucene.search.spell.LevenshteinDistance;\n+import org.apache.lucene.util.CollectionUtil;\n+import org.elasticsearch.common.collect.Tuple;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+\n+import static java.util.stream.Collectors.toList;\n+\n+public class SuggestingErrorOnUnknown implements ErrorOnUnknown {\n+    @Override\n+    public String errorMessage(String parserName, String unknownField, Iterable<String> candidates) {\n+        String message = String.format(Locale.ROOT, \"[%s] unknown field [%s]\", parserName, unknownField);\n+        // TODO it'd be nice to combine this with BaseRestHandler's implementation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11ccd115ac5efee0610dafbd6bbd7df909891459"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf8ef05143a7c50df51f52f7fc95ec96518bbef9", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/bf8ef05143a7c50df51f52f7fc95ec96518bbef9", "committedDate": "2020-01-13T20:50:35Z", "message": "Checkstyle, you annoying, lovely thing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5be1e7a9213f3bbfaedf9196c18d0ad3e94fbd2f", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/5be1e7a9213f3bbfaedf9196c18d0ad3e94fbd2f", "committedDate": "2020-01-13T21:44:42Z", "message": "Oh boy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb36d919385f5cc49c821afc25c1bded70569f3f", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/bb36d919385f5cc49c821afc25c1bded70569f3f", "committedDate": "2020-01-13T22:04:19Z", "message": "Merge branch 'master' into object_parser_did_you_mean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e97b199fd6894bc57e8731f0b6a6bf17e68e5a9b", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/e97b199fd6894bc57e8731f0b6a6bf17e68e5a9b", "committedDate": "2020-01-13T22:08:10Z", "message": "Fixup tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a63a711e9ca208095b7c3d254248cee32193b3c", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/0a63a711e9ca208095b7c3d254248cee32193b3c", "committedDate": "2020-01-14T13:51:41Z", "message": "Fix tests?"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNTQ4OTcw", "url": "https://github.com/elastic/elasticsearch/pull/50938#pullrequestreview-342548970", "createdAt": "2020-01-14T13:58:14Z", "commit": {"oid": "e97b199fd6894bc57e8731f0b6a6bf17e68e5a9b"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMzo1ODoxNFrOFdYU1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNDowMTowMVrOFdYawg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM1MTU3NQ==", "bodyText": "nit: s/form/from/", "url": "https://github.com/elastic/elasticsearch/pull/50938#discussion_r366351575", "createdAt": "2020-01-14T13:58:14Z", "author": {"login": "romseygeek"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ErrorOnUnknown.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.common.xcontent;\n+\n+import java.util.ServiceLoader;\n+\n+/**\n+ * Extension point to customize the error message for unknown fields. We expect\n+ * Elasticsearch to plug a fancy implementation that uses Lucene's spelling\n+ * correction infrastructure to suggest corrections.\n+ */\n+public interface ErrorOnUnknown {\n+    /**\n+     * The implementation of this interface that was loaded form SPI.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e97b199fd6894bc57e8731f0b6a6bf17e68e5a9b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM1MzA5MA==", "bodyText": "This PR makes it even more compelling that we should migrate as much as possible away from hand-rolled parsing code - it might be worth a divide-and-rule effort like we did with the HLRC or Streamable->Writeable?", "url": "https://github.com/elastic/elasticsearch/pull/50938#discussion_r366353090", "createdAt": "2020-01-14T14:01:01Z", "author": {"login": "romseygeek"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/update/90_error.yml", "diffHunk": "@@ -0,0 +1,10 @@\n+---\n+'Misspelled fields get \"did you mean\"':\n+  - do:\n+      catch: /\\[1:2\\] \\[UpdateRequest\\] unknown field \\[dac\\] did you mean \\[doc\\]\\?/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAxMTEzOQ=="}, "originalCommit": {"oid": "11ccd115ac5efee0610dafbd6bbd7df909891459"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc67258db8e1a70be10c69214475b839cdf00f8e", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/cc67258db8e1a70be10c69214475b839cdf00f8e", "committedDate": "2020-01-14T14:14:50Z", "message": "Speeling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "477e9efce0d9b123eaa3e9eb20698cf15b8bbe61", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/477e9efce0d9b123eaa3e9eb20698cf15b8bbe61", "committedDate": "2020-01-14T14:18:34Z", "message": "Merge branch 'master' into object_parser_did_you_mean"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3213, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}