{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNDYyNzU0", "number": 57094, "title": "Release HTTP Request Body Earlier", "bodyText": "We don't need to hold on to the request body past the beginning of sending\nthe response. There is no need to keep a reference to it until after the response\nhas been sent fully and we can eagerly release it here.\nNote, this can be optimized further to release the contents even earlier but for now\nthis is an easy increment to saving some memory on the IO pool.", "createdAt": "2020-05-24T20:03:59Z", "url": "https://github.com/elastic/elasticsearch/pull/57094", "merged": true, "mergeCommit": {"oid": "2151fbf7d78d8fdd197a9b6ad5aaeccb8f4f7818"}, "closed": true, "closedAt": "2020-05-25T10:02:48Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckhFdPgH2gAyNDIyNDYyNzU0OmJkZDc3M2E2NzcwYmM5MzJhZTg0OWM5OWFlYjY1M2UxZWI1MzEwOGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcksjOLgFqTQxNzU3OTQ5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bdd773a6770bc932ae849c99aeb653e1eb53108d", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/bdd773a6770bc932ae849c99aeb653e1eb53108d", "committedDate": "2020-05-24T20:00:11Z", "message": "Release HTTP Request Body Earlier\n\nWe don't need to hold on to the request body past the beginning of sending\nthe response. There is no need to keep a reference to it until after the response\nhas been sent fully and we can eagerly release it here.\nNote, this can be optimized further to release the contents even earlier but for now\nthis is an easy increment to saving some memory on the IO pool."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3Mzk2MjY1", "url": "https://github.com/elastic/elasticsearch/pull/57094#pullrequestreview-417396265", "createdAt": "2020-05-24T22:14:46Z", "commit": {"oid": "bdd773a6770bc932ae849c99aeb653e1eb53108d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMjoxNDo0NlrOGZxmnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMjoxNDo0NlrOGZxmnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY4MDI4NA==", "bodyText": "sorry maybe a naive comment, is it better to name public api getRequestHeaders ?", "url": "https://github.com/elastic/elasticsearch/pull/57094#discussion_r429680284", "createdAt": "2020-05-24T22:14:46Z", "author": {"login": "keypointt"}, "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpResponse.java", "diffHunk": "@@ -45,8 +47,8 @@ public boolean containsHeader(String name) {\n         return headers().contains(name);\n     }\n \n-    public Netty4HttpRequest getRequest() {\n-        return request;\n+    public HttpHeaders requestHeaders() {\n+        return requestHeaders;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd773a6770bc932ae849c99aeb653e1eb53108d"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3Mzk2NDQx", "url": "https://github.com/elastic/elasticsearch/pull/57094#pullrequestreview-417396441", "createdAt": "2020-05-24T22:17:49Z", "commit": {"oid": "bdd773a6770bc932ae849c99aeb653e1eb53108d"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDk3NTc4", "url": "https://github.com/elastic/elasticsearch/pull/57094#pullrequestreview-417497578", "createdAt": "2020-05-25T07:04:37Z", "commit": {"oid": "bdd773a6770bc932ae849c99aeb653e1eb53108d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzowNDozOFrOGZ2v2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzowNDozOFrOGZ2v2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc2NDU2OA==", "bodyText": "I figured if we release the request before using these parts (version and headers) it's a little nicer not to pass the full request around. Also, for non-pooled allocation (this includes all requests that aren't search or bulk) this makes the GC's life a little easier)", "url": "https://github.com/elastic/elasticsearch/pull/57094#discussion_r429764568", "createdAt": "2020-05-25T07:04:38Z", "author": {"login": "original-brownbear"}, "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpResponse.java", "diffHunk": "@@ -20,19 +20,21 @@\n package org.elasticsearch.http.netty4;\n \n import io.netty.handler.codec.http.DefaultFullHttpResponse;\n+import io.netty.handler.codec.http.HttpHeaders;\n import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.netty.handler.codec.http.HttpVersion;\n import org.elasticsearch.common.bytes.BytesReference;\n import org.elasticsearch.http.HttpResponse;\n import org.elasticsearch.rest.RestStatus;\n import org.elasticsearch.transport.netty4.Netty4Utils;\n \n public class Netty4HttpResponse extends DefaultFullHttpResponse implements HttpResponse {\n \n-    private final Netty4HttpRequest request;\n+    private final HttpHeaders requestHeaders;\n \n-    Netty4HttpResponse(Netty4HttpRequest request, RestStatus status, BytesReference content) {\n-        super(request.nettyRequest().protocolVersion(), HttpResponseStatus.valueOf(status.getStatus()), Netty4Utils.toByteBuf(content));\n-        this.request = request;\n+    Netty4HttpResponse(HttpHeaders requestHeaders, HttpVersion version, RestStatus status, BytesReference content) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd773a6770bc932ae849c99aeb653e1eb53108d"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NTY3NzQx", "url": "https://github.com/elastic/elasticsearch/pull/57094#pullrequestreview-417567741", "createdAt": "2020-05-25T09:02:53Z", "commit": {"oid": "bdd773a6770bc932ae849c99aeb653e1eb53108d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTowMjo1NFrOGZ6Ljg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTowMjo1NFrOGZ6Ljg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgyMDgxNA==", "bodyText": "Do the same for NioCorsHandler here?", "url": "https://github.com/elastic/elasticsearch/pull/57094#discussion_r429820814", "createdAt": "2020-05-25T09:02:54Z", "author": {"login": "ywelsch"}, "path": "modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsHandler.java", "diffHunk": "@@ -93,20 +93,20 @@ public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception\n     public void write(ChannelHandlerContext ctx, Object msg, ChannelPromise promise) throws Exception {\n         assert msg instanceof Netty4HttpResponse : \"Invalid message type: \" + msg.getClass();\n         Netty4HttpResponse response = (Netty4HttpResponse) msg;\n-        setCorsResponseHeaders(response.getRequest().nettyRequest(), response, config);\n+        setCorsResponseHeaders(response.requestHeaders(), response, config);\n         ctx.write(response, promise);\n     }\n \n-    public static void setCorsResponseHeaders(HttpRequest request, HttpResponse resp, CorsHandler.Config config) {\n+    public static void setCorsResponseHeaders(HttpHeaders headers, HttpResponse resp, CorsHandler.Config config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd773a6770bc932ae849c99aeb653e1eb53108d"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53d6af5f50cf46c0ead7dd96828f8b946f40d795", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/53d6af5f50cf46c0ead7dd96828f8b946f40d795", "committedDate": "2020-05-25T09:06:44Z", "message": "Merge remote-tracking branch 'elastic/master' into simplify-rest-req-handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b7ebcf2e93301178833a1ee61470b23cefafb01", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/3b7ebcf2e93301178833a1ee61470b23cefafb01", "committedDate": "2020-05-25T09:18:05Z", "message": "CR: align NIO"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NTc5NDkz", "url": "https://github.com/elastic/elasticsearch/pull/57094#pullrequestreview-417579493", "createdAt": "2020-05-25T09:21:39Z", "commit": {"oid": "3b7ebcf2e93301178833a1ee61470b23cefafb01"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4240, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}