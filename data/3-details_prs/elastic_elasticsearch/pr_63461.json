{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5ODI2NDkx", "number": 63461, "title": "Use Pooled Byte Arrays in BlobStoreRepository Serialization", "bodyText": "Many of the metadata blobs we handle in the changed spots can grow\nup in size up to O(1M). Not using recycled bytes when working with\nthem causes significant spikes in memory use for larger repositories.", "createdAt": "2020-10-08T10:40:30Z", "url": "https://github.com/elastic/elasticsearch/pull/63461", "merged": true, "mergeCommit": {"oid": "c419cd3251a3a97dd3b7094f183529bec9391e7d"}, "closed": true, "closedAt": "2020-10-12T08:27:52Z", "author": {"login": "original-brownbear"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQfHT8AH2gAyNDk5ODI2NDkxOjU0MTg2ZTc0NWNhN2Q0NTY2ZTI0Mzg4NzEyNDMyYjJlODYyNWFhZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdRvi3TAFqTUwNjM5MjcxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff", "author": {"user": {"login": "original-brownbear", "name": "Armin Braun"}}, "url": "https://github.com/elastic/elasticsearch/commit/54186e745ca7d4566e24388712432b2e8625aaff", "committedDate": "2020-10-08T10:35:04Z", "message": "Use Pooled Byte Arrays in BlobStoreRepository Serialization\n\nMany of the metadata blobs we handle in the changed spots can grow\nup in size up to `O(1M)`. Not using recycled bytes when working with\nthem causes significant spikes in memory use for larger repositories."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0Njc0NzY3", "url": "https://github.com/elastic/elasticsearch/pull/63461#pullrequestreview-504674767", "createdAt": "2020-10-08T11:14:40Z", "commit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToxNDo0MFrOHeZo9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToxNDo0MFrOHeZo9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYzOTQxNQ==", "bodyText": "It's not exclusively laziness that I didn't make this path use pooled bytes now as well. Caching here turned out to be somewhat bogus in practice and needs to be changed (will do over the next few days when I find some time). I just went with the simplest possible change here for now as it doesn't really matter.", "url": "https://github.com/elastic/elasticsearch/pull/63461#discussion_r501639415", "createdAt": "2020-10-08T11:14:40Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1340,8 +1348,8 @@ private void doGetRepositoryData(ActionListener<RepositoryData> listener) {\n                     // We can cache serialized in the most recent version here without regard to the actual repository metadata version\n                     // since we're only caching the information that we just wrote and thus won't accidentally cache any information that\n                     // isn't safe\n-                    cacheRepositoryData(\n-                            BytesReference.bytes(loaded.snapshotsToXContent(XContentFactory.jsonBuilder(), Version.CURRENT)), genToLoad);\n+                    cacheRepositoryData(compressRepoDataForCache(BytesReference.bytes(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "originalPosition": 131}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0Njc2MjY0", "url": "https://github.com/elastic/elasticsearch/pull/63461#pullrequestreview-504676264", "createdAt": "2020-10-08T11:16:46Z", "commit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToxNjo0NlrOHeZtLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToxNjo0NlrOHeZtLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0MDQ5Mw==", "bodyText": "Creating the serialized repo data to cache here early is a win even without pooled buffers for the serialization. It wasn't necessary to keep the uncompressed version around for the duration of the below cluster state update.\nThis is especially true when it turns out to be very large (as in multiple MB or so) and won't be cached to begin with.", "url": "https://github.com/elastic/elasticsearch/pull/63461#discussion_r501640493", "createdAt": "2020-10-08T11:16:46Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -1630,9 +1648,15 @@ public void onFailure(Exception e) {\n             }\n             final String indexBlob = INDEX_FILE_PREFIX + Long.toString(newGen);\n             logger.debug(\"Repository [{}] writing new index generational blob [{}]\", metadata.name(), indexBlob);\n-            final BytesReference serializedRepoData =\n-                    BytesReference.bytes(newRepositoryData.snapshotsToXContent(XContentFactory.jsonBuilder(), version));\n-            writeAtomic(blobContainer(), indexBlob, serializedRepoData, true);\n+            final BytesReference repoDataToCache;\n+            try (ReleasableBytesStreamOutput out = new ReleasableBytesStreamOutput(bigArrays)) {\n+                try (XContentBuilder xContentBuilder = XContentFactory.jsonBuilder(Streams.noCloseStream(out))) {\n+                    newRepositoryData.snapshotsToXContent(xContentBuilder, version);\n+                }\n+                final BytesReference serializedRepoData = out.bytes();\n+                writeAtomic(blobContainer(), indexBlob, serializedRepoData, true);\n+                repoDataToCache = compressRepoDataForCache(serializedRepoData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "originalPosition": 224}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0Njc3MTA1", "url": "https://github.com/elastic/elasticsearch/pull/63461#pullrequestreview-504677105", "createdAt": "2020-10-08T11:17:56Z", "commit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToxNzo1NlrOHeZvYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToxNzo1NlrOHeZvYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0MTA1OA==", "bodyText": "Gotta do the non-closing copy here and close the in via try because we can only close out once (multiple closes aren't idempotent and trip assertions.", "url": "https://github.com/elastic/elasticsearch/pull/63461#discussion_r501641058", "createdAt": "2020-10-08T11:17:56Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/ChecksumBlobStoreFormat.java", "diffHunk": "@@ -101,9 +104,14 @@ public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunct\n      * @param name          name to be translated into\n      * @return parsed blob object\n      */\n-    public T read(BlobContainer blobContainer, String name, NamedXContentRegistry namedXContentRegistry) throws IOException {\n+    public T read(BlobContainer blobContainer, String name, NamedXContentRegistry namedXContentRegistry,\n+                  BigArrays bigArrays) throws IOException {\n         String blobName = blobName(name);\n-        return deserialize(blobName, namedXContentRegistry, Streams.readFully(blobContainer.readBlob(blobName)));\n+        try (ReleasableBytesStreamOutput out = new ReleasableBytesStreamOutput(bigArrays);\n+             InputStream in = blobContainer.readBlob(blobName)) {\n+            Streams.copy(in, out, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MzYzODE0", "url": "https://github.com/elastic/elasticsearch/pull/63461#pullrequestreview-506363814", "createdAt": "2020-10-12T07:38:25Z", "commit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzozODoyNVrOHfyflg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzo0MTo0MFrOHfymhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5NTE5MA==", "bodyText": "extra space", "url": "https://github.com/elastic/elasticsearch/pull/63461#discussion_r503095190", "createdAt": "2020-10-12T07:38:25Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/ChecksumBlobStoreFormat.java", "diffHunk": "@@ -101,9 +104,14 @@ public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunct\n      * @param name          name to be translated into\n      * @return parsed blob object\n      */\n-    public T read(BlobContainer blobContainer, String name, NamedXContentRegistry namedXContentRegistry) throws IOException {\n+    public T read(BlobContainer blobContainer, String name, NamedXContentRegistry namedXContentRegistry,\n+                  BigArrays bigArrays) throws IOException {\n         String blobName = blobName(name);\n-        return deserialize(blobName, namedXContentRegistry, Streams.readFully(blobContainer.readBlob(blobName)));\n+        try (ReleasableBytesStreamOutput out = new ReleasableBytesStreamOutput(bigArrays);\n+             InputStream in = blobContainer.readBlob(blobName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5Njk2NQ==", "bodyText": "+1, bytes() should not be used once ReleasableBytesStreamOutput is closed", "url": "https://github.com/elastic/elasticsearch/pull/63461#discussion_r503096965", "createdAt": "2020-10-12T07:41:40Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/ChecksumBlobStoreFormat.java", "diffHunk": "@@ -101,9 +104,14 @@ public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunct\n      * @param name          name to be translated into\n      * @return parsed blob object\n      */\n-    public T read(BlobContainer blobContainer, String name, NamedXContentRegistry namedXContentRegistry) throws IOException {\n+    public T read(BlobContainer blobContainer, String name, NamedXContentRegistry namedXContentRegistry,\n+                  BigArrays bigArrays) throws IOException {\n         String blobName = blobName(name);\n-        return deserialize(blobName, namedXContentRegistry, Streams.readFully(blobContainer.readBlob(blobName)));\n+        try (ReleasableBytesStreamOutput out = new ReleasableBytesStreamOutput(bigArrays);\n+             InputStream in = blobContainer.readBlob(blobName)) {\n+            Streams.copy(in, out, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0MTA1OA=="}, "originalCommit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MzgwMjQy", "url": "https://github.com/elastic/elasticsearch/pull/63461#pullrequestreview-506380242", "createdAt": "2020-10-12T08:00:52Z", "commit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MzkyNzE0", "url": "https://github.com/elastic/elasticsearch/pull/63461#pullrequestreview-506392714", "createdAt": "2020-10-12T08:17:33Z", "commit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODoxNzozM1rOHfz14g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODoxNzozM1rOHfz14g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExNzI4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                         InputStream in = blobContainer.readBlob(blobName)) {\n          \n          \n            \n                        Streams.copy(in, out, false);\n          \n          \n            \n                        InputStream in = blobContainer.readBlob(blobName)) {\n          \n          \n            \n                        Streams.copy(in, out, false);", "url": "https://github.com/elastic/elasticsearch/pull/63461#discussion_r503117282", "createdAt": "2020-10-12T08:17:33Z", "author": {"login": "tlrx"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/ChecksumBlobStoreFormat.java", "diffHunk": "@@ -101,9 +104,14 @@ public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunct\n      * @param name          name to be translated into\n      * @return parsed blob object\n      */\n-    public T read(BlobContainer blobContainer, String name, NamedXContentRegistry namedXContentRegistry) throws IOException {\n+    public T read(BlobContainer blobContainer, String name, NamedXContentRegistry namedXContentRegistry,\n+                  BigArrays bigArrays) throws IOException {\n         String blobName = blobName(name);\n-        return deserialize(blobName, namedXContentRegistry, Streams.readFully(blobContainer.readBlob(blobName)));\n+        try (ReleasableBytesStreamOutput out = new ReleasableBytesStreamOutput(bigArrays);\n+             InputStream in = blobContainer.readBlob(blobName)) {\n+            Streams.copy(in, out, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54186e745ca7d4566e24388712432b2e8625aaff"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4207, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}