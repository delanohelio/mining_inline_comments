{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NjgyMjIz", "number": 58524, "title": "Map only specific type of OIDC Claims", "bodyText": "This commit changes our behavior in 2 ways:\n\nWhen mapping claims to user properties ( principal, email, groups,\nname), we only handle string and array of string type. Previously\nwe would fail to recognize an array of other types and that would\ncause failures when trying to cast to String.\nWhen adding unmapped claims to the user metadata, we only handle\nstring, number, boolean and arrays of these. Previously, we would\nfail to recognize an array of other types and that would cause\nfailures when attempting to process role mappings.\n\nFor user properties that are inherently single valued, like\nprincipal(username) we continue to support arrays of strings where\nwe select the first one in case this is being depended on by users\nbut we plan on removing this leniency in the next major release.", "createdAt": "2020-06-25T05:55:22Z", "url": "https://github.com/elastic/elasticsearch/pull/58524", "merged": true, "mergeCommit": {"oid": "2217705a7ce821fa9ddfb44e4079320d098cb8cb"}, "closed": true, "closedAt": "2020-07-06T00:02:26Z", "author": {"login": "jkakavas"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuEz3OAH2gAyNDM5NjgyMjIzOmU5MzMwMmQwZDFjMDViOTBhODBiZjMzMWM3MGExZWMxZjU2MGVlZWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxjoNVAFqTQ0MjU5NTcwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e93302d0d1c05b90a80bf331c70a1ec1f560eeed", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/e93302d0d1c05b90a80bf331c70a1ec1f560eeed", "committedDate": "2020-06-23T12:42:52Z", "message": "Map only specific type of OIDC Claims\n\nThis commit changes our behavior in 2 ways:\n\n- When mapping claims to user properties ( principal, email, groups,\nname), we only handle string and array of string type. Previously\nwe would fail to recognize an array of other types and that would\ncause failures when trying to cast to String.\n- When adding unmapped claims to the user metadata, we only handle\nstring, number, boolean and arrays of these. Previously, we would\nfail to recognize an array of other types and that would cause\nfailures when attempting to process role mappings.\n\nFor user properties that are inherently single valued, like\nprincipal(username) we continue to support arrays of strings where\nwe select the first one in case this is being depended on by users\nbut we plan on removing this leniency in the next major release."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MjAzNzc3", "url": "https://github.com/elastic/elasticsearch/pull/58524#pullrequestreview-437203777", "createdAt": "2020-06-25T06:33:48Z", "commit": {"oid": "e93302d0d1c05b90a80bf331c70a1ec1f560eeed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNjozMzo0OFrOGotIzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNjozMzo0OFrOGotIzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMzNTc1Nw==", "bodyText": "I think we probably want to ensure that these are homogenous collections. I don't know how we would make sense of [ \"1\", true, 1.0 ]", "url": "https://github.com/elastic/elasticsearch/pull/58524#discussion_r445335757", "createdAt": "2020-06-25T06:33:48Z", "author": {"login": "tvernum"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/oidc/OpenIdConnectRealm.java", "diffHunk": "@@ -385,6 +381,15 @@ public void close() {\n         openIdConnectAuthenticator.close();\n     }\n \n+    /*\n+     * We only map claims that are of Type String, Boolean, or Number, or arrays that contain only these types\n+     */\n+    private static boolean isAllowedTypeForClaim(Object o) {\n+        return (o instanceof String || o instanceof Boolean || o instanceof Number\n+            || (o instanceof Collection && ((Collection) o).stream()\n+            .allMatch(c -> c instanceof String || c instanceof Boolean || c instanceof Number)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e93302d0d1c05b90a80bf331c70a1ec1f560eeed"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTM3MzYy", "url": "https://github.com/elastic/elasticsearch/pull/58524#pullrequestreview-437937362", "createdAt": "2020-06-26T00:07:18Z", "commit": {"oid": "e93302d0d1c05b90a80bf331c70a1ec1f560eeed"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDowNzoxOFrOGpPvww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoxMjozOVrOGpP1CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMjc4Nw==", "bodyText": "The new validateClaimType method does not assert claimValueObject is a List. In theory it could be a Set or a Number.", "url": "https://github.com/elastic/elasticsearch/pull/58524#discussion_r445902787", "createdAt": "2020-06-26T00:07:18Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/oidc/OpenIdConnectRealm.java", "diffHunk": "@@ -461,18 +477,15 @@ static ClaimParser forSetting(Logger logger, OpenIdConnectRealmSettings.ClaimSet\n                         \"OpenID Connect Claim [\" + claimName + \"] for [\" + setting.name(realmConfig) + \"]\",\n                         claims -> {\n                             Object claimValueObject = claims.getClaim(claimName);\n+                            validateClaimType(claimValueObject, RealmSettings.getFullSettingKey(realmConfig, setting.getClaim()));\n                             if (claimValueObject == null) {\n                                 return List.of();\n                             } else if (claimValueObject instanceof String) {\n                                 return List.of((String) claimValueObject);\n-                            } else if (claimValueObject instanceof List == false) {\n-                                throw new SettingsException(\"Setting [\" + RealmSettings.getFullSettingKey(realmConfig, setting.getClaim())\n-                                    + \" expects a claim with String or a String Array value but found a \"\n-                                    + claimValueObject.getClass().getName());\n                             }\n                             return ((List<String>) claimValueObject).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e93302d0d1c05b90a80bf331c70a1ec1f560eeed"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNDEzNw==", "bodyText": "I'd prefer a more descriptive method name if possible. The current feels like it will validate the claim value is a certain specified type. But it really just asserts the value is either:\n\nA String or\nIf it is a collection, it must be a collection of String\n\nNow I am not sure if this is what we really want? Is it OK if the value is a Number?", "url": "https://github.com/elastic/elasticsearch/pull/58524#discussion_r445904137", "createdAt": "2020-06-26T00:12:39Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/oidc/OpenIdConnectRealm.java", "diffHunk": "@@ -412,6 +417,15 @@ public String toString() {\n             return name;\n         }\n \n+        private static void validateClaimType(Object claimValueObject, String settingKey) {\n+            if (claimValueObject instanceof String == false &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e93302d0d1c05b90a80bf331c70a1ec1f560eeed"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4274675db37b510adb9fe33dae1e403034c2059f", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/4274675db37b510adb9fe33dae1e403034c2059f", "committedDate": "2020-06-29T14:59:33Z", "message": "address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1b35898cdbfb9f2cd233510fb4b79ff727b6d5f", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/f1b35898cdbfb9f2cd233510fb4b79ff727b6d5f", "committedDate": "2020-06-29T15:02:54Z", "message": "unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c02a7d9af48ceb1070ec57749802ea4bfb9d1d7", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/1c02a7d9af48ceb1070ec57749802ea4bfb9d1d7", "committedDate": "2020-06-29T15:23:18Z", "message": "Merge remote-tracking branch 'origin/master' into claims-mapping-changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd030f04477ba244fb0ab193f3ffdcec8c35f3b5", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/fd030f04477ba244fb0ab193f3ffdcec8c35f3b5", "committedDate": "2020-06-29T20:43:11Z", "message": "Don't try to validate null claims"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb9e3f2532e1af157432ed46f213b5bc57677350", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/cb9e3f2532e1af157432ed46f213b5bc57677350", "committedDate": "2020-06-29T22:32:54Z", "message": "fix parsing and validation logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5OTI3Njkz", "url": "https://github.com/elastic/elasticsearch/pull/58524#pullrequestreview-439927693", "createdAt": "2020-06-30T11:37:10Z", "commit": {"oid": "cb9e3f2532e1af157432ed46f213b5bc57677350"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMTozNzoxMFrOGq4SFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMTozNzoxMFrOGq4SFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYxNTUwOA==", "bodyText": "The check claimValueObject instanceof Collection is performed twice, which does not seem to be necessary\nThe if check only ensure it is a Collection<String>, not a List<String>. So there is a theoretical possibility for cast exception.\n\nI feel this part of code can be simplified to something like the follows:\n} else if (claimValueObject instanceof Collection && ((Collection) claimValueObject).stream().allMatch(c -> c instanceof String)) {\n    values = (Collection<String>) claimValueObject;\n} else {\n    throw new SettingsException(\"Setting [ \" + settingKey + \" expects a claim with String or a String Array value\");\n}\nWith above change, the return type of this method needs to be changed to Collection<String> as well.", "url": "https://github.com/elastic/elasticsearch/pull/58524#discussion_r447615508", "createdAt": "2020-06-30T11:37:10Z", "author": {"login": "ywangd"}, "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/oidc/OpenIdConnectRealm.java", "diffHunk": "@@ -412,6 +417,25 @@ public String toString() {\n             return name;\n         }\n \n+        private static List<String> parseClaimValues(JWTClaimsSet claimsSet, String claimName, String settingKey) {\n+            List<String> values;\n+            final Object claimValueObject = claimsSet.getClaim(claimName);\n+            if (claimValueObject == null) {\n+                values = List.of();\n+            } else if (claimValueObject instanceof String) {\n+                values = List.of((String) claimValueObject);\n+            } else if (claimValueObject instanceof Collection) {\n+                if (claimValueObject instanceof Collection && ((Collection) claimValueObject).stream().allMatch(c -> c instanceof String)) {\n+                    values = (List<String>) claimValueObject;\n+                } else {\n+                    throw new SettingsException(\"Setting [ \" + settingKey + \" expects a claim with String or a String Array value\");\n+                }\n+            } else {\n+                throw new SettingsException(\"Setting [ \" + settingKey + \" expects a claim with String or a String Array value\");\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9e3f2532e1af157432ed46f213b5bc57677350"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee0b57b30743c15824a5d0623b846f439605a416", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/ee0b57b30743c15824a5d0623b846f439605a416", "committedDate": "2020-06-30T12:10:10Z", "message": "address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2499dc23447d9a2d244493004a1141e7aa51d43c", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/2499dc23447d9a2d244493004a1141e7aa51d43c", "committedDate": "2020-06-30T12:17:15Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41aeec604099efb3a0c4775f8d45f8cebf4192eb", "author": {"user": {"login": "jkakavas", "name": "Ioannis Kakavas"}}, "url": "https://github.com/elastic/elasticsearch/commit/41aeec604099efb3a0c4775f8d45f8cebf4192eb", "committedDate": "2020-06-30T12:44:51Z", "message": "Merge remote-tracking branch 'origin/master' into claims-mapping-changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNTk1NzA3", "url": "https://github.com/elastic/elasticsearch/pull/58524#pullrequestreview-442595707", "createdAt": "2020-07-04T08:18:58Z", "commit": {"oid": "41aeec604099efb3a0c4775f8d45f8cebf4192eb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2615, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}