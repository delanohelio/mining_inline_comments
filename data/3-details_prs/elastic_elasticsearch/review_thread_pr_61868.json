{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3OTM3NDUz", "number": 61868, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjozMjowOVrOEfiV7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjozMjowOVrOEfiV7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTAzOTgxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsTask.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjozMjowOVrOHL3hGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjozODo0M1rOHL3wyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIwNTk3OA==", "bodyText": "I was going to comment about \"what else could be stale\", but looking at how we handle the _stats call, we effectively do this.\nSo, we are just shortcutting the _stats call here by slightly \"duplicating\" the code here\nI am referencing:\n\n  \n    \n      elasticsearch/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java\n    \n    \n         Line 122\n      in\n      c5cef17\n    \n    \n    \n    \n\n        \n          \n           task.updateReindexTaskProgress(reindexingProgressListener);", "url": "https://github.com/elastic/elasticsearch/pull/61868#discussion_r482205978", "createdAt": "2020-09-02T16:32:09Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsTask.java", "diffHunk": "@@ -331,14 +331,26 @@ void persistProgress(Client client, String jobId, Runnable runnable) {\n             }\n         );\n \n-        // Step 1: Search for existing progress document in .ml-state*\n-        SearchRequest searchRequest =\n-            new SearchRequest(AnomalyDetectorsIndex.jobStateIndexPattern())\n-                .source(\n-                    new SearchSourceBuilder()\n-                        .size(1)\n-                        .query(new IdsQueryBuilder().addIds(progressDocId)));\n-        executeAsyncWithOrigin(client, ML_ORIGIN, SearchAction.INSTANCE, searchRequest, searchFormerProgressDocListener);\n+        // Step 2: Search for existing progress document in .ml-state*\n+        ActionListener<Void> reindexProgressUpdateListener = ActionListener.wrap(\n+            aVoid -> {\n+                SearchRequest searchRequest =\n+                    new SearchRequest(AnomalyDetectorsIndex.jobStateIndexPattern())\n+                        .source(\n+                            new SearchSourceBuilder()\n+                                .size(1)\n+                                .query(new IdsQueryBuilder().addIds(progressDocId)));\n+                executeAsyncWithOrigin(client, ML_ORIGIN, SearchAction.INSTANCE, searchRequest, searchFormerProgressDocListener);\n+            },\n+            e -> {\n+                LOGGER.error(new ParameterizedMessage(\n+                    \"[{}] cannot persist progress as an error occurred while updating reindexing task progress\", taskParams.getId()), e);\n+                runnable.run();\n+            }\n+        );\n+\n+        // Step 1: Update reindexing progress as it could be stale\n+        updateReindexTaskProgress(reindexProgressUpdateListener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d3427da7bac5be4915a5b843543ccef565192d"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIwODczOQ==", "bodyText": "Yes indeed. Reindex is the only async task that we need to take care of updating its progress before reporting it. I thought about adding back the call to the get stats API. But it is quite a long way around. What do you think is better?", "url": "https://github.com/elastic/elasticsearch/pull/61868#discussion_r482208739", "createdAt": "2020-09-02T16:36:40Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsTask.java", "diffHunk": "@@ -331,14 +331,26 @@ void persistProgress(Client client, String jobId, Runnable runnable) {\n             }\n         );\n \n-        // Step 1: Search for existing progress document in .ml-state*\n-        SearchRequest searchRequest =\n-            new SearchRequest(AnomalyDetectorsIndex.jobStateIndexPattern())\n-                .source(\n-                    new SearchSourceBuilder()\n-                        .size(1)\n-                        .query(new IdsQueryBuilder().addIds(progressDocId)));\n-        executeAsyncWithOrigin(client, ML_ORIGIN, SearchAction.INSTANCE, searchRequest, searchFormerProgressDocListener);\n+        // Step 2: Search for existing progress document in .ml-state*\n+        ActionListener<Void> reindexProgressUpdateListener = ActionListener.wrap(\n+            aVoid -> {\n+                SearchRequest searchRequest =\n+                    new SearchRequest(AnomalyDetectorsIndex.jobStateIndexPattern())\n+                        .source(\n+                            new SearchSourceBuilder()\n+                                .size(1)\n+                                .query(new IdsQueryBuilder().addIds(progressDocId)));\n+                executeAsyncWithOrigin(client, ML_ORIGIN, SearchAction.INSTANCE, searchRequest, searchFormerProgressDocListener);\n+            },\n+            e -> {\n+                LOGGER.error(new ParameterizedMessage(\n+                    \"[{}] cannot persist progress as an error occurred while updating reindexing task progress\", taskParams.getId()), e);\n+                runnable.run();\n+            }\n+        );\n+\n+        // Step 1: Update reindexing progress as it could be stale\n+        updateReindexTaskProgress(reindexProgressUpdateListener);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIwNTk3OA=="}, "originalCommit": {"oid": "32d3427da7bac5be4915a5b843543ccef565192d"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIwOTk5Mg==", "bodyText": "I think doing this directly is fine.\nWe should definitely comment here AND on the _stats call. That way if ever we introduce another async service that we have to worry about refreshing, we capture it.", "url": "https://github.com/elastic/elasticsearch/pull/61868#discussion_r482209992", "createdAt": "2020-09-02T16:38:43Z", "author": {"login": "benwtrent"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsTask.java", "diffHunk": "@@ -331,14 +331,26 @@ void persistProgress(Client client, String jobId, Runnable runnable) {\n             }\n         );\n \n-        // Step 1: Search for existing progress document in .ml-state*\n-        SearchRequest searchRequest =\n-            new SearchRequest(AnomalyDetectorsIndex.jobStateIndexPattern())\n-                .source(\n-                    new SearchSourceBuilder()\n-                        .size(1)\n-                        .query(new IdsQueryBuilder().addIds(progressDocId)));\n-        executeAsyncWithOrigin(client, ML_ORIGIN, SearchAction.INSTANCE, searchRequest, searchFormerProgressDocListener);\n+        // Step 2: Search for existing progress document in .ml-state*\n+        ActionListener<Void> reindexProgressUpdateListener = ActionListener.wrap(\n+            aVoid -> {\n+                SearchRequest searchRequest =\n+                    new SearchRequest(AnomalyDetectorsIndex.jobStateIndexPattern())\n+                        .source(\n+                            new SearchSourceBuilder()\n+                                .size(1)\n+                                .query(new IdsQueryBuilder().addIds(progressDocId)));\n+                executeAsyncWithOrigin(client, ML_ORIGIN, SearchAction.INSTANCE, searchRequest, searchFormerProgressDocListener);\n+            },\n+            e -> {\n+                LOGGER.error(new ParameterizedMessage(\n+                    \"[{}] cannot persist progress as an error occurred while updating reindexing task progress\", taskParams.getId()), e);\n+                runnable.run();\n+            }\n+        );\n+\n+        // Step 1: Update reindexing progress as it could be stale\n+        updateReindexTaskProgress(reindexProgressUpdateListener);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIwNTk3OA=="}, "originalCommit": {"oid": "32d3427da7bac5be4915a5b843543ccef565192d"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1857, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}