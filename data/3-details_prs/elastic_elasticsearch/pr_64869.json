{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NTIzNDEy", "number": 64869, "title": "EQL: Add option for returning results from the tail of the stream", "bodyText": "Introduce option for specifying whether the results are returned from\nthe tail (end) of the stream or the head (beginning).\nImprove sequencing algorithm by significantly eliminating the number\nof in-flight sequences for spare datasets.\nRefactor the sequence class by eliminating some of the redundant code.\nChange matching behavior for tail sequences.\nReturn results based on their first entry ordinal instead of\ninsertion order (which was ordered on the last match ordinal).\nRandomize results position inside test suite.\nClose #58646", "createdAt": "2020-11-10T14:21:43Z", "url": "https://github.com/elastic/elasticsearch/pull/64869", "merged": true, "mergeCommit": {"oid": "e85d9d1bbee13ad408e789fd62efb30bc8d223f2"}, "closed": true, "closedAt": "2020-11-14T10:25:22Z", "author": {"login": "costin"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbKDGxAH2gAyNTE4NTIzNDEyOjkyNTllMjk0YzIyOTcwZDI4Njg3OTNiNTUxYWZjY2FhYjYwZGE4ZDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcYjC_gH2gAyNTE4NTIzNDEyOjIyMDllOTI0ZDNjMTk0OTNiNjQzZDQ4ZWUyMWZmYzhlNjE2YWQ5MzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9259e294c22970d2868793b551afccaab60da8d9", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/9259e294c22970d2868793b551afccaab60da8d9", "committedDate": "2020-11-10T14:15:38Z", "message": "EQL: Add option for returning results from the tail of the stream\n\nIntroduce option for specifying whether the results are returned from\nthe tail (end) of the stream or the head (beginning).\nImprove sequencing algorithm by significantly eliminating the number\nof in-flight sequences for spare datasets.\nRefactor the sequence class by eliminating some of the redundant code.\nChange matching behavior for tail sequences.\nReturn results based on their first entry ordinal instead of\ninsertion order (which was ordered on the last match ordinal).\nRandomize results position inside test suite.\n\nClose #58646"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MjUzMDg5", "url": "https://github.com/elastic/elasticsearch/pull/64869#pullrequestreview-527253089", "createdAt": "2020-11-10T14:24:32Z", "commit": {"oid": "9259e294c22970d2868793b551afccaab60da8d9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDoyNDozMlrOHwe9BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNTowMjoxNFrOHwgxjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYwMDgzNg==", "bodyText": "I've kept the existing default for now to not make this PR even bigger or complicate backporting to 7.10.\nI'll follow-up with a separate PR for changing the values themselves.", "url": "https://github.com/elastic/elasticsearch/pull/64869#discussion_r520600836", "createdAt": "2020-11-10T14:24:32Z", "author": {"login": "costin"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/eql/EqlSearchRequest.java", "diffHunk": "@@ -39,6 +39,7 @@\n     private QueryBuilder filter = null;\n     private String timestampField = \"@timestamp\";\n     private String eventCategoryField = \"event.category\";\n+    private String resultPosition = \"head\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9259e294c22970d2868793b551afccaab60da8d9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYwMTk0NA==", "bodyText": "I don't like this name; any suggestions? /cc @jrodewig.\nI had variations with order but that's incorrect since the order of the results is always ascending, it's rather the position from the stream where the results are picked up.\nHowever I don't think the name makes that obvious...", "url": "https://github.com/elastic/elasticsearch/pull/64869#discussion_r520601944", "createdAt": "2020-11-10T14:25:55Z", "author": {"login": "costin"}, "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/eql/EqlSearchRequest.java", "diffHunk": "@@ -57,6 +58,7 @@\n     static final String KEY_SIZE = \"size\";\n     static final String KEY_FETCH_SIZE = \"fetch_size\";\n     static final String KEY_QUERY = \"query\";\n+    static final String KEY_RESULT_POSITION = \"result_position\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9259e294c22970d2868793b551afccaab60da8d9"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYyODYzOA==", "bodyText": "Add a timeout setting (which is not straight-forward) to the base test.", "url": "https://github.com/elastic/elasticsearch/pull/64869#discussion_r520628638", "createdAt": "2020-11-10T14:59:41Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/qa/common/src/main/java/org/elasticsearch/test/eql/BaseEqlSpecTestCase.java", "diffHunk": "@@ -118,11 +119,19 @@ protected EqlSearchResponse runQuery(String index, String query) throws Exceptio\n         // some queries return more than 10 results\n         request.size(50);\n         request.fetchSize(randomIntBetween(2, 50));\n+        request.resultPosition(randomBoolean() ? \"head\" : \"tail\");\n         return runRequest(eqlClient(), request);\n     }\n \n     protected  EqlSearchResponse runRequest(EqlClient eqlClient, EqlSearchRequest request) throws IOException {\n-        return eqlClient.search(request, RequestOptions.DEFAULT);\n+        int timeout = Math.toIntExact(timeout().millis());\n+\n+        RequestConfig config = RequestConfig.copy(RequestConfig.DEFAULT)\n+            .setConnectionRequestTimeout(timeout)\n+            .setConnectTimeout(timeout)\n+            .setSocketTimeout(timeout)\n+            .build();\n+        return eqlClient.search(request, RequestOptions.DEFAULT.toBuilder().setRequestConfig(config).build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9259e294c22970d2868793b551afccaab60da8d9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYzMDY2OQ==", "bodyText": "Previously sequences were added based on their insertion order which is essentially the order of the last events in a sequence.\nThis can create some unexpected results as you can see on the left: [16,60,66] occurs after [55,59,61] and [59,61,65]. That is [16,60] occur after [59,61] because it's the last event that counts.\nI've changed this to be the order of the first event (not last one) in the sequence since this is what is seen first.", "url": "https://github.com/elastic/elasticsearch/pull/64869#discussion_r520630669", "createdAt": "2020-11-10T15:02:14Z", "author": {"login": "costin"}, "path": "x-pack/plugin/eql/qa/common/src/main/resources/additional_test_queries.toml", "diffHunk": "@@ -268,10 +268,10 @@ sequence by unique_pid\n   [any where true]\n   [any where serial_event_id < 72]\n '''\n-expected_event_ids  = [54, 55, 59,\n+expected_event_ids  = [16, 60, 66,\n+                       54, 55, 59,\n                        55, 59, 61,\n                        59, 61, 65,\n-                       16, 60, 66,\n+                       60, 66, 71,\n                        61, 65, 67,\n-                       65, 67, 70,\n-                       60, 66, 71]\n+                       65, 67, 70]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9259e294c22970d2868793b551afccaab60da8d9"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a214fdf2dff27c5d4f2df2d86e0f57d66a57ed56", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/a214fdf2dff27c5d4f2df2d86e0f57d66a57ed56", "committedDate": "2020-11-10T16:38:45Z", "message": "Put back PITAwareQueryClient\nRevert the sequence matching order from first to current/last."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5865c127a10b364544d8b618c29a0ae5b35351a1", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/5865c127a10b364544d8b618c29a0ae5b35351a1", "committedDate": "2020-11-12T23:11:14Z", "message": "polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43ef5ef630f4de8436be658a481be0c4e3af90b8", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/43ef5ef630f4de8436be658a481be0c4e3af90b8", "committedDate": "2020-11-12T23:11:14Z", "message": "Fix too aggressive trim\nPolishing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "faa489752845ae10033b08689c1f0b0659ec73ef", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/faa489752845ae10033b08689c1f0b0659ec73ef", "committedDate": "2020-11-12T23:29:14Z", "message": "Merge remote-tracking branch 'remotes/upstream/master' into fix/58646"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NjA1OTI1", "url": "https://github.com/elastic/elasticsearch/pull/64869#pullrequestreview-528605925", "createdAt": "2020-11-11T23:17:25Z", "commit": {"oid": "a214fdf2dff27c5d4f2df2d86e0f57d66a57ed56"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMzoxNzoyNlrOHxhuhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjo0ODozOFrOHzCA5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5NDg1NA==", "bodyText": "if (start == null || start.compareTo(ordinal) > 0) {\n   start = ordinal;\n}\nif (stop == null || stop.compareTo(ordinal) < 0) {\n   stop = ordinal;\n}", "url": "https://github.com/elastic/elasticsearch/pull/64869#discussion_r521694854", "createdAt": "2020-11-11T23:17:26Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/OrdinalGroup.java", "diffHunk": "@@ -56,15 +55,13 @@ void add(E element) {\n         Ordinal ordinal = extractor.apply(element);\n         if (start == null) {\n             start = ordinal;\n-        } else if (stop == null) {\n+        } else if (start.compareTo(ordinal) > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a214fdf2dff27c5d4f2df2d86e0f57d66a57ed56"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwNTUxNg==", "bodyText": "This method doesn't seem to be used anywhere else except in trimToLast. Is it really necessary?", "url": "https://github.com/elastic/elasticsearch/pull/64869#discussion_r521705516", "createdAt": "2020-11-11T23:38:09Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/OrdinalGroup.java", "diffHunk": "@@ -109,6 +107,18 @@ E before(Ordinal ordinal) {\n         return match != null ? match.v1() : null;\n     }\n \n+    void trimToLast() {\n+        keepOnly(elements.peekLast());\n+    }\n+\n+    private void keepOnly(E element) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a214fdf2dff27c5d4f2df2d86e0f57d66a57ed56"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI3MjQyMA==", "bodyText": "Combine these two conditions into one? if (currentStage > 0 && matcher.hasCandidates() == false) {", "url": "https://github.com/elastic/elasticsearch/pull/64869#discussion_r523272420", "createdAt": "2020-11-13T22:48:38Z", "author": {"login": "astefan"}, "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/TumblingWindow.java", "diffHunk": "@@ -75,91 +87,234 @@ public TumblingWindow(QueryClient client,\n         this.until = until;\n         this.criteria = criteria;\n         this.maxStages = criteria.size();\n-        this.windowSize = criteria.get(0).queryRequest().searchSource().size();\n-\n         this.matcher = matcher;\n+\n+        Criterion<BoxedQueryRequest> baseRequest = criteria.get(0);\n+        this.windowSize = baseRequest.queryRequest().searchSource().size();\n+        this.hasKeys = baseRequest.keySize() > 0;\n+        this.restartWindowFromTailQuery = baseRequest.descending();\n+        this.earlyUntil = baseRequest.descending();\n     }\n \n     @Override\n     public void execute(ActionListener<Payload> listener) {\n         log.trace(\"Starting sequence window w/ fetch size [{}]\", windowSize);\n         startTime = System.currentTimeMillis();\n-        advance(0, listener);\n+        tumbleWindow(0, listener);\n     }\n \n-    private void advance(int baseStage, ActionListener<Payload> listener) {\n+    /**\n+     * Move the window while preserving the same base.\n+     */\n+    private void tumbleWindow(int currentStage, ActionListener<Payload> listener) {\n+        if (currentStage > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faa489752845ae10033b08689c1f0b0659ec73ef"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2209e924d3c19493b643d48ee21ffc8e616ad935", "author": {"user": {"login": "costin", "name": "Costin Leau"}}, "url": "https://github.com/elastic/elasticsearch/commit/2209e924d3c19493b643d48ee21ffc8e616ad935", "committedDate": "2020-11-14T09:43:07Z", "message": "Address feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1149, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}