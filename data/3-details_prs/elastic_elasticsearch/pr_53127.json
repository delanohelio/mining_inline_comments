{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNzIwNjk2", "number": 53127, "title": "Mask wildcard query special characters on keyword queries", "bodyText": "Wildcard queries on keyword fields should get normalized, however this normalization\nshould exclude the two special characters * and ? in order to keep the wildcard query\nitself intact.\nCloses #46300", "createdAt": "2020-03-04T17:21:55Z", "url": "https://github.com/elastic/elasticsearch/pull/53127", "merged": true, "mergeCommit": {"oid": "facd525b0a30daa00794201db7af3883d903d6a2"}, "closed": true, "closedAt": "2020-03-12T18:11:22Z", "author": {"login": "cbuescher"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKaMnPAH2gAyMzgzNzIwNjk2OmVjN2VjZjcxMjgyYThiOGIxOTFkYTI3NWFhY2IzODYwOTRlNjU3ZTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM-QqKgH2gAyMzgzNzIwNjk2OmU0NjY1MTNjYTlhNWI5YTAyZTEyNGUxNGI4NGRkYzY3MTkyZGQyYTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ec7ecf71282a8b8b191da275aacb386094e657e0", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/ec7ecf71282a8b8b191da275aacb386094e657e0", "committedDate": "2020-03-04T17:16:38Z", "message": "Mask wildcard query special characters on keyword queries\n\nWildcard queries on keyword fields get normalized, however this normalization\nstep should exclude the two special characters * and ? in order to keep the\nwildcard query itself intact.\n\nCloses #46300"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTgzNzIw", "url": "https://github.com/elastic/elasticsearch/pull/53127#pullrequestreview-368983720", "createdAt": "2020-03-04T17:38:18Z", "commit": {"oid": "ec7ecf71282a8b8b191da275aacb386094e657e0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzozODoxOFrOFx2-hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzozODoxOFrOFx2-hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyNTI4Ng==", "bodyText": "We should do that only for wildcard queries. For other term-based queries these characters should remain in the normalization so I'd move this code to StringFieldType#wildcardQuery ?", "url": "https://github.com/elastic/elasticsearch/pull/53127#discussion_r387825286", "createdAt": "2020-03-04T17:38:18Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java", "diffHunk": "@@ -305,6 +310,31 @@ protected BytesRef indexedValueForSearch(Object value) {\n             if (value instanceof BytesRef) {\n                 value = ((BytesRef) value).utf8ToString();\n             }\n+            if (value instanceof String) {\n+                // best effort to not pass the wildcard characters and escaped characters through #normalize", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec7ecf71282a8b8b191da275aacb386094e657e0"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e3fc34cd60508efe961a6a35d8eec84bdfb2c84", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/1e3fc34cd60508efe961a6a35d8eec84bdfb2c84", "committedDate": "2020-03-05T17:54:27Z", "message": "Moving masking code to StringFieldType#wildcardQuery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cf6a71a189ada752741fd8b1744d6c44450098e", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/8cf6a71a189ada752741fd8b1744d6c44450098e", "committedDate": "2020-03-05T17:54:36Z", "message": "Merge branch 'master' into fix-46300"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0da91d9b8e125ab5fa91b880d110a71c0ec6642", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/f0da91d9b8e125ab5fa91b880d110a71c0ec6642", "committedDate": "2020-03-06T10:40:35Z", "message": "iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4529d1172c897342ad3fb9c37c403302affa098", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/c4529d1172c897342ad3fb9c37c403302affa098", "committedDate": "2020-03-10T14:30:20Z", "message": "Merge branch 'master' into fix-46300"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNTU4NDUz", "url": "https://github.com/elastic/elasticsearch/pull/53127#pullrequestreview-372558453", "createdAt": "2020-03-11T08:38:39Z", "commit": {"oid": "c4529d1172c897342ad3fb9c37c403302affa098"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwODozODozOVrOF0tYVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwODozODozOVrOF0tYVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgxMzc4Mw==", "bodyText": "We don't want to create a wildcard query for the _type field, this is not needed.\nIt should be possible to extend the new ConstantFieldType now that _type can have a single value (or none) ?\nCurrently TypeFieldType#termQuery can return Queries.newNonNestedFilter() and that's not handled in the code below. Although, I don't think this is needed since we exclude nested docs for the entire query at the end of the query parsing so it should be safe to remove. IMO the _type field should solely return MatchNoDocsQuery and MatchAllDocsQuery, that's exactly what the ConstantFieldType provides :).\n@romseygeek what do you think ?", "url": "https://github.com/elastic/elasticsearch/pull/53127#discussion_r390813783", "createdAt": "2020-03-11T08:38:39Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java", "diffHunk": "@@ -156,6 +162,24 @@ public Query termsQuery(List<?> values, QueryShardContext context) {\n             }\n         }\n \n+        @Override\n+        public Query wildcardQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n+            Query termQuery = termQuery(value, context);\n+            if (termQuery instanceof MatchNoDocsQuery || termQuery instanceof MatchAllDocsQuery) {\n+                return termQuery;\n+            }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4529d1172c897342ad3fb9c37c403302affa098"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e727b91d02d9c9dd5a48ee700227e8be684bac46", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/e727b91d02d9c9dd5a48ee700227e8be684bac46", "committedDate": "2020-03-11T13:47:57Z", "message": "Change TypeFieldType to extend ConstantFieldType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a59ea3e62f690e0e84de30b2b52f8443439f88ce", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/a59ea3e62f690e0e84de30b2b52f8443439f88ce", "committedDate": "2020-03-11T14:08:31Z", "message": "Merge branch 'master' into fix-46300"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddf828c25f28854551edd45589339965924fc46f", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/ddf828c25f28854551edd45589339965924fc46f", "committedDate": "2020-03-11T14:32:38Z", "message": "iter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyODI1NTkz", "url": "https://github.com/elastic/elasticsearch/pull/53127#pullrequestreview-372825593", "createdAt": "2020-03-11T14:44:15Z", "commit": {"oid": "ddf828c25f28854551edd45589339965924fc46f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDo0NDoxNlrOF06JhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDo0NjoyMFrOF06Pzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAyMjk4MA==", "bodyText": "I think you can use context.getMapperService().type() here, instead of SINGLE_MAPPING_NAME, and it will then backport easily.", "url": "https://github.com/elastic/elasticsearch/pull/53127#discussion_r391022980", "createdAt": "2020-03-11T14:44:16Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java", "diffHunk": "@@ -121,61 +121,12 @@ public ValuesSourceType getValuesSourceType() {\n         }\n \n         @Override\n-        public boolean isSearchable() {\n-            return true;\n-        }\n-\n-        @Override\n-        public Query existsQuery(QueryShardContext context) {\n-            return new MatchAllDocsQuery();\n-        }\n-\n-        @Override\n-        public Query termQuery(Object value, QueryShardContext context) {\n-            return termsQuery(Arrays.asList(value), context);\n-        }\n-\n-        @Override\n-        public Query termsQuery(List<?> values, QueryShardContext context) {\n-            DocumentMapper mapper = context.getMapperService().documentMapper();\n-            if (mapper == null) {\n-                return new MatchNoDocsQuery(\"No types\");\n-            }\n-            BytesRef indexType = indexedValueForSearch(mapper.type());\n-            if (values.stream()\n-                    .map(this::indexedValueForSearch)\n-                    .anyMatch(indexType::equals)) {\n-                if (context.getMapperService().hasNested()) {\n-                    // type filters are expected not to match nested docs\n-                    return Queries.newNonNestedFilter();\n-                } else {\n-                    return new MatchAllDocsQuery();\n-                }\n-            } else {\n-                return new MatchNoDocsQuery(\"Type list does not contain the index type\");\n-            }\n-        }\n-\n-        @Override\n-        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, QueryShardContext context) {\n-            Query result = new MatchAllDocsQuery();\n-            String type = context.getMapperService().documentMapper().type();\n-            if (type != null) {\n-                BytesRef typeBytes = new BytesRef(type);\n-                if (lowerTerm != null) {\n-                    int comp = indexedValueForSearch(lowerTerm).compareTo(typeBytes);\n-                    if (comp > 0 || (comp == 0 && includeLower == false)) {\n-                        result = new MatchNoDocsQuery(\"[_type] was lexicographically smaller than lower bound of range\");\n-                    }\n-                }\n-                if (upperTerm != null) {\n-                    int comp = indexedValueForSearch(upperTerm).compareTo(typeBytes);\n-                    if (comp < 0 || (comp == 0 && includeUpper == false)) {\n-                        result = new MatchNoDocsQuery(\"[_type] was lexicographically greater than upper bound of range\");\n-                    }\n-                }\n+        protected boolean matches(String pattern, QueryShardContext context) {\n+            if (pattern.contains(\"?\") == false) {\n+                return Regex.simpleMatch(pattern, MapperService.SINGLE_MAPPING_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf828c25f28854551edd45589339965924fc46f"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAyNDU5MA==", "bodyText": "Is this for backwards compatibility? Nested fields are defined using a different field in 8x", "url": "https://github.com/elastic/elasticsearch/pull/53127#discussion_r391024590", "createdAt": "2020-03-11T14:46:20Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/ConstantFieldType.java", "diffHunk": "@@ -79,6 +79,10 @@ private static String valueToString(Object value) {\n     public final Query termQuery(Object value, QueryShardContext context) {\n         String pattern = valueToString(value);\n         if (matches(pattern, context)) {\n+            if (context != null && context.getMapperService().hasNested()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf828c25f28854551edd45589339965924fc46f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c555c4390835569a8de639642e28920f4129c73b", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/c555c4390835569a8de639642e28920f4129c73b", "committedDate": "2020-03-11T15:02:59Z", "message": "iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db5ea54bfed5867e1bf8e8bd3324ab36adf2473b", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/db5ea54bfed5867e1bf8e8bd3324ab36adf2473b", "committedDate": "2020-03-11T15:38:55Z", "message": "Fix mocks in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNDkxMDk3", "url": "https://github.com/elastic/elasticsearch/pull/53127#pullrequestreview-373491097", "createdAt": "2020-03-12T11:55:32Z", "commit": {"oid": "db5ea54bfed5867e1bf8e8bd3324ab36adf2473b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMTo1NTozMlrOF1blwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMTo1NTozMlrOF1blwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU3MDg4Mg==", "bodyText": "I don't think we need to handle wildcard and prefixes here ? We don't support prefix and wildcard queries on the _type field today and since _type are now a thing from the past I don't think we should add this ability. Just checking that the pattern exactly matches the internal type should be enough.", "url": "https://github.com/elastic/elasticsearch/pull/53127#discussion_r391570882", "createdAt": "2020-03-12T11:55:32Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java", "diffHunk": "@@ -121,61 +121,12 @@ public ValuesSourceType getValuesSourceType() {\n         }\n \n         @Override\n-        public boolean isSearchable() {\n-            return true;\n-        }\n-\n-        @Override\n-        public Query existsQuery(QueryShardContext context) {\n-            return new MatchAllDocsQuery();\n-        }\n-\n-        @Override\n-        public Query termQuery(Object value, QueryShardContext context) {\n-            return termsQuery(Arrays.asList(value), context);\n-        }\n-\n-        @Override\n-        public Query termsQuery(List<?> values, QueryShardContext context) {\n-            DocumentMapper mapper = context.getMapperService().documentMapper();\n-            if (mapper == null) {\n-                return new MatchNoDocsQuery(\"No types\");\n-            }\n-            BytesRef indexType = indexedValueForSearch(mapper.type());\n-            if (values.stream()\n-                    .map(this::indexedValueForSearch)\n-                    .anyMatch(indexType::equals)) {\n-                if (context.getMapperService().hasNested()) {\n-                    // type filters are expected not to match nested docs\n-                    return Queries.newNonNestedFilter();\n-                } else {\n-                    return new MatchAllDocsQuery();\n-                }\n-            } else {\n-                return new MatchNoDocsQuery(\"Type list does not contain the index type\");\n-            }\n-        }\n-\n-        @Override\n-        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, QueryShardContext context) {\n-            Query result = new MatchAllDocsQuery();\n-            String type = context.getMapperService().documentMapper().type();\n-            if (type != null) {\n-                BytesRef typeBytes = new BytesRef(type);\n-                if (lowerTerm != null) {\n-                    int comp = indexedValueForSearch(lowerTerm).compareTo(typeBytes);\n-                    if (comp > 0 || (comp == 0 && includeLower == false)) {\n-                        result = new MatchNoDocsQuery(\"[_type] was lexicographically smaller than lower bound of range\");\n-                    }\n-                }\n-                if (upperTerm != null) {\n-                    int comp = indexedValueForSearch(upperTerm).compareTo(typeBytes);\n-                    if (comp < 0 || (comp == 0 && includeUpper == false)) {\n-                        result = new MatchNoDocsQuery(\"[_type] was lexicographically greater than upper bound of range\");\n-                    }\n-                }\n+        protected boolean matches(String pattern, QueryShardContext context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db5ea54bfed5867e1bf8e8bd3324ab36adf2473b"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dfe63df8a9f020f3c39c024292c7f221fd58527", "author": {"user": {"login": "cbuescher", "name": "Christoph B\u00fcscher"}}, "url": "https://github.com/elastic/elasticsearch/commit/4dfe63df8a9f020f3c39c024292c7f221fd58527", "committedDate": "2020-03-12T14:23:03Z", "message": "TypeFieldType#matches only needs to support exact match"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e466513ca9a5b9a02e124e14b84ddc67192dd2a9", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/e466513ca9a5b9a02e124e14b84ddc67192dd2a9", "committedDate": "2020-03-12T16:25:29Z", "message": "Merge branch 'master' into fix-46300"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1750, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}