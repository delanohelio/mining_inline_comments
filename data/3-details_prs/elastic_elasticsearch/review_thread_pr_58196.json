{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NDQzMDky", "number": 58196, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDozMTo1MlrOEGGRWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTo0ODowN1rOEGHsew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODI5NjU3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDozMTo1MlrOGksEvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTowNTo0MVrOGktJng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNDAzMQ==", "bodyText": "Should we have the same logic in the else below or do we expect users to not use stored_fields in conjunction with the new fields option ?", "url": "https://github.com/elastic/elasticsearch/pull/58196#discussion_r441124031", "createdAt": "2020-06-16T20:31:52Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java", "diffHunk": "@@ -101,7 +101,8 @@ public void execute(SearchContext context) {\n             if (!context.hasScriptFields() && !context.hasFetchSourceContext()) {\n                 context.fetchSourceContext(new FetchSourceContext(true));\n             }\n-            fieldsVisitor = new FieldsVisitor(context.sourceRequested());\n+            boolean loadSource = context.sourceRequested() || context.fetchFieldsContext() != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c7279db4689c526608aac2f832a32a73edfaa0f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNTg4NQ==", "bodyText": "I think it'd be safest to add it below too.", "url": "https://github.com/elastic/elasticsearch/pull/58196#discussion_r441135885", "createdAt": "2020-06-16T20:54:23Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java", "diffHunk": "@@ -101,7 +101,8 @@ public void execute(SearchContext context) {\n             if (!context.hasScriptFields() && !context.hasFetchSourceContext()) {\n                 context.fetchSourceContext(new FetchSourceContext(true));\n             }\n-            fieldsVisitor = new FieldsVisitor(context.sourceRequested());\n+            boolean loadSource = context.sourceRequested() || context.fetchFieldsContext() != null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNDAzMQ=="}, "originalCommit": {"oid": "2c7279db4689c526608aac2f832a32a73edfaa0f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0MTY2Mg==", "bodyText": "Oops, thanks for catching this. I'll push an update.", "url": "https://github.com/elastic/elasticsearch/pull/58196#discussion_r441141662", "createdAt": "2020-06-16T21:05:41Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java", "diffHunk": "@@ -101,7 +101,8 @@ public void execute(SearchContext context) {\n             if (!context.hasScriptFields() && !context.hasFetchSourceContext()) {\n                 context.fetchSourceContext(new FetchSourceContext(true));\n             }\n-            fieldsVisitor = new FieldsVisitor(context.sourceRequested());\n+            boolean loadSource = context.sourceRequested() || context.fetchFieldsContext() != null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNDAzMQ=="}, "originalCommit": {"oid": "2c7279db4689c526608aac2f832a32a73edfaa0f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODUyOTg3OnYy", "diffSide": "RIGHT", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/search/330_fetch_fields.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTo0ODowN1rOGkuWwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTo1MzoxOFrOGkuf6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2MTQwOQ==", "bodyText": "I tend to stick refresh on the index request.", "url": "https://github.com/elastic/elasticsearch/pull/58196#discussion_r441161409", "createdAt": "2020-06-16T21:48:07Z", "author": {"login": "nik9000"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/search/330_fetch_fields.yml", "diffHunk": "@@ -169,3 +169,51 @@ setup:\n \n   - match: { hits.hits.0.fields.integer.0: 42 }\n   - is_false: hits.hits.1.fields.integer\n+\n+---\n+\"Test disable _source loading\":\n+  - do:\n+      indices.create:\n+        index:  test\n+        body:\n+          settings:\n+            number_of_shards: 1\n+          mappings:\n+            properties:\n+              keyword:\n+                type: keyword\n+              integer:\n+                type: integer\n+                store: true\n+\n+  - do:\n+      index:\n+        index:  test\n+        id:     1\n+        body:\n+          keyword: \"x\"\n+          integer: 42\n+\n+  - do:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1ff79aa51408e581b9b993bbf043ff91b35d106"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2Mzc1NA==", "bodyText": "\ud83d\udc4d  this is nicer, especially when there's only one index request.", "url": "https://github.com/elastic/elasticsearch/pull/58196#discussion_r441163754", "createdAt": "2020-06-16T21:53:18Z", "author": {"login": "jtibshirani"}, "path": "rest-api-spec/src/main/resources/rest-api-spec/test/search/330_fetch_fields.yml", "diffHunk": "@@ -169,3 +169,51 @@ setup:\n \n   - match: { hits.hits.0.fields.integer.0: 42 }\n   - is_false: hits.hits.1.fields.integer\n+\n+---\n+\"Test disable _source loading\":\n+  - do:\n+      indices.create:\n+        index:  test\n+        body:\n+          settings:\n+            number_of_shards: 1\n+          mappings:\n+            properties:\n+              keyword:\n+                type: keyword\n+              integer:\n+                type: integer\n+                store: true\n+\n+  - do:\n+      index:\n+        index:  test\n+        id:     1\n+        body:\n+          keyword: \"x\"\n+          integer: 42\n+\n+  - do:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2MTQwOQ=="}, "originalCommit": {"oid": "b1ff79aa51408e581b9b993bbf043ff91b35d106"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1524, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}