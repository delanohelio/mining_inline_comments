{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzgzNzU3", "number": 53975, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzoyNzoxMlrODqYE1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzoyNzoxMlrODqYE1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzYxMjM4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheBufferedIndexInput.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzoyNzoxMlrOF6FTFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzoyNzoxMlrOF6FTFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ0ODUzMg==", "bodyText": "Replaces len with bytesRead in case of a partial read. I think this was technically ok before since we would proceed to overwrite the junk bytes with correct ones, but it was confusing.", "url": "https://github.com/elastic/elasticsearch/pull/53975#discussion_r396448532", "createdAt": "2020-03-23T13:27:12Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheBufferedIndexInput.java", "diffHunk": "@@ -214,7 +219,11 @@ private int readDirectly(long start, long end, byte[] buffer, int offset) throws\n             while (remaining > 0) {\n                 final int len = (remaining < copyBuffer.length) ? (int) remaining : copyBuffer.length;\n                 int bytesRead = input.read(copyBuffer, 0, len);\n-                System.arraycopy(copyBuffer, 0, buffer, offset + bytesCopied, len);\n+                if (bytesRead == -1) {\n+                    throw new EOFException(String.format(Locale.ROOT,\n+                        \"unexpected EOF reading [%d-%d] ([%d] bytes remaining) from %s\", start, end, remaining, cacheFileReference));\n+                }\n+                System.arraycopy(copyBuffer, 0, buffer, offset + bytesCopied, bytesRead);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6ca7dba326e5c352d8e5fa21223588d81e1be5a"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4206, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}