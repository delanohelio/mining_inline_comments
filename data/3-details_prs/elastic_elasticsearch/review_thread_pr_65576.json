{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MjA1ODI5", "number": 65576, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDoyODo0NVrOE-5fXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDoyODo0NVrOE-5fXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Mzg5MDg3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDoyODo0NVrOH8TToQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDo0MDo0MFrOH8TjPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MjkyOQ==", "bodyText": "I think this can be written more succinctly and without the unchecked warning?\nreturn Stream.concat(collection.stream(), Stream.of(element)).collect(Collectors.toList())", "url": "https://github.com/elastic/elasticsearch/pull/65576#discussion_r532992929", "createdAt": "2020-12-01T00:28:45Z", "author": {"login": "rjernst"}, "path": "server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java", "diffHunk": "@@ -317,6 +317,20 @@ public static int sortAndDedup(final BytesRefArray bytes, final int[] indices) {\n         return list;\n     }\n \n+    /**\n+     * Creates a copy of the given collection with the given element appended.\n+     *\n+     * @param collection collection to copy\n+     * @param element    element to append\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public static <E> List<E> appendToCopy(Collection<E> collection, E element) {\n+        final int size = collection.size() + 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e376ecd1329c766ff7c0ee6d377f53425492e4c0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5NjkyNw==", "bodyText": "True, but it's slower and returns a mutable list and less efficiently sized list. The former might matter in some of the snapshot/blob-store usage I added where this is called in surprisingly hot code.", "url": "https://github.com/elastic/elasticsearch/pull/65576#discussion_r532996927", "createdAt": "2020-12-01T00:40:40Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java", "diffHunk": "@@ -317,6 +317,20 @@ public static int sortAndDedup(final BytesRefArray bytes, final int[] indices) {\n         return list;\n     }\n \n+    /**\n+     * Creates a copy of the given collection with the given element appended.\n+     *\n+     * @param collection collection to copy\n+     * @param element    element to append\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public static <E> List<E> appendToCopy(Collection<E> collection, E element) {\n+        final int size = collection.size() + 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MjkyOQ=="}, "originalCommit": {"oid": "e376ecd1329c766ff7c0ee6d377f53425492e4c0"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1974, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}