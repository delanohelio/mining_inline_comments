{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NzI2ODIw", "number": 54669, "title": "Use V2 index templates during index creation", "bodyText": "This commit changes our index creation code to use (and favor!) V2 index templates during index\ncreation. The creation precedence goes like so, in order of precedence:\n\nExisting source IndexMetadata - for example, when recovering from a peer or a shrink/split/clone\nwhere index templates should not be applied\nA matching V2 index template, if one is found\n\nWhen a V2 template is found, all component templates (in the composed_of field) are applied\nin the order that they appear, with the index template having the 2nd highest precedence (the\ncreate index request always has the top priority when it comes to index settings)\n\n\nAll matching V1 templates (the old style)\n\nThis also adds index template validation when PUT-ing a new v2 index template (because this was\nrequired) and ensures that all index and component templates specify no top-level mapping type (it\nis automatically added when the template is added to the cluster state).\nThis does not yet implement fine-grained component template merging of mappings, where we favor\nmerging only a single field's configuration, that will be done in subsequent work.\nThis also keeps the existing hidden index behavior present for v1 templates, where a hidden index\nwill match v2 index templates unless they are global (*) templates.\nRelates to #53101", "createdAt": "2020-04-02T17:48:10Z", "url": "https://github.com/elastic/elasticsearch/pull/54669", "merged": true, "mergeCommit": {"oid": "9f9ade7dcb04c1ffc66e92357f6cd32721dcda38"}, "closed": true, "closedAt": "2020-04-03T15:34:51Z", "author": {"login": "dakrone"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTv68lAH2gAyMzk3NzI2ODIwOmQxNmZkM2Q4MDE0ZmFmY2QyZjc0MmE3NTY0ODNmMWQ1OWQ4ZjBmZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUAuaqAFqTM4NzIzODY0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d16fd3d8014fafcd2f742a756483f1d59d8f0fe5", "author": {"user": {"login": "dakrone", "name": "Lee Hinman"}}, "url": "https://github.com/elastic/elasticsearch/commit/d16fd3d8014fafcd2f742a756483f1d59d8f0fe5", "committedDate": "2020-04-02T17:40:34Z", "message": "Use V2 index templates during index creation\n\nThis commit changes our index creation code to use (and favor!) V2 index templates during index\ncreation. The creation precedence goes like so, in order of precedence:\n\n- Existing source `IndexMetadata` - for example, when recovering from a peer or a shrink/split/clone\n  where index templates should not be applied\n- A matching V2 index template, if one is found\n  - When a V2 template is found, all component templates (in the `composed_of` field) are applied\n    in the order that they appear, with the index template having the 2nd highest precedence (the\n    create index request always has the top priority when it comes to index settings)\n- All matching V1 templates (the old style)\n\nThis also adds index template validation when `PUT`-ing a new v2 index template (because this was\nrequired) and ensures that all index and component templates specify *no* top-level mapping type (it\nis automatically added when the template is added to the cluster state).\n\nThis does not yet implement fine-grained component template merging of mappings, where we favor\nmerging only a single field's configuration, that will be done in subsequent work.\n\nThis also keeps the existing hidden index behavior present for v1 templates, where a hidden index\nwill match v2 index templates unless they are global (`*`) templates.\n\nRelates to #53101"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "180cd169afaf82f93973aa4562d3028f091f1c7e", "author": {"user": {"login": "dakrone", "name": "Lee Hinman"}}, "url": "https://github.com/elastic/elasticsearch/commit/180cd169afaf82f93973aa4562d3028f091f1c7e", "committedDate": "2020-04-02T19:32:15Z", "message": "Make test not use prefixed wildcards\n\nIt matches all templates otherwise, so causes warnings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjM4NjQw", "url": "https://github.com/elastic/elasticsearch/pull/54669#pullrequestreview-387238640", "createdAt": "2020-04-03T13:08:38Z", "commit": {"oid": "180cd169afaf82f93973aa4562d3028f091f1c7e"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowODozOFrOGAUsgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoxNDoxMVrOGAU59A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5MjI1Nw==", "bodyText": "Should we also check v2 templates here, if default/final pipeline has been specified? If so then I think it is fine to do this in a follow up pr.", "url": "https://github.com/elastic/elasticsearch/pull/54669#discussion_r402992257", "createdAt": "2020-04-03T13:08:38Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -307,7 +307,7 @@ static boolean resolvePipelines(final DocWriteRequest<?> originalRequest, final\n                 }\n             } else if (indexRequest.index() != null) {\n                 // the index does not exist yet (and this is a valid request), so match index templates to look for pipelines\n-                List<IndexTemplateMetadata> templates = MetadataIndexTemplateService.findTemplates(metadata, indexRequest.index(), null);\n+                List<IndexTemplateMetadata> templates = MetadataIndexTemplateService.findV1Templates(metadata, indexRequest.index(), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "180cd169afaf82f93973aa4562d3028f091f1c7e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5Mjk0OA==", "bodyText": "Should we check v2 templates here too? If so, then I think it is ok to do this in a followup change as well.", "url": "https://github.com/elastic/elasticsearch/pull/54669#discussion_r402992948", "createdAt": "2020-04-03T13:09:41Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverService.java", "diffHunk": "@@ -161,10 +161,9 @@ static CreateIndexClusterStateUpdateRequest prepareCreateIndexRequest(final Stri\n      * the rollover alias will point to multiple indices. This causes indexing requests to be rejected.\n      * To avoid this, we make sure that there is no duplicated alias in index templates before creating a new index.\n      */\n-    static void checkNoDuplicatedAliasInIndexTemplate(\n-            Metadata metadata, String rolloverIndexName, String rolloverRequestAlias,\n-            @Nullable Boolean isHidden) {\n-        final List<IndexTemplateMetadata> matchedTemplates = findTemplates(metadata, rolloverIndexName, isHidden);\n+    static void checkNoDuplicatedAliasInIndexTemplate(Metadata metadata, String rolloverIndexName, String rolloverRequestAlias,\n+                                                      @Nullable Boolean isHidden) {\n+        final List<IndexTemplateMetadata> matchedTemplates = findV1Templates(metadata, rolloverIndexName, isHidden);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "180cd169afaf82f93973aa4562d3028f091f1c7e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5NTcwMA==", "bodyText": "Maybe leave the todo? I think we still need to validate whether templates with the same priority exist that have overlapping patterns?", "url": "https://github.com/elastic/elasticsearch/pull/54669#discussion_r402995700", "createdAt": "2020-04-03T13:14:11Z", "author": {"login": "martijnvg"}, "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java", "diffHunk": "@@ -295,12 +320,41 @@ static ClusterState addIndexTemplateV2(final ClusterState currentState, final bo\n             deprecationLogger.deprecated(warning);\n         }\n \n-        // TODO: validation of index template", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "180cd169afaf82f93973aa4562d3028f091f1c7e"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1310, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}