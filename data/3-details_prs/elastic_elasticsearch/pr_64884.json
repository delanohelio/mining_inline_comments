{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NjUxMjgz", "number": 64884, "title": "Don't keep track of field aliases separately in FieldTypeLookup", "bodyText": "We currently keep track of field aliases separately which causes us to do two lookups for every field lookup. Instead, we could keep track of field aliases in the same map where ordinary fields are, by adding an entry that has the name of the field alias, and its corresponding field type is the field that that the alias points to.", "createdAt": "2020-11-10T17:32:39Z", "url": "https://github.com/elastic/elasticsearch/pull/64884", "merged": true, "mergeCommit": {"oid": "3f3c05cbbb178883632c333c30f451254087a5df"}, "closed": true, "closedAt": "2020-11-10T18:56:41Z", "author": {"login": "javanna"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbM1FZAH2gAyNTE4NjUxMjgzOmZmZjM2MjA2YzVmYWYwMDc5MzRiMDYwMWU1MzVkZTg4MzJkMThkOTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbNvMJAFqTUyNzQ5MDc5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fff36206c5faf007934b0601e535de8832d18d99", "author": {"user": {"login": "javanna", "name": "Luca Cavanna"}}, "url": "https://github.com/elastic/elasticsearch/commit/fff36206c5faf007934b0601e535de8832d18d99", "committedDate": "2020-11-10T17:30:02Z", "message": "Don't keep track of field aliases in FieldTypeLookup\n\nWe currently keep track of field aliases which causes us to do two lookups for every field lookup. Instead, we could keep track of field aliases in the same map where ordinary fields are, by adding an entry that has the name of the field alias, and its corresponding field type is the field that that the alias points to."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NDczNDcw", "url": "https://github.com/elastic/elasticsearch/pull/64884#pullrequestreview-527473470", "createdAt": "2020-11-10T18:09:22Z", "commit": {"oid": "fff36206c5faf007934b0601e535de8832d18d99"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NDkwNzk5", "url": "https://github.com/elastic/elasticsearch/pull/64884#pullrequestreview-527490799", "createdAt": "2020-11-10T18:32:53Z", "commit": {"oid": "fff36206c5faf007934b0601e535de8832d18d99"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODozMjo1M1rOHwp8cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODozMjo1M1rOHwp8cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc4MDkxNA==", "bodyText": "I think we can extend this to DynamicKeyFieldTypeLookup as well?  Rather than passing the whole alias map, just check for each alias path to see if it matches an existing entry in the dynamicKeyMappers map, and if it does, add a new entry with the alias path and the original dynamic mapper.", "url": "https://github.com/elastic/elasticsearch/pull/64884#discussion_r520780914", "createdAt": "2020-11-10T18:32:53Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/FieldTypeLookup.java", "diffHunk": "@@ -70,10 +69,12 @@\n             }\n         }\n \n+        final Map<String, String> aliasToConcreteName = new HashMap<>();\n         for (FieldAliasMapper fieldAliasMapper : fieldAliasMappers) {\n             String aliasName = fieldAliasMapper.name();\n             String path = fieldAliasMapper.path();\n             aliasToConcreteName.put(aliasName, path);\n+            fullNameToFieldType.put(aliasName, fullNameToFieldType.get(path));\n         }\n \n         this.dynamicKeyLookup = new DynamicKeyFieldTypeLookup(dynamicKeyMappers, aliasToConcreteName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff36206c5faf007934b0601e535de8832d18d99"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1173, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}