{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNDY4ODQ5", "number": 59880, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjozODozN1rOEQmlQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjozODozN1rOEQmlQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODQ0ODAyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjozODozN1rOG019CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoyMjowN1rOG03qag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2MzExMw==", "bodyText": "Maybe just event.state() here?", "url": "https://github.com/elastic/elasticsearch/pull/59880#discussion_r458063113", "createdAt": "2020-07-21T12:38:37Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java", "diffHunk": "@@ -127,75 +131,53 @@ void setUpdateFrequency(TimeValue updateFrequency) {\n     }\n \n     @Override\n-    public void onMaster() {\n-        this.isMaster = true;\n-        if (logger.isTraceEnabled()) {\n-            logger.trace(\"I have been elected master, scheduling a ClusterInfoUpdateJob\");\n-        }\n-\n-        // Submit a job that will reschedule itself after running\n-        threadPool.scheduleUnlessShuttingDown(updateFrequency, executorName(), new SubmitReschedulingClusterInfoUpdatedJob());\n-\n-        try {\n-            if (clusterService.state().getNodes().getDataNodes().size() > 1) {\n-                // Submit an info update job to be run immediately\n-                threadPool.executor(executorName()).execute(this::maybeRefresh);\n-            }\n-        } catch (EsRejectedExecutionException ex) {\n-            logger.debug(\"Couldn't schedule cluster info update task - node might be shutting down\", ex);\n+    public void clusterChanged(ClusterChangedEvent event) {\n+        if (event.localNodeMaster() && refreshAndRescheduleRunnable.get() == null) {\n+            logger.trace(\"elected as master, scheduling cluster info update tasks\");\n+            executeRefresh(clusterService.state(), \"became master\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae1af97f02e84a39ce2239ec15ff372248dee01a"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA5MTExNA==", "bodyText": "++ 6209182", "url": "https://github.com/elastic/elasticsearch/pull/59880#discussion_r458091114", "createdAt": "2020-07-21T13:22:07Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java", "diffHunk": "@@ -127,75 +131,53 @@ void setUpdateFrequency(TimeValue updateFrequency) {\n     }\n \n     @Override\n-    public void onMaster() {\n-        this.isMaster = true;\n-        if (logger.isTraceEnabled()) {\n-            logger.trace(\"I have been elected master, scheduling a ClusterInfoUpdateJob\");\n-        }\n-\n-        // Submit a job that will reschedule itself after running\n-        threadPool.scheduleUnlessShuttingDown(updateFrequency, executorName(), new SubmitReschedulingClusterInfoUpdatedJob());\n-\n-        try {\n-            if (clusterService.state().getNodes().getDataNodes().size() > 1) {\n-                // Submit an info update job to be run immediately\n-                threadPool.executor(executorName()).execute(this::maybeRefresh);\n-            }\n-        } catch (EsRejectedExecutionException ex) {\n-            logger.debug(\"Couldn't schedule cluster info update task - node might be shutting down\", ex);\n+    public void clusterChanged(ClusterChangedEvent event) {\n+        if (event.localNodeMaster() && refreshAndRescheduleRunnable.get() == null) {\n+            logger.trace(\"elected as master, scheduling cluster info update tasks\");\n+            executeRefresh(clusterService.state(), \"became master\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2MzExMw=="}, "originalCommit": {"oid": "ae1af97f02e84a39ce2239ec15ff372248dee01a"}, "originalPosition": 101}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2230, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}