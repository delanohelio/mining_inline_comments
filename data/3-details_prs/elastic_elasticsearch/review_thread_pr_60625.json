{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMzY1NzY3", "number": 60625, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyNDo0MVrOEU5d-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyNDo0MVrOEU5d-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQ4NTM5OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/common/xcontent/BaseXContentTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyNDo0MVrOG7WSug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyNjozMVrOG7WW5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4NDQxMA==", "bodyText": "What do you think about adding a message here? e.g.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertFalse(closed.get());\n          \n          \n            \n                        assertFalse(\"Generator should not have close the output stream\", closed.get());", "url": "https://github.com/elastic/elasticsearch/pull/60625#discussion_r464884410", "createdAt": "2020-08-04T08:24:41Z", "author": {"login": "pugnascotia"}, "path": "server/src/test/java/org/elasticsearch/common/xcontent/BaseXContentTestCase.java", "diffHunk": "@@ -947,11 +948,18 @@ void doTestRawValue(XContent source) throws Exception {\n             assertNull(parser.nextToken());\n         }\n \n-        os = new ByteArrayOutputStream();\n+        final AtomicBoolean closed = new AtomicBoolean(false);\n+        os = new ByteArrayOutputStream() {\n+            @Override\n+            public void close() {\n+                closed.set(true);\n+            }\n+        };\n         try (XContentGenerator generator = xcontentType().xContent().createGenerator(os)) {\n             generator.writeStartObject();\n             generator.writeFieldName(\"test\");\n             generator.writeRawValue(new BytesArray(rawData).streamInput(), source.type());\n+            assertFalse(closed.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fac16e5796a76cd68a18e182a251647c8eb3a3a1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4NTQ3Ng==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/60625#discussion_r464885476", "createdAt": "2020-08-04T08:26:31Z", "author": {"login": "original-brownbear"}, "path": "server/src/test/java/org/elasticsearch/common/xcontent/BaseXContentTestCase.java", "diffHunk": "@@ -947,11 +948,18 @@ void doTestRawValue(XContent source) throws Exception {\n             assertNull(parser.nextToken());\n         }\n \n-        os = new ByteArrayOutputStream();\n+        final AtomicBoolean closed = new AtomicBoolean(false);\n+        os = new ByteArrayOutputStream() {\n+            @Override\n+            public void close() {\n+                closed.set(true);\n+            }\n+        };\n         try (XContentGenerator generator = xcontentType().xContent().createGenerator(os)) {\n             generator.writeStartObject();\n             generator.writeFieldName(\"test\");\n             generator.writeRawValue(new BytesArray(rawData).streamInput(), source.type());\n+            assertFalse(closed.get());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4NDQxMA=="}, "originalCommit": {"oid": "fac16e5796a76cd68a18e182a251647c8eb3a3a1"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2612, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}