{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzk3MzE1", "number": 53978, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzo1MzoyMlrODqYxNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzo1NjozM1rODqY20A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzcyNTk4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/internal/ExitableDirectoryReader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzo1MzoyMlrOF6GZrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzo1MzoyMlrOF6GZrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2NjYwNA==", "bodyText": "I don't think we should throttle this. We don't have enough evidence that it's slowing down the request so I'd keep it as is for now.", "url": "https://github.com/elastic/elasticsearch/pull/53978#discussion_r396466604", "createdAt": "2020-03-23T13:53:22Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/internal/ExitableDirectoryReader.java", "diffHunk": "@@ -276,7 +276,7 @@ public void visit(int docID, byte[] packedValue) throws IOException {\n \n         @Override\n         public PointValues.Relation compare(byte[] minPackedValue, byte[] maxPackedValue) {\n-            queryCancellation.checkCancelled();\n+            checkAndThrowWithSampling();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "828ca8a13796219890be46aa914061ada0a106e6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1Nzc0MDMyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzo1NjozM1rOF6GivA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDowMTo1MlrOF6Gxkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2ODkyNA==", "bodyText": "We use the cancellable  even if the low level cancellation is set to false (query timeout option and bulk scorer) so we should never set the cancellable to null ?", "url": "https://github.com/elastic/elasticsearch/pull/53978#discussion_r396468924", "createdAt": "2020-03-23T13:56:33Z", "author": {"login": "jimczi"}, "path": "server/src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java", "diffHunk": "@@ -82,18 +82,14 @@\n     private MutableQueryTimeout cancellable;\n \n     public ContextIndexSearcher(IndexReader reader, Similarity similarity,\n-                                QueryCache queryCache, QueryCachingPolicy queryCachingPolicy) throws IOException {\n-        this(reader, similarity, queryCache, queryCachingPolicy, new MutableQueryTimeout());\n+                                QueryCache queryCache, QueryCachingPolicy queryCachingPolicy,\n+                                boolean wrapWithExitableDirReader) throws IOException {\n+        this(reader, similarity, queryCache, queryCachingPolicy, wrapWithExitableDirReader ? new MutableQueryTimeout() : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "828ca8a13796219890be46aa914061ada0a106e6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3MjcyMw==", "bodyText": "Yep, sure, I just pushed it to check some other compilation stuff. it's not ready yet, but thx!", "url": "https://github.com/elastic/elasticsearch/pull/53978#discussion_r396472723", "createdAt": "2020-03-23T14:01:52Z", "author": {"login": "matriv"}, "path": "server/src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java", "diffHunk": "@@ -82,18 +82,14 @@\n     private MutableQueryTimeout cancellable;\n \n     public ContextIndexSearcher(IndexReader reader, Similarity similarity,\n-                                QueryCache queryCache, QueryCachingPolicy queryCachingPolicy) throws IOException {\n-        this(reader, similarity, queryCache, queryCachingPolicy, new MutableQueryTimeout());\n+                                QueryCache queryCache, QueryCachingPolicy queryCachingPolicy,\n+                                boolean wrapWithExitableDirReader) throws IOException {\n+        this(reader, similarity, queryCache, queryCachingPolicy, wrapWithExitableDirReader ? new MutableQueryTimeout() : null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2ODkyNA=="}, "originalCommit": {"oid": "828ca8a13796219890be46aa914061ada0a106e6"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4210, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}