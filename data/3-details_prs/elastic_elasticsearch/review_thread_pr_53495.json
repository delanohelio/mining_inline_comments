{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MzUzMjkz", "number": 53495, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjowMzozN1rODnzwCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjowNDozMlrODnzw5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDY4OTM3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/Pattern.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjowMzozN1rOF2BOCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzo0Nzo0NlrOF2EReA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4NzQwMQ==", "bodyText": "Maybe RegexPattern", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392187401", "createdAt": "2020-03-13T12:03:37Z", "author": {"login": "costin"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/Pattern.java", "diffHunk": "@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ql.expression.predicate.regex;\n+\n+interface Pattern {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68503774af987746eb6945165b5417931f793a12"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIxMTkyMw==", "bodyText": "I'm not sure, the LikePattern is not 100% regex pattern.", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392211923", "createdAt": "2020-03-13T13:00:06Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/Pattern.java", "diffHunk": "@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ql.expression.predicate.regex;\n+\n+interface Pattern {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4NzQwMQ=="}, "originalCommit": {"oid": "68503774af987746eb6945165b5417931f793a12"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIxMjEwNA==", "bodyText": "How about StringMatchPattern?", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392212104", "createdAt": "2020-03-13T13:00:27Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/Pattern.java", "diffHunk": "@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ql.expression.predicate.regex;\n+\n+interface Pattern {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4NzQwMQ=="}, "originalCommit": {"oid": "68503774af987746eb6945165b5417931f793a12"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyMDg1Ng==", "bodyText": "Why not StringPattern ?", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392220856", "createdAt": "2020-03-13T13:17:52Z", "author": {"login": "costin"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/Pattern.java", "diffHunk": "@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ql.expression.predicate.regex;\n+\n+interface Pattern {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4NzQwMQ=="}, "originalCommit": {"oid": "68503774af987746eb6945165b5417931f793a12"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIzNzQzMg==", "bodyText": "sure that too!", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392237432", "createdAt": "2020-03-13T13:47:46Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/Pattern.java", "diffHunk": "@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ql.expression.predicate.regex;\n+\n+interface Pattern {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4NzQwMQ=="}, "originalCommit": {"oid": "68503774af987746eb6945165b5417931f793a12"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDY5MTU4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/RegexMatch.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjowNDozMlrOF2BPeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjowNDozMlrOF2BPeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4Nzc2OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392187768", "createdAt": "2020-03-13T12:04:32Z", "author": {"login": "costin"}, "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/RegexMatch.java", "diffHunk": "@@ -54,8 +58,30 @@ public boolean foldable() {\n         // right() is not directly foldable in any context but Like can fold it.\n         return field().foldable();\n     }\n-    \n+\n+    @Override\n+    public Boolean fold() {\n+        Object val = field().fold();\n+        return RegexProcessor.RegexOperation.match(val, pattern().asJavaRegex());\n+    }\n+\n     @Override\n+    protected Processor makeProcessor() {\n+        return new RegexProcessor(pattern().asJavaRegex());\n+    }\n+\n+    @Override\n+    public ScriptTemplate asScript() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68503774af987746eb6945165b5417931f793a12"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3335, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}