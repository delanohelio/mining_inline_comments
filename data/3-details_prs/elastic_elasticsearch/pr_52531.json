{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MzMwNDMx", "number": 52531, "title": "[ML][Inference] Add support for multi-value leaves to the tree model", "bodyText": "This adds support for multi-value leaves. This is a prerequisite for multi-class boosted tree classification.\nOne hitch in BWC is when there is a decision tree model with multi-value support, but it is serialized to a node that does not support multi-values in the leaves. I opted to throw in that situation instead of potentially losing information over the wire.", "createdAt": "2020-02-19T18:45:49Z", "url": "https://github.com/elastic/elasticsearch/pull/52531", "merged": true, "mergeCommit": {"oid": "e39eade20d6a43850e464ab521625d5ae817ed07"}, "closed": true, "closedAt": "2020-02-27T17:17:05Z", "author": {"login": "benwtrent"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF7DM8AH2gAyMzc3MzMwNDMxOjM0ZmEyYTA5NTdkNmMzNjMxMzU4NmEzMDM4YmY0NmVjYjk2OGQzMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIbeoLAFqTM2NTY4NTI2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "34fa2a0957d6c36313586a3038bf46ecb968d337", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/34fa2a0957d6c36313586a3038bf46ecb968d337", "committedDate": "2020-02-19T18:43:36Z", "message": "[ML][Inference] Add support for multi-value leaves to the tree model"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTI0Mjgz", "url": "https://github.com/elastic/elasticsearch/pull/52531#pullrequestreview-361924283", "createdAt": "2020-02-20T14:03:54Z", "commit": {"oid": "34fa2a0957d6c36313586a3038bf46ecb968d337"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDowMzo1NFrOFsUfaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDowMzo1NFrOFsUfaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxNzM4NQ==", "bodyText": "This isn't quite right: we turn the set of values into a collection of predicted probabilities via the softmax function, i.e. the i'th predicted probability is exp(values[i]) / sum_j{ exp(values[j]) }. I think it is also worthwhile dividing through by k = exp(max_j{ values[j] }) to handle the case the exp overflows: whence exp(values[i] - k) / sum_j{ (exp(values[j] - k)) }.", "url": "https://github.com/elastic/elasticsearch/pull/52531#discussion_r382017385", "createdAt": "2020-02-20T14:03:54Z", "author": {"login": "tveasey"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/ensemble/LogisticRegression.java", "diffHunk": "@@ -78,31 +78,29 @@ public Integer expectedValueSize() {\n     }\n \n     @Override\n-    public List<Double> processValues(List<Double> values) {\n+    public double[] processValues(double[][] values) {\n         Objects.requireNonNull(values, \"values must not be null\");\n-        if (weights != null && values.size() != weights.length) {\n+        assert values[0].length == 1;\n+        if (weights != null && values.length != weights.length) {\n             throw new IllegalArgumentException(\"values must be the same length as weights.\");\n         }\n         double summation = weights == null ?\n-            values.stream().mapToDouble(Double::valueOf).sum() :\n-            IntStream.range(0, weights.length).mapToDouble(i -> values.get(i) * weights[i]).sum();\n+            Arrays.stream(values).mapToDouble(vs -> vs[0]).sum() :\n+            IntStream.range(0, weights.length).mapToDouble(i -> values[i][0] * weights[i]).sum();\n         double probOfClassOne = sigmoid(summation);\n         assert 0.0 <= probOfClassOne && probOfClassOne <= 1.0;\n-        return Arrays.asList(1.0 - probOfClassOne, probOfClassOne);\n+        return new double[] {1.0 - probOfClassOne, probOfClassOne};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34fa2a0957d6c36313586a3038bf46ecb968d337"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c702a56ee797c19f96220c83b9f4efca687803e", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/9c702a56ee797c19f96220c83b9f4efca687803e", "committedDate": "2020-02-20T15:43:32Z", "message": "updating logistic regression to be multinomial"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f3611eb3a332befb77f3d63ca53d1d721cd780f", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/9f3611eb3a332befb77f3d63ca53d1d721cd780f", "committedDate": "2020-02-24T13:07:40Z", "message": "Merge branch 'master' into feature/ml-inference-multi-value-leaves"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MDYxMTUw", "url": "https://github.com/elastic/elasticsearch/pull/52531#pullrequestreview-365061150", "createdAt": "2020-02-26T16:42:01Z", "commit": {"oid": "9f3611eb3a332befb77f3d63ca53d1d721cd780f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNjo0MjowMlrOFuzS-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNjo0MjowMlrOFuzS-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYxOTI1Nw==", "bodyText": "I am not sure about this.  To what extent does it cause a problem for the receiving node?  Could it cause problems for the reading of a subsequent wire transfer?  I don't know the serialisation code well enough to say whether this is OK or not.\nAlso, would it make sense to an end user who saw it?  I guess they'd see a remote transport exception from a 7.6 coordinating node wrapping this exception.  But which endpoint would they have called?  Would leaf_value make sense to somebody who had called that endpoint?\nFinally, maybe we can defend against this at an earlier stage by banning creation of multi-class classification jobs until all nodes in the cluster are on version 7.7.", "url": "https://github.com/elastic/elasticsearch/pull/52531#discussion_r384619257", "createdAt": "2020-02-26T16:42:02Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/tree/TreeNode.java", "diffHunk": "@@ -190,7 +196,18 @@ public void writeTo(StreamOutput out) throws IOException {\n         out.writeInt(splitFeature);\n         out.writeDouble(splitGain);\n         out.writeVInt(nodeIndex);\n-        out.writeDouble(leafValue);\n+        if (out.getVersion().onOrAfter(Version.V_7_7_0)) {\n+            out.writeDoubleArray(leafValue);\n+        } else {\n+            if (leafValue.length > 1) {\n+                throw new IOException(\"[leaf_value] only supports multiple values after version 7.7.0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f3611eb3a332befb77f3d63ca53d1d721cd780f"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf4dcef29a6b285913b8af2f0010a906277ae110", "author": {"user": {"login": "benwtrent", "name": "Benjamin Trent"}}, "url": "https://github.com/elastic/elasticsearch/commit/bf4dcef29a6b285913b8af2f0010a906277ae110", "committedDate": "2020-02-26T20:16:34Z", "message": "protecting against incompatibility, making error bettter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Njg1MjY2", "url": "https://github.com/elastic/elasticsearch/pull/52531#pullrequestreview-365685266", "createdAt": "2020-02-27T13:38:22Z", "commit": {"oid": "bf4dcef29a6b285913b8af2f0010a906277ae110"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2187, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}