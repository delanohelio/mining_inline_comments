{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NjQwMjc5", "number": 53288, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowMjo1OFrODmVdFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzoxNzo1NFrODmxyuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTIzOTg5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowMjo1OFrOFzsZig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowMjo1OFrOFzsZig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0OTEzMA==", "bodyText": "Again, we haven't released this so this break is ok.", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r389749130", "createdAt": "2020-03-09T15:02:58Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java", "diffHunk": "@@ -217,14 +218,14 @@ TopMetric topMetric() {\n         TopMetric(StreamInput in) throws IOException {\n             sortFormat = in.readNamedWriteable(DocValueFormat.class);\n             sortValue = in.readNamedWriteable(SortValue.class);\n-            metricValues = in.readDoubleArray();\n+            metricValues = in.readList(s -> s.readOptionalWriteable(MetricValue::new));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7d18ff5e1ddbe8ccbdf317e65d69a90cbaff4b"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODgyNjM4OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzoyNzoyNlrOF0OrRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDozNjoxMFrOF0Rs9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMxMDcyNw==", "bodyText": "I'm aware it is odd to have a \"SortValue\" be part of a MetricValue. It is a very convenient way to send a type-aware thing across the wire though.", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390310727", "createdAt": "2020-03-10T13:27:26Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java", "diffHunk": "@@ -269,17 +274,74 @@ public boolean equals(Object obj) {\n             TopMetric other = (TopMetric) obj;\n             return sortFormat.equals(other.sortFormat)\n                     && sortValue.equals(other.sortValue)\n-                    && Arrays.equals(metricValues, other.metricValues);\n+                    && metricValues.equals(other.metricValues);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(sortFormat, sortValue, Arrays.hashCode(metricValues));\n+            return Objects.hash(sortFormat, sortValue, metricValues);\n         }\n \n         @Override\n         public String toString() {\n-            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + Arrays.toString(metricValues) + \"]\"; \n+            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + metricValues + \"]\"; \n+        }\n+    }\n+\n+    static class MetricValue implements Writeable, ToXContent {\n+        private final DocValueFormat format; \n+        private final SortValue value;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a323f8799a8839d4582b8725f4c02e0bff3a87b"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzNDQ3Mw==", "bodyText": "I think this would be better as an inline comment than a PR comment.", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390334473", "createdAt": "2020-03-10T14:02:07Z", "author": {"login": "not-napoleon"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java", "diffHunk": "@@ -269,17 +274,74 @@ public boolean equals(Object obj) {\n             TopMetric other = (TopMetric) obj;\n             return sortFormat.equals(other.sortFormat)\n                     && sortValue.equals(other.sortValue)\n-                    && Arrays.equals(metricValues, other.metricValues);\n+                    && metricValues.equals(other.metricValues);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(sortFormat, sortValue, Arrays.hashCode(metricValues));\n+            return Objects.hash(sortFormat, sortValue, metricValues);\n         }\n \n         @Override\n         public String toString() {\n-            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + Arrays.toString(metricValues) + \"]\"; \n+            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + metricValues + \"]\"; \n+        }\n+    }\n+\n+    static class MetricValue implements Writeable, ToXContent {\n+        private final DocValueFormat format; \n+        private final SortValue value;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMxMDcyNw=="}, "originalCommit": {"oid": "7a323f8799a8839d4582b8725f4c02e0bff3a87b"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM2MDMxMQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390360311", "createdAt": "2020-03-10T14:36:10Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java", "diffHunk": "@@ -269,17 +274,74 @@ public boolean equals(Object obj) {\n             TopMetric other = (TopMetric) obj;\n             return sortFormat.equals(other.sortFormat)\n                     && sortValue.equals(other.sortValue)\n-                    && Arrays.equals(metricValues, other.metricValues);\n+                    && metricValues.equals(other.metricValues);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(sortFormat, sortValue, Arrays.hashCode(metricValues));\n+            return Objects.hash(sortFormat, sortValue, metricValues);\n         }\n \n         @Override\n         public String toString() {\n-            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + Arrays.toString(metricValues) + \"]\"; \n+            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + metricValues + \"]\"; \n+        }\n+    }\n+\n+    static class MetricValue implements Writeable, ToXContent {\n+        private final DocValueFormat format; \n+        private final SortValue value;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMxMDcyNw=="}, "originalCommit": {"oid": "7a323f8799a8839d4582b8725f4c02e0bff3a87b"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTAwMTkwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDowNzo0NVrOF0QX3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDowNzo0NVrOF0QX3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzODUyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return format + \",\" + value;\n          \n          \n            \n                        return \"MetricValue(\" + format + \",\" + value + \")\";\n          \n      \n    \n    \n  \n\nPet peeve of mine, unless we have a good reason not to, we should include the class name in the toString.  I've gotten burned by this a few times trying to write exception messages.", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390338527", "createdAt": "2020-03-10T14:07:45Z", "author": {"login": "not-napoleon"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java", "diffHunk": "@@ -269,17 +274,74 @@ public boolean equals(Object obj) {\n             TopMetric other = (TopMetric) obj;\n             return sortFormat.equals(other.sortFormat)\n                     && sortValue.equals(other.sortValue)\n-                    && Arrays.equals(metricValues, other.metricValues);\n+                    && metricValues.equals(other.metricValues);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(sortFormat, sortValue, Arrays.hashCode(metricValues));\n+            return Objects.hash(sortFormat, sortValue, metricValues);\n         }\n \n         @Override\n         public String toString() {\n-            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + Arrays.toString(metricValues) + \"]\"; \n+            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + metricValues + \"]\"; \n+        }\n+    }\n+\n+    static class MetricValue implements Writeable, ToXContent {\n+        private final DocValueFormat format; \n+        private final SortValue value;\n+\n+        MetricValue(DocValueFormat format, SortValue value) {\n+            this.format = format;\n+            this.value = value;\n+        }\n+\n+        DocValueFormat getFormat() {\n+            return format;\n+        }\n+\n+        SortValue getValue() {\n+            return value;\n+        }\n+\n+        MetricValue(StreamInput in) throws IOException {\n+            format = in.readNamedWriteable(DocValueFormat.class);\n+            value = in.readNamedWriteable(SortValue.class);\n+        }\n+\n+        Number numberValue() {\n+            return value.numberValue();\n+        }\n+\n+        @Override\n+        public void writeTo(StreamOutput out) throws IOException {\n+            out.writeNamedWriteable(format);\n+            out.writeNamedWriteable(value);\n+        }\n+\n+        @Override\n+        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n+            return value.toXContent(builder, format);\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return format + \",\" + value;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a323f8799a8839d4582b8725f4c02e0bff3a87b"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTEwMzE3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/TopMetricsAggregator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDoyODo1OVrOF0RXIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDoyODo1OVrOF0RXIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1NDcyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * that we can steel from the longs to represent missing that\n          \n          \n            \n                     * that we can steal from the longs to represent missing that", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390354723", "createdAt": "2020-03-10T14:28:59Z", "author": {"login": "not-napoleon"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/TopMetricsAggregator.java", "diffHunk": "@@ -249,12 +325,93 @@ public void close() {\n             values.close();\n         }\n     }\n-    private static class MissingMetricValues implements MetricValues {\n+\n+    /**\n+     * Loads metrics for whole numbers.\n+     */\n+    static class LongMetricValues extends CollectingMetricValues {\n+        /**\n+         * Tracks \"missing\" values in a {@link BitArray}. Unlike\n+         * {@link DoubleMetricValues}, we there isn't a sentinel value\n+         * that we can steel from the longs to represent missing that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a323f8799a8839d4582b8725f4c02e0bff3a87b"}, "originalPosition": 287}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTg4MjgwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/TopMetricsAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzoxNzo1NFrOF0Y_BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzozNjo1N1rOF1Bs1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3OTYyMA==", "bodyText": "Should we put an info blurb somewhere in the docs that multi-valued fields will be averaged together?", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390479620", "createdAt": "2020-03-10T17:17:54Z", "author": {"login": "polyfractal"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/TopMetricsAggregator.java", "diffHunk": "@@ -234,12 +309,13 @@ public void swap(long lhs, long rhs) {\n         @Override\n         public Loader loader(LeafReaderContext ctx) throws IOException {\n             // TODO allow configuration of value mode", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1448e7d0dd991d19862653b60b09ad6aa3f90d8b"}, "originalPosition": 261}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE0NjcwOA==", "bodyText": "Probably! I'd planned to give the docs another pass in the next PR.", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r391146708", "createdAt": "2020-03-11T17:36:57Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/TopMetricsAggregator.java", "diffHunk": "@@ -234,12 +309,13 @@ public void swap(long lhs, long rhs) {\n         @Override\n         public Loader loader(LeafReaderContext ctx) throws IOException {\n             // TODO allow configuration of value mode", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3OTYyMA=="}, "originalCommit": {"oid": "1448e7d0dd991d19862653b60b09ad6aa3f90d8b"}, "originalPosition": 261}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3365, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}