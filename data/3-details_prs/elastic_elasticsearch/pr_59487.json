{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTkxMzEx", "number": 59487, "title": "Separate coordinating and primary bytes in stats", "bodyText": "Currently we combine coordinating and primary bytes into a single bucket\nfor indexing pressure stats. This makes sense for rejection logic.\nHowever, for metrics it would be useful to separate them.", "createdAt": "2020-07-14T01:37:56Z", "url": "https://github.com/elastic/elasticsearch/pull/59487", "merged": true, "mergeCommit": {"oid": "aa14860597e49b9b5e521385868fb2c7efa126c1"}, "closed": true, "closedAt": "2020-07-14T18:22:43Z", "author": {"login": "tbrooks8"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0r2oYAH2gAyNDQ4NTkxMzExOjU0MzgyMWM0YWQzZDRlZDA1MmViMTc5OGYzMmY1ZGE4M2ZlM2QyOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc04rqRgH2gAyNDQ4NTkxMzExOjg1ODMwNmQyODA5NmNkYmM2NGY4MWE1MjU2NTVmZWQ3YTAzMDU2YjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "543821c4ad3d4ed052eb1798f32f5da83fe3d292", "author": {"user": {"login": "tbrooks8", "name": "Tim Brooks"}}, "url": "https://github.com/elastic/elasticsearch/commit/543821c4ad3d4ed052eb1798f32f5da83fe3d292", "committedDate": "2020-07-14T01:35:44Z", "message": "Separate coordinating and primary bytes in stats\n\nCurrently we combine coordinating and primary bytes into a single bucket\nfor indexing pressure stats. This makes sense for rejection logic.\nHowever, for metrics it would be useful to separate them."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3OTI3NDcx", "url": "https://github.com/elastic/elasticsearch/pull/59487#pullrequestreview-447927471", "createdAt": "2020-07-14T09:09:09Z", "commit": {"oid": "543821c4ad3d4ed052eb1798f32f5da83fe3d292"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTowOTowOVrOGxLExQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTo0Mzo1MVrOGxMSqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIxNDg1Mw==", "bodyText": "It this necessary? ReroutePhase is an AbstractRunnable so should be fine", "url": "https://github.com/elastic/elasticsearch/pull/59487#discussion_r454214853", "createdAt": "2020-07-14T09:09:09Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java", "diffHunk": "@@ -179,7 +179,15 @@ protected TransportReplicationAction(Settings settings, String actionName, Trans\n     @Override\n     protected void doExecute(Task task, Request request, ActionListener<Response> listener) {\n         assert request.shardId() != null : \"request shardId must be set\";\n-        new ReroutePhase((ReplicationTask) task, request, listener).run();\n+        runReroutePhase(task, request, listener, true);\n+    }\n+\n+    private void runReroutePhase(Task task, Request request, ActionListener<Response> listener, boolean executedByClient) {\n+        try {\n+            new ReroutePhase((ReplicationTask) task, request, listener, executedByClient).run();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "543821c4ad3d4ed052eb1798f32f5da83fe3d292"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIxNjM0Nw==", "bodyText": "add a comment here?", "url": "https://github.com/elastic/elasticsearch/pull/59487#discussion_r454216347", "createdAt": "2020-07-14T09:11:45Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java", "diffHunk": "@@ -1103,25 +1119,29 @@ public void markShardCopyAsStaleIfNeeded(ShardId shardId, String allocationId, l\n         private final R request;\n         // Indicates if this primary shard request originated by a reroute on this local node.\n         private final boolean sentFromLocalReroute;\n+        private final boolean localRerouteInitiatedByNodeClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "543821c4ad3d4ed052eb1798f32f5da83fe3d292"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIzMjgyNw==", "bodyText": "I prefer the initiatedByNodeClient  naming here with a comment explaining why  we have  that boolean", "url": "https://github.com/elastic/elasticsearch/pull/59487#discussion_r454232827", "createdAt": "2020-07-14T09:40:22Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java", "diffHunk": "@@ -658,12 +667,18 @@ private IndexShard getIndexShard(final ShardId shardId) {\n     final class ReroutePhase extends AbstractRunnable {\n         private final ActionListener<Response> listener;\n         private final Request request;\n+        private final boolean executedByClient;\n         private final ReplicationTask task;\n         private final ClusterStateObserver observer;\n         private final AtomicBoolean finished = new AtomicBoolean();\n \n         ReroutePhase(ReplicationTask task, Request request, ActionListener<Response> listener) {\n+            this(task, request, listener, false);\n+        }\n+\n+        ReroutePhase(ReplicationTask task, Request request, ActionListener<Response> listener, boolean executedByClient) {\n             this.request = request;\n+            this.executedByClient = executedByClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "543821c4ad3d4ed052eb1798f32f5da83fe3d292"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIzNDAyOA==", "bodyText": "can we also assert (similar  to sentFromLocalReroute) that localRerouteInitiatedByNodeClient is never false when being serialized in writeTo?", "url": "https://github.com/elastic/elasticsearch/pull/59487#discussion_r454234028", "createdAt": "2020-07-14T09:42:26Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java", "diffHunk": "@@ -1103,25 +1119,29 @@ public void markShardCopyAsStaleIfNeeded(ShardId shardId, String allocationId, l\n         private final R request;\n         // Indicates if this primary shard request originated by a reroute on this local node.\n         private final boolean sentFromLocalReroute;\n+        private final boolean localRerouteInitiatedByNodeClient;\n \n         public ConcreteShardRequest(Writeable.Reader<R> requestReader, StreamInput in) throws IOException {\n             targetAllocationID = in.readString();\n             primaryTerm  = in.readVLong();\n             sentFromLocalReroute = false;\n+            localRerouteInitiatedByNodeClient = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "543821c4ad3d4ed052eb1798f32f5da83fe3d292"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIzNDc5NA==", "bodyText": "maybe mention that this is the case during primary delegation, after the primary relocation handoff.", "url": "https://github.com/elastic/elasticsearch/pull/59487#discussion_r454234794", "createdAt": "2020-07-14T09:43:51Z", "author": {"login": "ywelsch"}, "path": "server/src/main/java/org/elasticsearch/action/support/replication/TransportWriteAction.java", "diffHunk": "@@ -80,17 +80,22 @@ protected TransportWriteAction(Settings settings, String actionName, TransportSe\n \n     @Override\n     protected Releasable checkOperationLimits(Request request) {\n-        return indexingPressure.markIndexingOperationStarted(primaryOperationSize(request), forceExecution);\n+        return indexingPressure.markPrimaryOperationStarted(primaryOperationSize(request), forceExecution);\n     }\n \n     @Override\n-    protected Releasable checkPrimaryLimits(Request request, boolean rerouteWasLocal) {\n-        // If this primary request was submitted by a reroute performed on this local node, we have already\n-        // accounted the bytes.\n+    protected Releasable checkPrimaryLimits(Request request, boolean rerouteWasLocal, boolean localRerouteInitiatedByNodeClient) {\n         if (rerouteWasLocal) {\n-            return () -> {};\n+            // If this primary request was received from a local reroute initiated by the node client, we\n+            // must mark a new primary operation local to the coordinating node.\n+            if (localRerouteInitiatedByNodeClient) {\n+                return indexingPressure.markPrimaryOperationLocalToCoordinatingNodeStarted(primaryOperationSize(request));\n+            } else {\n+                return () -> {};\n+            }\n         } else {\n-            return indexingPressure.markIndexingOperationStarted(primaryOperationSize(request), forceExecution);\n+            // If this primary request was received directly from the network, we must mark a new primary operation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "543821c4ad3d4ed052eb1798f32f5da83fe3d292"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e6610dba23b45334ecc9e5826cb11ab5aa4db9d", "author": {"user": {"login": "tbrooks8", "name": "Tim Brooks"}}, "url": "https://github.com/elastic/elasticsearch/commit/5e6610dba23b45334ecc9e5826cb11ab5aa4db9d", "committedDate": "2020-07-14T15:02:44Z", "message": "Merge remote-tracking branch 'upstream/master' into dedicated_coordinating_buckets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2815343f5ca11103cb1afc08265161664f51178a", "author": {"user": {"login": "tbrooks8", "name": "Tim Brooks"}}, "url": "https://github.com/elastic/elasticsearch/commit/2815343f5ca11103cb1afc08265161664f51178a", "committedDate": "2020-07-14T15:12:07Z", "message": "Changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MjExMjYy", "url": "https://github.com/elastic/elasticsearch/pull/59487#pullrequestreview-448211262", "createdAt": "2020-07-14T15:21:11Z", "commit": {"oid": "2815343f5ca11103cb1afc08265161664f51178a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffe752fa564fed3dda7664fb3b2f122ca8f7c004", "author": {"user": {"login": "tbrooks8", "name": "Tim Brooks"}}, "url": "https://github.com/elastic/elasticsearch/commit/ffe752fa564fed3dda7664fb3b2f122ca8f7c004", "committedDate": "2020-07-14T16:05:23Z", "message": "Rejections field name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "858306d28096cdbc64f81a525655fed7a03056b4", "author": {"user": {"login": "tbrooks8", "name": "Tim Brooks"}}, "url": "https://github.com/elastic/elasticsearch/commit/858306d28096cdbc64f81a525655fed7a03056b4", "committedDate": "2020-07-14T16:32:31Z", "message": "Merge remote-tracking branch 'upstream/master' into dedicated_coordinating_buckets"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4452, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}