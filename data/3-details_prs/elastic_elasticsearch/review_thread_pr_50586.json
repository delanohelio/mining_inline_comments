{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4OTI0MzEx", "number": 50586, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxOTo1MzozN1rODWEfjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMDoyMjozMVrODWE5qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NDY4ODc5OnYy", "diffSide": "RIGHT", "path": "modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/HighlighterWithAnalyzersTests.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxOTo1MzozN1rOFanktQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzo0NTo0NFrOFbAzkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ1NTY2OQ==", "bodyText": "To double-check I understand -- we could already remove the mentions to _doc in mapping definitions, but we'll postpone that for another PR? This approach makes sense to me, as it helps keep the current PR focused.", "url": "https://github.com/elastic/elasticsearch/pull/50586#discussion_r363455669", "createdAt": "2020-01-06T19:53:37Z", "author": {"login": "jtibshirani"}, "path": "modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/HighlighterWithAnalyzersTests.java", "diffHunk": "@@ -57,9 +57,9 @@\n \n     public void testNgramHighlightingWithBrokenPositions() throws IOException {\n         assertAcked(prepareCreate(\"test\")\n-                .addMapping(\"test\", jsonBuilder()\n+                .setMapping(jsonBuilder()\n                         .startObject()\n-                            .startObject(\"test\")\n+                            .startObject(\"_doc\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15152978284f2a79ef348b9ac56be865aa1b5368"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0NjY3MQ==", "bodyText": "That's correct - there's also still a bit of inconsistency as to when things need to be wrapped and when not, which this PR moves us one more step towards resolving.", "url": "https://github.com/elastic/elasticsearch/pull/50586#discussion_r363746671", "createdAt": "2020-01-07T13:28:33Z", "author": {"login": "romseygeek"}, "path": "modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/HighlighterWithAnalyzersTests.java", "diffHunk": "@@ -57,9 +57,9 @@\n \n     public void testNgramHighlightingWithBrokenPositions() throws IOException {\n         assertAcked(prepareCreate(\"test\")\n-                .addMapping(\"test\", jsonBuilder()\n+                .setMapping(jsonBuilder()\n                         .startObject()\n-                            .startObject(\"test\")\n+                            .startObject(\"_doc\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ1NTY2OQ=="}, "originalCommit": {"oid": "15152978284f2a79ef348b9ac56be865aa1b5368"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg2OTA3NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/elasticsearch/pull/50586#discussion_r363869074", "createdAt": "2020-01-07T17:45:44Z", "author": {"login": "jtibshirani"}, "path": "modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/HighlighterWithAnalyzersTests.java", "diffHunk": "@@ -57,9 +57,9 @@\n \n     public void testNgramHighlightingWithBrokenPositions() throws IOException {\n         assertAcked(prepareCreate(\"test\")\n-                .addMapping(\"test\", jsonBuilder()\n+                .setMapping(jsonBuilder()\n                         .startObject()\n-                            .startObject(\"test\")\n+                            .startObject(\"_doc\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ1NTY2OQ=="}, "originalCommit": {"oid": "15152978284f2a79ef348b9ac56be865aa1b5368"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NDc0NTQ4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMDoxNzo1OVrOFaoIyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzozMjo0M1rOFa5bZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ2NDkwNA==", "bodyText": "For consistency with the changes in CreateIndexRequestBuilder, it would be great if we also removed the type parameter from public CreateIndexRequest mapping(String type, Map<String, ?> source), and converted as many callers as possible to use the new signature. Here's a suggestion for how to do it:\n\n    public CreateIndexRequest mapping(Map<String, ?> source) {\n        return mapping(MapperService.SINGLE_MAPPING_NAME, source);\n    }\n\n    private CreateIndexRequest mapping(String type, Map<String, ?> source) {\n        // wrap it in a type map if its not\n        if (source.size() != 1 || !source.containsKey(type)) {\n            source = Map.of(MapperService.SINGLE_MAPPING_NAME, source);\n        }\n        ...\n    }\n\nThe private method is still needed to support CreateIndexRequest#source.", "url": "https://github.com/elastic/elasticsearch/pull/50586#discussion_r363464904", "createdAt": "2020-01-06T20:17:59Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java", "diffHunk": "@@ -255,11 +248,10 @@ public CreateIndexRequest cause(String cause) {\n     /**\n      * Adds mapping that will be added when the index gets created.\n      *\n-     * @param type   The mapping type\n      * @param source The mapping source\n      */\n-    public CreateIndexRequest mapping(String type, XContentBuilder source) {\n-        return mapping(type, BytesReference.bytes(source), source.contentType());\n+    public CreateIndexRequest mapping(XContentBuilder source) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15152978284f2a79ef348b9ac56be865aa1b5368"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0ODE5Nw==", "bodyText": "++", "url": "https://github.com/elastic/elasticsearch/pull/50586#discussion_r363748197", "createdAt": "2020-01-07T13:32:43Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java", "diffHunk": "@@ -255,11 +248,10 @@ public CreateIndexRequest cause(String cause) {\n     /**\n      * Adds mapping that will be added when the index gets created.\n      *\n-     * @param type   The mapping type\n      * @param source The mapping source\n      */\n-    public CreateIndexRequest mapping(String type, XContentBuilder source) {\n-        return mapping(type, BytesReference.bytes(source), source.contentType());\n+    public CreateIndexRequest mapping(XContentBuilder source) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ2NDkwNA=="}, "originalCommit": {"oid": "15152978284f2a79ef348b9ac56be865aa1b5368"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NDc1NTYzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMDoyMjozMVrOFaoPAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzozMjoyOFrOFa5bAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ2NjQ5Ng==", "bodyText": "For context, what's the plan to remove these remaining methods that accept Object... source?", "url": "https://github.com/elastic/elasticsearch/pull/50586#discussion_r363466496", "createdAt": "2020-01-06T20:22:31Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java", "diffHunk": "@@ -291,7 +283,7 @@ else if (MapperService.SINGLE_MAPPING_NAME.equals(type) == false) {\n      * (\"field1\", \"type=string,store=true\").\n      */\n     public CreateIndexRequest mapping(String type, Object... source) {\n-        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source));\n+        mapping(PutMappingRequest.buildFromSimplifiedDef(MapperService.SINGLE_MAPPING_NAME, source));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15152978284f2a79ef348b9ac56be865aa1b5368"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0ODA5Nw==", "bodyText": "My current plan is to have a new method, mappingFromSimplifiedDef(Objects... source), and remove the existing method, to make sure that we get compilation failures rather than silently treating the type parameter as part of the source.", "url": "https://github.com/elastic/elasticsearch/pull/50586#discussion_r363748097", "createdAt": "2020-01-07T13:32:28Z", "author": {"login": "romseygeek"}, "path": "server/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java", "diffHunk": "@@ -291,7 +283,7 @@ else if (MapperService.SINGLE_MAPPING_NAME.equals(type) == false) {\n      * (\"field1\", \"type=string,store=true\").\n      */\n     public CreateIndexRequest mapping(String type, Object... source) {\n-        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source));\n+        mapping(PutMappingRequest.buildFromSimplifiedDef(MapperService.SINGLE_MAPPING_NAME, source));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ2NjQ5Ng=="}, "originalCommit": {"oid": "15152978284f2a79ef348b9ac56be865aa1b5368"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4957, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}