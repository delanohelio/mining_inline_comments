{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjU0MjE3", "number": 57757, "title": "Fix a bug with missing fields in sig_terms", "bodyText": "When you run a significant_terms aggregation on a field and it is\nmapped but there aren't any values for it then the count of the\ndocuments that match the query on that shard still have to be added to\nthe overall doc count. I broke that in #57361. This fixes that.\nCloses #57402", "createdAt": "2020-06-05T18:37:44Z", "url": "https://github.com/elastic/elasticsearch/pull/57757", "merged": true, "mergeCommit": {"oid": "ee0ce8ffaf49d45b12d14955ef1bef60c200c24e"}, "closed": true, "closedAt": "2020-06-08T14:07:14Z", "author": {"login": "nik9000"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoXDgdAH2gAyNDI4NjU0MjE3OmJjYzRmMDJiZDdmNTQ0NjQ4YTUwNjMxMmQxMmFlZTdiZDg1NjIxNzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpQPQFgH2gAyNDI4NjU0MjE3OmMwZTdmNWY4YjNiNTVjZDQ5MTgzYmQ1ZDc0MGVhYWIwYmE0MTQwYjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bcc4f02bd7f544648a506312d12aee7bd8562178", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/bcc4f02bd7f544648a506312d12aee7bd8562178", "committedDate": "2020-06-05T18:34:42Z", "message": "Fix a bug with missing fields in sig_terms\n\nWhen you run a `significant_terms` aggregation on a field and it *is*\nmapped but there aren't any values for it then the count of the\ndocuments that match the query on that shard still have to be added to\nthe overall doc count. I broke that in #57361. This fixes that.\n\nCloses #57402"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NTQwMTI0", "url": "https://github.com/elastic/elasticsearch/pull/57757#pullrequestreview-425540124", "createdAt": "2020-06-05T18:41:47Z", "commit": {"oid": "bcc4f02bd7f544648a506312d12aee7bd8562178"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0MTo0N1rOGf5e5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0Mzo0MlrOGf5iMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwMDgzOA==", "bodyText": "These actually reproduce the issue.", "url": "https://github.com/elastic/elasticsearch/pull/57757#discussion_r436100838", "createdAt": "2020-06-05T18:41:47Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorTests.java", "diffHunk": "@@ -379,6 +387,153 @@ public void testFieldAlias() throws IOException {\n         }\n     }\n \n+    public void testAllDocsWithoutStringFieldviaGlobalOrds() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4f02bd7f544648a506312d12aee7bd8562178"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwMTQ3NQ==", "bodyText": "I thought this would reproduce the issue but it doesn't. It still feels useful to add.", "url": "https://github.com/elastic/elasticsearch/pull/57757#discussion_r436101475", "createdAt": "2020-06-05T18:43:13Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorTests.java", "diffHunk": "@@ -379,6 +387,153 @@ public void testFieldAlias() throws IOException {\n         }\n     }\n \n+    public void testAllDocsWithoutStringFieldviaGlobalOrds() throws IOException {\n+        testAllDocsWithoutStringField(\"global_ordinals\");\n+    }\n+\n+    public void testAllDocsWithoutStringFieldViaMap() throws IOException {\n+        testAllDocsWithoutStringField(\"map\");\n+    }\n+\n+    private void testAllDocsWithoutStringField(String executionHint) throws IOException {\n+        try (Directory dir = newDirectory()) {\n+            try (RandomIndexWriter writer = new RandomIndexWriter(random(), dir)) {\n+                Document d = new Document();\n+                d.add(new SortedDocValuesField(\"f\", new BytesRef(\"f\")));\n+                writer.addDocument(new Document());\n+                try (IndexReader reader = maybeWrapReaderEs(writer.getReader())) {\n+                    IndexSearcher searcher = newIndexSearcher(reader);\n+                    SignificantTermsAggregationBuilder request = new SignificantTermsAggregationBuilder(\"f\").field(\"f\")\n+                        .executionHint(executionHint);\n+                    SignificantStringTerms result = search(searcher, new MatchAllDocsQuery(), request, keywordField(\"f\"));\n+                    assertThat(result.getSubsetSize(), equalTo(1L));\n+                }\n+            }\n+        }\n+    }\n+\n+    public void testAllDocsWithoutNumericField() throws IOException {\n+        try (Directory dir = newDirectory()) {\n+            try (RandomIndexWriter writer = new RandomIndexWriter(random(), dir)) {\n+                Document d = new Document();\n+                writer.addDocument(new Document());\n+                try (IndexReader reader = maybeWrapReaderEs(writer.getReader())) {\n+                    IndexSearcher searcher = newIndexSearcher(reader);\n+                    SignificantTermsAggregationBuilder request = new SignificantTermsAggregationBuilder(\"f\").field(\"f\");\n+                    SignificantLongTerms result = search(searcher, new MatchAllDocsQuery(), request, longField(\"f\"));\n+                    assertThat(result.getSubsetSize(), equalTo(1L));\n+                }\n+            }\n+        }\n+    }\n+\n+    public void testSomeDocsWithoutStringFieldviaGlobalOrds() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4f02bd7f544648a506312d12aee7bd8562178"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwMTU2MQ==", "bodyText": "These are coming in #57758 and I thought they might reproduce the issue so I added them as well. No dice. Either way, they are nice to have.", "url": "https://github.com/elastic/elasticsearch/pull/57757#discussion_r436101561", "createdAt": "2020-06-05T18:43:26Z", "author": {"login": "nik9000"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorTests.java", "diffHunk": "@@ -379,6 +387,153 @@ public void testFieldAlias() throws IOException {\n         }\n     }\n \n+    public void testAllDocsWithoutStringFieldviaGlobalOrds() throws IOException {\n+        testAllDocsWithoutStringField(\"global_ordinals\");\n+    }\n+\n+    public void testAllDocsWithoutStringFieldViaMap() throws IOException {\n+        testAllDocsWithoutStringField(\"map\");\n+    }\n+\n+    private void testAllDocsWithoutStringField(String executionHint) throws IOException {\n+        try (Directory dir = newDirectory()) {\n+            try (RandomIndexWriter writer = new RandomIndexWriter(random(), dir)) {\n+                Document d = new Document();\n+                d.add(new SortedDocValuesField(\"f\", new BytesRef(\"f\")));\n+                writer.addDocument(new Document());\n+                try (IndexReader reader = maybeWrapReaderEs(writer.getReader())) {\n+                    IndexSearcher searcher = newIndexSearcher(reader);\n+                    SignificantTermsAggregationBuilder request = new SignificantTermsAggregationBuilder(\"f\").field(\"f\")\n+                        .executionHint(executionHint);\n+                    SignificantStringTerms result = search(searcher, new MatchAllDocsQuery(), request, keywordField(\"f\"));\n+                    assertThat(result.getSubsetSize(), equalTo(1L));\n+                }\n+            }\n+        }\n+    }\n+\n+    public void testAllDocsWithoutNumericField() throws IOException {\n+        try (Directory dir = newDirectory()) {\n+            try (RandomIndexWriter writer = new RandomIndexWriter(random(), dir)) {\n+                Document d = new Document();\n+                writer.addDocument(new Document());\n+                try (IndexReader reader = maybeWrapReaderEs(writer.getReader())) {\n+                    IndexSearcher searcher = newIndexSearcher(reader);\n+                    SignificantTermsAggregationBuilder request = new SignificantTermsAggregationBuilder(\"f\").field(\"f\");\n+                    SignificantLongTerms result = search(searcher, new MatchAllDocsQuery(), request, longField(\"f\"));\n+                    assertThat(result.getSubsetSize(), equalTo(1L));\n+                }\n+            }\n+        }\n+    }\n+\n+    public void testSomeDocsWithoutStringFieldviaGlobalOrds() throws IOException {\n+        testSomeDocsWithoutStringField(\"global_ordinals\");\n+    }\n+\n+    public void testSomeDocsWithoutStringFieldViaMap() throws IOException {\n+        testSomeDocsWithoutStringField(\"map\");\n+    }\n+\n+    private void testSomeDocsWithoutStringField(String executionHint) throws IOException {\n+        try (Directory dir = newDirectory()) {\n+            try (RandomIndexWriter writer = new RandomIndexWriter(random(), dir)) {\n+                Document d = new Document();\n+                d.add(new SortedDocValuesField(\"f\", new BytesRef(\"f\")));\n+                writer.addDocument(d);\n+                writer.flush();\n+                writer.addDocument(new Document());\n+                try (IndexReader reader = maybeWrapReaderEs(writer.getReader())) {\n+                    IndexSearcher searcher = newIndexSearcher(reader);\n+                    SignificantTermsAggregationBuilder request = new SignificantTermsAggregationBuilder(\"f\").field(\"f\")\n+                        .executionHint(executionHint);\n+                    SignificantStringTerms result = search(searcher, new MatchAllDocsQuery(), request, keywordField(\"f\"));\n+                    assertThat(result.getSubsetSize(), equalTo(2L));\n+                }\n+            }\n+        }\n+    }\n+\n+    public void testSomeDocsWithoutNumericField() throws IOException {\n+        try (Directory dir = newDirectory()) {\n+            try (RandomIndexWriter writer = new RandomIndexWriter(random(), dir)) {\n+                Document d = new Document();\n+                d.add(new SortedNumericDocValuesField(\"f\", 1));\n+                writer.addDocument(d);\n+                writer.addDocument(new Document());\n+                try (IndexReader reader = maybeWrapReaderEs(writer.getReader())) {\n+                    IndexSearcher searcher = newIndexSearcher(reader);\n+                    SignificantTermsAggregationBuilder request = new SignificantTermsAggregationBuilder(\"f\").field(\"f\");\n+                    SignificantLongTerms result = search(searcher, new MatchAllDocsQuery(), request, longField(\"f\"));\n+                    assertThat(result.getSubsetSize(), equalTo(2L));\n+                }\n+            }\n+        }\n+    }\n+\n+    public void testThreeLayerStringViaGlobalOrds() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4f02bd7f544648a506312d12aee7bd8562178"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwMTY4Mg==", "bodyText": "0 bad!", "url": "https://github.com/elastic/elasticsearch/pull/57757#discussion_r436101682", "createdAt": "2020-06-05T18:43:42Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractStringTermsAggregator.java", "diffHunk": "@@ -49,12 +49,12 @@ protected StringTerms buildEmptyTermsAggregation() {\n                 metadata(), format, bucketCountThresholds.getShardSize(), showTermDocCountError, 0, emptyList(), 0);\n     }\n \n-    protected SignificantStringTerms buildEmptySignificantTermsAggregation(SignificanceHeuristic significanceHeuristic) {\n+    protected SignificantStringTerms buildEmptySignificantTermsAggregation(long subsetSize, SignificanceHeuristic significanceHeuristic) {\n         // We need to account for the significance of a miss in our global stats - provide corpus size as context\n         ContextIndexSearcher searcher = context.searcher();\n         IndexReader topReader = searcher.getIndexReader();\n         int supersetSize = topReader.numDocs();\n         return new SignificantStringTerms(name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(),\n-                metadata(), format, 0, supersetSize, significanceHeuristic, emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4f02bd7f544648a506312d12aee7bd8562178"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MjA2NjUw", "url": "https://github.com/elastic/elasticsearch/pull/57757#pullrequestreview-426206650", "createdAt": "2020-06-08T12:57:19Z", "commit": {"oid": "bcc4f02bd7f544648a506312d12aee7bd8562178"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjo1NzoxOVrOGgcWUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzowMzo0MlrOGgcthA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY3MjA4MA==", "bodyText": "This test (or it's mapped/global wrappers, if you'd rather) needs javadoc.  It's not at all clear from the name what path this is intended to exercise.", "url": "https://github.com/elastic/elasticsearch/pull/57757#discussion_r436672080", "createdAt": "2020-06-08T12:57:19Z", "author": {"login": "not-napoleon"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorTests.java", "diffHunk": "@@ -379,6 +387,153 @@ public void testFieldAlias() throws IOException {\n         }\n     }\n \n+    public void testAllDocsWithoutStringFieldviaGlobalOrds() throws IOException {\n+        testAllDocsWithoutStringField(\"global_ordinals\");\n+    }\n+\n+    public void testAllDocsWithoutStringFieldViaMap() throws IOException {\n+        testAllDocsWithoutStringField(\"map\");\n+    }\n+\n+    private void testAllDocsWithoutStringField(String executionHint) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4f02bd7f544648a506312d12aee7bd8562178"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY3Njc1MQ==", "bodyText": "Does d not get added to the index? Why are we even creating this document?", "url": "https://github.com/elastic/elasticsearch/pull/57757#discussion_r436676751", "createdAt": "2020-06-08T13:02:15Z", "author": {"login": "not-napoleon"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorTests.java", "diffHunk": "@@ -379,6 +387,153 @@ public void testFieldAlias() throws IOException {\n         }\n     }\n \n+    public void testAllDocsWithoutStringFieldviaGlobalOrds() throws IOException {\n+        testAllDocsWithoutStringField(\"global_ordinals\");\n+    }\n+\n+    public void testAllDocsWithoutStringFieldViaMap() throws IOException {\n+        testAllDocsWithoutStringField(\"map\");\n+    }\n+\n+    private void testAllDocsWithoutStringField(String executionHint) throws IOException {\n+        try (Directory dir = newDirectory()) {\n+            try (RandomIndexWriter writer = new RandomIndexWriter(random(), dir)) {\n+                Document d = new Document();\n+                d.add(new SortedDocValuesField(\"f\", new BytesRef(\"f\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4f02bd7f544648a506312d12aee7bd8562178"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY3ODAyMA==", "bodyText": "As above, why do we even need this document?", "url": "https://github.com/elastic/elasticsearch/pull/57757#discussion_r436678020", "createdAt": "2020-06-08T13:03:42Z", "author": {"login": "not-napoleon"}, "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorTests.java", "diffHunk": "@@ -379,6 +387,153 @@ public void testFieldAlias() throws IOException {\n         }\n     }\n \n+    public void testAllDocsWithoutStringFieldviaGlobalOrds() throws IOException {\n+        testAllDocsWithoutStringField(\"global_ordinals\");\n+    }\n+\n+    public void testAllDocsWithoutStringFieldViaMap() throws IOException {\n+        testAllDocsWithoutStringField(\"map\");\n+    }\n+\n+    private void testAllDocsWithoutStringField(String executionHint) throws IOException {\n+        try (Directory dir = newDirectory()) {\n+            try (RandomIndexWriter writer = new RandomIndexWriter(random(), dir)) {\n+                Document d = new Document();\n+                d.add(new SortedDocValuesField(\"f\", new BytesRef(\"f\")));\n+                writer.addDocument(new Document());\n+                try (IndexReader reader = maybeWrapReaderEs(writer.getReader())) {\n+                    IndexSearcher searcher = newIndexSearcher(reader);\n+                    SignificantTermsAggregationBuilder request = new SignificantTermsAggregationBuilder(\"f\").field(\"f\")\n+                        .executionHint(executionHint);\n+                    SignificantStringTerms result = search(searcher, new MatchAllDocsQuery(), request, keywordField(\"f\"));\n+                    assertThat(result.getSubsetSize(), equalTo(1L));\n+                }\n+            }\n+        }\n+    }\n+\n+    public void testAllDocsWithoutNumericField() throws IOException {\n+        try (Directory dir = newDirectory()) {\n+            try (RandomIndexWriter writer = new RandomIndexWriter(random(), dir)) {\n+                Document d = new Document();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4f02bd7f544648a506312d12aee7bd8562178"}, "originalPosition": 99}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0e7f5f8b3b55cd49183bd5d740eaab0ba4140b4", "author": {"user": {"login": "nik9000", "name": "Nik Everett"}}, "url": "https://github.com/elastic/elasticsearch/commit/c0e7f5f8b3b55cd49183bd5d740eaab0ba4140b4", "committedDate": "2020-06-08T13:12:07Z", "message": "Cleanup after review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3776, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}