{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMjc4NzI3", "number": 62048, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMToxMDo1MlrOEg5OCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMToyMDowN1rOEg5ZFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTI3MzcwOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/FileStructureUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMToxMDo1MlrOHN7QOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMToxMDo1MlrOHN7QOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2NDM0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                                               boolean needClientTimezone, boolean needNanosecondPrecision) {\n          \n          \n            \n                                                                               boolean needClientTimezone,\n          \n          \n            \n                                                                               boolean needNanosecondPrecision) {", "url": "https://github.com/elastic/elasticsearch/pull/62048#discussion_r484364347", "createdAt": "2020-09-07T11:10:52Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/FileStructureUtils.java", "diffHunk": "@@ -397,13 +398,14 @@ static boolean isMoreLikelyTextThanKeyword(String str) {\n      * @param timestampFormats Timestamp formats to be used for parsing {@code timestampField}.\n      *                         May be <code>null</code> if {@code timestampField} is also <code>null</code>.\n      * @param needClientTimezone Is the timezone of the client supplying data to ingest required to uniquely parse the timestamp?\n+     * @param needNanosecondPrecision Does the timestamp have more than millisecond accuracy?\n      * @return The ingest pipeline definition, or <code>null</code> if none is required.\n      */\n     public static Map<String, Object> makeIngestPipelineDefinition(String grokPattern, Map<String, String> customGrokPatternDefinitions,\n                                                                    Map<String, Object> csvProcessorSettings,\n                                                                    Map<String, Object> mappingsForConversions,\n                                                                    String timestampField, List<String> timestampFormats,\n-                                                                   boolean needClientTimezone) {\n+                                                                   boolean needClientTimezone, boolean needNanosecondPrecision) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80d1da50892bd9f61a2f47030172e4b9365576cc"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTMwMTk3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/TimestampFormatFinder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMToyMDowN1rOHN7hLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOTo1ODoxNVrOHOVv3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2ODY4NA==", "bodyText": "Just double-checking: can there be a quotation inside another quotation?", "url": "https://github.com/elastic/elasticsearch/pull/62048#discussion_r484368684", "createdAt": "2020-09-07T11:20:07Z", "author": {"login": "przemekwitek"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/TimestampFormatFinder.java", "diffHunk": "@@ -1285,6 +1313,38 @@ static boolean requiresTimezoneDependentParsing(String format, String matchedDat\n             }\n         }\n \n+        static boolean matchHasNanosecondPrecision(String format, String matchedDate) {\n+            switch (format) {\n+                case \"ISO8601\":\n+                    Matcher matcher = FRACTIONAL_SECOND_INTERPRETER.matcher(matchedDate);\n+                    return matcher.find() && matcher.group(2).length() > 3;\n+                case \"UNIX_MS\":\n+                case \"UNIX\":\n+                    return false;\n+                case \"TAI64N\":\n+                    return true;\n+                default:\n+                    boolean notQuoted = true;\n+                    int consecutiveSs = 0;\n+                    for (int pos = 0; pos < format.length(); ++pos) {\n+                        char curChar = format.charAt(pos);\n+                        if (curChar == '\\'') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80d1da50892bd9f61a2f47030172e4b9365576cc"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc5ODQzMA==", "bodyText": "A literal ' is specified by two consecutive single quotes - see https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html.  This means that no special logic is needed in this method.  If there is a literal single quote then this method will treat it as an empty literal section, which is technically wrong but achieves the desired effect.\nBut since this is quite subtle I will add a comment to say what is going on.", "url": "https://github.com/elastic/elasticsearch/pull/62048#discussion_r484798430", "createdAt": "2020-09-08T09:58:15Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/TimestampFormatFinder.java", "diffHunk": "@@ -1285,6 +1313,38 @@ static boolean requiresTimezoneDependentParsing(String format, String matchedDat\n             }\n         }\n \n+        static boolean matchHasNanosecondPrecision(String format, String matchedDate) {\n+            switch (format) {\n+                case \"ISO8601\":\n+                    Matcher matcher = FRACTIONAL_SECOND_INTERPRETER.matcher(matchedDate);\n+                    return matcher.find() && matcher.group(2).length() > 3;\n+                case \"UNIX_MS\":\n+                case \"UNIX\":\n+                    return false;\n+                case \"TAI64N\":\n+                    return true;\n+                default:\n+                    boolean notQuoted = true;\n+                    int consecutiveSs = 0;\n+                    for (int pos = 0; pos < format.length(); ++pos) {\n+                        char curChar = format.charAt(pos);\n+                        if (curChar == '\\'') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2ODY4NA=="}, "originalCommit": {"oid": "80d1da50892bd9f61a2f47030172e4b9365576cc"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1639, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}