{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDY0ODk5", "number": 52014, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOToxNTo0OVrODdzLxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOToxNTo0OVrODdzLxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTczODkzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOToxNTo0OVrOFmnDAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOToxNTo0OVrOFmnDAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyOTk1Mg==", "bodyText": "It's not ideal that this is done using contains.  The better solution would be to make Assignments contain a reason number or enum value as well as a text reason.  Then we could check that.  But that's obviously a pretty far-reaching change.  It may be worth waiting until there are more use cases for a reason code so that any implementation can take all the use cases into account.", "url": "https://github.com/elastic/elasticsearch/pull/52014#discussion_r376029952", "createdAt": "2020-02-06T19:15:49Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java", "diffHunk": "@@ -560,7 +561,13 @@ public boolean test(PersistentTasksCustomMetaData.PersistentTask<?> persistentTa\n                         assignment.isAssigned() == false) {\n                     OpenJobAction.JobParams params = (OpenJobAction.JobParams) persistentTask.getParams();\n                     // Assignment has failed on the master node despite passing our \"fast fail\" validation\n-                    exception = makeNoSuitableNodesException(logger, params.getJobId(), assignment.getExplanation());\n+                    if (assignment.equals(AWAITING_UPGRADE)) {\n+                        exception = makeCurrentlyBeingUpgradedException(logger, params.getJobId(), assignment.getExplanation());\n+                    } else if (assignment.getExplanation().contains(\"[\" + EnableAssignmentDecider.ALLOCATION_NONE_EXPLANATION + \"]\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cc2665eef8f8388d98369e9d99b1c6f7a43fc11"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4990, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}