{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MzE5MTg0", "number": 64845, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDoyODoyOVrOE3pT3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoxMDoyMlrOE3sqtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzgzOTY3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathOperationTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDoyODoyOVrOHxHRwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMjo0NDo1M1rOHxLn8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2MTUwNQ==", "bodyText": "Since the assertion values are the same, please put the values in an array and iterate over them:\nList<Number> negative = asList(-42, Long.value(-42), etc...)\nfor (Number number : negative) {\n\tNumber result = MathOperations.SIGN.apply(number);\n    assertEquals(Integer.class, result.getClass());\n    assertEquals(-1, result);\n}\n...", "url": "https://github.com/elastic/elasticsearch/pull/64845#discussion_r521261505", "createdAt": "2020-11-11T10:28:29Z", "author": {"login": "costin"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathOperationTests.java", "diffHunk": "@@ -35,4 +35,25 @@ public void testAbsPreservesType() {\n         assertEquals(42f, MathOperation.ABS.apply(-42f));\n         assertEquals(42d, MathOperation.ABS.apply(-42d));\n     }\n+\n+    public void testSignIntegerType() {\n+        assertEquals(-1, MathOperation.SIGN.apply((byte) -42));\n+        assertEquals( -1, MathOperation.SIGN.apply((short) -42));\n+        assertEquals(-1, MathOperation.SIGN.apply(-42));\n+        assertEquals( -1, MathOperation.SIGN.apply((long) -42));\n+        assertEquals(-1, MathOperation.SIGN.apply(-42.0f));\n+        assertEquals(-1, MathOperation.SIGN.apply(-42.0d));\n+        assertEquals( 1, MathOperation.SIGN.apply((byte) 42));\n+        assertEquals( 1, MathOperation.SIGN.apply((short) 42));\n+        assertEquals(1, MathOperation.SIGN.apply(42));\n+        assertEquals( 1, MathOperation.SIGN.apply((long) 42));\n+        assertEquals(1, MathOperation.SIGN.apply(42.0f));\n+        assertEquals(1, MathOperation.SIGN.apply(42.0d));\n+        assertEquals(0, MathOperation.SIGN.apply((byte) 0));\n+        assertEquals( 0, MathOperation.SIGN.apply((short) 0));\n+        assertEquals(0, MathOperation.SIGN.apply(0));\n+        assertEquals( 0, MathOperation.SIGN.apply((long) 0));\n+        assertEquals(0, MathOperation.SIGN.apply(-0.0f));\n+        assertEquals(0, MathOperation.SIGN.apply(-0.0d));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf16659ac90b72c705577390eaffa327c641431a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMzMjcyMg==", "bodyText": "Has been changed to an iterative way. PTAL.", "url": "https://github.com/elastic/elasticsearch/pull/64845#discussion_r521332722", "createdAt": "2020-11-11T12:44:53Z", "author": {"login": "sourcelliu"}, "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathOperationTests.java", "diffHunk": "@@ -35,4 +35,25 @@ public void testAbsPreservesType() {\n         assertEquals(42f, MathOperation.ABS.apply(-42f));\n         assertEquals(42d, MathOperation.ABS.apply(-42d));\n     }\n+\n+    public void testSignIntegerType() {\n+        assertEquals(-1, MathOperation.SIGN.apply((byte) -42));\n+        assertEquals( -1, MathOperation.SIGN.apply((short) -42));\n+        assertEquals(-1, MathOperation.SIGN.apply(-42));\n+        assertEquals( -1, MathOperation.SIGN.apply((long) -42));\n+        assertEquals(-1, MathOperation.SIGN.apply(-42.0f));\n+        assertEquals(-1, MathOperation.SIGN.apply(-42.0d));\n+        assertEquals( 1, MathOperation.SIGN.apply((byte) 42));\n+        assertEquals( 1, MathOperation.SIGN.apply((short) 42));\n+        assertEquals(1, MathOperation.SIGN.apply(42));\n+        assertEquals( 1, MathOperation.SIGN.apply((long) 42));\n+        assertEquals(1, MathOperation.SIGN.apply(42.0f));\n+        assertEquals(1, MathOperation.SIGN.apply(42.0d));\n+        assertEquals(0, MathOperation.SIGN.apply((byte) 0));\n+        assertEquals( 0, MathOperation.SIGN.apply((short) 0));\n+        assertEquals(0, MathOperation.SIGN.apply(0));\n+        assertEquals( 0, MathOperation.SIGN.apply((long) 0));\n+        assertEquals(0, MathOperation.SIGN.apply(-0.0f));\n+        assertEquals(0, MathOperation.SIGN.apply(-0.0d));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2MTUwNQ=="}, "originalCommit": {"oid": "bf16659ac90b72c705577390eaffa327c641431a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODM4OTAzOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoxMDoxMVrOHxMfNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoxMDoxMVrOHxMfNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM0Njg2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return (int)Math.signum((Double) l);\n          \n          \n            \n                            return (int) Math.signum((Double) l);", "url": "https://github.com/elastic/elasticsearch/pull/64845#discussion_r521346868", "createdAt": "2020-11-11T13:10:11Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "diffHunk": "@@ -77,26 +77,13 @@\n                 Randomness.get().nextDouble(), true),\n         SIGN((Object l) -> {\n             if (l instanceof Double) {\n-                return Math.signum((Double) l);\n+                return (int)Math.signum((Double) l);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893b9ab8123f5f4954989408ef85afebfdd16399"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODM4OTY2OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoxMDoyMlrOHxMfkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoxMDoyMlrOHxMfkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM0Njk2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return (int)Math.signum((Float) l);\n          \n          \n            \n                            return (int) Math.signum((Float) l);", "url": "https://github.com/elastic/elasticsearch/pull/64845#discussion_r521346963", "createdAt": "2020-11-11T13:10:22Z", "author": {"login": "matriv"}, "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "diffHunk": "@@ -77,26 +77,13 @@\n                 Randomness.get().nextDouble(), true),\n         SIGN((Object l) -> {\n             if (l instanceof Double) {\n-                return Math.signum((Double) l);\n+                return (int)Math.signum((Double) l);\n             }\n             if (l instanceof Float) {\n-                return Math.signum((Float) l);\n+                return (int)Math.signum((Float) l);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893b9ab8123f5f4954989408ef85afebfdd16399"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3049, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}