{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMzc5NDQx", "number": 57044, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjowODo1NlrOD-qH2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNTozOTowNlrOD-1WuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDI4NDQyOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjowODo1NlrOGY5M-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODo0Njo0MlrOGY-lFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1NjIxNg==", "bodyText": "I'm wondering why we use a spy here, if we don't verify the calls after?", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r428756216", "createdAt": "2020-05-21T16:08:56Z", "author": {"login": "jtibshirani"}, "path": "server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java", "diffHunk": "@@ -703,6 +703,23 @@ public void testNumericLongOrDateSortOptimization() throws Exception {\n         searchContext.sort(sortAndFormats);\n         QueryPhase.executeInternal(searchContext);\n         assertSortResults(searchContext.queryResult().topDocs().topDocs, (long) numDocs, true);\n+\n+        // 5. Test that sort optimization is NOT run with size 0\n+        {\n+            sortAndFormats = new SortAndFormats(longSort, new DocValueFormat[]{DocValueFormat.RAW});\n+            searchContext = spy(new TestSearchContext(null, indexShard, newContextSearcher(reader)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23b152d48b5e38319a0f18fa9f9a2ffa7ba9b386"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0MjU2MA==", "bodyText": "@jtibshirani Thanks for the review.  I am using spy here to wrap an instance of searchContext for it to return a fake mapperService on the following line of 711.   Since we don't have a real node here,  I had to create a fake MapperService on line 646.", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r428842560", "createdAt": "2020-05-21T18:43:20Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java", "diffHunk": "@@ -703,6 +703,23 @@ public void testNumericLongOrDateSortOptimization() throws Exception {\n         searchContext.sort(sortAndFormats);\n         QueryPhase.executeInternal(searchContext);\n         assertSortResults(searchContext.queryResult().topDocs().topDocs, (long) numDocs, true);\n+\n+        // 5. Test that sort optimization is NOT run with size 0\n+        {\n+            sortAndFormats = new SortAndFormats(longSort, new DocValueFormat[]{DocValueFormat.RAW});\n+            searchContext = spy(new TestSearchContext(null, indexShard, newContextSearcher(reader)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1NjIxNg=="}, "originalCommit": {"oid": "23b152d48b5e38319a0f18fa9f9a2ffa7ba9b386"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0NDMxMA==", "bodyText": "Got it, thanks.", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r428844310", "createdAt": "2020-05-21T18:46:42Z", "author": {"login": "jtibshirani"}, "path": "server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java", "diffHunk": "@@ -703,6 +703,23 @@ public void testNumericLongOrDateSortOptimization() throws Exception {\n         searchContext.sort(sortAndFormats);\n         QueryPhase.executeInternal(searchContext);\n         assertSortResults(searchContext.queryResult().topDocs().topDocs, (long) numDocs, true);\n+\n+        // 5. Test that sort optimization is NOT run with size 0\n+        {\n+            sortAndFormats = new SortAndFormats(longSort, new DocValueFormat[]{DocValueFormat.RAW});\n+            searchContext = spy(new TestSearchContext(null, indexShard, newContextSearcher(reader)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1NjIxNg=="}, "originalCommit": {"oid": "23b152d48b5e38319a0f18fa9f9a2ffa7ba9b386"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjEyNDczOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/query/QueryPhase.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNTozOTowNlrOGZLQKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxOToyNDoxMVrOGbZ9Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MTk0Nw==", "bodyText": "What if 'size' is 0 but 'from' is not, can this case uses sort optimization?  if it can, changing this place to \"from + size\" may be much better.\nFeel free about this, just an advice :P", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r429051947", "createdAt": "2020-05-22T05:39:06Z", "author": {"login": "yyff"}, "path": "server/src/main/java/org/elasticsearch/search/query/QueryPhase.java", "diffHunk": "@@ -244,7 +244,7 @@ static boolean executeInternal(SearchContext searchContext) throws QueryPhaseExe\n \n             CheckedConsumer<List<LeafReaderContext>, IOException> leafSorter = l -> {};\n             // try to rewrite numeric or date sort to the optimized distanceFeatureQuery\n-            if ((searchContext.sort() != null) && SYS_PROP_REWRITE_SORT) {\n+            if ((searchContext.sort() != null) && (searchContext.size() > 0) && SYS_PROP_REWRITE_SORT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23b152d48b5e38319a0f18fa9f9a2ffa7ba9b386"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYwNDUzNg==", "bodyText": "@yyff thanks for pointing this out! It seems unusual to perform a search with from: n, size: 0, but I do agree it's more consistent to check 'num hits' (which is from + size) instead of just size. @mayya-sharipova what are your thoughts on adjusting this?", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r430604536", "createdAt": "2020-05-26T18:00:53Z", "author": {"login": "jtibshirani"}, "path": "server/src/main/java/org/elasticsearch/search/query/QueryPhase.java", "diffHunk": "@@ -244,7 +244,7 @@ static boolean executeInternal(SearchContext searchContext) throws QueryPhaseExe\n \n             CheckedConsumer<List<LeafReaderContext>, IOException> leafSorter = l -> {};\n             // try to rewrite numeric or date sort to the optimized distanceFeatureQuery\n-            if ((searchContext.sort() != null) && SYS_PROP_REWRITE_SORT) {\n+            if ((searchContext.sort() != null) && (searchContext.size() > 0) && SYS_PROP_REWRITE_SORT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MTk0Nw=="}, "originalCommit": {"oid": "23b152d48b5e38319a0f18fa9f9a2ffa7ba9b386"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM4OTk3NQ==", "bodyText": "@yyff @jtibshirani Thanks for commenting.  I have addressed this in #57250", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r431389975", "createdAt": "2020-05-27T19:24:11Z", "author": {"login": "mayya-sharipova"}, "path": "server/src/main/java/org/elasticsearch/search/query/QueryPhase.java", "diffHunk": "@@ -244,7 +244,7 @@ static boolean executeInternal(SearchContext searchContext) throws QueryPhaseExe\n \n             CheckedConsumer<List<LeafReaderContext>, IOException> leafSorter = l -> {};\n             // try to rewrite numeric or date sort to the optimized distanceFeatureQuery\n-            if ((searchContext.sort() != null) && SYS_PROP_REWRITE_SORT) {\n+            if ((searchContext.sort() != null) && (searchContext.size() > 0) && SYS_PROP_REWRITE_SORT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MTk0Nw=="}, "originalCommit": {"oid": "23b152d48b5e38319a0f18fa9f9a2ffa7ba9b386"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 284, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}