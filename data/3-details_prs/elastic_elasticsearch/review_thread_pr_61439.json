{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxODA0MDU3", "number": 61439, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMzoyNToyM1rOEbJ44w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMzoyNToyM1rOEbJ44w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTA5MDI3OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMzoyNToyM1rOHFAPWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxOTowMTowOFrOHFyYTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwODg1Nw==", "bodyText": "I'm confused why we are duplicating this logic. It seems to me that the PrecommitPlugin should be there only to create the task, the individual plugins like the java plugin, should add the java specific stuff there.", "url": "https://github.com/elastic/elasticsearch/pull/61439#discussion_r475008857", "createdAt": "2020-08-21T23:25:23Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -72,7 +72,18 @@ public void apply(Project project) {\n                     p -> project.getTasks().named(LifecycleBasePlugin.CHECK_TASK_NAME).configure(t -> t.dependsOn(precommit))\n                 );\n             project.getPluginManager()\n-                .withPlugin(\"java\", p -> project.getTasks().withType(Test.class).configureEach(t -> t.mustRunAfter(precommit)));\n+                .withPlugin(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa1aafc7d945f16a2de5e9837631eac3da952fd4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAxMTg2MA==", "bodyText": "There isn't any task to add, these are the existing compilation tasks. In the past, we have relied on things like checkstyle to trigger compilation so that it is part of precommit. This makes it explicit, so that precommit for java plugins always triggers compilation, even if there are zero other precommit tasks. Currently if applying elasticsearch.java, no precommit task is created, since we haven't agreed on any being applicable to all java projects like tests. This change makes sure we have that task for all java plugins.", "url": "https://github.com/elastic/elasticsearch/pull/61439#discussion_r475011860", "createdAt": "2020-08-21T23:39:55Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -72,7 +72,18 @@ public void apply(Project project) {\n                     p -> project.getTasks().named(LifecycleBasePlugin.CHECK_TASK_NAME).configure(t -> t.dependsOn(precommit))\n                 );\n             project.getPluginManager()\n-                .withPlugin(\"java\", p -> project.getTasks().withType(Test.class).configureEach(t -> t.mustRunAfter(precommit)));\n+                .withPlugin(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwODg1Nw=="}, "originalCommit": {"oid": "aa1aafc7d945f16a2de5e9837631eac3da952fd4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5NzI5NQ==", "bodyText": "I still don't quite understand the need for the separate PrecommitTaskPlugin. How does it differ from the PrecommitPlugin which also applies it? Couldn't we must move that logic up into the PrecommitPlugin and use that across the board?", "url": "https://github.com/elastic/elasticsearch/pull/61439#discussion_r475697295", "createdAt": "2020-08-24T15:24:18Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -72,7 +72,18 @@ public void apply(Project project) {\n                     p -> project.getTasks().named(LifecycleBasePlugin.CHECK_TASK_NAME).configure(t -> t.dependsOn(precommit))\n                 );\n             project.getPluginManager()\n-                .withPlugin(\"java\", p -> project.getTasks().withType(Test.class).configureEach(t -> t.mustRunAfter(precommit)));\n+                .withPlugin(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwODg1Nw=="}, "originalCommit": {"oid": "aa1aafc7d945f16a2de5e9837631eac3da952fd4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcxMTU4Nw==", "bodyText": "The PrecommitTaskPlugin already existed, and is used to ensure a precommit task exists. PrecommitPlugin is abstract and it's purpose is to make building a task that should be depended on by precommit easy. Here, though, we need to just get the precommit task added. There is no task to create, since they already exist for every java plugin.", "url": "https://github.com/elastic/elasticsearch/pull/61439#discussion_r475711587", "createdAt": "2020-08-24T15:45:07Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -72,7 +72,18 @@ public void apply(Project project) {\n                     p -> project.getTasks().named(LifecycleBasePlugin.CHECK_TASK_NAME).configure(t -> t.dependsOn(precommit))\n                 );\n             project.getPluginManager()\n-                .withPlugin(\"java\", p -> project.getTasks().withType(Test.class).configureEach(t -> t.mustRunAfter(precommit)));\n+                .withPlugin(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwODg1Nw=="}, "originalCommit": {"oid": "aa1aafc7d945f16a2de5e9837631eac3da952fd4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTczNzA0MQ==", "bodyText": "Oh I see, I'm getting confused by the fact that it's an inner class, also the fact that the abstract PrecommitPlugin actually does include some logic order java compilation tasks.\nI'm still not sure the java plugin logic should live in the PrecommitTaskPlugin. If it's purpose is just to create the precommit task then we should limit it there and move that logic to the ElasticsearchJavaPlugin. I'd also extract it as it's own class instead of being an inner class if we expect it to be used by other plugins. I'd probably also rename it to ElasticsearchLifecyclePlugin to comply with the similar convention used in Gradle, and we can add any other lifecycle tasks we create to it in the future.", "url": "https://github.com/elastic/elasticsearch/pull/61439#discussion_r475737041", "createdAt": "2020-08-24T16:24:47Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -72,7 +72,18 @@ public void apply(Project project) {\n                     p -> project.getTasks().named(LifecycleBasePlugin.CHECK_TASK_NAME).configure(t -> t.dependsOn(precommit))\n                 );\n             project.getPluginManager()\n-                .withPlugin(\"java\", p -> project.getTasks().withType(Test.class).configureEach(t -> t.mustRunAfter(precommit)));\n+                .withPlugin(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwODg1Nw=="}, "originalCommit": {"oid": "aa1aafc7d945f16a2de5e9837631eac3da952fd4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc0ODYyMg==", "bodyText": "The existing java plugin ordering is, I think, not possible outside of the current implementation. We make sure that compilation happens before the rest of the precommit tasks. We do that by adding a shoudlRunAfter when the task of each PrecommitPlugin is applied. We would have to iterate over all the dependencies of precommit, instead of applying to each task as it is added, which I'm not sure it possible?", "url": "https://github.com/elastic/elasticsearch/pull/61439#discussion_r475748622", "createdAt": "2020-08-24T16:39:32Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -72,7 +72,18 @@ public void apply(Project project) {\n                     p -> project.getTasks().named(LifecycleBasePlugin.CHECK_TASK_NAME).configure(t -> t.dependsOn(precommit))\n                 );\n             project.getPluginManager()\n-                .withPlugin(\"java\", p -> project.getTasks().withType(Test.class).configureEach(t -> t.mustRunAfter(precommit)));\n+                .withPlugin(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwODg1Nw=="}, "originalCommit": {"oid": "aa1aafc7d945f16a2de5e9837631eac3da952fd4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2MzUwMw==", "bodyText": "Yeah, the ordering stuff would be tricky to strip out, that can likely stay. The only way to do it \"properly\" would be to have all precommit tasks implement some kind of marker interface, then have the Java plugin add the ordering rule but we often create tasks that we don't own the implementation of, so that's not practically feasible.", "url": "https://github.com/elastic/elasticsearch/pull/61439#discussion_r475763503", "createdAt": "2020-08-24T17:04:36Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -72,7 +72,18 @@ public void apply(Project project) {\n                     p -> project.getTasks().named(LifecycleBasePlugin.CHECK_TASK_NAME).configure(t -> t.dependsOn(precommit))\n                 );\n             project.getPluginManager()\n-                .withPlugin(\"java\", p -> project.getTasks().withType(Test.class).configureEach(t -> t.mustRunAfter(precommit)));\n+                .withPlugin(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwODg1Nw=="}, "originalCommit": {"oid": "aa1aafc7d945f16a2de5e9837631eac3da952fd4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgzMDM1MQ==", "bodyText": "I moved the plugin out to its own file in 06016fc", "url": "https://github.com/elastic/elasticsearch/pull/61439#discussion_r475830351", "createdAt": "2020-08-24T19:01:08Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PrecommitPlugin.java", "diffHunk": "@@ -72,7 +72,18 @@ public void apply(Project project) {\n                     p -> project.getTasks().named(LifecycleBasePlugin.CHECK_TASK_NAME).configure(t -> t.dependsOn(precommit))\n                 );\n             project.getPluginManager()\n-                .withPlugin(\"java\", p -> project.getTasks().withType(Test.class).configureEach(t -> t.mustRunAfter(precommit)));\n+                .withPlugin(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwODg1Nw=="}, "originalCommit": {"oid": "aa1aafc7d945f16a2de5e9837631eac3da952fd4"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 788, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}