{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NTc5NDkx", "number": 61113, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTowMjo1OVrOEYZQDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTowMjo1OVrOEYZQDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDE0OTg5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/runtime-fields/qa/rest/src/yamlRestTest/java/org/elasticsearch/xpack/runtimefields/rest/CoreTestsWithRuntimeFieldsIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTowMjo1OVrOHAtN8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDoxNzo1NVrOHBqtoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUwMjg5Nw==", "bodyText": "what is string here? Is it the old field type string from before we had text and keyword?", "url": "https://github.com/elastic/elasticsearch/pull/61113#discussion_r470502897", "createdAt": "2020-08-14T09:02:59Z", "author": {"login": "javanna"}, "path": "x-pack/plugin/runtime-fields/qa/rest/src/yamlRestTest/java/org/elasticsearch/xpack/runtimefields/rest/CoreTestsWithRuntimeFieldsIT.java", "diffHunk": "@@ -173,4 +195,54 @@ private static String painlessToLoadFromSource(String name, String type) {\n         )\n     );\n \n+    private static final ExecutableSection ADD_TEMPLATE = new ExecutableSection() {\n+        @Override\n+        public XContentLocation getLocation() {\n+            return new XContentLocation(-1, -1);\n+        }\n+\n+        @Override\n+        public void execute(ClientYamlTestExecutionContext executionContext) throws IOException {\n+            Map<String, String> params = Map.of(\"name\", \"convert_to_source_only\", \"create\", \"true\");\n+            List<Map<String, Object>> dynamicTemplates = new ArrayList<>();\n+            for (String type : PAINLESS_TO_EMIT.keySet()) {\n+                if (type.equals(\"ip\")) {\n+                    // There isn't a dynamic template to pick up ips. They'll just look like strings.\n+                    continue;\n+                }\n+                Map<String, Object> mapping = Map.ofEntries(\n+                    Map.entry(\"type\", \"runtime_script\"),\n+                    Map.entry(\"runtime_type\", type),\n+                    Map.entry(\"script\", painlessToLoadFromSource(\"{name}\", type))\n+                );\n+                Map<String, Object> body = Map.ofEntries(\n+                    Map.entry(\"match_mapping_type\", type.equals(\"keyword\") ? \"string\" : type),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "509385cd33f20754a8b1f2a7b79206337164855f"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUxMDQzMg==", "bodyText": "I think it is! Dynamic templates mostly uses the types that we use but it uses string instead of text or keyword.", "url": "https://github.com/elastic/elasticsearch/pull/61113#discussion_r471510432", "createdAt": "2020-08-17T14:17:55Z", "author": {"login": "nik9000"}, "path": "x-pack/plugin/runtime-fields/qa/rest/src/yamlRestTest/java/org/elasticsearch/xpack/runtimefields/rest/CoreTestsWithRuntimeFieldsIT.java", "diffHunk": "@@ -173,4 +195,54 @@ private static String painlessToLoadFromSource(String name, String type) {\n         )\n     );\n \n+    private static final ExecutableSection ADD_TEMPLATE = new ExecutableSection() {\n+        @Override\n+        public XContentLocation getLocation() {\n+            return new XContentLocation(-1, -1);\n+        }\n+\n+        @Override\n+        public void execute(ClientYamlTestExecutionContext executionContext) throws IOException {\n+            Map<String, String> params = Map.of(\"name\", \"convert_to_source_only\", \"create\", \"true\");\n+            List<Map<String, Object>> dynamicTemplates = new ArrayList<>();\n+            for (String type : PAINLESS_TO_EMIT.keySet()) {\n+                if (type.equals(\"ip\")) {\n+                    // There isn't a dynamic template to pick up ips. They'll just look like strings.\n+                    continue;\n+                }\n+                Map<String, Object> mapping = Map.ofEntries(\n+                    Map.entry(\"type\", \"runtime_script\"),\n+                    Map.entry(\"runtime_type\", type),\n+                    Map.entry(\"script\", painlessToLoadFromSource(\"{name}\", type))\n+                );\n+                Map<String, Object> body = Map.ofEntries(\n+                    Map.entry(\"match_mapping_type\", type.equals(\"keyword\") ? \"string\" : type),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUwMjg5Nw=="}, "originalCommit": {"oid": "509385cd33f20754a8b1f2a7b79206337164855f"}, "originalPosition": 133}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2489, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}