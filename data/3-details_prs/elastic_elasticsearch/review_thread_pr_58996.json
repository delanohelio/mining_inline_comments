{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzOTE5MDE5", "number": 58996, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo0NzoyMlrOELPWEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo1MTowOFrOELPZ2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjIxMjAxOnYy", "diffSide": "RIGHT", "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/AbstractObjectParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo0NzoyMlrOGsvUlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzo1Njo0MFrOGsxMSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NTg0NA==", "bodyText": "I thought that this wouldn't get called unless it is on a string because of the ValueType.STRING.", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449565844", "createdAt": "2020-07-03T12:47:22Z", "author": {"login": "nik9000"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/AbstractObjectParser.java", "diffHunk": "@@ -222,6 +223,22 @@ public void declareIntOrNull(BiConsumer<Value, Integer> consumer, int nullValue,\n                 field, ValueType.INT_OR_NULL);\n     }\n \n+    /**\n+     * Declare a field of type {@code T} parsed from string and converted to {@code T} using provided function.\n+     * Throws if the next token is not a string.\n+     */\n+    public <T> void declareStringField(BiConsumer<Value, T> consumer, Function<String, T> fromStringFunction, ParseField field) {\n+        declareField(\n+            consumer,\n+            p -> {\n+                if (p.currentToken() == XContentParser.Token.VALUE_STRING) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "965ef9752b1eaec445dc2656bc38aa5605517453"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5NjQ5MQ==", "bodyText": "Indeed, when I passed wrong value type (e.g.: number) to the parser, it failed with:\n  2> org.elasticsearch.common.xcontent.XContentParseException: [1:12] [foo] test doesn't support values of type: VALUE_NUMBER\n        at __randomizedtesting.SeedInfo.seed([FDF3EC059D2820C1:FB42380CBB0B58E0]:0)\n        at org.elasticsearch.common.xcontent.ObjectParser$FieldParser.assertSupports(ObjectParser.java:601)\n        at org.elasticsearch.common.xcontent.ObjectParser.parse(ObjectParser.java:299)\n\ninstead of the exception thrown from inside the lambda.\nUnfortunately, I don't know where this snippet (i.e. if (p.currentToken() == XContentParser.Token.VALUE_STRING)) comes from as it got propagated by copy-pasting many times.\nI've now removed the if block altogether. WDYT?", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449596491", "createdAt": "2020-07-03T13:56:40Z", "author": {"login": "przemekwitek"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/AbstractObjectParser.java", "diffHunk": "@@ -222,6 +223,22 @@ public void declareIntOrNull(BiConsumer<Value, Integer> consumer, int nullValue,\n                 field, ValueType.INT_OR_NULL);\n     }\n \n+    /**\n+     * Declare a field of type {@code T} parsed from string and converted to {@code T} using provided function.\n+     * Throws if the next token is not a string.\n+     */\n+    public <T> void declareStringField(BiConsumer<Value, T> consumer, Function<String, T> fromStringFunction, ParseField field) {\n+        declareField(\n+            consumer,\n+            p -> {\n+                if (p.currentToken() == XContentParser.Token.VALUE_STRING) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NTg0NA=="}, "originalCommit": {"oid": "965ef9752b1eaec445dc2656bc38aa5605517453"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjIxOTgwOnYy", "diffSide": "RIGHT", "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/AbstractObjectParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo1MDozMFrOGsvZmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzo0ODozOVrOGsw9pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NzEyOA==", "bodyText": "Would you be ok renaming to declareString?", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449567128", "createdAt": "2020-07-03T12:50:30Z", "author": {"login": "nik9000"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/AbstractObjectParser.java", "diffHunk": "@@ -222,6 +223,22 @@ public void declareIntOrNull(BiConsumer<Value, Integer> consumer, int nullValue,\n                 field, ValueType.INT_OR_NULL);\n     }\n \n+    /**\n+     * Declare a field of type {@code T} parsed from string and converted to {@code T} using provided function.\n+     * Throws if the next token is not a string.\n+     */\n+    public <T> void declareStringField(BiConsumer<Value, T> consumer, Function<String, T> fromStringFunction, ParseField field) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "965ef9752b1eaec445dc2656bc38aa5605517453"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5Mjc0Mg==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449592742", "createdAt": "2020-07-03T13:48:39Z", "author": {"login": "przemekwitek"}, "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/AbstractObjectParser.java", "diffHunk": "@@ -222,6 +223,22 @@ public void declareIntOrNull(BiConsumer<Value, Integer> consumer, int nullValue,\n                 field, ValueType.INT_OR_NULL);\n     }\n \n+    /**\n+     * Declare a field of type {@code T} parsed from string and converted to {@code T} using provided function.\n+     * Throws if the next token is not a string.\n+     */\n+    public <T> void declareStringField(BiConsumer<Value, T> consumer, Function<String, T> fromStringFunction, ParseField field) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NzEyOA=="}, "originalCommit": {"oid": "965ef9752b1eaec445dc2656bc38aa5605517453"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjIyMTY5OnYy", "diffSide": "RIGHT", "path": "libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo1MTowOFrOGsvavQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzowOTowN1rOGsv5kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NzQyMQ==", "bodyText": "I'd prefer not to have an _ in the method name.", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449567421", "createdAt": "2020-07-03T12:51:08Z", "author": {"login": "nik9000"}, "path": "libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java", "diffHunk": "@@ -338,6 +338,21 @@ public void set(TestEnum value) {\n         assertEquals(s.test, TestEnum.FOO);\n     }\n \n+    public void testDeclareStringField_ParseEnumFromString() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "965ef9752b1eaec445dc2656bc38aa5605517453"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3NTMxMg==", "bodyText": "Done.", "url": "https://github.com/elastic/elasticsearch/pull/58996#discussion_r449575312", "createdAt": "2020-07-03T13:09:07Z", "author": {"login": "przemekwitek"}, "path": "libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java", "diffHunk": "@@ -338,6 +338,21 @@ public void set(TestEnum value) {\n         assertEquals(s.test, TestEnum.FOO);\n     }\n \n+    public void testDeclareStringField_ParseEnumFromString() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NzQyMQ=="}, "originalCommit": {"oid": "965ef9752b1eaec445dc2656bc38aa5605517453"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2013, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}