{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NTQ3MzE1", "number": 65601, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzoxNTo1MVrOE_QXuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzoyMjozMFrOE_QjXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzYzOTYxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/transport/TransportService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzoxNTo1MVrOH83V_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzo0NToyMFrOH84kGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4MzM1Ng==", "bodyText": "NIT: maybe just put the logic in this method in a static { } block below these two constants to make this easier to read in one go?", "url": "https://github.com/elastic/elasticsearch/pull/65601#discussion_r533583356", "createdAt": "2020-12-01T17:15:51Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/TransportService.java", "diffHunk": "@@ -73,10 +75,14 @@\n import java.util.function.Predicate;\n import java.util.function.Supplier;\n \n-public class TransportService extends AbstractLifecycleComponent implements ReportingService<TransportInfo>, TransportMessageListener,\n-    TransportConnectionListener {\n+public class TransportService extends AbstractLifecycleComponent\n+        implements ReportingService<TransportInfo>, TransportMessageListener, TransportConnectionListener {\n+\n     private static final Logger logger = LogManager.getLogger(TransportService.class);\n \n+    private static final String PERMIT_HANDSHAKES_FROM_INCOMPATIBLE_BUILDS_KEY = \"es.unsafely_permit_handshake_from_incompatible_builds\";\n+    private static final boolean PERMIT_HANDSHAKES_FROM_INCOMPATIBLE_BUILDS = getPermitHandshakesFromIncompatibleBuilds();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c565f89d3fb27e8842c180e5b1f2094121fb7173"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwMzM1NQ==", "bodyText": "Ah yeah not sure why I didn't do that. Done in 8132bf3", "url": "https://github.com/elastic/elasticsearch/pull/65601#discussion_r533603355", "createdAt": "2020-12-01T17:45:20Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/transport/TransportService.java", "diffHunk": "@@ -73,10 +75,14 @@\n import java.util.function.Predicate;\n import java.util.function.Supplier;\n \n-public class TransportService extends AbstractLifecycleComponent implements ReportingService<TransportInfo>, TransportMessageListener,\n-    TransportConnectionListener {\n+public class TransportService extends AbstractLifecycleComponent\n+        implements ReportingService<TransportInfo>, TransportMessageListener, TransportConnectionListener {\n+\n     private static final Logger logger = LogManager.getLogger(TransportService.class);\n \n+    private static final String PERMIT_HANDSHAKES_FROM_INCOMPATIBLE_BUILDS_KEY = \"es.unsafely_permit_handshake_from_incompatible_builds\";\n+    private static final boolean PERMIT_HANDSHAKES_FROM_INCOMPATIBLE_BUILDS = getPermitHandshakesFromIncompatibleBuilds();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4MzM1Ng=="}, "originalCommit": {"oid": "c565f89d3fb27e8842c180e5b1f2094121fb7173"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzY2OTQxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/transport/TransportService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzoyMjozMFrOH83ocw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzo0NDowM1rOH84gkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4ODA4Mw==", "bodyText": "NIT: little much to log two messages for one thing? This seems like it's kind of a dev-only option anyway, why bother with the deprecation logger?", "url": "https://github.com/elastic/elasticsearch/pull/65601#discussion_r533588083", "createdAt": "2020-12-01T17:22:30Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/transport/TransportService.java", "diffHunk": "@@ -192,7 +205,14 @@ public TransportService(Settings settings, Transport transport, ThreadPool threa\n             false, false,\n             HandshakeRequest::new,\n             (request, channel, task) -> channel.sendResponse(\n-                new HandshakeResponse(localNode, clusterName, localNode.getVersion())));\n+                new HandshakeResponse(localNode.getVersion(), Build.CURRENT.hash(), localNode, clusterName)));\n+\n+        if (PERMIT_HANDSHAKES_FROM_INCOMPATIBLE_BUILDS) {\n+            logger.warn(\"transport handshakes from incompatible builds are unsafely permitted on this node; remove system property [\" +\n+                    PERMIT_HANDSHAKES_FROM_INCOMPATIBLE_BUILDS_KEY + \"] to resolve this warning\");\n+            DeprecationLogger.getLogger(TransportService.class).deprecate(\"permit_handshake_from_incompatible_builds\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c565f89d3fb27e8842c180e5b1f2094121fb7173"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwMjQ1MA==", "bodyText": "Ehh I worry we'll get people using this, and the two logs are for two separate aspects. Deprecation logs don't go into the main server log (by default at least) but I think this deserves a visible warning whenever it's used.", "url": "https://github.com/elastic/elasticsearch/pull/65601#discussion_r533602450", "createdAt": "2020-12-01T17:44:03Z", "author": {"login": "DaveCTurner"}, "path": "server/src/main/java/org/elasticsearch/transport/TransportService.java", "diffHunk": "@@ -192,7 +205,14 @@ public TransportService(Settings settings, Transport transport, ThreadPool threa\n             false, false,\n             HandshakeRequest::new,\n             (request, channel, task) -> channel.sendResponse(\n-                new HandshakeResponse(localNode, clusterName, localNode.getVersion())));\n+                new HandshakeResponse(localNode.getVersion(), Build.CURRENT.hash(), localNode, clusterName)));\n+\n+        if (PERMIT_HANDSHAKES_FROM_INCOMPATIBLE_BUILDS) {\n+            logger.warn(\"transport handshakes from incompatible builds are unsafely permitted on this node; remove system property [\" +\n+                    PERMIT_HANDSHAKES_FROM_INCOMPATIBLE_BUILDS_KEY + \"] to resolve this warning\");\n+            DeprecationLogger.getLogger(TransportService.class).deprecate(\"permit_handshake_from_incompatible_builds\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4ODA4Mw=="}, "originalCommit": {"oid": "c565f89d3fb27e8842c180e5b1f2094121fb7173"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1991, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}