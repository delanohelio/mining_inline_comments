{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNTAzMTA2", "number": 63546, "title": "Add snapshot shard size based test in DiskThresholdDeciderTests", "bodyText": "This PR adds a test in DiskThresholdDeciderTests that verifies the allocation of a snapshot recovery source based shard in the situation where the snapshot shard size was successfully provided by the SnapshotInfoService introduced in #61906 and when the service failed to provide the size.\nRelates #61906 (review).", "createdAt": "2020-10-12T11:07:29Z", "url": "https://github.com/elastic/elasticsearch/pull/63546", "merged": true, "mergeCommit": {"oid": "3b1f7f47f84ce9d5b7ebaa8f8ad8416d3ca2f787"}, "closed": true, "closedAt": "2020-10-20T08:16:43Z", "author": {"login": "tlrx"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRx2bogH2gAyNTAxNTAzMTA2OmM0MWFiYWM3YjEwMDQ5NWI4MjU0YmJmNWY2NGUxMzQ2NTNlN2RmZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTBWlPAH2gAyNTAxNTAzMTA2OmE3M2ViNWMzMTBiNmMyNTJjNjRlOWFjNTI3YmE5M2EwOWVjYmJlYTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c41abac7b100495b8254bbf5f64e134653e7dfe9", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/c41abac7b100495b8254bbf5f64e134653e7dfe9", "committedDate": "2020-10-12T10:58:45Z", "message": "Add snapshot shard size based test in DiskThresholdDeciderTests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NTg2ODI2", "url": "https://github.com/elastic/elasticsearch/pull/63546#pullrequestreview-509586826", "createdAt": "2020-10-15T16:59:31Z", "commit": {"oid": "c41abac7b100495b8254bbf5f64e134653e7dfe9"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjo1OTozMlrOHiRZlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzowMzowOFrOHiRijA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY5ODcxMQ==", "bodyText": "NIT: no functional impact here, but the first argument is the snapshot name and the second the UUID :)\nI always just use final Snapshot snapshot = new Snapshot(\"_repository\", new SnapshotId(\"_snapshot_name\", UUIDs.randomBase64UUID(random())));", "url": "https://github.com/elastic/elasticsearch/pull/63546#discussion_r505698711", "createdAt": "2020-10-15T16:59:32Z", "author": {"login": "original-brownbear"}, "path": "server/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java", "diffHunk": "@@ -1130,6 +1144,110 @@ public void testWatermarksEnabledForSingleDataNode() {\n                 \" actual free: [20.0%]\"));\n     }\n \n+    public void testDiskThresholdWithSnapshotShardSizes() {\n+        final long shardSizeInBytes = randomBoolean() ? 10L : 50L;\n+        logger.info(\"--> using shard size [{}]\", shardSizeInBytes);\n+\n+        final Settings diskSettings = Settings.builder()\n+            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_THRESHOLD_ENABLED_SETTING.getKey(), true)\n+            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"90%\")\n+            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"95%\")\n+            .build();\n+\n+        final ImmutableOpenMap.Builder<String, DiskUsage> usagesBuilder = ImmutableOpenMap.builder();\n+        usagesBuilder.put(\"node1\", new DiskUsage(\"node1\", \"n1\", \"/dev/null\", 100, 21));  // 79% used\n+        usagesBuilder.put(\"node2\", new DiskUsage(\"node2\", \"n2\", \"/dev/null\", 100, 1)); // 99% used\n+        final ImmutableOpenMap<String, DiskUsage> usages = usagesBuilder.build();\n+        final ClusterInfoService clusterInfoService = () -> new DevNullClusterInfo(usages, usages, ImmutableOpenMap.of());\n+\n+        final AllocationDeciders deciders = new AllocationDeciders(\n+            new HashSet<>(Arrays.asList(\n+                new RestoreInProgressAllocationDecider(),\n+                new SameShardAllocationDecider(\n+                    Settings.EMPTY, new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS)\n+                ),\n+                makeDecider(diskSettings))));\n+\n+        final Snapshot snapshot = new Snapshot(\"_repository\", new SnapshotId(\"_snapshot_uuid\", \"_snapshot_name\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41abac7b100495b8254bbf5f64e134653e7dfe9"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwMTAwNA==", "bodyText": "NIT: I think I would have had an easier time following this test if we had moved this to where it's actually first used after the assertions on the CS we construct below to like:\n        final AtomicReference<SnapshotShardSizeInfo> snapshotShardSizeInfoRef = new AtomicReference<>(SnapshotShardSizeInfo.EMPTY);\n        final AllocationService strategy = new AllocationService(deciders, new TestGatewayAllocator(),\n                new BalancedShardsAllocator(Settings.EMPTY), clusterInfoService, snapshotShardSizeInfoRef::get);\n\n        // reroute triggers snapshot shard size fetching\n        clusterState = strategy.reroute(clusterState, \"reroute\");\n        logShardStates(clusterState);", "url": "https://github.com/elastic/elasticsearch/pull/63546#discussion_r505701004", "createdAt": "2020-10-15T17:03:08Z", "author": {"login": "original-brownbear"}, "path": "server/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java", "diffHunk": "@@ -1130,6 +1144,110 @@ public void testWatermarksEnabledForSingleDataNode() {\n                 \" actual free: [20.0%]\"));\n     }\n \n+    public void testDiskThresholdWithSnapshotShardSizes() {\n+        final long shardSizeInBytes = randomBoolean() ? 10L : 50L;\n+        logger.info(\"--> using shard size [{}]\", shardSizeInBytes);\n+\n+        final Settings diskSettings = Settings.builder()\n+            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_THRESHOLD_ENABLED_SETTING.getKey(), true)\n+            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"90%\")\n+            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"95%\")\n+            .build();\n+\n+        final ImmutableOpenMap.Builder<String, DiskUsage> usagesBuilder = ImmutableOpenMap.builder();\n+        usagesBuilder.put(\"node1\", new DiskUsage(\"node1\", \"n1\", \"/dev/null\", 100, 21));  // 79% used\n+        usagesBuilder.put(\"node2\", new DiskUsage(\"node2\", \"n2\", \"/dev/null\", 100, 1)); // 99% used\n+        final ImmutableOpenMap<String, DiskUsage> usages = usagesBuilder.build();\n+        final ClusterInfoService clusterInfoService = () -> new DevNullClusterInfo(usages, usages, ImmutableOpenMap.of());\n+\n+        final AllocationDeciders deciders = new AllocationDeciders(\n+            new HashSet<>(Arrays.asList(\n+                new RestoreInProgressAllocationDecider(),\n+                new SameShardAllocationDecider(\n+                    Settings.EMPTY, new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS)\n+                ),\n+                makeDecider(diskSettings))));\n+\n+        final Snapshot snapshot = new Snapshot(\"_repository\", new SnapshotId(\"_snapshot_uuid\", \"_snapshot_name\"));\n+        final IndexId indexId = new IndexId(\"_indexid_uuid\", \"_indexid_name\");\n+        final ShardId shardId = new ShardId(new Index(\"test\", IndexMetadata.INDEX_UUID_NA_VALUE), 0);\n+\n+        final AtomicReference<SnapshotShardSizeInfo> snapshotShardSizeInfoRef = new AtomicReference<>(SnapshotShardSizeInfo.EMPTY);\n+        final SnapshotsInfoService snapshotsInfoService = snapshotShardSizeInfoRef::get;\n+\n+        final AllocationService strategy = new AllocationService(deciders, new TestGatewayAllocator(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41abac7b100495b8254bbf5f64e134653e7dfe9"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b806736dd1e5ac14279833954b7d993efe57f3e", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/2b806736dd1e5ac14279833954b7d993efe57f3e", "committedDate": "2020-10-16T07:36:15Z", "message": "feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a73eb5c310b6c252c64e9ac527ba93a09ecbbea1", "author": {"user": {"login": "tlrx", "name": "Tanguy Leroux"}}, "url": "https://github.com/elastic/elasticsearch/commit/a73eb5c310b6c252c64e9ac527ba93a09ecbbea1", "committedDate": "2020-10-16T07:36:22Z", "message": "Merge branch 'master' into add-snapshot-shard-size-test-in-diskthresholddecidertests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4047, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}