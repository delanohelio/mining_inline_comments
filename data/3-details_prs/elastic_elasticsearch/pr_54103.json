{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMDY0MjMx", "number": 54103, "title": "Validate Accept and Content-Type header for compatible API", "bodyText": "Adding validation of Accept And Content-Type headers. The idea is to verify combinations of presence and values of both headers depending if a request has a content, headers are versioned (type/vnd.elasticsearch+subtype;compatible-with) .\nIt also changes the way media type is parsed (previously always assuming application as a type i.e application/json) It should expect different types like text - used in SQL\nNot adding a compatible headers for _cat api. These in order to return a default text do not expect Accept header (Content-type is not needed as content is not present)\nSee #53228 (comment) for more context", "createdAt": "2020-03-24T15:32:32Z", "url": "https://github.com/elastic/elasticsearch/pull/54103", "merged": true, "mergeCommit": {"oid": "3b3da9d6085231b7d0da69a12571d96964a71781"}, "closed": true, "closedAt": "2020-04-20T08:36:08Z", "author": {"login": "pgomulka"}, "timelineItems": {"totalCount": 68, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKqCi1gH2gAyMzkzMDY0MjMxOmE0ZjgwY2FlY2FlY2FmNzdmYzRhZDNhODg4MDI4MTYwZmNhZjE5MmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYnhe2AFqTM5NTc2MDIyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a4f80caecaecaf77fc4ad3a888028160fcaf192e", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a4f80caecaecaf77fc4ad3a888028160fcaf192e", "committedDate": "2020-03-05T11:44:07Z", "message": "rest index action - 283 nofix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c99b81800e544cc45c946f3dad42a167997fd7ca", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/c99b81800e544cc45c946f3dad42a167997fd7ca", "committedDate": "2020-03-06T10:16:50Z", "message": "Index and Get and Infra\n\n1226 tests, 227 failures, 16ignored\n23 / 2 failled in index/*\nfailing\nCompatRestIT. test {yaml=index/70_mix_typeless_typeful/Index call that\nintroduces new field mappings}\nCompatRestIT. test {yaml=index/70_mix_typeless_typeful/Index with\ntypeless API on an index that has types}"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9c0e55319bbc7f2f8ae6522d5347713ad1e406e", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/c9c0e55319bbc7f2f8ae6522d5347713ad1e406e", "committedDate": "2020-03-06T15:19:50Z", "message": "minor tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "258542ee492623977592838f24c9950ead6bbd60", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/258542ee492623977592838f24c9950ead6bbd60", "committedDate": "2020-03-06T18:35:18Z", "message": "compile fixees"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "548fbd902235830bfc0dcf5cba478f0e70f96894", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/548fbd902235830bfc0dcf5cba478f0e70f96894", "committedDate": "2020-03-09T09:54:02Z", "message": "Merge branch 'compat_rest_api' into compat/type-index-get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dbea8a9650e63c2a7938a156639889523097a2f", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/0dbea8a9650e63c2a7938a156639889523097a2f", "committedDate": "2020-03-09T13:07:47Z", "message": "disable testing conventions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cf6bc1ef4a7eeec3134accc607b4a89d34e1ab7", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/4cf6bc1ef4a7eeec3134accc607b4a89d34e1ab7", "committedDate": "2020-03-10T12:40:06Z", "message": "assertions and todo for header fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ac22b1eeb2deb05f63dbd197255e48c927bf0a5", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/3ac22b1eeb2deb05f63dbd197255e48c927bf0a5", "committedDate": "2020-03-10T19:18:17Z", "message": "more tests and cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38721fed27dbb76d6c71832ba5a1add83b3f6f54", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/38721fed27dbb76d6c71832ba5a1add83b3f6f54", "committedDate": "2020-03-11T00:36:12Z", "message": "Merge remote-tracking branch 'upstream/compat_rest_api' into compat/type-index-get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2db19f600d4e9f8572253cd7a155ad9aee7d872", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/f2db19f600d4e9f8572253cd7a155ad9aee7d872", "committedDate": "2020-03-11T00:45:53Z", "message": "introduce a module to house the REST code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b83b4ce8f6da0e244dc670406858d6c98c06e65d", "author": {"user": {"login": "jakelandis", "name": "Jake Landis"}}, "url": "https://github.com/elastic/elasticsearch/commit/b83b4ce8f6da0e244dc670406858d6c98c06e65d", "committedDate": "2020-03-11T02:03:32Z", "message": "fix preCommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf1d340cfce333197afb727afe8821c22071d3e0", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf1d340cfce333197afb727afe8821c22071d3e0", "committedDate": "2020-03-11T08:33:43Z", "message": "Merge pull request #18 from jakelandis/introduce_module\n\nIntroduce module for compat code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c4a02dc991b3de482eb271b0da1cbce5b397071", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/5c4a02dc991b3de482eb271b0da1cbce5b397071", "committedDate": "2020-03-11T09:37:04Z", "message": "move restindex compatible handlers to rest-compatibility module. 228 failing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ef7e1840c9eb391299cfbfedf760f88cde65c0f", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/0ef7e1840c9eb391299cfbfedf760f88cde65c0f", "committedDate": "2020-03-11T18:36:41Z", "message": "moving test classes and compat related code to separate v7 module\n\ncode review follow up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "835ce563ffe8ad47c13cb19d1679f3bf208995dd", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/835ce563ffe8ad47c13cb19d1679f3bf208995dd", "committedDate": "2020-03-13T10:27:25Z", "message": "test class rename and return 400 when compatible header not present"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4402316e351d2738d584cbc128ef09fd55f87ba", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f4402316e351d2738d584cbc128ef09fd55f87ba", "committedDate": "2020-03-13T10:50:33Z", "message": "clean up deprecation warnings and remove use of consumers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84f1ddeef546172bf0eafdf1c879a371ea8e675f", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/84f1ddeef546172bf0eafdf1c879a371ea8e675f", "committedDate": "2020-03-13T12:19:18Z", "message": "v7 compatible actions warnings tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d106d1ba66027268c061875b3aab86f92bb8c690", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/d106d1ba66027268c061875b3aab86f92bb8c690", "committedDate": "2020-03-16T09:59:17Z", "message": "rename tests and enable them"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf61bbddd2ebbb318958f9a1a1064aca79615bd3", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/cf61bbddd2ebbb318958f9a1a1064aca79615bd3", "committedDate": "2020-03-16T10:03:49Z", "message": "rename isV7Compatible method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f00f438b8c66a39938a24fc99b523787229be4c5", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f00f438b8c66a39938a24fc99b523787229be4c5", "committedDate": "2020-03-16T13:53:20Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae1799ff9f5ca11da20105ce5f9f814aa9b61b21", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/ae1799ff9f5ca11da20105ce5f9f814aa9b61b21", "committedDate": "2020-03-16T13:53:33Z", "message": "Merge branch 'master' into compat/type-index-get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0fce895fa6388c05c668c8d56ca3cc93ab24650", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a0fce895fa6388c05c668c8d56ca3cc93ab24650", "committedDate": "2020-03-16T14:42:25Z", "message": "Revert \"Merge branch 'master' into compat/type-index-get\"\n\nThis reverts commit ae1799ff9f5ca11da20105ce5f9f814aa9b61b21, reversing\nchanges made to f00f438b8c66a39938a24fc99b523787229be4c5."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e55744216646a1acd993f144456602bbe414f56", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/7e55744216646a1acd993f144456602bbe414f56", "committedDate": "2020-03-16T14:43:48Z", "message": "Merge branch 'compat_rest_api' into compat/type-index-get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00fe62dbf8cdcd25d592ba971b96049ce511de34", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/00fe62dbf8cdcd25d592ba971b96049ce511de34", "committedDate": "2020-03-16T15:02:26Z", "message": "Revert \"Revert \"Merge branch 'master' into compat/type-index-get\"\"\n\nThis reverts commit a0fce895fa6388c05c668c8d56ca3cc93ab24650."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6f0b9a3b7f611e935558290f7b3e343e8e33b5a", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a6f0b9a3b7f611e935558290f7b3e343e8e33b5a", "committedDate": "2020-03-17T07:57:44Z", "message": "use locale with toLowerCase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eff534736a890668572710498c97741d985463a", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/4eff534736a890668572710498c97741d985463a", "committedDate": "2020-03-17T12:47:34Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d4161cb7bdc9f52e49636a246f742c1a4ab0894", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/2d4161cb7bdc9f52e49636a246f742c1a4ab0894", "committedDate": "2020-03-17T13:23:27Z", "message": "imports and disable integ tests as there are none"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6830f97d740edb9d35b348e9f1e06e538b3584fd", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/6830f97d740edb9d35b348e9f1e06e538b3584fd", "committedDate": "2020-03-17T14:12:07Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "587f84d5711aa153f8b2cbcba7db2ab4a9fbb170", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/587f84d5711aa153f8b2cbcba7db2ab4a9fbb170", "committedDate": "2020-03-24T15:28:51Z", "message": "Use content-type header with compatible api\n\nWhen a request to a compatible api contains a body it will require a\ncontent-type header to also contain a compatible media-type - in a form\napplication/vnd.elasticsearch+json;compatible-with=7\nWhen there is no body - it will not be required.\nAccept header is always required for compatible API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b092f5f1026aac195d5b185672183ac6856f6e8", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/7b092f5f1026aac195d5b185672183ac6856f6e8", "committedDate": "2020-03-24T16:47:10Z", "message": "imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef25920764704d25c6147fdda7bfb3fb70390b64", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/ef25920764704d25c6147fdda7bfb3fb70390b64", "committedDate": "2020-03-25T13:41:35Z", "message": "Merge branch 'compat_rest_api' into compat/headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c2fece81bfc555af9109e2ac10e685373d245ab", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/1c2fece81bfc555af9109e2ac10e685373d245ab", "committedDate": "2020-03-30T08:48:33Z", "message": "Merge branch 'compat_rest_api' into compat/headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2374c20ceb71e2ab5f8fe977579b31cf1a7884c0", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/2374c20ceb71e2ab5f8fe977579b31cf1a7884c0", "committedDate": "2020-04-01T12:12:27Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eeae41f4bf6835d23dde34f706442824e5f98766", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/eeae41f4bf6835d23dde34f706442824e5f98766", "committedDate": "2020-04-01T12:41:40Z", "message": "fix compile test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7d9b2906d23dbe5971f3a56ac95757411ad7beb", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/e7d9b2906d23dbe5971f3a56ac95757411ad7beb", "committedDate": "2020-04-01T12:49:53Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MDUwMzc2", "url": "https://github.com/elastic/elasticsearch/pull/54103#pullrequestreview-386050376", "createdAt": "2020-04-02T01:14:07Z", "commit": {"oid": "e7d9b2906d23dbe5971f3a56ac95757411ad7beb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMToxNDowN1rOF_YDOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMToyMDozMVrOF_YJUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk5ODY0OQ==", "bodyText": "don't think you need the randomFrom", "url": "https://github.com/elastic/elasticsearch/pull/54103#discussion_r401998649", "createdAt": "2020-04-02T01:14:07Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/rest/RestControllerTests.java", "diffHunk": "@@ -640,6 +641,41 @@ public boolean compatibilityRequired() {\n         assertTrue(channel.getSendResponseCalled());\n     }\n \n+    public void testIncorrectCompatibleHandlersDoNotDispatch() {\n+        final byte version = (byte) (Version.CURRENT.major - 1);\n+\n+        final String mimeType = randomFrom(\"application/vnd.elasticsearch+json;compatible-with=\"+version);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7d9b2906d23dbe5971f3a56ac95757411ad7beb"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk5ODg2MA==", "bodyText": "nit: git :)  (I do that all the time!)", "url": "https://github.com/elastic/elasticsearch/pull/54103#discussion_r401998860", "createdAt": "2020-04-02T01:15:01Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/rest/RestControllerTests.java", "diffHunk": "@@ -640,6 +641,41 @@ public boolean compatibilityRequired() {\n         assertTrue(channel.getSendResponseCalled());\n     }\n \n+    public void testIncorrectCompatibleHandlersDoNotDispatch() {\n+        final byte version = (byte) (Version.CURRENT.major - 1);\n+\n+        final String mimeType = randomFrom(\"application/vnd.elasticsearch+json;compatible-with=\"+version);\n+        String content = randomAlphaOfLength((int) Math.round(BREAKER_LIMIT.getBytes() / inFlightRequestsBreaker.getOverhead()));\n+        final List<String> contentTypeHeader = Collections.singletonList(mimeType);\n+\n+        // request to compatible api with body requires a content-type header.\n+        // this one does no have it, making it non compatiblegit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7d9b2906d23dbe5971f3a56ac95757411ad7beb"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAwMDIxMQ==", "bodyText": "doesn't this request have content-type and accept header and a body ? (the body is withContent right?)\nSo with a body, matching accept and content-type headers , shouldn't this be an example of a good request ?", "url": "https://github.com/elastic/elasticsearch/pull/54103#discussion_r402000211", "createdAt": "2020-04-02T01:20:31Z", "author": {"login": "jakelandis"}, "path": "server/src/test/java/org/elasticsearch/rest/RestControllerTests.java", "diffHunk": "@@ -640,6 +641,41 @@ public boolean compatibilityRequired() {\n         assertTrue(channel.getSendResponseCalled());\n     }\n \n+    public void testIncorrectCompatibleHandlersDoNotDispatch() {\n+        final byte version = (byte) (Version.CURRENT.major - 1);\n+\n+        final String mimeType = randomFrom(\"application/vnd.elasticsearch+json;compatible-with=\"+version);\n+        String content = randomAlphaOfLength((int) Math.round(BREAKER_LIMIT.getBytes() / inFlightRequestsBreaker.getOverhead()));\n+        final List<String> contentTypeHeader = Collections.singletonList(mimeType);\n+\n+        // request to compatible api with body requires a content-type header.\n+        // this one does no have it, making it non compatiblegit\n+        FakeRestRequest fakeRestRequest = new FakeRestRequest.Builder(NamedXContentRegistry.EMPTY)\n+            .withContent(new BytesArray(content), RestRequest.parseContentType(contentTypeHeader)).withPath(\"/foo\")\n+            .withHeaders(Map.of(\"Accept\", contentTypeHeader))\n+            .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7d9b2906d23dbe5971f3a56ac95757411ad7beb"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "268bc1c2aedcaa439cccf38971850f04e4e212b5", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/268bc1c2aedcaa439cccf38971850f04e4e212b5", "committedDate": "2020-04-02T12:53:53Z", "message": "rename of mimetype header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15f4be51f6374b4b8088eb8811beed432110fa65", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/15f4be51f6374b4b8088eb8811beed432110fa65", "committedDate": "2020-04-02T13:07:33Z", "message": "additional header test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Njg0ODk0", "url": "https://github.com/elastic/elasticsearch/pull/54103#pullrequestreview-386684894", "createdAt": "2020-04-02T18:22:44Z", "commit": {"oid": "15f4be51f6374b4b8088eb8811beed432110fa65"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "017c804d0992f896376eb00e7870e42cc39855d2", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/017c804d0992f896376eb00e7870e42cc39855d2", "committedDate": "2020-04-03T12:49:33Z", "message": "Merge branch 'compat_rest_api' into compat/headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d975f38ae7e2c776e53cd282fb249cf678a1471", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/3d975f38ae7e2c776e53cd282fb249cf678a1471", "committedDate": "2020-04-06T10:00:25Z", "message": "initial headers validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09ef281814fc9e8ba5503e30a0807450a90c9504", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/09ef281814fc9e8ba5503e30a0807450a90c9504", "committedDate": "2020-04-06T12:00:45Z", "message": "test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf09243419228b9a111b650fdcbf3fde699243fb", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/bf09243419228b9a111b650fdcbf3fde699243fb", "committedDate": "2020-04-06T12:02:00Z", "message": "remove unused testcase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30f1c40432695232e5f8c4dae11c671cdc005e4b", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/30f1c40432695232e5f8c4dae11c671cdc005e4b", "committedDate": "2020-04-06T12:52:34Z", "message": "precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a013a0336f88f71837fe282ec488e97e78065dc6", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a013a0336f88f71837fe282ec488e97e78065dc6", "committedDate": "2020-04-07T10:26:52Z", "message": "headers validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c284342a2195a57d43b3a2f04678f5634212c91", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/6c284342a2195a57d43b3a2f04678f5634212c91", "committedDate": "2020-04-08T13:08:21Z", "message": "273 failing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37d6426665b52cc2eaac65029ac35a3d0daea95c", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/37d6426665b52cc2eaac65029ac35a3d0daea95c", "committedDate": "2020-04-08T16:31:07Z", "message": "*.*"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d57fe78643b6476bc3352e69301c5d494fc098b", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/1d57fe78643b6476bc3352e69301c5d494fc098b", "committedDate": "2020-04-09T06:21:13Z", "message": "precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0662ef35f064417eccaa23e92ecf9b2eea27a48c", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/0662ef35f064417eccaa23e92ecf9b2eea27a48c", "committedDate": "2020-04-09T10:43:38Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86f8bc0e8d3d6f2690edb472e7679dcd073861a1", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/86f8bc0e8d3d6f2690edb472e7679dcd073861a1", "committedDate": "2020-04-09T11:15:00Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2920805e3bec69dd20b5d2eb762f57047ec2720", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/b2920805e3bec69dd20b5d2eb762f57047ec2720", "committedDate": "2020-04-09T11:16:03Z", "message": "Merge branch 'compat_rest_api' into compat/headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4f472dbc22f21b1d7a6f102f273bd1bd08a6f07", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/a4f472dbc22f21b1d7a6f102f273bd1bd08a6f07", "committedDate": "2020-04-09T12:58:49Z", "message": "fix docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb827bcad0e5a93e434763fe59d4822da941471e", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/bb827bcad0e5a93e434763fe59d4822da941471e", "committedDate": "2020-04-09T15:47:48Z", "message": "fix different mimetypes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9a4fbd9dc0b75af2d6c2621f0d3357074aaf81e", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/e9a4fbd9dc0b75af2d6c2621f0d3357074aaf81e", "committedDate": "2020-04-10T07:18:00Z", "message": "support text formats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f876d468105c7b1923c35a488e0977dbe85f2fd5", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/f876d468105c7b1923c35a488e0977dbe85f2fd5", "committedDate": "2020-04-10T07:42:18Z", "message": "do not validate media type correctness"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47fd5cb905e6a6a31968de6025267b22dd7c9cbf", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/47fd5cb905e6a6a31968de6025267b22dd7c9cbf", "committedDate": "2020-04-10T09:36:51Z", "message": "do not allow empty accept header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcb11fddf07df33c24fb05b4d3dc9e47aaa9c5b6", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/bcb11fddf07df33c24fb05b4d3dc9e47aaa9c5b6", "committedDate": "2020-04-10T11:17:56Z", "message": "allow empty accept header"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjU5NzA1", "url": "https://github.com/elastic/elasticsearch/pull/54103#pullrequestreview-392259705", "createdAt": "2020-04-13T16:30:50Z", "commit": {"oid": "bcb11fddf07df33c24fb05b4d3dc9e47aaa9c5b6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjozMDo1MFrOGEsPhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTo1ODoyM1rOGEzJQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU3MjM1OQ==", "bodyText": "This is a bit ambiguous, and probably not a necessary as a static constant.\nCan we add in a method like minimumRestCompatibilityVersion ?", "url": "https://github.com/elastic/elasticsearch/pull/54103#discussion_r407572359", "createdAt": "2020-04-13T16:30:50Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/Version.java", "diffHunk": "@@ -80,6 +80,7 @@\n     public static final Version V_7_8_0 = new Version(7080099, org.apache.lucene.util.Version.LUCENE_8_5_0);\n     public static final Version V_8_0_0 = new Version(8000099, org.apache.lucene.util.Version.LUCENE_8_5_0);\n     public static final Version CURRENT = V_8_0_0;\n+    public static final Version PREVIOUS = V_7_0_0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb11fddf07df33c24fb05b4d3dc9e47aaa9c5b6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzODQyNg==", "bodyText": "can you clean up the this todo abit ? Not sure I follow.", "url": "https://github.com/elastic/elasticsearch/pull/54103#discussion_r407638426", "createdAt": "2020-04-13T18:30:45Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/http/AbstractHttpServerTransport.java", "diffHunk": "@@ -352,6 +352,11 @@ private void handleIncomingRequest(final HttpRequest httpRequest, final HttpChan\n             } catch (final RestRequest.BadParameterException e) {\n                 badRequestCause = ExceptionsHelper.useOrSuppress(badRequestCause, e);\n                 innerRestRequest = RestRequest.requestWithoutParameters(xContentRegistry, httpRequest, httpChannel);\n+            } catch (final RestRequest.CompatibleApiHeadersCombinationException e){\n+                badRequestCause = ExceptionsHelper.useOrSuppress(badRequestCause, e);\n+                //todo // tempting to just rethrow. removing content type is just making this less obvious\n+                throw e;\n+//                innerRestRequest = requestWithoutContentTypeHeader(httpRequest, httpChannel, badRequestCause);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb11fddf07df33c24fb05b4d3dc9e47aaa9c5b6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1NTIwMA==", "bodyText": "Throwing the exception here results in an abrupt termination of the connection (no error code or proper response). Not sure the fix, but we should add a REST test to ensure the error code.", "url": "https://github.com/elastic/elasticsearch/pull/54103#discussion_r407655200", "createdAt": "2020-04-13T19:00:59Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/rest/RestRequest.java", "diffHunk": "@@ -132,29 +134,91 @@ void ensureSafeBuffers() {\n     public static RestRequest request(NamedXContentRegistry xContentRegistry, HttpRequest httpRequest, HttpChannel httpChannel) {\n         Map<String, String> params = params(httpRequest.uri());\n         String path = path(httpRequest.uri());\n-        RestRequest restRequest = new RestRequest(xContentRegistry, params, path, httpRequest.getHeaders(), httpRequest, httpChannel,\n+        return new RestRequest(xContentRegistry, params, path, httpRequest.getHeaders(), httpRequest, httpChannel,\n             requestIdGenerator.incrementAndGet());\n-        return restRequest;\n     }\n \n     private void addCompatibleParameter() {\n-        if (isRequestCompatible()) {\n-            String compatibleVersion = XContentType.parseVersion(header(CompatibleConstants.COMPATIBLE_HEADER));\n-            params().put(CompatibleConstants.COMPATIBLE_PARAMS_KEY, compatibleVersion);\n+        Version compatible = compatibleWithVersion();\n+        if (Version.PREVIOUS.equals(compatible)) {\n+            params().put(CompatibleConstants.COMPATIBLE_PARAMS_KEY, String.valueOf(compatible.major));\n             //use it so it won't fail request validation with unused parameter\n             param(CompatibleConstants.COMPATIBLE_PARAMS_KEY);\n         }\n     }\n \n-    private boolean isRequestCompatible() {\n-        return isHeaderCompatible(header(CompatibleConstants.COMPATIBLE_HEADER));\n-    }\n+    private Version compatibleWithVersion() {\n+        String currentVersion = String.valueOf(Version.CURRENT.major);\n+        String previousVersion = String.valueOf(Version.CURRENT.major - 1);\n \n-    private boolean isHeaderCompatible(String headerValue) {\n-        String version = XContentType.parseVersion(headerValue);\n-        return CompatibleConstants.COMPATIBLE_VERSION.equals(version);\n-    }\n+        String acceptHeader = header(CompatibleConstants.COMPATIBLE_ACCEPT_HEADER);\n+        String acceptVersion = XContentType.parseVersion(acceptHeader);\n+        String contentTypeHeader = header(CompatibleConstants.COMPATIBLE_CONTENT_TYPE_HEADER);\n+        String contentTypeVersion = XContentType.parseVersion(contentTypeHeader);\n+\n+        //TODO not sure about this one as this does not cover text formats\n+        boolean isSupportedMediaTypeAccept = acceptHeader == null || XContentType.parseMediaType(acceptHeader) != null;\n \n+        boolean isSupportedMediaTypeContentType = contentTypeHeader == null || XContentType.parseMediaType(contentTypeHeader) != null;\n+\n+        if (hasContent()) {\n+            //both headers versioned\n+            if (acceptVersion != null && contentTypeVersion != null) {\n+                // both Accept and Content-Type are versioned and set to a previous version\n+                if (previousVersion.equals(acceptVersion) && previousVersion.equals(contentTypeVersion)) {\n+                    return Version.PREVIOUS;\n+                }\n+                // both Accept and Content-Type are versioned to a current version\n+                if (currentVersion.equals(acceptVersion) && currentVersion.equals(contentTypeVersion)) {\n+                    return Version.CURRENT;\n+                }\n+                // both headers are versioned but set to incorrect version\n+                throw new CompatibleApiHeadersCombinationException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb11fddf07df33c24fb05b4d3dc9e47aaa9c5b6"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY4NTQ0Mg==", "bodyText": "I think this can be greatly simplified and read easier if this returns a boolean and only concerns itself with the version (not the supported media types (that can happen later if need be)).\nI think something like this below the same level of validation.\n    private void addCompatibleParameter() {\n        if (isRequestingCompatibility()) {\n            params().put(CompatibleConstants.COMPATIBLE_PARAMS_KEY, String.valueOf(Version.CURRENT.major - 1));\n            param(CompatibleConstants.COMPATIBLE_PARAMS_KEY);\n        }\n    }\n\n    private boolean isRequestingCompatibility() {\n        String acceptHeader = header(CompatibleConstants.COMPATIBLE_ACCEPT_HEADER);\n        String aVersion = XContentType.parseVersion(acceptHeader);\n        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n        String contentTypeHeader = header(CompatibleConstants.COMPATIBLE_CONTENT_TYPE_HEADER);\n        String cVersion = XContentType.parseVersion(contentTypeHeader);\n        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n\n        if(Version.CURRENT.major < acceptVersion || Version.CURRENT.major - acceptVersion > 1 ){\n            throw new IllegalStateException(\"something about only 1 major version support\");\n        }\n\n        if (hasContent()) {\n            if(Version.CURRENT.major < contentTypeVersion || Version.CURRENT.major - contentTypeVersion > 1 ){\n                throw new IllegalStateException(\"something about only 1 major version support\");\n            }\n\n            if (contentTypeVersion != acceptVersion) {\n                throw new IllegalStateException(\"something about needing to match\");\n            }\n        }\n\n        return contentTypeVersion < Version.CURRENT.major || acceptVersion < Version.CURRENT.major;\n    }", "url": "https://github.com/elastic/elasticsearch/pull/54103#discussion_r407685442", "createdAt": "2020-04-13T19:58:23Z", "author": {"login": "jakelandis"}, "path": "server/src/main/java/org/elasticsearch/rest/RestRequest.java", "diffHunk": "@@ -132,29 +134,91 @@ void ensureSafeBuffers() {\n     public static RestRequest request(NamedXContentRegistry xContentRegistry, HttpRequest httpRequest, HttpChannel httpChannel) {\n         Map<String, String> params = params(httpRequest.uri());\n         String path = path(httpRequest.uri());\n-        RestRequest restRequest = new RestRequest(xContentRegistry, params, path, httpRequest.getHeaders(), httpRequest, httpChannel,\n+        return new RestRequest(xContentRegistry, params, path, httpRequest.getHeaders(), httpRequest, httpChannel,\n             requestIdGenerator.incrementAndGet());\n-        return restRequest;\n     }\n \n     private void addCompatibleParameter() {\n-        if (isRequestCompatible()) {\n-            String compatibleVersion = XContentType.parseVersion(header(CompatibleConstants.COMPATIBLE_HEADER));\n-            params().put(CompatibleConstants.COMPATIBLE_PARAMS_KEY, compatibleVersion);\n+        Version compatible = compatibleWithVersion();\n+        if (Version.PREVIOUS.equals(compatible)) {\n+            params().put(CompatibleConstants.COMPATIBLE_PARAMS_KEY, String.valueOf(compatible.major));\n             //use it so it won't fail request validation with unused parameter\n             param(CompatibleConstants.COMPATIBLE_PARAMS_KEY);\n         }\n     }\n \n-    private boolean isRequestCompatible() {\n-        return isHeaderCompatible(header(CompatibleConstants.COMPATIBLE_HEADER));\n-    }\n+    private Version compatibleWithVersion() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb11fddf07df33c24fb05b4d3dc9e47aaa9c5b6"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "225a00ba2e4fc9f824da555444d2fbab04c046e0", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/225a00ba2e4fc9f824da555444d2fbab04c046e0", "committedDate": "2020-04-14T14:32:50Z", "message": "exception propagation to user"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebaa7c9b9c1ef60db2029b61d46e4728f7383c78", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/ebaa7c9b9c1ef60db2029b61d46e4728f7383c78", "committedDate": "2020-04-14T18:16:01Z", "message": "check which tests fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c96bd86797902623faeabf3e073497411d8cbd33", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/c96bd86797902623faeabf3e073497411d8cbd33", "committedDate": "2020-04-15T08:40:37Z", "message": "fix netty test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10e8d1bf5ddaf664927d22e3d27de779a3fc46c5", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/10e8d1bf5ddaf664927d22e3d27de779a3fc46c5", "committedDate": "2020-04-15T15:49:07Z", "message": "refactor test to be using hamcrest style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NDAxNjk5", "url": "https://github.com/elastic/elasticsearch/pull/54103#pullrequestreview-394401699", "createdAt": "2020-04-16T08:19:45Z", "commit": {"oid": "10e8d1bf5ddaf664927d22e3d27de779a3fc46c5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODoxOTo0NVrOGGZ8Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODoxOTo0NVrOGGZ8Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2OTYwMw==", "bodyText": "how much details do we want on this exception?\nat the moment it helped debugging tests when seeing which failed validation", "url": "https://github.com/elastic/elasticsearch/pull/54103#discussion_r409369603", "createdAt": "2020-04-16T08:19:45Z", "author": {"login": "pgomulka"}, "path": "modules/transport-netty4/src/test/java/org/elasticsearch/rest/Netty4BadRequestIT.java", "diffHunk": "@@ -101,4 +101,27 @@ public void testInvalidHeaderValue() throws IOException {\n         assertThat(map.get(\"type\"), equalTo(\"content_type_header_exception\"));\n         assertThat(map.get(\"reason\"), equalTo(\"java.lang.IllegalArgumentException: invalid Content-Type header []\"));\n     }\n+\n+    public void testInvalidHeaderCombinations() throws IOException {\n+        final Request request = new Request(\"GET\", \"/_cluster/settings\");\n+        final RequestOptions.Builder options = request.getOptions().toBuilder();\n+        options.addHeader(\"Content-Type\", \"application/vnd.elasticsearch+json;compatible-with=7\");\n+        options.addHeader(\"Accept\", \"application/vnd.elasticsearch+json;compatible-with=8\");\n+        request.setOptions(options);\n+        request.setJsonEntity(\"{\\\"transient\\\":{\\\"search.*\\\":null}}\");\n+\n+        final ResponseException e = expectThrows(ResponseException.class, () -> client().performRequest(request));\n+        final Response response = e.getResponse();\n+        assertThat(response.getStatusLine().getStatusCode(), equalTo(400));\n+        final ObjectPath objectPath = ObjectPath.createFromResponse(response);\n+        final Map<String, Object> map = objectPath.evaluate(\"error\");\n+        assertThat(map.get(\"type\"), equalTo(\"compatible_api_headers_combination_exception\"));\n+        assertThat(map.get(\"reason\"), equalTo(\"Content-Type and Accept headers have to match when content is present. \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10e8d1bf5ddaf664927d22e3d27de779a3fc46c5"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NDMwMDI1", "url": "https://github.com/elastic/elasticsearch/pull/54103#pullrequestreview-394430025", "createdAt": "2020-04-16T08:55:32Z", "commit": {"oid": "10e8d1bf5ddaf664927d22e3d27de779a3fc46c5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODo1NTozMlrOGGbWUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODo1NTozMlrOGGbWUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5MjcyMQ==", "bodyText": "we have tests that need Accept header to be empty - expecting text response\nmaybe we should extend XContentType to text\nbut then again, we don't expect content-type to be text, and adding text there would allow this", "url": "https://github.com/elastic/elasticsearch/pull/54103#discussion_r409392721", "createdAt": "2020-04-16T08:55:32Z", "author": {"login": "pgomulka"}, "path": "qa/rest-compat-tests/src/main/java/org/elasticsearch/rest/compat/AbstractCompatRestTest.java", "diffHunk": "@@ -66,38 +66,48 @@ protected AbstractCompatRestTest(@Name(\"yaml\") ClientYamlTestCandidate testCandi\n             });\n             finalTestCandidates.add(testCandidates.toArray());\n         }\n-        localCandidates.keySet().forEach(lc -> finalTestCandidates.add(new Object[]{lc}));\n+        localCandidates.keySet().forEach(lc -> finalTestCandidates.add(new Object[] { lc }));\n         return finalTestCandidates;\n     }\n \n-\n     private static void mutateTestCandidate(ClientYamlTestCandidate testCandidate) {\n-        testCandidate.getTestSection().getExecutableSections().stream().filter(s -> s instanceof DoSection).forEach(ds -> {\n+        testCandidate.getSetupSection().getExecutableSections().stream().filter(s -> s instanceof DoSection).forEach(updateDoSection());\n+        testCandidate.getTestSection().getExecutableSections().stream().filter(s -> s instanceof DoSection).forEach(updateDoSection());\n+    }\n+\n+    private static Consumer<? super ExecutableSection> updateDoSection() {\n+        return ds -> {\n             DoSection doSection = (DoSection) ds;\n-            //TODO: be more selective here\n+            // TODO: be more selective here\n             doSection.setIgnoreWarnings(true);\n \n             String compatibleHeader = createCompatibleHeader();\n-            //TODO decide which one to use - Accept or Content-Type\n-            doSection.getApiCallSection()\n-                     .addHeaders(Map.of(\n-                         CompatibleConstants.COMPATIBLE_HEADER, compatibleHeader,\n-                         \"Content-Type\", compatibleHeader\n-                         ));\n-        });\n+            // for cat apis accept headers would break tests which expect txt response\n+            if (doSection.getApiCallSection().getApi().startsWith(\"cat\") == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10e8d1bf5ddaf664927d22e3d27de779a3fc46c5"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NDM2MjQ1", "url": "https://github.com/elastic/elasticsearch/pull/54103#pullrequestreview-394436245", "createdAt": "2020-04-16T09:03:07Z", "commit": {"oid": "10e8d1bf5ddaf664927d22e3d27de779a3fc46c5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwOTowMzowN1rOGGbqCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwOTowMzowN1rOGGbqCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5Nzc3MQ==", "bodyText": "as per my comment https://github.com/elastic/elasticsearch/pull/54103/files#r409392721\nmaybe we should also extend parsing media types that are text? Should we unify this with SQL?\nsee RestSqlQueryAction at the moment sql has to use format parameter\ncc @astefan", "url": "https://github.com/elastic/elasticsearch/pull/54103#discussion_r409397771", "createdAt": "2020-04-16T09:03:07Z", "author": {"login": "pgomulka"}, "path": "server/src/test/java/org/elasticsearch/common/xcontent/XContentTypeTests.java", "diffHunk": "@@ -121,4 +121,21 @@ public void testVersionParsing() {\n         assertThat(XContentType.parseVersion(\"APPLICATION/JSON\"),\n             nullValue());\n     }\n+\n+    public void testVersionParsingOnText() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10e8d1bf5ddaf664927d22e3d27de779a3fc46c5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3181daf8323a0cda918324aa98a67b426a75d7ad", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/3181daf8323a0cda918324aa98a67b426a75d7ad", "committedDate": "2020-04-16T09:44:43Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bd396a190754515e3fc6341decfe2fdddfad46c", "author": {"user": {"login": "pgomulka", "name": "Przemyslaw Gomulka"}}, "url": "https://github.com/elastic/elasticsearch/commit/9bd396a190754515e3fc6341decfe2fdddfad46c", "committedDate": "2020-04-16T12:13:50Z", "message": "Merge branch 'compat_rest_api' into compat/headers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzYwMjI1", "url": "https://github.com/elastic/elasticsearch/pull/54103#pullrequestreview-395760225", "createdAt": "2020-04-17T20:43:08Z", "commit": {"oid": "9bd396a190754515e3fc6341decfe2fdddfad46c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1702, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}