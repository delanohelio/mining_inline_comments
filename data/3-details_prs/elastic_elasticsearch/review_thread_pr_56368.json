{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0ODEwNjg2", "number": 56368, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzoxNjo0NlrOD6dBfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzoxNjo0NlrOD6dBfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjE5NTE3OnYy", "diffSide": "LEFT", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzoxNjo0NlrOGSTgTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMTowNTowOVrOGSh49g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0NzExOQ==", "bodyText": "We test with JDK 15. Should we still check to cap this at 14?", "url": "https://github.com/elastic/elasticsearch/pull/56368#discussion_r421847119", "createdAt": "2020-05-07T23:16:46Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -168,10 +168,6 @@ class PrecommitTasks {\n             classpath = project.files { sourceSet.runtimeClasspath.plus(sourceSet.compileClasspath) }\n \n             targetCompatibility = BuildParams.runtimeJavaVersion.majorVersion\n-            if (BuildParams.runtimeJavaVersion > JavaVersion.VERSION_13) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1785a7366cfbe1cd839ed9f5da1f5fdee7643ac"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg3Mjg4NQ==", "bodyText": "Yep you are right. I added this back using Java 15. We should rethink using runtime java here. It isn't necessary; we only need the target version for each sourceset we are running against.", "url": "https://github.com/elastic/elasticsearch/pull/56368#discussion_r421872885", "createdAt": "2020-05-08T00:42:29Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -168,10 +168,6 @@ class PrecommitTasks {\n             classpath = project.files { sourceSet.runtimeClasspath.plus(sourceSet.compileClasspath) }\n \n             targetCompatibility = BuildParams.runtimeJavaVersion.majorVersion\n-            if (BuildParams.runtimeJavaVersion > JavaVersion.VERSION_13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0NzExOQ=="}, "originalCommit": {"oid": "e1785a7366cfbe1cd839ed9f5da1f5fdee7643ac"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg3NTYyMw==", "bodyText": "I agree. What we should be using is minimumRuntimeVersion since that is what we use as our target compatibility version and pass via -release to java. Just because we test with a new runtime version doesn't in any way change how we compile.", "url": "https://github.com/elastic/elasticsearch/pull/56368#discussion_r421875623", "createdAt": "2020-05-08T00:52:34Z", "author": {"login": "mark-vieira"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -168,10 +168,6 @@ class PrecommitTasks {\n             classpath = project.files { sourceSet.runtimeClasspath.plus(sourceSet.compileClasspath) }\n \n             targetCompatibility = BuildParams.runtimeJavaVersion.majorVersion\n-            if (BuildParams.runtimeJavaVersion > JavaVersion.VERSION_13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0NzExOQ=="}, "originalCommit": {"oid": "e1785a7366cfbe1cd839ed9f5da1f5fdee7643ac"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg5NDU2NA==", "bodyText": "It does change for MRJARs, which is why I think we should set it to the compile version for the specific sourceset.", "url": "https://github.com/elastic/elasticsearch/pull/56368#discussion_r421894564", "createdAt": "2020-05-08T02:01:52Z", "author": {"login": "rjernst"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -168,10 +168,6 @@ class PrecommitTasks {\n             classpath = project.files { sourceSet.runtimeClasspath.plus(sourceSet.compileClasspath) }\n \n             targetCompatibility = BuildParams.runtimeJavaVersion.majorVersion\n-            if (BuildParams.runtimeJavaVersion > JavaVersion.VERSION_13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0NzExOQ=="}, "originalCommit": {"oid": "e1785a7366cfbe1cd839ed9f5da1f5fdee7643ac"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA4MjgwNg==", "bodyText": "Exactly, thanks for this @mark-vieira. The target version passed to forbiddenapis should exactly be the same like passed to javac. By default the plugin also sets this up from the targetVersion property used also by javac (project.targetVersion: https://docs.gradle.org/current/userguide/java_plugin.html)\nFor MR-JARS this is not yet ideal in Gradle. IMHO, Gradle should define the target/sourceVersion on the sourceSet and not on the project. If this would be the case, you would set the sourceSet's targetVersion and forbiddenapis would automatically take it.\nIf there is any progress with changes to Gradle's support for MR-JARs, please open an issue in forbiddenapis, to adapt the defaults in plugin-init.gradle.", "url": "https://github.com/elastic/elasticsearch/pull/56368#discussion_r422082806", "createdAt": "2020-05-08T11:05:09Z", "author": {"login": "uschindler"}, "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -168,10 +168,6 @@ class PrecommitTasks {\n             classpath = project.files { sourceSet.runtimeClasspath.plus(sourceSet.compileClasspath) }\n \n             targetCompatibility = BuildParams.runtimeJavaVersion.majorVersion\n-            if (BuildParams.runtimeJavaVersion > JavaVersion.VERSION_13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0NzExOQ=="}, "originalCommit": {"oid": "e1785a7366cfbe1cd839ed9f5da1f5fdee7643ac"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 623, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}