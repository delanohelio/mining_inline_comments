{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NjM1OTM0", "number": 54650, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTozNDo1N1rODuAoKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTozNDo1N1rODuAoKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTcxMzcxOnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportStopDataFrameAnalyticsAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTozNDo1N1rOF_xHKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNzoxOTowMFrOF_1YEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwOTI1OA==", "bodyText": "I know you've only moved this in this PR, but maybe it's still best to add an assert in the default case just in case someone adds a new state but doesn't add it here?", "url": "https://github.com/elastic/elasticsearch/pull/54650#discussion_r402409258", "createdAt": "2020-04-02T15:34:57Z", "author": {"login": "droberts195"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportStopDataFrameAnalyticsAction.java", "diffHunk": "@@ -278,4 +336,58 @@ void waitForTaskRemoved(Set<String> analyticsIds, StopDataFrameAnalyticsAction.R\n         return persistentTasks.findTasks(MlTasks.DATA_FRAME_ANALYTICS_TASK_NAME,\n             t -> analyticsIds.contains(MlTasks.dataFrameAnalyticsIdFromTaskId(t.getId())));\n     }\n+\n+    // Visible for testing\n+    static class AnalyticsByTaskState {\n+\n+        final List<String> started;\n+        final List<String> stopping;\n+        final List<String> failed;\n+\n+        private AnalyticsByTaskState(List<String> started, List<String> stopping, List<String> failed) {\n+            this.started = Collections.unmodifiableList(started);\n+            this.stopping = Collections.unmodifiableList(stopping);\n+            this.failed = Collections.unmodifiableList(failed);\n+        }\n+\n+        boolean isEmpty() {\n+            return started.isEmpty() && stopping.isEmpty() && failed.isEmpty();\n+        }\n+\n+        List<String> getNonStopped() {\n+            List<String> nonStopped = new ArrayList<>();\n+            nonStopped.addAll(started);\n+            nonStopped.addAll(stopping);\n+            nonStopped.addAll(failed);\n+            return nonStopped;\n+        }\n+\n+        static AnalyticsByTaskState build(Set<String> analyticsIds, PersistentTasksCustomMetadata tasks) {\n+            List<String> started = new ArrayList<>();\n+            List<String> stopping = new ArrayList<>();\n+            List<String> failed = new ArrayList<>();\n+\n+            for (String analyticsId : analyticsIds) {\n+                switch (MlTasks.getDataFrameAnalyticsState(analyticsId, tasks)) {\n+                    case STARTING:\n+                    case STARTED:\n+                    case REINDEXING:\n+                    case ANALYZING:\n+                        started.add(analyticsId);\n+                        break;\n+                    case STOPPING:\n+                        stopping.add(analyticsId);\n+                        break;\n+                    case STOPPED:\n+                        break;\n+                    case FAILED:\n+                        failed.add(analyticsId);\n+                        break;\n+                    default:\n+                        break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f2fe6d8a052f850221502d0222d94bc7063b5b6"}, "originalPosition": 282}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3OTEyMQ==", "bodyText": "Done", "url": "https://github.com/elastic/elasticsearch/pull/54650#discussion_r402479121", "createdAt": "2020-04-02T17:19:00Z", "author": {"login": "dimitris-athanasiou"}, "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportStopDataFrameAnalyticsAction.java", "diffHunk": "@@ -278,4 +336,58 @@ void waitForTaskRemoved(Set<String> analyticsIds, StopDataFrameAnalyticsAction.R\n         return persistentTasks.findTasks(MlTasks.DATA_FRAME_ANALYTICS_TASK_NAME,\n             t -> analyticsIds.contains(MlTasks.dataFrameAnalyticsIdFromTaskId(t.getId())));\n     }\n+\n+    // Visible for testing\n+    static class AnalyticsByTaskState {\n+\n+        final List<String> started;\n+        final List<String> stopping;\n+        final List<String> failed;\n+\n+        private AnalyticsByTaskState(List<String> started, List<String> stopping, List<String> failed) {\n+            this.started = Collections.unmodifiableList(started);\n+            this.stopping = Collections.unmodifiableList(stopping);\n+            this.failed = Collections.unmodifiableList(failed);\n+        }\n+\n+        boolean isEmpty() {\n+            return started.isEmpty() && stopping.isEmpty() && failed.isEmpty();\n+        }\n+\n+        List<String> getNonStopped() {\n+            List<String> nonStopped = new ArrayList<>();\n+            nonStopped.addAll(started);\n+            nonStopped.addAll(stopping);\n+            nonStopped.addAll(failed);\n+            return nonStopped;\n+        }\n+\n+        static AnalyticsByTaskState build(Set<String> analyticsIds, PersistentTasksCustomMetadata tasks) {\n+            List<String> started = new ArrayList<>();\n+            List<String> stopping = new ArrayList<>();\n+            List<String> failed = new ArrayList<>();\n+\n+            for (String analyticsId : analyticsIds) {\n+                switch (MlTasks.getDataFrameAnalyticsState(analyticsId, tasks)) {\n+                    case STARTING:\n+                    case STARTED:\n+                    case REINDEXING:\n+                    case ANALYZING:\n+                        started.add(analyticsId);\n+                        break;\n+                    case STOPPING:\n+                        stopping.add(analyticsId);\n+                        break;\n+                    case STOPPED:\n+                        break;\n+                    case FAILED:\n+                        failed.add(analyticsId);\n+                        break;\n+                    default:\n+                        break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwOTI1OA=="}, "originalCommit": {"oid": "8f2fe6d8a052f850221502d0222d94bc7063b5b6"}, "originalPosition": 282}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3961, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}