{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTEwMjE1", "number": 63038, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOTozNjowMlrOEpLP5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOTozNjowMlrOEpLP5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNjExMzY3OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/slm/history/SnapshotHistoryStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOTozNjowMlrOHasc4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMTozNjozN1rOHawNaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc1MzMxNA==", "bodyText": "I think this should be a bit more descriptive about why it failed (such as mentioning that the data stream and template were missing) since we don't have an exception in this case", "url": "https://github.com/elastic/elasticsearch/pull/63038#discussion_r497753314", "createdAt": "2020-09-30T19:36:02Z", "author": {"login": "dakrone"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/slm/history/SnapshotHistoryStore.java", "diffHunk": "@@ -59,85 +56,29 @@ public void putAsync(SnapshotHistoryItem item) {\n                 SLM_HISTORY_INDEX_ENABLED_SETTING.getKey(), item);\n             return;\n         }\n-        logger.trace(\"about to index snapshot history item in index [{}]: [{}]\", SLM_HISTORY_ALIAS, item);\n-        ensureHistoryIndex(client, clusterService.state(), ActionListener.wrap(createdIndex -> {\n-            try (XContentBuilder builder = XContentFactory.jsonBuilder()) {\n-                item.toXContent(builder, ToXContent.EMPTY_PARAMS);\n-                IndexRequest request = new IndexRequest(SLM_HISTORY_ALIAS)\n-                    .source(builder);\n-                client.index(request, ActionListener.wrap(indexResponse -> {\n-                    logger.debug(\"successfully indexed snapshot history item with id [{}] in index [{}]: [{}]\",\n-                        indexResponse.getId(), SLM_HISTORY_ALIAS, item);\n-                }, exception -> {\n-                    logger.error(new ParameterizedMessage(\"failed to index snapshot history item in index [{}]: [{}]\",\n-                        SLM_HISTORY_ALIAS, item), exception);\n-                }));\n-            } catch (IOException exception) {\n+        logger.trace(\"about to index snapshot history item in index [{}]: [{}]\", SLM_HISTORY_DATA_STREAM, item);\n+        Metadata metadata = clusterService.state().getMetadata();\n+        if (metadata.dataStreams().containsKey(SLM_HISTORY_DATA_STREAM) == false &&\n+            metadata.templatesV2().containsKey(SLM_TEMPLATE_NAME) == false) {\n+            logger.error(new ParameterizedMessage(\"failed to index snapshot history item in index [{}]: [{}]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "672f19813c4ed9e58048689056bc541305417f05"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxNDg4OA==", "bodyText": "You are right, I reworded error message", "url": "https://github.com/elastic/elasticsearch/pull/63038#discussion_r497814888", "createdAt": "2020-09-30T21:36:37Z", "author": {"login": "probakowski"}, "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/slm/history/SnapshotHistoryStore.java", "diffHunk": "@@ -59,85 +56,29 @@ public void putAsync(SnapshotHistoryItem item) {\n                 SLM_HISTORY_INDEX_ENABLED_SETTING.getKey(), item);\n             return;\n         }\n-        logger.trace(\"about to index snapshot history item in index [{}]: [{}]\", SLM_HISTORY_ALIAS, item);\n-        ensureHistoryIndex(client, clusterService.state(), ActionListener.wrap(createdIndex -> {\n-            try (XContentBuilder builder = XContentFactory.jsonBuilder()) {\n-                item.toXContent(builder, ToXContent.EMPTY_PARAMS);\n-                IndexRequest request = new IndexRequest(SLM_HISTORY_ALIAS)\n-                    .source(builder);\n-                client.index(request, ActionListener.wrap(indexResponse -> {\n-                    logger.debug(\"successfully indexed snapshot history item with id [{}] in index [{}]: [{}]\",\n-                        indexResponse.getId(), SLM_HISTORY_ALIAS, item);\n-                }, exception -> {\n-                    logger.error(new ParameterizedMessage(\"failed to index snapshot history item in index [{}]: [{}]\",\n-                        SLM_HISTORY_ALIAS, item), exception);\n-                }));\n-            } catch (IOException exception) {\n+        logger.trace(\"about to index snapshot history item in index [{}]: [{}]\", SLM_HISTORY_DATA_STREAM, item);\n+        Metadata metadata = clusterService.state().getMetadata();\n+        if (metadata.dataStreams().containsKey(SLM_HISTORY_DATA_STREAM) == false &&\n+            metadata.templatesV2().containsKey(SLM_TEMPLATE_NAME) == false) {\n+            logger.error(new ParameterizedMessage(\"failed to index snapshot history item in index [{}]: [{}]\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc1MzMxNA=="}, "originalCommit": {"oid": "672f19813c4ed9e58048689056bc541305417f05"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3280, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}