{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNTUzMDU1", "number": 53747, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzowMToyOVrODpMzUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTozNDoxNlrODpbmqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NTI3OTU0OnYy", "diffSide": "RIGHT", "path": "gradle/ide.gradle", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzowMToyOVrOF4Og6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNToyNTo0M1rOF4zthQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMjM3OQ==", "bodyText": "Why create these files programatically, but not the two that are committed/shared (excluded in gitignore)?", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r394502379", "createdAt": "2020-03-18T17:01:29Z", "author": {"login": "rjernst"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -0,0 +1,141 @@\n+import org.jetbrains.gradle.ext.Remote\n+import org.jetbrains.gradle.ext.JUnit\n+\n+buildscript {\n+  repositories {\n+    maven {\n+      url \"https://plugins.gradle.org/m2/\"\n+    }\n+  }\n+  dependencies {\n+    classpath \"gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:0.7\"\n+  }\n+}\n+\n+apply plugin: org.jetbrains.gradle.ext.IdeaExtPlugin\n+\n+allprojects {\n+  apply plugin: 'idea'\n+\n+  tasks.named('idea') {\n+    doFirst { throw new GradleException(\"Use of the 'idea' task has been deprecated. For details on importing into IntelliJ see CONTRIBUTING.md.\") }\n+  }\n+}\n+\n+tasks.register('configureIdeaGradleJvm') {\n+  group = 'ide'\n+  description = 'Configures the appropriate JVM for Gradle'\n+\n+  doLast {\n+    modifyXml('.idea/gradle.xml') { xml ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4509883bcf7a3c9261318e778f30db25a8b2c31"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwNTUyNw==", "bodyText": "We aren't creating these files, we are editing them. These are created by IntelliJ by the import and contain other config, we just want to \"tweak\" them. The files in .idea that I've added to source control are specifically designed to be shared via VCS.", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r394505527", "createdAt": "2020-03-18T17:06:20Z", "author": {"login": "mark-vieira"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -0,0 +1,141 @@\n+import org.jetbrains.gradle.ext.Remote\n+import org.jetbrains.gradle.ext.JUnit\n+\n+buildscript {\n+  repositories {\n+    maven {\n+      url \"https://plugins.gradle.org/m2/\"\n+    }\n+  }\n+  dependencies {\n+    classpath \"gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:0.7\"\n+  }\n+}\n+\n+apply plugin: org.jetbrains.gradle.ext.IdeaExtPlugin\n+\n+allprojects {\n+  apply plugin: 'idea'\n+\n+  tasks.named('idea') {\n+    doFirst { throw new GradleException(\"Use of the 'idea' task has been deprecated. For details on importing into IntelliJ see CONTRIBUTING.md.\") }\n+  }\n+}\n+\n+tasks.register('configureIdeaGradleJvm') {\n+  group = 'ide'\n+  description = 'Configures the appropriate JVM for Gradle'\n+\n+  doLast {\n+    modifyXml('.idea/gradle.xml') { xml ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMjM3OQ=="}, "originalCommit": {"oid": "e4509883bcf7a3c9261318e778f30db25a8b2c31"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MjQ4OA==", "bodyText": "Can I suggest a healthy dose of commenting to make this clear to everyone?", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r394892488", "createdAt": "2020-03-19T09:29:53Z", "author": {"login": "pugnascotia"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -0,0 +1,141 @@\n+import org.jetbrains.gradle.ext.Remote\n+import org.jetbrains.gradle.ext.JUnit\n+\n+buildscript {\n+  repositories {\n+    maven {\n+      url \"https://plugins.gradle.org/m2/\"\n+    }\n+  }\n+  dependencies {\n+    classpath \"gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:0.7\"\n+  }\n+}\n+\n+apply plugin: org.jetbrains.gradle.ext.IdeaExtPlugin\n+\n+allprojects {\n+  apply plugin: 'idea'\n+\n+  tasks.named('idea') {\n+    doFirst { throw new GradleException(\"Use of the 'idea' task has been deprecated. For details on importing into IntelliJ see CONTRIBUTING.md.\") }\n+  }\n+}\n+\n+tasks.register('configureIdeaGradleJvm') {\n+  group = 'ide'\n+  description = 'Configures the appropriate JVM for Gradle'\n+\n+  doLast {\n+    modifyXml('.idea/gradle.xml') { xml ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMjM3OQ=="}, "originalCommit": {"oid": "e4509883bcf7a3c9261318e778f30db25a8b2c31"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTExMTgxMw==", "bodyText": "I've added a javadoc to this method.", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r395111813", "createdAt": "2020-03-19T15:25:43Z", "author": {"login": "mark-vieira"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -0,0 +1,141 @@\n+import org.jetbrains.gradle.ext.Remote\n+import org.jetbrains.gradle.ext.JUnit\n+\n+buildscript {\n+  repositories {\n+    maven {\n+      url \"https://plugins.gradle.org/m2/\"\n+    }\n+  }\n+  dependencies {\n+    classpath \"gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:0.7\"\n+  }\n+}\n+\n+apply plugin: org.jetbrains.gradle.ext.IdeaExtPlugin\n+\n+allprojects {\n+  apply plugin: 'idea'\n+\n+  tasks.named('idea') {\n+    doFirst { throw new GradleException(\"Use of the 'idea' task has been deprecated. For details on importing into IntelliJ see CONTRIBUTING.md.\") }\n+  }\n+}\n+\n+tasks.register('configureIdeaGradleJvm') {\n+  group = 'ide'\n+  description = 'Configures the appropriate JVM for Gradle'\n+\n+  doLast {\n+    modifyXml('.idea/gradle.xml') { xml ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMjM3OQ=="}, "originalCommit": {"oid": "e4509883bcf7a3c9261318e778f30db25a8b2c31"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NzcwNDc0OnYy", "diffSide": "RIGHT", "path": "gradle/ide.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTozNDoxNlrOF4mexA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNToxNjoxMVrOF4zRSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5NTA0NA==", "bodyText": "Is this number sufficiently absurdly high?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      classCountToUseImportOnDemand = 99\n          \n          \n            \n                      classCountToUseImportOnDemand = 9999", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r394895044", "createdAt": "2020-03-19T09:34:16Z", "author": {"login": "pugnascotia"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -0,0 +1,141 @@\n+import org.jetbrains.gradle.ext.Remote\n+import org.jetbrains.gradle.ext.JUnit\n+\n+buildscript {\n+  repositories {\n+    maven {\n+      url \"https://plugins.gradle.org/m2/\"\n+    }\n+  }\n+  dependencies {\n+    classpath \"gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:0.7\"\n+  }\n+}\n+\n+apply plugin: org.jetbrains.gradle.ext.IdeaExtPlugin\n+\n+allprojects {\n+  apply plugin: 'idea'\n+\n+  tasks.named('idea') {\n+    doFirst { throw new GradleException(\"Use of the 'idea' task has been deprecated. For details on importing into IntelliJ see CONTRIBUTING.md.\") }\n+  }\n+}\n+\n+tasks.register('configureIdeaGradleJvm') {\n+  group = 'ide'\n+  description = 'Configures the appropriate JVM for Gradle'\n+\n+  doLast {\n+    modifyXml('.idea/gradle.xml') { xml ->\n+      def gradleSettings = xml.component.find { it.'@name' == 'GradleSettings' }.option[0].GradleProjectSettings\n+      // Remove configured JVM option to force IntelliJ to use the project JDK for Gradle\n+      gradleSettings.option.findAll { it.'@name' == 'gradleJvm' }.each { it.parent().remove(it) }\n+    }\n+  }\n+}\n+\n+tasks.register('configureIdeaRunConfigs') {\n+  group = 'ide'\n+  description = 'Configures default run configuration settings'\n+\n+  doLast {\n+    modifyXml('.idea/workspace.xml') { xml ->\n+      def runManager = xml.component.find { it.'@name' == 'RunManager' }\n+      if (runManager == null) {\n+        throw new GradleException(\"IntelliJ 'RunManager' configuration is missing from workspace.xml. You may need to refresh your Gradle project.\")\n+      }\n+\n+      def debugConfig = runManager.configuration.find { it.'@name' == 'Debug Elasticsearch' }\n+      // Enable \"auto restart\" on remote debug run configuration\n+      if (debugConfig.option.any { it.'@name' == 'AUTO_RESTART' && it.'@value' == 'true'} == false) {\n+        def restart = new NodeBuilder().option(name: 'AUTO_RESTART', value: 'true')\n+        debugConfig.append(restart)\n+      }\n+    }\n+  }\n+}\n+\n+idea {\n+  project {\n+    vcs = 'Git'\n+    jdkName = '13'\n+\n+    settings {\n+      delegateActions {\n+        delegateBuildRunToGradle = false\n+        testRunner = 'choose_per_test'\n+      }\n+      taskTriggers {\n+        afterSync tasks.named('configureIdeaGradleJvm'), tasks.named('configureIdeaRunConfigs')\n+      }\n+      codeStyle {\n+        java {\n+          classCountToUseImportOnDemand = 99", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2234375cbf459829befcdfb51e8ccf3a59907ac"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEwNDU4Nw==", "bodyText": "I've never encountered a scenario in which IntelliJ used a wildcard import in all the time I've set this to 99. We can certainly increase it though, I used 99 just because the UI textbox fits 2 characters \ud83d\ude04", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r395104587", "createdAt": "2020-03-19T15:16:11Z", "author": {"login": "mark-vieira"}, "path": "gradle/ide.gradle", "diffHunk": "@@ -0,0 +1,141 @@\n+import org.jetbrains.gradle.ext.Remote\n+import org.jetbrains.gradle.ext.JUnit\n+\n+buildscript {\n+  repositories {\n+    maven {\n+      url \"https://plugins.gradle.org/m2/\"\n+    }\n+  }\n+  dependencies {\n+    classpath \"gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:0.7\"\n+  }\n+}\n+\n+apply plugin: org.jetbrains.gradle.ext.IdeaExtPlugin\n+\n+allprojects {\n+  apply plugin: 'idea'\n+\n+  tasks.named('idea') {\n+    doFirst { throw new GradleException(\"Use of the 'idea' task has been deprecated. For details on importing into IntelliJ see CONTRIBUTING.md.\") }\n+  }\n+}\n+\n+tasks.register('configureIdeaGradleJvm') {\n+  group = 'ide'\n+  description = 'Configures the appropriate JVM for Gradle'\n+\n+  doLast {\n+    modifyXml('.idea/gradle.xml') { xml ->\n+      def gradleSettings = xml.component.find { it.'@name' == 'GradleSettings' }.option[0].GradleProjectSettings\n+      // Remove configured JVM option to force IntelliJ to use the project JDK for Gradle\n+      gradleSettings.option.findAll { it.'@name' == 'gradleJvm' }.each { it.parent().remove(it) }\n+    }\n+  }\n+}\n+\n+tasks.register('configureIdeaRunConfigs') {\n+  group = 'ide'\n+  description = 'Configures default run configuration settings'\n+\n+  doLast {\n+    modifyXml('.idea/workspace.xml') { xml ->\n+      def runManager = xml.component.find { it.'@name' == 'RunManager' }\n+      if (runManager == null) {\n+        throw new GradleException(\"IntelliJ 'RunManager' configuration is missing from workspace.xml. You may need to refresh your Gradle project.\")\n+      }\n+\n+      def debugConfig = runManager.configuration.find { it.'@name' == 'Debug Elasticsearch' }\n+      // Enable \"auto restart\" on remote debug run configuration\n+      if (debugConfig.option.any { it.'@name' == 'AUTO_RESTART' && it.'@value' == 'true'} == false) {\n+        def restart = new NodeBuilder().option(name: 'AUTO_RESTART', value: 'true')\n+        debugConfig.append(restart)\n+      }\n+    }\n+  }\n+}\n+\n+idea {\n+  project {\n+    vcs = 'Git'\n+    jdkName = '13'\n+\n+    settings {\n+      delegateActions {\n+        delegateBuildRunToGradle = false\n+        testRunner = 'choose_per_test'\n+      }\n+      taskTriggers {\n+        afterSync tasks.named('configureIdeaGradleJvm'), tasks.named('configureIdeaRunConfigs')\n+      }\n+      codeStyle {\n+        java {\n+          classCountToUseImportOnDemand = 99", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5NTA0NA=="}, "originalCommit": {"oid": "c2234375cbf459829befcdfb51e8ccf3a59907ac"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4333, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}