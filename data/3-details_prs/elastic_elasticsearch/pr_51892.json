{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDY0MDY0", "number": 51892, "title": "Make TimeSeriesLifecycleActionsIT.testWaitForSnapshot and testWaitForSnapshotSlmExecutedBefore wait for snaphost", "bodyText": "This change modifies TimeSeriesLifecycleActionsIT.testWaitForSnapshot and testWaitForSnapshotSlmExecutedBefore to wait for snapshots to execute successfully.\nThis gives more time for test to finish (as there are more assertBusy calls) and makes debugging easier as allows to differentiate between problem with snapshot and problem with WaitForSnapshotStep.\nAdditionally new assertions should fix race condition between SLM policy execution and ILM recovering retriable step from error.\nI've also added debug informations (explain index and SLM policy data) to ease debugging and changed snapshot repo location used by these 2 tests to random to avoid clashes with other snapshots.\nI would like to merge it to master only for now and if it stays quite for some time I'd backport it to 7.x\nReletes to #50781", "createdAt": "2020-02-04T21:40:21Z", "url": "https://github.com/elastic/elasticsearch/pull/51892", "merged": true, "mergeCommit": {"oid": "cb9be14afb4b0536e0ae4bd9625a83e0d34e7387"}, "closed": true, "closedAt": "2020-02-17T12:13:35Z", "author": {"login": "probakowski"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBIIZSgH2gAyMzcxMDY0MDY0OmU1YzJiNDA2ODkwMGIxZDhjMTE3MWIwYzk2MTY0ZmQ4OGUwNTVjNmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFLWNVgH2gAyMzcxMDY0MDY0OjRmNDRhMTEwNWRhYTgwOTNmMTk3MjNlNDg1MzczYzE2YWU3YTIwNzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e5c2b4068900b1d8c1171b0c96164fd88e055c6c", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/e5c2b4068900b1d8c1171b0c96164fd88e055c6c", "committedDate": "2020-02-04T21:08:25Z", "message": "waitForSnapshot tests rework"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f28d689ec429daf1e19d28db26a0e9b9e550845", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/8f28d689ec429daf1e19d28db26a0e9b9e550845", "committedDate": "2020-02-04T23:49:47Z", "message": "Merge branch 'master' into fix-waitforsnapshot-test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzkzODg2", "url": "https://github.com/elastic/elasticsearch/pull/51892#pullrequestreview-353393886", "createdAt": "2020-02-05T00:17:59Z", "commit": {"oid": "8f28d689ec429daf1e19d28db26a0e9b9e550845"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14b6aaa1f5d42072a3900276a4b13ecb443f89d7", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/14b6aaa1f5d42072a3900276a4b13ecb443f89d7", "committedDate": "2020-02-05T09:22:05Z", "message": "Merge branch 'master' into fix-waitforsnapshot-test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTgzMTAw", "url": "https://github.com/elastic/elasticsearch/pull/51892#pullrequestreview-353583100", "createdAt": "2020-02-05T09:48:16Z", "commit": {"oid": "14b6aaa1f5d42072a3900276a4b13ecb443f89d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTo0ODoxN1rOFlxhgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTo0ODoxN1rOFlxhgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE1MzAyNg==", "bodyText": "I believe these 2 can be grouped together in one assertBusy call as they both make assertions about the same index state (that could also reduce the GET calls we make as getStepKeyForIndex could only be called once)\nI think even the getFailedStepForIndex below could be grouped into the same assertBusy call.\nI think something along the lines of\nassertBusy( () -> {\n    Map<String, Object> indexILMState = explainIndex(index);\n    assertThat(indexILMState.get(\"action\"), is(\"wait_for_snapshot\");\n    assertThat(indexILMState.get(\"step\"), is(\"wait-for-snapshot\");\n    assertThat(indexILMState.get(\"failed_step\"), nullValue());\n});\n\nwill reduce the number of HTTP calls we make and the time we spend on these assertions", "url": "https://github.com/elastic/elasticsearch/pull/51892#discussion_r375153026", "createdAt": "2020-02-05T09:48:17Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "diffHunk": "@@ -328,64 +329,67 @@ public void testAllocateActionOnlyReplicas() throws Exception {\n         });\n     }\n \n-    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/50781\")\n     public void testWaitForSnapshot() throws Exception {\n         createIndexWithSettings(index, Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 1)\n             .put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, 0));\n-        String smlPolicy = randomAlphaOfLengthBetween(4, 10);\n-        createNewSingletonPolicy(\"delete\", new WaitForSnapshotAction(smlPolicy));\n+        String slmPolicy = randomAlphaOfLengthBetween(4, 10);\n+        createNewSingletonPolicy(\"delete\", new WaitForSnapshotAction(slmPolicy));\n         updatePolicy(index, policy);\n-        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"wait_for_snapshot\")));\n-        assertBusy(() -> assertThat(getFailedStepForIndex(index), equalTo(\"wait-for-snapshot\")));\n+        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"wait_for_snapshot\")), slmPolicy);\n+        assertBusy(() -> assertThat(getFailedStepForIndex(index), equalTo(\"wait-for-snapshot\")), slmPolicy);\n \n         String repo = createSnapshotRepo();\n-        createSlmPolicy(smlPolicy, repo);\n+        createSlmPolicy(slmPolicy, repo);\n \n-        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"wait_for_snapshot\")));\n+        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"wait_for_snapshot\")), slmPolicy);\n+        //wait for step to notice that the slm policy is created and to get out of error\n+        assertBusy(() -> assertNull(getFailedStepForIndex(index)), slmPolicy);\n \n-        Request request = new Request(\"PUT\", \"/_slm/policy/\" + smlPolicy + \"/_execute\");\n+        Request request = new Request(\"PUT\", \"/_slm/policy/\" + slmPolicy + \"/_execute\");\n         assertOK(client().performRequest(request));\n \n-\n-        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"completed\")), 2, TimeUnit.MINUTES);\n-\n-        request = new Request(\"DELETE\", \"/_slm/policy/\" + smlPolicy);\n-        assertOK(client().performRequest(request));\n-\n-        request = new Request(\"DELETE\", \"/_snapshot/\" + repo);\n-        assertOK(client().performRequest(request));\n+        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"complete\")), slmPolicy);\n     }\n \n-    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/50781\")\n     public void testWaitForSnapshotSlmExecutedBefore() throws Exception {\n         createIndexWithSettings(index, Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 1)\n             .put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, 0));\n-        String smlPolicy = randomAlphaOfLengthBetween(4, 10);\n-        createNewSingletonPolicy(\"delete\", new WaitForSnapshotAction(smlPolicy));\n+        String slmPolicy = randomAlphaOfLengthBetween(4, 10);\n+        createNewSingletonPolicy(\"delete\", new WaitForSnapshotAction(slmPolicy));\n \n         String repo = createSnapshotRepo();\n-        createSlmPolicy(smlPolicy, repo);\n+        createSlmPolicy(slmPolicy, repo);\n \n-        Request request = new Request(\"PUT\", \"/_slm/policy/\" + smlPolicy + \"/_execute\");\n+        Request request = new Request(\"PUT\", \"/_slm/policy/\" + slmPolicy + \"/_execute\");\n         assertOK(client().performRequest(request));\n \n-        updatePolicy(index, policy);\n-        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"wait_for_snapshot\")));\n-        assertBusy(() -> assertThat(getStepKeyForIndex(index).getName(), equalTo(\"wait-for-snapshot\")));\n+        //wait for slm to finish execution\n+        assertBusy(() -> {\n+            Response response = client().performRequest(new Request(\"GET\", \"/_slm/policy/\" + slmPolicy));\n+            try (InputStream is = response.getEntity().getContent()) {\n+                Map<String, Object> responseMap = XContentHelper.convertToMap(XContentType.JSON.xContent(), is, true);\n+                assertEquals(1, ((Map<?, ?>) ((Map<?, ?>) responseMap.get(slmPolicy)).get(\"stats\")).get(\"snapshots_taken\"));\n+            }\n+        }, slmPolicy);\n \n-        request = new Request(\"PUT\", \"/_slm/policy/\" + smlPolicy + \"/_execute\");\n-        assertOK(client().performRequest(request));\n+        updatePolicy(index, policy);\n+        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"wait_for_snapshot\")), slmPolicy);\n+        assertBusy(() -> assertThat(getStepKeyForIndex(index).getName(), equalTo(\"wait-for-snapshot\")), slmPolicy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14b6aaa1f5d42072a3900276a4b13ecb443f89d7"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTg0MzI1", "url": "https://github.com/elastic/elasticsearch/pull/51892#pullrequestreview-353584325", "createdAt": "2020-02-05T09:50:01Z", "commit": {"oid": "14b6aaa1f5d42072a3900276a4b13ecb443f89d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTo1MDowMVrOFlxlNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTo1MDowMVrOFlxlNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE1Mzk3Mw==", "bodyText": "Same as below, these could be grouped together as the are assertions of the same index state (ie. a particular action is the current action and the failed step info is missing)", "url": "https://github.com/elastic/elasticsearch/pull/51892#discussion_r375153973", "createdAt": "2020-02-05T09:50:01Z", "author": {"login": "andreidan"}, "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "diffHunk": "@@ -328,64 +329,67 @@ public void testAllocateActionOnlyReplicas() throws Exception {\n         });\n     }\n \n-    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/50781\")\n     public void testWaitForSnapshot() throws Exception {\n         createIndexWithSettings(index, Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 1)\n             .put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, 0));\n-        String smlPolicy = randomAlphaOfLengthBetween(4, 10);\n-        createNewSingletonPolicy(\"delete\", new WaitForSnapshotAction(smlPolicy));\n+        String slmPolicy = randomAlphaOfLengthBetween(4, 10);\n+        createNewSingletonPolicy(\"delete\", new WaitForSnapshotAction(slmPolicy));\n         updatePolicy(index, policy);\n-        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"wait_for_snapshot\")));\n-        assertBusy(() -> assertThat(getFailedStepForIndex(index), equalTo(\"wait-for-snapshot\")));\n+        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"wait_for_snapshot\")), slmPolicy);\n+        assertBusy(() -> assertThat(getFailedStepForIndex(index), equalTo(\"wait-for-snapshot\")), slmPolicy);\n \n         String repo = createSnapshotRepo();\n-        createSlmPolicy(smlPolicy, repo);\n+        createSlmPolicy(slmPolicy, repo);\n \n-        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"wait_for_snapshot\")));\n+        assertBusy(() -> assertThat(getStepKeyForIndex(index).getAction(), equalTo(\"wait_for_snapshot\")), slmPolicy);\n+        //wait for step to notice that the slm policy is created and to get out of error\n+        assertBusy(() -> assertNull(getFailedStepForIndex(index)), slmPolicy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14b6aaa1f5d42072a3900276a4b13ecb443f89d7"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dec27b04a2a72aa63a7b4323f650e6e46a7c7297", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/dec27b04a2a72aa63a7b4323f650e6e46a7c7297", "committedDate": "2020-02-05T20:32:55Z", "message": "Merge remote-tracking branch 'origin/master' into fix-waitforsnapshot-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42ab5aaad52bd615ba1f0f7bd5ca24f537dcafaf", "author": {"user": {"login": "probakowski", "name": "Przemko Robakowski"}}, "url": "https://github.com/elastic/elasticsearch/commit/42ab5aaad52bd615ba1f0f7bd5ca24f537dcafaf", "committedDate": "2020-02-17T11:08:32Z", "message": "Refactor assertBusy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f44a1105daa8093f19723e485373c16ae7a2076", "author": {"user": {"login": "elasticmachine", "name": "Elastic Machine"}}, "url": "https://github.com/elastic/elasticsearch/commit/4f44a1105daa8093f19723e485373c16ae7a2076", "committedDate": "2020-02-17T11:08:55Z", "message": "Merge branch 'master' into fix-waitforsnapshot-test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2797, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}