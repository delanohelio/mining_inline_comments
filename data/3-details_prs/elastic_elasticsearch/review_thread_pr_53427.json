{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2ODU2NzYy", "number": 53427, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo1NzowNVrODnmsnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyNDozOFrODnoerw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODU1MDY4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/AggregatorSupplier.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo1NzowNVrOF1tFrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo1NzowNVrOF1tFrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg1NzU4MA==", "bodyText": "I'm not really sure what you mean by place holder. Like, you mean that we'll replace it with another one later? Does this interface just exist to mark things that the registry can handle?", "url": "https://github.com/elastic/elasticsearch/pull/53427#discussion_r391857580", "createdAt": "2020-03-12T19:57:05Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/AggregatorSupplier.java", "diffHunk": "@@ -18,5 +18,25 @@\n  */\n package org.elasticsearch.search.aggregations.support;\n \n+/**\n+ * {@link AggregatorSupplier} is a place holder interface.  The {@link ValuesSourceRegistry} uses this as a common interface for tools to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b71862ab0aebac6525a806e2b621f18d019593f2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODgyNDIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyMDoxMlrOF1vqrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyMDoxMlrOF1vqrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5OTgyMg==", "bodyText": "Maybe something like `{@link ValuesSourceType}s represent data types on which aggregations can operate. On data nodes they are {@link resolved} to {@link ValueSource} instances that blah blah blah\"\nI'm not sure it is useful to explain too much about subclasses of ValuesSource here. I think I'd prefer to read that on ValuesSource.", "url": "https://github.com/elastic/elasticsearch/pull/53427#discussion_r391899822", "createdAt": "2020-03-12T21:20:12Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceType.java", "diffHunk": "@@ -26,10 +26,16 @@\n import java.util.function.LongSupplier;\n \n /**\n- * ValuesSourceType wraps the creation of specific per-source instances each {@link ValuesSource} needs to provide.  Every top-level\n- * subclass of {@link ValuesSource} should have a corresponding implementation of this interface.  In general, new data types seeking\n- * aggregation support should create a top level {@link ValuesSource}, then implement this to return wrappers for the specific sources of\n- * values.\n+ * {@link ValuesSourceType}s are the quantum unit of aggregations support.  {@link org.elasticsearch.index.mapper.MappedFieldType}s that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39c1789a906bc5a14c53e5682c07b5c57a9a7915"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODgyNjgzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyMTowN1rOF1vsPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyMTowN1rOF1vsPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkwMDIyMw==", "bodyText": "\ud83d\udc4d on calling out stateless. Though I don't think you need to call out that that implies they are immutable.", "url": "https://github.com/elastic/elasticsearch/pull/53427#discussion_r391900223", "createdAt": "2020-03-12T21:21:07Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceType.java", "diffHunk": "@@ -26,10 +26,16 @@\n import java.util.function.LongSupplier;\n \n /**\n- * ValuesSourceType wraps the creation of specific per-source instances each {@link ValuesSource} needs to provide.  Every top-level\n- * subclass of {@link ValuesSource} should have a corresponding implementation of this interface.  In general, new data types seeking\n- * aggregation support should create a top level {@link ValuesSource}, then implement this to return wrappers for the specific sources of\n- * values.\n+ * {@link ValuesSourceType}s are the quantum unit of aggregations support.  {@link org.elasticsearch.index.mapper.MappedFieldType}s that\n+ * allow aggregations map to exactly one ValuesSourceType, although multiple field types can map to the same ValuesSourceType.  Aggregations\n+ * in turn provide a set of ValuesSourceTypes they can operate on.  ValuesSourceTypes in turn map to a single direct sub-class of\n+ * {@link ValuesSource} (e.g. {@link ValuesSource.Numeric}; note that a given ValuesSourceType can yield different sub-sub-classes, e.g.\n+ * {@link ValuesSource.Numeric.WithScript}, depending on the configuration).  Note that it's possible that two different ValuesSourceTypes\n+ * will yield the same ValuesSource subclass.  This typically happens when the underlying representation is shared, but logically the data\n+ * are different, such as with numbers and dates.\n+ *\n+ * ValuesSourceTypes should be stateless, and thus immutable.  We recommend that plugins define an enum for their ValuesSourceTypes, even", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39c1789a906bc5a14c53e5682c07b5c57a9a7915"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODgyOTEzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/package-info.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyMjowMFrOF1vttg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyMjowMFrOF1vttg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkwMDU5OA==", "bodyText": "s/The Aggregations Support package// ? The topic of the sentence is sort of implied by its position as package javadoc.", "url": "https://github.com/elastic/elasticsearch/pull/53427#discussion_r391900598", "createdAt": "2020-03-12T21:22:00Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/package-info.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/**\n+ * The Aggregations Support package holds shared code for the aggregations framework, especially around dealing with values.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39c1789a906bc5a14c53e5682c07b5c57a9a7915"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODgzNDM4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/package-info.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyMzoxMFrOF1vwkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyMzoxMFrOF1vwkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkwMTMyOQ==", "bodyText": "You probably should add html to this, just so it renders in a sane way when I mouseover the package and the like.", "url": "https://github.com/elastic/elasticsearch/pull/53427#discussion_r391901329", "createdAt": "2020-03-12T21:23:10Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/package-info.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/**\n+ * The Aggregations Support package holds shared code for the aggregations framework, especially around dealing with values.\n+ *\n+ * Key Classes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39c1789a906bc5a14c53e5682c07b5c57a9a7915"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODgzODYxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/package-info.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyMzo1MVrOF1vymg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowODowMlrOF27Osw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkwMTg1MA==", "bodyText": "Since this is in the package do you need to fully qualify it? In general I'm fine importing things only for Javadoc if it makes the javadoc easier to read.", "url": "https://github.com/elastic/elasticsearch/pull/53427#discussion_r391901850", "createdAt": "2020-03-12T21:23:51Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/package-info.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/**\n+ * The Aggregations Support package holds shared code for the aggregations framework, especially around dealing with values.\n+ *\n+ * Key Classes\n+ *\n+ * {@link org.elasticsearch.search.aggregations.support.ValuesSource} and its subclasses", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39c1789a906bc5a14c53e5682c07b5c57a9a7915"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNzg0Mw==", "bodyText": "AFAICT, package-info.java always requires fully qualified names in links, no idea why.", "url": "https://github.com/elastic/elasticsearch/pull/53427#discussion_r393137843", "createdAt": "2020-03-16T16:08:02Z", "author": {"login": "not-napoleon"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/package-info.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/**\n+ * The Aggregations Support package holds shared code for the aggregations framework, especially around dealing with values.\n+ *\n+ * Key Classes\n+ *\n+ * {@link org.elasticsearch.search.aggregations.support.ValuesSource} and its subclasses", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkwMTg1MA=="}, "originalCommit": {"oid": "39c1789a906bc5a14c53e5682c07b5c57a9a7915"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODg0MjcxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/package-info.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyNDozOFrOF1v1Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyNDozOFrOF1v1Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkwMjQ3OQ==", "bodyText": "s/once during startup/at startup/ ?", "url": "https://github.com/elastic/elasticsearch/pull/53427#discussion_r391902479", "createdAt": "2020-03-12T21:24:38Z", "author": {"login": "nik9000"}, "path": "server/src/main/java/org/elasticsearch/search/aggregations/support/package-info.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/**\n+ * The Aggregations Support package holds shared code for the aggregations framework, especially around dealing with values.\n+ *\n+ * Key Classes\n+ *\n+ * {@link org.elasticsearch.search.aggregations.support.ValuesSource} and its subclasses\n+ * These are thin wrappers which provide a unified interface to different ways of getting input data (e.g. DocValues from Lucene, or script\n+ * output). A class hierarchy defines the type of values returned by the source.  The top level sub-classes define type-specific behavior,\n+ * such as {@link org.elasticsearch.search.aggregations.support.ValuesSource.Numeric#isFloatingPoint()}.  Second level subclasses are\n+ * then specialized based on where they read values from, e.g. script or field cases.  There are also adapter classes like\n+ * {@link org.elasticsearch.search.aggregations.bucket.geogrid.CellIdSource} which do run-time conversion from one type to another, often\n+ * dependent on a user specified parameter (precision in that case).\n+ *\n+ * {@link org.elasticsearch.search.aggregations.support.ValuesSourceRegistry}\n+ * ValuesSourceRegistry stores the mappings for what types are supported by what aggregations.  It is configured once during startup, when", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39c1789a906bc5a14c53e5682c07b5c57a9a7915"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3296, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}