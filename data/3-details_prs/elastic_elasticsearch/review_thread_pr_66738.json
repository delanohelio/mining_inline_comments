{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MDk2MTE0", "number": 66738, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTo1NjowOVrOFJm-Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMDowMzoyMlrOFJnDFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjIwMDU0OnYy", "diffSide": "RIGHT", "path": "modules/reindex/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTo1NjowOVrOIMA8tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMDozMzo0MVrOINsuFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2OTM2Ng==", "bodyText": "Does this have different final semantics than an enhanced for loop? I've seen goofiness with stuff like this before where lazy evaluated configuration uses the last value of this variable in the enhanced-for scenario. If this solves that problem maybe we should standardize on it.", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r549469366", "createdAt": "2020-12-28T19:56:09Z", "author": {"login": "mark-vieira"}, "path": "modules/reindex/build.gradle", "diffHunk": "@@ -128,7 +129,7 @@ if (Os.isFamily(Os.FAMILY_WINDOWS)) {\n     // see: https://github.com/elastic/elasticsearch/issues/51202\n     versions = ['2', '1']\n   }\n-  for (String version : versions) {\n+  versions.each { version ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c5c530bcce6e66a6e8255bff0c1134ed5f0a88"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIzNTA5NA==", "bodyText": "yes. It fixes exactly the weird issue that you describe here with for loops. I think what we see there is this bug here: https://issues.apache.org/jira/browse/GROOVY-8826", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r551235094", "createdAt": "2021-01-04T10:33:41Z", "author": {"login": "breskeby"}, "path": "modules/reindex/build.gradle", "diffHunk": "@@ -128,7 +129,7 @@ if (Os.isFamily(Os.FAMILY_WINDOWS)) {\n     // see: https://github.com/elastic/elasticsearch/issues/51202\n     versions = ['2', '1']\n   }\n-  for (String version : versions) {\n+  versions.each { version ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2OTM2Ng=="}, "originalCommit": {"oid": "a4c5c530bcce6e66a6e8255bff0c1134ed5f0a88"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjIwNzk1OnYy", "diffSide": "RIGHT", "path": "test/fixtures/gcs-fixture/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMDowMDowOVrOIMBA6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMDo1OTowNlrOINtiyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ3MDQ0MA==", "bodyText": "Looks like jar and runtimeClasspath should also be inputs here. In fact we should just do that and then rely on the implicit dependencies.", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r549470440", "createdAt": "2020-12-28T20:00:09Z", "author": {"login": "mark-vieira"}, "path": "test/fixtures/gcs-fixture/build.gradle", "diffHunk": "@@ -26,8 +26,8 @@ dependencies {\n   api project(':server')\n }\n \n-preProcessFixture {\n-  dependsOn jar, configurations.runtimeClasspath\n+tasks.named(\"preProcessFixture\").configure {\n+  dependsOn tasks.named(\"jar\"), configurations.runtimeClasspath", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c5c530bcce6e66a6e8255bff0c1134ed5f0a88"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0ODU4Ng==", "bodyText": "fixed", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r551248586", "createdAt": "2021-01-04T10:59:06Z", "author": {"login": "breskeby"}, "path": "test/fixtures/gcs-fixture/build.gradle", "diffHunk": "@@ -26,8 +26,8 @@ dependencies {\n   api project(':server')\n }\n \n-preProcessFixture {\n-  dependsOn jar, configurations.runtimeClasspath\n+tasks.named(\"preProcessFixture\").configure {\n+  dependsOn tasks.named(\"jar\"), configurations.runtimeClasspath", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ3MDQ0MA=="}, "originalCommit": {"oid": "a4c5c530bcce6e66a6e8255bff0c1134ed5f0a88"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjIxMjY5OnYy", "diffSide": "RIGHT", "path": "x-pack/plugin/ccr/qa/multi-cluster/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMDowMzoyMlrOIMBDvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMDo1Njo1OFrOINte0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ3MTE2NQ==", "bodyText": "Does this not require a useCluster?", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r549471165", "createdAt": "2020-12-28T20:03:22Z", "author": {"login": "mark-vieira"}, "path": "x-pack/plugin/ccr/qa/multi-cluster/build.gradle", "diffHunk": "@@ -9,51 +9,53 @@ dependencies {\n   testImplementation project(':x-pack:plugin:ccr:qa')\n }\n \n-task \"leader-cluster\"(type: RestIntegTestTask) {\n-  mustRunAfter(\"precommit\")\n-  systemProperty 'tests.target_cluster', 'leader'\n+testClusters {\n+  'leader-cluster' {\n+    testDistribution = 'DEFAULT'\n+    setting 'xpack.license.self_generated.type', 'trial'\n+  }\n+  'middle-cluster' {\n+    testDistribution = 'DEFAULT'\n+    setting 'xpack.license.self_generated.type', 'trial'\n+    setting 'cluster.remote.leader_cluster.seeds',\n+            { \"\\\"${testClusters.named('leader-cluster').get().getAllTransportPortURI().join(\",\")}\\\"\" }\n+  }\n }\n \n-testClusters.\"leader-cluster\" {\n-  testDistribution = 'DEFAULT'\n-  setting 'xpack.license.self_generated.type', 'trial'\n+tasks.register(\"leader-cluster\", RestIntegTestTask) {\n+  mustRunAfter(\"precommit\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c5c530bcce6e66a6e8255bff0c1134ed5f0a88"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0NzU3MQ==", "bodyText": "The name matching cluster is always wired here: \n  \n    \n      elasticsearch/buildSrc/src/main/java/org/elasticsearch/gradle/test/RestTestBasePlugin.java\n    \n    \n         Line 47\n      in\n      0911d04\n    \n    \n    \n    \n\n        \n          \n           restIntegTestTask.useCluster(cluster);", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r551247571", "createdAt": "2021-01-04T10:56:58Z", "author": {"login": "breskeby"}, "path": "x-pack/plugin/ccr/qa/multi-cluster/build.gradle", "diffHunk": "@@ -9,51 +9,53 @@ dependencies {\n   testImplementation project(':x-pack:plugin:ccr:qa')\n }\n \n-task \"leader-cluster\"(type: RestIntegTestTask) {\n-  mustRunAfter(\"precommit\")\n-  systemProperty 'tests.target_cluster', 'leader'\n+testClusters {\n+  'leader-cluster' {\n+    testDistribution = 'DEFAULT'\n+    setting 'xpack.license.self_generated.type', 'trial'\n+  }\n+  'middle-cluster' {\n+    testDistribution = 'DEFAULT'\n+    setting 'xpack.license.self_generated.type', 'trial'\n+    setting 'cluster.remote.leader_cluster.seeds',\n+            { \"\\\"${testClusters.named('leader-cluster').get().getAllTransportPortURI().join(\",\")}\\\"\" }\n+  }\n }\n \n-testClusters.\"leader-cluster\" {\n-  testDistribution = 'DEFAULT'\n-  setting 'xpack.license.self_generated.type', 'trial'\n+tasks.register(\"leader-cluster\", RestIntegTestTask) {\n+  mustRunAfter(\"precommit\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ3MTE2NQ=="}, "originalCommit": {"oid": "a4c5c530bcce6e66a6e8255bff0c1134ed5f0a88"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4421, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}