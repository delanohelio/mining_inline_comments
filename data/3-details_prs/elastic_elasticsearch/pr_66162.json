{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1ODk1MjU3", "number": 66162, "title": "Snapshot of a searchable snapshot should be empty", "bodyText": "Today if you take a snapshot of a searchable snapshot index then we\ntreat it like a normal index and copy (any unchanged parts of) its\ncontents the the repository. This is often a complete copy, doubling the\nsnapshot storage required, since a searchable snapshot index typically\nhas a different name from the original index; it may also be that we are\ntaking a snapshot into a different repository. The content of a\nsearchable snapshot is already held in a snapshot, and its index\nmetadata indicates how to find this content, so it is wasteful to copy\nanything new into the repository.\nThis commit adjusts things so that a searchable snapshot shard presents\nitself to the snapshotter as if it contained no segments, and adjusts\nthings to account for the consequent mismatch at restore time.\nCloses #66110", "createdAt": "2020-12-10T12:17:45Z", "url": "https://github.com/elastic/elasticsearch/pull/66162", "merged": true, "mergeCommit": {"oid": "69e5ea1b54baa9e0384778695c99ace7dd10d22a"}, "closed": true, "closedAt": "2020-12-14T19:24:42Z", "author": {"login": "DaveCTurner"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkyUzUgH2gAyNTM1ODk1MjU3OmFmYmY2ZmRhNWE0OTk4ODdmNWMyYzYyMTVkZjNkNmRkODg5MTZhM2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmJQ61gH2gAyNTM1ODk1MjU3OjUwZWI3ODgwOTBjMzgyMTJmZGEwMmI2NjMyN2IwNDY0YWI0ZmYwMDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/afbf6fda5a499887f5c2c6215df3d6dd88916a3c", "committedDate": "2020-12-10T12:16:29Z", "message": "Snapshot of a searchable snapshot should be empty\n\nToday if you take a snapshot of a searchable snapshot index then we\ntreat it like a normal index and copy (any unchanged parts of) its\ncontents the the repository. This is often a complete copy, doubling the\nsnapshot storage required, since a searchable snapshot index typically\nhas a different name from the original index; it may also be that we are\ntaking a snapshot into a different repository. The content of a\nsearchable snapshot is already held in a snapshot, and its index\nmetadata indicates how to find this content, so it is wasteful to copy\nanything new into the repository.\n\nThis commit adjusts things so that a searchable snapshot shard presents\nitself to the snapshotter as if it contained no segments, and adjusts\nthings to account for the consequent mismatch at restore time.\n\nCloses #66110"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MTQzOTUx", "url": "https://github.com/elastic/elasticsearch/pull/66162#pullrequestreview-549143951", "createdAt": "2020-12-10T12:24:36Z", "commit": {"oid": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMjoyNDozNlrOIDGutg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMjoyNDozNlrOIDGutg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyNjkwMg==", "bodyText": "Oops, this will almost always work except for cases where we add another character to the encoded generation (think \"1\" < \"10\" < \"2\"). I'll address this.", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540126902", "createdAt": "2020-12-10T12:24:36Z", "author": {"login": "DaveCTurner"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -271,7 +282,32 @@ public void onIndexModule(IndexModule indexModule) {\n         if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexSettings.getSettings())\n             && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {\n             return Optional.of(\n-                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false)\n+                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false) {\n+\n+                    // present an empty IndexCommit to the snapshot mechanism so that we copy no shard data to the repository\n+                    private final IndexCommit emptyIndexCommit;\n+\n+                    {\n+                        try {\n+                            final Directory directory = engineConfig.getStore().directory();\n+                            final String oldestSegmentsFile = Arrays.stream(directory.listAll())\n+                                .filter(s -> s.startsWith(IndexFileNames.SEGMENTS + \"_\"))\n+                                .min(Comparator.naturalOrder())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc3403a199e26d288a5b0ac029678a24623bddc1", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/cc3403a199e26d288a5b0ac029678a24623bddc1", "committedDate": "2020-12-10T12:45:50Z", "message": "Sort the segments files properly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MTQ2MTc5", "url": "https://github.com/elastic/elasticsearch/pull/66162#pullrequestreview-549146179", "createdAt": "2020-12-10T12:27:31Z", "commit": {"oid": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMjoyNzozMVrOIDG2Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMjo0MjozMlrOIDHaWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyODgzOA==", "bodyText": "Can we add shardStateIdentifier here while we're at it ? :) (also .toString() isn't necessary?", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540128838", "createdAt": "2020-12-10T12:27:31Z", "author": {"login": "original-brownbear"}, "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/SnapshotFiles.java", "diffHunk": "@@ -128,4 +128,8 @@ private FileInfo findPhysicalIndexFile(String physicalName) {\n         return physicalFiles.get(physicalName);\n     }\n \n+    @Override\n+    public String toString() {\n+        return \"SnapshotFiles{\" + indexFiles.toString() + \"}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEzMDY0OQ==", "bodyText": "NIT: drop empty line", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540130649", "createdAt": "2020-12-10T12:30:31Z", "author": {"login": "original-brownbear"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/InMemoryNoOpCommitDirectory.java", "diffHunk": "@@ -119,7 +119,8 @@ private static void ensureMutable(String name) {\n             || name.startsWith(\"pending_segments_\")\n             || name.matches(\"^recovery\\\\..*\\\\.segments_.*$\")) == false) {\n \n-            throw new IllegalArgumentException(\"file [\" + name + \"] is not mutable\");\n+            throw new ImmutableDirectoryException(\"file [\" + name + \"] is not mutable\");\n         }\n     }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEzODA3NQ==", "bodyText": "Just for my own learning probably, but why do we need this? Can't we just always use generation 0? Probably not :) => can we add a comment with why we need this?", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540138075", "createdAt": "2020-12-10T12:42:32Z", "author": {"login": "original-brownbear"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -271,7 +282,32 @@ public void onIndexModule(IndexModule indexModule) {\n         if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexSettings.getSettings())\n             && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {\n             return Optional.of(\n-                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false)\n+                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false) {\n+\n+                    // present an empty IndexCommit to the snapshot mechanism so that we copy no shard data to the repository\n+                    private final IndexCommit emptyIndexCommit;\n+\n+                    {\n+                        try {\n+                            final Directory directory = engineConfig.getStore().directory();\n+                            final String oldestSegmentsFile = Arrays.stream(directory.listAll())\n+                                .filter(s -> s.startsWith(IndexFileNames.SEGMENTS + \"_\"))\n+                                .min(Comparator.naturalOrder())\n+                                .orElseThrow(() -> new IOException(\"segments_N file not found\"));\n+                            final SegmentInfos segmentInfos = new SegmentInfos(Version.LATEST.major);\n+                            segmentInfos.updateGeneration(SegmentInfos.readCommit(directory, oldestSegmentsFile));\n+                            emptyIndexCommit = Lucene.getIndexCommit(segmentInfos, directory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68971b58e418000398ceddae02c4f639165ded77", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/68971b58e418000398ceddae02c4f639165ded77", "committedDate": "2020-12-10T12:49:36Z", "message": "Fix test that already tested this path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a04c04c2af47f68850a904a34456851475a04cf1", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/a04c04c2af47f68850a904a34456851475a04cf1", "committedDate": "2020-12-10T13:03:56Z", "message": "Add comment on why we futz around with generations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0e3567100e31b4b6a774a90f7c8a1eeac0c7ba3", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/b0e3567100e31b4b6a774a90f7c8a1eeac0c7ba3", "committedDate": "2020-12-10T13:04:06Z", "message": "Assert we don't overwrite the existing segments_N file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63383c77547a0760a274d83ab026dd62eb6fffc9", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/63383c77547a0760a274d83ab026dd62eb6fffc9", "committedDate": "2020-12-10T13:05:27Z", "message": "More fields and less toString in toString"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MTgwMTI1", "url": "https://github.com/elastic/elasticsearch/pull/66162#pullrequestreview-549180125", "createdAt": "2020-12-10T13:11:36Z", "commit": {"oid": "63383c77547a0760a274d83ab026dd62eb6fffc9"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea23c8dabe493a6442ae7cc2aeb1788683a0a4dd", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/ea23c8dabe493a6442ae7cc2aeb1788683a0a4dd", "committedDate": "2020-12-10T13:14:32Z", "message": "Spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MTgwNzA3", "url": "https://github.com/elastic/elasticsearch/pull/66162#pullrequestreview-549180707", "createdAt": "2020-12-10T13:12:20Z", "commit": {"oid": "63383c77547a0760a274d83ab026dd62eb6fffc9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMzoxMjoyMFrOIDIj4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMzoxMzoyNlrOIDIm4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1Njg5OQ==", "bodyText": "Could we instead up front check that the directory is \"immutable\" and skip the restore completely? Would feel slightly less hackish to me... Might have to look into a chain of FilterDirectories to see if any are immutable.", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540156899", "createdAt": "2020-12-10T13:12:20Z", "author": {"login": "henningandersen"}, "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/FileRestoreContext.java", "diffHunk": "@@ -190,6 +191,10 @@ private void afterRestore(SnapshotFiles snapshotFiles, Store store, StoreFileMet\n                 try {\n                     store.deleteQuiet(\"restore\", storeFile);\n                     store.directory().deleteFile(storeFile);\n+                } catch (ImmutableDirectoryException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63383c77547a0760a274d83ab026dd62eb6fffc9"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1NzY2NQ==", "bodyText": "If we can skip the restore completely (see previous comment), could we then instead return null here and also skip the snapshotting completely?", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540157665", "createdAt": "2020-12-10T13:13:26Z", "author": {"login": "henningandersen"}, "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -266,12 +277,45 @@ public void onIndexModule(IndexModule indexModule) {\n         });\n     }\n \n+    static final Comparator<String> SEGMENT_FILENAME_COMPARATOR = Comparator.comparingLong(SegmentInfos::generationFromSegmentsFileName);\n+\n     @Override\n     public Optional<EngineFactory> getEngineFactory(IndexSettings indexSettings) {\n         if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexSettings.getSettings())\n             && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {\n             return Optional.of(\n-                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false)\n+                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false) {\n+\n+                    // present an empty IndexCommit to the snapshot mechanism so that we copy no shard data to the repository\n+                    private final IndexCommit emptyIndexCommit;\n+\n+                    {\n+                        try {\n+                            // We have to use a generation number that corresponds to a real segments_N file since we read this file from\n+                            // the directory during the snapshotting process. The oldest segments_N file is the one in the snapshot\n+                            // (recalling that we may perform some no-op commits which make newer segments_N files too). The good thing\n+                            // about using the oldest segments_N file is that a restore will find that we already have this file \"locally\",\n+                            // avoid overwriting the real one with the bogus one, and then use the real one for the rest of the recovery.\n+\n+                            final Directory directory = engineConfig.getStore().directory();\n+                            final String oldestSegmentsFile = Arrays.stream(directory.listAll())\n+                                .filter(s -> s.startsWith(IndexFileNames.SEGMENTS + \"_\"))\n+                                .min(SEGMENT_FILENAME_COMPARATOR)\n+                                .orElseThrow(() -> new IOException(\"segments_N file not found\"));\n+                            final SegmentInfos segmentInfos = new SegmentInfos(Version.LATEST.major);\n+                            segmentInfos.updateGeneration(SegmentInfos.readCommit(directory, oldestSegmentsFile));\n+                            emptyIndexCommit = Lucene.getIndexCommit(segmentInfos, directory);\n+                        } catch (IOException e) {\n+                            throw new UncheckedIOException(e);\n+                        }\n+                    }\n+\n+                    @Override\n+                    public IndexCommitRef acquireIndexCommitForSnapshot() throws EngineException {\n+                        store.incRef();\n+                        return new IndexCommitRef(emptyIndexCommit, store::decRef);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63383c77547a0760a274d83ab026dd62eb6fffc9"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0ef5056b21c728aa3ec01bc1553e688472dec7d", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/f0ef5056b21c728aa3ec01bc1553e688472dec7d", "committedDate": "2020-12-10T15:20:57Z", "message": "Extract method for constructing empty index commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "794e93534b2edc211487725f841da7c4c902b41b", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/794e93534b2edc211487725f841da7c4c902b41b", "committedDate": "2020-12-10T16:53:06Z", "message": "Add REST test for snapshotting a searchable snapshot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d9c000fe90a4f321bf508e9d03110153f9d8160", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/9d9c000fe90a4f321bf508e9d03110153f9d8160", "committedDate": "2020-12-14T08:01:47Z", "message": "Merge branch 'master' into 2020-12-09-snapshotting-searchable-snapshots"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0018295a037d3e4d3873a0aecf0f02d15f3f1057", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/0018295a037d3e4d3873a0aecf0f02d15f3f1057", "committedDate": "2020-12-14T09:50:13Z", "message": "Allow plugins to customise the snapshot commit independently of the engine impl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNjczMjY1", "url": "https://github.com/elastic/elasticsearch/pull/66162#pullrequestreview-551673265", "createdAt": "2020-12-14T17:27:27Z", "commit": {"oid": "0018295a037d3e4d3873a0aecf0f02d15f3f1057"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50eb788090c38212fda02b66327b0464ab4ff001", "author": {"user": {"login": "DaveCTurner", "name": "David Turner"}}, "url": "https://github.com/elastic/elasticsearch/commit/50eb788090c38212fda02b66327b0464ab4ff001", "committedDate": "2020-12-14T17:33:59Z", "message": "Merge branch 'master' into 2020-12-09-snapshotting-searchable-snapshots"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4708, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}