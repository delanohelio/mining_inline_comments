{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MjY3NTQw", "number": 5902, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzo0ODoxMlrOEpe6bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDoxMDowOVrOEpfiTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTMzNTUxOnYy", "diffSide": "RIGHT", "path": "axelor-account/src/main/java/com/axelor/csv/script/ImportMoveTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzo0ODoxMlrOHbLP0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNzo1Nzo0NFrOHbkX2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI1Nzg3NA==", "bodyText": "can values.get(\"endOfValidityDateShift\") return null here ?", "url": "https://github.com/axelor/axelor-open-suite/pull/5902#discussion_r498257874", "createdAt": "2020-10-01T13:48:12Z", "author": {"login": "ale-axelor"}, "path": "axelor-account/src/main/java/com/axelor/csv/script/ImportMoveTemplate.java", "diffHunk": "@@ -18,17 +18,27 @@\n package com.axelor.csv.script;\n \n import com.axelor.apps.account.db.MoveTemplate;\n+import com.axelor.apps.base.service.app.AppBaseService;\n+import com.axelor.common.StringUtils;\n+import com.axelor.inject.Beans;\n import java.io.IOException;\n import java.util.Map;\n \n public class ImportMoveTemplate {\n-  public Object setCompany(Object bean, Map<String, Object> values) throws IOException {\n+  public Object importMove(Object bean, Map<String, Object> values) throws IOException {\n     assert bean instanceof MoveTemplate;\n     MoveTemplate moveTemplate = (MoveTemplate) bean;\n \n     try {\n       if (moveTemplate.getJournal() != null) {\n         moveTemplate.setCompany(moveTemplate.getJournal().getCompany());\n+        String dateShift = values.get(\"endOfValidityDateShift\").toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de76e65bb2f4b037ca059238596932134d565f3a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY2OTUzMQ==", "bodyText": "No, an empty value in a csv always lead to an empty String in my tests.", "url": "https://github.com/axelor/axelor-open-suite/pull/5902#discussion_r498669531", "createdAt": "2020-10-02T07:57:44Z", "author": {"login": "lde-axelor"}, "path": "axelor-account/src/main/java/com/axelor/csv/script/ImportMoveTemplate.java", "diffHunk": "@@ -18,17 +18,27 @@\n package com.axelor.csv.script;\n \n import com.axelor.apps.account.db.MoveTemplate;\n+import com.axelor.apps.base.service.app.AppBaseService;\n+import com.axelor.common.StringUtils;\n+import com.axelor.inject.Beans;\n import java.io.IOException;\n import java.util.Map;\n \n public class ImportMoveTemplate {\n-  public Object setCompany(Object bean, Map<String, Object> values) throws IOException {\n+  public Object importMove(Object bean, Map<String, Object> values) throws IOException {\n     assert bean instanceof MoveTemplate;\n     MoveTemplate moveTemplate = (MoveTemplate) bean;\n \n     try {\n       if (moveTemplate.getJournal() != null) {\n         moveTemplate.setCompany(moveTemplate.getJournal().getCompany());\n+        String dateShift = values.get(\"endOfValidityDateShift\").toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI1Nzg3NA=="}, "originalCommit": {"oid": "de76e65bb2f4b037ca059238596932134d565f3a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTM2MTE2OnYy", "diffSide": "RIGHT", "path": "axelor-base/src/main/java/com/axelor/apps/base/service/app/AppBaseService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzo1MzozN1rOHbLfmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzo1MzozN1rOHbLfmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI2MTkxNA==", "bodyText": "please translate javadoc to english", "url": "https://github.com/axelor/axelor-open-suite/pull/5902#discussion_r498261914", "createdAt": "2020-10-01T13:53:37Z", "author": {"login": "ale-axelor"}, "path": "axelor-base/src/main/java/com/axelor/apps/base/service/app/AppBaseService.java", "diffHunk": "@@ -36,21 +37,42 @@\n   // Date du jour\n \n   /**\n-   * R\u00e9cup\u00e9rer la date du jour avec l'heure. Retourne la date du jour param\u00e9tr\u00e9 dans l'utilisateur\n-   * si existe, sinon r\u00e9cup\u00e8re celle de l'administration g\u00e9n\u00e9rale, sinon date du jour. private\n+   * R\u00e9cup\u00e9rer la date du jour avec l'heure en fonction de la timezone du serveur. Retourne la date\n+   * du jour param\u00e9tr\u00e9 dans l'utilisateur si existe, sinon r\u00e9cup\u00e8re celle de l'administration\n+   * g\u00e9n\u00e9rale, sinon date du jour. private", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de76e65bb2f4b037ca059238596932134d565f3a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTM2MjQ5OnYy", "diffSide": "RIGHT", "path": "axelor-base/src/main/java/com/axelor/apps/base/service/app/AppBaseService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzo1Mzo1N1rOHbLggQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzo1Mzo1N1rOHbLggQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI2MjE0NQ==", "bodyText": "please translate javadoc to english", "url": "https://github.com/axelor/axelor-open-suite/pull/5902#discussion_r498262145", "createdAt": "2020-10-01T13:53:57Z", "author": {"login": "ale-axelor"}, "path": "axelor-base/src/main/java/com/axelor/apps/base/service/app/AppBaseService.java", "diffHunk": "@@ -36,21 +37,42 @@\n   // Date du jour\n \n   /**\n-   * R\u00e9cup\u00e9rer la date du jour avec l'heure. Retourne la date du jour param\u00e9tr\u00e9 dans l'utilisateur\n-   * si existe, sinon r\u00e9cup\u00e8re celle de l'administration g\u00e9n\u00e9rale, sinon date du jour. private\n+   * R\u00e9cup\u00e9rer la date du jour avec l'heure en fonction de la timezone du serveur. Retourne la date\n+   * du jour param\u00e9tr\u00e9 dans l'utilisateur si existe, sinon r\u00e9cup\u00e8re celle de l'administration\n+   * g\u00e9n\u00e9rale, sinon date du jour. private\n    *\n    * @return\n    */\n   public ZonedDateTime getTodayDateTime();\n \n   /**\n-   * R\u00e9cup\u00e9rer la date du jour. Retourne la date du jour param\u00e9tr\u00e9 dans l'utilisateur si existe,\n-   * sinon r\u00e9cup\u00e8re celle de l'administration g\u00e9n\u00e9rale, sinon date du jour.\n+   * R\u00e9cup\u00e9rer la date du jour avec l'heure en fonction de la timezone renseign\u00e9e dans la soci\u00e9t\u00e9", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de76e65bb2f4b037ca059238596932134d565f3a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTM2NzU1OnYy", "diffSide": "RIGHT", "path": "axelor-base/src/main/java/com/axelor/apps/base/service/app/AppBaseService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzo1NDo1OVrOHbLjrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzo1NDo1OVrOHbLjrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI2Mjk1OA==", "bodyText": "see above", "url": "https://github.com/axelor/axelor-open-suite/pull/5902#discussion_r498262958", "createdAt": "2020-10-01T13:54:59Z", "author": {"login": "ale-axelor"}, "path": "axelor-base/src/main/java/com/axelor/apps/base/service/app/AppBaseService.java", "diffHunk": "@@ -36,21 +37,42 @@\n   // Date du jour\n \n   /**\n-   * R\u00e9cup\u00e9rer la date du jour avec l'heure. Retourne la date du jour param\u00e9tr\u00e9 dans l'utilisateur\n-   * si existe, sinon r\u00e9cup\u00e8re celle de l'administration g\u00e9n\u00e9rale, sinon date du jour. private\n+   * R\u00e9cup\u00e9rer la date du jour avec l'heure en fonction de la timezone du serveur. Retourne la date\n+   * du jour param\u00e9tr\u00e9 dans l'utilisateur si existe, sinon r\u00e9cup\u00e8re celle de l'administration\n+   * g\u00e9n\u00e9rale, sinon date du jour. private\n    *\n    * @return\n    */\n   public ZonedDateTime getTodayDateTime();\n \n   /**\n-   * R\u00e9cup\u00e9rer la date du jour. Retourne la date du jour param\u00e9tr\u00e9 dans l'utilisateur si existe,\n-   * sinon r\u00e9cup\u00e8re celle de l'administration g\u00e9n\u00e9rale, sinon date du jour.\n+   * R\u00e9cup\u00e9rer la date du jour avec l'heure en fonction de la timezone renseign\u00e9e dans la soci\u00e9t\u00e9\n+   * donn\u00e9e. Retourne la date du jour param\u00e9tr\u00e9 dans l'utilisateur si existe, sinon r\u00e9cup\u00e8re celle\n+   * de l'administration g\u00e9n\u00e9rale, sinon date du jour. private\n    *\n    * @return\n    */\n+  public ZonedDateTime getTodayDateTime(Company company);\n+\n+  /**\n+   * This method is deprecated. Please use the\n+   * com.axelor.apps.base.service.app.AppBaseService#getTodayDate(com.axelor.apps.base.db.Company)\n+   * method instead.\n+   *\n+   * @return\n+   */\n+  @Deprecated\n   public LocalDate getTodayDate();\n \n+  /**\n+   * R\u00e9cup\u00e9rer la date du jour en fonction de la timezone renseign\u00e9e dans la soci\u00e9t\u00e9 donn\u00e9e.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de76e65bb2f4b037ca059238596932134d565f3a"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTQxMDk0OnYy", "diffSide": "RIGHT", "path": "axelor-base/src/main/java/com/axelor/apps/base/service/app/AppBaseServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDowNDoyMlrOHbL_Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDowNDoyMlrOHbL_Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI3MDA1MQ==", "bodyText": "please do not use wildcards for import", "url": "https://github.com/axelor/axelor-open-suite/pull/5902#discussion_r498270051", "createdAt": "2020-10-01T14:04:22Z", "author": {"login": "ale-axelor"}, "path": "axelor-base/src/main/java/com/axelor/apps/base/service/app/AppBaseServiceImpl.java", "diffHunk": "@@ -18,10 +18,8 @@\n package com.axelor.apps.base.service.app;\n \n import com.axelor.app.AppSettings;\n-import com.axelor.apps.base.db.AppBase;\n-import com.axelor.apps.base.db.CurrencyConversionLine;\n-import com.axelor.apps.base.db.Language;\n-import com.axelor.apps.base.db.Unit;\n+import com.axelor.apps.base.db.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de76e65bb2f4b037ca059238596932134d565f3a"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTQzNzU4OnYy", "diffSide": "RIGHT", "path": "axelor-contract/src/main/java/com/axelor/apps/contract/service/ConsumptionLineServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDoxMDowOVrOHbMP1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDoxMDowOVrOHbMP1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI3NDI2MA==", "bodyText": "it would be safer to check for NPE (I think using optional.map will be useful here)", "url": "https://github.com/axelor/axelor-open-suite/pull/5902#discussion_r498274260", "createdAt": "2020-10-01T14:10:09Z", "author": {"login": "ale-axelor"}, "path": "axelor-contract/src/main/java/com/axelor/apps/contract/service/ConsumptionLineServiceImpl.java", "diffHunk": "@@ -37,7 +37,9 @@ public ConsumptionLineServiceImpl(AppBaseService appBaseService) {\n   @Override\n   public ConsumptionLine fill(ConsumptionLine line, Product product) {\n     Preconditions.checkNotNull(product, I18n.get(IExceptionMessage.CONTRACT_EMPTY_PRODUCT));\n-    line.setLineDate(appBaseService.getTodayDate());\n+    line.setLineDate(\n+        appBaseService.getTodayDate(\n+            line.getContractLine().getContractVersion().getContract().getCompany()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de76e65bb2f4b037ca059238596932134d565f3a"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3539, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}