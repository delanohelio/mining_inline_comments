{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MTk4NjE2", "number": 5351, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1MjoyNFrOD10F0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDozMDo1NVrOEhs6Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzU0NTc3OnYy", "diffSide": "RIGHT", "path": "axelor-stock/src/main/java/com/axelor/apps/stock/service/InventoryLineService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1MjoyNFrOGLbfVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1MjoyNFrOGLbfVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzNzkwOA==", "bodyText": "Please compare selection value to static constant", "url": "https://github.com/axelor/axelor-open-suite/pull/5351#discussion_r414637908", "createdAt": "2020-04-24T14:52:24Z", "author": {"login": "ale-axelor"}, "path": "axelor-stock/src/main/java/com/axelor/apps/stock/service/InventoryLineService.java", "diffHunk": "@@ -101,10 +100,28 @@ public InventoryLine compute(InventoryLine inventoryLine, Inventory inventory) {\n               : BigDecimal.ZERO;\n       inventoryLine.setGap(gap);\n \n+      BigDecimal price;\n+      int value = stockLocation.getCompany().getStockConfig().getInventoryValuationTypeSelect();\n+      if (value == 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bee84abe1dac0b200995b32511b30417c42b9e43"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzU1MTM1OnYy", "diffSide": "RIGHT", "path": "axelor-stock/src/main/java/com/axelor/apps/stock/service/InventoryLineService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1MzozNFrOGLbiww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1MzozNFrOGLbiww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzODc4Nw==", "bodyText": "do not comment out code, simply remove it.", "url": "https://github.com/axelor/axelor-open-suite/pull/5351#discussion_r414638787", "createdAt": "2020-04-24T14:53:34Z", "author": {"login": "ale-axelor"}, "path": "axelor-stock/src/main/java/com/axelor/apps/stock/service/InventoryLineService.java", "diffHunk": "@@ -101,10 +100,28 @@ public InventoryLine compute(InventoryLine inventoryLine, Inventory inventory) {\n               : BigDecimal.ZERO;\n       inventoryLine.setGap(gap);\n \n+      BigDecimal price;\n+      int value = stockLocation.getCompany().getStockConfig().getInventoryValuationTypeSelect();\n+      if (value == 2) {\n+        price = product.getSalePrice();\n+      } else if (value == 3) {\n+        price = product.getCostPrice();\n+      } else {\n+        price = product.getAvgPrice();\n+      }\n+      inventoryLine.setGapValue(gap.multiply(price).setScale(2, RoundingMode.HALF_EVEN));\n+      inventoryLine.setRealValue(\n+          inventoryLine.getRealQty() != null\n+              ? inventoryLine.getRealQty().multiply(price).setScale(2, RoundingMode.HALF_EVEN)\n+              : BigDecimal.ZERO\n+      );\n+\n+      /*StockLocationLine stockLocationLine =\n+              Beans.get(StockLocationLineService.class).getStockLocationLine(stockLocation, product);\n       if (stockLocationLine != null) {\n         inventoryLine.setGapValue(\n             stockLocationLine.getAvgPrice().multiply(gap).setScale(2, RoundingMode.HALF_EVEN));\n-      }\n+      }*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bee84abe1dac0b200995b32511b30417c42b9e43"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzc0MjM1OnYy", "diffSide": "RIGHT", "path": "axelor-stock/src/main/java/com/axelor/apps/stock/service/InventoryLineService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDozMDo1NVrOHPKQ6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDozMDo1NVrOHPKQ6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1ODg1OA==", "bodyText": "I think sale price should be chosen if we value using sale.", "url": "https://github.com/axelor/axelor-open-suite/pull/5351#discussion_r485658858", "createdAt": "2020-09-09T14:30:55Z", "author": {"login": "ale-axelor"}, "path": "axelor-stock/src/main/java/com/axelor/apps/stock/service/InventoryLineService.java", "diffHunk": "@@ -101,10 +102,21 @@ public InventoryLine compute(InventoryLine inventoryLine, Inventory inventory) {\n               : BigDecimal.ZERO;\n       inventoryLine.setGap(gap);\n \n-      if (stockLocationLine != null) {\n-        inventoryLine.setGapValue(\n-            stockLocationLine.getAvgPrice().multiply(gap).setScale(2, RoundingMode.HALF_EVEN));\n+      BigDecimal price;\n+      int value = stockLocation.getCompany().getStockConfig().getInventoryValuationTypeSelect();\n+      if (value == StockConfigRepository.VALUATION_TYPE_ACCOUNTING_VALUE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee16370140064383ede7d7504d2da5e922a59447"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3408, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}