{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNjg3MjEy", "number": 5579, "title": "Dev 29219", "bodyText": "Addition of turnover calculation", "createdAt": "2020-06-29T22:45:21Z", "url": "https://github.com/axelor/axelor-open-suite/pull/5579", "merged": true, "mergeCommit": {"oid": "79538411b3053a51be9911e62366676b428622d3"}, "closed": true, "closedAt": "2020-06-30T15:59:40Z", "author": {"login": "adevaux69"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwI7ZhAH2gAyNDQxNjg3MjEyOjJjOTkxYWEzNThkMzM2YzBjNTMwMmE4NjMwNTQ4YjcyY2Y2YjhkNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwXzDxAH2gAyNDQxNjg3MjEyOjRiZWJkZjIxZGVlNzFjNDcwYWRhNzUzNmU5N2QwZDMyNTZkNmMwY2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2c991aa358d336c0c5302a8630548b72cf6b8d56", "author": {"user": null}, "url": "https://github.com/axelor/axelor-open-suite/commit/2c991aa358d336c0c5302a8630548b72cf6b8d56", "committedDate": "2020-06-29T22:38:34Z", "message": "Dev-29219 Addition of turnover calculation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d83968cbbfbe3cfecf291f636ce4663443d7d98b", "author": {"user": null}, "url": "https://github.com/axelor/axelor-open-suite/commit/d83968cbbfbe3cfecf291f636ce4663443d7d98b", "committedDate": "2020-06-29T22:42:56Z", "message": "Dev-29219 Addition of turnover calculation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzY2ODM4", "url": "https://github.com/axelor/axelor-open-suite/pull/5579#pullrequestreview-439766838", "createdAt": "2020-06-30T08:02:50Z", "commit": {"oid": "d83968cbbfbe3cfecf291f636ce4663443d7d98b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODowMjo1MFrOGqwmtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODoxMzozNVrOGqw_tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4OTcxNg==", "bodyText": "Please use injection by constructor to avoid issues with injection in the future.\nAlso please create an interface PartnerTurnoverService to be implemented by PartnerTurnoverServiceImpl and bind it in AccountModule.", "url": "https://github.com/axelor/axelor-open-suite/pull/5579#discussion_r447489716", "createdAt": "2020-06-30T08:02:50Z", "author": {"login": "ale-axelor"}, "path": "axelor-account/src/main/java/com/axelor/apps/account/service/PartnerTurnoverServiceImpl.java", "diffHunk": "@@ -0,0 +1,354 @@\n+package com.axelor.apps.account.service;\n+\n+import com.axelor.apps.account.db.repo.InvoiceRepository;\n+import com.axelor.apps.base.db.Currency;\n+import com.axelor.apps.base.db.Partner;\n+import com.axelor.apps.base.db.PartnerTurnover;\n+import com.axelor.apps.base.db.Year;\n+import com.axelor.apps.base.db.repo.CompanyRepository;\n+import com.axelor.apps.base.db.repo.PartnerRepository;\n+import com.axelor.apps.base.db.repo.PartnerTurnoverRepository;\n+import com.axelor.apps.base.service.CurrencyService;\n+import com.axelor.apps.base.service.app.AppBaseService;\n+import com.axelor.db.JPA;\n+import com.axelor.exception.AxelorException;\n+import com.axelor.inject.Beans;\n+import com.google.inject.Inject;\n+import com.google.inject.persist.Transactional;\n+import java.math.BigDecimal;\n+import java.math.RoundingMode;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import javax.persistence.Query;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PartnerTurnoverServiceImpl {\n+\n+  private final Logger log = LoggerFactory.getLogger(PartnerTurnoverServiceImpl.class);\n+  @Inject AppBaseService appBaseService;\n+  @Inject CurrencyService currencyService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83968cbbfbe3cfecf291f636ce4663443d7d98b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4OTk1OA==", "bodyText": "Please remove commented out code.", "url": "https://github.com/axelor/axelor-open-suite/pull/5579#discussion_r447489958", "createdAt": "2020-06-30T08:03:15Z", "author": {"login": "ale-axelor"}, "path": "axelor-account/src/main/java/com/axelor/apps/account/service/PartnerTurnoverServiceImpl.java", "diffHunk": "@@ -0,0 +1,354 @@\n+package com.axelor.apps.account.service;\n+\n+import com.axelor.apps.account.db.repo.InvoiceRepository;\n+import com.axelor.apps.base.db.Currency;\n+import com.axelor.apps.base.db.Partner;\n+import com.axelor.apps.base.db.PartnerTurnover;\n+import com.axelor.apps.base.db.Year;\n+import com.axelor.apps.base.db.repo.CompanyRepository;\n+import com.axelor.apps.base.db.repo.PartnerRepository;\n+import com.axelor.apps.base.db.repo.PartnerTurnoverRepository;\n+import com.axelor.apps.base.service.CurrencyService;\n+import com.axelor.apps.base.service.app.AppBaseService;\n+import com.axelor.db.JPA;\n+import com.axelor.exception.AxelorException;\n+import com.axelor.inject.Beans;\n+import com.google.inject.Inject;\n+import com.google.inject.persist.Transactional;\n+import java.math.BigDecimal;\n+import java.math.RoundingMode;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import javax.persistence.Query;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PartnerTurnoverServiceImpl {\n+\n+  private final Logger log = LoggerFactory.getLogger(PartnerTurnoverServiceImpl.class);\n+  @Inject AppBaseService appBaseService;\n+  @Inject CurrencyService currencyService;\n+  /**\n+   * Method of calculating turnover for one partner (customer/supplier)\n+   *\n+   * @param invoice\n+   * @param isSupplier: supplier or customer case\n+   */\n+  @Transactional\n+  public void calculCA(\n+      Partner partner,\n+      boolean isSupplier,\n+      Year yearFiscal,\n+      Year yearCivil,\n+      List<Partner> lstPartnerParent)\n+      throws AxelorException {\n+\n+    // Retrieve of partner\n+    // Partner partner = invoice.getPartner();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83968cbbfbe3cfecf291f636ce4663443d7d98b"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ5MzkzMg==", "bodyText": "This is duplicated code, either remove this or remove the method in PartnerTurnoverServiceImpl.java line 216", "url": "https://github.com/axelor/axelor-open-suite/pull/5579#discussion_r447493932", "createdAt": "2020-06-30T08:09:56Z", "author": {"login": "ale-axelor"}, "path": "axelor-account/src/main/java/com/axelor/apps/account/service/YearServiceAccountImpl.java", "diffHunk": "@@ -249,4 +253,26 @@ public BigDecimal computeReportedBalance2(\n     }\n     return reportedBalanceAmount;\n   }\n+\n+  /**\n+   * function which retrieve Year Object for the Calendar year current and the type of Year\n+   *\n+   * @return\n+   */\n+  public Year getYear(int intTypeSelect) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83968cbbfbe3cfecf291f636ce4663443d7d98b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ5NTI3OQ==", "bodyText": "Please use constant defined in InvoiceRepository instead of hard coded values for operation type select", "url": "https://github.com/axelor/axelor-open-suite/pull/5579#discussion_r447495279", "createdAt": "2020-06-30T08:12:13Z", "author": {"login": "ale-axelor"}, "path": "axelor-account/src/main/java/com/axelor/apps/account/service/invoice/InvoiceServiceImpl.java", "diffHunk": "@@ -971,4 +985,87 @@ protected long getNotLetteredAdvancePaymentMoveLinesAmount(Partner partner) {\n         .getResultList()\n         .size();\n   }\n+\n+  /**\n+   * @param invoice\n+   * @throws AxelorException\n+   */\n+  private void calculCA(Invoice invoice) throws AxelorException {\n+\n+    Partner partner = invoice.getPartner();\n+    List<Partner> partnerParentList = new ArrayList<Partner>();\n+    partnerParentList.add(partner);\n+\n+    /*\n+     * Manage Date activity of civil year and fiscal year\n+     * Search object in database corresponding to civil year and fiscal year compared to date of the day\n+     * If Same date => one treatment (Civil year)\n+     */\n+    // Fiscal Year\n+    Year yearFiscal;\n+    try {\n+      yearFiscal = yearServiceAccountImpl.getYear(YearBaseRepository.TYPE_FISCAL);\n+    } catch (NoResultException e) {\n+      throw new AxelorException(\n+          TraceBackRepository.CATEGORY_CONFIGURATION_ERROR, I18n.get(IExceptionMessage.YEAR_CIVIL));\n+    }\n+\n+    // Civil year\n+    Year yearCivil;\n+    try {\n+      yearCivil = yearServiceAccountImpl.getYear(YearBaseRepository.TYPE_CIVIL);\n+    } catch (NoResultException e) {\n+      throw new AxelorException(\n+          TraceBackRepository.CATEGORY_CONFIGURATION_ERROR,\n+          I18n.get(IExceptionMessage.YEAR_FISCAL));\n+    }\n+\n+    // Comparaison of start date and end date\n+    boolean isSameDate =\n+        (yearCivil.getFromDate().isEqual(yearFiscal.getFromDate()))\n+            && (yearCivil.getToDate().isEqual(yearFiscal.getToDate()));\n+\n+    // Case of Supplier\n+    if (invoice.getOperationTypeSelect() == 1 || invoice.getOperationTypeSelect() == 2) {\n+      partnerTurnoverServiceImpl.calculCA(\n+          partner, true, (isSameDate ? null : yearFiscal), yearCivil, partnerParentList);\n+    }\n+    // Case of Customer\n+    else if (invoice.getOperationTypeSelect() == 3 || invoice.getOperationTypeSelect() == 4) {\n+      partnerTurnoverServiceImpl.calculCA(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83968cbbfbe3cfecf291f636ce4663443d7d98b"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ5NjExNw==", "bodyText": "Please avoid injection implementations. You can either add the method you need in YearService interface or create a new interface YearAccountService with the new method (and bind YearAccountService to YearServiceAccountImpl)", "url": "https://github.com/axelor/axelor-open-suite/pull/5579#discussion_r447496117", "createdAt": "2020-06-30T08:13:35Z", "author": {"login": "ale-axelor"}, "path": "axelor-account/src/main/java/com/axelor/apps/account/service/invoice/InvoiceServiceImpl.java", "diffHunk": "@@ -123,6 +132,8 @@ public InvoiceServiceImpl(\n     this.partnerService = partnerService;\n     this.invoiceLineService = invoiceLineService;\n     this.accountConfigService = accountConfigService;\n+    this.partnerTurnoverServiceImpl = partnerTurnoverServiceImpl;\n+    this.yearServiceAccountImpl = yearServiceAccountImpl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83968cbbfbe3cfecf291f636ce4663443d7d98b"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fcec8a628854ca437cbda84b2568074e66a1bc4", "author": {"user": null}, "url": "https://github.com/axelor/axelor-open-suite/commit/0fcec8a628854ca437cbda84b2568074e66a1bc4", "committedDate": "2020-06-30T15:15:40Z", "message": "dev-29219 : Add Interface implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02bc67f5bb3e9dfb56c62246c8ad964a5a64fd5a", "author": {"user": null}, "url": "https://github.com/axelor/axelor-open-suite/commit/02bc67f5bb3e9dfb56c62246c8ad964a5a64fd5a", "committedDate": "2020-06-30T15:26:14Z", "message": "dev-29219 : Add Interface implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bebdf21dee71c470ada7536e97d0d3256d6c0cd", "author": {"user": null}, "url": "https://github.com/axelor/axelor-open-suite/commit/4bebdf21dee71c470ada7536e97d0d3256d6c0cd", "committedDate": "2020-06-30T15:58:02Z", "message": "dev-29219 : Add Interface implementation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2121, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}