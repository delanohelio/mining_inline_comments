{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1OTI2ODg3", "number": 6178, "title": "Feature #33031 Partner and Orders : shipping cost management and free shipping cost amount of the order is above a certain amount", "bodyText": "-New field for Shipment mode to choose whether or not free shipping can be applied\n-New object Customer Shipping Carriage Paid to override by customer the amount needed to access free shipping\n-If a shipment mode with free shipping option is selected for an order, an order line appears with the shipping cost if the amount is below free shipping threshold\n-Shipment mode can no longer be changed when the quotation is validated\nFeature #33031", "createdAt": "2020-12-10T13:12:30Z", "url": "https://github.com/axelor/axelor-open-suite/pull/6178", "merged": true, "mergeCommit": {"oid": "514c8b2e75008bd1e7127bafed8bbad2e3591423"}, "closed": true, "closedAt": "2021-02-24T13:23:03Z", "author": {"login": "jbo-axelor"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkwcUYgH2gAyNTM1OTI2ODg3OjQxNjYwYjA2MmUzOWQ2YTFmM2ViOTk2Yzc4YzI4NjI3YWQwOTZjZGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd8k01bgH2gAyNTM1OTI2ODg3OjU2NjVjMmM0MGI5MjA1YjhkZDE2MDE1ZmFmOWE3Y2RmNjRkNzQwODY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "41660b062e39d6a1f3eb996c78c28627ad096cdf", "author": {"user": {"login": "jbo-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/41660b062e39d6a1f3eb996c78c28627ad096cdf", "committedDate": "2020-12-10T10:04:53Z", "message": "Partner and Orders : shipping cost management and free shipping cost if amount of the order is above a certain amount\n\n-New field for Shipment mode to choose wether or not free shipping can be applied\n\n-New object Customer Shipping Carriage Paid to override by customer the amount needed to access free shipping\n\n-If a shipment mode with free shipping option is selected for an order, an order line appears with the shipping cost if the amount is below free shipping threshold\n\n-Shipment mode can no longer be changed when the quotation is validated\n\nFeature #33031"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fde886ede51c2dad427ac5683d206171a544d3f5", "author": {"user": {"login": "jbo-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/fde886ede51c2dad427ac5683d206171a544d3f5", "committedDate": "2020-12-10T10:05:22Z", "message": "Add changelogs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34e0f7c13eb4c269d6f1f811b59c9d98a7e3c9c7", "author": {"user": {"login": "jbo-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/34e0f7c13eb4c269d6f1f811b59c9d98a7e3c9c7", "committedDate": "2020-12-10T10:07:14Z", "message": "2nd work on ticket, fix bug and issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fbbdba00c166520e15aa21fe79ac8b7fb145276", "author": {"user": {"login": "jbo-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/1fbbdba00c166520e15aa21fe79ac8b7fb145276", "committedDate": "2020-12-10T11:07:52Z", "message": "Third work on carriage paid"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f75150b6e4f53bedf893ffdcca42a97e39b02b39", "author": {"user": {"login": "jbo-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/f75150b6e4f53bedf893ffdcca42a97e39b02b39", "committedDate": "2020-12-10T13:07:05Z", "message": "New demo data for carriage paid"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bf9fde53133187ab448ced3991c3b7507465fc6", "author": {"user": {"login": "jbo-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/8bf9fde53133187ab448ced3991c3b7507465fc6", "committedDate": "2020-12-10T13:11:15Z", "message": "Add missing translation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMjMzMjgw", "url": "https://github.com/axelor/axelor-open-suite/pull/6178#pullrequestreview-550233280", "createdAt": "2020-12-11T16:07:57Z", "commit": {"oid": "8bf9fde53133187ab448ced3991c3b7507465fc6"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjowNzo1N1rOID_bow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjoyMTo1N1rOIEAAGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA1NTkwNw==", "bodyText": "Please inject this service in the constructor", "url": "https://github.com/axelor/axelor-open-suite/pull/6178#discussion_r541055907", "createdAt": "2020-12-11T16:07:57Z", "author": {"login": "ale-axelor"}, "path": "axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/PurchaseOrderServiceSupplychainImpl.java", "diffHunk": "@@ -365,4 +374,95 @@ public void updateToValidatedStatus(PurchaseOrder purchaseOrder) {\n     purchaseOrder.setStatusSelect(PurchaseOrderRepository.STATUS_VALIDATED);\n     purchaseOrderRepo.save(purchaseOrder);\n   }\n+\n+  @Override\n+  public String createShipmentCostLine(PurchaseOrder purchaseOrder) throws AxelorException {\n+    PurchaseOrderService purchaseOrderService = Beans.get(PurchaseOrderService.class);\n+    List<PurchaseOrderLine> purchaseOrderLines = purchaseOrder.getPurchaseOrderLineList();\n+    ShipmentMode shipmentMode = purchaseOrder.getShipmentMode();\n+    if (shipmentMode == null) {\n+      return null;\n+    }\n+    Product shippingCostProduct = shipmentMode.getShippingCostsProduct();\n+    if (shipmentMode.getHasCarriagePaidPossibility()) {\n+      BigDecimal carriagePaidThreshold = shipmentMode.getCarriagePaidThreshold();\n+      if (computeExTaxTotalWithoutShippingLines(purchaseOrder).compareTo(carriagePaidThreshold)\n+          >= 0) {\n+        String message = removeShipmentCostLine(purchaseOrder);\n+        purchaseOrderService.computePurchaseOrder(purchaseOrder);\n+        return message;\n+      }\n+    }\n+    if (alreadyHasShippingCostLine(purchaseOrder, shippingCostProduct)) {\n+      return null;\n+    }\n+    PurchaseOrderLine shippingCostLine = createShippingCostLine(purchaseOrder, shippingCostProduct);\n+    purchaseOrderLines.add(shippingCostLine);\n+    purchaseOrderService.computePurchaseOrder(purchaseOrder);\n+    return null;\n+  }\n+\n+  private PurchaseOrderLine createShippingCostLine(\n+      PurchaseOrder purchaseOrder, Product shippingCostProduct) throws AxelorException {\n+    PurchaseOrderLine shippingCostLine = new PurchaseOrderLine();\n+    shippingCostLine.setPurchaseOrder(purchaseOrder);\n+    shippingCostLine.setProduct(shippingCostProduct);\n+    PurchaseOrderLineService purchaseOrderLineService = Beans.get(PurchaseOrderLineService.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9fde53133187ab448ced3991c3b7507465fc6"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA1NzE3MA==", "bodyText": "Change all private methods to protected, as the use of private is preventing any override from customer module", "url": "https://github.com/axelor/axelor-open-suite/pull/6178#discussion_r541057170", "createdAt": "2020-12-11T16:09:48Z", "author": {"login": "ale-axelor"}, "path": "axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/PurchaseOrderServiceSupplychainImpl.java", "diffHunk": "@@ -365,4 +374,95 @@ public void updateToValidatedStatus(PurchaseOrder purchaseOrder) {\n     purchaseOrder.setStatusSelect(PurchaseOrderRepository.STATUS_VALIDATED);\n     purchaseOrderRepo.save(purchaseOrder);\n   }\n+\n+  @Override\n+  public String createShipmentCostLine(PurchaseOrder purchaseOrder) throws AxelorException {\n+    PurchaseOrderService purchaseOrderService = Beans.get(PurchaseOrderService.class);\n+    List<PurchaseOrderLine> purchaseOrderLines = purchaseOrder.getPurchaseOrderLineList();\n+    ShipmentMode shipmentMode = purchaseOrder.getShipmentMode();\n+    if (shipmentMode == null) {\n+      return null;\n+    }\n+    Product shippingCostProduct = shipmentMode.getShippingCostsProduct();\n+    if (shipmentMode.getHasCarriagePaidPossibility()) {\n+      BigDecimal carriagePaidThreshold = shipmentMode.getCarriagePaidThreshold();\n+      if (computeExTaxTotalWithoutShippingLines(purchaseOrder).compareTo(carriagePaidThreshold)\n+          >= 0) {\n+        String message = removeShipmentCostLine(purchaseOrder);\n+        purchaseOrderService.computePurchaseOrder(purchaseOrder);\n+        return message;\n+      }\n+    }\n+    if (alreadyHasShippingCostLine(purchaseOrder, shippingCostProduct)) {\n+      return null;\n+    }\n+    PurchaseOrderLine shippingCostLine = createShippingCostLine(purchaseOrder, shippingCostProduct);\n+    purchaseOrderLines.add(shippingCostLine);\n+    purchaseOrderService.computePurchaseOrder(purchaseOrder);\n+    return null;\n+  }\n+\n+  private PurchaseOrderLine createShippingCostLine(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9fde53133187ab448ced3991c3b7507465fc6"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA2MjY2OA==", "bodyText": "Change all private methods to protected, as the use of private is preventing any override from customer module", "url": "https://github.com/axelor/axelor-open-suite/pull/6178#discussion_r541062668", "createdAt": "2020-12-11T16:18:04Z", "author": {"login": "ale-axelor"}, "path": "axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/SaleOrderServiceSupplychainImpl.java", "diffHunk": "@@ -234,4 +246,114 @@ public void updateToConfirmedStatus(SaleOrder saleOrder) {\n     saleOrder.setStatusSelect(SaleOrderRepository.STATUS_ORDER_CONFIRMED);\n     saleOrderRepo.save(saleOrder);\n   }\n+\n+  @Override\n+  public String createShipmentCostLine(SaleOrder saleOrder) throws AxelorException {\n+    SaleOrderComputeService saleOrderComputeService = Beans.get(SaleOrderComputeService.class);\n+    SaleOrderMarginService saleOrderMarginService = Beans.get(SaleOrderMarginService.class);\n+    List<SaleOrderLine> saleOrderLines = saleOrder.getSaleOrderLineList();\n+    Partner client = saleOrder.getClientPartner();\n+    ShipmentMode shipmentMode = saleOrder.getShipmentMode();\n+\n+    if (shipmentMode == null) {\n+      return null;\n+    }\n+    Product shippingCostProduct = shipmentMode.getShippingCostsProduct();\n+    if (shippingCostProduct == null) {\n+      return null;\n+    }\n+    BigDecimal carriagePaidThreshold = shipmentMode.getCarriagePaidThreshold();\n+    if (client != null) {\n+      List<CustomerShippingCarriagePaid> carriagePaids =\n+          client.getCustomerShippingCarriagePaidList();\n+      for (CustomerShippingCarriagePaid customerShippingCarriagePaid : carriagePaids) {\n+        if (shipmentMode.getId() == customerShippingCarriagePaid.getShipmentMode().getId()) {\n+          if (customerShippingCarriagePaid.getShippingCostsProduct() != null) {\n+            shippingCostProduct = customerShippingCarriagePaid.getShippingCostsProduct();\n+          }\n+          carriagePaidThreshold = customerShippingCarriagePaid.getCarriagePaidThreshold();\n+          break;\n+        }\n+      }\n+    }\n+    if (carriagePaidThreshold != null && shipmentMode.getHasCarriagePaidPossibility()) {\n+      if (computeExTaxTotalWithoutShippingLines(saleOrder).compareTo(carriagePaidThreshold) >= 0) {\n+        String message = removeShipmentCostLine(saleOrder);\n+        saleOrderComputeService.computeSaleOrder(saleOrder);\n+        saleOrderMarginService.computeMarginSaleOrder(saleOrder);\n+        return message;\n+      }\n+    }\n+    if (alreadyHasShippingCostLine(saleOrder, shippingCostProduct)) {\n+      return null;\n+    }\n+    SaleOrderLine shippingCostLine = createShippingCostLine(saleOrder, shippingCostProduct);\n+    saleOrderLines.add(shippingCostLine);\n+    saleOrderComputeService.computeSaleOrder(saleOrder);\n+    saleOrderMarginService.computeMarginSaleOrder(saleOrder);\n+    return null;\n+  }\n+\n+  private boolean alreadyHasShippingCostLine(SaleOrder saleOrder, Product shippingCostProduct) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9fde53133187ab448ced3991c3b7507465fc6"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA2Mjg2Mg==", "bodyText": "Please inject these services in the constructor", "url": "https://github.com/axelor/axelor-open-suite/pull/6178#discussion_r541062862", "createdAt": "2020-12-11T16:18:24Z", "author": {"login": "ale-axelor"}, "path": "axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/SaleOrderServiceSupplychainImpl.java", "diffHunk": "@@ -234,4 +246,114 @@ public void updateToConfirmedStatus(SaleOrder saleOrder) {\n     saleOrder.setStatusSelect(SaleOrderRepository.STATUS_ORDER_CONFIRMED);\n     saleOrderRepo.save(saleOrder);\n   }\n+\n+  @Override\n+  public String createShipmentCostLine(SaleOrder saleOrder) throws AxelorException {\n+    SaleOrderComputeService saleOrderComputeService = Beans.get(SaleOrderComputeService.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9fde53133187ab448ced3991c3b7507465fc6"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA2NTI0Mg==", "bodyText": "I think you can use this instead of injecting purchase order service here since a refactor", "url": "https://github.com/axelor/axelor-open-suite/pull/6178#discussion_r541065242", "createdAt": "2020-12-11T16:21:57Z", "author": {"login": "ale-axelor"}, "path": "axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/PurchaseOrderServiceSupplychainImpl.java", "diffHunk": "@@ -365,4 +374,95 @@ public void updateToValidatedStatus(PurchaseOrder purchaseOrder) {\n     purchaseOrder.setStatusSelect(PurchaseOrderRepository.STATUS_VALIDATED);\n     purchaseOrderRepo.save(purchaseOrder);\n   }\n+\n+  @Override\n+  public String createShipmentCostLine(PurchaseOrder purchaseOrder) throws AxelorException {\n+    PurchaseOrderService purchaseOrderService = Beans.get(PurchaseOrderService.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9fde53133187ab448ced3991c3b7507465fc6"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3519af9dec7b4f52b7037db7436dd2e6b0d83a95", "author": {"user": {"login": "jbo-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/3519af9dec7b4f52b7037db7436dd2e6b0d83a95", "committedDate": "2020-12-16T14:26:16Z", "message": "Merge branch 'wip' of github.com:axelor/axelor-open-suite into wip-33031"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66921c6cfeba5978db1344a78de12e1b54b057e8", "author": {"user": {"login": "jbo-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/66921c6cfeba5978db1344a78de12e1b54b057e8", "committedDate": "2020-12-16T15:10:06Z", "message": "Made change as requested"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d563f06646d4072020a90ed57ab94ef690206c28", "author": {"user": {"login": "jbo-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/d563f06646d4072020a90ed57ab94ef690206c28", "committedDate": "2021-02-22T09:36:22Z", "message": "Merge branch 'wip' of github.com:jbo-axelor/axelor-open-suite into wip-33031"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5665c2c40b9205b8dd16015faf9a7cdf64d74086", "author": {"user": {"login": "jbo-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/5665c2c40b9205b8dd16015faf9a7cdf64d74086", "committedDate": "2021-02-22T10:06:59Z", "message": "Merge branch 'wip' of github.com:axelor/axelor-open-suite into wip-33031"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2068, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}