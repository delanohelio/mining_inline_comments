{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMDAwMzE4", "number": 6039, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTowMDoyMVrOE1skaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0ODowOFrOE1uCJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzQwMjAwOnYy", "diffSide": "RIGHT", "path": "axelor-business-production/src/main/java/com/axelor/apps/businessproduction/service/SaleOrderWorkflowServiceBusinessProductionImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTowMDoyMVrOHuHWKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTowMDoyMVrOHuHWKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODExNjkwNg==", "bodyText": "Do not inject using beans.get in a loop, use injection in constructor to get AnalyticMoveLineRepository", "url": "https://github.com/axelor/axelor-open-suite/pull/6039#discussion_r518116906", "createdAt": "2020-11-05T15:00:21Z", "author": {"login": "ale-axelor"}, "path": "axelor-business-production/src/main/java/com/axelor/apps/businessproduction/service/SaleOrderWorkflowServiceBusinessProductionImpl.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.axelor.apps.businessproduction.service;\n+\n+import com.axelor.apps.account.db.AnalyticMoveLine;\n+import com.axelor.apps.account.db.repo.AnalyticMoveLineRepository;\n+import com.axelor.apps.base.db.CancelReason;\n+import com.axelor.apps.base.db.repo.PartnerRepository;\n+import com.axelor.apps.base.service.administration.SequenceService;\n+import com.axelor.apps.base.service.user.UserService;\n+import com.axelor.apps.production.service.SaleOrderWorkflowServiceProductionImpl;\n+import com.axelor.apps.production.service.app.AppProductionService;\n+import com.axelor.apps.production.service.productionorder.ProductionOrderSaleOrderService;\n+import com.axelor.apps.sale.db.SaleOrder;\n+import com.axelor.apps.sale.db.SaleOrderLine;\n+import com.axelor.apps.sale.db.repo.SaleOrderRepository;\n+import com.axelor.apps.sale.service.app.AppSaleService;\n+import com.axelor.apps.supplychain.service.AccountingSituationSupplychainService;\n+import com.axelor.apps.supplychain.service.SaleOrderPurchaseService;\n+import com.axelor.apps.supplychain.service.SaleOrderStockService;\n+import com.axelor.apps.supplychain.service.app.AppSupplychainService;\n+import com.axelor.inject.Beans;\n+import com.google.inject.Inject;\n+import com.google.inject.persist.Transactional;\n+\n+public class SaleOrderWorkflowServiceBusinessProductionImpl\n+    extends SaleOrderWorkflowServiceProductionImpl {\n+\n+  @Inject\n+  public SaleOrderWorkflowServiceBusinessProductionImpl(\n+      SequenceService sequenceService,\n+      PartnerRepository partnerRepo,\n+      SaleOrderRepository saleOrderRepo,\n+      AppSaleService appSaleService,\n+      UserService userService,\n+      SaleOrderStockService saleOrderStockService,\n+      SaleOrderPurchaseService saleOrderPurchaseService,\n+      AppSupplychainService appSupplychainService,\n+      AccountingSituationSupplychainService accountingSituationSupplychainService,\n+      ProductionOrderSaleOrderService productionOrderSaleOrderService,\n+      AppProductionService appProductionService) {\n+    super(\n+        sequenceService,\n+        partnerRepo,\n+        saleOrderRepo,\n+        appSaleService,\n+        userService,\n+        saleOrderStockService,\n+        saleOrderPurchaseService,\n+        appSupplychainService,\n+        accountingSituationSupplychainService,\n+        productionOrderSaleOrderService,\n+        appProductionService);\n+  }\n+\n+  @Override\n+  @Transactional(rollbackOn = Exception.class)\n+  public void cancelSaleOrder(\n+      SaleOrder saleOrder, CancelReason cancelReason, String cancelReasonStr) {\n+    super.cancelSaleOrder(saleOrder, cancelReason, cancelReasonStr);\n+    for (SaleOrderLine saleOrderLine : saleOrder.getSaleOrderLineList()) {\n+      for (AnalyticMoveLine analyticMoveLine : saleOrderLine.getAnalyticMoveLineList()) {\n+        analyticMoveLine.setProject(null);\n+        Beans.get(AnalyticMoveLineRepository.class).save(analyticMoveLine);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25f4b0245d05b7400ebc6cc89cead86482110c17"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzU1MjU3OnYy", "diffSide": "RIGHT", "path": "axelor-business-project/src/main/java/com/axelor/apps/businessproject/web/InvoiceController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTozMjoyM1rOHuI0kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTozMjoyM1rOHuI0kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE0MTA3Mw==", "bodyText": "surround everything in a try catch to trace any exception", "url": "https://github.com/axelor/axelor-open-suite/pull/6039#discussion_r518141073", "createdAt": "2020-11-05T15:32:23Z", "author": {"login": "ale-axelor"}, "path": "axelor-business-project/src/main/java/com/axelor/apps/businessproject/web/InvoiceController.java", "diffHunk": "@@ -322,10 +321,7 @@ public void exportAnnex(ActionRequest request, ActionResponse response) throws A\n   public void updateLines(ActionRequest request, ActionResponse response) throws AxelorException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25f4b0245d05b7400ebc6cc89cead86482110c17"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzU1OTQ0OnYy", "diffSide": "RIGHT", "path": "axelor-business-project/src/main/java/com/axelor/apps/businessproject/web/InvoiceController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTozMzoyOFrOHuI4jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTozMzoyOFrOHuI4jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE0MjA5Mw==", "bodyText": "Create a new interface InvoiceServiceProject that will be implemented by InvoiceServiceProjectImpl and inject it, in order to inject interface and not the implementation.", "url": "https://github.com/axelor/axelor-open-suite/pull/6039#discussion_r518142093", "createdAt": "2020-11-05T15:33:28Z", "author": {"login": "ale-axelor"}, "path": "axelor-business-project/src/main/java/com/axelor/apps/businessproject/web/InvoiceController.java", "diffHunk": "@@ -322,10 +321,7 @@ public void exportAnnex(ActionRequest request, ActionResponse response) throws A\n   public void updateLines(ActionRequest request, ActionResponse response) throws AxelorException {\n     Invoice invoice = request.getContext().asType(Invoice.class);\n     invoice = Beans.get(InvoiceRepository.class).find(invoice.getId());\n-\n-    for (InvoiceLine invoiceLine : invoice.getInvoiceLineList()) {\n-      invoiceLine.setProject(invoice.getProject());\n-    }\n+    invoice = Beans.get(InvoiceServiceProjectImpl.class).updateLines(invoice);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25f4b0245d05b7400ebc6cc89cead86482110c17"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzYzNjQxOnYy", "diffSide": "RIGHT", "path": "axelor-business-project/src/main/java/com/axelor/apps/businessproject/web/InvoiceLineProjectController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0Njo1N1rOHuJoRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0Njo1N1rOHuJoRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE1NDMxMQ==", "bodyText": "surround everything in a try catch to trace any exception", "url": "https://github.com/axelor/axelor-open-suite/pull/6039#discussion_r518154311", "createdAt": "2020-11-05T15:46:57Z", "author": {"login": "ale-axelor"}, "path": "axelor-business-project/src/main/java/com/axelor/apps/businessproject/web/InvoiceLineProjectController.java", "diffHunk": "@@ -147,4 +149,15 @@ public void unsetSupplierInvoiceLineProject(ActionRequest request, ActionRespons\n       TraceBackService.trace(e);\n     }\n   }\n+\n+  public void setProjectToAnalyticDistribution(ActionRequest request, ActionResponse response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25f4b0245d05b7400ebc6cc89cead86482110c17"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzY0MDEyOnYy", "diffSide": "RIGHT", "path": "axelor-business-project/src/main/java/com/axelor/apps/businessproject/web/PurchaseOrderLineProjectController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0NzozOVrOHuJqfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0NzozOVrOHuJqfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE1NDg3OQ==", "bodyText": "surround everything in a try catch to trace any exception", "url": "https://github.com/axelor/axelor-open-suite/pull/6039#discussion_r518154879", "createdAt": "2020-11-05T15:47:39Z", "author": {"login": "ale-axelor"}, "path": "axelor-business-project/src/main/java/com/axelor/apps/businessproject/web/PurchaseOrderLineProjectController.java", "diffHunk": "@@ -113,4 +114,16 @@ public void updateToInvoice(ActionRequest request, ActionResponse response) {\n       TraceBackService.trace(response, e);\n     }\n   }\n+\n+  public void updateAnalyticDistributionWithProject(ActionRequest request, ActionResponse response)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25f4b0245d05b7400ebc6cc89cead86482110c17"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzY0MTk5OnYy", "diffSide": "RIGHT", "path": "axelor-business-project/src/main/java/com/axelor/apps/businessproject/web/SaleOrderLineProjectController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0ODowOFrOHuJr0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0ODowOFrOHuJr0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE1NTIxOA==", "bodyText": "surround everything in a try catch to trace any exception", "url": "https://github.com/axelor/axelor-open-suite/pull/6039#discussion_r518155218", "createdAt": "2020-11-05T15:48:08Z", "author": {"login": "ale-axelor"}, "path": "axelor-business-project/src/main/java/com/axelor/apps/businessproject/web/SaleOrderLineProjectController.java", "diffHunk": "@@ -110,4 +111,16 @@ public void updateToInvoice(ActionRequest request, ActionResponse response) {\n       TraceBackService.trace(response, e);\n     }\n   }\n+\n+  public void updateAnalyticDistributionWithProject(ActionRequest request, ActionResponse response)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25f4b0245d05b7400ebc6cc89cead86482110c17"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3531, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}