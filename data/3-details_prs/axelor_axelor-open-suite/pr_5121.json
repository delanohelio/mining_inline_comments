{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MzY3NjY0", "number": 5121, "title": "RM#26300 : Sales : new chart", "bodyText": "Add 2 new charts in customer dashbord (from sales):\n\nAverage markup per customer\nAvergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300", "createdAt": "2020-03-12T17:19:32Z", "url": "https://github.com/axelor/axelor-open-suite/pull/5121", "merged": true, "mergeCommit": {"oid": "781d39def5aa51c031d2290f061866a8d2dfcf9a"}, "closed": true, "closedAt": "2020-05-05T11:19:18Z", "author": {"login": "mga-axelor"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPg2BhgFqTM3ODQ3NTkzMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABceP5dkgBqjMzMDMyMTAxODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NDc1OTMw", "url": "https://github.com/axelor/axelor-open-suite/pull/5121#pullrequestreview-378475930", "createdAt": "2020-03-20T13:22:23Z", "commit": {"oid": "3ee5387c72d72d416a0fd089b814dc915fe72656"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoyMjoyM1rOF5TbSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo1MDoxNFrOF5Uelg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzMTQzMg==", "bodyText": "Use variable in repository instead of hard coded values", "url": "https://github.com/axelor/axelor-open-suite/pull/5121#discussion_r395631432", "createdAt": "2020-03-20T13:22:23Z", "author": {"login": "ale-axelor"}, "path": "axelor-sale/src/main/java/com/axelor/apps/sale/service/PartnerSaleServiceImpl.java", "diffHunk": "@@ -97,4 +102,43 @@ public PartnerSaleServiceImpl(PartnerRepository partnerRepo, AppBaseService appB\n             + \"OR (email.relatedTo2Select = 'com.axelor.apps.sale.db.SaleOrder' AND email.relatedTo2SelectId = so.id))\";\n     return JPA.em().createQuery(query).getResultList();\n   }\n+\n+  public List<Product> getProductBoughtByCustomer(Partner customer) {\n+    String domain =\n+        \"self.id in (SELECT line.product\"\n+            + \" FROM SaleOrderLine line join SaleOrder sale on line.saleOrder = sale.id\"\n+            + \" WHERE sale.statusSelect IN (3, 4)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ee5387c72d72d416a0fd089b814dc915fe72656"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzMjMwNg==", "bodyText": "Use variable in repository instead of hard coded values", "url": "https://github.com/axelor/axelor-open-suite/pull/5121#discussion_r395632306", "createdAt": "2020-03-20T13:23:51Z", "author": {"login": "ale-axelor"}, "path": "axelor-sale/src/main/java/com/axelor/apps/sale/service/PartnerSaleServiceImpl.java", "diffHunk": "@@ -97,4 +102,43 @@ public PartnerSaleServiceImpl(PartnerRepository partnerRepo, AppBaseService appB\n             + \"OR (email.relatedTo2Select = 'com.axelor.apps.sale.db.SaleOrder' AND email.relatedTo2SelectId = so.id))\";\n     return JPA.em().createQuery(query).getResultList();\n   }\n+\n+  public List<Product> getProductBoughtByCustomer(Partner customer) {\n+    String domain =\n+        \"self.id in (SELECT line.product\"\n+            + \" FROM SaleOrderLine line join SaleOrder sale on line.saleOrder = sale.id\"\n+            + \" WHERE sale.statusSelect IN (3, 4)\"\n+            + \" AND sale.clientPartner = \"\n+            + customer.getId()\n+            + \")\";\n+\n+    ProductRepository productRepo = Beans.get(ProductRepository.class);\n+    List<Product> productList = productRepo.all().filter(domain).fetch();\n+\n+    return productList;\n+  }\n+\n+  public HashMap<String, BigDecimal> getTotalSaleQuantityAndPrice(\n+      Partner customer, Product product) {\n+    String query =\n+        \"SELECT line\"\n+            + \" FROM SaleOrderLine line join SaleOrder sale on line.saleOrder = sale.id\"\n+            + \" WHERE sale.statusSelect IN (3, 4)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ee5387c72d72d416a0fd089b814dc915fe72656"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0Njk2Ng==", "bodyText": "Is this possible here to use rpc to call a method in PartnerService ? This would avoid duplicating the query.\nIf this is not possible the current way it is done is fine.", "url": "https://github.com/axelor/axelor-open-suite/pull/5121#discussion_r395646966", "createdAt": "2020-03-20T13:47:42Z", "author": {"login": "ale-axelor"}, "path": "axelor-sale/src/main/resources/views/Charts.xml", "diffHunk": "@@ -705,6 +705,55 @@\n \t\t<category key=\"_industry_sector\" type=\"text\" title=\"Industry Sector\"/>\n \t\t<series key=\"_amount\" type=\"donut\" title=\"Turnover\"/>\n \t</chart>\n+\n+\t<chart name=\"chart.margin.rate.per.customer\" title=\"Average margin rate per customer\" onInit=\"action.sale.chart.set.date\">\n+\t\t<search-fields>\n+\t\t\t<field name=\"fromDate\" title=\"From Date\" type=\"date\" x-required=\"true\"/>\n+\t\t\t<field name=\"toDate\" title=\"To Date\" type=\"date\" x-required=\"true\"/>\n+\t\t</search-fields>\n+\t\t<dataset type=\"jpql\"><![CDATA[\n+\t\t\tSELECT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ee5387c72d72d416a0fd089b814dc915fe72656"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0ODY2Mg==", "bodyText": "partner-customer-form already exists in base module. It should work if you just delete the view in base module.", "url": "https://github.com/axelor/axelor-open-suite/pull/5121#discussion_r395648662", "createdAt": "2020-03-20T13:50:14Z", "author": {"login": "ale-axelor"}, "path": "axelor-sale/src/main/resources/views/Partner.xml", "diffHunk": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n+<object-views xmlns=\"http://axelor.com/xml/ns/object-views\"\n+\t\t\t  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\t\t\t  xsi:schemaLocation=\"http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_5.2.xsd\">\n+\n+\t<form name=\"partner-customer-form\" title=\"Customer\" model=\"com.axelor.apps.base.db.Partner\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ee5387c72d72d416a0fd089b814dc915fe72656"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ee5387c72d72d416a0fd089b814dc915fe72656", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/3ee5387c72d72d416a0fd089b814dc915fe72656", "committedDate": "2020-03-12T17:15:18Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}, "afterCommit": {"oid": "7f2bf964b6d156dd9079c5a3e39780dba17c61bf", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/7f2bf964b6d156dd9079c5a3e39780dba17c61bf", "committedDate": "2020-03-23T14:33:36Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMTY0MzU3", "url": "https://github.com/axelor/axelor-open-suite/pull/5121#pullrequestreview-380164357", "createdAt": "2020-03-24T10:11:21Z", "commit": {"oid": "7f2bf964b6d156dd9079c5a3e39780dba17c61bf"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDoxNDoxMlrOF6pW-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDozNToxNFrOF6qIEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAzOTM1Mg==", "bodyText": "Directly use SUM() in the query instead of using java to sum.", "url": "https://github.com/axelor/axelor-open-suite/pull/5121#discussion_r397039352", "createdAt": "2020-03-24T10:14:12Z", "author": {"login": "ale-axelor"}, "path": "axelor-sale/src/main/java/com/axelor/apps/sale/service/PartnerSaleServiceImpl.java", "diffHunk": "@@ -97,4 +104,90 @@ public PartnerSaleServiceImpl(PartnerRepository partnerRepo, AppBaseService appB\n             + \"OR (email.relatedTo2Select = 'com.axelor.apps.sale.db.SaleOrder' AND email.relatedTo2SelectId = so.id))\";\n     return JPA.em().createQuery(query).getResultList();\n   }\n+\n+  public List<Product> getProductBoughtByCustomer(Partner customer) {\n+    String domain =\n+        \"self.id in (SELECT line.product\"\n+            + \" FROM SaleOrderLine line join SaleOrder sale on line.saleOrder = sale.id\"\n+            + \" WHERE sale.statusSelect IN (\"\n+            + SaleOrderRepository.STATUS_ORDER_CONFIRMED\n+            + \", \"\n+            + SaleOrderRepository.STATUS_ORDER_COMPLETED\n+            + \")\"\n+            + \" AND sale.clientPartner = \"\n+            + customer.getId()\n+            + \")\";\n+\n+    ProductRepository productRepo = Beans.get(ProductRepository.class);\n+    List<Product> productList = productRepo.all().filter(domain).fetch();\n+\n+    return productList;\n+  }\n+\n+  public HashMap<String, BigDecimal> getTotalSaleQuantityAndPrice(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f2bf964b6d156dd9079c5a3e39780dba17c61bf"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA1MTkyMg==", "bodyText": "In all java controller, every process must be inside a : try { // Something } catch(Exception e) { TraceBackService.trace(response, e); }.", "url": "https://github.com/axelor/axelor-open-suite/pull/5121#discussion_r397051922", "createdAt": "2020-03-24T10:35:14Z", "author": {"login": "ale-axelor"}, "path": "axelor-sale/src/main/java/com/axelor/apps/sale/web/PartnerSaleController.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Axelor Business Solutions\n+ *\n+ * Copyright (C) 2020 Axelor (<http://axelor.com>).\n+ *\n+ * This program is free software: you can redistribute it and/or  modify\n+ * it under the terms of the GNU Affero General Public License, version 3,\n+ * as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.axelor.apps.sale.web;\n+\n+import com.axelor.apps.base.db.Partner;\n+import com.axelor.apps.base.db.Product;\n+import com.axelor.apps.base.db.repo.PartnerRepository;\n+import com.axelor.apps.sale.service.PartnerSaleService;\n+import com.axelor.exception.service.TraceBackService;\n+import com.axelor.inject.Beans;\n+import com.axelor.rpc.ActionRequest;\n+import com.axelor.rpc.ActionResponse;\n+import com.axelor.rpc.Context;\n+import com.google.inject.Singleton;\n+import java.math.BigDecimal;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+@Singleton\n+public class PartnerSaleController {\n+\n+  public void displayValues(ActionRequest request, ActionResponse response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f2bf964b6d156dd9079c5a3e39780dba17c61bf"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f2bf964b6d156dd9079c5a3e39780dba17c61bf", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/7f2bf964b6d156dd9079c5a3e39780dba17c61bf", "committedDate": "2020-03-23T14:33:36Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}, "afterCommit": {"oid": "ec78f4d6d9ff25b450485892422d72484b4934aa", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/ec78f4d6d9ff25b450485892422d72484b4934aa", "committedDate": "2020-03-27T12:24:40Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTIwOTE4", "url": "https://github.com/axelor/axelor-open-suite/pull/5121#pullrequestreview-382920918", "createdAt": "2020-03-27T14:42:52Z", "commit": {"oid": "ec78f4d6d9ff25b450485892422d72484b4934aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNDo0Mjo1M1rOF80QNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNDo0Mjo1M1rOF80QNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMxNDk5OQ==", "bodyText": "divide must always have a roundingmode argument and a scale to avoid throwing exception if the exact quotient cannot be represented", "url": "https://github.com/axelor/axelor-open-suite/pull/5121#discussion_r399314999", "createdAt": "2020-03-27T14:42:53Z", "author": {"login": "ale-axelor"}, "path": "axelor-sale/src/main/java/com/axelor/apps/sale/web/PartnerSaleController.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Axelor Business Solutions\n+ *\n+ * Copyright (C) 2020 Axelor (<http://axelor.com>).\n+ *\n+ * This program is free software: you can redistribute it and/or  modify\n+ * it under the terms of the GNU Affero General Public License, version 3,\n+ * as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.axelor.apps.sale.web;\n+\n+import com.axelor.apps.base.db.Partner;\n+import com.axelor.apps.base.db.Product;\n+import com.axelor.apps.base.db.repo.PartnerRepository;\n+import com.axelor.apps.sale.service.PartnerSaleService;\n+import com.axelor.exception.service.TraceBackService;\n+import com.axelor.inject.Beans;\n+import com.axelor.rpc.ActionRequest;\n+import com.axelor.rpc.ActionResponse;\n+import com.axelor.rpc.Context;\n+import com.google.inject.Singleton;\n+import java.math.BigDecimal;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+@Singleton\n+public class PartnerSaleController {\n+\n+  public void displayValues(ActionRequest request, ActionResponse response) {\n+    Partner customer = request.getContext().asType(Partner.class);\n+\n+    try {\n+\n+      customer = Beans.get(PartnerRepository.class).find(customer.getId());\n+\n+      SortedSet<Map<String, Object>> saleDetailsByProduct =\n+          new TreeSet<Map<String, Object>>(Comparator.comparing(m -> (String) m.get(\"name\")));\n+\n+      PartnerSaleService partnerSaleService = Beans.get(PartnerSaleService.class);\n+      List<Product> productList = partnerSaleService.getProductBoughtByCustomer(customer);\n+\n+      if (productList.isEmpty()) {\n+        response.setAttr(\"$saleDetailsByProduct\", \"hidden\", true);\n+        return;\n+      }\n+\n+      response.setAttr(\"$saleDetailsByProduct\", \"hidden\", false);\n+\n+      HashMap<String, BigDecimal> qtyAndPrice;\n+\n+      for (Product product : productList) {\n+        qtyAndPrice = partnerSaleService.getTotalSaleQuantityAndPrice(customer, product);\n+        Map<String, Object> map = new HashMap<String, Object>();\n+        map.put(\"name\", product.getName());\n+        map.put(\"$quantitySold\", qtyAndPrice.get(\"qty\"));\n+        map.put(\"$totalPrice\", qtyAndPrice.get(\"price\"));\n+        map.put(\"$averagePrice\", qtyAndPrice.get(\"price\").divide(qtyAndPrice.get(\"qty\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec78f4d6d9ff25b450485892422d72484b4934aa"}, "originalPosition": 69}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec78f4d6d9ff25b450485892422d72484b4934aa", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/ec78f4d6d9ff25b450485892422d72484b4934aa", "committedDate": "2020-03-27T12:24:40Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}, "afterCommit": {"oid": "5ad68b86e39b53f4bfd0e2a2335bcb6678de074e", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/5ad68b86e39b53f4bfd0e2a2335bcb6678de074e", "committedDate": "2020-04-06T13:29:34Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ad68b86e39b53f4bfd0e2a2335bcb6678de074e", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/5ad68b86e39b53f4bfd0e2a2335bcb6678de074e", "committedDate": "2020-04-06T13:29:34Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}, "afterCommit": {"oid": "fcc87affb1ebcadb63852e5709f23f5176b06348", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/fcc87affb1ebcadb63852e5709f23f5176b06348", "committedDate": "2020-05-04T15:06:16Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fcc87affb1ebcadb63852e5709f23f5176b06348", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/fcc87affb1ebcadb63852e5709f23f5176b06348", "committedDate": "2020-05-04T15:06:16Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}, "afterCommit": {"oid": "5c17aeabc158cfa557f2fe25efe7ad1b17f188d2", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/5c17aeabc158cfa557f2fe25efe7ad1b17f188d2", "committedDate": "2020-05-05T08:33:23Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8521531205b62af604e722969d3538bfcca6b2a6", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/8521531205b62af604e722969d3538bfcca6b2a6", "committedDate": "2020-05-05T08:35:00Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c17aeabc158cfa557f2fe25efe7ad1b17f188d2", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/5c17aeabc158cfa557f2fe25efe7ad1b17f188d2", "committedDate": "2020-05-05T08:33:23Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}, "afterCommit": {"oid": "8521531205b62af604e722969d3538bfcca6b2a6", "author": {"user": {"login": "mga-axelor", "name": null}}, "url": "https://github.com/axelor/axelor-open-suite/commit/8521531205b62af604e722969d3538bfcca6b2a6", "committedDate": "2020-05-05T08:35:00Z", "message": "Sales : new chart\n\nAdd 2 new charts in customer dashbord (from sales):\n- Average markup per customer\n- Avergae margin rate per customer\nOn the customer form view added a new indicator of products bought by the customer\nAdd translations\n\nRM#26300"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1984, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}