{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNTA1MzE5", "number": 2391, "title": "Add Micrometer AutoConfiguration", "bodyText": "Currently, project-id has to be provided in order to make the app works. This auto-configuration provides the support to set a specific project-id and credentials or spin up with the project's default values.", "createdAt": "2020-05-25T01:41:23Z", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391", "merged": true, "mergeCommit": {"oid": "7498d89ceafbe0ca050572e371001b1637b60987"}, "closed": true, "closedAt": "2020-06-01T13:34:35Z", "author": {"login": "eddumelendez"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckl9HiAH2gAyNDIyNTA1MzE5OmIwYjY4ZDZlOWY4YzZlNDViNTdhZjgwOTljYzVmNWEzZDI1NjgxNTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnAVrAAFqTQyMTg0NDk1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b0b68d6e9f8c6e45b57af8099cc5f5a3d2568152", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b0b68d6e9f8c6e45b57af8099cc5f5a3d2568152", "committedDate": "2020-05-25T01:40:36Z", "message": "Add Micrometer AutoConfiguration\n\nThis auto-configuration allows to auto-detect the gcp projectId and\ncredentialsProvider."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f64c63f5f192822b65fd33f46c4e145d74320acc", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/f64c63f5f192822b65fd33f46c4e145d74320acc", "committedDate": "2020-05-25T01:41:06Z", "message": "Add configuration properties for metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "febc0e9e7397f1f18f288f0f48256d5fa86d6bdd", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/febc0e9e7397f1f18f288f0f48256d5fa86d6bdd", "committedDate": "2020-05-25T04:01:02Z", "message": "Add spring-cloud-gcp-starter-metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c14609a68fb2922a06adcabffcca2bdaf523741", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/0c14609a68fb2922a06adcabffcca2bdaf523741", "committedDate": "2020-05-25T04:32:56Z", "message": "Add docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMTMzMDcx", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#pullrequestreview-420133071", "createdAt": "2020-05-28T13:56:31Z", "commit": {"oid": "0c14609a68fb2922a06adcabffcca2bdaf523741"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNTQ5MDM0", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#pullrequestreview-420549034", "createdAt": "2020-05-28T23:01:11Z", "commit": {"oid": "0c14609a68fb2922a06adcabffcca2bdaf523741"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzowMToxMVrOGcJjxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzowMzoxNFrOGcJmgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2OTkyNg==", "bodyText": "should this have havingValue = \"true\"?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432169926", "createdAt": "2020-05-28T23:01:11Z", "author": {"login": "saturnism"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.metrics;\n+\n+import java.io.IOException;\n+\n+import com.google.api.gax.core.CredentialsProvider;\n+import io.micrometer.core.instrument.Clock;\n+import io.micrometer.core.instrument.step.StepMeterRegistry;\n+import io.micrometer.stackdriver.StackdriverConfig;\n+\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverMetricsExportAutoConfiguration;\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.cloud.gcp.core.DefaultCredentialsProvider;\n+import org.springframework.cloud.gcp.core.GcpProjectIdProvider;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Provides auto-detection for project.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+@Configuration\n+@AutoConfigureBefore(StackdriverMetricsExportAutoConfiguration.class)\n+@ConditionalOnClass({StepMeterRegistry.class, StackdriverConfig.class})\n+@ConditionalOnBean(Clock.class)\n+@EnableConfigurationProperties({GcpMetricsProperties.class, StackdriverProperties.class})\n+@ConditionalOnProperty(value = \"spring.cloud.gcp.metrics.enabled\", matchIfMissing = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c14609a68fb2922a06adcabffcca2bdaf523741"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MDYyNQ==", "bodyText": "do we also need to produce the StackdriverMeterRegistry? Or has Spring Boot Actuator been updated to produce it automatically? (It was an open issue)", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432170625", "createdAt": "2020-05-28T23:03:14Z", "author": {"login": "saturnism"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.metrics;\n+\n+import java.io.IOException;\n+\n+import com.google.api.gax.core.CredentialsProvider;\n+import io.micrometer.core.instrument.Clock;\n+import io.micrometer.core.instrument.step.StepMeterRegistry;\n+import io.micrometer.stackdriver.StackdriverConfig;\n+\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverMetricsExportAutoConfiguration;\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.cloud.gcp.core.DefaultCredentialsProvider;\n+import org.springframework.cloud.gcp.core.GcpProjectIdProvider;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Provides auto-detection for project.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+@Configuration\n+@AutoConfigureBefore(StackdriverMetricsExportAutoConfiguration.class)\n+@ConditionalOnClass({StepMeterRegistry.class, StackdriverConfig.class})\n+@ConditionalOnBean(Clock.class)\n+@EnableConfigurationProperties({GcpMetricsProperties.class, StackdriverProperties.class})\n+@ConditionalOnProperty(value = \"spring.cloud.gcp.metrics.enabled\", matchIfMissing = true)\n+public class GcpStackdriverMetricsAutoConfiguration {\n+\n+\tprivate final StackdriverProperties stackdriverProperties;\n+\n+\tprivate final String projectId;\n+\n+\tprivate final CredentialsProvider credentialsProvider;\n+\n+\tpublic GcpStackdriverMetricsAutoConfiguration(GcpMetricsProperties gcpMetricsProperties,\n+\t\t\tStackdriverProperties stackdriverProperties, GcpProjectIdProvider gcpProjectIdProvider,\n+\t\t\tCredentialsProvider credentialsProvider) throws IOException {\n+\t\tthis.stackdriverProperties = stackdriverProperties;\n+\t\tthis.projectId = (gcpMetricsProperties.getProjectId() != null)\n+\t\t\t\t? gcpMetricsProperties.getProjectId() : gcpProjectIdProvider.getProjectId();\n+\t\tthis.credentialsProvider = gcpMetricsProperties.getCredentials().hasKey()\n+\t\t\t\t? new DefaultCredentialsProvider(gcpMetricsProperties) : credentialsProvider;\n+\t}\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean\n+\tpublic StackdriverConfig stackdriverConfig() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c14609a68fb2922a06adcabffcca2bdaf523741"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4a0c6ce243bc3cd6c71d41c2ddc9cad01c59f00", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b4a0c6ce243bc3cd6c71d41c2ddc9cad01c59f00", "committedDate": "2020-05-28T23:44:22Z", "message": "Polish docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1ced570d284864208999c4a573ab3b775e586c8", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b1ced570d284864208999c4a573ab3b775e586c8", "committedDate": "2020-05-28T23:46:02Z", "message": "Add havingValue attribute"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc124814e620595ef9d64d2822e1808f741e13a5", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/cc124814e620595ef9d64d2822e1808f741e13a5", "committedDate": "2020-05-29T01:01:40Z", "message": "Add assert to ensure meterRegistry bean is created"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjA1NjE5", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#pullrequestreview-420605619", "createdAt": "2020-05-29T02:01:35Z", "commit": {"oid": "0c14609a68fb2922a06adcabffcca2bdaf523741"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMjowMTozNVrOGcMbMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNDowODowMVrOGcOIoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxNjg4Mw==", "bodyText": "Do we need to enforce @AutoConfigureAfter on org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration, where Clock is provided?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432216883", "createdAt": "2020-05-29T02:01:35Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.metrics;\n+\n+import java.io.IOException;\n+\n+import com.google.api.gax.core.CredentialsProvider;\n+import io.micrometer.core.instrument.Clock;\n+import io.micrometer.core.instrument.step.StepMeterRegistry;\n+import io.micrometer.stackdriver.StackdriverConfig;\n+\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverMetricsExportAutoConfiguration;\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.cloud.gcp.core.DefaultCredentialsProvider;\n+import org.springframework.cloud.gcp.core.GcpProjectIdProvider;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Provides auto-detection for project.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+@Configuration\n+@AutoConfigureBefore(StackdriverMetricsExportAutoConfiguration.class)\n+@ConditionalOnClass({StepMeterRegistry.class, StackdriverConfig.class})\n+@ConditionalOnBean(Clock.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c14609a68fb2922a06adcabffcca2bdaf523741"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI0NDg5Ng==", "bodyText": "Users would also need a dependency on actuator starter; otherwise Clock bean will not be autoconfigured, preventing our autoconfig from triggering.\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-actuator</artifactId>\n    </dependency>\n\nOr should this be in the starter, since spring-cloud-gcp-starter-metrics is not useful without actuator?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432244896", "createdAt": "2020-05-29T04:08:01Z", "author": {"login": "elefeint"}, "path": "docs/src/main/asciidoc/metrics.adoc", "diffHunk": "@@ -0,0 +1,45 @@\n+== Stackdriver Monitoring\n+\n+Google Cloud Platform provides a service called https://cloud.google.com/monitoring/[Stackdriver Monitoring], and https://micrometer.io/docs/registry/stackdriver[Micrometer] can be used with it to easily instrument Spring Boot applications for observability.\n+\n+Spring Boot already provides auto-configuration for Stackdriver. This module enables to auto-detect the `project-id` and `credentials`. Also, it can be customized.\n+\n+Maven coordinates, using <<getting-started.adoc#_bill_of_materials, Spring Cloud GCP BOM>>:\n+\n+[source,xml]\n+----\n+<dependency>\n+    <groupId>org.springframework.cloud</groupId>\n+    <artifactId>spring-cloud-gcp-starter-metrics</artifactId>\n+</dependency>\n+----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc124814e620595ef9d64d2822e1808f741e13a5"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e612ffc60d54f476f50cbb3c59cce606a04c2f9", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/2e612ffc60d54f476f50cbb3c59cce606a04c2f9", "committedDate": "2020-05-29T14:00:11Z", "message": "Mention spring-boot-starter-actuator dependency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDA2MzA3", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#pullrequestreview-421006307", "createdAt": "2020-05-29T14:26:42Z", "commit": {"oid": "2e612ffc60d54f476f50cbb3c59cce606a04c2f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDoyNjo0MlrOGcfD5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDoyNjo0MlrOGcfD5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyMjIxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This starter depends on `org.springframework.boot:spring-boot-starter-actuator` dependency. Make sure the dependency is being declared.\n          \n          \n            \n            This starter requires `org.springframework.boot:spring-boot-starter-actuator` dependency to activate. Make sure the dependency is being declared.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432522214", "createdAt": "2020-05-29T14:26:42Z", "author": {"login": "elefeint"}, "path": "docs/src/main/asciidoc/metrics.adoc", "diffHunk": "@@ -26,6 +26,26 @@ dependencies {\n You must enable Stackdriver Monitoring API from the Google Cloud Console in order to capture metrics.\n Navigate to the https://console.cloud.google.com/apis/api/monitoring.googleapis.com/overview[Stackdriver Monitoring API] for your project and make sure it\u2019s enabled.\n \n+This starter depends on `org.springframework.boot:spring-boot-starter-actuator` dependency. Make sure the dependency is being declared.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e612ffc60d54f476f50cbb3c59cce606a04c2f9"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDA2ODU5", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#pullrequestreview-421006859", "createdAt": "2020-05-29T14:27:18Z", "commit": {"oid": "2e612ffc60d54f476f50cbb3c59cce606a04c2f9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3da4e2829a630bffc1059dcd0be8799706f89495", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/3da4e2829a630bffc1059dcd0be8799706f89495", "committedDate": "2020-05-29T16:28:38Z", "message": "Update docs\n\nCo-authored-by: Elena Felder <41136058+elefeint@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjMzMzg0", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#pullrequestreview-421233384", "createdAt": "2020-05-29T19:33:55Z", "commit": {"oid": "3da4e2829a630bffc1059dcd0be8799706f89495"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzcyOTgy", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#pullrequestreview-421372982", "createdAt": "2020-05-30T03:12:04Z", "commit": {"oid": "3da4e2829a630bffc1059dcd0be8799706f89495"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMzoxMjowNFrOGcwTrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMzoxMjowNFrOGcwTrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwNDc4MA==", "bodyText": "Need to add @since 1.2.4. Same goes for all other new class files.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432804780", "createdAt": "2020-05-30T03:12:04Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpMetricsProperties.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.metrics;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.context.properties.NestedConfigurationProperty;\n+import org.springframework.cloud.gcp.core.Credentials;\n+import org.springframework.cloud.gcp.core.CredentialsSupplier;\n+import org.springframework.cloud.gcp.core.GcpScope;\n+\n+@ConfigurationProperties(prefix = \"spring.cloud.gcp.metrics\")\n+public class GcpMetricsProperties implements CredentialsSupplier {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3da4e2829a630bffc1059dcd0be8799706f89495"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb40df5997f30835adbba3b640b5cbb09c4f8a9f", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/eb40df5997f30835adbba3b640b5cbb09c4f8a9f", "committedDate": "2020-05-30T16:06:17Z", "message": "Add since in javadocs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxODQ0OTUz", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#pullrequestreview-421844953", "createdAt": "2020-06-01T13:32:49Z", "commit": {"oid": "eb40df5997f30835adbba3b640b5cbb09c4f8a9f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 462, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}