{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzODcwODcx", "number": 2471, "title": "fix null handling for id in query by example", "bodyText": "fixes #2470", "createdAt": "2020-07-20T21:50:42Z", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2471", "merged": true, "mergeCommit": {"oid": "48a5813b7a3537438cb0de37f71eb4fc183eea33"}, "closed": true, "closedAt": "2020-07-21T21:19:02Z", "author": {"login": "dmitry-s"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc24yQPAH2gAyNDUzODcwODcxOmVkY2IwODE1MGQyMDFkNDAwNTk5Y2U2NGI1YmU2OWJlMDQyNjMyNmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3MggagFqTQ1MjgxNjAzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "edcb08150d201d400599ce64b5be69be0426326b", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/edcb08150d201d400599ce64b5be69be0426326b", "committedDate": "2020-07-20T21:47:34Z", "message": "fix null handling for id in query by example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDcwODQ4", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2471#pullrequestreview-452070848", "createdAt": "2020-07-21T01:49:05Z", "commit": {"oid": "edcb08150d201d400599ce64b5be69be0426326b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNDYwNDIw", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2471#pullrequestreview-452460420", "createdAt": "2020-07-21T13:32:43Z", "commit": {"oid": "edcb08150d201d400599ce64b5be69be0426326b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bf279d7fa1135764545c8ffe4c791a98a4ef243", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/5bf279d7fa1135764545c8ffe4c791a98a4ef243", "committedDate": "2020-07-21T16:58:21Z", "message": "refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjc3NTI2", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2471#pullrequestreview-452677526", "createdAt": "2020-07-21T17:28:13Z", "commit": {"oid": "5bf279d7fa1135764545c8ffe4c791a98a4ef243"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzoyODoxNFrOG1CbPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzoyOToyMlrOG1Cd5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NzQ1NQ==", "bodyText": "So the check for value instanceof NullValue is not needed?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2471#discussion_r458267455", "createdAt": "2020-07-21T17:28:14Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/core/DatastoreTemplate.java", "diffHunk": "@@ -765,31 +767,13 @@ private DatastoreReaderWriter getDatastoreReadWriter() {\n \t\tmatcherAccessor.getPropertySpecifiers();\n \t\tLinkedList<StructuredQuery.Filter> filters = new LinkedList<>();\n \t\tpersistentEntity.doWithColumnBackedProperties((persistentProperty) -> {\n-\n-\t\t\tif (!example.getMatcher().isIgnoredPath(persistentProperty.getName())) {\n-\t\t\t\t// ID properties are not stored as regular fields in Datastore.\n-\t\t\t\tString fieldName = persistentProperty.getFieldName();\n-\t\t\t\tValue<?> value;\n-\t\t\t\tif (persistentProperty.isIdProperty()) {\n-\t\t\t\t\tPersistentPropertyAccessor accessor = persistentEntity.getPropertyAccessor(probe);\n-\t\t\t\t\tObject property = accessor.getProperty(persistentProperty);\n-\t\t\t\t\tvalue = property != null\n-\t\t\t\t\t\t\t\t\t? KeyValue.of(createKey(persistentEntity.kindName(), property))\n-\t\t\t\t\t\t\t\t\t: NullValue.of();\n-\t\t\t\t}\n-\t\t\t\telse {\n-\t\t\t\t\tvalue = probeEntity.getValue(fieldName);\n-\t\t\t\t}\n-\t\t\t\tif (value instanceof NullValue\n-\t\t\t\t\t\t&& example.getMatcher().getNullHandler() != ExampleMatcher.NullHandler.INCLUDE) {\n-\t\t\t\t\t//skip null value\n-\t\t\t\t\treturn;\n-\t\t\t\t}\n-\t\t\t\tfilters.add(StructuredQuery.PropertyFilter.eq(fieldName, value));\n+\t\t\tif (notIgnoredProperty(example, persistentProperty)) {\n+\t\t\t\tValue<?> value = getValue(example, probeEntity, persistentEntity, persistentProperty);\n+\t\t\t\tNullHandler nullHandler = example.getMatcher().getNullHandler();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bf279d7fa1135764545c8ffe4c791a98a4ef243"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2ODEzMw==", "bodyText": "It may be easier to read as isIgnoredProperty(), removing the negation here and putting the negation in getDatastoreReadWriter() method instead. Our brains are very used to the isBlah pattern.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2471#discussion_r458268133", "createdAt": "2020-07-21T17:29:22Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/core/DatastoreTemplate.java", "diffHunk": "@@ -799,6 +783,43 @@ private DatastoreReaderWriter getDatastoreReadWriter() {\n \t\treturn builder.build();\n \t}\n \n+\tprivate <T> Value<?> getValue(Example<T> example, FullEntity<IncompleteKey> probeEntity,\n+\t\t\t\t\tDatastorePersistentEntity<?> persistentEntity, DatastorePersistentProperty persistentProperty) {\n+\t\tValue<?> value;\n+\t\tif (persistentProperty.isIdProperty()) {\n+\t\t\tvalue = getIdValue(example, persistentEntity, persistentProperty);\n+\t\t}\n+\t\telse {\n+\t\t\tvalue = probeEntity.getValue(persistentProperty.getFieldName());\n+\t\t}\n+\t\treturn value;\n+\t}\n+\n+\tprivate <T> boolean notIgnoredProperty(Example<T> example, DatastorePersistentProperty persistentProperty) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bf279d7fa1135764545c8ffe4c791a98a4ef243"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "639030c9aeef0b96aed82a03364c54c3a8f9885d", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/639030c9aeef0b96aed82a03364c54c3a8f9885d", "committedDate": "2020-07-21T19:54:20Z", "message": "PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODE2MDM4", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2471#pullrequestreview-452816038", "createdAt": "2020-07-21T20:46:17Z", "commit": {"oid": "639030c9aeef0b96aed82a03364c54c3a8f9885d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 497, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}