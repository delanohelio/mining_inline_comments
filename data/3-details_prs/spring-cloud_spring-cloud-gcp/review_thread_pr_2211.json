{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3OTQ0MzE3", "number": 2211, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1OTowM1rODi1RQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1OTowM1rODi1RQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODUwOTQ3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/spanner.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1OTowM1rOFuTOWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1OTowM1rOFuTOWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5Mzc4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It is the recommended way to control the sort order of the results because it is not guaranteed by the `ORDER BY` clause in the SQL query.\n          \n          \n            \n            It is the recommended way to control the sort order of the results, which is not guaranteed by the `ORDER BY` clause in the SQL query.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2211#discussion_r384093787", "createdAt": "2020-02-25T19:59:03Z", "author": {"login": "elefeint"}, "path": "docs/src/main/asciidoc/spanner.adoc", "diffHunk": "@@ -1087,23 +1087,30 @@ The SQL query for the method can be mapped to repository methods in one of two w\n \n The names of the tags of the SQL correspond to the `@Param` annotated names of the method parameters.\n \n-Custom SQL query methods can accept a single `Sort` or `Pageable` parameter that is applied on top of any paging but will override any sorting in the SQL:\n+Interleaved properties are loaded eagerly, unless they are annotated with `@Interleaved(lazy = true)`.\n+\n+Custom SQL query methods can accept a single `Sort` or `Pageable` parameter that is applied on top of the specified custom query.\n+It is the recommended way to control the sort order of the results because it is not guaranteed by the `ORDER BY` clause in the SQL query.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f8c555f10229ea550e0199854bba458de7ea17"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2254, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}