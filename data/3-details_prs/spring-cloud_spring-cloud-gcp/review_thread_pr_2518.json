{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MzU4OTk4", "number": 2518, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjoyNzoyNlrOEiUFJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMjoyOToxMVrOEjZSBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDE2MDM5OnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/convert/StructAccessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjoyNzoyNlrOHQH3ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjoyNzoyNlrOHQH3ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2ODE5NQ==", "bodyText": "This looks like a duplicate of the above map, but there's probably some obscure reason for it. :)", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2518#discussion_r486668195", "createdAt": "2020-09-10T22:27:26Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/convert/StructAccessor.java", "diffHunk": "@@ -91,6 +94,7 @@\n \t\t\t\t.put(double[].class, AbstractStructReader::getDoubleArray)\n \t\t\t\t.put(long[].class, AbstractStructReader::getLongArray)\n \t\t\t\t.put(boolean[].class, AbstractStructReader::getBooleanArray)\n+\t\t\t\t.put(BigDecimal.class, AbstractStructReader::getBigDecimal)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "653f7609722bc4e4f6e8057b4764df3cb72852dd"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDE2NzM5OnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-spanner/src/test/java/org/springframework/cloud/gcp/data/spanner/repository/query/SpannerStatementQueryTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjozMDozMlrOHQH7zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjozMDozMlrOHQH7zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2OTI2Mg==", "bodyText": "price is actually a perfect field to use BigDecimal for.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2518#discussion_r486669262", "createdAt": "2020-09-10T22:30:32Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-spanner/src/test/java/org/springframework/cloud/gcp/data/spanner/repository/query/SpannerStatementQueryTests.java", "diffHunk": "@@ -100,26 +102,28 @@ public void compoundNameConventionTest() throws NoSuchMethodException {\n \t\twhen(this.queryMethod.getName()).thenReturn(\n \t\t\t\t\"findTop3DistinctByActionIgnoreCaseAndSymbolOrTraderIdAndPriceLessThanOrPriceGreater\"\n \t\t\t\t\t\t+ \"ThanEqualAndIdIsNotNullAndTraderIdIsNullAndTraderIdLikeAndPriceTrueAndPriceFalse\"\n-\t\t\t\t\t\t+ \"AndPriceGreaterThanAndPriceLessThanEqualAndPriceInOrderByIdDesc\");\n+\t\t\t\t\t\t+ \"AndPriceGreaterThanAndPriceLessThanEqualAndPriceIn\"\n+\t\t\t\t\t\t+ \"AndValueLessThanOrderByIdDesc\");\n \t\tthis.partTreeSpannerQuery = spy(createQuery());\n \n \t\tObject[] params = new Object[] { Trade.Action.BUY, \"abcd\", \"abc123\",\n \t\t\t\t8, // an int is not a natively supported type, and is intentionally used to use custom\n \t\t\t\t\t// converters\n \t\t\t\t3.33, \"ignored\",\n-\t\t\t\t\"ignored\", \"blahblah\", \"ignored\", \"ignored\", 1.11, 2.22, Arrays.asList(1, 2) };\n+\t\t\t\t\"ignored\", \"blahblah\", \"ignored\", \"ignored\", 1.11, 2.22, Arrays.asList(1, 2), BigDecimal.ONE };\n \n \t\twhen(this.spannerTemplate.query((Class<Object>) any(), any(), any()))\n \t\t\t\t.thenAnswer((invocation) -> {\n \t\t\t\t\tStatement statement = invocation.getArgument(1);\n \n \t\t\t\t\tString expectedQuery =\n-\t\t\t\t\t\t\t\"SELECT DISTINCT shares, trader_id, ticker, price, action, id \"\n+\t\t\t\t\t\t\t\"SELECT DISTINCT shares, trader_id, ticker, price, action, id, value \"\n \t\t\t\t\t\t\t\t\t+ \"FROM trades WHERE ( LOWER(action)=LOWER(@tag0) \"\n \t\t\t\t\t\t\t\t\t+ \"AND ticker=@tag1 ) OR \"\n \t\t\t\t\t\t\t\t\t+ \"( trader_id=@tag2 AND price<@tag3 ) OR ( price>=@tag4 AND id<>NULL AND \"\n \t\t\t\t\t\t\t\t\t+ \"trader_id=NULL AND trader_id LIKE @tag7 AND price=TRUE AND price=FALSE AND \"\n-\t\t\t\t\t\t\t\t\t+ \"price>@tag10 AND price<=@tag11 AND price IN UNNEST(@tag12) ) ORDER BY id DESC LIMIT 3\";\n+\t\t\t\t\t\t\t\t\t+ \"price>@tag10 AND price<=@tag11 AND price IN UNNEST(@tag12) \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "653f7609722bc4e4f6e8057b4764df3cb72852dd"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDE3MDM0OnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/convert/StructAccessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjozMTo0N1rOHQH9bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjozMTo0N1rOHQH9bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2OTY3Ng==", "bodyText": "same nit -- should this go before the primitive arrays?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2518#discussion_r486669676", "createdAt": "2020-09-10T22:31:47Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/convert/StructAccessor.java", "diffHunk": "@@ -91,6 +94,7 @@\n \t\t\t\t.put(double[].class, AbstractStructReader::getDoubleArray)\n \t\t\t\t.put(long[].class, AbstractStructReader::getLongArray)\n \t\t\t\t.put(boolean[].class, AbstractStructReader::getBooleanArray)\n+\t\t\t\t.put(BigDecimal.class, AbstractStructReader::getBigDecimal)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "653f7609722bc4e4f6e8057b4764df3cb72852dd"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDE3MzM4OnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/convert/StructAccessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjozMzowM1rOHQH_PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjozMzowM1rOHQH_PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3MDE0MA==", "bodyText": "nit: Should this go to before array types?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2518#discussion_r486670140", "createdAt": "2020-09-10T22:33:03Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/convert/StructAccessor.java", "diffHunk": "@@ -71,6 +73,7 @@\n \t\t\t\t.put(double[].class, AbstractStructReader::getDoubleArray)\n \t\t\t\t.put(long[].class, AbstractStructReader::getLongArray)\n \t\t\t\t.put(boolean[].class, AbstractStructReader::getBooleanArray)\n+\t\t\t\t.put(BigDecimal.class, AbstractStructReader::getBigDecimal)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "653f7609722bc4e4f6e8057b4764df3cb72852dd"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTQ5ODI4OnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/util/Util.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMjoyOToxMVrOHRuNZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMjoyOToxMVrOHRuNZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0NDkzMg==", "bodyText": "This is unrelated. Can we please put it in a separate PR?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2518#discussion_r488344932", "createdAt": "2020-09-15T02:29:11Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/util/Util.java", "diffHunk": "@@ -27,7 +25,20 @@ private Util() {\n \t}\n \n \tpublic static String extractDatabasePath(String parent) {\n-\t\treturn parent.substring(0, StringUtils.ordinalIndexOf(parent, \"/\", 4));\n+\t\t//the parent looks like this: projects/{project_id}/databases/{database_id}/...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "907b613477ad252e7718cfbf9d63e2540274eff9"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2052, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}