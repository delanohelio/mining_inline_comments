{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDEzNTM2", "number": 2136, "title": "retrieve only one key field for existsById", "bodyText": "fixes #2127", "createdAt": "2020-01-24T20:58:49Z", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2136", "merged": true, "mergeCommit": {"oid": "0410a54fbae23edcc50863f6201dba9aeb51cfe9"}, "closed": true, "closedAt": "2020-01-28T22:19:21Z", "author": {"login": "dmitry-s"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9lW2GgH2gAyMzY3MDEzNTM2OmIzNTAzNWM3MGU3MTU5ODlmMjYyN2NlY2Q0MzUxZDg3OWYxNjIzZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-4wnSgFqTM0OTczODM3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b35035c70e715989f2627cecd4351d879f1623d8", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b35035c70e715989f2627cecd4351d879f1623d8", "committedDate": "2020-01-24T20:55:45Z", "message": "retrieve only one key field for existById"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjI2MjIz", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2136#pullrequestreview-348226223", "createdAt": "2020-01-24T21:10:10Z", "commit": {"oid": "b35035c70e715989f2627cecd4351d879f1623d8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToxMDoxMFrOFhqegw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToxMDoxMFrOFhqegw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0MzI2Nw==", "bodyText": "ResultSet is not closed in the \"finally\" section\nThe jvadoc says \"...Calling {@code close()} is also allowed if the result set has been fully consumed, so a recommended practice is to unconditionally close the result set once it is done  with, typically using a try-with-resources construc...\"", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2136#discussion_r370843267", "createdAt": "2020-01-24T21:10:10Z", "author": {"login": "s13o"}, "path": "spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java", "diffHunk": "@@ -167,6 +167,26 @@ public long executePartitionedDmlStatement(Statement statement) {\n \t\treturn read(entityClass, key, null);\n \t}\n \n+\t@Override\n+\tpublic <T> boolean existsById(Class<T> entityClass, Key key) {\n+\t\tAssert.notNull(key, \"A non-null key is required.\");\n+\n+\t\tSpannerPersistentEntity<?> persistentEntity = this.mappingContext.getPersistentEntity(entityClass);\n+\t\tString columnName = getPrimaryKeyColumnName(persistentEntity);\n+\t\tKeySet keys = KeySet.singleKey(key);\n+\n+\t\tResultSet resultSet = executeRead(persistentEntity.tableName(), keys, Collections.singleton(columnName), null);\n+\t\tmaybeEmitEvent(new AfterReadEvent(Collections.emptyList(), keys, null));\n+\t\treturn resultSet.next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b35035c70e715989f2627cecd4351d879f1623d8"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjI1Njcx", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2136#pullrequestreview-348225671", "createdAt": "2020-01-24T21:09:03Z", "commit": {"oid": "b35035c70e715989f2627cecd4351d879f1623d8"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTowOTowM1rOFhqdBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTowOTowM1rOFhqdBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0Mjg4Ng==", "bodyText": "Do we use this anywhere else? Seems like it would be a common thing.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2136#discussion_r370842886", "createdAt": "2020-01-24T21:09:03Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java", "diffHunk": "@@ -167,6 +167,26 @@ public long executePartitionedDmlStatement(Statement statement) {\n \t\treturn read(entityClass, key, null);\n \t}\n \n+\t@Override\n+\tpublic <T> boolean existsById(Class<T> entityClass, Key key) {\n+\t\tAssert.notNull(key, \"A non-null key is required.\");\n+\n+\t\tSpannerPersistentEntity<?> persistentEntity = this.mappingContext.getPersistentEntity(entityClass);\n+\t\tString columnName = getPrimaryKeyColumnName(persistentEntity);\n+\t\tKeySet keys = KeySet.singleKey(key);\n+\n+\t\tResultSet resultSet = executeRead(persistentEntity.tableName(), keys, Collections.singleton(columnName), null);\n+\t\tmaybeEmitEvent(new AfterReadEvent(Collections.emptyList(), keys, null));\n+\t\treturn resultSet.next();\n+\t}\n+\n+\tprivate String getPrimaryKeyColumnName(SpannerPersistentEntity<?> persistentEntity) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b35035c70e715989f2627cecd4351d879f1623d8"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6613adc02a21b68d3f03cb240f08ed088395a5c9", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/6613adc02a21b68d3f03cb240f08ed088395a5c9", "committedDate": "2020-01-28T20:16:51Z", "message": "PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "538c78d0ac501530d04b6fa5426d394a3618b233", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/538c78d0ac501530d04b6fa5426d394a3618b233", "committedDate": "2020-01-28T22:04:50Z", "message": "PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NzM4Mzc4", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2136#pullrequestreview-349738378", "createdAt": "2020-01-28T22:06:02Z", "commit": {"oid": "538c78d0ac501530d04b6fa5426d394a3618b233"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 507, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}