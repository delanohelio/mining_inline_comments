{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjA5NzEx", "number": 2355, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo0OToxMVrOD5aWJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODozNDo0N1rOD5h43Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTI3MDc2OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/pubsub.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo0OToxMVrOGQqTAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODoyNDoxNVrOGQ2GEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyMzM5NA==", "bodyText": "I'd remove \"are available to\" (yes, I know I wrote it).", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420123394", "createdAt": "2020-05-05T13:49:11Z", "author": {"login": "elefeint"}, "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false\n |===\n \n-The following properties are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.\n+==== GRPC Connection Settings\n+\n+The Pub/Sub API uses the https://cloud.google.com/pubsub/docs/reference/service_apis_overview#grpc_api[GRPC] protocol to send API requests to the Pub/Sub service.\n+This section describes configuration options for customizing the GRPC behavior.\n+\n+NOTE: The properties that refer to `retry` are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d8478d952ec39b930acaa0516b1a1ea0403a95"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNjY4OQ==", "bodyText": "Done.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420316689", "createdAt": "2020-05-05T18:24:15Z", "author": {"login": "dzou"}, "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false\n |===\n \n-The following properties are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.\n+==== GRPC Connection Settings\n+\n+The Pub/Sub API uses the https://cloud.google.com/pubsub/docs/reference/service_apis_overview#grpc_api[GRPC] protocol to send API requests to the Pub/Sub service.\n+This section describes configuration options for customizing the GRPC behavior.\n+\n+NOTE: The properties that refer to `retry` are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyMzM5NA=="}, "originalCommit": {"oid": "00d8478d952ec39b930acaa0516b1a1ea0403a95"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTMwMTc4OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/pubsub.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1NTo0MlrOGQqmZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODoyNDo1NlrOGQ2HjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyODM1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: The properties that refer to `retry` are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.\n          \n          \n            \n            NOTE: The properties that refer to `retry` are available to control retries in case of transient failures during the gRPC call to Cloud Pub/Sub server.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420128357", "createdAt": "2020-05-05T13:55:42Z", "author": {"login": "meltsufin"}, "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false\n |===\n \n-The following properties are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.\n+==== GRPC Connection Settings\n+\n+The Pub/Sub API uses the https://cloud.google.com/pubsub/docs/reference/service_apis_overview#grpc_api[GRPC] protocol to send API requests to the Pub/Sub service.\n+This section describes configuration options for customizing the GRPC behavior.\n+\n+NOTE: The properties that refer to `retry` are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d8478d952ec39b930acaa0516b1a1ea0403a95"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNzA2OQ==", "bodyText": "Done.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420317069", "createdAt": "2020-05-05T18:24:56Z", "author": {"login": "dzou"}, "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false\n |===\n \n-The following properties are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.\n+==== GRPC Connection Settings\n+\n+The Pub/Sub API uses the https://cloud.google.com/pubsub/docs/reference/service_apis_overview#grpc_api[GRPC] protocol to send API requests to the Pub/Sub service.\n+This section describes configuration options for customizing the GRPC behavior.\n+\n+NOTE: The properties that refer to `retry` are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyODM1Nw=="}, "originalCommit": {"oid": "00d8478d952ec39b930acaa0516b1a1ea0403a95"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjUwNjUzOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/pubsub.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODozNDo0N1rOGQ2fYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODo1NjowNVrOGQ3PgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyMzE3MA==", "bodyText": "Why the extra space here before the \"|\" but not in the previous items?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420323170", "createdAt": "2020-05-05T18:34:47Z", "author": {"login": "dmitry-s"}, "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0c790919f2ba8e6f17917ab7d375a7c6789983"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNTQ4OQ==", "bodyText": "Fixed.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420335489", "createdAt": "2020-05-05T18:56:05Z", "author": {"login": "dzou"}, "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyMzE3MA=="}, "originalCommit": {"oid": "3d0c790919f2ba8e6f17917ab7d375a7c6789983"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2111, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}