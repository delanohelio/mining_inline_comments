{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNTIyOTY3", "number": 2186, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTo0MDowNlrODeIStA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTo0NzoyNVrODeIaeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTE5NzMyOnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/query/GqlDatastoreQuery.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTo0MDowNlrOFnIHlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTo0MDowNlrOFnIHlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3MTc5OQ==", "bodyText": "found could be null as Sonar points out.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2186#discussion_r376571799", "createdAt": "2020-02-07T19:40:06Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/query/GqlDatastoreQuery.java", "diffHunk": "@@ -169,6 +157,19 @@ else if (this.queryMethod.isCollectionQuery()) {\n \t\treturn result;\n \t}\n \n+\tprivate Object buildPageOrSlice(Object[] parameters, ParsedQueryWithTagsAndValues parsedQueryWithTagsAndValues,\n+\t\t\tDatastoreResultsIterable found) {\n+\t\tPageable pageableParam =\n+\t\t\t\tnew ParametersParameterAccessor(getQueryMethod().getParameters(), parameters).getPageable();\n+\t\tList resultsList = found == null ? Collections.emptyList()\n+\t\t\t\t: (List) StreamSupport.stream(found.spliterator(), false).collect(Collectors.toList());\n+\n+\t\tObject result = isPageQuery()\n+\t\t\t\t? buildPage(pageableParam, parsedQueryWithTagsAndValues, found.getCursor(), resultsList)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31e3f656996531d00a9098e41a406e74fb99241c"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTIxNzIyOnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/query/GqlDatastoreQuery.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTo0NzoyNVrOFnIUBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDozMTozNFrOFnJbHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3NDk4MA==", "bodyText": "Why do we no longer need to convertOnRead and applyProjection?\nI'm having a hard time following what the fix is conceptually.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2186#discussion_r376574980", "createdAt": "2020-02-07T19:47:25Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/query/GqlDatastoreQuery.java", "diffHunk": "@@ -169,6 +157,19 @@ else if (this.queryMethod.isCollectionQuery()) {\n \t\treturn result;\n \t}\n \n+\tprivate Object buildPageOrSlice(Object[] parameters, ParsedQueryWithTagsAndValues parsedQueryWithTagsAndValues,\n+\t\t\tDatastoreResultsIterable found) {\n+\t\tPageable pageableParam =\n+\t\t\t\tnew ParametersParameterAccessor(getQueryMethod().getParameters(), parameters).getPageable();\n+\t\tList resultsList = found == null ? Collections.emptyList()\n+\t\t\t\t: (List) StreamSupport.stream(found.spliterator(), false).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31e3f656996531d00a9098e41a406e74fb99241c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU5MTgwNg==", "bodyText": "it is already converted at this point", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2186#discussion_r376591806", "createdAt": "2020-02-07T20:28:05Z", "author": {"login": "dmitry-s"}, "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/query/GqlDatastoreQuery.java", "diffHunk": "@@ -169,6 +157,19 @@ else if (this.queryMethod.isCollectionQuery()) {\n \t\treturn result;\n \t}\n \n+\tprivate Object buildPageOrSlice(Object[] parameters, ParsedQueryWithTagsAndValues parsedQueryWithTagsAndValues,\n+\t\t\tDatastoreResultsIterable found) {\n+\t\tPageable pageableParam =\n+\t\t\t\tnew ParametersParameterAccessor(getQueryMethod().getParameters(), parameters).getPageable();\n+\t\tList resultsList = found == null ? Collections.emptyList()\n+\t\t\t\t: (List) StreamSupport.stream(found.spliterator(), false).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3NDk4MA=="}, "originalCommit": {"oid": "31e3f656996531d00a9098e41a406e74fb99241c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU5MzE4Mw==", "bodyText": "Perhaps a PR description would help? I am equally confused, BTW :)", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2186#discussion_r376593183", "createdAt": "2020-02-07T20:31:34Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/query/GqlDatastoreQuery.java", "diffHunk": "@@ -169,6 +157,19 @@ else if (this.queryMethod.isCollectionQuery()) {\n \t\treturn result;\n \t}\n \n+\tprivate Object buildPageOrSlice(Object[] parameters, ParsedQueryWithTagsAndValues parsedQueryWithTagsAndValues,\n+\t\t\tDatastoreResultsIterable found) {\n+\t\tPageable pageableParam =\n+\t\t\t\tnew ParametersParameterAccessor(getQueryMethod().getParameters(), parameters).getPageable();\n+\t\tList resultsList = found == null ? Collections.emptyList()\n+\t\t\t\t: (List) StreamSupport.stream(found.spliterator(), false).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3NDk4MA=="}, "originalCommit": {"oid": "31e3f656996531d00a9098e41a406e74fb99241c"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2231, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}