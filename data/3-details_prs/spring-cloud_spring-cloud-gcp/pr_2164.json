{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5Nzc1Njg4", "number": 2164, "title": "improve PartTree parts validation", "bodyText": "fixes #2155", "createdAt": "2020-01-31T21:20:22Z", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164", "merged": true, "mergeCommit": {"oid": "9ce0a8094825c4cccc7433ab9aed4d942d594058"}, "closed": true, "closedAt": "2020-02-03T16:50:09Z", "author": {"login": "dmitry-s"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_127DgH2gAyMzY5Nzc1Njg4OjY5MjFkYjNlYjNiNmQxNWQyNzA5NjUwYzQzMzZiZjQ5MjUxNDRmMDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAvys6AFqTM1MjQwMTIwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6921db3eb3b6d15d2709650c4336bf4925144f07", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/6921db3eb3b6d15d2709650c4336bf4925144f07", "committedDate": "2020-01-31T21:17:07Z", "message": "improve PartTree parts validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNzg2MTgy", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164#pullrequestreview-351786182", "createdAt": "2020-01-31T21:24:01Z", "commit": {"oid": "6921db3eb3b6d15d2709650c4336bf4925144f07"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyNDowMVrOFkYWHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyNDoyMVrOFkYWig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MTkzNA==", "bodyText": "Doesn't support 'OR', would be a more straight forward message imo?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164#discussion_r373691934", "createdAt": "2020-01-31T21:24:01Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQuery.java", "diffHunk": "@@ -88,18 +88,31 @@ public PartTreeFirestoreQuery(FirestoreQueryMethod queryMethod, FirestoreReactiv\n \t\tthis.tree = new PartTree(queryMethod.getName(), returnedType.getDomainType());\n \t\tthis.persistentEntity = mappingContext.getPersistentEntity(returnedType.getDomainType());\n \t\tthis.classMapper = classMapper;\n+\t\tvalidate();\n \t}\n \n-\t@Override\n-\tpublic Object execute(Object[] parameters) {\n+\tprivate void validate() {\n \t\tList parts = this.tree.get().collect(Collectors.toList());\n \t\tif (parts.size() > 1 && parts.get(0) instanceof PartTree.OrPart) {\n \t\t\t\tthrow new FirestoreDataException(\n-\t\t\t\t\t\t\"Cloud Firestore only supports multiple filters combined with AND.\");\n+\t\t\t\t\t\t\"Cloud Firestore only supports multiple filters combined with AND (\" + this.getQueryMethod().getName() + \")\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6921db3eb3b6d15d2709650c4336bf4925144f07"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MjA0Mg==", "bodyText": "Can we just say Between?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164#discussion_r373692042", "createdAt": "2020-01-31T21:24:21Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-firestore/src/test/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQueryTests.java", "diffHunk": "@@ -128,20 +128,19 @@ public void testPartTreeQueryParameterException() {\n \n \t@Test\n \tpublic void testPartTreeQueryFilterException() {\n-\t\tPartTreeFirestoreQuery partTreeFirestoreQuery =\n-\t\t\t\tcreatePartTreeQuery(\"findByAgeBetween\");\n-\t\tassertThatThrownBy(() -> partTreeFirestoreQuery.execute(new Object[]{0, 100}))\n+\t\tassertThatThrownBy(() -> createPartTreeQuery(\"findByAgeBetweenAndNameRegex\"))\n \t\t\t\t.isInstanceOf(FirestoreDataException.class)\n-\t\t\t\t.hasMessage(\"Unsupported predicate keyword: BETWEEN (2): [IsBetween, Between]\");\n+\t\t\t\t.hasMessage(\"Unsupported predicate keywords: \" +\n+\t\t\t\t\t\t\"[BETWEEN (2): [IsBetween, Between], \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6921db3eb3b6d15d2709650c4336bf4925144f07"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32313b07f454931e7d5d2690998bfd96bf4c6219", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/32313b07f454931e7d5d2690998bfd96bf4c6219", "committedDate": "2020-01-31T21:34:26Z", "message": "improve PartTree parts validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMjk4NzU4", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164#pullrequestreview-352298758", "createdAt": "2020-02-03T14:37:02Z", "commit": {"oid": "32313b07f454931e7d5d2690998bfd96bf4c6219"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDozNzowMlrOFkzfcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDozOTo1MFrOFkzlqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzNjY4OQ==", "bodyText": "nit: move .map() to the next line for readability.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164#discussion_r374136689", "createdAt": "2020-02-03T14:37:02Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQuery.java", "diffHunk": "@@ -88,18 +88,31 @@ public PartTreeFirestoreQuery(FirestoreQueryMethod queryMethod, FirestoreReactiv\n \t\tthis.tree = new PartTree(queryMethod.getName(), returnedType.getDomainType());\n \t\tthis.persistentEntity = mappingContext.getPersistentEntity(returnedType.getDomainType());\n \t\tthis.classMapper = classMapper;\n+\t\tvalidate();\n \t}\n \n-\t@Override\n-\tpublic Object execute(Object[] parameters) {\n+\tprivate void validate() {\n \t\tList parts = this.tree.get().collect(Collectors.toList());\n \t\tif (parts.size() > 1 && parts.get(0) instanceof PartTree.OrPart) {\n \t\t\t\tthrow new FirestoreDataException(\n-\t\t\t\t\t\t\"Cloud Firestore only supports multiple filters combined with AND.\");\n+\t\t\t\t\t\t\"Cloud Firestore doesn't support 'OR' (\" + this.getQueryMethod().getName() + \")\");\n+\t\t}\n+\t\tList<String> unsupportedParts = this.tree.getParts().stream()\n+\t\t\t\t.filter(part -> !isSupportedPart(part.getType())).map(part -> part.getType().toString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32313b07f454931e7d5d2690998bfd96bf4c6219"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzODI4Mg==", "bodyText": "Would it help the caller to see (method name: [METHOD]) as opposed to just ([METHOD])?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164#discussion_r374138282", "createdAt": "2020-02-03T14:39:50Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQuery.java", "diffHunk": "@@ -88,18 +88,31 @@ public PartTreeFirestoreQuery(FirestoreQueryMethod queryMethod, FirestoreReactiv\n \t\tthis.tree = new PartTree(queryMethod.getName(), returnedType.getDomainType());\n \t\tthis.persistentEntity = mappingContext.getPersistentEntity(returnedType.getDomainType());\n \t\tthis.classMapper = classMapper;\n+\t\tvalidate();\n \t}\n \n-\t@Override\n-\tpublic Object execute(Object[] parameters) {\n+\tprivate void validate() {\n \t\tList parts = this.tree.get().collect(Collectors.toList());\n \t\tif (parts.size() > 1 && parts.get(0) instanceof PartTree.OrPart) {\n \t\t\t\tthrow new FirestoreDataException(\n-\t\t\t\t\t\t\"Cloud Firestore only supports multiple filters combined with AND.\");\n+\t\t\t\t\t\t\"Cloud Firestore doesn't support 'OR' (\" + this.getQueryMethod().getName() + \")\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32313b07f454931e7d5d2690998bfd96bf4c6219"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1a2201f3ac5cd1afc0705dfdb29d3ea3c99a081", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b1a2201f3ac5cd1afc0705dfdb29d3ea3c99a081", "committedDate": "2020-02-03T16:29:22Z", "message": "improve PartTree parts validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDAxMjAx", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164#pullrequestreview-352401201", "createdAt": "2020-02-03T16:47:00Z", "commit": {"oid": "b1a2201f3ac5cd1afc0705dfdb29d3ea3c99a081"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 520, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}