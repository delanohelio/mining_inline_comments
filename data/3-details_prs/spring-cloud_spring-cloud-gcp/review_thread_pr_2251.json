{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5Mzk3MTgw", "number": 2251, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1MjowOFrODocOZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1Mzo1MVrODocQng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzMyMDY4OnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-pubsub/src/test/java/org/springframework/cloud/gcp/pubsub/support/DefaultSubscriberFactoryTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1MjowOFrOF2_fKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODowMzozMFrOF2_7CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNzU5Mw==", "bodyText": "This is a nit, but can this be a different test? Null and negative numbers are distinct scenarios.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2251#discussion_r393207593", "createdAt": "2020-03-16T17:52:08Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-pubsub/src/test/java/org/springframework/cloud/gcp/pubsub/support/DefaultSubscriberFactoryTests.java", "diffHunk": "@@ -70,4 +71,19 @@ public void testNewDefaultSubscriberFactory_nullProject() {\n \t\tnew DefaultSubscriberFactory(() -> null);\n \t}\n \n+\t@Test\n+\tpublic void testCreatePullRequest_nonZeroMaxMessages() {\n+\t\tDefaultSubscriberFactory factory = new DefaultSubscriberFactory(() -> \"project\");\n+\t\tfactory.setCredentialsProvider(this.credentialsProvider);\n+\n+\t\t// If a maxMessages is null (it was omitted), then set max to MAX_INT\n+\t\tPullRequest request = factory.createPullRequest(\"test\", null, true);\n+\t\tassertThat(request.getMaxMessages()).isEqualTo(Integer.MAX_VALUE);\n+\n+\t\t// If maxMessages < 0, should throw an error.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2be916dae153a39e2c4d896ede0f38bffa80d616"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNDcyOQ==", "bodyText": "Done.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2251#discussion_r393214729", "createdAt": "2020-03-16T18:03:30Z", "author": {"login": "dzou"}, "path": "spring-cloud-gcp-pubsub/src/test/java/org/springframework/cloud/gcp/pubsub/support/DefaultSubscriberFactoryTests.java", "diffHunk": "@@ -70,4 +71,19 @@ public void testNewDefaultSubscriberFactory_nullProject() {\n \t\tnew DefaultSubscriberFactory(() -> null);\n \t}\n \n+\t@Test\n+\tpublic void testCreatePullRequest_nonZeroMaxMessages() {\n+\t\tDefaultSubscriberFactory factory = new DefaultSubscriberFactory(() -> \"project\");\n+\t\tfactory.setCredentialsProvider(this.credentialsProvider);\n+\n+\t\t// If a maxMessages is null (it was omitted), then set max to MAX_INT\n+\t\tPullRequest request = factory.createPullRequest(\"test\", null, true);\n+\t\tassertThat(request.getMaxMessages()).isEqualTo(Integer.MAX_VALUE);\n+\n+\t\t// If maxMessages < 0, should throw an error.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNzU5Mw=="}, "originalCommit": {"oid": "2be916dae153a39e2c4d896ede0f38bffa80d616"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzMyNjM4OnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-pubsub/src/main/java/org/springframework/cloud/gcp/pubsub/core/subscriber/PubSubSubscriberOperations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1Mzo1MVrOF2_i2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODowMzozNVrOF2_7NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwODUzNg==", "bodyText": "Would it make sense to replace \"there is no limit\" with \"up to Integer.MAX_VALUE messages will be requested\"? I know that you documented it in refdoc, but for people who read javadoc it would be better to be explicit.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2251#discussion_r393208536", "createdAt": "2020-03-16T17:53:51Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-pubsub/src/main/java/org/springframework/cloud/gcp/pubsub/core/subscriber/PubSubSubscriberOperations.java", "diffHunk": "@@ -86,7 +86,8 @@\n \t * Pull and auto-acknowledge a number of messages from a Google Cloud Pub/Sub subscription.\n \t * @param subscription canonical subscription name, e.g., \"subscriptionName\", or the fully-qualified\n \t * subscription name in the {@code projects/<project_name>/subscriptions/<subscription_name>} format\n-\t * @param maxMessages the maximum number of pulled messages\n+\t * @param maxMessages the maximum number of pulled messages. If this value is null then there is no limit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2be916dae153a39e2c4d896ede0f38bffa80d616"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNDc3Mw==", "bodyText": "Done.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2251#discussion_r393214773", "createdAt": "2020-03-16T18:03:35Z", "author": {"login": "dzou"}, "path": "spring-cloud-gcp-pubsub/src/main/java/org/springframework/cloud/gcp/pubsub/core/subscriber/PubSubSubscriberOperations.java", "diffHunk": "@@ -86,7 +86,8 @@\n \t * Pull and auto-acknowledge a number of messages from a Google Cloud Pub/Sub subscription.\n \t * @param subscription canonical subscription name, e.g., \"subscriptionName\", or the fully-qualified\n \t * subscription name in the {@code projects/<project_name>/subscriptions/<subscription_name>} format\n-\t * @param maxMessages the maximum number of pulled messages\n+\t * @param maxMessages the maximum number of pulled messages. If this value is null then there is no limit", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwODUzNg=="}, "originalCommit": {"oid": "2be916dae153a39e2c4d896ede0f38bffa80d616"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2304, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}