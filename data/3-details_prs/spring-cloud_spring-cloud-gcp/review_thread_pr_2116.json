{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMDIxNTAx", "number": 2116, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo0MjowMlrODXkAmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo0Mjo0MlrODXkBZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MDMzODE5OnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo0MjowMlrOFc7GTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo1Mzo1OVrOFc7hJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3MjcxNw==", "bodyText": "For smooth code flow this ctor has to be first. Because exactly this one calls another.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2116#discussion_r365872717", "createdAt": "2020-01-13T15:42:02Z", "author": {"login": "artembilan"}, "path": "spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java", "diffHunk": "@@ -35,14 +36,19 @@\n  * @author Jo\u00e3o Andr\u00e9 Martins\n  * @author Mike Eltsufin\n  * @author Chengyuan Zhao\n+ * @author Lukas Gemela\n  */\n public class GcsStreamingMessageSource extends AbstractRemoteFileStreamingMessageSource<BlobInfo> {\n \n-\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {\n-\t\tsuper(template, null);\n+\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template, Comparator<BlobInfo> comparator) {\n+\t\tsuper(template, comparator);\n \t\tdoSetFilter(new GcsPersistentAcceptOnceFileListFilter(new SimpleMetadataStore(), \"gcsStreamingMessageSource\"));\n \t}\n \n+\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9e3e5a5d9a8504cb0f69a89dee8d75a06d1057b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTU4OQ==", "bodyText": "updated accordingly", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2116#discussion_r365879589", "createdAt": "2020-01-13T15:53:59Z", "author": {"login": "lukasGemela"}, "path": "spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java", "diffHunk": "@@ -35,14 +36,19 @@\n  * @author Jo\u00e3o Andr\u00e9 Martins\n  * @author Mike Eltsufin\n  * @author Chengyuan Zhao\n+ * @author Lukas Gemela\n  */\n public class GcsStreamingMessageSource extends AbstractRemoteFileStreamingMessageSource<BlobInfo> {\n \n-\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {\n-\t\tsuper(template, null);\n+\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template, Comparator<BlobInfo> comparator) {\n+\t\tsuper(template, comparator);\n \t\tdoSetFilter(new GcsPersistentAcceptOnceFileListFilter(new SimpleMetadataStore(), \"gcsStreamingMessageSource\"));\n \t}\n \n+\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3MjcxNw=="}, "originalCommit": {"oid": "e9e3e5a5d9a8504cb0f69a89dee8d75a06d1057b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MDM0MDIyOnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo0Mjo0MlrOFc7How==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo0Mjo0MlrOFc7How==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3MzA1OQ==", "bodyText": "Since this ctor is new public API in the class it would be great to have some JavaDoc on it with an appropriate @since.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2116#discussion_r365873059", "createdAt": "2020-01-13T15:42:42Z", "author": {"login": "artembilan"}, "path": "spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java", "diffHunk": "@@ -35,14 +36,19 @@\n  * @author Jo\u00e3o Andr\u00e9 Martins\n  * @author Mike Eltsufin\n  * @author Chengyuan Zhao\n+ * @author Lukas Gemela\n  */\n public class GcsStreamingMessageSource extends AbstractRemoteFileStreamingMessageSource<BlobInfo> {\n \n-\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {\n-\t\tsuper(template, null);\n+\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template, Comparator<BlobInfo> comparator) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9e3e5a5d9a8504cb0f69a89dee8d75a06d1057b"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2366, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}