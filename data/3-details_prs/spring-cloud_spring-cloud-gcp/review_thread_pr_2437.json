{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTYxNzEz", "number": 2437, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNTowN1rOEGL4SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNzoxNVrOEGL5fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIxNTQ0OnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/core/DatastoreOperations.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNTowN1rOGk03vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNTowN1rOGk03vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODE1Nw==", "bodyText": "We should javadoc here, since it's the interface.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2437#discussion_r441268157", "createdAt": "2020-06-17T04:05:07Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/core/DatastoreOperations.java", "diffHunk": "@@ -260,4 +262,23 @@\n \t * @return result keys\n \t */\n \t<T> Iterable<Key> keyQueryByExample(Example<T> example, DatastoreQueryOptions queryOptions);\n+\n+\t/**\n+\t * Get the {@link DatastoreEntityConverter} used by this template.\n+\t * @return the converter.\n+\t */\n+\tDatastoreEntityConverter getDatastoreEntityConverter();\n+\n+\t/**\n+\t * Finds objects by using a Cloud Datastore query. If the query is a key-query, then keys are\n+\t * returned.\n+\t * @param query the query to execute.\n+\t * @param entityClass the type of object to retrieve.\n+\t * @param <T> the type of object to retrieve.\n+\t * @return a list of the objects found. If no keys could be found the list will be\n+\t * empty.\n+\t */\n+\t<T> DatastoreResultsIterable<?> queryKeysOrEntities(Query query, Class<T> entityClass);\n+\n+\t<A, T> DatastoreResultsIterable<T> queryIterable(Query<A> query, Function<A, T> entityFunc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5781a25e34e4fe645fd3bc9eee75f62426222595"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIxNjEyOnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/query/AbstractDatastoreQuery.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNTo0MlrOGk04NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNTo0MlrOGk04NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODI3Ng==", "bodyText": "Unintentional spacing change?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2437#discussion_r441268276", "createdAt": "2020-06-17T04:05:42Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/query/AbstractDatastoreQuery.java", "diffHunk": "@@ -40,12 +40,12 @@\n \n \tfinal DatastoreQueryMethod queryMethod;\n \n-\tfinal DatastoreTemplate datastoreTemplate;\n+\tfinal DatastoreOperations datastoreTemplate;\n \n \tfinal Class<T> entityType;\n \n \tpublic AbstractDatastoreQuery(DatastoreQueryMethod queryMethod,\n-\t\t\tDatastoreTemplate datastoreTemplate,\n+\t\t\t\t\t\t\tDatastoreOperations datastoreTemplate,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5781a25e34e4fe645fd3bc9eee75f62426222595"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIxNzkxOnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/query/AbstractDatastoreQuery.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNjo1MFrOGk05Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNjo1MFrOGk05Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODU1MA==", "bodyText": "Shouldn't it be getDatastoreOperations then?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2437#discussion_r441268550", "createdAt": "2020-06-17T04:06:50Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/query/AbstractDatastoreQuery.java", "diffHunk": "@@ -79,7 +79,7 @@ Object processRawObjectForProjection(Object object) {\n \t\treturn this.queryMethod.getResultProcessor().processResult(object);\n \t}\n \n-\tpublic DatastoreTemplate getDatastoreTemplate() {\n+\tpublic DatastoreOperations getDatastoreTemplate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5781a25e34e4fe645fd3bc9eee75f62426222595"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIxODUyOnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/support/DatastoreRepositoryFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNzoxNVrOGk05oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNzoxNVrOGk05oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODY0MA==", "bodyText": "Unintentional spacing change?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2437#discussion_r441268640", "createdAt": "2020-06-17T04:07:15Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-datastore/src/main/java/org/springframework/cloud/gcp/data/datastore/repository/support/DatastoreRepositoryFactory.java", "diffHunk": "@@ -66,7 +66,7 @@\n \t * repositories.\n \t */\n \tDatastoreRepositoryFactory(DatastoreMappingContext datastoreMappingContext,\n-\t\t\tDatastoreTemplate datastoreTemplate) {\n+\t\t\t\t\t\t\tDatastoreOperations datastoreTemplate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5781a25e34e4fe645fd3bc9eee75f62426222595"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2155, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}