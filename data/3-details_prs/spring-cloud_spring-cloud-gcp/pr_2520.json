{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0NTg5MDg1", "number": 2520, "title": "Differentiate between Publisher and Subscriber TransportChannelProvider", "bodyText": "Ensures that the correct client library defaults are applied for maxInboundMessageSize.\nFixes: #2511.", "createdAt": "2020-09-11T03:19:26Z", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2520", "merged": true, "mergeCommit": {"oid": "9d234371ebb6370ac38d392a961a1d8b3c3f238f"}, "closed": true, "closedAt": "2020-09-11T18:49:41Z", "author": {"login": "meltsufin"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHsoA3AH2gAyNDg0NTg5MDg1OjQ4OTM3OTRmMGYxOGQ0OTNlZWEwNTc2OWMxZjNhZDA0ZTZlYzY0Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdH3nkNAFqTQ4NjkzMjk0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4893794f0f18d493eea05769c1f3ad04e6ec6427", "author": {"user": {"login": "meltsufin", "name": "Mike Eltsufin"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/4893794f0f18d493eea05769c1f3ad04e6ec6427", "committedDate": "2020-09-11T03:14:14Z", "message": "Differentiate between Publisher and Subscriber TransportChannelProvider\n\nEnsures that the correct client library defaults are applied for `maxInboundMessageSize`.\n\nFixes: #2511."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2Nzk5NDc1", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2520#pullrequestreview-486799475", "createdAt": "2020-09-11T13:20:47Z", "commit": {"oid": "4893794f0f18d493eea05769c1f3ad04e6ec6427"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzoyMDo0OFrOHQekfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzoyMDo0OFrOHQekfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA0MDEyNw==", "bodyText": "define a 20MB constant maybe? Bit shifting is a bit obfuscated.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2520#discussion_r487040127", "createdAt": "2020-09-11T13:20:48Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-autoconfigure/src/test/java/org/springframework/cloud/gcp/autoconfigure/pubsub/GcpPubSubAutoConfigurationTests.java", "diffHunk": "@@ -64,12 +69,33 @@ public void keepAliveValue_custom() {\n \t\t\tGcpPubSubProperties props = ctx.getBean(GcpPubSubProperties.class);\n \t\t\tassertThat(props.getKeepAliveIntervalMinutes()).isEqualTo(2);\n \n-\t\t\tTransportChannelProvider tcp = ctx.getBean(TransportChannelProvider.class);\n-\t\t\tassertThat(((InstantiatingGrpcChannelProvider) tcp).getKeepAliveTime().toMinutes())\n+\t\t\tTransportChannelProvider subscriberTcp = ctx.getBean(\"subscriberTransportChannelProvider\", TransportChannelProvider.class);\n+\t\t\tTransportChannelProvider publisherTcp = ctx.getBean(\"publisherTransportChannelProvider\", TransportChannelProvider.class);\n+\t\t\tassertThat(((InstantiatingGrpcChannelProvider) subscriberTcp).getKeepAliveTime().toMinutes())\n+\t\t\t\t\t.isEqualTo(2);\n+\t\t\tassertThat(((InstantiatingGrpcChannelProvider) publisherTcp).getKeepAliveTime().toMinutes())\n \t\t\t\t\t.isEqualTo(2);\n \t\t});\n \t}\n \n+\t@Test\n+\tpublic void maxInboundMessageSize_default() {\n+\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n+\t\t\t\t.withConfiguration(AutoConfigurations.of(GcpPubSubAutoConfiguration.class))\n+\t\t\t\t.withUserConfiguration(TestConfig.class);\n+\n+\t\tcontextRunner.run(ctx -> {\n+\n+\t\t\tTransportChannelProvider subscriberTcp = ctx.getBean(\"subscriberTransportChannelProvider\", TransportChannelProvider.class);\n+\t\t\tassertThat(FieldUtils.readField(subscriberTcp, \"maxInboundMessageSize\", true))\n+\t\t\t\t\t.isEqualTo(20 << 20);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4893794f0f18d493eea05769c1f3ad04e6ec6427"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7783948f2939039ad35dd0b7d3d028a8b2a13731", "author": {"user": {"login": "meltsufin", "name": "Mike Eltsufin"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/7783948f2939039ad35dd0b7d3d028a8b2a13731", "committedDate": "2020-09-11T15:41:25Z", "message": "Merge remote-tracking branch 'origin/master' into pubsub-transport-channel-provider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3356932eeaf3fa706646fdc628ea83da1e058c0a", "author": {"user": {"login": "meltsufin", "name": "Mike Eltsufin"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/3356932eeaf3fa706646fdc628ea83da1e058c0a", "committedDate": "2020-09-11T15:46:00Z", "message": "fix emulator tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "861f199ed9481f5b0b3d44bc0c9266dfced13b1f", "author": {"user": {"login": "meltsufin", "name": "Mike Eltsufin"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/861f199ed9481f5b0b3d44bc0c9266dfced13b1f", "committedDate": "2020-09-11T15:57:11Z", "message": "add release note"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91e3614f51e2e1321c6c7d0f6750f5a7fe42d6cc", "author": {"user": {"login": "meltsufin", "name": "Mike Eltsufin"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/91e3614f51e2e1321c6c7d0f6750f5a7fe42d6cc", "committedDate": "2020-09-11T15:56:24Z", "message": "blank line"}, "afterCommit": {"oid": "861f199ed9481f5b0b3d44bc0c9266dfced13b1f", "author": {"user": {"login": "meltsufin", "name": "Mike Eltsufin"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/861f199ed9481f5b0b3d44bc0c9266dfced13b1f", "committedDate": "2020-09-11T15:57:11Z", "message": "add release note"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2OTMyOTQ5", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2520#pullrequestreview-486932949", "createdAt": "2020-09-11T16:00:59Z", "commit": {"oid": "861f199ed9481f5b0b3d44bc0c9266dfced13b1f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjowMDo1OVrOHQkvCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjowMDo1OVrOHQkvCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE0MTEzMA==", "bodyText": "I wonder if admin functionality should have its own. The most obvious usecase is needing different credentials for admin operations.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2520#discussion_r487141130", "createdAt": "2020-09-11T16:00:59Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/pubsub/GcpPubSubAutoConfiguration.java", "diffHunk": "@@ -352,12 +353,12 @@ public TopicAdminClient topicAdminClient(\n \t@Bean\n \t@ConditionalOnMissingBean\n \tpublic TopicAdminSettings topicAdminSettings(\n-\t\t\tTransportChannelProvider transportChannelProvider) {\n+\t\t\t@Qualifier(\"publisherTransportChannelProvider\") TransportChannelProvider publisherTransportChannelProvider) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "861f199ed9481f5b0b3d44bc0c9266dfced13b1f"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 416, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}