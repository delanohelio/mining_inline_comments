{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjA5NzEx", "number": 2355, "title": "Split the Pub/Sub configuration into subsections", "bodyText": "One of my comments in the Pub/Sub DLQ discussions was to split the Pub/Sub configuration section in to subsections, I thought this could help organize the config options and make it more clear to users that the GRPC settings are not related to message redelivery settings. I think Elena's note already clears this up but maybe it could further benefit from this refactoring.\nSending this PR out to see if you guys would like this direction.", "createdAt": "2020-05-04T22:04:41Z", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355", "merged": true, "mergeCommit": {"oid": "7582692705ab1d2f5750989e8e23dce2def1fa51"}, "closed": true, "closedAt": "2020-05-05T20:02:00Z", "author": {"login": "dzou"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceGu7fAH2gAyNDEzMjA5NzExOjAwZDg0NzhkOTUyZWMzOWI5MzBhY2FhMDUxNmIxYTFlYTA0MDNhOTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceZQtIgFqTQwNjA5MTcxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "00d8478d952ec39b930acaa0516b1a1ea0403a95", "author": {"user": {"login": "dzou", "name": "Daniel Zou"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/00d8478d952ec39b930acaa0516b1a1ea0403a95", "committedDate": "2020-05-04T21:54:30Z", "message": "Organize the Pub/Sub configuration into subsections"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1ODA1OTk5", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#pullrequestreview-405805999", "createdAt": "2020-05-05T13:49:10Z", "commit": {"oid": "00d8478d952ec39b930acaa0516b1a1ea0403a95"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo0OToxMVrOGQqTAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo0OToxMVrOGQqTAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyMzM5NA==", "bodyText": "I'd remove \"are available to\" (yes, I know I wrote it).", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420123394", "createdAt": "2020-05-05T13:49:11Z", "author": {"login": "elefeint"}, "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false\n |===\n \n-The following properties are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.\n+==== GRPC Connection Settings\n+\n+The Pub/Sub API uses the https://cloud.google.com/pubsub/docs/reference/service_apis_overview#grpc_api[GRPC] protocol to send API requests to the Pub/Sub service.\n+This section describes configuration options for customizing the GRPC behavior.\n+\n+NOTE: The properties that refer to `retry` are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d8478d952ec39b930acaa0516b1a1ea0403a95"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1ODEyMjEz", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#pullrequestreview-405812213", "createdAt": "2020-05-05T13:55:42Z", "commit": {"oid": "00d8478d952ec39b930acaa0516b1a1ea0403a95"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1NTo0MlrOGQqmZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1NTo0MlrOGQqmZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyODM1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: The properties that refer to `retry` are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.\n          \n          \n            \n            NOTE: The properties that refer to `retry` are available to control retries in case of transient failures during the gRPC call to Cloud Pub/Sub server.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420128357", "createdAt": "2020-05-05T13:55:42Z", "author": {"login": "meltsufin"}, "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false\n |===\n \n-The following properties are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.\n+==== GRPC Connection Settings\n+\n+The Pub/Sub API uses the https://cloud.google.com/pubsub/docs/reference/service_apis_overview#grpc_api[GRPC] protocol to send API requests to the Pub/Sub service.\n+This section describes configuration options for customizing the GRPC behavior.\n+\n+NOTE: The properties that refer to `retry` are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d8478d952ec39b930acaa0516b1a1ea0403a95"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d0c790919f2ba8e6f17917ab7d375a7c6789983", "author": {"user": {"login": "dzou", "name": "Daniel Zou"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/3d0c790919f2ba8e6f17917ab7d375a7c6789983", "committedDate": "2020-05-05T18:23:09Z", "message": "PR Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDUzMzY3", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#pullrequestreview-406053367", "createdAt": "2020-05-05T18:34:47Z", "commit": {"oid": "3d0c790919f2ba8e6f17917ab7d375a7c6789983"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODozNDo0N1rOGQ2fYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODozNDo0N1rOGQ2fYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyMzE3MA==", "bodyText": "Why the extra space here before the \"|\" but not in the previous items?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420323170", "createdAt": "2020-05-05T18:34:47Z", "author": {"login": "dmitry-s"}, "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0c790919f2ba8e6f17917ab7d375a7c6789983"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c24d3f01e2ab40d23c39e257f3ff5a1ee9d3188d", "author": {"user": {"login": "dzou", "name": "Daniel Zou"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/c24d3f01e2ab40d23c39e257f3ff5a1ee9d3188d", "committedDate": "2020-05-05T18:53:53Z", "message": "Format table columns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c777cd9d6c350a3f271b2f243dfa0f4d4475cfa", "author": {"user": {"login": "dzou", "name": "Daniel Zou"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/9c777cd9d6c350a3f271b2f243dfa0f4d4475cfa", "committedDate": "2020-05-05T18:55:33Z", "message": "additional formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDkxNzEy", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#pullrequestreview-406091712", "createdAt": "2020-05-05T19:29:41Z", "commit": {"oid": "9c777cd9d6c350a3f271b2f243dfa0f4d4475cfa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 448, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}