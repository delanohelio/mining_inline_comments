{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NjY0Nzg3", "number": 2604, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzoyNjozMlrOE-woTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzoyNjozMlrOE-woTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjQzOTE2OnYy", "diffSide": "RIGHT", "path": "spring-cloud-gcp-data-datastore/src/test/java/org/springframework/cloud/gcp/data/datastore/core/DatastoreTemplateAuditingTests.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzoyNjozMlrOH8FspQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMTo1MTowNVrOH8PQwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2OTk1Nw==", "bodyText": "I see mock setup all done in datastoreTemplate(). Would it make sense to move it there?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2604#discussion_r532769957", "createdAt": "2020-11-30T17:26:32Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-datastore/src/test/java/org/springframework/cloud/gcp/data/datastore/core/DatastoreTemplateAuditingTests.java", "diffHunk": "@@ -82,6 +84,20 @@ public void testModifiedPrevProperties() {\n \t\tthis.datastoreTemplate.saveAll(Collections.singletonList(testEntity));\n \t}\n \n+\t@Test\n+\tpublic void testInTransaction() {\n+\t\twhen(datastore.runInTransaction(any()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb40156407d388982494b445a5195920569f5941"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4ODExNA==", "bodyText": "Personally, I prefer keeping the specific setup where it's actually used, and Mockito could complain about unnecessary setup in the other tests, depending on its configuration. However, I've tested moving the code and it works, so Mockito is not in strict mode and the code can be arranged however you prefer.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2604#discussion_r532788114", "createdAt": "2020-11-30T17:53:42Z", "author": {"login": "fpavageau"}, "path": "spring-cloud-gcp-data-datastore/src/test/java/org/springframework/cloud/gcp/data/datastore/core/DatastoreTemplateAuditingTests.java", "diffHunk": "@@ -82,6 +84,20 @@ public void testModifiedPrevProperties() {\n \t\tthis.datastoreTemplate.saveAll(Collections.singletonList(testEntity));\n \t}\n \n+\t@Test\n+\tpublic void testInTransaction() {\n+\t\twhen(datastore.runInTransaction(any()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2OTk1Nw=="}, "originalCommit": {"oid": "fb40156407d388982494b445a5195920569f5941"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzODA0Nw==", "bodyText": "I don't feel strongly either way. I'm also not sure it's good that the verification is outside the test method, but that's a problem for another time. :)", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2604#discussion_r532838047", "createdAt": "2020-11-30T19:16:54Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-datastore/src/test/java/org/springframework/cloud/gcp/data/datastore/core/DatastoreTemplateAuditingTests.java", "diffHunk": "@@ -82,6 +84,20 @@ public void testModifiedPrevProperties() {\n \t\tthis.datastoreTemplate.saveAll(Collections.singletonList(testEntity));\n \t}\n \n+\t@Test\n+\tpublic void testInTransaction() {\n+\t\twhen(datastore.runInTransaction(any()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2OTk1Nw=="}, "originalCommit": {"oid": "fb40156407d388982494b445a5195920569f5941"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkyNTkyMQ==", "bodyText": "OK, I think I'll leave it that way then, not specifying every possible behavior for all the tests.\nI agree the verification in an Answer is brittle, which is when I first ran the test, without the added behavior on the mock, it passed: the Datastore.put() method was never called! We could extract an assertion method which would use an ArgumentCaptor to verify the call and its parameter, instead. However it's not the only occurence in the project of assertions in Answers, so just fixing this one instance probably doesn't really make sense.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2604#discussion_r532925921", "createdAt": "2020-11-30T21:49:48Z", "author": {"login": "fpavageau"}, "path": "spring-cloud-gcp-data-datastore/src/test/java/org/springframework/cloud/gcp/data/datastore/core/DatastoreTemplateAuditingTests.java", "diffHunk": "@@ -82,6 +84,20 @@ public void testModifiedPrevProperties() {\n \t\tthis.datastoreTemplate.saveAll(Collections.singletonList(testEntity));\n \t}\n \n+\t@Test\n+\tpublic void testInTransaction() {\n+\t\twhen(datastore.runInTransaction(any()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2OTk1Nw=="}, "originalCommit": {"oid": "fb40156407d388982494b445a5195920569f5941"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkyNjY1OA==", "bodyText": "Yeah, no need to address that here.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2604#discussion_r532926658", "createdAt": "2020-11-30T21:51:05Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-data-datastore/src/test/java/org/springframework/cloud/gcp/data/datastore/core/DatastoreTemplateAuditingTests.java", "diffHunk": "@@ -82,6 +84,20 @@ public void testModifiedPrevProperties() {\n \t\tthis.datastoreTemplate.saveAll(Collections.singletonList(testEntity));\n \t}\n \n+\t@Test\n+\tpublic void testInTransaction() {\n+\t\twhen(datastore.runInTransaction(any()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2OTk1Nw=="}, "originalCommit": {"oid": "fb40156407d388982494b445a5195920569f5941"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2079, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}