{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDk3Njc0", "number": 2194, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjowODowNFrODftxjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNjoyNjo0M1rODjJX_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTgyNDEzOnYy", "diffSide": "RIGHT", "path": "RELEASING.adoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjowODowNFrOFplSCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNjo1ODozOFrOFuNijQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0Njc2Mg==", "bodyText": "Would we end up with a snapshot version of the docs though? We might need to build off of a release tag instead.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2194#discussion_r379146762", "createdAt": "2020-02-13T22:08:04Z", "author": {"login": "meltsufin"}, "path": "RELEASING.adoc", "diffHunk": "@@ -22,3 +22,25 @@ For GA releases this should be configured under the `central` Maven profile.\n . Make sure that the release tag was automatically added by the release process.\n \n . Make sure that the link:https://github.com/spring-io/initializr/blob/master/initializr-service/src/main/resources/application.yml[Spring Boot Initializr] is updated to support the new version of Spring Cloud GCP.\n+\n+== Uploading Javadocs\n+\n+After releasing a new version of Spring Cloud GCP, you will need to upload the javadocs for the released version.\n+By this point, we assume that a new release branch has been created for project (such as `1.1.x`, `1.2.x`, etc.).\n+\n+All javadocs are uploaded to the following URL:\n+```\n+https://googleapis.dev/java/spring-cloud-gcp/${LIBRARY_VERSION}/index.html\n+```\n+\n+The latest version of the docs can be accessed at the `latest/` url:\n+https://googleapis.dev/java/spring-cloud-gcp/latest/index.html\n+\n+1. Locate and open the `prod:cloud-java-frameworks/spring-cloud-gcp/publish_javadoc` Kokoro job.\n+\n+2. Add a new Github SCM and fill out the following parameters:\n+\n+    - SCM Name: Set this to `spring-cloud-gcp`\n+    - Committish: Set this to the name of the new release branch that you want to publish javadocs for (like `1.2.x`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b22b79e75ccc0e4602dd52b4cf722d964ece08cb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MDE5OA==", "bodyText": "Oh oops, you're right. And it must have the .kokoro scripts on that release tag.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2194#discussion_r379170198", "createdAt": "2020-02-13T23:09:45Z", "author": {"login": "dzou"}, "path": "RELEASING.adoc", "diffHunk": "@@ -22,3 +22,25 @@ For GA releases this should be configured under the `central` Maven profile.\n . Make sure that the release tag was automatically added by the release process.\n \n . Make sure that the link:https://github.com/spring-io/initializr/blob/master/initializr-service/src/main/resources/application.yml[Spring Boot Initializr] is updated to support the new version of Spring Cloud GCP.\n+\n+== Uploading Javadocs\n+\n+After releasing a new version of Spring Cloud GCP, you will need to upload the javadocs for the released version.\n+By this point, we assume that a new release branch has been created for project (such as `1.1.x`, `1.2.x`, etc.).\n+\n+All javadocs are uploaded to the following URL:\n+```\n+https://googleapis.dev/java/spring-cloud-gcp/${LIBRARY_VERSION}/index.html\n+```\n+\n+The latest version of the docs can be accessed at the `latest/` url:\n+https://googleapis.dev/java/spring-cloud-gcp/latest/index.html\n+\n+1. Locate and open the `prod:cloud-java-frameworks/spring-cloud-gcp/publish_javadoc` Kokoro job.\n+\n+2. Add a new Github SCM and fill out the following parameters:\n+\n+    - SCM Name: Set this to `spring-cloud-gcp`\n+    - Committish: Set this to the name of the new release branch that you want to publish javadocs for (like `1.2.x`).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0Njc2Mg=="}, "originalCommit": {"oid": "b22b79e75ccc0e4602dd52b4cf722d964ece08cb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAwMDY1Mw==", "bodyText": "Added clarifying remarks about using Tag.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2194#discussion_r384000653", "createdAt": "2020-02-25T16:58:38Z", "author": {"login": "dzou"}, "path": "RELEASING.adoc", "diffHunk": "@@ -22,3 +22,25 @@ For GA releases this should be configured under the `central` Maven profile.\n . Make sure that the release tag was automatically added by the release process.\n \n . Make sure that the link:https://github.com/spring-io/initializr/blob/master/initializr-service/src/main/resources/application.yml[Spring Boot Initializr] is updated to support the new version of Spring Cloud GCP.\n+\n+== Uploading Javadocs\n+\n+After releasing a new version of Spring Cloud GCP, you will need to upload the javadocs for the released version.\n+By this point, we assume that a new release branch has been created for project (such as `1.1.x`, `1.2.x`, etc.).\n+\n+All javadocs are uploaded to the following URL:\n+```\n+https://googleapis.dev/java/spring-cloud-gcp/${LIBRARY_VERSION}/index.html\n+```\n+\n+The latest version of the docs can be accessed at the `latest/` url:\n+https://googleapis.dev/java/spring-cloud-gcp/latest/index.html\n+\n+1. Locate and open the `prod:cloud-java-frameworks/spring-cloud-gcp/publish_javadoc` Kokoro job.\n+\n+2. Add a new Github SCM and fill out the following parameters:\n+\n+    - SCM Name: Set this to `spring-cloud-gcp`\n+    - Committish: Set this to the name of the new release branch that you want to publish javadocs for (like `1.2.x`).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0Njc2Mg=="}, "originalCommit": {"oid": "b22b79e75ccc0e4602dd52b4cf722d964ece08cb"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTgwMzUwOnYy", "diffSide": "RIGHT", "path": "RELEASING.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNjoyNjo0M1rOFuyqWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNzoyNjowNFrOFu093g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYwODg1Ng==", "bodyText": "Add a verification step? What would be the URL?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2194#discussion_r384608856", "createdAt": "2020-02-26T16:26:43Z", "author": {"login": "meltsufin"}, "path": "RELEASING.adoc", "diffHunk": "@@ -22,3 +22,26 @@ For GA releases this should be configured under the `central` Maven profile.\n . Make sure that the release tag was automatically added by the release process.\n \n . Make sure that the link:https://github.com/spring-io/initializr/blob/master/initializr-service/src/main/resources/application.yml[Spring Boot Initializr] is updated to support the new version of Spring Cloud GCP.\n+\n+== Uploading Javadocs\n+\n+After releasing a new version of Spring Cloud GCP, you will need to upload the javadocs for the released version.\n+By this point, we assume that a new release branch has been created for project (such as `1.1.x`, `1.2.x`, etc.).\n+\n+All javadocs are uploaded to the following URL:\n+```\n+https://googleapis.dev/java/spring-cloud-gcp/${LIBRARY_VERSION}/index.html\n+```\n+\n+The latest version of the docs can be accessed at the `latest/` url:\n+https://googleapis.dev/java/spring-cloud-gcp/latest/index.html\n+\n+1. Locate and open the `prod:cloud-java-frameworks/spring-cloud-gcp/publish_javadoc` Kokoro job.\n+\n+2. Add a new Github SCM and fill out the following parameters:\n+\n+    - SCM Name: Set this to `spring-cloud-gcp`\n+    - Committish: Set this to the name of the new release branch or tag that you want to publish javadocs for (like `1.2.x` or `v1.2.1.RELEASE`).\n+      Note that you must already have the `.kokoro/` scripts in the branch that you wish to publish javadocs for.\n+\n+3. Run the job.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db6853af9ba3b9bbf4e39f904a10834140374ec"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY0NjYyMg==", "bodyText": "Done.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2194#discussion_r384646622", "createdAt": "2020-02-26T17:26:04Z", "author": {"login": "dzou"}, "path": "RELEASING.adoc", "diffHunk": "@@ -22,3 +22,26 @@ For GA releases this should be configured under the `central` Maven profile.\n . Make sure that the release tag was automatically added by the release process.\n \n . Make sure that the link:https://github.com/spring-io/initializr/blob/master/initializr-service/src/main/resources/application.yml[Spring Boot Initializr] is updated to support the new version of Spring Cloud GCP.\n+\n+== Uploading Javadocs\n+\n+After releasing a new version of Spring Cloud GCP, you will need to upload the javadocs for the released version.\n+By this point, we assume that a new release branch has been created for project (such as `1.1.x`, `1.2.x`, etc.).\n+\n+All javadocs are uploaded to the following URL:\n+```\n+https://googleapis.dev/java/spring-cloud-gcp/${LIBRARY_VERSION}/index.html\n+```\n+\n+The latest version of the docs can be accessed at the `latest/` url:\n+https://googleapis.dev/java/spring-cloud-gcp/latest/index.html\n+\n+1. Locate and open the `prod:cloud-java-frameworks/spring-cloud-gcp/publish_javadoc` Kokoro job.\n+\n+2. Add a new Github SCM and fill out the following parameters:\n+\n+    - SCM Name: Set this to `spring-cloud-gcp`\n+    - Committish: Set this to the name of the new release branch or tag that you want to publish javadocs for (like `1.2.x` or `v1.2.1.RELEASE`).\n+      Note that you must already have the `.kokoro/` scripts in the branch that you wish to publish javadocs for.\n+\n+3. Run the job.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYwODg1Ng=="}, "originalCommit": {"oid": "3db6853af9ba3b9bbf4e39f904a10834140374ec"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2242, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}