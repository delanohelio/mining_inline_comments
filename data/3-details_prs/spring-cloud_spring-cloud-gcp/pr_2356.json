{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODM0OTY4", "number": 2356, "title": "Add SpannerOptions auto-configuration for emulator", "bodyText": "Currently, in order to execute against the emulator, Spanner relies\non SPANNER_EMULATOR_HOST environment variable. This commit introduces\nnew configuration properties in order to enable and set the emulator host.", "createdAt": "2020-05-06T01:40:44Z", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356", "merged": true, "mergeCommit": {"oid": "326cabe184595306e12347efe1cd3999f839c96b"}, "closed": true, "closedAt": "2020-05-07T22:00:42Z", "author": {"login": "eddumelendez"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceeieUgH2gAyNDEzODM0OTY4OjI3YmZiZTcwOGMwM2Y5NzJiZDNlMDM3NGUzODYxYTYwYzRmZmU1NGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfEaBvgFqTQwNzg2MDAxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "27bfbe708c03f972bd3e0374e3861a60c4ffe54a", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/27bfbe708c03f972bd3e0374e3861a60c4ffe54a", "committedDate": "2020-05-06T01:38:37Z", "message": "Add SpannerOptions auto-configuration for emulator\n\nCurrently, in order to execute against the emulator, Spanner relies\non `SPANNER_EMULATOR_HOST` environment variable. This commit introduces\nnew configuration properties in order to enable and set the emulator host."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NjM3OTIw", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#pullrequestreview-406637920", "createdAt": "2020-05-06T13:56:07Z", "commit": {"oid": "27bfbe708c03f972bd3e0374e3861a60c4ffe54a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzo1NjowN1rOGRUQyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzo1NjowN1rOGRUQyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxMDk1NQ==", "bodyText": "If we don't set SpannerOptions.emulatorHost, then the client library will connect to the real Spanner instance, which may incur costs.\nI'd rather fail loudly here if emulator host is not available.\n@dmitry-s @meltsufin I recall a discussion recently about using .enabled vs the property used for something. Do you remember which style was decided on?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r420810955", "createdAt": "2020-05-06T13:56:07Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.spanner;\n+\n+import com.google.cloud.NoCredentials;\n+import com.google.cloud.spanner.SpannerOptions;\n+\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Provides auto-configuration to use the Spanner emulator if enabled.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+@Configuration\n+@AutoConfigureBefore(GcpSpannerAutoConfiguration.class)\n+@EnableConfigurationProperties(GcpSpannerProperties.class)\n+@ConditionalOnProperty(prefix = \"spring.cloud.gcp.spanner.emulator\", name = \"enabled\", havingValue = \"true\")\n+public class GcpSpannerEmulatorAutoConfiguration {\n+\n+\tprivate final GcpSpannerProperties properties;\n+\n+\tpublic GcpSpannerEmulatorAutoConfiguration(GcpSpannerProperties properties) {\n+\t\tthis.properties = properties;\n+\t}\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean\n+\tpublic SpannerOptions spannerOptions() {\n+\t\tSpannerOptions.Builder builder = SpannerOptions.newBuilder()\n+\t\t\t\t.setProjectId(this.properties.getProjectId())\n+\t\t\t\t.setCredentials(NoCredentials.getInstance());\n+\t\tif (this.properties.getEmulatorHost() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27bfbe708c03f972bd3e0374e3861a60c4ffe54a"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NzEwODg0", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#pullrequestreview-406710884", "createdAt": "2020-05-06T15:09:13Z", "commit": {"oid": "27bfbe708c03f972bd3e0374e3861a60c4ffe54a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNTowOToxM1rOGRXxxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNTowOToxM1rOGRXxxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg2ODU0OQ==", "bodyText": "Since we're providing NoCredentials, there is no risk of connecting to the real Spanner and incurring costs.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r420868549", "createdAt": "2020-05-06T15:09:13Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.spanner;\n+\n+import com.google.cloud.NoCredentials;\n+import com.google.cloud.spanner.SpannerOptions;\n+\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Provides auto-configuration to use the Spanner emulator if enabled.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+@Configuration\n+@AutoConfigureBefore(GcpSpannerAutoConfiguration.class)\n+@EnableConfigurationProperties(GcpSpannerProperties.class)\n+@ConditionalOnProperty(prefix = \"spring.cloud.gcp.spanner.emulator\", name = \"enabled\", havingValue = \"true\")\n+public class GcpSpannerEmulatorAutoConfiguration {\n+\n+\tprivate final GcpSpannerProperties properties;\n+\n+\tpublic GcpSpannerEmulatorAutoConfiguration(GcpSpannerProperties properties) {\n+\t\tthis.properties = properties;\n+\t}\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean\n+\tpublic SpannerOptions spannerOptions() {\n+\t\tSpannerOptions.Builder builder = SpannerOptions.newBuilder()\n+\t\t\t\t.setProjectId(this.properties.getProjectId())\n+\t\t\t\t.setCredentials(NoCredentials.getInstance());\n+\t\tif (this.properties.getEmulatorHost() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxMDk1NQ=="}, "originalCommit": {"oid": "27bfbe708c03f972bd3e0374e3861a60c4ffe54a"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NzQ2OTc4", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#pullrequestreview-406746978", "createdAt": "2020-05-06T15:46:49Z", "commit": {"oid": "27bfbe708c03f972bd3e0374e3861a60c4ffe54a"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNTo0Njo0OVrOGRZgdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNTo0Njo0OVrOGRZgdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg5Njg4Nw==", "bodyText": "In regard to  \".enabled vs the property\" - .enabled is the way to go.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r420896887", "createdAt": "2020-05-06T15:46:49Z", "author": {"login": "dmitry-s"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.spanner;\n+\n+import com.google.cloud.NoCredentials;\n+import com.google.cloud.spanner.SpannerOptions;\n+\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Provides auto-configuration to use the Spanner emulator if enabled.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+@Configuration\n+@AutoConfigureBefore(GcpSpannerAutoConfiguration.class)\n+@EnableConfigurationProperties(GcpSpannerProperties.class)\n+@ConditionalOnProperty(prefix = \"spring.cloud.gcp.spanner.emulator\", name = \"enabled\", havingValue = \"true\")\n+public class GcpSpannerEmulatorAutoConfiguration {\n+\n+\tprivate final GcpSpannerProperties properties;\n+\n+\tpublic GcpSpannerEmulatorAutoConfiguration(GcpSpannerProperties properties) {\n+\t\tthis.properties = properties;\n+\t}\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean\n+\tpublic SpannerOptions spannerOptions() {\n+\t\tSpannerOptions.Builder builder = SpannerOptions.newBuilder()\n+\t\t\t\t.setProjectId(this.properties.getProjectId())\n+\t\t\t\t.setCredentials(NoCredentials.getInstance());\n+\t\tif (this.properties.getEmulatorHost() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxMDk1NQ=="}, "originalCommit": {"oid": "27bfbe708c03f972bd3e0374e3861a60c4ffe54a"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1f8394974d87a36100df26057529226ecb2eb5d", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/f1f8394974d87a36100df26057529226ecb2eb5d", "committedDate": "2020-05-06T23:47:02Z", "message": "Update docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/6c5c52a64307d2d4280fbfcb2da9a03e762ee183", "committedDate": "2020-05-07T00:21:04Z", "message": "Rename property to host-port and add assert"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MzYyMDg0", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#pullrequestreview-407362084", "createdAt": "2020-05-07T10:56:22Z", "commit": {"oid": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDo1NjoyMlrOGR5Pag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDo1NjoyMlrOGR5Pag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQxNjgxMA==", "bodyText": "Not sure if we want to remove this.\nSetting/unsetting the variable is a quick way to switch all your tests to using the emulator and back to normal. Might be still useful.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r421416810", "createdAt": "2020-05-07T10:56:22Z", "author": {"login": "dmitry-s"}, "path": "docs/src/main/asciidoc/spanner.adoc", "diffHunk": "@@ -1435,10 +1437,11 @@ This command can be used to create Cloud Spanner instances:\n $ gcloud spanner instances create <instance-name> --config=emulator-config --description=\"<description>\" --nodes=1\n ----\n \n-Remember that you need to set the `SPANNER_EMULATOR_HOST` environment variable to use the emulator:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NDkzNjMx", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#pullrequestreview-407493631", "createdAt": "2020-05-07T13:52:58Z", "commit": {"oid": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo1Mjo1OVrOGR_oVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo1Njo1OVrOGR_0ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyMTQ5NA==", "bodyText": "@dmitry-s @elefeint Can we pick a consistent name for the emulator host property?\nI see spring.cloud.gcp.datastore.host and spring.cloud.gcp.pubsub.emulator-host and spring.cloud.gcp.firestore.host-port.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r421521494", "createdAt": "2020-05-07T13:52:59Z", "author": {"login": "meltsufin"}, "path": "docs/src/main/asciidoc/spanner.adoc", "diffHunk": "@@ -88,6 +88,8 @@ The schema for the tables will be \"ON DELETE NO ACTION\" if `false`. | No | `true\n | `spring.cloud.gcp.spanner.writeSessionsFraction` | Fraction of sessions to be kept prepared for write transactions | No | 0.2 - Determined by Cloud Spanner client library\n | `spring.cloud.gcp.spanner.keepAliveIntervalMinutes` | How long to keep idle sessions alive | No | 30 - Determined by Cloud Spanner client library\n | `spring.cloud.gcp.spanner.failIfPoolExhausted` |  If all sessions are in use, fail the request by throwing an exception. Otherwise, by default, block until a session becomes available. | No | `false`\n+| `spring.cloud.gcp.spanner.emulator.enabled` |  Enables the usage of an emulator. If this is set to true, then you should set the `spring.cloud.gcp.spanner.host-port` to the host:port of your locally running emulator instance. | No | `false`\n+| `spring.cloud.gcp.spanner.host-port` |  The host and port of the Spanner service; can be overridden to specify connecting to an already-running https://cloud.google.com/spanner/docs/emulator#installing_and_running_the_emulator[Spanner emulator] instance. | No |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyMzQzMg==", "bodyText": "I'm fine with removing it. Even though it's available, it's not consistent with the other emulators. We can leave a note about it, but I'm afraid it will only confuse people.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r421523432", "createdAt": "2020-05-07T13:55:28Z", "author": {"login": "meltsufin"}, "path": "docs/src/main/asciidoc/spanner.adoc", "diffHunk": "@@ -1435,10 +1437,11 @@ This command can be used to create Cloud Spanner instances:\n $ gcloud spanner instances create <instance-name> --config=emulator-config --description=\"<description>\" --nodes=1\n ----\n \n-Remember that you need to set the `SPANNER_EMULATOR_HOST` environment variable to use the emulator:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQxNjgxMA=="}, "originalCommit": {"oid": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyNDAwNA==", "bodyText": "Please add\n@since 1.2.3", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r421524004", "createdAt": "2020-05-07T13:56:15Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.spanner;\n+\n+import com.google.cloud.NoCredentials;\n+import com.google.cloud.spanner.SpannerOptions;\n+\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.util.Assert;\n+\n+/**\n+ * Provides auto-configuration to use the Spanner emulator if enabled.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyNDYxOA==", "bodyText": "Please add a comment above like the other props.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r421524618", "createdAt": "2020-05-07T13:56:59Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerProperties.java", "diffHunk": "@@ -70,6 +71,8 @@\n \t// Otherwise, by default, block until a session becomes available.\n \tprivate boolean failIfPoolExhausted = false;\n \n+\tprivate String hostPort;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6353ecab1987b295f8c20c9acef06beb7c6bcb98", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/6353ecab1987b295f8c20c9acef06beb7c6bcb98", "committedDate": "2020-05-07T18:36:03Z", "message": "Polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b6c7de0de0aeeaca7ad8c3fe2286fc6435f5208", "author": {"user": {"login": "meltsufin", "name": "Mike Eltsufin"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/5b6c7de0de0aeeaca7ad8c3fe2286fc6435f5208", "committedDate": "2020-05-07T21:35:21Z", "message": "Rename back to emulator-host and give it a default"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODU2MDM0", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#pullrequestreview-407856034", "createdAt": "2020-05-07T21:38:37Z", "commit": {"oid": "5b6c7de0de0aeeaca7ad8c3fe2286fc6435f5208"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODYwMDE1", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#pullrequestreview-407860015", "createdAt": "2020-05-07T21:45:47Z", "commit": {"oid": "5b6c7de0de0aeeaca7ad8c3fe2286fc6435f5208"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 450, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}