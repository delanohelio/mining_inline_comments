{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NzM0Nzgy", "number": 2480, "title": "add FirestoreTemplate docs", "bodyText": "fixes #1795", "createdAt": "2020-07-29T22:05:06Z", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480", "merged": true, "mergeCommit": {"oid": "85874edcc5d71c079e4d81f98443dc76bc969a47"}, "closed": true, "closedAt": "2020-08-05T20:58:40Z", "author": {"login": "dmitry-s"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5yVAnAH2gAyNDU4NzM0NzgyOjU5ZGI3MzRhNDE3OTcwNWZjYmEyOGY0YmJmMmQ1ZGEzODhlNzczMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc77r23gFqTQ2MTY5MjI1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59db734a4179705fcba28f4bbf2d5da388e77309", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/59db734a4179705fcba28f4bbf2d5da388e77309", "committedDate": "2020-07-29T21:57:58Z", "message": "add FirestoreTemplate docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "248a316b596a87f54c37a8b00ece5355d05611c9", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/248a316b596a87f54c37a8b00ece5355d05611c9", "committedDate": "2020-07-29T22:04:50Z", "message": "update docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDg1MjAx", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#pullrequestreview-458485201", "createdAt": "2020-07-30T14:58:49Z", "commit": {"oid": "248a316b596a87f54c37a8b00ece5355d05611c9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo1ODo0OVrOG5m84A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNTowNzoyMFrOG5nVEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2MDE5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: Currently some features are not supported: query by example, projections, auditing.\n          \n          \n            \n            NOTE: Currently some features are not supported: query by example, projections, and auditing.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#discussion_r463060192", "createdAt": "2020-07-30T14:58:49Z", "author": {"login": "dzou"}, "path": "docs/src/main/asciidoc/firestore.adoc", "diffHunk": "@@ -1,7 +1,7 @@\n :spring-data-commons-ref: https://docs.spring.io/spring-data/data-commons/docs/current/reference/html\n \n == Spring Data Cloud Firestore\n-NOTE: Currently some features are not supported: transactions, sorting, query by example, projections, auditing.\n+NOTE: Currently some features are not supported: query by example, projections, auditing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "248a316b596a87f54c37a8b00ece5355d05611c9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2MjM0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If the value is null, and the property type is `String`, the Id is generated automatically.\n          \n          \n            \n            NOTE: If the property annotated with `@DocumentId` is `null` and the property type is `String`, the document id is generated automatically when the entity is saved.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#discussion_r463062341", "createdAt": "2020-07-30T15:01:31Z", "author": {"login": "dzou"}, "path": "docs/src/main/asciidoc/firestore.adoc", "diffHunk": "@@ -110,6 +110,7 @@ include::{project-root}/spring-cloud-gcp-data-firestore/src/test/java/org/spring\n This annotation is optional, by default the collection name is derived from the class name.\n \n `@DocumentId` annotation marks a field to be used as document id. This annotation is required.\n+If the value is null, and the property type is `String`, the Id is generated automatically.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "248a316b596a87f54c37a8b00ece5355d05611c9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2NDUwNw==", "bodyText": "Could you also add another sentence describing what is the generated ID? (i.e. an X-character long UUID string.) This is to distinguish it from other generated IDs, such as sequences", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#discussion_r463064507", "createdAt": "2020-07-30T15:04:37Z", "author": {"login": "dzou"}, "path": "docs/src/main/asciidoc/firestore.adoc", "diffHunk": "@@ -110,6 +110,7 @@ include::{project-root}/spring-cloud-gcp-data-firestore/src/test/java/org/spring\n This annotation is optional, by default the collection name is derived from the class name.\n \n `@DocumentId` annotation marks a field to be used as document id. This annotation is required.\n+If the value is null, and the property type is `String`, the Id is generated automatically.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "248a316b596a87f54c37a8b00ece5355d05611c9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2NjM4NQ==", "bodyText": "It would be better if the code snippet did not use .block() because you want to avoid synchronous operations in reactive.\nWould suggest renaming method to: public Mono<XXX>/Flux<XXX> doSomething() and then have the method return a mono/flux.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#discussion_r463066385", "createdAt": "2020-07-30T15:07:20Z", "author": {"login": "dzou"}, "path": "docs/src/main/asciidoc/firestore.adoc", "diffHunk": "@@ -159,6 +160,39 @@ Repositories allow you to define custom Query Methods (detailed in the following\n \n NOTE: Custom queries with `@Query` annotation are not supported since there is no query language in Cloud Firestore\n \n+\n+=== Firestore Operations & Template\n+\n+`FirestoreOperations` and its implementation, `FirestoreTemplate`, provides the Template pattern familiar to Spring developers.\n+\n+Using the auto-configuration provided by Spring Data Cloud Firestore, your Spring application context will contain a fully configured `FirestoreTemplate` object that you can autowire in your application:\n+\n+[source,java]\n+----\n+@SpringBootApplication\n+public class FirestoreTemplateExample {\n+\n+\t@Autowired\n+\tFirestoreTemplate firestoreTemplate;\n+\n+\tpublic void doSomething() {\n+\n+\t\tthis.firestoreTemplate.save(new User(\"Alice\", 29))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "248a316b596a87f54c37a8b00ece5355d05611c9"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84c5bcd13b95e0d82b1a6027a7e71861134b0821", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/84c5bcd13b95e0d82b1a6027a7e71861134b0821", "committedDate": "2020-07-30T22:15:31Z", "message": "PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1db414f1e5dd420cf74efd25c47737ac6d1b19b", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/a1db414f1e5dd420cf74efd25c47737ac6d1b19b", "committedDate": "2020-07-30T22:16:26Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Daniel Zou <dzou@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjM0ODE2", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#pullrequestreview-460234816", "createdAt": "2020-08-03T18:04:33Z", "commit": {"oid": "84c5bcd13b95e0d82b1a6027a7e71861134b0821"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODowNDozNFrOG7Dhtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODowNjo0MVrOG7Dl2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU3Njk1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t.then(this.firestoreTemplate.save(new User(\"Bob\", 60)));\n          \n          \n            \n            \t\t\t.then(this.firestoreTemplate.save(new User(\"Bob\", 60)));", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#discussion_r464576951", "createdAt": "2020-08-03T18:04:34Z", "author": {"login": "dzou"}, "path": "docs/src/main/asciidoc/firestore.adoc", "diffHunk": "@@ -175,13 +175,17 @@ public class FirestoreTemplateExample {\n \t@Autowired\n \tFirestoreTemplate firestoreTemplate;\n \n-\tpublic void doSomething() {\n+\tpublic Mono<User> createUsers() {\n+\t\treturn this.firestoreTemplate.save(new User(\"Alice\", 29))\n+\t\t.then(this.firestoreTemplate.save(new User(\"Bob\", 60)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84c5bcd13b95e0d82b1a6027a7e71861134b0821"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU3ODAxMA==", "bodyText": "Add a new line above the NOTE: so that it gets rendered correctly as a note in the asciidoc.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#discussion_r464578010", "createdAt": "2020-08-03T18:06:41Z", "author": {"login": "dzou"}, "path": "docs/src/main/asciidoc/firestore.adoc", "diffHunk": "@@ -110,7 +110,7 @@ include::{project-root}/spring-cloud-gcp-data-firestore/src/test/java/org/spring\n This annotation is optional, by default the collection name is derived from the class name.\n \n `@DocumentId` annotation marks a field to be used as document id. This annotation is required.\n-If the value is null, and the property type is `String`, the Id is generated automatically.\n+NOTE: If the property annotated with `@DocumentId` is `null` and the property type is `String`, the document id is generated automatically when the entity is saved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1db414f1e5dd420cf74efd25c47737ac6d1b19b"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzQ2NTIx", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#pullrequestreview-460346521", "createdAt": "2020-08-03T21:15:58Z", "commit": {"oid": "a1db414f1e5dd420cf74efd25c47737ac6d1b19b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMToxNTo1OFrOG7I_Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMToxNzowOVrOG7JBNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY2NjQzOQ==", "bodyText": "@dmitry-s Could the id field be an Integer? In that case, what happens if it's null?\nIt just seems odd that it's so specific to String.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#discussion_r464666439", "createdAt": "2020-08-03T21:15:58Z", "author": {"login": "meltsufin"}, "path": "docs/src/main/asciidoc/firestore.adoc", "diffHunk": "@@ -110,6 +110,7 @@ include::{project-root}/spring-cloud-gcp-data-firestore/src/test/java/org/spring\n This annotation is optional, by default the collection name is derived from the class name.\n \n `@DocumentId` annotation marks a field to be used as document id. This annotation is required.\n+NOTE: If the property annotated with `@DocumentId` is `null` and the property type is `String`, the document id is generated automatically when the entity is saved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1db414f1e5dd420cf74efd25c47737ac6d1b19b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY2NjkzNQ==", "bodyText": "What not recommend autowiring FirestoreOperations?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#discussion_r464666935", "createdAt": "2020-08-03T21:17:09Z", "author": {"login": "meltsufin"}, "path": "docs/src/main/asciidoc/firestore.adoc", "diffHunk": "@@ -159,6 +160,43 @@ Repositories allow you to define custom Query Methods (detailed in the following\n \n NOTE: Custom queries with `@Query` annotation are not supported since there is no query language in Cloud Firestore\n \n+\n+=== Firestore Operations & Template\n+\n+`FirestoreOperations` and its implementation, `FirestoreTemplate`, provides the Template pattern familiar to Spring developers.\n+\n+Using the auto-configuration provided by Spring Data Cloud Firestore, your Spring application context will contain a fully configured `FirestoreTemplate` object that you can autowire in your application:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1db414f1e5dd420cf74efd25c47737ac6d1b19b"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6172ac39df277387294a9cb39026244dc54390d7", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/6172ac39df277387294a9cb39026244dc54390d7", "committedDate": "2020-08-04T00:43:22Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Daniel Zou <dzou@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNDU1Nzg3", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#pullrequestreview-460455787", "createdAt": "2020-08-04T02:33:27Z", "commit": {"oid": "6172ac39df277387294a9cb39026244dc54390d7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMjozMzoyN1rOG7O5gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMjozNTo1N1rOG7O8Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc2MzI2Ng==", "bodyText": "@dmitry-s This is still not addressed. It won't render correctly otherwise.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#discussion_r464763266", "createdAt": "2020-08-04T02:33:27Z", "author": {"login": "meltsufin"}, "path": "docs/src/main/asciidoc/firestore.adoc", "diffHunk": "@@ -110,7 +110,7 @@ include::{project-root}/spring-cloud-gcp-data-firestore/src/test/java/org/spring\n This annotation is optional, by default the collection name is derived from the class name.\n \n `@DocumentId` annotation marks a field to be used as document id. This annotation is required.\n-If the value is null, and the property type is `String`, the Id is generated automatically.\n+NOTE: If the property annotated with `@DocumentId` is `null` and the property type is `String`, the document id is generated automatically when the entity is saved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU3ODAxMA=="}, "originalCommit": {"oid": "a1db414f1e5dd420cf74efd25c47737ac6d1b19b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc2MzkzMA==", "bodyText": "Well, we're actually generating the IDs, but yes, because they need to be very random, it only works for strings.\nI would maybe clarifying by adding that ID auto-generation does not work for types other than String.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#discussion_r464763930", "createdAt": "2020-08-04T02:35:57Z", "author": {"login": "meltsufin"}, "path": "docs/src/main/asciidoc/firestore.adoc", "diffHunk": "@@ -110,6 +110,7 @@ include::{project-root}/spring-cloud-gcp-data-firestore/src/test/java/org/spring\n This annotation is optional, by default the collection name is derived from the class name.\n \n `@DocumentId` annotation marks a field to be used as document id. This annotation is required.\n+NOTE: If the property annotated with `@DocumentId` is `null` and the property type is `String`, the document id is generated automatically when the entity is saved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY2NjQzOQ=="}, "originalCommit": {"oid": "a1db414f1e5dd420cf74efd25c47737ac6d1b19b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61e8f10dc395933242c72fa271dea0afc233ec81", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/61e8f10dc395933242c72fa271dea0afc233ec81", "committedDate": "2020-08-04T20:10:51Z", "message": "verify that ID is String"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34d6f7b2c77a4b7ba6ec166678bf9290305ce67e", "author": {"user": {"login": "dmitry-s", "name": null}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/34d6f7b2c77a4b7ba6ec166678bf9290305ce67e", "committedDate": "2020-08-04T20:15:26Z", "message": "refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTQ0MzEy", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#pullrequestreview-461144312", "createdAt": "2020-08-04T20:20:34Z", "commit": {"oid": "34d6f7b2c77a4b7ba6ec166678bf9290305ce67e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjkxNjAx", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#pullrequestreview-461291601", "createdAt": "2020-08-05T02:08:35Z", "commit": {"oid": "34d6f7b2c77a4b7ba6ec166678bf9290305ce67e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNjkyMjUy", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2480#pullrequestreview-461692252", "createdAt": "2020-08-05T13:59:55Z", "commit": {"oid": "34d6f7b2c77a4b7ba6ec166678bf9290305ce67e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 502, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}