{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyODIxNjcx", "number": 2230, "title": "Adds exception handling to the PubSubReactiveFactory, where the exception is published to the Flux sink", "bodyText": "Fixes #2229 by publishing the exception to the Flux sink.\nThis may be partially seen as a breaking change as it changes the behaviour for the unlimited poll because the unlimited poll would previously ignore exceptions and keep on being rescheduled.", "createdAt": "2020-03-03T08:57:13Z", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2230", "merged": true, "mergeCommit": {"oid": "c5deb6d2230a22b56b5b071f26258ffc7d24a18a"}, "closed": true, "closedAt": "2020-03-03T13:52:59Z", "author": {"login": "mzeijen"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJ-Y_ugH2gAyMzgyODIxNjcxOjVmYzI1MzE3ZWQzYjI0MzMwYTNkN2U4ODk2MDRiODEyZWU1YzEwNGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKClTmgFqTM2Nzk4ODUxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5fc25317ed3b24330a3d7e889604b812ee5c104e", "author": {"user": {"login": "mzeijen", "name": "Maurice Zeijen"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/5fc25317ed3b24330a3d7e889604b812ee5c104e", "committedDate": "2020-03-03T08:52:49Z", "message": "Adds exception handling to the PubSubReactiveFactory, where exceptions from the PubSub client are passed to the sink of the Flux. Also the `sink.onDispose` is used to also dispose of the `subscriptionWorker` because `sink.onCancel` doesn't get called for streams that terminated with an error."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef534c6fddebd6834f39a6560d349bb330b5e69b", "author": {"user": {"login": "mzeijen", "name": "Maurice Zeijen"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/ef534c6fddebd6834f39a6560d349bb330b5e69b", "committedDate": "2020-03-03T09:07:06Z", "message": "Added javadoc regarding exception handling to poll method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTY1OTY5", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2230#pullrequestreview-367965969", "createdAt": "2020-03-03T13:14:29Z", "commit": {"oid": "ef534c6fddebd6834f39a6560d349bb330b5e69b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzoxNDoyOVrOFxFM9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzoxNTozNlrOFxFPJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwOTc4Mw==", "bodyText": "Could you update this method's javadoc to separate \"throw\" from \"timeout\"? This was a fairly convoluted setup to begin with; if someone has to troubleshoot it, I'd rather they have all the detail for what this method is supposed to do.", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2230#discussion_r387009783", "createdAt": "2020-03-03T13:14:29Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-pubsub/src/test/java/org/springframework/cloud/gcp/pubsub/reactive/PubSubReactiveFactoryTests.java", "diffHunk": "@@ -163,11 +195,13 @@ private void setUpMessages(String... messages) {\n \t\t\t\tswitch (nextPayload) {\n \t\t\t\t\tcase \"stop\":\n \t\t\t\t\t\treturn result;\n-\t\t\t\t\tcase \"throw\":\n+\t\t\t\t\tcase \"timeout\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef534c6fddebd6834f39a6560d349bb330b5e69b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAxMDM0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\tthrow new RuntimeException(\"exception during pull of messages\");\n          \n          \n            \n            \t\t\t\t\t\tthrow new RuntimeException(\"expected exception during pull of messages\");", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2230#discussion_r387010340", "createdAt": "2020-03-03T13:15:36Z", "author": {"login": "elefeint"}, "path": "spring-cloud-gcp-pubsub/src/test/java/org/springframework/cloud/gcp/pubsub/reactive/PubSubReactiveFactoryTests.java", "diffHunk": "@@ -163,11 +195,13 @@ private void setUpMessages(String... messages) {\n \t\t\t\tswitch (nextPayload) {\n \t\t\t\t\tcase \"stop\":\n \t\t\t\t\t\treturn result;\n-\t\t\t\t\tcase \"throw\":\n+\t\t\t\t\tcase \"timeout\":\n \t\t\t\t\t\tif (!result.isEmpty()) {\n \t\t\t\t\t\t\tfail(\"Bad setup -- 'throw' should be the first event in batch\");\n \t\t\t\t\t\t}\n \t\t\t\t\t\tthrow new DeadlineExceededException(\"this is a noop\", null, GrpcStatusCode.of(Status.Code.DEADLINE_EXCEEDED), true);\n+\t\t\t\t\tcase \"throw\":\n+\t\t\t\t\t\tthrow new RuntimeException(\"exception during pull of messages\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef534c6fddebd6834f39a6560d349bb330b5e69b"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90ac887521135ba34117064f6244599b5dba46fb", "author": {"user": {"login": "mzeijen", "name": "Maurice Zeijen"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/90ac887521135ba34117064f6244599b5dba46fb", "committedDate": "2020-03-03T13:30:46Z", "message": "Applied exception message suggestions of the runtime exception in the PubSubReactiveFactoryTests\n\nCo-Authored-By: Elena Felder <41136058+elefeint@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e34aecda25e20bf95cc852baf2592dc971fc5970", "author": {"user": {"login": "mzeijen", "name": "Maurice Zeijen"}}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/e34aecda25e20bf95cc852baf2592dc971fc5970", "committedDate": "2020-03-03T13:42:56Z", "message": "Corrected javadoc of PubSubReactiveFactoryTests.setUpMessages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTg4NTEw", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2230#pullrequestreview-367988510", "createdAt": "2020-03-03T13:45:53Z", "commit": {"oid": "e34aecda25e20bf95cc852baf2592dc971fc5970"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 564, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}