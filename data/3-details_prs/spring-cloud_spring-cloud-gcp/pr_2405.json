{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NDQyNDA5", "number": 2405, "title": "Allow `projectId` override in Firebase authentication", "bodyText": "Hi All,\nThis is my first PR on spring-cloud. Please let me know if you have any questions or suggestions.\nFixes #2178, I'm enabling the project ID to be set on FirebaseAuthenticationProperties.java so you can use a different project ID", "createdAt": "2020-05-30T09:43:31Z", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405", "merged": true, "mergeCommit": {"oid": "428b9105e0b8fb20cc82830a4c8a35548159b34c"}, "closed": true, "closedAt": "2020-06-03T02:28:55Z", "author": {"login": "femrtnz"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmUEMOgBqjMzODk1OTAxODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnf_L0AFqTQyMzE3NjI4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "172a8fe60db6705c4767e0e4bdeba82a51df11a2", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/172a8fe60db6705c4767e0e4bdeba82a51df11a2", "committedDate": "2020-05-30T09:43:17Z", "message": "Adding FirebaseAuthenticationProjectIdEvaluator"}, "afterCommit": {"oid": "b2d8be902bf78f37b005d6e8ad8baed920eec634", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b2d8be902bf78f37b005d6e8ad8baed920eec634", "committedDate": "2020-05-30T09:57:45Z", "message": "Adding FirebaseAuthenticationProjectIdEvaluator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2d8be902bf78f37b005d6e8ad8baed920eec634", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b2d8be902bf78f37b005d6e8ad8baed920eec634", "committedDate": "2020-05-30T09:57:45Z", "message": "Adding FirebaseAuthenticationProjectIdEvaluator"}, "afterCommit": {"oid": "f2b84218354dc40e11d45d8b236b7efeb1a95c7d", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/f2b84218354dc40e11d45d8b236b7efeb1a95c7d", "committedDate": "2020-05-30T10:24:06Z", "message": "Adding FirebaseAuthenticationProjectIdEvaluator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDMzODk5", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#pullrequestreview-421433899", "createdAt": "2020-05-30T18:31:10Z", "commit": {"oid": "f2b84218354dc40e11d45d8b236b7efeb1a95c7d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxODozMToxMFrOGc0sug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxODozODo1MlrOGc0vJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3NjczMA==", "bodyText": "missing .project-id", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#discussion_r432876730", "createdAt": "2020-05-30T18:31:10Z", "author": {"login": "eddumelendez"}, "path": "spring-cloud-gcp-autoconfigure/src/test/java/org/springframework/cloud/gcp/autoconfigure/security/FirebaseAuthenticationProjectIdEvaluatorTests.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.security;\n+\n+\n+import org.junit.Test;\n+\n+import org.springframework.boot.autoconfigure.AutoConfigurations;\n+import org.springframework.boot.test.context.runner.ApplicationContextRunner;\n+import org.springframework.cloud.gcp.core.GcpProjectIdProvider;\n+import org.springframework.context.annotation.Bean;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+\n+/**\n+ * @author Felipe M Amaral\n+ * @since 1.2.2\n+ */\n+public class FirebaseAuthenticationProjectIdEvaluatorTests {\n+\n+\t/**\n+\t * Project ID used by GcpProjectIdProvider.\n+\t */\n+\tpublic static final String GCP_PROVIDER_PROJECT_ID = \"spring-gcp-test-project\";\n+\n+\t/**\n+\t * Project ID used by FirebaseAuthenticationProperties.\n+\t */\n+\tpublic static final String FIREBASE_PROJECT_ID = \"spring-firebase-test-project\";\n+\n+\t@Test\n+\tpublic void testFirebaseProjectIdNotSet() throws Exception {\n+\t\tnew ApplicationContextRunner()\n+\t\t\t\t.withBean(FirebaseAuthenticationProjectIdEvaluator.class)\n+\t\t\t\t.withConfiguration(AutoConfigurations.of(TestConfig.class))\n+\t\t\t\t.run(context -> {\n+\t\t\t\t\tFirebaseAuthenticationProjectIdEvaluator evaluator = context.getBean(FirebaseAuthenticationProjectIdEvaluator.class);\n+\t\t\t\t\tassertThat(evaluator.getProjectId()).isEqualTo(GCP_PROVIDER_PROJECT_ID);\n+\t\t\t\t});\n+\t}\n+\n+\t@Test\n+\tpublic void testFirebaseProjectIdSet() throws Exception {\n+\t\tnew ApplicationContextRunner()\n+\t\t\t\t.withPropertyValues(\"spring.cloud.gcp.security.firebase=\" + FIREBASE_PROJECT_ID)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2b84218354dc40e11d45d8b236b7efeb1a95c7d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3Njc0NQ==", "bodyText": "1.2.4", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#discussion_r432876745", "createdAt": "2020-05-30T18:31:24Z", "author": {"login": "eddumelendez"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/security/FirebaseAuthenticationProjectIdEvaluator.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.security;\n+\n+import org.springframework.cloud.gcp.core.GcpProjectIdProvider;\n+\n+/**\n+ *\n+ * @author Felipe M Amaral\n+ * @since 1.2.2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2b84218354dc40e11d45d8b236b7efeb1a95c7d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3NzM1MQ==", "bodyText": "I think, you can use @EnableConfigurationProperties(FirebaseAuthenticationProperties .class so you can remove the bean mocking FirebaseAuthenticationProperties", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#discussion_r432877351", "createdAt": "2020-05-30T18:38:52Z", "author": {"login": "eddumelendez"}, "path": "spring-cloud-gcp-autoconfigure/src/test/java/org/springframework/cloud/gcp/autoconfigure/security/FirebaseAuthenticationProjectIdEvaluatorTests.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.security;\n+\n+\n+import org.junit.Test;\n+\n+import org.springframework.boot.autoconfigure.AutoConfigurations;\n+import org.springframework.boot.test.context.runner.ApplicationContextRunner;\n+import org.springframework.cloud.gcp.core.GcpProjectIdProvider;\n+import org.springframework.context.annotation.Bean;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+\n+/**\n+ * @author Felipe M Amaral\n+ * @since 1.2.2\n+ */\n+public class FirebaseAuthenticationProjectIdEvaluatorTests {\n+\n+\t/**\n+\t * Project ID used by GcpProjectIdProvider.\n+\t */\n+\tpublic static final String GCP_PROVIDER_PROJECT_ID = \"spring-gcp-test-project\";\n+\n+\t/**\n+\t * Project ID used by FirebaseAuthenticationProperties.\n+\t */\n+\tpublic static final String FIREBASE_PROJECT_ID = \"spring-firebase-test-project\";\n+\n+\t@Test\n+\tpublic void testFirebaseProjectIdNotSet() throws Exception {\n+\t\tnew ApplicationContextRunner()\n+\t\t\t\t.withBean(FirebaseAuthenticationProjectIdEvaluator.class)\n+\t\t\t\t.withConfiguration(AutoConfigurations.of(TestConfig.class))\n+\t\t\t\t.run(context -> {\n+\t\t\t\t\tFirebaseAuthenticationProjectIdEvaluator evaluator = context.getBean(FirebaseAuthenticationProjectIdEvaluator.class);\n+\t\t\t\t\tassertThat(evaluator.getProjectId()).isEqualTo(GCP_PROVIDER_PROJECT_ID);\n+\t\t\t\t});\n+\t}\n+\n+\t@Test\n+\tpublic void testFirebaseProjectIdSet() throws Exception {\n+\t\tnew ApplicationContextRunner()\n+\t\t\t\t.withPropertyValues(\"spring.cloud.gcp.security.firebase=\" + FIREBASE_PROJECT_ID)\n+\t\t\t\t.withBean(FirebaseAuthenticationProjectIdEvaluator.class)\n+\t\t\t\t.withConfiguration(AutoConfigurations.of(TestConfigWithFirebaseProjectId.class))\n+\t\t\t\t.run(context -> {\n+\t\t\t\t\tFirebaseAuthenticationProjectIdEvaluator evaluator = context.getBean(FirebaseAuthenticationProjectIdEvaluator.class);\n+\t\t\t\t\tassertThat(evaluator.getProjectId()).isEqualTo(FIREBASE_PROJECT_ID);\n+\t\t\t\t});\n+\t}\n+\n+\tstatic class TestConfig {\n+\n+\t\t@Bean\n+\t\tpublic GcpProjectIdProvider projectIdProvider() {\n+\t\t\treturn () -> GCP_PROVIDER_PROJECT_ID;\n+\t\t}\n+\n+\t\t@Bean\n+\t\tpublic FirebaseAuthenticationProperties firebaseAuthenticationProperties() {\n+\t\t\treturn mock(FirebaseAuthenticationProperties.class);\n+\t\t}\n+\n+\t}\n+\n+\tstatic class TestConfigWithFirebaseProjectId {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2b84218354dc40e11d45d8b236b7efeb1a95c7d"}, "originalPosition": 85}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2b84218354dc40e11d45d8b236b7efeb1a95c7d", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/f2b84218354dc40e11d45d8b236b7efeb1a95c7d", "committedDate": "2020-05-30T10:24:06Z", "message": "Adding FirebaseAuthenticationProjectIdEvaluator"}, "afterCommit": {"oid": "320dc41d720b4568f0bf249e2c508f6e1db4ac32", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/320dc41d720b4568f0bf249e2c508f6e1db4ac32", "committedDate": "2020-05-30T19:53:14Z", "message": "Adding FirebaseAuthenticationProjectIdEvaluator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDM5MjMx", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#pullrequestreview-421439231", "createdAt": "2020-05-30T20:00:19Z", "commit": {"oid": "320dc41d720b4568f0bf249e2c508f6e1db4ac32"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "320dc41d720b4568f0bf249e2c508f6e1db4ac32", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/320dc41d720b4568f0bf249e2c508f6e1db4ac32", "committedDate": "2020-05-30T19:53:14Z", "message": "Adding FirebaseAuthenticationProjectIdEvaluator"}, "afterCommit": {"oid": "0a748b9f901ae7cd4b87a248324a8db1d87ed9f9", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/0a748b9f901ae7cd4b87a248324a8db1d87ed9f9", "committedDate": "2020-05-31T08:39:14Z", "message": "Adding FirebaseAuthenticationProjectIdEvaluator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a748b9f901ae7cd4b87a248324a8db1d87ed9f9", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/0a748b9f901ae7cd4b87a248324a8db1d87ed9f9", "committedDate": "2020-05-31T08:39:14Z", "message": "Adding FirebaseAuthenticationProjectIdEvaluator"}, "afterCommit": {"oid": "63a8558d5fde79659c665d765e52e7fb356ff035", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/63a8558d5fde79659c665d765e52e7fb356ff035", "committedDate": "2020-06-01T10:22:41Z", "message": "Adding FirebaseAuthenticationProjectIdEvaluator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxODAwMzgx", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#pullrequestreview-421800381", "createdAt": "2020-06-01T12:22:35Z", "commit": {"oid": "63a8558d5fde79659c665d765e52e7fb356ff035"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjoyMjozNVrOGdIkuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjoyMjozNVrOGdIkuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIwMjM2Mw==", "bodyText": "Doesn't look resolved?", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#discussion_r433202363", "createdAt": "2020-06-01T12:22:35Z", "author": {"login": "ttomsu"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/security/FirebaseAuthenticationProjectIdEvaluator.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.security;\n+\n+import org.springframework.cloud.gcp.core.GcpProjectIdProvider;\n+\n+/**\n+ *\n+ * @author Felipe M Amaral\n+ * @since 1.2.2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3Njc0NQ=="}, "originalCommit": {"oid": "f2b84218354dc40e11d45d8b236b7efeb1a95c7d"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79210e9c23cf7ab754687d1b5807e975c3cd12c4", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/79210e9c23cf7ab754687d1b5807e975c3cd12c4", "committedDate": "2020-06-01T12:57:46Z", "message": " Adding FirebaseAuthenticationProjectIdEvaluator.java"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63a8558d5fde79659c665d765e52e7fb356ff035", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/63a8558d5fde79659c665d765e52e7fb356ff035", "committedDate": "2020-06-01T10:22:41Z", "message": "Adding FirebaseAuthenticationProjectIdEvaluator"}, "afterCommit": {"oid": "79210e9c23cf7ab754687d1b5807e975c3cd12c4", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/79210e9c23cf7ab754687d1b5807e975c3cd12c4", "committedDate": "2020-06-01T12:57:46Z", "message": " Adding FirebaseAuthenticationProjectIdEvaluator.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e5d56f669245b3aead4085abb5c9fa115a80217", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/4e5d56f669245b3aead4085abb5c9fa115a80217", "committedDate": "2020-06-01T18:49:17Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMTc3MTk2", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#pullrequestreview-422177196", "createdAt": "2020-06-01T20:58:38Z", "commit": {"oid": "4e5d56f669245b3aead4085abb5c9fa115a80217"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDo1ODozOFrOGdZ6Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDo1ODozOFrOGdZ6Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ4NjM5NA==", "bodyText": "Do we really need this class? In every other module we implement this feature directly in the auto-configuration class with code that looks something like this:\n\tpublic GcpPubSubAutoConfiguration(GcpPubSubProperties gcpPubSubProperties,\n\t\t\tGcpProjectIdProvider gcpProjectIdProvider,\n\t\t\tCredentialsProvider credentialsProvider) throws IOException {\n\t\tthis.gcpPubSubProperties = gcpPubSubProperties;\n\t\tthis.finalProjectIdProvider = (gcpPubSubProperties.getProjectId() != null)\n\t\t\t\t? gcpPubSubProperties::getProjectId\n\t\t\t\t: gcpProjectIdProvider;", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#discussion_r433486394", "createdAt": "2020-06-01T20:58:38Z", "author": {"login": "meltsufin"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/security/FirebaseAuthenticationProjectIdEvaluator.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.security;\n+\n+import org.springframework.cloud.gcp.core.GcpProjectIdProvider;\n+\n+/**\n+ *\n+ * @author Felipe M Amaral\n+ * @since 1.2.4\n+ */\n+public class FirebaseAuthenticationProjectIdEvaluator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e5d56f669245b3aead4085abb5c9fa115a80217"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d0cb95f2cb46d103675bebe659a5f08fd4b20a4", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/8d0cb95f2cb46d103675bebe659a5f08fd4b20a4", "committedDate": "2020-06-02T19:32:18Z", "message": "Validating projectId following the current module implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29c4cf7495115463c36766a97245389f6ee53188", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/29c4cf7495115463c36766a97245389f6ee53188", "committedDate": "2020-06-02T20:17:41Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDI2NDQx", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#pullrequestreview-423026441", "createdAt": "2020-06-02T20:18:26Z", "commit": {"oid": "8d0cb95f2cb46d103675bebe659a5f08fd4b20a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDoxODoyNlrOGeCgXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDoxODoyNlrOGeCgXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1MTUxNw==", "bodyText": "I think parenthesis are not needed \ud83d\ude2c", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#discussion_r434151517", "createdAt": "2020-06-02T20:18:26Z", "author": {"login": "eddumelendez"}, "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/security/FirebaseAuthenticationAutoConfiguration.java", "diffHunk": "@@ -58,13 +58,19 @@\n \n \tprivate static final String ISSUER_TEMPLATE = \"https://securetoken.google.com/%s\";\n \n+\tprivate final String projectId;\n+\n+\tpublic FirebaseAuthenticationAutoConfiguration(GcpProjectIdProvider gcpProjectIdProvider, FirebaseAuthenticationProperties properties) {\n+\t\tthis.projectId = (properties.getProjectId() != null) ? properties.getProjectId() : gcpProjectIdProvider.getProjectId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d0cb95f2cb46d103675bebe659a5f08fd4b20a4"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e8fa8edfc5a365cc99331ef746fa05adb0ec27f", "author": {"user": null}, "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/4e8fa8edfc5a365cc99331ef746fa05adb0ec27f", "committedDate": "2020-06-02T20:41:09Z", "message": "Removing parenthesis"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTc2Mjg0", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2405#pullrequestreview-423176284", "createdAt": "2020-06-03T02:25:12Z", "commit": {"oid": "4e8fa8edfc5a365cc99331ef746fa05adb0ec27f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 468, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}