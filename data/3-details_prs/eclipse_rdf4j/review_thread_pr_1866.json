{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MzEwMjU3", "number": 1866, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjo1NzozMVrODaVsmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjoyMjo1MVrODbC0Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTQ1MDUxOnYy", "diffSide": "RIGHT", "path": "core/util/src/main/java/org/eclipse/rdf4j/common/text/StringUtil.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjo1NzozMlrOFhPYMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwNDowMjo0MFrOFhusAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5OTI4MA==", "bodyText": "I'm worried that using %-encoding is not the right way to go here. They effectively change the IRI. For example, http://a.example/%66oo-bar is not considered the same IRI as http://a.example/foo-bar (unless you specifically use IRI percent encoding normalization).", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r370399280", "createdAt": "2020-01-23T22:57:32Z", "author": {"login": "jeenbroekstra"}, "path": "core/util/src/main/java/org/eclipse/rdf4j/common/text/StringUtil.java", "diffHunk": "@@ -72,8 +82,61 @@ public static String gsub(String olds, String news, String text) {\n \t\treturn buf.toString();\n \t}\n \n+\tprivate static String hex(int c) {\n+\t\treturn Integer.toHexString(c).toUpperCase(Locale.US);\n+\t}\n+\n+\t/**\n+\t * Escapes string to a (mostly) conforming IRI value and append it to the appendable. Most invalid characters are\n+\t * percent-encoded, non-ASCII values can optionally be numerically encoded.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4718a867f98c705683bfc12da6add9d7d7195c27"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQwMTQ5OQ==", "bodyText": "See also https://www.w3.org/TR/turtle/#numeric", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r370401499", "createdAt": "2020-01-23T23:04:26Z", "author": {"login": "jeenbroekstra"}, "path": "core/util/src/main/java/org/eclipse/rdf4j/common/text/StringUtil.java", "diffHunk": "@@ -72,8 +82,61 @@ public static String gsub(String olds, String news, String text) {\n \t\treturn buf.toString();\n \t}\n \n+\tprivate static String hex(int c) {\n+\t\treturn Integer.toHexString(c).toUpperCase(Locale.US);\n+\t}\n+\n+\t/**\n+\t * Escapes string to a (mostly) conforming IRI value and append it to the appendable. Most invalid characters are\n+\t * percent-encoded, non-ASCII values can optionally be numerically encoded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5OTI4MA=="}, "originalCommit": {"oid": "4718a867f98c705683bfc12da6add9d7d7195c27"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQwMjc2MQ==", "bodyText": "Given that both Turtle and N-Triples specs now specify UTF-8 rather than ASCII, and IRIs supercede URIs (see RFC 3987 vs 3986), I think we should, when serializing, consistently use numeric escapes. %-encodings should just not be touched.", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r370402761", "createdAt": "2020-01-23T23:08:36Z", "author": {"login": "jeenbroekstra"}, "path": "core/util/src/main/java/org/eclipse/rdf4j/common/text/StringUtil.java", "diffHunk": "@@ -72,8 +82,61 @@ public static String gsub(String olds, String news, String text) {\n \t\treturn buf.toString();\n \t}\n \n+\tprivate static String hex(int c) {\n+\t\treturn Integer.toHexString(c).toUpperCase(Locale.US);\n+\t}\n+\n+\t/**\n+\t * Escapes string to a (mostly) conforming IRI value and append it to the appendable. Most invalid characters are\n+\t * percent-encoded, non-ASCII values can optionally be numerically encoded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5OTI4MA=="}, "originalCommit": {"oid": "4718a867f98c705683bfc12da6add9d7d7195c27"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwOTgwNw==", "bodyText": "I was probably not clear enough in the javadoc :-)\nThe code does exactly what you suggested: using numeric escapes (IF escapeEncoding is set, which can be the case for NTriples since it still allows for ASCII served over legacy text/plain. Turtle is all UTF8 so it doesn't use this setting)\nFor invalid characters in IRIs (thus an invalid IRI to begin with...), like a space or a weird control character, % encoding is used (otherwise there is no way to make it parse, numeric encoding will still fail)", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r370509807", "createdAt": "2020-01-24T08:03:02Z", "author": {"login": "barthanssens"}, "path": "core/util/src/main/java/org/eclipse/rdf4j/common/text/StringUtil.java", "diffHunk": "@@ -72,8 +82,61 @@ public static String gsub(String olds, String news, String text) {\n \t\treturn buf.toString();\n \t}\n \n+\tprivate static String hex(int c) {\n+\t\treturn Integer.toHexString(c).toUpperCase(Locale.US);\n+\t}\n+\n+\t/**\n+\t * Escapes string to a (mostly) conforming IRI value and append it to the appendable. Most invalid characters are\n+\t * percent-encoded, non-ASCII values can optionally be numerically encoded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5OTI4MA=="}, "originalCommit": {"oid": "4718a867f98c705683bfc12da6add9d7d7195c27"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMjI1Ng==", "bodyText": "Ah I see! Right that makes more sense, thanks for clarifying :)", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r370912256", "createdAt": "2020-01-25T04:02:40Z", "author": {"login": "jeenbroekstra"}, "path": "core/util/src/main/java/org/eclipse/rdf4j/common/text/StringUtil.java", "diffHunk": "@@ -72,8 +82,61 @@ public static String gsub(String olds, String news, String text) {\n \t\treturn buf.toString();\n \t}\n \n+\tprivate static String hex(int c) {\n+\t\treturn Integer.toHexString(c).toUpperCase(Locale.US);\n+\t}\n+\n+\t/**\n+\t * Escapes string to a (mostly) conforming IRI value and append it to the appendable. Most invalid characters are\n+\t * percent-encoded, non-ASCII values can optionally be numerically encoded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5OTI4MA=="}, "originalCommit": {"oid": "4718a867f98c705683bfc12da6add9d7d7195c27"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Njg0MzIzOnYy", "diffSide": "RIGHT", "path": "core/rio/ntriples/src/main/java/org/eclipse/rdf4j/rio/ntriples/NTriplesUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjoyMjo1MVrOFiTjig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxODoxMToyM1rOFivSCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxNjI5OA==", "bodyText": "This stringbuilder is no longer used.", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r371516298", "createdAt": "2020-01-27T22:22:51Z", "author": {"login": "jeenbroekstra"}, "path": "core/rio/ntriples/src/main/java/org/eclipse/rdf4j/rio/ntriples/NTriplesUtil.java", "diffHunk": "@@ -252,22 +276,45 @@ public static void append(Resource resource, Appendable appendable) throws IOExc\n \n \t/**\n \t * Creates an N-Triples string for the supplied URI.\n+\t * \n+\t * @param uri\n+\t * @return string\n \t */\n \tpublic static String toNTriplesString(IRI uri) {\n \t\treturn \"<\" + escapeString(uri.toString()) + \">\";\n \t}\n \n+\t/**\n+\t * Appends the N-Triples representation of the given {@link IRI} to the given {@link Appendable}.\n+\t * \n+\t * @param uri        The IRI to write.\n+\t * @param appendable The object to append to.\n+\t * @throws IOException\n+\t */\n \tpublic static void append(IRI uri, Appendable appendable) throws IOException {\n+\t\tappend(uri, appendable, true);\n+\t}\n+\n+\t/**\n+\t * Appends the N-Triples representation of the given {@link IRI} to the given {@link Appendable}.\n+\t * \n+\t * @param uri\n+\t * @param appendable\n+\t * @param escapeUnicode\n+\t * @throws java.io.IOException\n+\t */\n+\tpublic static void append(IRI uri, Appendable appendable, boolean escapeUnicode) throws IOException {\n \t\tStringBuilder sb = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59516c94612362e87c1468f96e42b40b1106ff79"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk3MDU2OQ==", "bodyText": "thanks, good catch", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r371970569", "createdAt": "2020-01-28T18:11:23Z", "author": {"login": "barthanssens"}, "path": "core/rio/ntriples/src/main/java/org/eclipse/rdf4j/rio/ntriples/NTriplesUtil.java", "diffHunk": "@@ -252,22 +276,45 @@ public static void append(Resource resource, Appendable appendable) throws IOExc\n \n \t/**\n \t * Creates an N-Triples string for the supplied URI.\n+\t * \n+\t * @param uri\n+\t * @return string\n \t */\n \tpublic static String toNTriplesString(IRI uri) {\n \t\treturn \"<\" + escapeString(uri.toString()) + \">\";\n \t}\n \n+\t/**\n+\t * Appends the N-Triples representation of the given {@link IRI} to the given {@link Appendable}.\n+\t * \n+\t * @param uri        The IRI to write.\n+\t * @param appendable The object to append to.\n+\t * @throws IOException\n+\t */\n \tpublic static void append(IRI uri, Appendable appendable) throws IOException {\n+\t\tappend(uri, appendable, true);\n+\t}\n+\n+\t/**\n+\t * Appends the N-Triples representation of the given {@link IRI} to the given {@link Appendable}.\n+\t * \n+\t * @param uri\n+\t * @param appendable\n+\t * @param escapeUnicode\n+\t * @throws java.io.IOException\n+\t */\n+\tpublic static void append(IRI uri, Appendable appendable, boolean escapeUnicode) throws IOException {\n \t\tStringBuilder sb = new StringBuilder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxNjI5OA=="}, "originalCommit": {"oid": "59516c94612362e87c1468f96e42b40b1106ff79"}, "originalPosition": 121}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1629, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}