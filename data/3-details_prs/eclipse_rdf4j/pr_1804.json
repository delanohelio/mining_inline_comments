{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NTkzNDEw", "number": 1804, "title": "GH-1555 Improve FedX Demo code and examples", "bodyText": "GitHub issue resolved: #1555\nImprove the examples and demo snippets", "createdAt": "2020-01-02T09:11:33Z", "url": "https://github.com/eclipse/rdf4j/pull/1804", "merged": true, "mergeCommit": {"oid": "ce83ac459e52ccf1857c1a44764fa7fa930b3007"}, "closed": true, "closedAt": "2020-01-04T06:29:15Z", "author": {"login": "aschwarte10"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2WEylgH2gAyMzU4NTkzNDEwOjZkZjdjYmU4YWVhOTBmZDNlM2EwNDk2M2UzYWMzMjA2ZDE0MWQyODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb23jQwAFqTMzODMyMTczNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6df7cbe8aea90fd3e3a04963e3ac3206d141d281", "author": {"user": {"login": "aschwarte10", "name": "Andreas Schwarte"}}, "url": "https://github.com/eclipse/rdf4j/commit/6df7cbe8aea90fd3e3a04963e3ac3206d141d281", "committedDate": "2020-01-02T09:09:59Z", "message": "Improve FedX Demo code and examples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3NjU1NTgw", "url": "https://github.com/eclipse/rdf4j/pull/1804#pullrequestreview-337655580", "createdAt": "2020-01-02T13:24:11Z", "commit": {"oid": "6df7cbe8aea90fd3e3a04963e3ac3206d141d281"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzoyNDoxMVrOFZre1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzoyNDoxMVrOFZre1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3MTEyNg==", "bodyText": "Btw. Counting is nicer with\ntry(.... stream = Iterations.stream(query.evaluate)){\n   .... count = stream.count();\n}", "url": "https://github.com/eclipse/rdf4j/pull/1804#discussion_r362471126", "createdAt": "2020-01-02T13:24:11Z", "author": {"login": "hmottestad"}, "path": "tools/federation/src/test/java/demos/MonitorRequestsDemo.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package demos;\n+\n+import org.eclipse.rdf4j.federated.FedXConfig;\n+import org.eclipse.rdf4j.federated.FedXFactory;\n+import org.eclipse.rdf4j.federated.monitoring.MonitoringUtil;\n+import org.eclipse.rdf4j.federated.repository.FedXRepository;\n+import org.eclipse.rdf4j.query.QueryLanguage;\n+import org.eclipse.rdf4j.query.TupleQuery;\n+import org.eclipse.rdf4j.query.TupleQueryResult;\n+import org.eclipse.rdf4j.repository.RepositoryConnection;\n+\n+public class MonitorRequestsDemo {\n+\n+\tpublic static void main(String[] args) throws Exception {\n+\n+\t\tFedXConfig config = new FedXConfig().withEnableMonitoring(true).withLogQueries(true);\n+\t\tFedXRepository repo = FedXFactory.newFederation()\n+\t\t\t\t.withSparqlEndpoint(\"http://dbpedia.org/sparql\")\n+\t\t\t\t.withSparqlEndpoint(\"https://query.wikidata.org/sparql\")\n+\t\t\t\t.withConfig(config)\n+\t\t\t\t.create();\n+\n+\t\trepo.init();\n+\n+\t\tString q = \"PREFIX wd: <http://www.wikidata.org/entity/> \"\n+\t\t\t\t+ \"PREFIX wdt: <http://www.wikidata.org/prop/direct/> \"\n+\t\t\t\t+ \"SELECT * WHERE { \"\n+\t\t\t\t+ \" ?country a <http://dbpedia.org/class/yago/WikicatMemberStatesOfTheEuropeanUnion> .\"\n+\t\t\t\t+ \" ?country <http://www.w3.org/2002/07/owl#sameAs> ?countrySameAs . \"\n+\t\t\t\t+ \" ?countrySameAs wdt:P2131 ?gdp .\"\n+\t\t\t\t+ \"}\";\n+\n+\t\ttry (RepositoryConnection conn = repo.getConnection()) {\n+\t\t\tTupleQuery query = conn.prepareTupleQuery(QueryLanguage.SPARQL, q);\n+\t\t\ttry (TupleQueryResult res = query.evaluate()) {\n+\n+\t\t\t\tint count = 0;\n+\t\t\t\twhile (res.hasNext()) {\n+\t\t\t\t\tres.next();\n+\t\t\t\t\tcount++;\n+\t\t\t\t}\n+\n+\t\t\t\tSystem.out.println(\"# Done, \" + count + \" results\");\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6df7cbe8aea90fd3e3a04963e3ac3206d141d281"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4MzIxNzM1", "url": "https://github.com/eclipse/rdf4j/pull/1804#pullrequestreview-338321735", "createdAt": "2020-01-04T00:10:08Z", "commit": {"oid": "6df7cbe8aea90fd3e3a04963e3ac3206d141d281"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 75, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}