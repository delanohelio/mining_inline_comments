{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MDgxNDg4", "number": 2625, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMDoxMzowNlrOE1BtJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMDoxMzowNlrOE1BtJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDM3OTI1OnYy", "diffSide": "RIGHT", "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/structures/FedXTupleQuery.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMDoxMzowNlrOHtE5qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwNjo1ODoxMlrOHtLHlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAyODI2NQ==", "bodyText": "Should this be in a try-with-resources block rather than this if-else? There's a possibility here that the resource is left dangling (e.g. if the isPassedThrough method craps out with an exception).", "url": "https://github.com/eclipse/rdf4j/pull/2625#discussion_r517028265", "createdAt": "2020-11-04T00:13:06Z", "author": {"login": "jeenbroekstra"}, "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/structures/FedXTupleQuery.java", "diffHunk": "@@ -48,8 +51,26 @@ public TupleQueryResult evaluate() throws QueryEvaluationException {\n \t@Override\n \tpublic void evaluate(TupleQueryResultHandler handler)\n \t\t\tthrows QueryEvaluationException, TupleQueryResultHandlerException {\n+\n+\t\t// attach the handler to the query to allow pass through of results\n+\t\t// for single source queries\n+\t\tTupleExpr tupleExpr = getParsedQuery().getTupleExpr();\n+\t\tPassThroughTupleExpr passThroughTupleExpr = new PassThroughTupleExpr(tupleExpr,\n+\t\t\t\thandler);\n+\t\tdelegate.getParsedQuery().setTupleExpr(passThroughTupleExpr);\n+\n \t\tFedXUtil.applyQueryBindings(this);\n-\t\tdelegate.evaluate(handler);\n+\t\tTupleQueryResult tqr = delegate.evaluate();\n+\n+\t\tif (!passThroughTupleExpr.isPassedThrough()) {\n+\t\t\t// if the result is not passed through to the handler directly,\n+\t\t\t// we need to make sure to report the result. Note that only\n+\t\t\t// SingleSourceQuery instances can be passed through\n+\t\t\tQueryResults.report(tqr, handler);\n+\t\t} else {\n+\t\t\t// to be absolutely sure that everything is closed\n+\t\t\ttqr.close();\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2b63822e64f7013dcd8708415074bdfdf2f866"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEwODAxNQ==", "bodyText": "I think this is not absolutely require, but it doesn't harm either.\nIn SailTupleQuery it is also\nTupleQueryResult queryResult = evaluate();\nQueryResults.report(queryResult, handler);\n\nThe only minimal difference here is the call to isPssedThrough which cannot throw an exception.\nDo you still think we should have the close in a try with resources block?", "url": "https://github.com/eclipse/rdf4j/pull/2625#discussion_r517108015", "createdAt": "2020-11-04T05:40:42Z", "author": {"login": "aschwarte10"}, "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/structures/FedXTupleQuery.java", "diffHunk": "@@ -48,8 +51,26 @@ public TupleQueryResult evaluate() throws QueryEvaluationException {\n \t@Override\n \tpublic void evaluate(TupleQueryResultHandler handler)\n \t\t\tthrows QueryEvaluationException, TupleQueryResultHandlerException {\n+\n+\t\t// attach the handler to the query to allow pass through of results\n+\t\t// for single source queries\n+\t\tTupleExpr tupleExpr = getParsedQuery().getTupleExpr();\n+\t\tPassThroughTupleExpr passThroughTupleExpr = new PassThroughTupleExpr(tupleExpr,\n+\t\t\t\thandler);\n+\t\tdelegate.getParsedQuery().setTupleExpr(passThroughTupleExpr);\n+\n \t\tFedXUtil.applyQueryBindings(this);\n-\t\tdelegate.evaluate(handler);\n+\t\tTupleQueryResult tqr = delegate.evaluate();\n+\n+\t\tif (!passThroughTupleExpr.isPassedThrough()) {\n+\t\t\t// if the result is not passed through to the handler directly,\n+\t\t\t// we need to make sure to report the result. Note that only\n+\t\t\t// SingleSourceQuery instances can be passed through\n+\t\t\tQueryResults.report(tqr, handler);\n+\t\t} else {\n+\t\t\t// to be absolutely sure that everything is closed\n+\t\t\ttqr.close();\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAyODI2NQ=="}, "originalCommit": {"oid": "cb2b63822e64f7013dcd8708415074bdfdf2f866"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEzMDEzNA==", "bodyText": "Nah, fair enough.", "url": "https://github.com/eclipse/rdf4j/pull/2625#discussion_r517130134", "createdAt": "2020-11-04T06:58:12Z", "author": {"login": "jeenbroekstra"}, "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/structures/FedXTupleQuery.java", "diffHunk": "@@ -48,8 +51,26 @@ public TupleQueryResult evaluate() throws QueryEvaluationException {\n \t@Override\n \tpublic void evaluate(TupleQueryResultHandler handler)\n \t\t\tthrows QueryEvaluationException, TupleQueryResultHandlerException {\n+\n+\t\t// attach the handler to the query to allow pass through of results\n+\t\t// for single source queries\n+\t\tTupleExpr tupleExpr = getParsedQuery().getTupleExpr();\n+\t\tPassThroughTupleExpr passThroughTupleExpr = new PassThroughTupleExpr(tupleExpr,\n+\t\t\t\thandler);\n+\t\tdelegate.getParsedQuery().setTupleExpr(passThroughTupleExpr);\n+\n \t\tFedXUtil.applyQueryBindings(this);\n-\t\tdelegate.evaluate(handler);\n+\t\tTupleQueryResult tqr = delegate.evaluate();\n+\n+\t\tif (!passThroughTupleExpr.isPassedThrough()) {\n+\t\t\t// if the result is not passed through to the handler directly,\n+\t\t\t// we need to make sure to report the result. Note that only\n+\t\t\t// SingleSourceQuery instances can be passed through\n+\t\t\tQueryResults.report(tqr, handler);\n+\t\t} else {\n+\t\t\t// to be absolutely sure that everything is closed\n+\t\t\ttqr.close();\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAyODI2NQ=="}, "originalCommit": {"oid": "cb2b63822e64f7013dcd8708415074bdfdf2f866"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1319, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}