{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMzcyNzY2", "number": 2264, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxMDowMjoxMVrOD_L6uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxMDowMjoxMVrOD_L6uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTgyMTM3OnYy", "diffSide": "RIGHT", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/vocabulary/XSD.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxMDowMjoxMVrOGZt52g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDowNzoyNFrOGZyJSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxOTY3NA==", "bodyText": "I also prefer this structure over the one where we have a separate static block to instantiate the field.\nBtw. I still think the use of uppercase for our fields is absolutely horrible. It is convention over common sense. This is particularly bad for the SHACL namespace, eg. sh:nodeKind and sh:NodeKind.", "url": "https://github.com/eclipse/rdf4j/pull/2264#discussion_r429619674", "createdAt": "2020-05-24T10:02:11Z", "author": {"login": "hmottestad"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/vocabulary/XSD.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.model.vocabulary;\n+\n+import org.eclipse.rdf4j.model.IRI;\n+import org.eclipse.rdf4j.model.Namespace;\n+import org.eclipse.rdf4j.model.impl.SimpleNamespace;\n+import org.eclipse.rdf4j.model.impl.SimpleValueFactory;\n+\n+/**\n+ * Constants for the standard <a href=\"https://www.w3.org/TR/xmlschema11-2/\">XML Schema 1.1 datatypes</a>.\n+ *\n+ * @see <a href=\"https://www.w3.org/TR/xmlschema11-2/\">XML Schema 1.1 Part 2: Datatypes</a>\n+ */\n+public class XSD {\n+\n+\t/** The XML Schema namespace (<tt>http://www.w3.org/2001/XMLSchema#</tt>). */\n+\tpublic static final String NAMESPACE = \"http://www.w3.org/2001/XMLSchema#\";\n+\n+\t/**\n+\t * Recommended prefix for XML Schema datatypes: \"xsd\"\n+\t */\n+\tpublic static final String PREFIX = \"xsd\";\n+\n+\t/**\n+\t * An immutable {@link Namespace} constant that represents the XML Schema namespace.\n+\t */\n+\tpublic static final Namespace NS = new SimpleNamespace(PREFIX, NAMESPACE);\n+\n+\t/*\n+\t * Primitive datatypes\n+\t */\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#duration</tt> */\n+\tpublic final static IRI DURATION = create(\"duration\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#dateTime</tt> */\n+\tpublic final static IRI DATETIME = create(\"dateTime\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#dateTimeStamp</tt> */\n+\tpublic final static IRI DATETIMESTAMP = create(\"dateTimeStamp\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#dayTimeDuration</tt> */\n+\tpublic static final IRI DAYTIMEDURATION = create(\"dayTimeDuration\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#time</tt> */\n+\tpublic final static IRI TIME = create(\"time\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#date</tt> */\n+\tpublic final static IRI DATE = create(\"date\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#gYearMonth</tt> */\n+\tpublic final static IRI GYEARMONTH = create(\"gYearMonth\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#gYear</tt> */\n+\tpublic final static IRI GYEAR = create(\"gYear\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#gMonthDay</tt> */\n+\tpublic final static IRI GMONTHDAY = create(\"gMonthDay\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#gDay</tt> */\n+\tpublic final static IRI GDAY = create(\"gDay\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#gMonth</tt> */\n+\tpublic final static IRI GMONTH = create(\"gMonth\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#string</tt> */\n+\tpublic final static IRI STRING = create(\"string\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#boolean</tt> */\n+\tpublic final static IRI BOOLEAN = create(\"boolean\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#base64Binary</tt> */\n+\tpublic final static IRI BASE64BINARY = create(\"base64Binary\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#hexBinary</tt> */\n+\tpublic final static IRI HEXBINARY = create(\"hexBinary\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#float</tt> */\n+\tpublic final static IRI FLOAT = create(\"float\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#decimal</tt> */\n+\tpublic final static IRI DECIMAL = create(\"decimal\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#double</tt> */\n+\tpublic final static IRI DOUBLE = create(\"double\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#anyURI</tt> */\n+\tpublic final static IRI ANYURI = create(\"anyURI\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#QName</tt> */\n+\tpublic final static IRI QNAME = create(\"QName\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#NOTATION</tt> */\n+\tpublic final static IRI NOTATION = create(\"NOTATION\");\n+\n+\t/*\n+\t * Derived datatypes\n+\t */\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#normalizedString</tt> */\n+\tpublic final static IRI NORMALIZEDSTRING = create(\"normalizedString\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#token</tt> */\n+\tpublic final static IRI TOKEN = create(\"token\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#language</tt> */\n+\tpublic final static IRI LANGUAGE = create(\"language\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#NMTOKEN</tt> */\n+\tpublic final static IRI NMTOKEN = create(\"NMTOKEN\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#NMTOKENS</tt> */\n+\tpublic final static IRI NMTOKENS = create(\"NMTOKENS\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#Name</tt> */\n+\tpublic final static IRI NAME = create(\"Name\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#NCName</tt> */\n+\tpublic final static IRI NCNAME = create(\"NCName\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1057b220ce2aa8e881e23c20bceb3d3b2c779686"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY4OTE2MA==", "bodyText": "I don't think we envisaged different case having different meanings when we originally adopted the convention for this. You're right though. I wouldn't mind changing it but we'll have to do them all in one go, and of course keep old all-uppercase variants around for backward compatibility.", "url": "https://github.com/eclipse/rdf4j/pull/2264#discussion_r429689160", "createdAt": "2020-05-25T00:07:24Z", "author": {"login": "jeenbroekstra"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/vocabulary/XSD.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.model.vocabulary;\n+\n+import org.eclipse.rdf4j.model.IRI;\n+import org.eclipse.rdf4j.model.Namespace;\n+import org.eclipse.rdf4j.model.impl.SimpleNamespace;\n+import org.eclipse.rdf4j.model.impl.SimpleValueFactory;\n+\n+/**\n+ * Constants for the standard <a href=\"https://www.w3.org/TR/xmlschema11-2/\">XML Schema 1.1 datatypes</a>.\n+ *\n+ * @see <a href=\"https://www.w3.org/TR/xmlschema11-2/\">XML Schema 1.1 Part 2: Datatypes</a>\n+ */\n+public class XSD {\n+\n+\t/** The XML Schema namespace (<tt>http://www.w3.org/2001/XMLSchema#</tt>). */\n+\tpublic static final String NAMESPACE = \"http://www.w3.org/2001/XMLSchema#\";\n+\n+\t/**\n+\t * Recommended prefix for XML Schema datatypes: \"xsd\"\n+\t */\n+\tpublic static final String PREFIX = \"xsd\";\n+\n+\t/**\n+\t * An immutable {@link Namespace} constant that represents the XML Schema namespace.\n+\t */\n+\tpublic static final Namespace NS = new SimpleNamespace(PREFIX, NAMESPACE);\n+\n+\t/*\n+\t * Primitive datatypes\n+\t */\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#duration</tt> */\n+\tpublic final static IRI DURATION = create(\"duration\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#dateTime</tt> */\n+\tpublic final static IRI DATETIME = create(\"dateTime\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#dateTimeStamp</tt> */\n+\tpublic final static IRI DATETIMESTAMP = create(\"dateTimeStamp\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#dayTimeDuration</tt> */\n+\tpublic static final IRI DAYTIMEDURATION = create(\"dayTimeDuration\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#time</tt> */\n+\tpublic final static IRI TIME = create(\"time\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#date</tt> */\n+\tpublic final static IRI DATE = create(\"date\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#gYearMonth</tt> */\n+\tpublic final static IRI GYEARMONTH = create(\"gYearMonth\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#gYear</tt> */\n+\tpublic final static IRI GYEAR = create(\"gYear\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#gMonthDay</tt> */\n+\tpublic final static IRI GMONTHDAY = create(\"gMonthDay\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#gDay</tt> */\n+\tpublic final static IRI GDAY = create(\"gDay\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#gMonth</tt> */\n+\tpublic final static IRI GMONTH = create(\"gMonth\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#string</tt> */\n+\tpublic final static IRI STRING = create(\"string\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#boolean</tt> */\n+\tpublic final static IRI BOOLEAN = create(\"boolean\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#base64Binary</tt> */\n+\tpublic final static IRI BASE64BINARY = create(\"base64Binary\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#hexBinary</tt> */\n+\tpublic final static IRI HEXBINARY = create(\"hexBinary\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#float</tt> */\n+\tpublic final static IRI FLOAT = create(\"float\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#decimal</tt> */\n+\tpublic final static IRI DECIMAL = create(\"decimal\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#double</tt> */\n+\tpublic final static IRI DOUBLE = create(\"double\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#anyURI</tt> */\n+\tpublic final static IRI ANYURI = create(\"anyURI\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#QName</tt> */\n+\tpublic final static IRI QNAME = create(\"QName\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#NOTATION</tt> */\n+\tpublic final static IRI NOTATION = create(\"NOTATION\");\n+\n+\t/*\n+\t * Derived datatypes\n+\t */\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#normalizedString</tt> */\n+\tpublic final static IRI NORMALIZEDSTRING = create(\"normalizedString\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#token</tt> */\n+\tpublic final static IRI TOKEN = create(\"token\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#language</tt> */\n+\tpublic final static IRI LANGUAGE = create(\"language\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#NMTOKEN</tt> */\n+\tpublic final static IRI NMTOKEN = create(\"NMTOKEN\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#NMTOKENS</tt> */\n+\tpublic final static IRI NMTOKENS = create(\"NMTOKENS\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#Name</tt> */\n+\tpublic final static IRI NAME = create(\"Name\");\n+\n+\t/** <tt>http://www.w3.org/2001/XMLSchema#NCName</tt> */\n+\tpublic final static IRI NCNAME = create(\"NCName\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxOTY3NA=="}, "originalCommit": {"oid": "1057b220ce2aa8e881e23c20bceb3d3b2c779686"}, "originalPosition": 125}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1400, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}