{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwOTQ0MzQ5", "number": 1819, "title": "GH-1809: Added collector for Model + test", "bodyText": "GitHub issue resolved: #1809  \n\nAdded ModelCollector class\nAdded tests for serial and parallel stream", "createdAt": "2020-01-09T12:52:31Z", "url": "https://github.com/eclipse/rdf4j/pull/1819", "merged": true, "mergeCommit": {"oid": "0691a8dfbe94517729012dd48ac116a61fec15b4"}, "closed": true, "closedAt": "2020-01-12T21:54:01Z", "author": {"login": "barthanssens"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4qM6IABqjI5MzQ5OTUzMDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb5mbpQABqjI5NDExOTA2NTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed79ba359d7e8cddd1306e71d7b8dbb5259844c0", "author": {"user": {"login": "barthanssens", "name": "Bart Hanssens"}}, "url": "https://github.com/eclipse/rdf4j/commit/ed79ba359d7e8cddd1306e71d7b8dbb5259844c0", "committedDate": "2020-01-09T12:56:42Z", "message": "Code formatting\nSigned-off-by:Bart Hanssens <bart.hanssens@bosa.fgov.be>"}, "afterCommit": {"oid": "33fcd272f72162d817ef8bdf578e64d112555cfb", "author": {"user": {"login": "barthanssens", "name": "Bart Hanssens"}}, "url": "https://github.com/eclipse/rdf4j/commit/33fcd272f72162d817ef8bdf578e64d112555cfb", "committedDate": "2020-01-09T13:44:28Z", "message": "GH-1809: added model collector + test\n\nSigned-off-by: Bart Hanssens <bart.hanssens@bosa.fgov.be>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMDU2NzMx", "url": "https://github.com/eclipse/rdf4j/pull/1819#pullrequestreview-341056731", "createdAt": "2020-01-10T09:54:21Z", "commit": {"oid": "33fcd272f72162d817ef8bdf578e64d112555cfb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwOTo1NDoyMlrOFcPMlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwOTo1NDoyMlrOFcPMlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE1MzQyOQ==", "bodyText": "does this also need to be synchronized?", "url": "https://github.com/eclipse/rdf4j/pull/1819#discussion_r365153429", "createdAt": "2020-01-10T09:54:22Z", "author": {"login": "hmottestad"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/util/ModelCollector.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.model.util;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.function.BiConsumer;\n+import java.util.function.BinaryOperator;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n+import java.util.stream.Collector;\n+\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.Statement;\n+import org.eclipse.rdf4j.model.impl.LinkedHashModel;\n+\n+/**\n+ * Collects a stream of Statements into a Model.\n+ * \n+ * @author Bart Hanssens\n+ */\n+public class ModelCollector implements Collector<Statement, Model, Model> {\n+\tprivate final Object lock = new Object();\n+\n+\t/**\n+\t * Convenience method to obtain a ModelCollector.\n+\t * \n+\t * @return a ModelCollector\n+\t */\n+\tpublic static ModelCollector toModel() {\n+\t\treturn new ModelCollector();\n+\t}\n+\n+\t@Override\n+\tpublic Supplier<Model> supplier() {\n+\t\treturn LinkedHashModel::new;\n+\t}\n+\n+\t@Override\n+\tpublic BiConsumer<Model, Statement> accumulator() {\n+\t\treturn (m, s) -> {\n+\t\t\tsynchronized (lock) {\n+\t\t\t\tm.add(s);\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+\t@Override\n+\tpublic BinaryOperator<Model> combiner() {\n+\t\treturn (m1, m2) -> {\n+\t\t\tm1.addAll(m2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33fcd272f72162d817ef8bdf578e64d112555cfb"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMDU3MTAz", "url": "https://github.com/eclipse/rdf4j/pull/1819#pullrequestreview-341057103", "createdAt": "2020-01-10T09:55:01Z", "commit": {"oid": "33fcd272f72162d817ef8bdf578e64d112555cfb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwOTo1NTowMlrOFcPN4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwOTo1NTowMlrOFcPN4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE1Mzc2MA==", "bodyText": "could this be synchronized on m instead of on lock?", "url": "https://github.com/eclipse/rdf4j/pull/1819#discussion_r365153760", "createdAt": "2020-01-10T09:55:02Z", "author": {"login": "hmottestad"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/util/ModelCollector.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.model.util;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.function.BiConsumer;\n+import java.util.function.BinaryOperator;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n+import java.util.stream.Collector;\n+\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.Statement;\n+import org.eclipse.rdf4j.model.impl.LinkedHashModel;\n+\n+/**\n+ * Collects a stream of Statements into a Model.\n+ * \n+ * @author Bart Hanssens\n+ */\n+public class ModelCollector implements Collector<Statement, Model, Model> {\n+\tprivate final Object lock = new Object();\n+\n+\t/**\n+\t * Convenience method to obtain a ModelCollector.\n+\t * \n+\t * @return a ModelCollector\n+\t */\n+\tpublic static ModelCollector toModel() {\n+\t\treturn new ModelCollector();\n+\t}\n+\n+\t@Override\n+\tpublic Supplier<Model> supplier() {\n+\t\treturn LinkedHashModel::new;\n+\t}\n+\n+\t@Override\n+\tpublic BiConsumer<Model, Statement> accumulator() {\n+\t\treturn (m, s) -> {\n+\t\t\tsynchronized (lock) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33fcd272f72162d817ef8bdf578e64d112555cfb"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMDU4Njg4", "url": "https://github.com/eclipse/rdf4j/pull/1819#pullrequestreview-341058688", "createdAt": "2020-01-10T09:57:48Z", "commit": {"oid": "33fcd272f72162d817ef8bdf578e64d112555cfb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwOTo1Nzo0OVrOFcPSkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwOTo1Nzo0OVrOFcPSkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE1NDk2Mg==", "bodyText": "Could this use ModelFactory, so that we can add a toLinkedHashModel() and toTreeModel() method? I would like the default toModel() method to use the LinkedHashModel as this is typically the fastest.", "url": "https://github.com/eclipse/rdf4j/pull/1819#discussion_r365154962", "createdAt": "2020-01-10T09:57:49Z", "author": {"login": "hmottestad"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/util/ModelCollector.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.model.util;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.function.BiConsumer;\n+import java.util.function.BinaryOperator;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n+import java.util.stream.Collector;\n+\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.Statement;\n+import org.eclipse.rdf4j.model.impl.LinkedHashModel;\n+\n+/**\n+ * Collects a stream of Statements into a Model.\n+ * \n+ * @author Bart Hanssens\n+ */\n+public class ModelCollector implements Collector<Statement, Model, Model> {\n+\tprivate final Object lock = new Object();\n+\n+\t/**\n+\t * Convenience method to obtain a ModelCollector.\n+\t * \n+\t * @return a ModelCollector\n+\t */\n+\tpublic static ModelCollector toModel() {\n+\t\treturn new ModelCollector();\n+\t}\n+\n+\t@Override\n+\tpublic Supplier<Model> supplier() {\n+\t\treturn LinkedHashModel::new;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33fcd272f72162d817ef8bdf578e64d112555cfb"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38e391a91b3f27edd1a5e02e9a9b64c30c9e18d2", "author": {"user": {"login": "barthanssens", "name": "Bart Hanssens"}}, "url": "https://github.com/eclipse/rdf4j/commit/38e391a91b3f27edd1a5e02e9a9b64c30c9e18d2", "committedDate": "2020-01-10T21:08:56Z", "message": "Use ModelFactory + lock on model\nSigned-off-by:Bart Hanssens <bart.hanssens@bosa.fgov.be>"}, "afterCommit": {"oid": "6afcaaffbb25e99ef3f539fdefc3b87a512995ed", "author": {"user": {"login": "barthanssens", "name": "Bart Hanssens"}}, "url": "https://github.com/eclipse/rdf4j/commit/6afcaaffbb25e99ef3f539fdefc3b87a512995ed", "committedDate": "2020-01-10T21:09:48Z", "message": "GH-1809: added model collector + test\n\nSigned-off-by: Bart Hanssens <bart.hanssens@bosa.fgov.be>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDk1MzY1", "url": "https://github.com/eclipse/rdf4j/pull/1819#pullrequestreview-341495365", "createdAt": "2020-01-11T01:48:11Z", "commit": {"oid": "6afcaaffbb25e99ef3f539fdefc3b87a512995ed"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTE2ODM5", "url": "https://github.com/eclipse/rdf4j/pull/1819#pullrequestreview-341516839", "createdAt": "2020-01-11T10:51:35Z", "commit": {"oid": "6afcaaffbb25e99ef3f539fdefc3b87a512995ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxMDo1MTozNVrOFclNtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxMDo1MTozNVrOFclNtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUxNDE2NQ==", "bodyText": "I took a look at some examples online and found a cool class called EnumSet:\nreturn EnumSet.of(Characteristics.CONCURRENT, Characteristics.IDENTITY_FINISH, Characteristics.UNORDERED);", "url": "https://github.com/eclipse/rdf4j/pull/1819#discussion_r365514165", "createdAt": "2020-01-11T10:51:35Z", "author": {"login": "hmottestad"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/util/ModelCollector.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.model.util;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.function.BiConsumer;\n+import java.util.function.BinaryOperator;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n+import java.util.stream.Collector;\n+\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.ModelFactory;\n+import org.eclipse.rdf4j.model.Statement;\n+import org.eclipse.rdf4j.model.impl.LinkedHashModel;\n+import org.eclipse.rdf4j.model.impl.LinkedHashModelFactory;\n+\n+/**\n+ * Collects a stream of Statements into a Model.\n+ * \n+ * @author Bart Hanssens\n+ */\n+public class ModelCollector implements Collector<Statement, Model, Model> {\n+\tprivate ModelFactory factory;\n+\n+\t/**\n+\t * Constructor\n+\t */\n+\tpublic ModelCollector() {\n+\t\tthis.factory = new LinkedHashModelFactory();\n+\t}\n+\n+\t/**\n+\t * Constructor\n+\t * \n+\t * @param factory\n+\t */\n+\tpublic ModelCollector(ModelFactory factory) {\n+\t\tthis.factory = factory;\n+\t}\n+\n+\t/**\n+\t * Convenience method to obtain a ModelCollector.\n+\t * \n+\t * @return a ModelCollector\n+\t */\n+\tpublic static ModelCollector toModel() {\n+\t\treturn new ModelCollector();\n+\t}\n+\n+\t@Override\n+\tpublic Supplier<Model> supplier() {\n+\t\treturn () -> factory.createEmptyModel();\n+\t}\n+\n+\t@Override\n+\tpublic BiConsumer<Model, Statement> accumulator() {\n+\t\treturn (m, s) -> {\n+\t\t\tsynchronized (m) {\n+\t\t\t\tm.add(s);\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+\t@Override\n+\tpublic BinaryOperator<Model> combiner() {\n+\t\treturn (m1, m2) -> {\n+\t\t\tm1.addAll(m2);\n+\t\t\treturn m1;\n+\t\t};\n+\t}\n+\n+\t@Override\n+\tpublic Function<Model, Model> finisher() {\n+\t\treturn Function.identity();\n+\t}\n+\n+\t@Override\n+\tpublic Set<Characteristics> characteristics() {\n+\t\tSet<Characteristics> characteristics = new HashSet<>();\n+\t\tcharacteristics.add(Characteristics.CONCURRENT);\n+\t\tcharacteristics.add(Characteristics.IDENTITY_FINISH);\n+\t\tcharacteristics.add(Characteristics.UNORDERED);\n+\t\treturn characteristics;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6afcaaffbb25e99ef3f539fdefc3b87a512995ed"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c5e94ec1168c46faa9c1a38caba4dcd2e4d52d5", "author": {"user": {"login": "barthanssens", "name": "Bart Hanssens"}}, "url": "https://github.com/eclipse/rdf4j/commit/2c5e94ec1168c46faa9c1a38caba4dcd2e4d52d5", "committedDate": "2020-01-12T11:52:56Z", "message": "GH-1809: added model collector + test\n\nSigned-off-by: Bart Hanssens <bart.hanssens@bosa.fgov.be>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c1d89c5ba8138aa7dee72a22fa7e99760532cc8", "author": {"user": {"login": "barthanssens", "name": "Bart Hanssens"}}, "url": "https://github.com/eclipse/rdf4j/commit/1c1d89c5ba8138aa7dee72a22fa7e99760532cc8", "committedDate": "2020-01-12T00:22:49Z", "message": "Small javadoc change\nSigned-off-by:Bart Hanssens <bart.hanssens@bosa.fgov.be>"}, "afterCommit": {"oid": "2c5e94ec1168c46faa9c1a38caba4dcd2e4d52d5", "author": {"user": {"login": "barthanssens", "name": "Bart Hanssens"}}, "url": "https://github.com/eclipse/rdf4j/commit/2c5e94ec1168c46faa9c1a38caba4dcd2e4d52d5", "committedDate": "2020-01-12T11:52:56Z", "message": "GH-1809: added model collector + test\n\nSigned-off-by: Bart Hanssens <bart.hanssens@bosa.fgov.be>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 50, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}