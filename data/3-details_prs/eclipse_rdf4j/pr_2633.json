{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NjE0MjEy", "number": 2633, "title": "GH-2632 rsx:targetShape bug when using sh:or or sh:and", "bodyText": "GitHub issue resolved: #2632  \nBriefly describe the changes proposed in this PR:\nFixes a bug in rsx:targetShape when suing sh:or or sh:and.\n\nPR Author Checklist (see the contributor guidelines for more details):\n\n my pull request is self-contained\n I've added tests for the changes I made\n I've applied code formatting (you can use mvn process-resources to format from the command line)\n I've squashed my commits down to one or a few meaningful commits\n every commit message starts with the issue number (GH-xxxx) followed by a meaningful description of the change\n every commit has been signed off", "createdAt": "2020-11-04T20:11:39Z", "url": "https://github.com/eclipse/rdf4j/pull/2633", "merged": true, "mergeCommit": {"oid": "6fe2494821f0e178397b382a5b5b355758f29044"}, "closed": true, "closedAt": "2020-11-06T10:01:13Z", "author": {"login": "hmottestad"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZTgX_AH2gAyNTE1NjE0MjEyOjdkNmZhZmIxNGIxOWFlZGUyYTk0OGM2MjM1YTJlZWQ2MDYzMWZmNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZU-SugFqTUyMzc1NTQ3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7d6fafb14b19aede2a948c6235a2eed60631ff56", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/7d6fafb14b19aede2a948c6235a2eed60631ff56", "committedDate": "2020-11-04T20:08:54Z", "message": "GH-2632 test cases and fixes\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzU1NDc1", "url": "https://github.com/eclipse/rdf4j/pull/2633#pullrequestreview-523755475", "createdAt": "2020-11-04T21:41:01Z", "commit": {"oid": "7d6fafb14b19aede2a948c6235a2eed60631ff56"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMTo0MTowMlrOHtqrgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMTo0NDowNlrOHtqw2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY0NzIzNA==", "bodyText": "Typically variable names do not actually start with a question mark - in SPARQL they do of course but our query parsers all treat it like a marker prefix, not as part of the actual variable name.", "url": "https://github.com/eclipse/rdf4j/pull/2633#discussion_r517647234", "createdAt": "2020-11-04T21:41:02Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "diffHunk": "@@ -288,9 +290,22 @@ public String buildSparqlValidNodes(String targetVar) {\n \n \t@Override\n \tpublic Stream<StatementPattern> getStatementPatterns() {\n-\t\treturn and\n-\t\t\t\t.stream()\n+\t\tStatementPattern subject = new StatementPattern(\n+\t\t\t\tnew Var(\"?this\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d6fafb14b19aede2a948c6235a2eed60631ff56"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY0ODYwMg==", "bodyText": "Are these randomly generated variable names ever serialized, for example as part of a SPARQL query? If so we'll need a more robust name assignement, because this will produce a variable name that won't be legal in SPARQL.\nI'm pretty sure we have ready-made code somewhere (in the query parser utils perhaps) for this kind of thing. There should be a single place where we generate these kind of anonymous vars, so that if we need to change the name-generation logic for any reason, we don't have to change it all over the place.", "url": "https://github.com/eclipse/rdf4j/pull/2633#discussion_r517648602", "createdAt": "2020-11-04T21:44:06Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "diffHunk": "@@ -288,9 +290,22 @@ public String buildSparqlValidNodes(String targetVar) {\n \n \t@Override\n \tpublic Stream<StatementPattern> getStatementPatterns() {\n-\t\treturn and\n-\t\t\t\t.stream()\n+\t\tStatementPattern subject = new StatementPattern(\n+\t\t\t\tnew Var(\"?this\"),\n+\t\t\t\tnew Var(UUID.randomUUID().toString()),\n+\t\t\t\tnew Var(UUID.randomUUID().toString())\n+\t\t);\n+\n+\t\tStatementPattern object = new StatementPattern(\n+\t\t\t\tnew Var(UUID.randomUUID().toString()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d6fafb14b19aede2a948c6235a2eed60631ff56"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 79, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}