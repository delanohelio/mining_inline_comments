{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NzAxNTQw", "number": 2108, "title": "GH-2107 predict the size of the data that needs to be read in DataFile", "bodyText": "GitHub issue resolved: #2107 \nBriefly describe the changes proposed in this PR:\nIn DataFile try to predict the size of the data that needs to be read so that we can get away with a single read. This improves performance because even though the operating system might be smart, it's still cheaper to get 50 bytes in one read than to get 4+20 in two reads.\n\nPR Author Checklist:\n\n my pull request is self-contained\n I've added tests for the changes I made\n every commit message starts with the issue number (GH-xxxx) followed by a meaningful description of the change\n every commit has been signed off\n\nNote: we merge all feature pull requests using squash and merge. See RDF4J git merge strategy for more details.", "createdAt": "2020-04-19T17:23:04Z", "url": "https://github.com/eclipse/rdf4j/pull/2108", "merged": true, "mergeCommit": {"oid": "d1f2c2c2f32929b2af9da5b878f1183751a33da5"}, "closed": true, "closedAt": "2020-04-20T08:32:51Z", "author": {"login": "hmottestad"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZN-CbgBqjMyNDkyOTEyMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZTNwwgFqTM5NjA3NjE4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c6e6744a8a09800e7ba099b413cd4dbd839915d", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/6c6e6744a8a09800e7ba099b413cd4dbd839915d", "committedDate": "2020-04-19T17:25:15Z", "message": "remove assert for performance\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "b2f9d68121e47eeb0ac160d3e33f7a99f50b5496", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/b2f9d68121e47eeb0ac160d3e33f7a99f50b5496", "committedDate": "2020-04-19T17:30:23Z", "message": "remove assert for performance\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2f9d68121e47eeb0ac160d3e33f7a99f50b5496", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/b2f9d68121e47eeb0ac160d3e33f7a99f50b5496", "committedDate": "2020-04-19T17:30:23Z", "message": "remove assert for performance\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "faf8762023baa2428b3721b200dc43d02c093a67", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/faf8762023baa2428b3721b200dc43d02c093a67", "committedDate": "2020-04-19T18:31:49Z", "message": "remove assert for performance\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3d46843c6a990014c9f5ba13b28e69687a9c2a1", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/c3d46843c6a990014c9f5ba13b28e69687a9c2a1", "committedDate": "2020-04-19T18:43:55Z", "message": "GH-2107 benchmark\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a80147a05a9114dea9ce721f54f6f31afdaab282", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/a80147a05a9114dea9ce721f54f6f31afdaab282", "committedDate": "2020-04-19T18:43:56Z", "message": "GH-2107 predict the size of the data that needs to be read in DataFile\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92df2cccad810dcad0b704199e870463b350af24", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/92df2cccad810dcad0b704199e870463b350af24", "committedDate": "2020-04-19T18:43:56Z", "message": "remove assert for performance\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "faf8762023baa2428b3721b200dc43d02c093a67", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/faf8762023baa2428b3721b200dc43d02c093a67", "committedDate": "2020-04-19T18:31:49Z", "message": "remove assert for performance\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "92df2cccad810dcad0b704199e870463b350af24", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/92df2cccad810dcad0b704199e870463b350af24", "committedDate": "2020-04-19T18:43:56Z", "message": "remove assert for performance\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDc2MTg3", "url": "https://github.com/eclipse/rdf4j/pull/2108#pullrequestreview-396076187", "createdAt": "2020-04-19T23:36:42Z", "commit": {"oid": "92df2cccad810dcad0b704199e870463b350af24"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQyMzozNjo0MlrOGH-haw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQyMzozNjo0MlrOGH-haw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxNzU3OQ==", "bodyText": "Very clever. Is 25 as a starting point based on any sort of observation of what is \"typical\"? Or is it more a \"we need to start somewhere\"?", "url": "https://github.com/eclipse/rdf4j/pull/2108#discussion_r411017579", "createdAt": "2020-04-19T23:36:42Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/nativerdf/src/main/java/org/eclipse/rdf4j/sail/nativerdf/datastore/DataFile.java", "diffHunk": "@@ -121,29 +121,61 @@ public long storeData(byte[] data) throws IOException {\n \t\treturn offset;\n \t}\n \n+\t// This variable is used for predicting the number of bytes to read in getData(long offset). This helps us to only\n+\t// need to execute a single IO read instead of first one read to find the length and then one read to read the data.\n+\tint dataLengthApproximateAverage = 25;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92df2cccad810dcad0b704199e870463b350af24"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 43, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}