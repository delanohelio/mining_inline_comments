{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMzkwNDU4", "number": 2014, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDoxMjo0N1rODpXQMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo1OTozN1rODpcKfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Njk5MTg3OnYy", "diffSide": "RIGHT", "path": "core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDoxMjo0N1rOF4fibw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwODowNDoxNlrOF4jlag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc4MTI5NQ==", "bodyText": "Editorial: could you add open and close brackets here and in other places where you have if/else constructions?", "url": "https://github.com/eclipse/rdf4j/pull/2014#discussion_r394781295", "createdAt": "2020-03-19T04:12:47Z", "author": {"login": "jeenbroekstra"}, "path": "core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java", "diffHunk": "@@ -84,6 +81,24 @@ public String getPatternString() {\n \t\treturn patternString;\n \t}\n \n+\tprivate String getSourceString() {\n+\t\tNode theParent = getParentContainer(this);\n+\t\tString sourceString = null;\n+\t\tif (theParent instanceof ASTOperationContainer)\n+\t\t\tsourceString = ((ASTOperationContainer) theParent).getSourceString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01204c00f18bdcd043293468726e83e641581edb"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg0NzU5NA==", "bodyText": "done", "url": "https://github.com/eclipse/rdf4j/pull/2014#discussion_r394847594", "createdAt": "2020-03-19T08:04:16Z", "author": {"login": "damyan-ognyanov"}, "path": "core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java", "diffHunk": "@@ -84,6 +81,24 @@ public String getPatternString() {\n \t\treturn patternString;\n \t}\n \n+\tprivate String getSourceString() {\n+\t\tNode theParent = getParentContainer(this);\n+\t\tString sourceString = null;\n+\t\tif (theParent instanceof ASTOperationContainer)\n+\t\t\tsourceString = ((ASTOperationContainer) theParent).getSourceString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc4MTI5NQ=="}, "originalCommit": {"oid": "01204c00f18bdcd043293468726e83e641581edb"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Nzc5NjQ3OnYy", "diffSide": "RIGHT", "path": "core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo1OTozN1rOF4nZdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMToxMjo1MVrOF4p3Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkxMDA2OQ==", "bodyText": "I was wondering if maybe there could be a null check here, so that any exception is thrown when looking for the source string instead of when using the resulting string. Maybe return Objects.requireNonNull(sourceString);\nUnless of course there is a case where returning null from getSourceString() is acceptable.", "url": "https://github.com/eclipse/rdf4j/pull/2014#discussion_r394910069", "createdAt": "2020-03-19T09:59:37Z", "author": {"login": "hmottestad"}, "path": "core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java", "diffHunk": "@@ -84,6 +81,27 @@ public String getPatternString() {\n \t\treturn patternString;\n \t}\n \n+\tprivate String getSourceString() {\n+\t\tNode theParent = getParentContainer(this);\n+\t\tString sourceString = null;\n+\t\tif (theParent instanceof ASTOperationContainer) {\n+\t\t\tsourceString = ((ASTOperationContainer) theParent).getSourceString();\n+\t\t} else if (theParent instanceof ASTUpdateSequence) {\n+\t\t\tsourceString = ((ASTUpdateSequence) theParent).getSourceString();\n+\t\t}\n+\n+\t\twhile (sourceString == null && theParent != null) {\n+\t\t\ttheParent = theParent.jjtGetParent();\n+\t\t\tif (theParent == null) {\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\tif (theParent instanceof ASTUpdateSequence) {\n+\t\t\t\tsourceString = ((ASTUpdateSequence) theParent).getSourceString();\n+\t\t\t}\n+\t\t}\n+\t\treturn sourceString;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb8c47520c3f37d5cc195961579018769f15fc06"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk1MDQ1OQ==", "bodyText": "Thought of that for a while, but decided that if we did not found the sourceString at this point, something else was really messed up, so throwing a custom exception early, would not help much here since we do not have a resonable alternative to continue processing update further - a NPE will still be thrown in the code that uses it ...", "url": "https://github.com/eclipse/rdf4j/pull/2014#discussion_r394950459", "createdAt": "2020-03-19T11:12:51Z", "author": {"login": "damyan-ognyanov"}, "path": "core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java", "diffHunk": "@@ -84,6 +81,27 @@ public String getPatternString() {\n \t\treturn patternString;\n \t}\n \n+\tprivate String getSourceString() {\n+\t\tNode theParent = getParentContainer(this);\n+\t\tString sourceString = null;\n+\t\tif (theParent instanceof ASTOperationContainer) {\n+\t\t\tsourceString = ((ASTOperationContainer) theParent).getSourceString();\n+\t\t} else if (theParent instanceof ASTUpdateSequence) {\n+\t\t\tsourceString = ((ASTUpdateSequence) theParent).getSourceString();\n+\t\t}\n+\n+\t\twhile (sourceString == null && theParent != null) {\n+\t\t\ttheParent = theParent.jjtGetParent();\n+\t\t\tif (theParent == null) {\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\tif (theParent instanceof ASTUpdateSequence) {\n+\t\t\t\tsourceString = ((ASTUpdateSequence) theParent).getSourceString();\n+\t\t\t}\n+\t\t}\n+\t\treturn sourceString;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkxMDA2OQ=="}, "originalCommit": {"oid": "bb8c47520c3f37d5cc195961579018769f15fc06"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1535, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}