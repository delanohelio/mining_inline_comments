{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NzY5ODM2", "number": 2210, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxMTozNFrOD7fhGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxMTozNFrOD7fhGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzA4OTU1OnYy", "diffSide": "RIGHT", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/LinkedHashModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxMTozNFrOGT2S1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNjozOTo1NlrOGT4GCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2NTY4Ng==", "bodyText": "I assume this is here merely for testing/demonstration purposes, and not intended to be a fix for anything?", "url": "https://github.com/eclipse/rdf4j/pull/2210#discussion_r423465686", "createdAt": "2020-05-12T05:11:34Z", "author": {"login": "jeenbroekstra"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/LinkedHashModel.java", "diffHunk": "@@ -200,7 +200,9 @@ public Iterator iterator() {\n \n \t@Override\n \tpublic boolean contains(Resource subj, IRI pred, Value obj, Resource... contexts) {\n-\t\treturn matchPattern(subj, pred, obj, contexts).hasNext();\n+\t\tModelIterator modelIterator = matchPattern(subj, pred, obj, contexts);\n+\t\tThread.yield();\n+\t\treturn modelIterator.hasNext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41503e9f48a53b9660e64d4ef04d11a54a54bb9a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ5NTE3Nw==", "bodyText": "Just increases the likelihood of the error occurring.", "url": "https://github.com/eclipse/rdf4j/pull/2210#discussion_r423495177", "createdAt": "2020-05-12T06:39:56Z", "author": {"login": "hmottestad"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/LinkedHashModel.java", "diffHunk": "@@ -200,7 +200,9 @@ public Iterator iterator() {\n \n \t@Override\n \tpublic boolean contains(Resource subj, IRI pred, Value obj, Resource... contexts) {\n-\t\treturn matchPattern(subj, pred, obj, contexts).hasNext();\n+\t\tModelIterator modelIterator = matchPattern(subj, pred, obj, contexts);\n+\t\tThread.yield();\n+\t\treturn modelIterator.hasNext();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2NTY4Ng=="}, "originalCommit": {"oid": "41503e9f48a53b9660e64d4ef04d11a54a54bb9a"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1488, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}