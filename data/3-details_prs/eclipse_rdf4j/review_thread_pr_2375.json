{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0MTg3ODIy", "number": 2375, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMDo1NDo0NVrOEQkdTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo0Nzo1NlrOE3dUAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODA5OTk3OnYy", "diffSide": "RIGHT", "path": "assembly/src/main/dist/docker/Dockerfile.amd64", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMDo1NDo0NVrOG0yrig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMToxMDo0N1rOG0zKjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAwOTQ4Mg==", "bodyText": "IIRC, each RUN will add a layer, which will increase the size of the docker image (hence the '&&' hack, especially for not increasing the image size with unzipped files etc that will be eventually removed).\nPerhaps the \"new\" docker multistage build feature https://docs.docker.com/develop/develop-images/multistage-build/ would be a better approach ?", "url": "https://github.com/eclipse/rdf4j/pull/2375#discussion_r458009482", "createdAt": "2020-07-21T10:54:45Z", "author": {"login": "barthanssens"}, "path": "assembly/src/main/dist/docker/Dockerfile.amd64", "diffHunk": "@@ -1,30 +1,32 @@\n FROM amd64/tomcat:8.5-jre8-alpine\n MAINTAINER Bart Hanssens (bart.hanssens@bosa.fgov.be)\n \n-ARG VERSION=\"2.5.1\"\n-\n ENV JAVA_OPTS=\"-Xmx2g\"\n ENV CATALINA_OPTS=\"-Dorg.eclipse.rdf4j.appdata.basedir=/var/rdf4j\"\n \n-RUN adduser -S tomcat \n+RUN adduser -S tomcat\n+\n+COPY ignore/rdf4j.zip /tmp/rdf4j.zip\n+\n+WORKDIR /tmp\n \n-RUN cd /tmp && \\\n-\twget -q \"https://www.eclipse.org/downloads/download.php?file=/rdf4j/eclipse-rdf4j-${VERSION}-sdk.zip&r=1\" -O /tmp/rdf4j.zip && \\\n-\tunzip -q /tmp/rdf4j.zip && \\\n-\trm -rf /usr/local/tomcat/webapps/* && \\\n-\tcp /tmp/eclipse-rdf4j-${VERSION}/war/*.war /usr/local/tomcat/webapps && \\\n-\trm -rf /tmp/eclipse && \\\n-\trm /tmp/rdf4j.zip && \\\n-\tmkdir -p /var/rdf4j && \\\n-\tchown -R tomcat /var/rdf4j /usr/local/tomcat && \\\n-\tchmod a+x /usr/local/tomcat /usr/local/tomcat/bin /usr/local/tomcat/bin/catalina.sh\n+RUN\tunzip -q /tmp/rdf4j.zip", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4054e3b6a11f6b89aa3e56b4d6b1af12a58eeef3"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxNzQyMA==", "bodyText": "Multistage isn't worth it unless we are doing the actual maven building inside the docker image. Single layer for this makes sense though.", "url": "https://github.com/eclipse/rdf4j/pull/2375#discussion_r458017420", "createdAt": "2020-07-21T11:10:47Z", "author": {"login": "hmottestad"}, "path": "assembly/src/main/dist/docker/Dockerfile.amd64", "diffHunk": "@@ -1,30 +1,32 @@\n FROM amd64/tomcat:8.5-jre8-alpine\n MAINTAINER Bart Hanssens (bart.hanssens@bosa.fgov.be)\n \n-ARG VERSION=\"2.5.1\"\n-\n ENV JAVA_OPTS=\"-Xmx2g\"\n ENV CATALINA_OPTS=\"-Dorg.eclipse.rdf4j.appdata.basedir=/var/rdf4j\"\n \n-RUN adduser -S tomcat \n+RUN adduser -S tomcat\n+\n+COPY ignore/rdf4j.zip /tmp/rdf4j.zip\n+\n+WORKDIR /tmp\n \n-RUN cd /tmp && \\\n-\twget -q \"https://www.eclipse.org/downloads/download.php?file=/rdf4j/eclipse-rdf4j-${VERSION}-sdk.zip&r=1\" -O /tmp/rdf4j.zip && \\\n-\tunzip -q /tmp/rdf4j.zip && \\\n-\trm -rf /usr/local/tomcat/webapps/* && \\\n-\tcp /tmp/eclipse-rdf4j-${VERSION}/war/*.war /usr/local/tomcat/webapps && \\\n-\trm -rf /tmp/eclipse && \\\n-\trm /tmp/rdf4j.zip && \\\n-\tmkdir -p /var/rdf4j && \\\n-\tchown -R tomcat /var/rdf4j /usr/local/tomcat && \\\n-\tchmod a+x /usr/local/tomcat /usr/local/tomcat/bin /usr/local/tomcat/bin/catalina.sh\n+RUN\tunzip -q /tmp/rdf4j.zip", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAwOTQ4Mg=="}, "originalCommit": {"oid": "4054e3b6a11f6b89aa3e56b4d6b1af12a58eeef3"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTg2MzQ5OnYy", "diffSide": "RIGHT", "path": "assembly/src/main/dist/docker/build.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo0MzoyOFrOHwz93g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo0MzoyOFrOHwz93g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0NTExOA==", "bodyText": "Like I also mentioned on the mailinglist: I may end up pulling this change out into a separate PR because it is blocking me from using this script.", "url": "https://github.com/eclipse/rdf4j/pull/2375#discussion_r520945118", "createdAt": "2020-11-10T23:43:28Z", "author": {"login": "jeenbroekstra"}, "path": "assembly/src/main/dist/docker/build.sh", "diffHunk": "@@ -14,10 +14,10 @@ rm -rf ../../../../target/\n \n # go to root of project and do clean, format, install and assembly\n cd ../../../../..\n-MVN_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)\n+MVN_VERSION=$(xmllint --xpath \"//*[local-name()='project']/*[local-name()='version']/text()\" pom.xml)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4054e3b6a11f6b89aa3e56b4d6b1af12a58eeef3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTg2NjkyOnYy", "diffSide": "RIGHT", "path": "assembly/src/main/dist/docker/build.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo0NDo1MlrOHwz_2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo0NDo1MlrOHwz_2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0NTYyNg==", "bodyText": "I'm not entirely sure why but this command failed for me on the first run, reporting that it couldn't find the rdf4j-workbench.war (as part of the assembly process). On a second run (after removing the -T 2) it succeeded, but I'm not sure if that is because I removed the parallel execution flag or because I just ran it a second time.", "url": "https://github.com/eclipse/rdf4j/pull/2375#discussion_r520945626", "createdAt": "2020-11-10T23:44:52Z", "author": {"login": "jeenbroekstra"}, "path": "assembly/src/main/dist/docker/build.sh", "diffHunk": "@@ -14,10 +14,10 @@ rm -rf ../../../../target/\n \n # go to root of project and do clean, format, install and assembly\n cd ../../../../..\n-MVN_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)\n+MVN_VERSION=$(xmllint --xpath \"//*[local-name()='project']/*[local-name()='version']/text()\" pom.xml)\n+\n mvn clean\n-mvn formatter:format\n-mvn -Passembly install -DskipTests\n+mvn -T 2 -Passembly install -DskipTests -Dmaven.javadoc.skip=true -Dmaven.test.skip=true -Dformatter.skip=true -Dimpsort.skip=true -Dxml-format.skip=true  -Djapicmp.skip -Denforcer.skip=true -Dbuildnumber.plugin.phase=none -Danimal.sniffer.skip=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4054e3b6a11f6b89aa3e56b4d6b1af12a58eeef3"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTg3MzkzOnYy", "diffSide": "RIGHT", "path": "assembly/src/main/dist/docker/build.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo0Nzo1NlrOHw0EAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMTo0NTo0M1rOHyPjXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0NjY5MQ==", "bodyText": "I'm a little lost on what this script produces. Clearly, the end result of this will be a locally tagged docker image using just the version, so, e.g., eclipse/rdf4j-workbench:3.4.4. So where and how do we produce the different images for the ARM and AMD architectures, and how are they pushed to dockerhub?", "url": "https://github.com/eclipse/rdf4j/pull/2375#discussion_r520946691", "createdAt": "2020-11-10T23:47:56Z", "author": {"login": "jeenbroekstra"}, "path": "assembly/src/main/dist/docker/build.sh", "diffHunk": "@@ -30,4 +30,4 @@ cp $ZIP ./ignore/rdf4j.zip\n # build\n docker-compose build\n \n-docker tag docker_rdf4j:latest eclipse/rdf4j-workbench:${MVN_VERSION}\n\\ No newline at end of file\n+docker tag docker_rdf4j:latest eclipse/rdf4j-workbench:${MVN_VERSION}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4054e3b6a11f6b89aa3e56b4d6b1af12a58eeef3"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI3MTI1Nw==", "bodyText": "FWIW, currently I push the dockers manually to dockerhub.\nThere might (haven't checked) be some github action that could build/push (with some secret key file) for different architectures.", "url": "https://github.com/eclipse/rdf4j/pull/2375#discussion_r521271257", "createdAt": "2020-11-11T10:46:11Z", "author": {"login": "barthanssens"}, "path": "assembly/src/main/dist/docker/build.sh", "diffHunk": "@@ -30,4 +30,4 @@ cp $ZIP ./ignore/rdf4j.zip\n # build\n docker-compose build\n \n-docker tag docker_rdf4j:latest eclipse/rdf4j-workbench:${MVN_VERSION}\n\\ No newline at end of file\n+docker tag docker_rdf4j:latest eclipse/rdf4j-workbench:${MVN_VERSION}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0NjY5MQ=="}, "originalCommit": {"oid": "4054e3b6a11f6b89aa3e56b4d6b1af12a58eeef3"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ0NTY2Mg==", "bodyText": "@barthanssens can you talk me through how you currently produce the docker builds, step by step? Perhaps on the dev list, rather than here.", "url": "https://github.com/eclipse/rdf4j/pull/2375#discussion_r522445662", "createdAt": "2020-11-12T21:45:43Z", "author": {"login": "jeenbroekstra"}, "path": "assembly/src/main/dist/docker/build.sh", "diffHunk": "@@ -30,4 +30,4 @@ cp $ZIP ./ignore/rdf4j.zip\n # build\n docker-compose build\n \n-docker tag docker_rdf4j:latest eclipse/rdf4j-workbench:${MVN_VERSION}\n\\ No newline at end of file\n+docker tag docker_rdf4j:latest eclipse/rdf4j-workbench:${MVN_VERSION}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0NjY5MQ=="}, "originalCommit": {"oid": "4054e3b6a11f6b89aa3e56b4d6b1af12a58eeef3"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1449, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}