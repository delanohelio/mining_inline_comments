{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNDQ0NjA4", "number": 2025, "title": "GH-1900 Server responds with SHACL validation report if validation failed", "bodyText": "GitHub issue resolved: #1900 \nBriefly describe the changes proposed in this PR:\n\nUse the current exception handling to extract the validation report and output it as NQUADS in the response\nExtend the error handling in the client to pick up this error and create an appropriate exception (preferably a ShaclSailValidationException, but that needs more work)\nDetect this exception in the Workbench and print a nice turtle report to the user", "createdAt": "2020-03-20T10:02:13Z", "url": "https://github.com/eclipse/rdf4j/pull/2025", "merged": true, "mergeCommit": {"oid": "4e108908ae72600bb253bfe101ad28320f23c632"}, "closed": true, "closedAt": "2020-03-31T06:39:23Z", "author": {"login": "hmottestad"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPgifhgFqTM3ODQ4MTcwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcS9AN_AFqTM4NDQzMDQ3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NDgxNzA4", "url": "https://github.com/eclipse/rdf4j/pull/2025#pullrequestreview-378481708", "createdAt": "2020-03-20T13:29:35Z", "commit": {"oid": "f5d31dfdb9336db3596b20ab0073e9df6ffc3f87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoyOTozNVrOF5TsAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoyOTozNVrOF5TsAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNTcxMg==", "bodyText": "I'm trying out throwing a custom exception based based on if the correct header is set to indicate that this is a shacl violation.", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r395635712", "createdAt": "2020-03-20T13:29:35Z", "author": {"login": "hmottestad"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/SPARQLProtocolSession.java", "diffHunk": "@@ -1041,6 +1044,10 @@ protected HttpResponse execute(HttpUriRequest method) throws IOException, RDF4JE\n \t\t\t\t\t\tthrow new MalformedQueryException(errInfo.getErrorMessage());\n \t\t\t\t\t} else if (errInfo.getErrorType() == ErrorType.UNSUPPORTED_QUERY_LANGUAGE) {\n \t\t\t\t\t\tthrow new UnsupportedQueryLanguageException(errInfo.getErrorMessage());\n+\t\t\t\t\t} else if (exceptionIs(response, \"ShaclSailValidationException\")) {\n+\t\t\t\t\t\tthrow new RepositoryException(new RemoteShaclSailValidationException(\n+\t\t\t\t\t\t\t\tnew StringReader(errInfo.toString()), \"\", RDFFormat.NQUADS));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d31dfdb9336db3596b20ab0073e9df6ffc3f87"}, "originalPosition": 204}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NDg0NDk5", "url": "https://github.com/eclipse/rdf4j/pull/2025#pullrequestreview-378484499", "createdAt": "2020-03-20T13:33:01Z", "commit": {"oid": "f5d31dfdb9336db3596b20ab0073e9df6ffc3f87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozMzowMVrOF5T0Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozMzowMVrOF5T0Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNzc5NQ==", "bodyText": "Went with `X-Eclipse-RDF4J-Exception\u00b4as the header, and it should contain a simple class name.", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r395637795", "createdAt": "2020-03-20T13:33:01Z", "author": {"login": "hmottestad"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/SPARQLProtocolSession.java", "diffHunk": "@@ -1055,6 +1062,21 @@ protected HttpResponse execute(HttpUriRequest method) throws IOException, RDF4JE\n \t\t}\n \t}\n \n+\tprivate boolean exceptionIs(HttpResponse response, String exceptionName) {\n+\t\tHeader[] headers = response.getHeaders(\"X-Eclipse-RDF4J-Exception\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d31dfdb9336db3596b20ab0073e9df6ffc3f87"}, "originalPosition": 213}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5d31dfdb9336db3596b20ab0073e9df6ffc3f87", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/f5d31dfdb9336db3596b20ab0073e9df6ffc3f87", "committedDate": "2020-03-20T13:27:39Z", "message": "GH-1502 Create a SHACL exception in the ProtocolExceptionResolver instead of relying on a generic exception with a message\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "fc506ee086e31053ab79fb4de89ce30909d6efe5", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/fc506ee086e31053ab79fb4de89ce30909d6efe5", "committedDate": "2020-03-20T13:52:11Z", "message": "GH-1502 Create a SHACL exception in the ProtocolExceptionResolver instead of relying on a generic exception with a message\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODE0Njkx", "url": "https://github.com/eclipse/rdf4j/pull/2025#pullrequestreview-378814691", "createdAt": "2020-03-20T21:12:15Z", "commit": {"oid": "a2fbffb4bee06952e7be6ff76a75721733133b6f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMToxMjoxNlrOF5jUmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMToxMzoyNVrOF5jWcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MTg2NA==", "bodyText": "Why are you sending the validation report with this tagged on, and as plain text? Wouldn't it make more sense to send just the turtle data, as text/turtle?", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r395891864", "createdAt": "2020-03-20T21:12:16Z", "author": {"login": "jeenbroekstra"}, "path": "tools/workbench/src/main/java/org/eclipse/rdf4j/workbench/proxy/WorkbenchServlet.java", "diffHunk": "@@ -127,7 +134,27 @@ private void handleRequest(final HttpServletRequest req, final HttpServletRespon\n \t\t} catch (UnauthorizedException e) {\n \t\t\thandleUnauthorizedException(req, resp);\n \t\t} catch (RepositoryConfigException | RepositoryException e) {\n-\t\t\tthrow new ServletException(e);\n+\t\t\tif (e.getCause() instanceof RemoteShaclSailValidationException) {\n+\t\t\t\tModel model = ((RemoteShaclSailValidationException) e.getCause()).validationReportAsModel();\n+\n+\t\t\t\tresp.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n+\t\t\t\tresp.setContentType(TEXT_PLAIN);\n+\t\t\t\tPrintWriter writer = resp.getWriter();\n+\n+\t\t\t\twriter.println(\"SHACL validation failed with the following report:\\n\");\n+\t\t\t\tWriterConfig writerConfig = new WriterConfig();\n+\t\t\t\twriterConfig.set(BasicWriterSettings.PRETTY_PRINT, true);\n+\t\t\t\twriterConfig.set(BasicWriterSettings.INLINE_BLANK_NODES, true);\n+\t\t\t\tRio.write(model, writer, RDFFormat.TURTLE, writerConfig);\n+\n+\t\t\t\twriter.println(\n+\t\t\t\t\t\t\"\\n\" +\n+\t\t\t\t\t\t\t\t\"THIS ERROR MESSAGE IS EXPERIMENTAL AND IS SUBJECT TO CHANGE - \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2fbffb4bee06952e7be6ff76a75721733133b6f"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MjMzNw==", "bodyText": "Perhaps a 409 (conflict) is more specific.", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r395892337", "createdAt": "2020-03-20T21:13:25Z", "author": {"login": "jeenbroekstra"}, "path": "tools/workbench/src/main/java/org/eclipse/rdf4j/workbench/proxy/WorkbenchServlet.java", "diffHunk": "@@ -127,7 +134,27 @@ private void handleRequest(final HttpServletRequest req, final HttpServletRespon\n \t\t} catch (UnauthorizedException e) {\n \t\t\thandleUnauthorizedException(req, resp);\n \t\t} catch (RepositoryConfigException | RepositoryException e) {\n-\t\t\tthrow new ServletException(e);\n+\t\t\tif (e.getCause() instanceof RemoteShaclSailValidationException) {\n+\t\t\t\tModel model = ((RemoteShaclSailValidationException) e.getCause()).validationReportAsModel();\n+\n+\t\t\t\tresp.setStatus(HttpServletResponse.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2fbffb4bee06952e7be6ff76a75721733133b6f"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODM0MDA1", "url": "https://github.com/eclipse/rdf4j/pull/2025#pullrequestreview-378834005", "createdAt": "2020-03-20T21:57:00Z", "commit": {"oid": "a2fbffb4bee06952e7be6ff76a75721733133b6f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTo1NzowMVrOF5kRuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMjowMjo0MVrOF5kYkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwNzUxNQ==", "bodyText": "What purpose does this wrapper interface server? Can we do without?", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r395907515", "createdAt": "2020-03-20T21:57:01Z", "author": {"login": "jeenbroekstra"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/ModelInterface.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.http.client;\n+\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.Resource;\n+import org.eclipse.rdf4j.model.impl.DynamicModelFactory;\n+\n+public interface ModelInterface {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2fbffb4bee06952e7be6ff76a75721733133b6f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwNzYxMg==", "bodyText": "Should extend RDF4JException", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r395907612", "createdAt": "2020-03-20T21:57:19Z", "author": {"login": "jeenbroekstra"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/RemoteShaclSailValidationException.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.http.client;\n+\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.vocabulary.SHACL;\n+import org.eclipse.rdf4j.rio.RDFFormat;\n+\n+import java.io.StringReader;\n+\n+public class RemoteShaclSailValidationException extends Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2fbffb4bee06952e7be6ff76a75721733133b6f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwNzkxMw==", "bodyText": "What purpose does this wrapper serve? It seems to be pretty basic use of the Rio parser. Can we do without?", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r395907913", "createdAt": "2020-03-20T21:58:14Z", "author": {"login": "jeenbroekstra"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/RemoteValidation.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package org.eclipse.rdf4j.http.client;\n+\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.Resource;\n+import org.eclipse.rdf4j.rio.RDFFormat;\n+import org.eclipse.rdf4j.rio.Rio;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+\n+public class RemoteValidation implements ModelInterface {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2fbffb4bee06952e7be6ff76a75721733133b6f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwODI0NA==", "bodyText": "This is very RDF4J-specific. Shouldn't this be in the RDF4JProtocolSession instead?", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r395908244", "createdAt": "2020-03-20T21:59:08Z", "author": {"login": "jeenbroekstra"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/SPARQLProtocolSession.java", "diffHunk": "@@ -1041,6 +1044,10 @@ protected HttpResponse execute(HttpUriRequest method) throws IOException, RDF4JE\n \t\t\t\t\t\tthrow new MalformedQueryException(errInfo.getErrorMessage());\n \t\t\t\t\t} else if (errInfo.getErrorType() == ErrorType.UNSUPPORTED_QUERY_LANGUAGE) {\n \t\t\t\t\t\tthrow new UnsupportedQueryLanguageException(errInfo.getErrorMessage());\n+\t\t\t\t\t} else if (exceptionIs(response, \"ShaclSailValidationException\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2fbffb4bee06952e7be6ff76a75721733133b6f"}, "originalPosition": 201}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwOTI2NA==", "bodyText": "If you want a place to have a shared exception class, rdf4j-util might be a good spot. Create a package org.eclipse.rdf4j.common.exception perhaps?", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r395909264", "createdAt": "2020-03-20T22:02:41Z", "author": {"login": "jeenbroekstra"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/SPARQLProtocolSession.java", "diffHunk": "@@ -1041,6 +1044,10 @@ protected HttpResponse execute(HttpUriRequest method) throws IOException, RDF4JE\n \t\t\t\t\t\tthrow new MalformedQueryException(errInfo.getErrorMessage());\n \t\t\t\t\t} else if (errInfo.getErrorType() == ErrorType.UNSUPPORTED_QUERY_LANGUAGE) {\n \t\t\t\t\t\tthrow new UnsupportedQueryLanguageException(errInfo.getErrorMessage());\n+\t\t\t\t\t} else if (exceptionIs(response, \"ShaclSailValidationException\")) {\n+\t\t\t\t\t\tthrow new RepositoryException(new RemoteShaclSailValidationException(\n+\t\t\t\t\t\t\t\tnew StringReader(errInfo.toString()), \"\", RDFFormat.NQUADS));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNTcxMg=="}, "originalCommit": {"oid": "f5d31dfdb9336db3596b20ab0073e9df6ffc3f87"}, "originalPosition": 204}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de24c922cf75b2a8a127c6d1c104c2090e93b0b4", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/de24c922cf75b2a8a127c6d1c104c2090e93b0b4", "committedDate": "2020-03-21T10:31:12Z", "message": "GH-1900 changes header and status code\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "69c42c2b38f5ee46163c3bd4e016679b994cb260", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/69c42c2b38f5ee46163c3bd4e016679b994cb260", "committedDate": "2020-03-21T10:53:57Z", "message": "GH-1900 changes header and status code\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69c42c2b38f5ee46163c3bd4e016679b994cb260", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/69c42c2b38f5ee46163c3bd4e016679b994cb260", "committedDate": "2020-03-21T10:53:57Z", "message": "GH-1900 changes header and status code\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "367886423e913f529a4296a314f89b8565e79a8b", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/367886423e913f529a4296a314f89b8565e79a8b", "committedDate": "2020-03-21T11:02:18Z", "message": "GH-1900 changes header and status code\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da8ddae240fcc623cbb9613805623100c22a0e02", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/da8ddae240fcc623cbb9613805623100c22a0e02", "committedDate": "2020-03-27T13:18:00Z", "message": "GH-1900 created a new package for common SHACL exception interface\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "b83b4702028bd2301e8c7ce010fb06e7d9f763c3", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/b83b4702028bd2301e8c7ce010fb06e7d9f763c3", "committedDate": "2020-03-27T13:32:50Z", "message": "GH-1900 created a new package for common SHACL exception interface\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjU1NDIw", "url": "https://github.com/eclipse/rdf4j/pull/2025#pullrequestreview-383255420", "createdAt": "2020-03-27T23:48:24Z", "commit": {"oid": "b83b4702028bd2301e8c7ce010fb06e7d9f763c3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMzo0ODoyNFrOF9Eyag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMzo0OTo1MVrOF9Ezug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTg5OA==", "bodyText": "I think this should be an abstract class, extending RDF4JException.\nI'd also rename to something more generic, like just ValidationException.", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r399585898", "createdAt": "2020-03-27T23:48:24Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl-common/src/main/java/org/eclipse/rdf4j/sail/shaclcommon/ShaclSailValidationException.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sail.shaclcommon;\n+\n+\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.sail.shaclcommon.results.ValidationReport;\n+\n+public interface ShaclSailValidationException  {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b83b4702028bd2301e8c7ce010fb06e7d9f763c3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NjA0Ng==", "bodyText": "I think this package name and the module is too specific. I'd suggest putting this in a package org.eclipse.rdf4j.common.validation.", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r399586046", "createdAt": "2020-03-27T23:49:00Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl-common/src/main/java/org/eclipse/rdf4j/sail/shaclcommon/ShaclSailValidationException.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sail.shaclcommon;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b83b4702028bd2301e8c7ce010fb06e7d9f763c3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NjIzNA==", "bodyText": "I don't think you need this here. Doesn't the ValidationREport itself already have an asModel method?", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r399586234", "createdAt": "2020-03-27T23:49:51Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl-common/src/main/java/org/eclipse/rdf4j/sail/shaclcommon/ShaclSailValidationException.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sail.shaclcommon;\n+\n+\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.sail.shaclcommon.results.ValidationReport;\n+\n+public interface ShaclSailValidationException  {\n+\n+\n+\t/**\n+\t * @return A Model containing the validation report as specified by the SHACL Recommendation\n+\t */\n+\t Model validationReportAsModel() ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b83b4702028bd2301e8c7ce010fb06e7d9f763c3"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzEwMDEz", "url": "https://github.com/eclipse/rdf4j/pull/2025#pullrequestreview-383310013", "createdAt": "2020-03-28T12:42:42Z", "commit": {"oid": "4ef09e5ea14e00279825aca06ea6cca385563891"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMjo0Mjo0MlrOF9JMxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMjo0Mjo0MlrOF9JMxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1ODE4MQ==", "bodyText": "@jeenbroekstra\nThis is the exception that gets thrown by the client when the server responds with a 409 and the validation report. The ValidationException interface is now what's common between the regular ShaclSailValidationException and this exception. Users would then need to migrate to \"catch\" this interface instead of the ShaclSailValidationException if they only retrieve the model and want their code to be portable between a local ShaclSail and remote one.\nThings still left to consider:\n\nShould this exception extend the RDF4JException (which is deprecated) or SailException (which is what the ShaclSailValidationException does? Not sure why the RDF4JException isn't an interface instead of an abstract class.\nShould we mark this and the remote validation exception as experimental, since this isn't the final location of the interface at least?\nHow to support streaming validation reports?\nWhat are we going to do with the current java based validation report? Maybe deprecate it so we can move it and generalise it?", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r399658181", "createdAt": "2020-03-28T12:42:42Z", "author": {"login": "hmottestad"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/shacl/RemoteShaclSailValidationException.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.http.client.shacl;\n+\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.vocabulary.SHACL;\n+import org.eclipse.rdf4j.rio.RDFFormat;\n+import org.eclipse.rdf4j.sail.SailException;\n+import org.eclipse.rdf4j.exceptions.ValidationException;\n+\n+import java.io.StringReader;\n+\n+public class RemoteShaclSailValidationException extends SailException implements ValidationException {\n+\n+\tprivate final RemoteValidation remoteValidation;\n+\n+\tpublic RemoteShaclSailValidationException(StringReader stringReader, String s, RDFFormat format) {\n+\t\tremoteValidation = new RemoteValidation(stringReader, s, format);\n+\t}\n+\n+\t/**\n+\t * @return A Model containing the validation report as specified by the SHACL Recommendation\n+\t */\n+\t@Override\n+\tpublic Model validationReportAsModel() {\n+\t\tModel model = remoteValidation.asModel();\n+\t\tmodel.setNamespace(SHACL.PREFIX, SHACL.NAMESPACE);\n+\t\treturn model;\n+\n+\t}\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ef09e5ea14e00279825aca06ea6cca385563891"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNDAyOTY4", "url": "https://github.com/eclipse/rdf4j/pull/2025#pullrequestreview-383402968", "createdAt": "2020-03-29T12:00:18Z", "commit": {"oid": "4ef09e5ea14e00279825aca06ea6cca385563891"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMjowMDoxOFrOF9RGRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMjowMDoxOFrOF9RGRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4NzU5MA==", "bodyText": "You can not let the http client depend on the sail api.", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r399787590", "createdAt": "2020-03-29T12:00:18Z", "author": {"login": "jeenbroekstra"}, "path": "core/http/client/pom.xml", "diffHunk": "@@ -60,6 +60,11 @@\n \t\t\t<groupId>commons-codec</groupId>\n \t\t\t<artifactId>commons-codec</artifactId>\n \t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>${project.groupId}</groupId>\n+\t\t\t<artifactId>rdf4j-sail-api</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ef09e5ea14e00279825aca06ea6cca385563891"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "733176f6e8e5651f617738da130b234ed017535f", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/733176f6e8e5651f617738da130b234ed017535f", "committedDate": "2020-03-29T15:22:11Z", "message": "GH-1900 renamed exception to reflect that it doesn't come from a sail and also canged which exception it inherits from\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "24749743a0d4e973307885c6ce008a1b21d8d647", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/24749743a0d4e973307885c6ce008a1b21d8d647", "committedDate": "2020-03-29T15:29:21Z", "message": "GH-1900 renamed exception to reflect that it doesn't come from a sail and also canged which exception it inherits from\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24749743a0d4e973307885c6ce008a1b21d8d647", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/24749743a0d4e973307885c6ce008a1b21d8d647", "committedDate": "2020-03-29T15:29:21Z", "message": "GH-1900 renamed exception to reflect that it doesn't come from a sail and also canged which exception it inherits from\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "6410c9938bb2b485f34a567bf2e0e100a1524fa6", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/6410c9938bb2b485f34a567bf2e0e100a1524fa6", "committedDate": "2020-03-29T16:16:15Z", "message": "GH-1900 renamed exception to reflect that it doesn't come from a sail and also canged which exception it inherits from\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90d6e1635704783cb929cd8adb7b47169750fdaf", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/90d6e1635704783cb929cd8adb7b47169750fdaf", "committedDate": "2020-03-30T11:28:56Z", "message": "GH-1900 use the ProtocolExceptionResolver to check if ShaclValidationException is present and extract the report so it can be used as the body of the response\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fab174185971fdd6063ed69f28caa3ad048d17b", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/3fab174185971fdd6063ed69f28caa3ad048d17b", "committedDate": "2020-03-30T11:28:56Z", "message": "GH-1900 Create a SHACL exception in the ProtocolExceptionResolver instead of relying on a generic exception with a message\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06077c767f55b6beef05430c4f6303fd3eb4b5fc", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/06077c767f55b6beef05430c4f6303fd3eb4b5fc", "committedDate": "2020-03-30T11:28:56Z", "message": "GH-2022 print SHACL validation report in Workbench\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec7a4594ca6b9c2c25008f6b4eaba6f43179d7ec", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/ec7a4594ca6b9c2c25008f6b4eaba6f43179d7ec", "committedDate": "2020-03-29T19:35:06Z", "message": "GH-1900 deprecated some classes and methods that are likely to be moved in the future.\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "e61829da7eb11f6fa327f841e1620ad2b739d86a", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/e61829da7eb11f6fa327f841e1620ad2b739d86a", "committedDate": "2020-03-30T11:28:56Z", "message": "GH-1900 deprecated some classes and methods that are likely to be moved in the future.\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e61829da7eb11f6fa327f841e1620ad2b739d86a", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/e61829da7eb11f6fa327f841e1620ad2b739d86a", "committedDate": "2020-03-30T11:28:56Z", "message": "GH-1900 deprecated some classes and methods that are likely to be moved in the future.\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "f496a4a20a8bbcba2b1580f561b11c2bc6031302", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/f496a4a20a8bbcba2b1580f561b11c2bc6031302", "committedDate": "2020-03-30T11:31:45Z", "message": "GH-1900 updates based on feedback from andy and review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f496a4a20a8bbcba2b1580f561b11c2bc6031302", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/f496a4a20a8bbcba2b1580f561b11c2bc6031302", "committedDate": "2020-03-30T11:31:45Z", "message": "GH-1900 updates based on feedback from andy and review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "1893b2600d9e571e3b7bf81e60207c714381b1a9", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/1893b2600d9e571e3b7bf81e60207c714381b1a9", "committedDate": "2020-03-30T11:45:22Z", "message": "GH-1900 updates based on feedback from andy and review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MjkxMzYz", "url": "https://github.com/eclipse/rdf4j/pull/2025#pullrequestreview-384291363", "createdAt": "2020-03-30T22:59:00Z", "commit": {"oid": "1893b2600d9e571e3b7bf81e60207c714381b1a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjo1OTowMFrOF9_TjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjo1OTowMFrOF9_TjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0NDY1Mg==", "bodyText": "Not a blocker for this PR, but: could you fix your formatter to not reorganize imports in this fashion? Most of our code follows the default Eclipse convention to have static imports first, then normal imports organized with anything from java.* at the top, then javax.* , then org.*, then com.*, then everything else.\nReason I ask is that I've had to resolve some merge conflicts in the past that were caused by imports being moved around, and it's a hassle.\nThis was never made explicit because in the past everyone on the project used Eclipse, so it was just the implicit default. Perhaps we should document this now that we have a more diverse toolset.", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r400544652", "createdAt": "2020-03-30T22:59:00Z", "author": {"login": "jeenbroekstra"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/SPARQLProtocolSession.java", "diffHunk": "@@ -102,6 +86,26 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.io.StringReader;\n+import java.net.HttpURLConnection;\n+import java.net.URISyntaxException;\n+import java.nio.charset.Charset;\n+import java.nio.charset.IllegalCharsetNameException;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.concurrent.ExecutorService;\n+\n+import static org.eclipse.rdf4j.http.protocol.Protocol.ACCEPT_PARAM_NAME;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1893b2600d9e571e3b7bf81e60207c714381b1a9"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MjkyMzA3", "url": "https://github.com/eclipse/rdf4j/pull/2025#pullrequestreview-384292307", "createdAt": "2020-03-30T23:01:18Z", "commit": {"oid": "1893b2600d9e571e3b7bf81e60207c714381b1a9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMzowNDoxMlrOF9_ayQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMzoyMDoxM1rOF9_v0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0NjUwNQ==", "bodyText": "Why is this a static? You're not using it in a static way, as far as I can tell, nor are there any other existing static methods in the ProtocolSession class. It think it can just be a private instance method.", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r400546505", "createdAt": "2020-03-30T23:04:12Z", "author": {"login": "jeenbroekstra"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/SPARQLProtocolSession.java", "diffHunk": "@@ -1055,6 +1066,62 @@ protected HttpResponse execute(HttpUriRequest method) throws IOException, RDF4JE\n \t\t}\n \t}\n \n+\tstatic RDFFormat getContentTypeSerialisation(HttpResponse response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1893b2600d9e571e3b7bf81e60207c714381b1a9"}, "originalPosition": 232}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1MTg4OQ==", "bodyText": "Missing curly braces.", "url": "https://github.com/eclipse/rdf4j/pull/2025#discussion_r400551889", "createdAt": "2020-03-30T23:20:13Z", "author": {"login": "jeenbroekstra"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/SPARQLProtocolSession.java", "diffHunk": "@@ -1055,6 +1066,62 @@ protected HttpResponse execute(HttpUriRequest method) throws IOException, RDF4JE\n \t\t}\n \t}\n \n+\tstatic RDFFormat getContentTypeSerialisation(HttpResponse response) {\n+\t\tHeader[] headers = response.getHeaders(\"Content-Type\");\n+\n+\t\tSet<RDFFormat> rdfFormats = RDFParserRegistry.getInstance().getKeys();\n+\t\tif (rdfFormats.isEmpty()) {\n+\t\t\tthrow new RepositoryException(\"No tuple RDF parsers have been registered\");\n+\t\t}\n+\n+\t\tfor (Header header : headers) {\n+\t\t\tfor (HeaderElement element : header.getElements()) {\n+\t\t\t\t// SHACL Validation report Content-Type gets transformed from:\n+\t\t\t\t// application/shacl-validation-report+n-quads => application/n-quads\n+\t\t\t\t// application/shacl-validation-report+ld+json => application/ld+json\n+\t\t\t\t// text/shacl-validation-report+turtle => text/turtle\n+\n+\t\t\t\tString[] split = element.getName().split(\"\\\\+\");\n+\t\t\t\tStringBuilder serialisation = new StringBuilder(element.getName().split(\"/\")[0] + \"/\");\n+\t\t\t\tfor (int i = 1; i < split.length; i++) {\n+\t\t\t\t\tserialisation.append(split[i]);\n+\t\t\t\t\tif (i + 1 < split.length) {\n+\t\t\t\t\t\tserialisation.append(\"+\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\tlogger.debug(\"SHACL validation report is serialised as: \" + serialisation.toString());\n+\n+\t\t\t\tOptional<RDFFormat> rdfFormat = RDFFormat.matchMIMEType(serialisation.toString(), rdfFormats);\n+\n+\t\t\t\tif (rdfFormat.isPresent())\n+\t\t\t\t\treturn rdfFormat.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1893b2600d9e571e3b7bf81e60207c714381b1a9"}, "originalPosition": 261}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96818898b1f795332edee08031ea7ab0da27bfa4", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/96818898b1f795332edee08031ea7ab0da27bfa4", "committedDate": "2020-03-31T06:19:31Z", "message": "GH-1900 updates based on feedback from andy and review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1893b2600d9e571e3b7bf81e60207c714381b1a9", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/1893b2600d9e571e3b7bf81e60207c714381b1a9", "committedDate": "2020-03-30T11:45:22Z", "message": "GH-1900 updates based on feedback from andy and review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}, "afterCommit": {"oid": "96818898b1f795332edee08031ea7ab0da27bfa4", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/96818898b1f795332edee08031ea7ab0da27bfa4", "committedDate": "2020-03-31T06:19:31Z", "message": "GH-1900 updates based on feedback from andy and review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NDMwNDcz", "url": "https://github.com/eclipse/rdf4j/pull/2025#pullrequestreview-384430473", "createdAt": "2020-03-31T06:21:10Z", "commit": {"oid": "96818898b1f795332edee08031ea7ab0da27bfa4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 6, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}