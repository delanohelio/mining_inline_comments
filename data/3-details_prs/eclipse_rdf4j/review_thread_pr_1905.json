{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwODk1Mzcz", "number": 1905, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzo1ODo0NlrODdEpsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNjoyODozN1rODdOSWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODExNTA1OnYy", "diffSide": "RIGHT", "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzo1ODo0NlrOFldzCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNTo1NDoxMVrOFlsg-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyOTgzMg==", "bodyText": "Btw. Unrelated to this particular PR. I noticed a lot of Protected variables in this class, do you need them to be available so broadly.\nAlso, I was wondering what happens if you call initWorkerThreads multiple times? Does it create a bunch of thread pools?", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r374829832", "createdAt": "2020-02-04T17:58:46Z", "author": {"login": "hmottestad"}, "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java", "diffHunk": "@@ -112,8 +112,10 @@ public int getNumberOfTasks() {\n \n \tprotected void initWorkerThreads() {\n \n-\t\texecutor = new ThreadPoolExecutor(Math.min(10, nWorkers / 2), nWorkers, 30L, TimeUnit.SECONDS, _taskQueue,\n+\t\tThreadPoolExecutor _executor = new ThreadPoolExecutor(nWorkers, nWorkers, 60L, TimeUnit.SECONDS, _taskQueue,\n \t\t\t\tnew NamingThreadFactory(name));\n+\t\t_executor.allowCoreThreadTimeOut(true);\n+\t\tthis.executor = _executor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d2c932f60db97fa543ac7bc7a636a4d9214859"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2MjE0OA==", "bodyText": "@hmottestad I agree that some of these variables should be made private, but this close to release I'd rather have confirmation from @aschwarte10 that that won't break dependent code.\nAs for your second remark: it looks as if the intent is that initWorkerThreads is only invoked from the constructor. So that would happen only once.", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r375062148", "createdAt": "2020-02-05T05:12:17Z", "author": {"login": "jeenbroekstra"}, "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java", "diffHunk": "@@ -112,8 +112,10 @@ public int getNumberOfTasks() {\n \n \tprotected void initWorkerThreads() {\n \n-\t\texecutor = new ThreadPoolExecutor(Math.min(10, nWorkers / 2), nWorkers, 30L, TimeUnit.SECONDS, _taskQueue,\n+\t\tThreadPoolExecutor _executor = new ThreadPoolExecutor(nWorkers, nWorkers, 60L, TimeUnit.SECONDS, _taskQueue,\n \t\t\t\tnew NamingThreadFactory(name));\n+\t\t_executor.allowCoreThreadTimeOut(true);\n+\t\tthis.executor = _executor;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyOTgzMg=="}, "originalCommit": {"oid": "15d2c932f60db97fa543ac7bc7a636a4d9214859"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3MDk3MA==", "bodyText": "I agree that methods should be private for this scheduler (and also the initialization could be done in a better way). The current implementation structure is mostly for historical reasons (the initial code is almost 8 years old by now) and quite some versions ago the extension hierarchy for the schedulers looked different (e.g. for union and join) making it required to have certain things protected.\nAs suggested by Jeen we can have another push on this PR to make the methods private", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r375070970", "createdAt": "2020-02-05T05:54:11Z", "author": {"login": "aschwarte10"}, "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java", "diffHunk": "@@ -112,8 +112,10 @@ public int getNumberOfTasks() {\n \n \tprotected void initWorkerThreads() {\n \n-\t\texecutor = new ThreadPoolExecutor(Math.min(10, nWorkers / 2), nWorkers, 30L, TimeUnit.SECONDS, _taskQueue,\n+\t\tThreadPoolExecutor _executor = new ThreadPoolExecutor(nWorkers, nWorkers, 60L, TimeUnit.SECONDS, _taskQueue,\n \t\t\t\tnew NamingThreadFactory(name));\n+\t\t_executor.allowCoreThreadTimeOut(true);\n+\t\tthis.executor = _executor;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyOTgzMg=="}, "originalCommit": {"oid": "15d2c932f60db97fa543ac7bc7a636a4d9214859"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTY5MzcwOnYy", "diffSide": "RIGHT", "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNjoyODozN1rOFls97Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNzoxNDoyOVrOFltsmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3ODM4MQ==", "bodyText": "could executor be final?", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r375078381", "createdAt": "2020-02-05T06:28:37Z", "author": {"login": "hmottestad"}, "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java", "diffHunk": "@@ -38,14 +38,14 @@\n  */\n public class ControlledWorkerScheduler<T> implements Scheduler<T> {\n \n-\tprotected static final Logger log = LoggerFactory.getLogger(ControlledWorkerScheduler.class);\n+\tprivate static final Logger log = LoggerFactory.getLogger(ControlledWorkerScheduler.class);\n \n-\tprotected ExecutorService executor;\n+\tprivate ExecutorService executor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db10678087cabc1d7289725d0bb331ec30dc57d3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA4OTk0Mw==", "bodyText": "Sure, I'll add this to @jeenbroekstra's second commit. @hmottestad  Can you please approve once the PR is updated?", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r375089943", "createdAt": "2020-02-05T07:13:21Z", "author": {"login": "aschwarte10"}, "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java", "diffHunk": "@@ -38,14 +38,14 @@\n  */\n public class ControlledWorkerScheduler<T> implements Scheduler<T> {\n \n-\tprotected static final Logger log = LoggerFactory.getLogger(ControlledWorkerScheduler.class);\n+\tprivate static final Logger log = LoggerFactory.getLogger(ControlledWorkerScheduler.class);\n \n-\tprotected ExecutorService executor;\n+\tprivate ExecutorService executor;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3ODM4MQ=="}, "originalCommit": {"oid": "db10678087cabc1d7289725d0bb331ec30dc57d3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA5MDMzMQ==", "bodyText": "@hmottestad PR is updated, please have a second look", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r375090331", "createdAt": "2020-02-05T07:14:29Z", "author": {"login": "aschwarte10"}, "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java", "diffHunk": "@@ -38,14 +38,14 @@\n  */\n public class ControlledWorkerScheduler<T> implements Scheduler<T> {\n \n-\tprotected static final Logger log = LoggerFactory.getLogger(ControlledWorkerScheduler.class);\n+\tprivate static final Logger log = LoggerFactory.getLogger(ControlledWorkerScheduler.class);\n \n-\tprotected ExecutorService executor;\n+\tprivate ExecutorService executor;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3ODM4MQ=="}, "originalCommit": {"oid": "db10678087cabc1d7289725d0bb331ec30dc57d3"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1645, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}