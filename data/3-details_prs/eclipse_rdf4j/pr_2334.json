{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NDE4OTc2", "number": 2334, "title": "GH-2240 shacl limit validating results", "bodyText": "GitHub issue resolved: #2240 \nBriefly describe the changes proposed in this PR:\n\nsupport for limiting the size of the validation report\n\n\nPR Author Checklist (see the contributor guidelines for more details):\n\n my pull request is self-contained\n I've added tests for the changes I made\n I've applied code formatting (you can use mvn process-resources to format from the command line)\n every commit message starts with the issue number (GH-xxxx) followed by a meaningful description of the change\n every commit has been signed off\n\nNote: we merge all feature pull requests using squash and merge. See RDF4J git merge strategy for more details.", "createdAt": "2020-06-24T19:25:18Z", "url": "https://github.com/eclipse/rdf4j/pull/2334", "merged": true, "mergeCommit": {"oid": "5803dd27a771fecaf148d1991e8d0f3ecd8ced2d"}, "closed": true, "closedAt": "2020-07-10T13:35:57Z", "author": {"login": "hmottestad"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABct3-c6AH2gAyNDM5NDE4OTc2OjUxM2I3NzYyZjFhNDhhOGJjNzI0MDRhMmZiNmVlMzM1NDI4YWQ0ZDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczRMGEgH2gAyNDM5NDE4OTc2OmZhNTVmOTRjYjQ5MWJiOTljYzdjZjM5ZjY1NDE1ZDU4MTBjN2QzOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "513b7762f1a48a8bc72404a2fb6ee335428ad4d7", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/513b7762f1a48a8bc72404a2fb6ee335428ad4d7", "committedDate": "2020-06-22T21:45:40Z", "message": "GH-2240 started to support truncated reports\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "274e6b976d0be8c1dfe51bf0092e6537bd0b95ec", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/274e6b976d0be8c1dfe51bf0092e6537bd0b95ec", "committedDate": "2020-06-24T19:23:56Z", "message": "GH-2240 tests\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ff4fcbf11ab7fae19482540cea62015c3e4751a", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/8ff4fcbf11ab7fae19482540cea62015c3e4751a", "committedDate": "2020-06-27T14:16:35Z", "message": "Merge branch 'develop' into GH-2240-shacl-limit-validatin-results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccdee81018716bb24f80e7053428edb2d0a6ca23", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/ccdee81018716bb24f80e7053428edb2d0a6ca23", "committedDate": "2020-06-27T14:43:51Z", "message": "GH-2240 added vocabulary\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79361bd210c963d7d9ee4584ebd23c92cd634477", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/79361bd210c963d7d9ee4584ebd23c92cd634477", "committedDate": "2020-06-27T15:18:59Z", "message": "fix test\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3da33208c4d48636a6d5aecfd210ce961902cfa9", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/3da33208c4d48636a6d5aecfd210ce961902cfa9", "committedDate": "2020-07-01T19:49:08Z", "message": "GH-2240 handle limits of zero\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01344c18b4e54f1b3c50bbe25c1dcfccf2fcdd8e", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/01344c18b4e54f1b3c50bbe25c1dcfccf2fcdd8e", "committedDate": "2020-07-01T19:54:31Z", "message": "GH-2240 test when limit is equal to size\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd73f56f036912be126c9e989d72243cead3c784", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/bd73f56f036912be126c9e989d72243cead3c784", "committedDate": "2020-07-05T12:35:10Z", "message": "GH-2240 transactions should conform by default\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/9a6b9c7e1bc15bb461bba1a8915808a18c1254f1", "committedDate": "2020-07-05T12:55:22Z", "message": "Merge branch 'develop' into GH-2240-shacl-limit-validatin-results\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzU0NzU5", "url": "https://github.com/eclipse/rdf4j/pull/2334#pullrequestreview-444354759", "createdAt": "2020-07-08T01:34:53Z", "commit": {"oid": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTozNDo1NFrOGuVDQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNDowODozNlrOGuXY3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMjU3Ng==", "bodyText": "What's this?", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451232576", "createdAt": "2020-07-08T01:34:54Z", "author": {"login": "jeenbroekstra"}, "path": ".gitignore", "diffHunk": "@@ -39,3 +39,4 @@ compliance/repository/overlays\n /core/sail/elasticsearch-store/tempElasticsearchDownload/*\n tempElasticsearchDownload\n cache.db\n+formatter-maven-cache.properties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMzMxNQ==", "bodyText": "This can just be one line. No big deal though.", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451233315", "createdAt": "2020-07-08T01:37:42Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ShaclSailValidationException.java", "diffHunk": "@@ -8,25 +8,20 @@\n \n package org.eclipse.rdf4j.sail.shacl;\n \n-import java.util.ArrayDeque;\n-import java.util.List;\n-\n import org.eclipse.rdf4j.exceptions.ValidationException;\n import org.eclipse.rdf4j.model.Model;\n import org.eclipse.rdf4j.model.vocabulary.SHACL;\n import org.eclipse.rdf4j.sail.SailException;\n-import org.eclipse.rdf4j.sail.shacl.AST.PropertyShape;\n-import org.eclipse.rdf4j.sail.shacl.planNodes.Tuple;\n import org.eclipse.rdf4j.sail.shacl.results.ValidationReport;\n-import org.eclipse.rdf4j.sail.shacl.results.ValidationResult;\n \n public class ShaclSailValidationException extends SailException implements ValidationException {\n \n-\tprivate List<Tuple> invalidTuples;\n+\tprivate final ValidationReport validationReport;\n \n-\tShaclSailValidationException(List<Tuple> invalidTuples) {\n-\t\tsuper(\"Failed SHACL validation\");\n-\t\tthis.invalidTuples = invalidTuples;\n+\tShaclSailValidationException(ValidationReport validationReport) {\n+\t\tsuper(\"Failed \" +\n+\t\t\t\t\"SHACL validation\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMzYyMA==", "bodyText": "A minor adjustment might be to only export these statements if the currently set value is not the default.", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451233620", "createdAt": "2020-07-08T01:39:03Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/config/ShaclSailConfig.java", "diffHunk": "@@ -204,6 +227,11 @@ public Resource export(Model m) {\n \t\tm.add(implNode, SERIALIZABLE_VALIDATION, BooleanLiteral.valueOf(isSerializableValidation()));\n \t\tm.add(implNode, ShaclSailSchema.SHACL_ADVANCED_FEATURES, BooleanLiteral.valueOf(isShaclAdvancedFeatures()));\n \t\tm.add(implNode, ShaclSailSchema.DASH_DATA_SHAPES, BooleanLiteral.valueOf(isDashDataShapes()));\n+\n+\t\tm.add(implNode, ShaclSailSchema.VALIDATION_RESULTS_LIMIT_TOTAL,\n+\t\t\t\tvf.createLiteral(getValidationResultsLimitTotal()));\n+\t\tm.add(implNode, ShaclSailSchema.VALIDATION_RESULTS_LIMIT_PER_CONSTRAINT,\n+\t\t\t\tvf.createLiteral(getValidationResultsLimitPerConstraint()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2Nzc2OA==", "bodyText": "Any chance we can put things in a single package and make them package-protected? If we can't, we can't, but I'd rather use these annotations as a last resort only.", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451267768", "createdAt": "2020-07-08T03:54:48Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/LazyValidationReport.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sail.shacl.results;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.eclipse.rdf4j.common.annotation.InternalUseOnly;\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.Resource;\n+import org.eclipse.rdf4j.model.impl.BooleanLiteral;\n+import org.eclipse.rdf4j.model.impl.DynamicModelFactory;\n+import org.eclipse.rdf4j.model.impl.SimpleValueFactory;\n+import org.eclipse.rdf4j.model.vocabulary.RDF;\n+import org.eclipse.rdf4j.model.vocabulary.RDF4J;\n+import org.eclipse.rdf4j.model.vocabulary.SHACL;\n+\n+/**\n+ * A ValidationReport that will defer calculating any ValidationResults until the user asks for them\n+ *\n+ */\n+@InternalUseOnly\n+@Deprecated\n+public class LazyValidationReport extends ValidationReport {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2ODAwNg==", "bodyText": "This could do with one or two lines of javadoc (possibly explaining the relation with the associated config settings).", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451268006", "createdAt": "2020-07-08T03:55:50Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationReport.java", "diffHunk": "@@ -86,4 +96,16 @@ public String toString() {\n \t\t\t\t\", validationResult=\" + Arrays.toString(validationResult.toArray()) +\n \t\t\t\t'}';\n \t}\n+\n+\tpublic boolean isTruncated() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2ODE4MA==", "bodyText": "Single package, package-protected?", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451268180", "createdAt": "2020-07-08T03:56:33Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationResultIterator.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sail.shacl.results;\n+\n+import java.util.ArrayDeque;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.eclipse.rdf4j.common.annotation.InternalUseOnly;\n+import org.eclipse.rdf4j.common.iteration.CloseableIteration;\n+import org.eclipse.rdf4j.common.iteration.IterationWrapper;\n+import org.eclipse.rdf4j.common.iteration.IteratorIteration;\n+import org.eclipse.rdf4j.sail.SailException;\n+import org.eclipse.rdf4j.sail.shacl.AST.PropertyShape;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.Tuple;\n+\n+@Deprecated\n+@InternalUseOnly\n+public class ValidationResultIterator implements Iterator<ValidationResult> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI3MDc4MA==", "bodyText": "I think you could be using an IteratorCloseableIteration here:\n   tupleIterator = new IteratorCloseableIteration<>(actualList.iterator());\n\nalso saves you having to change the visibiity of the constructor in IterationWrapper.", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451270780", "createdAt": "2020-07-08T04:08:01Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationResultIterator.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sail.shacl.results;\n+\n+import java.util.ArrayDeque;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.eclipse.rdf4j.common.annotation.InternalUseOnly;\n+import org.eclipse.rdf4j.common.iteration.CloseableIteration;\n+import org.eclipse.rdf4j.common.iteration.IterationWrapper;\n+import org.eclipse.rdf4j.common.iteration.IteratorIteration;\n+import org.eclipse.rdf4j.sail.SailException;\n+import org.eclipse.rdf4j.sail.shacl.AST.PropertyShape;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.Tuple;\n+\n+@Deprecated\n+@InternalUseOnly\n+public class ValidationResultIterator implements Iterator<ValidationResult> {\n+\n+\tprivate final long limit;\n+\tprivate long counter = 0;\n+\tprivate boolean conforms = true;\n+\tprivate boolean truncated = false;\n+\n+\tprivate ValidationResult next = null;\n+\tprivate CloseableIteration<Tuple, SailException> tupleIterator;\n+\n+\tpublic ValidationResultIterator(CloseableIteration<Tuple, SailException> tupleIterator, long limit) {\n+\t\tthis.limit = limit;\n+\t\tthis.tupleIterator = tupleIterator;\n+\t\tgetTuples();\n+\n+\t}\n+\n+\tprivate void calculateNext() {\n+\t\tif (tupleIterator.hasNext()) {\n+\t\t\tconforms = false;\n+\t\t}\n+\t\tif (next == null && tupleIterator.hasNext()) {\n+\t\t\tif (limit < 0 || counter < limit) {\n+\t\t\t\tTuple invalidTuple = tupleIterator.next();\n+\n+\t\t\t\tValidationResult parent = null;\n+\t\t\t\tArrayDeque<PropertyShape> propertyShapes = new ArrayDeque<>(invalidTuple.getCausedByPropertyShapes());\n+\n+\t\t\t\twhile (!propertyShapes.isEmpty()) {\n+\n+\t\t\t\t\tValidationResult validationResult = new ValidationResult(\n+\t\t\t\t\t\t\tpropertyShapes.pop(),\n+\t\t\t\t\t\t\tinvalidTuple.getLine().get(0),\n+\t\t\t\t\t\t\tinvalidTuple.getLine().get(invalidTuple.getLine().size() - 1)\n+\t\t\t\t\t);\n+\n+\t\t\t\t\tif (parent == null) {\n+\t\t\t\t\t\tnext = validationResult;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tparent.setDetail(validationResult);\n+\t\t\t\t\t}\n+\t\t\t\t\tparent = validationResult;\n+\t\t\t\t}\n+\t\t\t\tcounter++;\n+\t\t\t}\n+\n+\t\t\tif (limit >= 0 && counter >= limit && tupleIterator.hasNext()) {\n+\t\t\t\ttruncated = true;\n+\t\t\t}\n+\n+\t\t}\n+\t}\n+\n+\tpublic List<Tuple> getTuples() {\n+\t\tList<Tuple> actualList = new ArrayList<>();\n+\t\tlong localCounter = 0;\n+\t\twhile (tupleIterator.hasNext() && (limit < 0 || localCounter++ < limit + 1)) {\n+\t\t\tactualList.add(tupleIterator.next());\n+\t\t}\n+\n+\t\ttupleIterator = new IterationWrapper<>(new IteratorIteration<>(actualList.iterator()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI3MDg3Nw==", "bodyText": "If you use IteratorCloseableIteration instead, you don't have to change visibility here.", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451270877", "createdAt": "2020-07-08T04:08:36Z", "author": {"login": "jeenbroekstra"}, "path": "core/util/src/main/java/org/eclipse/rdf4j/common/iteration/IterationWrapper.java", "diffHunk": "@@ -38,7 +38,7 @@\n \t *\n \t * @param iter The wrapped Iteration for this <tt>IterationWrapper</tt>, must not be <tt>null</tt>.\n \t */\n-\tprotected IterationWrapper(Iteration<? extends E, ? extends X> iter) {\n+\tpublic IterationWrapper(Iteration<? extends E, ? extends X> iter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "714dfb61ba6bdcad934c41732230a434b63af71a", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/714dfb61ba6bdcad934c41732230a434b63af71a", "committedDate": "2020-07-09T15:28:45Z", "message": "fixes from review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa55f94cb491bb99cc7cf39f65415d5810c7d396", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/fa55f94cb491bb99cc7cf39f65415d5810c7d396", "committedDate": "2020-07-09T15:57:49Z", "message": "GH-2240 calculate the effective limit per constraint based on the user set value with upper bound of the total limit\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 127, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}