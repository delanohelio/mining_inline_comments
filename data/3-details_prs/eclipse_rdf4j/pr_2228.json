{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4OTI4MjQy", "number": 2228, "title": "GH-2211 add more latches and loop to reduce chance of flaky failure", "bodyText": "GitHub issue resolved: #2211 \nBriefly describe the changes proposed in this PR:\n\n\nPR Author Checklist:\n\n my pull request is self-contained\n I've added tests for the changes I made\n every commit message starts with the issue number (GH-xxxx) followed by a meaningful description of the change\n every commit has been signed off\n\nNote: we merge all feature pull requests using squash and merge. See RDF4J git merge strategy for more details.", "createdAt": "2020-05-16T07:17:22Z", "url": "https://github.com/eclipse/rdf4j/pull/2228", "merged": true, "mergeCommit": {"oid": "01df4ba1cbfbbf6752f3054c5c2d3d8c41f78dd4"}, "closed": true, "closedAt": "2020-05-16T09:29:38Z", "author": {"login": "hmottestad"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchxXl5AH2gAyNDE4OTI4MjQyOjViOWU4YjI2OGY3NmQwMDc5YmVmOWU1YmRhMGNkYzI5ZTBlNWUzMWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchxZAtgFqTQxMzA1NTM2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5b9e8b268f76d0079bef9e5bda0cdc29e0e5e31e", "author": {"user": {"login": "hmottestad", "name": null}}, "url": "https://github.com/eclipse/rdf4j/commit/5b9e8b268f76d0079bef9e5bda0cdc29e0e5e31e", "committedDate": "2020-05-16T07:16:42Z", "message": "GH-2211 add more latches and loop to reduce chance of flaky failure\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDU1MzQ4", "url": "https://github.com/eclipse/rdf4j/pull/2228#pullrequestreview-413055348", "createdAt": "2020-05-16T07:18:01Z", "commit": {"oid": "5b9e8b268f76d0079bef9e5bda0cdc29e0e5e31e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwNzoxODowMVrOGWYxrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwNzoxODowMVrOGWYxrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyNzc4OQ==", "bodyText": "This latching here should help reduce the chance of this one thread getting executed first.", "url": "https://github.com/eclipse/rdf4j/pull/2228#discussion_r426127789", "createdAt": "2020-05-16T07:18:01Z", "author": {"login": "hmottestad"}, "path": "core/model/src/test/java/org/eclipse/rdf4j/model/DynamicModelConcurrentModificationAndUpgradeTest.java", "diffHunk": "@@ -75,20 +91,23 @@ public boolean contains(Object o) {\n \t\t\t\t\t\t\t@Override\n \t\t\t\t\t\t\tpublic boolean hasNext() {\n \t\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\t\tcountDownLatch.await();\n+\t\t\t\t\t\t\t\t\tcountDownLatch1.countDown();\n+\t\t\t\t\t\t\t\t\tcountDownLatch2.await();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b9e8b268f76d0079bef9e5bda0cdc29e0e5e31e"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDU1MzYy", "url": "https://github.com/eclipse/rdf4j/pull/2228#pullrequestreview-413055362", "createdAt": "2020-05-16T07:18:15Z", "commit": {"oid": "5b9e8b268f76d0079bef9e5bda0cdc29e0e5e31e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwNzoxODoxNVrOGWYxwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwNzoxODoxNVrOGWYxwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyNzgxMA==", "bodyText": "and here is the count down for that latch", "url": "https://github.com/eclipse/rdf4j/pull/2228#discussion_r426127810", "createdAt": "2020-05-16T07:18:15Z", "author": {"login": "hmottestad"}, "path": "core/model/src/test/java/org/eclipse/rdf4j/model/DynamicModelConcurrentModificationAndUpgradeTest.java", "diffHunk": "@@ -145,8 +164,13 @@ public void clear() {\n \t\t};\n \n \t\tRunnable upgrade = () -> {\n+\t\t\ttry {\n+\t\t\t\tcountDownLatch1.await();\n+\t\t\t} catch (InterruptedException e) {\n+\t\t\t\te.printStackTrace();\n+\t\t\t}\n \t\t\tmodel.filter(null, RDF.TYPE, null);\n-\t\t\tcountDownLatch.countDown();\n+\t\t\tcountDownLatch2.countDown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b9e8b268f76d0079bef9e5bda0cdc29e0e5e31e"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 154, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}