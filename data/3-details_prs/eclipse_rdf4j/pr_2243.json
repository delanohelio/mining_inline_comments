{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMDg1MzYy", "number": 2243, "title": "GH-1301 control connective operator precedence", "bodyText": "GitHub issue resolved: #1301  \nBriefly describe the changes proposed in this PR:\nUsed parenthesize function in case of AND operator by calling it in the Operation method present in sparqlbuilder/constraint/Operation.java file.\n\n\nPR Author Checklist:\n\n my pull request is self-contained\n I've added tests for the changes I made\n every commit message starts with the issue number (GH-xxxx) followed by a meaningful description of the change\n every commit has been signed off\n\nNote: we merge all feature pull requests using squash and merge. See RDF4J git merge strategy for more details.", "createdAt": "2020-05-19T12:25:34Z", "url": "https://github.com/eclipse/rdf4j/pull/2243", "merged": true, "mergeCommit": {"oid": "38feb258609c4745a45e19f642c1c26e72776949"}, "closed": true, "closedAt": "2020-05-26T09:08:23Z", "author": {"login": "abhishekag03"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcizG0lgH2gAyNDIwMDg1MzYyOjY3NGE3ZGEzYzM0ODI1NzM2YWIxM2QzZTEwNGNkNWEyYTA0NWIyYjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclA9GWgFqTQxODEwOTM5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "674a7da3c34825736ab13d3e104cd5a2a045b2b5", "author": {"user": {"login": "abhishekag03", "name": "Abhishek Agarwal"}}, "url": "https://github.com/eclipse/rdf4j/commit/674a7da3c34825736ab13d3e104cd5a2a045b2b5", "committedDate": "2020-05-19T11:52:07Z", "message": "GH-1301 Fixed AND/OR precedence\n\nSigned-off-by: abhishekag03 <abhishek16126@iiitd.ac.in>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1efe9a1d6accba6db4d94bb80bf111ca7f6aace", "author": {"user": {"login": "Kvatsx", "name": "Kaustav Vats"}}, "url": "https://github.com/eclipse/rdf4j/commit/b1efe9a1d6accba6db4d94bb80bf111ca7f6aace", "committedDate": "2020-05-19T12:16:57Z", "message": "GH-1301 Fixed AND/OR precedence\n\nSigned-off-by: kaustavvats <kaustav16048@iiitd.ac.in>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MTU1MDk4", "url": "https://github.com/eclipse/rdf4j/pull/2243#pullrequestreview-417155098", "createdAt": "2020-05-22T19:55:42Z", "commit": {"oid": "b1efe9a1d6accba6db4d94bb80bf111ca7f6aace"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTo1NTo0MlrOGZiUOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTo1NTo0MlrOGZiUOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyOTgxOA==", "bodyText": "Using toString() and then .equals() is typically very slow. Try to use the enums instead: ConnectiveOperator.AND", "url": "https://github.com/eclipse/rdf4j/pull/2243#discussion_r429429818", "createdAt": "2020-05-22T19:55:42Z", "author": {"login": "hmottestad"}, "path": "core/sparqlbuilder/src/main/java/org/eclipse/rdf4j/sparqlbuilder/constraint/Operation.java", "diffHunk": "@@ -23,7 +23,9 @@\n \tOperation(SparqlOperator operator, int operandLimit) {\n \t\tsuper(operator);\n \t\tthis.operandLimit = operandLimit;\n-//\t\tparenthesize();\n+\t\tif (operator.toString().equals(\"AND\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1efe9a1d6accba6db4d94bb80bf111ca7f6aace"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MTU3MjUz", "url": "https://github.com/eclipse/rdf4j/pull/2243#pullrequestreview-417157253", "createdAt": "2020-05-22T20:01:32Z", "commit": {"oid": "b1efe9a1d6accba6db4d94bb80bf111ca7f6aace"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMDowMTozNFrOGZiacw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMDowMTozNFrOGZiacw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQzMTQxMQ==", "bodyText": "I don't see how this tests actually checks if the changes you've made are correct. The test still passes even if I comment out your change.", "url": "https://github.com/eclipse/rdf4j/pull/2243#discussion_r429431411", "createdAt": "2020-05-22T20:01:34Z", "author": {"login": "hmottestad"}, "path": "core/sparqlbuilder/src/test/java/org/eclipse/rdf4j/sparqlbuilder/examples/sparql11spec/Section6Test.java", "diffHunk": "@@ -61,4 +61,19 @@ public void example_6_3() {\n \t\t\t\t\t\tGraphPatterns.and(x.has(foaf.iri(\"homepage\"), hpage)).optional());\n \t\tp();\n \t}\n+\n+\t@Test\n+\tpublic void example_6_4() {\n+\t\tPrefix dc = SparqlBuilder.prefix(\"dc\", iri(DC_NS)), ns = SparqlBuilder.prefix(\"ns\", iri(EXAMPLE_ORG_NS));\n+\t\tVariable title = SparqlBuilder.var(\"title\"), price = SparqlBuilder.var(\"price\"), x = SparqlBuilder.var(\"x\");\n+\n+\t\tGraphPatternNotTriples pricePattern = GraphPatterns.and(x.has(ns.iri(\"price\"), price))\n+\t\t\t\t.filter(Expressions.or(Expressions.lt(price, 20),\n+\t\t\t\t\t\tExpressions.and(Expressions.lt(price, 50), Expressions.gt(price, 30))))\n+\t\t\t\t.optional();\n+\n+\t\tquery.prefix(dc, ns).select(title, price).where(x.has(dc.iri(\"title\"), title), pricePattern);\n+\t\tp();\n+\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1efe9a1d6accba6db4d94bb80bf111ca7f6aace"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bdf0b2530e301734010b28f20f1cab20aa85446", "author": {"user": {"login": "ishaanbassi", "name": "Ishaan Bassi"}}, "url": "https://github.com/eclipse/rdf4j/commit/5bdf0b2530e301734010b28f20f1cab20aa85446", "committedDate": "2020-05-23T11:10:47Z", "message": "GH-1301 Comparison for AND operator optimized\n\nSigned-off-by: ishaanbassi <ishaan16238@iiitd.ac.in>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c576d190c1f4c4ca12c5871f39f6d3807268ecb0", "author": {"user": {"login": "abhishekag03", "name": "Abhishek Agarwal"}}, "url": "https://github.com/eclipse/rdf4j/commit/c576d190c1f4c4ca12c5871f39f6d3807268ecb0", "committedDate": "2020-05-23T11:43:27Z", "message": "GH-1301 Added assert in test cases, added test case\n\nSigned-off-by: abhishekag03 <abhishek16126@iiitd.ac.in>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b5a82839ac78370aa50bf311b169e482f59f9bd", "author": {"user": {"login": "Kvatsx", "name": "Kaustav Vats"}}, "url": "https://github.com/eclipse/rdf4j/commit/8b5a82839ac78370aa50bf311b169e482f59f9bd", "committedDate": "2020-05-23T11:52:57Z", "message": "GH-1301 Fixed Formatting, Final Commit\n\nSigned-off-by: Kaustav Vats <kaustav16048@iiitd.ac.in>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3Mjc3MDkz", "url": "https://github.com/eclipse/rdf4j/pull/2243#pullrequestreview-417277093", "createdAt": "2020-05-23T12:58:42Z", "commit": {"oid": "c576d190c1f4c4ca12c5871f39f6d3807268ecb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxMjo1ODo0MlrOGZpShg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxMjo1ODo0MlrOGZpShg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU0NDA3MA==", "bodyText": "We noticed that the Paranthesize function needs to be called for the OR operator as well. This is because for queries which have an OR inside an AND, the query output is not how it should be. It does not take into consideration that the OR part must be evaluated first.\nHowever, calling the Paranthesize function as we have done here is giving us extra parenthesis inside the filter query whenever we have boolean binary operators (AND/OR). Is that fine? If not, kindly help us with how we should remove it. Although considering it evaluation wise, it will always give the correct output. Just that the brackets there are not essential.", "url": "https://github.com/eclipse/rdf4j/pull/2243#discussion_r429544070", "createdAt": "2020-05-23T12:58:42Z", "author": {"login": "abhishekag03"}, "path": "core/sparqlbuilder/src/main/java/org/eclipse/rdf4j/sparqlbuilder/constraint/Operation.java", "diffHunk": "@@ -23,7 +23,7 @@\n \tOperation(SparqlOperator operator, int operandLimit) {\n \t\tsuper(operator);\n \t\tthis.operandLimit = operandLimit;\n-\t\tif (operator == ConnectiveOperator.AND) {\n+\t\tif (operator == ConnectiveOperator.AND || operator == ConnectiveOperator.OR) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c576d190c1f4c4ca12c5871f39f6d3807268ecb0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9398cdb846352254644840e29e5955d45e7beab", "author": {"user": {"login": "abhishekag03", "name": "Abhishek Agarwal"}}, "url": "https://github.com/eclipse/rdf4j/commit/f9398cdb846352254644840e29e5955d45e7beab", "committedDate": "2020-05-23T17:40:05Z", "message": "GH-1301 Added precedence order for all connective operators with test case\n\nSigned-off-by: abhishekag03 <abhishek16126@iiitd.ac.in>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "025718e8f663a000fb538239f6ccb19a082724d6", "author": {"user": {"login": "abhishekag03", "name": "Abhishek Agarwal"}}, "url": "https://github.com/eclipse/rdf4j/commit/025718e8f663a000fb538239f6ccb19a082724d6", "committedDate": "2020-05-23T17:42:09Z", "message": "Merge branch 'GH-1301-control-and-or-precedence' of https://github.com/abhishekag03/rdf4j into GH-1301-control-and-or-precedence"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82d5edcbc58df12d937fb80270b8e9d5ed02c558", "author": {"user": {"login": "ishaanbassi", "name": "Ishaan Bassi"}}, "url": "https://github.com/eclipse/rdf4j/commit/82d5edcbc58df12d937fb80270b8e9d5ed02c558", "committedDate": "2020-05-23T17:53:24Z", "message": "GH-1301 Added testcase for remaining connective operators\n\nSigned-off-by: ishaanbassi <ishaan16238@iiitd.ac.in>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3Mjk3MzA1", "url": "https://github.com/eclipse/rdf4j/pull/2243#pullrequestreview-417297305", "createdAt": "2020-05-23T18:08:12Z", "commit": {"oid": "82d5edcbc58df12d937fb80270b8e9d5ed02c558"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxODowODoxMlrOGZqpoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxODowODoxMlrOGZqpoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NjM2OA==", "bodyText": "20-2*5 == 20-(2*5)\nCould you instead test for (20-2)*5 since this is different from 20-2*5?", "url": "https://github.com/eclipse/rdf4j/pull/2243#discussion_r429566368", "createdAt": "2020-05-23T18:08:12Z", "author": {"login": "hmottestad"}, "path": "core/sparqlbuilder/src/test/java/org/eclipse/rdf4j/sparqlbuilder/examples/sparql11spec/Section6Test.java", "diffHunk": "@@ -61,4 +64,65 @@ public void example_6_3() {\n \t\t\t\t\t\tGraphPatterns.and(x.has(foaf.iri(\"homepage\"), hpage)).optional());\n \t\tp();\n \t}\n+\n+\t@Test\n+\tpublic void example_6_4() {\n+\t\tPrefix dc = SparqlBuilder.prefix(\"dc\", iri(DC_NS)), ns = SparqlBuilder.prefix(\"ns\", iri(EXAMPLE_ORG_NS));\n+\t\tVariable title = SparqlBuilder.var(\"title\"), price = SparqlBuilder.var(\"price\"), x = SparqlBuilder.var(\"x\");\n+\n+\t\tGraphPatternNotTriples pricePattern = GraphPatterns.and(x.has(ns.iri(\"price\"), price))\n+\t\t\t\t.filter(Expressions.or(Expressions.lt(price, 20),\n+\t\t\t\t\t\tExpressions.and(Expressions.lt(price, 50), Expressions.gt(price, 30))))\n+\t\t\t\t.optional();\n+\n+\t\tquery.prefix(dc, ns).select(title, price).where(x.has(dc.iri(\"title\"), title), pricePattern);\n+\t\tAssert.assertThat(query.getQueryString(), CoreMatchers.containsString(\"( ?price < 50 && ?price > 30 )\"));\n+\t}\n+\n+\t@Test\n+\tpublic void example_6_5() {\n+\t\tPrefix dc = SparqlBuilder.prefix(\"dc\", iri(DC_NS)), ns = SparqlBuilder.prefix(\"ns\", iri(EXAMPLE_ORG_NS));\n+\t\tVariable title = SparqlBuilder.var(\"title\"), price = SparqlBuilder.var(\"price\"), x = SparqlBuilder.var(\"x\");\n+\n+\t\tGraphPatternNotTriples pricePattern = GraphPatterns.and(x.has(ns.iri(\"price\"), price))\n+\t\t\t\t.filter(Expressions.or(Expressions.lt(price, 20),\n+\t\t\t\t\t\tExpressions.and(Expressions.gt(price, 50),\n+\t\t\t\t\t\t\t\tExpressions.or(Expressions.gt(price, 60), Expressions.lt(price, 70)))))\n+\t\t\t\t.optional();\n+\n+\t\tquery.prefix(dc, ns).select(title, price).where(x.has(dc.iri(\"title\"), title), pricePattern);\n+\t\tAssert.assertThat(query.getQueryString(), CoreMatchers.containsString(\"( ?price < 20 || ( ?price > 50 &&\" +\n+\t\t\t\t\" ( ?price > 60 || ?price < 70 ) ) )\"));\n+\t}\n+\n+\t@Test\n+\tpublic void example_6_6() {\n+\t\tPrefix dc = SparqlBuilder.prefix(\"dc\", iri(DC_NS)), ns = SparqlBuilder.prefix(\"ns\", iri(EXAMPLE_ORG_NS));\n+\t\tVariable title = SparqlBuilder.var(\"title\"), price = SparqlBuilder.var(\"price\"), x = SparqlBuilder.var(\"x\");\n+\n+\t\tGraphPatternNotTriples pricePattern = GraphPatterns.and(x.has(ns.iri(\"price\"), price))\n+\t\t\t\t.filter(Expressions.or(Expressions.lt(price, Expressions.subtract(Rdf.literalOf(20),\n+\t\t\t\t\t\tExpressions.multiply(Rdf.literalOf(2), Rdf.literalOf(5)))),\n+\t\t\t\t\t\tExpressions.lt(price, 50)))\n+\t\t\t\t.optional();\n+\n+\t\tquery.prefix(dc, ns).select(title, price).where(x.has(dc.iri(\"title\"), title), pricePattern);\n+\t\tAssert.assertThat(query.getQueryString(), CoreMatchers.containsString(\"( 20 - ( 2 * 5 ) )\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d5edcbc58df12d937fb80270b8e9d5ed02c558"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87f6241e36ddae533ebef125410ddfc7d72cbcea", "author": {"user": {"login": "Kvatsx", "name": "Kaustav Vats"}}, "url": "https://github.com/eclipse/rdf4j/commit/87f6241e36ddae533ebef125410ddfc7d72cbcea", "committedDate": "2020-05-23T18:26:36Z", "message": "GH-1301 Added one more testcase\n\nSigned-off-by: Kaustav Vats <kaustav16048@iiitd.ac.in>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef1ec75e96946495b0ed5ff250cad8153cf25f5e", "author": {"user": {"login": "ishaanbassi", "name": "Ishaan Bassi"}}, "url": "https://github.com/eclipse/rdf4j/commit/ef1ec75e96946495b0ed5ff250cad8153cf25f5e", "committedDate": "2020-05-24T12:31:26Z", "message": "GH-1301 Added test cases to ExpressionsTest\n\nSigned-off-by: ishaanbassi <ishaan16238@iiitd.ac.in>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8267e3bf74c8182d95e1eef55f86242a32a95774", "author": {"user": {"login": "Kvatsx", "name": "Kaustav Vats"}}, "url": "https://github.com/eclipse/rdf4j/commit/8267e3bf74c8182d95e1eef55f86242a32a95774", "committedDate": "2020-05-24T12:54:49Z", "message": "GH-1301 created SparqlBuilderTest file, removed testcases from Section6Test file\n\nSigned-off-by: kaustavvats <kaustav16048@iiitd.ac.in>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec78d8c2b07c4dd4b63b01bf299a36d1e4a17585", "author": {"user": {"login": "abhishekag03", "name": "Abhishek Agarwal"}}, "url": "https://github.com/eclipse/rdf4j/commit/ec78d8c2b07c4dd4b63b01bf299a36d1e4a17585", "committedDate": "2020-05-24T13:29:54Z", "message": "GH-1301 added logical arithemetic test case. Minor fixes in previous commits.\n\nSigned-off-by: abhishekag03 <abhishek16126@iiitd.ac.in>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDI4ODg1", "url": "https://github.com/eclipse/rdf4j/pull/2243#pullrequestreview-417428885", "createdAt": "2020-05-25T02:36:38Z", "commit": {"oid": "ec78d8c2b07c4dd4b63b01bf299a36d1e4a17585"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMjozNjozOFrOGZzYwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMjo0MToyNlrOGZzb7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwOTUwNg==", "bodyText": "Looks like your editor forgot to substitute ${year} with 2020 :)", "url": "https://github.com/eclipse/rdf4j/pull/2243#discussion_r429709506", "createdAt": "2020-05-25T02:36:38Z", "author": {"login": "jeenbroekstra"}, "path": "core/sparqlbuilder/src/test/java/org/eclipse/rdf4j/sparqlbuilder/core/SparqlBuilderTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*******************************************************************************\n+ * Copyright (c) ${year} Eclipse RDF4J contributors.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec78d8c2b07c4dd4b63b01bf299a36d1e4a17585"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwOTgyNQ==", "bodyText": "We actually prefer using AssertJ rather than Hamcrest, but no big deal, you can leave as-is.", "url": "https://github.com/eclipse/rdf4j/pull/2243#discussion_r429709825", "createdAt": "2020-05-25T02:38:23Z", "author": {"login": "jeenbroekstra"}, "path": "core/sparqlbuilder/src/test/java/org/eclipse/rdf4j/sparqlbuilder/core/SparqlBuilderTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*******************************************************************************\n+ * Copyright (c) ${year} Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sparqlbuilder.core;\n+\n+import static org.eclipse.rdf4j.sparqlbuilder.rdf.Rdf.iri;\n+\n+import org.eclipse.rdf4j.model.vocabulary.DC;\n+import org.eclipse.rdf4j.sparqlbuilder.constraint.Expressions;\n+import org.eclipse.rdf4j.sparqlbuilder.core.query.Queries;\n+import org.eclipse.rdf4j.sparqlbuilder.core.query.SelectQuery;\n+import org.eclipse.rdf4j.sparqlbuilder.graphpattern.GraphPatternNotTriples;\n+import org.eclipse.rdf4j.sparqlbuilder.graphpattern.GraphPatterns;\n+import org.eclipse.rdf4j.sparqlbuilder.rdf.Rdf;\n+import org.hamcrest.CoreMatchers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec78d8c2b07c4dd4b63b01bf299a36d1e4a17585"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcxMDMxOQ==", "bodyText": "Could you remove the System.out.println ? Just so there is less output to scroll through when running these tests.", "url": "https://github.com/eclipse/rdf4j/pull/2243#discussion_r429710319", "createdAt": "2020-05-25T02:41:26Z", "author": {"login": "jeenbroekstra"}, "path": "core/sparqlbuilder/src/test/java/org/eclipse/rdf4j/sparqlbuilder/core/SparqlBuilderTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*******************************************************************************\n+ * Copyright (c) ${year} Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sparqlbuilder.core;\n+\n+import static org.eclipse.rdf4j.sparqlbuilder.rdf.Rdf.iri;\n+\n+import org.eclipse.rdf4j.model.vocabulary.DC;\n+import org.eclipse.rdf4j.sparqlbuilder.constraint.Expressions;\n+import org.eclipse.rdf4j.sparqlbuilder.core.query.Queries;\n+import org.eclipse.rdf4j.sparqlbuilder.core.query.SelectQuery;\n+import org.eclipse.rdf4j.sparqlbuilder.graphpattern.GraphPatternNotTriples;\n+import org.eclipse.rdf4j.sparqlbuilder.graphpattern.GraphPatterns;\n+import org.eclipse.rdf4j.sparqlbuilder.rdf.Rdf;\n+import org.hamcrest.CoreMatchers;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+/**\n+ * Tests for precedence order of all operators in SPARQL builder Queries.\n+ */\n+public class SparqlBuilderTest {\n+\n+\tprotected SelectQuery query;\n+\tprotected static final String EXAMPLE_ORG_NS = \"https://example.org/ns#\";\n+\tprotected static final String DC_NS = DC.NAMESPACE;\n+\n+\t@Before\n+\tpublic void before() {\n+\t\tquery = Queries.SELECT();\n+\t}\n+\n+\t@Test\n+\tpublic void testLogicalOperatorPrecedence1() {\n+\t\tPrefix dc = SparqlBuilder.prefix(\"dc\", iri(DC_NS)), ns = SparqlBuilder.prefix(\"ns\", iri(EXAMPLE_ORG_NS));\n+\t\tVariable title = SparqlBuilder.var(\"title\"), price = SparqlBuilder.var(\"price\"), x = SparqlBuilder.var(\"x\");\n+\n+\t\tGraphPatternNotTriples pricePattern = GraphPatterns.and(x.has(ns.iri(\"price\"), price))\n+\t\t\t\t.filter(Expressions.or(Expressions.lt(price, Rdf.literalOf(20)),\n+\t\t\t\t\t\tExpressions.and(Expressions.lt(price, Rdf.literalOf(50)),\n+\t\t\t\t\t\t\t\tExpressions.gt(price, Rdf.literalOf(30)))))\n+\t\t\t\t.optional();\n+\t\tSystem.out.println(query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec78d8c2b07c4dd4b63b01bf299a36d1e4a17585"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b87bbe17032f7159e87d72336919382cbdd697f", "author": {"user": {"login": "abhishekag03", "name": "Abhishek Agarwal"}}, "url": "https://github.com/eclipse/rdf4j/commit/5b87bbe17032f7159e87d72336919382cbdd697f", "committedDate": "2020-05-25T06:31:00Z", "message": "Minor fixes. Connective operator precedence done\n\nSigned-off-by: abhishekag03 <abhishek16126@iiitd.ac.in>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MTA5Mzk0", "url": "https://github.com/eclipse/rdf4j/pull/2243#pullrequestreview-418109394", "createdAt": "2020-05-26T09:08:01Z", "commit": {"oid": "5b87bbe17032f7159e87d72336919382cbdd697f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 160, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}