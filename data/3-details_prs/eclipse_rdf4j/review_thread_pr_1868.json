{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1OTY1MjM4", "number": 1868, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMTozODoxNVrODZ-_2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzo0NTo0OVrODcGMNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTczMTQ2OnYy", "diffSide": "RIGHT", "path": "compliance/elasticsearch/src/test/java/org/eclipse/rdf4j/sail/elasticsearch/ElasticsearchIndexTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMTozODoxNVrOFgr3rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjoxMjo1OFrOFg8ECQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxNzUxOQ==", "bodyText": "Bit of a nitpick but we discourage wildcard imports - I suspect your IDE's code cleanup is being over-eager. Could you tweak it to not use wildcards (or at least until you hit, say, 99 entries :))?", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r369817519", "createdAt": "2020-01-22T21:38:15Z", "author": {"login": "jeenbroekstra"}, "path": "compliance/elasticsearch/src/test/java/org/eclipse/rdf4j/sail/elasticsearch/ElasticsearchIndexTest.java", "diffHunk": "@@ -17,11 +17,7 @@\n import java.util.Properties;\n import java.util.Set;\n \n-import org.eclipse.rdf4j.model.IRI;\n-import org.eclipse.rdf4j.model.Literal;\n-import org.eclipse.rdf4j.model.Resource;\n-import org.eclipse.rdf4j.model.Statement;\n-import org.eclipse.rdf4j.model.ValueFactory;\n+import org.eclipse.rdf4j.model.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1184874dea9d91efdf4b299029798aaddd00e2d3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA4MjgyNQ==", "bodyText": "Ok, I'll see what I can do about that :)", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r370082825", "createdAt": "2020-01-23T12:12:58Z", "author": {"login": "avataar"}, "path": "compliance/elasticsearch/src/test/java/org/eclipse/rdf4j/sail/elasticsearch/ElasticsearchIndexTest.java", "diffHunk": "@@ -17,11 +17,7 @@\n import java.util.Properties;\n import java.util.Set;\n \n-import org.eclipse.rdf4j.model.IRI;\n-import org.eclipse.rdf4j.model.Literal;\n-import org.eclipse.rdf4j.model.Resource;\n-import org.eclipse.rdf4j.model.Statement;\n-import org.eclipse.rdf4j.model.ValueFactory;\n+import org.eclipse.rdf4j.model.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxNzUxOQ=="}, "originalCommit": {"oid": "1184874dea9d91efdf4b299029798aaddd00e2d3"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTczNzcwOnYy", "diffSide": "RIGHT", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/SubjectValue.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMTo0MDoyMlrOFgr7bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjoxNToxNlrOFg8H8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxODQ3OQ==", "bodyText": "This header doesn't look quite right, we use this format:\n/*******************************************************************************\n * Copyright (c) ${year} Eclipse RDF4J contributors.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Distribution License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/org/documents/edl-v10.php.\n *******************************************************************************/", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r369818479", "createdAt": "2020-01-22T21:40:22Z", "author": {"login": "jeenbroekstra"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/SubjectValue.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1184874dea9d91efdf4b299029798aaddd00e2d3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA4MzgyNg==", "bodyText": "Again I guess my IDE was trying to be smarter.", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r370083826", "createdAt": "2020-01-23T12:15:16Z", "author": {"login": "avataar"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/SubjectValue.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxODQ3OQ=="}, "originalCommit": {"oid": "1184874dea9d91efdf4b299029798aaddd00e2d3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTgwNDE5OnYy", "diffSide": "RIGHT", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/LinkedHashModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjowMzo1N1rOFgslBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjoxNzo1OVrOFg8MdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgyOTEyNw==", "bodyText": "This worries me from an end-user perspective. An awful lot of user code will rely on the result of getSubject() being a Resource. So this will require a lot of refactoring for anyone hoping to bump RDF4J to this version.\nWould an alternative be that we get rid of SubjectValue altogether, and just make Triple extend Resource?", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r369829127", "createdAt": "2020-01-22T22:03:57Z", "author": {"login": "jeenbroekstra"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/LinkedHashModel.java", "diffHunk": "@@ -511,7 +506,7 @@ private ModelIterator matchPattern(Resource subj, IRI pred, Value obj, Resource.\n \t}\n \n \tprivate Iterator<ModelStatement> find(Statement st) {\n-\t\tResource subj = st.getSubject();\n+\t\tSubjectValue subj = st.getSubject();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1184874dea9d91efdf4b299029798aaddd00e2d3"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA4NDk4MA==", "bodyText": "Triple extends Resource sounds very tempting at first but it will break the model by allowing Triple in the context position, which isn't something RDF* allows. I do realise the proposed changes will break code for some users but the breaking changes are minimal.", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r370084980", "createdAt": "2020-01-23T12:17:59Z", "author": {"login": "avataar"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/LinkedHashModel.java", "diffHunk": "@@ -511,7 +506,7 @@ private ModelIterator matchPattern(Resource subj, IRI pred, Value obj, Resource.\n \t}\n \n \tprivate Iterator<ModelStatement> find(Statement st) {\n-\t\tResource subj = st.getSubject();\n+\t\tSubjectValue subj = st.getSubject();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgyOTEyNw=="}, "originalCommit": {"oid": "1184874dea9d91efdf4b299029798aaddd00e2d3"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzg2MTc0OnYy", "diffSide": "RIGHT", "path": "bom/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzozNToxNlrOFj9aQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzozNToxNlrOFj9aQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MDYyNg==", "bodyText": "\"trigstar\" - sounds like something out of a Douglas Adams novel.", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373250626", "createdAt": "2020-01-30T23:35:16Z", "author": {"login": "jeenbroekstra"}, "path": "bom/pom.xml", "diffHunk": "@@ -188,6 +188,11 @@\n \t\t\t\t<artifactId>rdf4j-rio-trig</artifactId>\n \t\t\t\t<version>${project.version}</version>\n \t\t\t</dependency>\n+\t\t\t<dependency>\n+\t\t\t\t<groupId>org.eclipse.rdf4j</groupId>\n+\t\t\t\t<artifactId>rdf4j-rio-trigstar</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzg2MzY4OnYy", "diffSide": "RIGHT", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/Triple.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzozNjoxNVrOFj9bXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzozNjoxNVrOFj9bXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MDkwOQ==", "bodyText": "Minor typo: the @ in front of {@link Statement}.", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373250909", "createdAt": "2020-01-30T23:36:15Z", "author": {"login": "jeenbroekstra"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/Triple.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors, Aduna, and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.model;\n+\n+/**\n+ * An RDF* triple. Triples have a subject, predicate and object. Unlike @{@link Statement}, a triple never has an", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzg2NjgyOnYy", "diffSide": "RIGHT", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzozNzoyNFrOFj9dHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzozNzoyNFrOFj9dHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MTM1OA==", "bodyText": "Let's explicitly say that this is an RDF* triple here as well, just to make it as clear as possible that it's different from Statement.", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373251358", "createdAt": "2020-01-30T23:37:24Z", "author": {"login": "jeenbroekstra"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java", "diffHunk": "@@ -258,4 +258,14 @@ public default Statement createStatement(Resource subject, URI predicate, Value\n \tpublic default Statement createStatement(Resource subject, URI predicate, Value object, Resource context) {\n \t\treturn createStatement(subject, (IRI) predicate, object, context);\n \t}\n+\n+\t/**\n+\t * Creates a new triple with the supplied subject, predicate and object.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzg3MDcxOnYy", "diffSide": "RIGHT", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzozOTozM1rOFj9fYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyMTozMVrOFkYSag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MTkzNw==", "bodyText": "Let's make this a default method with the same impl as you currently have in AbstractValueFactory (I'd also leave that one in place, even though it doesn't do anything different) - that way this is backward compatible even for people who implement ValueFactory without using the abstract class.", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373251937", "createdAt": "2020-01-30T23:39:33Z", "author": {"login": "jeenbroekstra"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java", "diffHunk": "@@ -258,4 +258,14 @@ public default Statement createStatement(Resource subject, URI predicate, Value\n \tpublic default Statement createStatement(Resource subject, URI predicate, Value object, Resource context) {\n \t\treturn createStatement(subject, (IRI) predicate, object, context);\n \t}\n+\n+\t/**\n+\t * Creates a new triple with the supplied subject, predicate and object.\n+\t *\n+\t * @param subject   The statement's subject.\n+\t * @param predicate The statement's predicate.\n+\t * @param object    The statement's object.\n+\t * @return The created triple.\n+\t */\n+\tTriple createTriple(Resource subject, IRI predicate, Value object);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwNzMyNw==", "bodyText": "Let's make this a default method with the same impl as you currently have in AbstractValueFactory (I'd also leave that one in place, even though it doesn't do anything different) - that way this is backward compatible even for people who implement ValueFactory without using the abstract class.\n\nThat change would make the only SimpleXXX class that has a public constructor because it's in a different package. If you are ok with that I'll do it.", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373607327", "createdAt": "2020-01-31T17:56:37Z", "author": {"login": "avataar"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java", "diffHunk": "@@ -258,4 +258,14 @@ public default Statement createStatement(Resource subject, URI predicate, Value\n \tpublic default Statement createStatement(Resource subject, URI predicate, Value object, Resource context) {\n \t\treturn createStatement(subject, (IRI) predicate, object, context);\n \t}\n+\n+\t/**\n+\t * Creates a new triple with the supplied subject, predicate and object.\n+\t *\n+\t * @param subject   The statement's subject.\n+\t * @param predicate The statement's predicate.\n+\t * @param object    The statement's object.\n+\t * @return The created triple.\n+\t */\n+\tTriple createTriple(Resource subject, IRI predicate, Value object);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MTkzNw=="}, "originalCommit": {"oid": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MDk4Ng==", "bodyText": "Drat, forgot about that. Never mind then, leave as is.", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373690986", "createdAt": "2020-01-31T21:21:31Z", "author": {"login": "jeenbroekstra"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java", "diffHunk": "@@ -258,4 +258,14 @@ public default Statement createStatement(Resource subject, URI predicate, Value\n \tpublic default Statement createStatement(Resource subject, URI predicate, Value object, Resource context) {\n \t\treturn createStatement(subject, (IRI) predicate, object, context);\n \t}\n+\n+\t/**\n+\t * Creates a new triple with the supplied subject, predicate and object.\n+\t *\n+\t * @param subject   The statement's subject.\n+\t * @param predicate The statement's predicate.\n+\t * @param object    The statement's object.\n+\t * @return The created triple.\n+\t */\n+\tTriple createTriple(Resource subject, IRI predicate, Value object);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MTkzNw=="}, "originalCommit": {"oid": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzg3MjMyOnYy", "diffSide": "RIGHT", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleTriple.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzo0MDozOFrOFj9gag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzo0MDozOFrOFj9gag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MjIwMg==", "bodyText": "Editorial nitpick: we encourage always using curly braces for if statements, even if they're oneliners.", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373252202", "createdAt": "2020-01-30T23:40:38Z", "author": {"login": "jeenbroekstra"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleTriple.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors, Aduna, and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.model.impl;\n+\n+import org.eclipse.rdf4j.model.IRI;\n+import org.eclipse.rdf4j.model.Resource;\n+import org.eclipse.rdf4j.model.Triple;\n+import org.eclipse.rdf4j.model.Value;\n+\n+import java.util.Objects;\n+\n+/**\n+ * A simple default implementation of the {@link Triple} interface.\n+ *\n+ * @author Pavel Mihaylov\n+ * @see SimpleValueFactory\n+ */\n+public class SimpleTriple implements Triple {\n+\n+\t/**\n+\t * The triple's subject.\n+\t */\n+\tprivate Resource subject;\n+\n+\t/**\n+\t * The triple's predicate.\n+\t */\n+\tprivate IRI predicate;\n+\n+\t/**\n+\t * The triple's object.\n+\t */\n+\tprivate Value object;\n+\n+\t/**\n+\t * Creates a new Triple with the supplied subject, predicate and object.\n+\t * <p>\n+\t * Note that creating SimpleStatement objects directly via this constructor is not the recommended approach.\n+\t * Instead, use an instance of {@link org.eclipse.rdf4j.model.ValueFactory} to create new Triple objects.\n+\t *\n+\t * @param subject   The triple's subject, must not be <tt>null</tt>.\n+\t * @param predicate The triple's predicate, must not be <tt>null</tt>.\n+\t * @param object    The triple's object, must not be <tt>null</tt>.\n+\t * @see {@link SimpleValueFactory#createTriple(Resource, IRI, Value)\n+\t */\n+\tprotected SimpleTriple(Resource subject, IRI predicate, Value object) {\n+\t\tthis.subject = Objects.requireNonNull(subject, \"subject must not be null\");\n+\t\tthis.predicate = Objects.requireNonNull(predicate, \"predicate must not be null\");\n+\t\tthis.object = Objects.requireNonNull(object, \"object must not be null\");\n+\t}\n+\n+\t@Override\n+\tpublic Resource getSubject() {\n+\t\treturn subject;\n+\t}\n+\n+\t@Override\n+\tpublic IRI getPredicate() {\n+\t\treturn predicate;\n+\t}\n+\n+\t@Override\n+\tpublic Value getObject() {\n+\t\treturn object;\n+\t}\n+\n+\t@Override\n+\tpublic String stringValue() {\n+\t\tStringBuilder sb = new StringBuilder(256);\n+\n+\t\tsb.append(\"<<\");\n+\t\tsb.append(getSubject());\n+\t\tsb.append(\" \");\n+\t\tsb.append(getPredicate());\n+\t\tsb.append(\" \");\n+\t\tsb.append(getObject());\n+\t\tsb.append(\">>\");\n+\n+\t\treturn sb.toString();\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn stringValue();\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(Object o) {\n+\t\tif (this == o)\n+\t\t\treturn true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzg4MTUxOnYy", "diffSide": "RIGHT", "path": "core/rio/trigstar/src/main/java/org/eclipse/rdf4j/rio/trigstar/TriGStarParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzo0NTo0OVrOFj9mHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzo0NTo0OVrOFj9mHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MzY2Mw==", "bodyText": "This is not the correct copyright header, I'm afraid.  This variant that mentions \"Aduna\" is one that is only used for legacy code that came from the Sesame project (so you may have inadvertently copied it from an old class). All new code should  just read Copyright (c) 2020 Eclipse RDF4J contributors. on the first line.\nYou've got this in a couple of new classes, unfortunately. See https://github.com/eclipse/rdf4j/blob/master/.github/CONTRIBUTING.md#code-formatting for details.", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373253663", "createdAt": "2020-01-30T23:45:49Z", "author": {"login": "jeenbroekstra"}, "path": "core/rio/trigstar/src/main/java/org/eclipse/rdf4j/rio/trigstar/TriGStarParser.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors, Aduna, and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1631, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}