{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwMjgwNjk2", "number": 2684, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoxODozOFrOE_2gNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoxODozOFrOE_2gNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Mzg4NzI1OnYy", "diffSide": "RIGHT", "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/SharedHttpClientSessionManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoxODozOFrOH9yP_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTowMTo0N1rOH-UKPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0ODQ3OA==", "bodyText": "I haven't looked in detail, but is this thread-safe? If (potentially) not, perhaps slap a synchronized block on it to be sure?", "url": "https://github.com/eclipse/rdf4j/pull/2684#discussion_r534548478", "createdAt": "2020-12-02T23:18:38Z", "author": {"login": "jeenbroekstra"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/SharedHttpClientSessionManager.java", "diffHunk": "@@ -57,6 +62,39 @@\n \n \tprivate final Map<SPARQLProtocolSession, Boolean> openSessions = new ConcurrentHashMap<>();\n \n+\tprivate static final HttpRequestRetryHandler retryHandlerStale = new RetryHandlerStale();\n+\n+\t/**\n+\t * Retry handler: closes stale connections and suggests to simply retry the HTTP request once. This seems to be\n+\t * necessary for Jetty 9.4.24+\n+\t * \n+\t * Other HTTP issues are considered to be more severe, so these requests are not retried.\n+\t */\n+\tprivate static class RetryHandlerStale implements HttpRequestRetryHandler {\n+\t\tprivate final Logger logger = LoggerFactory.getLogger(RetryHandlerStale.class);\n+\n+\t\t@Override\n+\t\tpublic boolean retryRequest(IOException ioe, int count, HttpContext context) {\n+\t\t\t// only try this once\n+\t\t\tif (count > 1) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t\tHttpClientContext clientContext = HttpClientContext.adapt(context);\n+\t\t\tHttpConnection conn = clientContext.getConnection();\n+\n+\t\t\tif (conn.isStale()) {\n+\t\t\t\ttry {\n+\t\t\t\t\tlogger.warn(\"Closing stale connection\");\n+\t\t\t\t\tconn.close();\n+\t\t\t\t\treturn true;\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\tlogger.error(\"Error closing connection\", e);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6131d381849b542d1ad9155049bbe9e8d86696c"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MzYwNg==", "bodyText": "Good point, I'll have to check if it is", "url": "https://github.com/eclipse/rdf4j/pull/2684#discussion_r534553606", "createdAt": "2020-12-02T23:31:08Z", "author": {"login": "barthanssens"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/SharedHttpClientSessionManager.java", "diffHunk": "@@ -57,6 +62,39 @@\n \n \tprivate final Map<SPARQLProtocolSession, Boolean> openSessions = new ConcurrentHashMap<>();\n \n+\tprivate static final HttpRequestRetryHandler retryHandlerStale = new RetryHandlerStale();\n+\n+\t/**\n+\t * Retry handler: closes stale connections and suggests to simply retry the HTTP request once. This seems to be\n+\t * necessary for Jetty 9.4.24+\n+\t * \n+\t * Other HTTP issues are considered to be more severe, so these requests are not retried.\n+\t */\n+\tprivate static class RetryHandlerStale implements HttpRequestRetryHandler {\n+\t\tprivate final Logger logger = LoggerFactory.getLogger(RetryHandlerStale.class);\n+\n+\t\t@Override\n+\t\tpublic boolean retryRequest(IOException ioe, int count, HttpContext context) {\n+\t\t\t// only try this once\n+\t\t\tif (count > 1) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t\tHttpClientContext clientContext = HttpClientContext.adapt(context);\n+\t\t\tHttpConnection conn = clientContext.getConnection();\n+\n+\t\t\tif (conn.isStale()) {\n+\t\t\t\ttry {\n+\t\t\t\t\tlogger.warn(\"Closing stale connection\");\n+\t\t\t\t\tconn.close();\n+\t\t\t\t\treturn true;\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\tlogger.error(\"Error closing connection\", e);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0ODQ3OA=="}, "originalCommit": {"oid": "c6131d381849b542d1ad9155049bbe9e8d86696c"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEwNDA2Mg==", "bodyText": "added synchronize just to be sure", "url": "https://github.com/eclipse/rdf4j/pull/2684#discussion_r535104062", "createdAt": "2020-12-03T11:01:47Z", "author": {"login": "barthanssens"}, "path": "core/http/client/src/main/java/org/eclipse/rdf4j/http/client/SharedHttpClientSessionManager.java", "diffHunk": "@@ -57,6 +62,39 @@\n \n \tprivate final Map<SPARQLProtocolSession, Boolean> openSessions = new ConcurrentHashMap<>();\n \n+\tprivate static final HttpRequestRetryHandler retryHandlerStale = new RetryHandlerStale();\n+\n+\t/**\n+\t * Retry handler: closes stale connections and suggests to simply retry the HTTP request once. This seems to be\n+\t * necessary for Jetty 9.4.24+\n+\t * \n+\t * Other HTTP issues are considered to be more severe, so these requests are not retried.\n+\t */\n+\tprivate static class RetryHandlerStale implements HttpRequestRetryHandler {\n+\t\tprivate final Logger logger = LoggerFactory.getLogger(RetryHandlerStale.class);\n+\n+\t\t@Override\n+\t\tpublic boolean retryRequest(IOException ioe, int count, HttpContext context) {\n+\t\t\t// only try this once\n+\t\t\tif (count > 1) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t\tHttpClientContext clientContext = HttpClientContext.adapt(context);\n+\t\t\tHttpConnection conn = clientContext.getConnection();\n+\n+\t\t\tif (conn.isStale()) {\n+\t\t\t\ttry {\n+\t\t\t\t\tlogger.warn(\"Closing stale connection\");\n+\t\t\t\t\tconn.close();\n+\t\t\t\t\treturn true;\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\tlogger.error(\"Error closing connection\", e);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0ODQ3OA=="}, "originalCommit": {"oid": "c6131d381849b542d1ad9155049bbe9e8d86696c"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1339, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}