{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MDg0MDYz", "number": 2281, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODo1MTo0NlrOEAayVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODo1MTo0NlrOEAayVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODc0MzI2OnYy", "diffSide": "RIGHT", "path": "core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/ArrangedWriterTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODo1MTo0NlrOGbrwfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMTozMjoxNlrOGbxCtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY4MTY2Mw==", "bodyText": "I like the structure of the test, but I'm not sure I agree that the expected output is correct - see also the comment I left on the issue.", "url": "https://github.com/eclipse/rdf4j/pull/2281#discussion_r431681663", "createdAt": "2020-05-28T08:51:46Z", "author": {"login": "jeenbroekstra"}, "path": "core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/ArrangedWriterTest.java", "diffHunk": "@@ -70,6 +81,38 @@ public void testWriteSingleStatementWithSubjectNamespace() {\n \t\tassertEquals(expectedResult, outputWriter.toString());\n \t}\n \n+\t@Test\n+\tpublic void testWriteRepeatedInlineBlankNode() {\n+\t\tModel model = new ModelBuilder().subject(exNs + \"subject\")\n+\t\t\t\t.add(vf.createIRI(exNs, \"rel1\"), bnode)\n+\t\t\t\t.add(vf.createIRI(exNs, \"rel2\"), bnode)\n+\t\t\t\t.subject(bnode)\n+\t\t\t\t.add(RDFS.LABEL, \"the bnode\")\n+\t\t\t\t.build();\n+\n+\t\tmodel.setNamespace(RDFS.NS);\n+\t\tmodel.setNamespace(\"ex\", exNs);\n+\n+\t\tStringWriter stringWriter = new StringWriter();\n+\t\tBufferedWriter writer = new BufferedWriter(stringWriter);\n+\t\tWriterConfig config = new WriterConfig();\n+\t\tconfig.set(BasicWriterSettings.INLINE_BLANK_NODES, true);\n+\t\tRio.write(model, writer, RDFFormat.TURTLE, config);\n+\n+\t\tString sep = System.lineSeparator();\n+\t\tString expectedResult = \"@prefix ex: <http://example.org/> .\" + sep +\n+\t\t\t\t\"@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\" + sep +\n+\t\t\t\t\"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\" + sep + sep +\n+\t\t\t\t\"ex:subject ex:rel1 [\" + sep +\n+\t\t\t\t\"      rdfs:label \\\"the bnode\\\"\" + sep +\n+\t\t\t\t\"    ];\" + sep +\n+\t\t\t\t\"  ex:rel2 [\" + sep +\n+\t\t\t\t\"      rdfs:label \\\"the bnode\\\"\" + sep +\n+\t\t\t\t\"    ] .\" + sep;\n+\n+\t\tassertEquals(expectedResult, stringWriter.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0483df62c46676940789d93fd8fa837efdc77f"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc2ODI0NQ==", "bodyText": "Hi\nI have made the changes according to the discussion. There is no inlining for a repeated blank node. The test case has also been updated.", "url": "https://github.com/eclipse/rdf4j/pull/2281#discussion_r431768245", "createdAt": "2020-05-28T11:32:16Z", "author": {"login": "Mirr99"}, "path": "core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/ArrangedWriterTest.java", "diffHunk": "@@ -70,6 +81,38 @@ public void testWriteSingleStatementWithSubjectNamespace() {\n \t\tassertEquals(expectedResult, outputWriter.toString());\n \t}\n \n+\t@Test\n+\tpublic void testWriteRepeatedInlineBlankNode() {\n+\t\tModel model = new ModelBuilder().subject(exNs + \"subject\")\n+\t\t\t\t.add(vf.createIRI(exNs, \"rel1\"), bnode)\n+\t\t\t\t.add(vf.createIRI(exNs, \"rel2\"), bnode)\n+\t\t\t\t.subject(bnode)\n+\t\t\t\t.add(RDFS.LABEL, \"the bnode\")\n+\t\t\t\t.build();\n+\n+\t\tmodel.setNamespace(RDFS.NS);\n+\t\tmodel.setNamespace(\"ex\", exNs);\n+\n+\t\tStringWriter stringWriter = new StringWriter();\n+\t\tBufferedWriter writer = new BufferedWriter(stringWriter);\n+\t\tWriterConfig config = new WriterConfig();\n+\t\tconfig.set(BasicWriterSettings.INLINE_BLANK_NODES, true);\n+\t\tRio.write(model, writer, RDFFormat.TURTLE, config);\n+\n+\t\tString sep = System.lineSeparator();\n+\t\tString expectedResult = \"@prefix ex: <http://example.org/> .\" + sep +\n+\t\t\t\t\"@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\" + sep +\n+\t\t\t\t\"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\" + sep + sep +\n+\t\t\t\t\"ex:subject ex:rel1 [\" + sep +\n+\t\t\t\t\"      rdfs:label \\\"the bnode\\\"\" + sep +\n+\t\t\t\t\"    ];\" + sep +\n+\t\t\t\t\"  ex:rel2 [\" + sep +\n+\t\t\t\t\"      rdfs:label \\\"the bnode\\\"\" + sep +\n+\t\t\t\t\"    ] .\" + sep;\n+\n+\t\tassertEquals(expectedResult, stringWriter.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY4MTY2Mw=="}, "originalCommit": {"oid": "0a0483df62c46676940789d93fd8fa837efdc77f"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1406, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}