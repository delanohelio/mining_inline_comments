{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MzA5NTU5", "number": 2403, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNTowNTowN1rOFyz7Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNTowNzozNlrOFyz9Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODIzODU1OnYy", "diffSide": "RIGHT", "path": "core/sail/memory/src/test/java/org/eclipse/rdf4j/sail/memory/QueryPlanRetrievalTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNTowNTowN1rOJKF4RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNToyNzoyN1rOJKGSsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2MTg2MQ==", "bodyText": "I would have been ok with you deleting this test, but it's nice of you to turn it into a functional test.", "url": "https://github.com/eclipse/rdf4j/pull/2403#discussion_r614561861", "createdAt": "2021-04-16T05:05:07Z", "author": {"login": "hmottestad"}, "path": "core/sail/memory/src/test/java/org/eclipse/rdf4j/sail/memory/QueryPlanRetrievalTest.java", "diffHunk": "@@ -873,4 +873,38 @@ public void testDotTimed() {\n \n \t}\n \n+\t@Test\n+\tpublic void testArbitraryLengthPath() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dec6eaaa25376481dd79632924a2e27644ef0c8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2ODYyNw==", "bodyText": "It's still a useful test to have in place, making sure that the expected explanation is actually produced.", "url": "https://github.com/eclipse/rdf4j/pull/2403#discussion_r614568627", "createdAt": "2021-04-16T05:27:27Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/memory/src/test/java/org/eclipse/rdf4j/sail/memory/QueryPlanRetrievalTest.java", "diffHunk": "@@ -873,4 +873,38 @@ public void testDotTimed() {\n \n \t}\n \n+\t@Test\n+\tpublic void testArbitraryLengthPath() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2MTg2MQ=="}, "originalCommit": {"oid": "1dec6eaaa25376481dd79632924a2e27644ef0c8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODI0MzgzOnYy", "diffSide": "RIGHT", "path": "core/queryalgebra/model/src/main/java/org/eclipse/rdf4j/query/algebra/helpers/QueryModelTreeToGenericPlanNode.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNTowNzozNlrOJKF7Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNToyMjowNFrOJKGMMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2MjYxOQ==", "bodyText": "What was the reason you added this? Did you see any cycles in query plan?", "url": "https://github.com/eclipse/rdf4j/pull/2403#discussion_r614562619", "createdAt": "2021-04-16T05:07:36Z", "author": {"login": "hmottestad"}, "path": "core/queryalgebra/model/src/main/java/org/eclipse/rdf4j/query/algebra/helpers/QueryModelTreeToGenericPlanNode.java", "diffHunk": "@@ -35,10 +37,11 @@ public GenericPlanNode getGenericPlanNode() {\n \t\treturn top;\n \t}\n \n-\t// node.getParentNode() is not reliable because nodes are reused and parent is not maintained! This is why we use a\n-\t// queue to maintain the effective parent stack.\n \t@Override\n \tprotected void meetNode(QueryModelNode node) {\n+\t\tassert !visited.containsKey(node);\n+\t\tvisited.put(node, node);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dec6eaaa25376481dd79632924a2e27644ef0c8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2NTIyNg==", "bodyText": "This is something you added, I think. I assumed it was necessary, but was this part of the throwaway test code as well?", "url": "https://github.com/eclipse/rdf4j/pull/2403#discussion_r614565226", "createdAt": "2021-04-16T05:16:22Z", "author": {"login": "jeenbroekstra"}, "path": "core/queryalgebra/model/src/main/java/org/eclipse/rdf4j/query/algebra/helpers/QueryModelTreeToGenericPlanNode.java", "diffHunk": "@@ -35,10 +37,11 @@ public GenericPlanNode getGenericPlanNode() {\n \t\treturn top;\n \t}\n \n-\t// node.getParentNode() is not reliable because nodes are reused and parent is not maintained! This is why we use a\n-\t// queue to maintain the effective parent stack.\n \t@Override\n \tprotected void meetNode(QueryModelNode node) {\n+\t\tassert !visited.containsKey(node);\n+\t\tvisited.put(node, node);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2MjYxOQ=="}, "originalCommit": {"oid": "1dec6eaaa25376481dd79632924a2e27644ef0c8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2NTM2Nw==", "bodyText": "Yeah. It was.", "url": "https://github.com/eclipse/rdf4j/pull/2403#discussion_r614565367", "createdAt": "2021-04-16T05:16:50Z", "author": {"login": "hmottestad"}, "path": "core/queryalgebra/model/src/main/java/org/eclipse/rdf4j/query/algebra/helpers/QueryModelTreeToGenericPlanNode.java", "diffHunk": "@@ -35,10 +37,11 @@ public GenericPlanNode getGenericPlanNode() {\n \t\treturn top;\n \t}\n \n-\t// node.getParentNode() is not reliable because nodes are reused and parent is not maintained! This is why we use a\n-\t// queue to maintain the effective parent stack.\n \t@Override\n \tprotected void meetNode(QueryModelNode node) {\n+\t\tassert !visited.containsKey(node);\n+\t\tvisited.put(node, node);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2MjYxOQ=="}, "originalCommit": {"oid": "1dec6eaaa25376481dd79632924a2e27644ef0c8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2NTk5Mg==", "bodyText": "I intended for you to just revert my commits when you had figured out how to test the issue properly and how to fix it.", "url": "https://github.com/eclipse/rdf4j/pull/2403#discussion_r614565992", "createdAt": "2021-04-16T05:18:41Z", "author": {"login": "hmottestad"}, "path": "core/queryalgebra/model/src/main/java/org/eclipse/rdf4j/query/algebra/helpers/QueryModelTreeToGenericPlanNode.java", "diffHunk": "@@ -35,10 +37,11 @@ public GenericPlanNode getGenericPlanNode() {\n \t\treturn top;\n \t}\n \n-\t// node.getParentNode() is not reliable because nodes are reused and parent is not maintained! This is why we use a\n-\t// queue to maintain the effective parent stack.\n \t@Override\n \tprotected void meetNode(QueryModelNode node) {\n+\t\tassert !visited.containsKey(node);\n+\t\tvisited.put(node, node);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2MjYxOQ=="}, "originalCommit": {"oid": "1dec6eaaa25376481dd79632924a2e27644ef0c8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2Njk2MA==", "bodyText": "I'll take it out. See, this is why I don't like throwaway code. It has a nast habit of sticking around.", "url": "https://github.com/eclipse/rdf4j/pull/2403#discussion_r614566960", "createdAt": "2021-04-16T05:22:04Z", "author": {"login": "jeenbroekstra"}, "path": "core/queryalgebra/model/src/main/java/org/eclipse/rdf4j/query/algebra/helpers/QueryModelTreeToGenericPlanNode.java", "diffHunk": "@@ -35,10 +37,11 @@ public GenericPlanNode getGenericPlanNode() {\n \t\treturn top;\n \t}\n \n-\t// node.getParentNode() is not reliable because nodes are reused and parent is not maintained! This is why we use a\n-\t// queue to maintain the effective parent stack.\n \t@Override\n \tprotected void meetNode(QueryModelNode node) {\n+\t\tassert !visited.containsKey(node);\n+\t\tvisited.put(node, node);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU2MjYxOQ=="}, "originalCommit": {"oid": "1dec6eaaa25376481dd79632924a2e27644ef0c8"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1456, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}