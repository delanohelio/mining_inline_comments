{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNzkzNjc1", "number": 2488, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzowNzo0OFrOEh433g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMToxMzo0OFrOEi7o-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTcwMjcwOnYy", "diffSide": "RIGHT", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/LanguageInFilter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzowNzo0OFrOHPdQGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxMToyMDoyNFrOHQ0faw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk2OTk0Nw==", "bodyText": "I think you can DRY this all this up quite a bit by reusing Literals.isValidLanguageTag, or Literals.normalizeLanguageTag perhaps.", "url": "https://github.com/eclipse/rdf4j/pull/2488#discussion_r485969947", "createdAt": "2020-09-09T23:07:48Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/LanguageInFilter.java", "diffHunk": "@@ -33,12 +40,31 @@ boolean checkTuple(Tuple t) {\n \t\t}\n \n \t\tOptional<String> language = ((Literal) t.getLine().get(1)).getLanguage();\n-\t\treturn language.filter(languageIn::contains).isPresent();\n+\t\tif (!language.isPresent()) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\t// early matching\n+\t\tboolean languageMatches = language.map(String::toLowerCase).filter(normalizedLanguageIn::contains).isPresent();\n+\t\tif (languageMatches) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\t// test according to BCP47\n+\t\tString langTag = language.get();\n+\n+\t\treturn checkBCP47CompliantMatch(languageRanges, langTag);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dae72a59244ff0135b0e9d7ae80782d4aa40853d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA2OTA2OA==", "bodyText": "The normalize language tag might help.", "url": "https://github.com/eclipse/rdf4j/pull/2488#discussion_r486069068", "createdAt": "2020-09-10T05:11:08Z", "author": {"login": "hmottestad"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/LanguageInFilter.java", "diffHunk": "@@ -33,12 +40,31 @@ boolean checkTuple(Tuple t) {\n \t\t}\n \n \t\tOptional<String> language = ((Literal) t.getLine().get(1)).getLanguage();\n-\t\treturn language.filter(languageIn::contains).isPresent();\n+\t\tif (!language.isPresent()) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\t// early matching\n+\t\tboolean languageMatches = language.map(String::toLowerCase).filter(normalizedLanguageIn::contains).isPresent();\n+\t\tif (languageMatches) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\t// test according to BCP47\n+\t\tString langTag = language.get();\n+\n+\t\treturn checkBCP47CompliantMatch(languageRanges, langTag);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk2OTk0Nw=="}, "originalCommit": {"oid": "dae72a59244ff0135b0e9d7ae80782d4aa40853d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM5OTI3NQ==", "bodyText": "I've ended up just using lowercase for the initial fast language matching and for the full check I'm using the SPARQL langMatch code from the StrictEvaluationFactory.", "url": "https://github.com/eclipse/rdf4j/pull/2488#discussion_r487399275", "createdAt": "2020-09-12T11:20:24Z", "author": {"login": "hmottestad"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/LanguageInFilter.java", "diffHunk": "@@ -33,12 +40,31 @@ boolean checkTuple(Tuple t) {\n \t\t}\n \n \t\tOptional<String> language = ((Literal) t.getLine().get(1)).getLanguage();\n-\t\treturn language.filter(languageIn::contains).isPresent();\n+\t\tif (!language.isPresent()) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\t// early matching\n+\t\tboolean languageMatches = language.map(String::toLowerCase).filter(normalizedLanguageIn::contains).isPresent();\n+\t\tif (languageMatches) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\t// test according to BCP47\n+\t\tString langTag = language.get();\n+\n+\t\treturn checkBCP47CompliantMatch(languageRanges, langTag);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk2OTk0Nw=="}, "originalCommit": {"oid": "dae72a59244ff0135b0e9d7ae80782d4aa40853d"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDM3OTMwOnYy", "diffSide": "RIGHT", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/LanguageInFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNToxMzozNFrOHPjVzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNToxMzozNFrOHPjVzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA2OTcwOA==", "bodyText": "This needs to use basic language filtering.", "url": "https://github.com/eclipse/rdf4j/pull/2488#discussion_r486069708", "createdAt": "2020-09-10T05:13:34Z", "author": {"login": "hmottestad"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/LanguageInFilter.java", "diffHunk": "@@ -33,12 +40,31 @@ boolean checkTuple(Tuple t) {\n \t\t}\n \n \t\tOptional<String> language = ((Literal) t.getLine().get(1)).getLanguage();\n-\t\treturn language.filter(languageIn::contains).isPresent();\n+\t\tif (!language.isPresent()) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\t// early matching\n+\t\tboolean languageMatches = language.map(String::toLowerCase).filter(normalizedLanguageIn::contains).isPresent();\n+\t\tif (languageMatches) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\t// test according to BCP47\n+\t\tString langTag = language.get();\n+\n+\t\treturn checkBCP47CompliantMatch(languageRanges, langTag);\n \n \t}\n \n+\tprivate static boolean checkBCP47CompliantMatch(List<Locale.LanguageRange> languageRanges, String langTag) {\n+\t\tList<String> strings = Locale.filterTags(languageRanges, Collections.singletonList(langTag));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dae72a59244ff0135b0e9d7ae80782d4aa40853d"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDY0MTg3OnYy", "diffSide": "RIGHT", "path": "core/queryalgebra/evaluation/src/main/java/org/eclipse/rdf4j/query/algebra/evaluation/impl/StrictEvaluationStrategy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMToxMzo0OFrOHRBDvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMToxMzo0OFrOHRBDvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYwNTE4Mw==", "bodyText": "Good find that we are reusing this, but I don't think is the right place for this static method. I suggest we move this to the Literals utility class (which has other language-tag related utility methods as well, so it's a natural spot). And if you could, perhaps add a short javadoc description as well.", "url": "https://github.com/eclipse/rdf4j/pull/2488#discussion_r487605183", "createdAt": "2020-09-14T01:13:48Z", "author": {"login": "jeenbroekstra"}, "path": "core/queryalgebra/evaluation/src/main/java/org/eclipse/rdf4j/query/algebra/evaluation/impl/StrictEvaluationStrategy.java", "diffHunk": "@@ -1432,6 +1423,20 @@ public Value evaluate(LangMatches node, BindingSet bindings)\n \n \t}\n \n+\tpublic static boolean langTagMatchesRange(String langTag, String langRange) {\n+\t\tboolean result = false;\n+\t\tif (langRange.equals(\"*\")) {\n+\t\t\tresult = langTag.length() > 0;\n+\t\t} else if (langTag.length() == langRange.length()) {\n+\t\t\tresult = langTag.equalsIgnoreCase(langRange);\n+\t\t} else if (langTag.length() > langRange.length()) {\n+\t\t\t// check if the range is a prefix of the tag\n+\t\t\tString prefix = langTag.substring(0, langRange.length());\n+\t\t\tresult = prefix.equalsIgnoreCase(langRange) && langTag.charAt(langRange.length()) == '-';\n+\t\t}\n+\t\treturn result;\n+\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c165d3200b83863305edbc7f2fa93a4b4882fa6d"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1367, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}