{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MTExMjc0", "number": 1869, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNzoxMToxOVrODaEjYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNzoxMToxOVrODaEjYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjY0MTYxOnYy", "diffSide": "RIGHT", "path": "core/repository/sparql/src/test/java/org/eclipse/rdf4j/repository/sparql/SPARQLConnectionTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNzoxMToxOVrOFg0gPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwOTozMDowOVrOFg3nmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk1ODk3NQ==", "bodyText": "Haven\u2019t seen this part of mockito. This tests that the setParserConfig method has been called exactly once with config?", "url": "https://github.com/eclipse/rdf4j/pull/1869#discussion_r369958975", "createdAt": "2020-01-23T07:11:19Z", "author": {"login": "hmottestad"}, "path": "core/repository/sparql/src/test/java/org/eclipse/rdf4j/repository/sparql/SPARQLConnectionTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.repository.sparql;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import org.eclipse.rdf4j.http.client.SPARQLProtocolSession;\n+import org.eclipse.rdf4j.rio.ParserConfig;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class SPARQLConnectionTest {\n+\n+\tprivate SPARQLConnection subject;\n+\tprivate SPARQLProtocolSession client;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tclient = mock(SPARQLProtocolSession.class);\n+\t\tsubject = new SPARQLConnection(null, client);\n+\t}\n+\n+\t@Test\n+\tpublic void setParserConfigPassesToProtocolSession() throws Exception {\n+\t\tParserConfig config = new ParserConfig();\n+\n+\t\tsubject.setParserConfig(config);\n+\t\tverify(client, times(1)).setParserConfig(config);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce2495384682c151ecddfaf65a10ef340d2c158a"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxMDAxMA==", "bodyText": "That's exactly right! The client is a mock, and we use verify to check that a particular method with a particular argument has been called on that mock.", "url": "https://github.com/eclipse/rdf4j/pull/1869#discussion_r370010010", "createdAt": "2020-01-23T09:30:09Z", "author": {"login": "jeenbroekstra"}, "path": "core/repository/sparql/src/test/java/org/eclipse/rdf4j/repository/sparql/SPARQLConnectionTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.repository.sparql;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import org.eclipse.rdf4j.http.client.SPARQLProtocolSession;\n+import org.eclipse.rdf4j.rio.ParserConfig;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class SPARQLConnectionTest {\n+\n+\tprivate SPARQLConnection subject;\n+\tprivate SPARQLProtocolSession client;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tclient = mock(SPARQLProtocolSession.class);\n+\t\tsubject = new SPARQLConnection(null, client);\n+\t}\n+\n+\t@Test\n+\tpublic void setParserConfigPassesToProtocolSession() throws Exception {\n+\t\tParserConfig config = new ParserConfig();\n+\n+\t\tsubject.setParserConfig(config);\n+\t\tverify(client, times(1)).setParserConfig(config);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk1ODk3NQ=="}, "originalCommit": {"oid": "ce2495384682c151ecddfaf65a10ef340d2c158a"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1633, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}