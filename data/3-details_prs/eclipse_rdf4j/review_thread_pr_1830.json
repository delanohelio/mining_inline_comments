{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNzg0Nzc2", "number": 1830, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQwMzozMjozMlrODXWxWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNDoxMDoxM1rODXYNBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODE2OTIwOnYy", "diffSide": "RIGHT", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/util/Models.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQwMzozMjozMlrOFcnuDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQwMzozMjozMlrOFcnuDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NTIxNQ==", "bodyText": "Sorry for the import reorg, I've temporarily been using IntelliJ instead of Eclipse and obviously hit the wrong key combo somewhere.", "url": "https://github.com/eclipse/rdf4j/pull/1830#discussion_r365555215", "createdAt": "2020-01-12T03:32:32Z", "author": {"login": "jeenbroekstra"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/util/Models.java", "diffHunk": "@@ -32,6 +24,15 @@\n import java.util.stream.Collectors;\n import java.util.stream.StreamSupport;\n \n+import org.eclipse.rdf4j.model.BNode;\n+import org.eclipse.rdf4j.model.IRI;\n+import org.eclipse.rdf4j.model.Literal;\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.Resource;\n+import org.eclipse.rdf4j.model.Statement;\n+import org.eclipse.rdf4j.model.Value;\n+import org.eclipse.rdf4j.model.impl.LinkedHashModel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317a3422f7412f29c0df2fd71caa2c79a2fc7ac2"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODQwMzkxOnYy", "diffSide": "RIGHT", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/util/Models.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNDoxMDoxM1rOFcplLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNDoxMDoxM1rOFcplLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU4NTcwOA==", "bodyText": "That's pretty sweet :)", "url": "https://github.com/eclipse/rdf4j/pull/1830#discussion_r365585708", "createdAt": "2020-01-12T14:10:13Z", "author": {"login": "hmottestad"}, "path": "core/model/src/main/java/org/eclipse/rdf4j/model/util/Models.java", "diffHunk": "@@ -488,6 +489,27 @@ public static boolean isSubset(Set<? extends Statement> model1, Set<? extends St\n \t\treturn isSubsetInternal(toSet(model1), toModel(model2));\n \t}\n \n+\t/**\n+\t * Strips contexts from the input model. This method provides a new {@link Model} containing all statements from the\n+\t * input model, with the supplied contexts removed from those statements.\n+\t *\n+\t * @param model    the input model\n+\t * @param contexts the contexts to remove. This is a vararg and as such is optional. If not supplied, the method\n+\t *                 strips <i>all</i> contexts.\n+\t * @return a new {@link Model} object containg the same statements as the input model, with the supplied contexts\n+\t *         stripped.\n+\t */\n+\tpublic static Model stripContexts(Model model, Resource... contexts) {\n+\t\tfinal List<Resource> contextList = Arrays.asList(contexts);\n+\t\treturn model.stream().map(st -> {\n+\t\t\tif (contextList.isEmpty() || contextList.contains(st.getContext())) {\n+\t\t\t\treturn Statements.stripContext(st);\n+\t\t\t} else {\n+\t\t\t\treturn st;\n+\t\t\t}\n+\t\t}).collect(Collectors.toCollection(LinkedHashModel::new));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317a3422f7412f29c0df2fd71caa2c79a2fc7ac2"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1619, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}