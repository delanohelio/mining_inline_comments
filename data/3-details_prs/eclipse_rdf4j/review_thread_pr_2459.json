{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMDMzNTQ4", "number": 2459, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMDowNzoyMVrOEeHlCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODo0OTo1NVrOEfWnFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDE2OTA0OnYy", "diffSide": "RIGHT", "path": "core/sail/shacl/src/test/java/org/eclipse/rdf4j/sail/shacl/TempTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMDowNzoyMVrOHJmuzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMDowNzoyMVrOHJmuzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzMzgwNQ==", "bodyText": "Please remove this class.", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r479833805", "createdAt": "2020-08-31T00:07:21Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/test/java/org/eclipse/rdf4j/sail/shacl/TempTest.java", "diffHunk": "@@ -500,4 +500,50 @@ private void add(SailRepositoryConnection connection, String data) throws IOExce\n \t\tconnection.commit();\n \t}\n \n+\t@Test()\n+\tpublic void temp() throws Throwable {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDE3ODAwOnYy", "diffSide": "RIGHT", "path": "core/sail/shacl/src/test/resources/test-cases/hasValueIn/or/shacl.ttl", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMDoxNjo1NlrOHJmzUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTo0NDowM1rOHKygzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzNDk2Mg==", "bodyText": "I don't object to having a test for a corner case, but isn't this an odd use of dash:hasValueIn? I thought the point was to allow use of a list so you don't have to use an or constraint at all. In other words, isn't the above equivalent to just saying:\n sh:path ex:info;\n dash:hasValueIn (\"blue\" \"green\" \"red\");", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r479834962", "createdAt": "2020-08-31T00:16:56Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/test/resources/test-cases/hasValueIn/or/shacl.ttl", "diffHunk": "@@ -0,0 +1,16 @@\n+@base <http://example.com/ns> .\n+@prefix ex: <http://example.com/ns#> .\n+@prefix owl: <http://www.w3.org/2002/07/owl#> .\n+@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n+@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n+@prefix sh: <http://www.w3.org/ns/shacl#> .\n+@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n+@prefix dash: <http://datashapes.org/dash#>.\n+\n+ex:shape1\n+\ta sh:NodeShape ;\n+\tsh:targetClass ex:Person ;\n+\tsh:property [\n+\t\tsh:path ex:info ;\n+\t\tsh:or ([ dash:hasValueIn (\"blue\") ; ] [ dash:hasValueIn (\"green\") ; ] [ dash:hasValueIn (\"red\"); ]) ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxNjY5Mg==", "bodyText": "That would be equivalent to:\nsh:or ([sh:path ex:info ; dash:hasValueIn (\"blue\") ; ] [sh:path ex:info ; dash:hasValueIn (\"green\") ; ] [sh:path ex:info ; dash:hasValueIn (\"red\"); ]) ;", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r479916692", "createdAt": "2020-08-31T06:19:20Z", "author": {"login": "hmottestad"}, "path": "core/sail/shacl/src/test/resources/test-cases/hasValueIn/or/shacl.ttl", "diffHunk": "@@ -0,0 +1,16 @@\n+@base <http://example.com/ns> .\n+@prefix ex: <http://example.com/ns#> .\n+@prefix owl: <http://www.w3.org/2002/07/owl#> .\n+@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n+@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n+@prefix sh: <http://www.w3.org/ns/shacl#> .\n+@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n+@prefix dash: <http://datashapes.org/dash#>.\n+\n+ex:shape1\n+\ta sh:NodeShape ;\n+\tsh:targetClass ex:Person ;\n+\tsh:property [\n+\t\tsh:path ex:info ;\n+\t\tsh:or ([ dash:hasValueIn (\"blue\") ; ] [ dash:hasValueIn (\"green\") ; ] [ dash:hasValueIn (\"red\"); ]) ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzNDk2Mg=="}, "originalCommit": {"oid": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3NTQwNA==", "bodyText": "Ah I see! I think I'm beginning to understand what the actual issue here is. At least, I think so...", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r481075404", "createdAt": "2020-09-01T11:44:03Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/test/resources/test-cases/hasValueIn/or/shacl.ttl", "diffHunk": "@@ -0,0 +1,16 @@\n+@base <http://example.com/ns> .\n+@prefix ex: <http://example.com/ns#> .\n+@prefix owl: <http://www.w3.org/2002/07/owl#> .\n+@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n+@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n+@prefix sh: <http://www.w3.org/ns/shacl#> .\n+@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n+@prefix dash: <http://datashapes.org/dash#>.\n+\n+ex:shape1\n+\ta sh:NodeShape ;\n+\tsh:targetClass ex:Person ;\n+\tsh:property [\n+\t\tsh:path ex:info ;\n+\t\tsh:or ([ dash:hasValueIn (\"blue\") ; ] [ dash:hasValueIn (\"green\") ; ] [ dash:hasValueIn (\"red\"); ]) ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzNDk2Mg=="}, "originalCommit": {"oid": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDE4MjEyOnYy", "diffSide": "RIGHT", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMDoyMTozMFrOHJm1eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNTo1MDowOFrOHJrDMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzNTUxMw==", "bodyText": "what is VALUES_INJECTION_POINT?", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r479835513", "createdAt": "2020-08-31T00:21:30Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "diffHunk": "@@ -227,15 +227,45 @@ public PlanNode getAllTargetsPlan(ConnectionsGroup connectionsGroup, boolean neg\n \n \t@Override\n \tpublic String buildSparqlValidNodes(String targetVar) {\n-\t\treturn and.stream()\n-\t\t\t\t.map(propertyShapes -> propertyShapes\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t.map(propertyShape -> propertyShape.buildSparqlValidNodes(targetVar))\n-\t\t\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b))\n-\t\t\t\t.filter(Optional::isPresent)\n-\t\t\t\t.map(Optional::get)\n-\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b)\n-\t\t\t\t.orElse(\"\");\n+\n+\t\tif (hasOwnPath()) {\n+\t\t\t// within property shape\n+\t\t\tString objectVariable = \"?b\";\n+\t\t\tString pathQuery1 = getPath().getQuery(targetVar, objectVariable, null);\n+\n+\t\t\tString collect = and.stream()\n+\t\t\t\t\t.map(l -> l.stream()\n+\t\t\t\t\t\t\t.map(p -> p.buildSparqlValidNodes(objectVariable))\n+\t\t\t\t\t\t\t.reduce((a, b) -> a + \" && \" + b))\n+\t\t\t\t\t.filter(Optional::isPresent)\n+\t\t\t\t\t.map(Optional::get)\n+\t\t\t\t\t.collect(Collectors.joining(\" ) && ( \", \"( \",\n+\t\t\t\t\t\t\t\" )\"));\n+\n+\t\t\tString query = pathQuery1 + \"\\n FILTER (! EXISTS {\\n\" + pathQuery1.replaceAll(\"(?m)^\", \"\\t\")\n+\t\t\t\t\t+ \"\\n\\tFILTER(!(\" + collect + \"))\\n})\";\n+\n+\t\t\tString pathQuery2 = getPath().getQuery(targetVar, randomVariable(), null);\n+\n+\t\t\tquery = \"{\\n#VALUES_INJECTION_POINT#\\n \" + query.replaceAll(\"(?m)^\", \"\\t\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg5OTE4OQ==", "bodyText": "It's where we inject SPARQL values. Since we have unions we end up introducing a new scope, which leads to poor performance. So we add points where we can inject sparql values, for the cases where we need to run the query against a subset of nodes.", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r479899189", "createdAt": "2020-08-31T05:43:27Z", "author": {"login": "hmottestad"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "diffHunk": "@@ -227,15 +227,45 @@ public PlanNode getAllTargetsPlan(ConnectionsGroup connectionsGroup, boolean neg\n \n \t@Override\n \tpublic String buildSparqlValidNodes(String targetVar) {\n-\t\treturn and.stream()\n-\t\t\t\t.map(propertyShapes -> propertyShapes\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t.map(propertyShape -> propertyShape.buildSparqlValidNodes(targetVar))\n-\t\t\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b))\n-\t\t\t\t.filter(Optional::isPresent)\n-\t\t\t\t.map(Optional::get)\n-\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b)\n-\t\t\t\t.orElse(\"\");\n+\n+\t\tif (hasOwnPath()) {\n+\t\t\t// within property shape\n+\t\t\tString objectVariable = \"?b\";\n+\t\t\tString pathQuery1 = getPath().getQuery(targetVar, objectVariable, null);\n+\n+\t\t\tString collect = and.stream()\n+\t\t\t\t\t.map(l -> l.stream()\n+\t\t\t\t\t\t\t.map(p -> p.buildSparqlValidNodes(objectVariable))\n+\t\t\t\t\t\t\t.reduce((a, b) -> a + \" && \" + b))\n+\t\t\t\t\t.filter(Optional::isPresent)\n+\t\t\t\t\t.map(Optional::get)\n+\t\t\t\t\t.collect(Collectors.joining(\" ) && ( \", \"( \",\n+\t\t\t\t\t\t\t\" )\"));\n+\n+\t\t\tString query = pathQuery1 + \"\\n FILTER (! EXISTS {\\n\" + pathQuery1.replaceAll(\"(?m)^\", \"\\t\")\n+\t\t\t\t\t+ \"\\n\\tFILTER(!(\" + collect + \"))\\n})\";\n+\n+\t\t\tString pathQuery2 = getPath().getQuery(targetVar, randomVariable(), null);\n+\n+\t\t\tquery = \"{\\n#VALUES_INJECTION_POINT#\\n \" + query.replaceAll(\"(?m)^\", \"\\t\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzNTUxMw=="}, "originalCommit": {"oid": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkwNDU2Mg==", "bodyText": "Ah I see. ObNitpick: it might be good to declare a constant for this substitution pattern.", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r479904562", "createdAt": "2020-08-31T05:50:08Z", "author": {"login": "jeenbroekstra"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "diffHunk": "@@ -227,15 +227,45 @@ public PlanNode getAllTargetsPlan(ConnectionsGroup connectionsGroup, boolean neg\n \n \t@Override\n \tpublic String buildSparqlValidNodes(String targetVar) {\n-\t\treturn and.stream()\n-\t\t\t\t.map(propertyShapes -> propertyShapes\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t.map(propertyShape -> propertyShape.buildSparqlValidNodes(targetVar))\n-\t\t\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b))\n-\t\t\t\t.filter(Optional::isPresent)\n-\t\t\t\t.map(Optional::get)\n-\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b)\n-\t\t\t\t.orElse(\"\");\n+\n+\t\tif (hasOwnPath()) {\n+\t\t\t// within property shape\n+\t\t\tString objectVariable = \"?b\";\n+\t\t\tString pathQuery1 = getPath().getQuery(targetVar, objectVariable, null);\n+\n+\t\t\tString collect = and.stream()\n+\t\t\t\t\t.map(l -> l.stream()\n+\t\t\t\t\t\t\t.map(p -> p.buildSparqlValidNodes(objectVariable))\n+\t\t\t\t\t\t\t.reduce((a, b) -> a + \" && \" + b))\n+\t\t\t\t\t.filter(Optional::isPresent)\n+\t\t\t\t\t.map(Optional::get)\n+\t\t\t\t\t.collect(Collectors.joining(\" ) && ( \", \"( \",\n+\t\t\t\t\t\t\t\" )\"));\n+\n+\t\t\tString query = pathQuery1 + \"\\n FILTER (! EXISTS {\\n\" + pathQuery1.replaceAll(\"(?m)^\", \"\\t\")\n+\t\t\t\t\t+ \"\\n\\tFILTER(!(\" + collect + \"))\\n})\";\n+\n+\t\t\tString pathQuery2 = getPath().getQuery(targetVar, randomVariable(), null);\n+\n+\t\t\tquery = \"{\\n#VALUES_INJECTION_POINT#\\n \" + query.replaceAll(\"(?m)^\", \"\\t\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzNTUxMw=="}, "originalCommit": {"oid": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzExNzY3OnYy", "diffSide": "RIGHT", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODo0OTo1NVrOHLlAVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjoyNToxNFrOHLsmhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkwMjY3Nw==", "bodyText": "Do we have an edge case when this may run multiple times, overriding the ?b object variable?", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r481902677", "createdAt": "2020-09-02T08:49:55Z", "author": {"login": "rdstn"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "diffHunk": "@@ -227,15 +227,45 @@ public PlanNode getAllTargetsPlan(ConnectionsGroup connectionsGroup, boolean neg\n \n \t@Override\n \tpublic String buildSparqlValidNodes(String targetVar) {\n-\t\treturn and.stream()\n-\t\t\t\t.map(propertyShapes -> propertyShapes\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t.map(propertyShape -> propertyShape.buildSparqlValidNodes(targetVar))\n-\t\t\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b))\n-\t\t\t\t.filter(Optional::isPresent)\n-\t\t\t\t.map(Optional::get)\n-\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b)\n-\t\t\t\t.orElse(\"\");\n+\n+\t\tif (hasOwnPath()) {\n+\t\t\t// within property shape\n+\t\t\tString objectVariable = \"?b\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAyNzE0Mw==", "bodyText": "I'll take a look and check.", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r482027143", "createdAt": "2020-09-02T12:25:14Z", "author": {"login": "hmottestad"}, "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "diffHunk": "@@ -227,15 +227,45 @@ public PlanNode getAllTargetsPlan(ConnectionsGroup connectionsGroup, boolean neg\n \n \t@Override\n \tpublic String buildSparqlValidNodes(String targetVar) {\n-\t\treturn and.stream()\n-\t\t\t\t.map(propertyShapes -> propertyShapes\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t.map(propertyShape -> propertyShape.buildSparqlValidNodes(targetVar))\n-\t\t\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b))\n-\t\t\t\t.filter(Optional::isPresent)\n-\t\t\t\t.map(Optional::get)\n-\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b)\n-\t\t\t\t.orElse(\"\");\n+\n+\t\tif (hasOwnPath()) {\n+\t\t\t// within property shape\n+\t\t\tString objectVariable = \"?b\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkwMjY3Nw=="}, "originalCommit": {"oid": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1359, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}