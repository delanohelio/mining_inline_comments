{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MzEzMjY4", "number": 6748, "title": "xds: improve logging for xDS workflow", "bodyText": "This PR tries to improve observability of xDS workflow for some extent. After considering different logging approaches, I am still thinking the way how ChannelTracer works is most suitable. All the logging events are delegated to a single java util logger (io.grpc.xds.XdsLogger) so that users have a single point of configuration.\nThis isn't perfect yet, especially for logging in leaf balancers. Logging in LocalityStore.java is hard due to its complicated component structure and code organization. We may want to have further improvement while we are doing xDS refactoring.\nIf you run it on cloud VM and tweak java logging levels for io.grpc.xds, you can see how it behaves.\nFINE: basically nothing useless there is something abnormal happens such RPC stream closed.\nFINER: you will see logs for xDS related events and operations happening under the hood.\nFINEST: you will see a lot of verbose messages, objects in their original human-readable form.", "createdAt": "2020-02-25T01:15:43Z", "url": "https://github.com/grpc/grpc-java/pull/6748", "merged": true, "mergeCommit": {"oid": "e8066ccf4ad1ec602098f57c4957bf4346fd3d5b"}, "closed": true, "closedAt": "2020-02-26T02:04:29Z", "author": {"login": "voidzcy"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGj-peAH2gAyMzc5MzEzMjY4OjBkYzM4OGZkOGU4NTRlNGYwYzI3ZDMzZjk3NWRlY2U4ZDhiY2QxNTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH8iilgFqTM2NDU2NTIyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0dc388fd8e854e4f0c27d33f975dece8d8bcd158", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/0dc388fd8e854e4f0c27d33f975dece8d8bcd158", "committedDate": "2020-02-21T18:24:44Z", "message": "Implement an XdsLogger."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6813c5af28e32738bb5b833e0c46988a7d74071", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/f6813c5af28e32738bb5b833e0c46988a7d74071", "committedDate": "2020-02-21T22:41:15Z", "message": "Improve logging for XdsClientImpl."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "551fb49213b85353544d6cb197ec248582916514", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/551fb49213b85353544d6cb197ec248582916514", "committedDate": "2020-02-21T23:54:59Z", "message": "Merge branch 'master' of github.com:grpc/grpc-java into dev/improve_xds_logging_v2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d7a8e7f57b19832137ba75f2962e9b58992751a", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/5d7a8e7f57b19832137ba75f2962e9b58992751a", "committedDate": "2020-02-22T00:22:22Z", "message": "Improve logging in XdsNameResolver."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e91b11f30224501b65a1cbe37ed676a5a21cb9e5", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e91b11f30224501b65a1cbe37ed676a5a21cb9e5", "committedDate": "2020-02-24T23:00:10Z", "message": "Add logging for reading bootstrap."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7baf4fa42864f59493d3540e0de9fff39c42d09", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e7baf4fa42864f59493d3540e0de9fff39c42d09", "committedDate": "2020-02-24T23:41:18Z", "message": "Add logging for load report client."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f646f2145771e9c3d4c661a6ca6b93e687f9756", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/3f646f2145771e9c3d4c661a6ca6b93e687f9756", "committedDate": "2020-02-24T23:41:36Z", "message": "Add logging for LB policies."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fc36b3b2ccd594b5fc8b95e154698b70a8354f7", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/6fc36b3b2ccd594b5fc8b95e154698b70a8354f7", "committedDate": "2020-02-25T00:55:06Z", "message": "Fix counting the wrong number of server uris."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "078384e2f0825b01e8bede2ea06df83c7c80b98b", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/078384e2f0825b01e8bede2ea06df83c7c80b98b", "committedDate": "2020-02-25T01:01:34Z", "message": "Log CDS config in CdsLoadBalancer."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a71211a27506af263aa58a6ddc9e306a0b63d5d7", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/a71211a27506af263aa58a6ddc9e306a0b63d5d7", "committedDate": "2020-02-25T01:16:23Z", "message": "Fix formatting issue."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c30979fea1d7f024032a045a78fd0b1f585a402d", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/c30979fea1d7f024032a045a78fd0b1f585a402d", "committedDate": "2020-02-25T08:44:32Z", "message": "Update log prefix for bootstrapper."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MzMyODkz", "url": "https://github.com/grpc/grpc-java/pull/6748#pullrequestreview-364332893", "createdAt": "2020-02-25T18:05:42Z", "commit": {"oid": "c30979fea1d7f024032a045a78fd0b1f585a402d"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODowNTo0MlrOFuPjSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODo0ODoxMFrOFuQ4BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAzMzYwOA==", "bodyText": "s/ChannelLogger/XdsLogger/", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384033608", "createdAt": "2020-02-25T18:05:42Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsLogger.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import com.google.common.base.Preconditions;\n+import io.grpc.InternalLogId;\n+import java.text.MessageFormat;\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+import java.util.logging.Logger;\n+\n+/**\n+ * An xDS-specific logger for collecting xDS specific events. Information logged here goes\n+ * to the Java logger of this class.\n+ */\n+final class XdsLogger {\n+  private static final Logger logger = Logger.getLogger(XdsLogger.class.getName());\n+\n+  private final String prefix;\n+\n+  static XdsLogger withLogId(InternalLogId logId) {\n+    Preconditions.checkNotNull(logId, \"logId\");\n+    return new XdsLogger(logId.toString());\n+  }\n+\n+  static XdsLogger withPrefix(String prefix) {\n+    return new XdsLogger(prefix);\n+  }\n+\n+  private XdsLogger(String prefix) {\n+    this.prefix = Preconditions.checkNotNull(prefix, \"prefix\");\n+  }\n+\n+  boolean isLoggable(XdsLogLevel level) {\n+    Level javaLevel = toJavaLogLevel(level);\n+    return logger.isLoggable(javaLevel);\n+  }\n+\n+  void log(XdsLogLevel level, String msg) {\n+    Level javaLevel = toJavaLogLevel(level);\n+    logOnly(prefix, javaLevel, msg);\n+  }\n+\n+  void log(XdsLogLevel level, String messageFormat, Object... args) {\n+    Level javaLogLevel = toJavaLogLevel(level);\n+    if (logger.isLoggable(javaLogLevel)) {\n+      String msg = MessageFormat.format(messageFormat, args);\n+      logOnly(prefix, javaLogLevel, msg);\n+    }\n+  }\n+\n+  private static void logOnly(String prefix, Level logLevel, String msg) {\n+    if (logger.isLoggable(logLevel)) {\n+      LogRecord lr = new LogRecord(logLevel, \"[\" + prefix + \"] \" + msg);\n+      // No resource bundle as gRPC is not localized.\n+      lr.setLoggerName(logger.getName());\n+      lr.setSourceClassName(logger.getName());\n+      lr.setSourceMethodName(\"log\");\n+      logger.log(lr);\n+    }\n+  }\n+\n+  private static Level toJavaLogLevel(XdsLogLevel level) {\n+    switch (level) {\n+      case ERROR:\n+      case WARNING:\n+        return Level.FINE;\n+      case INFO:\n+        return Level.FINER;\n+      default:\n+        return Level.FINEST;\n+    }\n+  }\n+\n+  /**\n+   * Log levels. See the table below for the mapping from the XdsLogger levels to\n+   * Java logger levels.\n+   * <pre>\n+   * +---------------------+-------------------+\n+   * | ChannelLogger Level | Java Logger Level |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30979fea1d7f024032a045a78fd0b1f585a402d"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAzNDUxMg==", "bodyText": "You can pass name to the second arg of allocate()", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384034512", "createdAt": "2020-02-25T18:08:11Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsNameResolver.java", "diffHunk": "@@ -93,6 +96,8 @@\n     this.backoffPolicyProvider = checkNotNull(backoffPolicyProvider, \"backoffPolicyProvider\");\n     this.stopwatchSupplier = checkNotNull(stopwatchSupplier, \"stopwatchSupplier\");\n     this.bootstrapper = checkNotNull(bootstrapper, \"bootstrapper\");\n+    logger = XdsLogger.withLogId(InternalLogId.allocate(\"xds-resolver\", null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30979fea1d7f024032a045a78fd0b1f585a402d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAzNTAxNw==", "bodyText": "LOG_PREFIX", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384035017", "createdAt": "2020-02-25T18:10:44Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/Bootstrapper.java", "diffHunk": "@@ -44,6 +45,7 @@\n @Internal\n public abstract class Bootstrapper {\n \n+  private static final String logPrefix = \"xds-bootstrap\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30979fea1d7f024032a045a78fd0b1f585a402d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAzODY1NQ==", "bodyText": "BOOTSTRAP_PATH_SYS_ENV_VAR + \"={0}\"", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384038655", "createdAt": "2020-02-25T18:18:09Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/Bootstrapper.java", "diffHunk": "@@ -54,6 +56,9 @@ public BootstrapInfo readBootstrap() throws IOException {\n         throw\n             new IOException(\"Environment variable \" + BOOTSTRAP_PATH_SYS_ENV_VAR + \" not defined.\");\n       }\n+      XdsLogger\n+          .withPrefix(logPrefix)\n+          .log(XdsLogLevel.INFO, \"GRPC_XDS_BOOTSTRAP={0}\", filePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30979fea1d7f024032a045a78fd0b1f585a402d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0Mjg0Ng==", "bodyText": "You can pass targetName to the 2nd arg of allocate()", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384042846", "createdAt": "2020-02-25T18:25:46Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "diffHunk": "@@ -172,6 +173,8 @@\n       ScheduledExecutorService timeService,\n       BackoffPolicy.Provider backoffPolicyProvider,\n       Supplier<Stopwatch> stopwatchSupplier) {\n+    logId = InternalLogId.allocate(\"xds-client\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30979fea1d7f024032a045a78fd0b1f585a402d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0MzM2Mg==", "bodyText": "nit: Watcher", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384043362", "createdAt": "2020-02-25T18:26:47Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "diffHunk": "@@ -230,14 +233,15 @@ private void cleanUpResources() {\n \n   @Override\n   void watchConfigData(String hostName, int port, ConfigWatcher watcher) {\n-    checkState(configWatcher == null, \"ConfigWatcher is already registered\");\n+    checkState(configWatcher == null, \"watcher for %s already registered\", hostName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30979fea1d7f024032a045a78fd0b1f585a402d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1NTMwMA==", "bodyText": "You can pass helper.getAuthority() to the 2nd arg of allocate().", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384055300", "createdAt": "2020-02-25T18:48:10Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/CdsLoadBalancer.java", "diffHunk": "@@ -74,38 +74,28 @@\n   @VisibleForTesting\n   CdsLoadBalancer(Helper helper, LoadBalancerRegistry lbRegistry,\n       TlsContextManager tlsContextManager) {\n-    this.helper = helper;\n-    this.channelLogger = helper.getChannelLogger();\n+    logger = XdsLogger.withLogId(InternalLogId.allocate(\"cds-lb\", null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30979fea1d7f024032a045a78fd0b1f585a402d"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2ea77745f47e5a80a03022a3d14362f6ce53cfd", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/c2ea77745f47e5a80a03022a3d14362f6ce53cfd", "committedDate": "2020-02-25T19:14:41Z", "message": "Fix typo in comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44ff29c6f846eab745b7e3c1e15fea1e49c8d819", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/44ff29c6f846eab745b7e3c1e15fea1e49c8d819", "committedDate": "2020-02-25T19:41:12Z", "message": "Show target name in log prefix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4557e9ce54df9f3c366369ae9a12a2c35d9349b7", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/4557e9ce54df9f3c366369ae9a12a2c35d9349b7", "committedDate": "2020-02-25T19:56:29Z", "message": "Fix style issue."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c44f148955416b73c71360d5559e77accdf42fb3", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/c44f148955416b73c71360d5559e77accdf42fb3", "committedDate": "2020-02-25T19:45:08Z", "message": "Fix style issue."}, "afterCommit": {"oid": "4557e9ce54df9f3c366369ae9a12a2c35d9349b7", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/4557e9ce54df9f3c366369ae9a12a2c35d9349b7", "committedDate": "2020-02-25T19:56:29Z", "message": "Fix style issue."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDU0NjEx", "url": "https://github.com/grpc/grpc-java/pull/6748#pullrequestreview-364454611", "createdAt": "2020-02-25T21:17:47Z", "commit": {"oid": "4557e9ce54df9f3c366369ae9a12a2c35d9349b7"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMToxNzo0N1rOFuVhYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMToyNTozMFrOFuVv-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzMTQyNA==", "bodyText": "\"Received EDS lb config:\\n{0}\", newXdsConfig", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384131424", "createdAt": "2020-02-25T21:17:47Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -91,29 +92,40 @@\n       LocalityStoreFactory localityStoreFactory,\n       Bootstrapper bootstrapper,\n       XdsChannelFactory channelFactory) {\n-    this.edsLbHelper = edsLbHelper;\n-    this.channelLogger = edsLbHelper.getChannelLogger();\n-    this.resourceUpdateCallback = resourceUpdateCallback;\n-    this.lbRegistry = lbRegistry;\n-    this.localityStoreFactory = localityStoreFactory;\n+    this.edsLbHelper = checkNotNull(edsLbHelper, \"edsLbHelper\");\n+    this.resourceUpdateCallback = checkNotNull(resourceUpdateCallback, \"resourceUpdateCallback\");\n+    this.lbRegistry = checkNotNull(lbRegistry, \"lbRegistry\");\n+    this.localityStoreFactory = checkNotNull(localityStoreFactory, \"localityStoreFactory\");\n+    this.bootstrapper = checkNotNull(bootstrapper, \"bootstrapper\");\n+    this.channelFactory = checkNotNull(channelFactory, \"channelFactory\");\n     this.switchingLoadBalancer = new GracefulSwitchLoadBalancer(edsLbHelper);\n-    this.bootstrapper = bootstrapper;\n-    this.channelFactory = channelFactory;\n+    logId = InternalLogId.allocate(\"eds-lb\", edsLbHelper.getAuthority());\n+    logger = XdsLogger.withLogId(logId);\n+    logger.log(XdsLogLevel.INFO, \"Created\");\n   }\n \n   @Override\n   public void handleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n-    channelLogger.log(ChannelLogLevel.DEBUG, \"Received ResolvedAddresses {0}\", resolvedAddresses);\n-\n+    logger.log(XdsLogLevel.DEBUG, \"Received resolution result: {0}\", resolvedAddresses);\n     Object lbConfig = resolvedAddresses.getLoadBalancingPolicyConfig();\n-    if (!(lbConfig instanceof XdsConfig)) {\n+    if (lbConfig == null) {\n       edsLbHelper.updateBalancingState(\n           TRANSIENT_FAILURE,\n-          new ErrorPicker(Status.UNAVAILABLE.withDescription(\n-              \"Load balancing config '\" + lbConfig + \"' is not an XdsConfig\")));\n+          new ErrorPicker(Status.UNAVAILABLE.withDescription(\"Missing EDS lb config\")));\n       return;\n     }\n     XdsConfig newXdsConfig = (XdsConfig) lbConfig;\n+    if (logger.isLoggable(XdsLogLevel.INFO)) {\n+      logger.log(\n+          XdsLogLevel.INFO,\n+          \"Received EDS lb config: cluster={0}, child_policy={1}, fallback_policy={2}, \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4557e9ce54df9f3c366369ae9a12a2c35d9349b7"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzMTgzNw==", "bodyText": "\"Received CDS lb config:\\n{0}\", newCdsConfig", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384131837", "createdAt": "2020-02-25T21:18:36Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/CdsLoadBalancer.java", "diffHunk": "@@ -74,38 +74,29 @@\n   @VisibleForTesting\n   CdsLoadBalancer(Helper helper, LoadBalancerRegistry lbRegistry,\n       TlsContextManager tlsContextManager) {\n-    this.helper = helper;\n-    this.channelLogger = helper.getChannelLogger();\n+    checkNotNull(helper, \"helper\");\n     this.lbRegistry = lbRegistry;\n     this.switchingLoadBalancer = new GracefulSwitchLoadBalancer(helper);\n     this.tlsContextManager = tlsContextManager;\n+    logger = XdsLogger.withLogId(InternalLogId.allocate(\"cds-lb\", helper.getAuthority()));\n+    logger.log(XdsLogLevel.INFO, \"Created\");\n   }\n \n   @Override\n   public void handleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n-    channelLogger.log(ChannelLogLevel.DEBUG, \"Received ResolvedAddresses {0}\", resolvedAddresses);\n+    logger.log(XdsLogLevel.DEBUG, \"Received resolution result: {0}\", resolvedAddresses);\n     if (xdsClientPool == null) {\n       xdsClientPool = resolvedAddresses.getAttributes().get(XdsAttributes.XDS_CLIENT_POOL);\n-      if (xdsClientPool == null) {\n-        // TODO(zdapeng): create a new xdsClient from bootstrap if no one exists.\n-        helper.updateBalancingState(\n-            TRANSIENT_FAILURE,\n-            new ErrorPicker(Status.UNAVAILABLE.withDescription(\n-                \"XDS_CLIENT_POOL attributes not available from resolve addresses\")));\n-        return;\n-      }\n+      checkNotNull(xdsClientPool, \"missing xDS client pool\");\n       xdsClient = xdsClientPool.getObject();\n     }\n \n     Object lbConfig = resolvedAddresses.getLoadBalancingPolicyConfig();\n-    if (!(lbConfig instanceof CdsConfig)) {\n-      helper.updateBalancingState(\n-          TRANSIENT_FAILURE,\n-          new ErrorPicker(Status.UNAVAILABLE.withDescription(\n-              \"Load balancing config '\" + lbConfig + \"' is not a CdsConfig\")));\n-      return;\n-    }\n+    checkNotNull(lbConfig, \"missing CDS lb config\");\n     CdsConfig newCdsConfig = (CdsConfig) lbConfig;\n+    logger.log(\n+        XdsLogLevel.INFO,\n+        \"Received CDS lb config: cluster={0}\", newCdsConfig.name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4557e9ce54df9f3c366369ae9a12a2c35d9349b7"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzMjg5Ng==", "bodyText": "Override toString() for ClusterUpdate, then\n\"Received cluster update from xDS client:\\n{0}\", newUpdate", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384132896", "createdAt": "2020-02-25T21:20:42Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/CdsLoadBalancer.java", "diffHunk": "@@ -274,11 +272,16 @@ protected Helper delegate() {\n \n     @Override\n     public void onClusterChanged(ClusterUpdate newUpdate) {\n-      channelLogger.log(\n-          ChannelLogLevel.DEBUG, \"CDS load balancer received a cluster update: {0}\",  newUpdate);\n+      if (logger.isLoggable(XdsLogLevel.INFO)) {\n+        logger.log(\n+            XdsLogLevel.INFO,\n+            \"Received cluster update from xDS client {0}: \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4557e9ce54df9f3c366369ae9a12a2c35d9349b7"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzMzg0Mg==", "bodyText": "Override toString() for EndpointUpdate", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384133842", "createdAt": "2020-02-25T21:22:35Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -328,10 +368,17 @@ public void shutdown() {\n \n     @Override\n     public void onEndpointChanged(EndpointUpdate endpointUpdate) {\n-      channelLogger.log(\n-          ChannelLogLevel.DEBUG,\n-          \"EDS load balancer received an endpoint update: {0}\",\n-          endpointUpdate);\n+      logger.log(XdsLogLevel.DEBUG, \"Received endpoint update: {0}\", endpointUpdate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4557e9ce54df9f3c366369ae9a12a2c35d9349b7"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzNDMzOA==", "bodyText": "Duplicate logging?", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384134338", "createdAt": "2020-02-25T21:23:37Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -328,10 +368,17 @@ public void shutdown() {\n \n     @Override\n     public void onEndpointChanged(EndpointUpdate endpointUpdate) {\n-      channelLogger.log(\n-          ChannelLogLevel.DEBUG,\n-          \"EDS load balancer received an endpoint update: {0}\",\n-          endpointUpdate);\n+      logger.log(XdsLogLevel.DEBUG, \"Received endpoint update: {0}\", endpointUpdate);\n+      if (logger.isLoggable(XdsLogLevel.INFO)) {\n+        logger.log(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4557e9ce54df9f3c366369ae9a12a2c35d9349b7"}, "originalPosition": 204}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzNTE2MA==", "bodyText": "nit: add \\n after :", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384135160", "createdAt": "2020-02-25T21:25:30Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -188,7 +203,7 @@ XdsClient createXdsClient() {\n \n   @Override\n   public void handleNameResolutionError(Status error) {\n-    channelLogger.log(ChannelLogLevel.ERROR, \"Name resolution error: {0}\", error);\n+    logger.log(XdsLogLevel.WARNING, \"Received name resolution error: {0}\", error);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4557e9ce54df9f3c366369ae9a12a2c35d9349b7"}, "originalPosition": 116}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6500ce44bc0702530eaa498f4d446a191feb4261", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/6500ce44bc0702530eaa498f4d446a191feb4261", "committedDate": "2020-02-26T00:55:09Z", "message": "Make log messages for receiving watcher error more informative. Do not print out cause stacktrace."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67df5fee7bf278557145e82a49c4458438876873", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/67df5fee7bf278557145e82a49c4458438876873", "committedDate": "2020-02-26T01:01:41Z", "message": "Merge branch 'master' of github.com:grpc/grpc-java into dev/improve_xds_logging_v2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NTY1MjI3", "url": "https://github.com/grpc/grpc-java/pull/6748#pullrequestreview-364565227", "createdAt": "2020-02-26T01:19:09Z", "commit": {"oid": "67df5fee7bf278557145e82a49c4458438876873"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMToxOTowOVrOFubSew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMToxOTowOVrOFubSew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyNTkxNQ==", "bodyText": "checkNotNull()?", "url": "https://github.com/grpc/grpc-java/pull/6748#discussion_r384225915", "createdAt": "2020-02-26T01:19:09Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -91,29 +92,40 @@\n       LocalityStoreFactory localityStoreFactory,\n       Bootstrapper bootstrapper,\n       XdsChannelFactory channelFactory) {\n-    this.edsLbHelper = edsLbHelper;\n-    this.channelLogger = edsLbHelper.getChannelLogger();\n-    this.resourceUpdateCallback = resourceUpdateCallback;\n-    this.lbRegistry = lbRegistry;\n-    this.localityStoreFactory = localityStoreFactory;\n+    this.edsLbHelper = checkNotNull(edsLbHelper, \"edsLbHelper\");\n+    this.resourceUpdateCallback = checkNotNull(resourceUpdateCallback, \"resourceUpdateCallback\");\n+    this.lbRegistry = checkNotNull(lbRegistry, \"lbRegistry\");\n+    this.localityStoreFactory = checkNotNull(localityStoreFactory, \"localityStoreFactory\");\n+    this.bootstrapper = checkNotNull(bootstrapper, \"bootstrapper\");\n+    this.channelFactory = checkNotNull(channelFactory, \"channelFactory\");\n     this.switchingLoadBalancer = new GracefulSwitchLoadBalancer(edsLbHelper);\n-    this.bootstrapper = bootstrapper;\n-    this.channelFactory = channelFactory;\n+    logId = InternalLogId.allocate(\"eds-lb\", edsLbHelper.getAuthority());\n+    logger = XdsLogger.withLogId(logId);\n+    logger.log(XdsLogLevel.INFO, \"Created\");\n   }\n \n   @Override\n   public void handleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n-    channelLogger.log(ChannelLogLevel.DEBUG, \"Received ResolvedAddresses {0}\", resolvedAddresses);\n-\n+    logger.log(XdsLogLevel.DEBUG, \"Received resolution result: {0}\", resolvedAddresses);\n     Object lbConfig = resolvedAddresses.getLoadBalancingPolicyConfig();\n-    if (!(lbConfig instanceof XdsConfig)) {\n+    if (lbConfig == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67df5fee7bf278557145e82a49c4458438876873"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4603, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}