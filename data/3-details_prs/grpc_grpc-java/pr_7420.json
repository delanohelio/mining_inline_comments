{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1NjQyMzA5", "number": 7420, "title": "xds: throw XdsInitializationException when reading bootstrap file encounters error", "bodyText": "", "createdAt": "2020-09-12T01:46:50Z", "url": "https://github.com/grpc/grpc-java/pull/7420", "merged": true, "mergeCommit": {"oid": "9dd56a7f0f57b59333e0383e8f5f34b717b054b3"}, "closed": true, "closedAt": "2020-09-14T23:26:29Z", "author": {"login": "voidzcy"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdH_9OgAH2gAyNDg1NjQyMzA5OmYyYmEwMDI1NTAxOGNlZWYyODY4Y2YxMThiYTk4NmRkMzZmNTdhMjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdI7rCNAFqTQ4ODIxOTI5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f2ba00255018ceef2868cf118ba986dd36f57a28", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/f2ba00255018ceef2868cf118ba986dd36f57a28", "committedDate": "2020-09-12T01:45:36Z", "message": "Introduce XdsInitializationException."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77", "committedDate": "2020-09-12T01:46:05Z", "message": "Migrate to throw XdsInitializationException when reading bootstrap file fails."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MTkzMDIy", "url": "https://github.com/grpc/grpc-java/pull/7420#pullrequestreview-487193022", "createdAt": "2020-09-12T01:49:09Z", "commit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwMTo0OTowOVrOHQxoTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwMTo0OTowOVrOHQxoTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MjM5OA==", "bodyText": "Btw, this API usage looks bad...  @sanjaypujare", "url": "https://github.com/grpc/grpc-java/pull/7420#discussion_r487352398", "createdAt": "2020-09-12T01:49:09Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/ClientSslContextProviderFactory.java", "diffHunk": "@@ -74,8 +74,8 @@ public SslContextProvider create(UpstreamTlsContext upstreamTlsContext) {\n             upstreamTlsContext,\n             bootstrapper.readBootstrap().getNode().toEnvoyProtoNode(),\n             bootstrapper.readBootstrap().getCertProviders());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzMyMDc4", "url": "https://github.com/grpc/grpc-java/pull/7420#pullrequestreview-487332078", "createdAt": "2020-09-13T19:07:41Z", "commit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxOTowNzo0MVrOHQ-ozw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxOTowNzo0MVrOHQ-ozw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU2NTUxOQ==", "bodyText": "Currently this is being used only for bootstrap errors. Unless you anticipate using this exception in \"XdsClient initialization\" cases how about calling this BootstrapException or BootstrapLoadException?", "url": "https://github.com/grpc/grpc-java/pull/7420#discussion_r487565519", "createdAt": "2020-09-13T19:07:41Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/XdsInitializationException.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+/**\n+ * Throws when fail to bootstrap or initialize the XdsClient.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzMzNTE1", "url": "https://github.com/grpc/grpc-java/pull/7420#pullrequestreview-487333515", "createdAt": "2020-09-13T19:28:59Z", "commit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxOToyODo1OVrOHQ-xJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxOToyODo1OVrOHQ-xJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU2NzY1NA==", "bodyText": "You are not catching ClassCastException here e.g. when JsonParser.parse returns something other than a Map say when the input is [3, 4, 5]. Why not wrap that also in XdsInitializationException?", "url": "https://github.com/grpc/grpc-java/pull/7420#discussion_r487567654", "createdAt": "2020-09-13T19:28:59Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/Bootstrapper.java", "diffHunk": "@@ -74,42 +79,47 @@ public static Bootstrapper getInstance() {\n   /**\n    * Returns configurations from bootstrap.\n    */\n-  public abstract BootstrapInfo readBootstrap() throws IOException;\n+  public abstract BootstrapInfo readBootstrap() throws XdsInitializationException;\n \n   /** Parses a raw string into {@link BootstrapInfo}. */\n   @VisibleForTesting\n-  @SuppressWarnings(\"deprecation\")\n-  public static BootstrapInfo parseConfig(String rawData) throws IOException {\n+  @SuppressWarnings(\"unchecked\")\n+  public static BootstrapInfo parseConfig(String rawData) throws XdsInitializationException {\n     XdsLogger logger = XdsLogger.withPrefix(LOG_PREFIX);\n     logger.log(XdsLogLevel.INFO, \"Reading bootstrap information\");\n-    @SuppressWarnings(\"unchecked\")\n-    Map<String, ?> rawBootstrap = (Map<String, ?>) JsonParser.parse(rawData);\n+    Map<String, ?> rawBootstrap;\n+    try {\n+      rawBootstrap = (Map<String, ?>) JsonParser.parse(rawData);\n+    } catch (IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzMzNjQy", "url": "https://github.com/grpc/grpc-java/pull/7420#pullrequestreview-487333642", "createdAt": "2020-09-13T19:30:52Z", "commit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxOTozMDo1MlrOHQ-yBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxOTozMDo1MlrOHQ-yBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU2Nzg3OQ==", "bodyText": "Unknown server? Saying \"missing server_uri\" seems more accurate.", "url": "https://github.com/grpc/grpc-java/pull/7420#discussion_r487567879", "createdAt": "2020-09-13T19:30:52Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/Bootstrapper.java", "diffHunk": "@@ -74,42 +79,47 @@ public static Bootstrapper getInstance() {\n   /**\n    * Returns configurations from bootstrap.\n    */\n-  public abstract BootstrapInfo readBootstrap() throws IOException;\n+  public abstract BootstrapInfo readBootstrap() throws XdsInitializationException;\n \n   /** Parses a raw string into {@link BootstrapInfo}. */\n   @VisibleForTesting\n-  @SuppressWarnings(\"deprecation\")\n-  public static BootstrapInfo parseConfig(String rawData) throws IOException {\n+  @SuppressWarnings(\"unchecked\")\n+  public static BootstrapInfo parseConfig(String rawData) throws XdsInitializationException {\n     XdsLogger logger = XdsLogger.withPrefix(LOG_PREFIX);\n     logger.log(XdsLogLevel.INFO, \"Reading bootstrap information\");\n-    @SuppressWarnings(\"unchecked\")\n-    Map<String, ?> rawBootstrap = (Map<String, ?>) JsonParser.parse(rawData);\n+    Map<String, ?> rawBootstrap;\n+    try {\n+      rawBootstrap = (Map<String, ?>) JsonParser.parse(rawData);\n+    } catch (IOException e) {\n+      throw new XdsInitializationException(\"Failed to parse JSON\", e);\n+    }\n     logger.log(XdsLogLevel.DEBUG, \"Bootstrap configuration:\\n{0}\", rawBootstrap);\n \n     List<ServerInfo> servers = new ArrayList<>();\n     List<?> rawServerConfigs = JsonUtil.getList(rawBootstrap, \"xds_servers\");\n     if (rawServerConfigs == null) {\n-      throw new IOException(\"Invalid bootstrap: 'xds_servers' does not exist.\");\n+      throw new XdsInitializationException(\"Invalid bootstrap: 'xds_servers' does not exist.\");\n     }\n     logger.log(XdsLogLevel.INFO, \"Configured with {0} xDS servers\", rawServerConfigs.size());\n     List<Map<String, ?>> serverConfigList = JsonUtil.checkObjectList(rawServerConfigs);\n     for (Map<String, ?> serverConfig : serverConfigList) {\n       String serverUri = JsonUtil.getString(serverConfig, \"server_uri\");\n       if (serverUri == null) {\n-        throw new IOException(\"Invalid bootstrap: 'xds_servers' contains unknown server.\");\n+        throw new XdsInitializationException(\n+            \"Invalid bootstrap: 'xds_servers' contains unknown server.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzM0MDA1", "url": "https://github.com/grpc/grpc-java/pull/7420#pullrequestreview-487334005", "createdAt": "2020-09-13T19:36:06Z", "commit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxOTozNjowNlrOHQ-0Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxOTozNjowNlrOHQ-0Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU2ODQ1OQ==", "bodyText": "A general comment for parseConfig: wouldn't it be better to do strictly parsing and schema checks here and do any semantic checks later either as a separate step or where the BootstrapInfo field is consumed? This applies to checks for missing server_uri (this is a gray area I admit), channel creds type etc. That will be cleaner.", "url": "https://github.com/grpc/grpc-java/pull/7420#discussion_r487568459", "createdAt": "2020-09-13T19:36:06Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/Bootstrapper.java", "diffHunk": "@@ -74,42 +79,47 @@ public static Bootstrapper getInstance() {\n   /**\n    * Returns configurations from bootstrap.\n    */\n-  public abstract BootstrapInfo readBootstrap() throws IOException;\n+  public abstract BootstrapInfo readBootstrap() throws XdsInitializationException;\n \n   /** Parses a raw string into {@link BootstrapInfo}. */\n   @VisibleForTesting\n-  @SuppressWarnings(\"deprecation\")\n-  public static BootstrapInfo parseConfig(String rawData) throws IOException {\n+  @SuppressWarnings(\"unchecked\")\n+  public static BootstrapInfo parseConfig(String rawData) throws XdsInitializationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzM0NTQ3", "url": "https://github.com/grpc/grpc-java/pull/7420#pullrequestreview-487334547", "createdAt": "2020-09-13T19:43:58Z", "commit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxOTo0Mzo1OFrOHQ-3jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxOTo0Mzo1OFrOHQ-3jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU2OTI5NQ==", "bodyText": "As mentioned elsewhere, is it possible to cache BootstrapInfo value so this method doesn't reread the file every single time? Or are there use-cases to support this flow?", "url": "https://github.com/grpc/grpc-java/pull/7420#discussion_r487569295", "createdAt": "2020-09-13T19:43:58Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/Bootstrapper.java", "diffHunk": "@@ -53,17 +53,22 @@\n \n   private static final Bootstrapper DEFAULT_INSTANCE = new Bootstrapper() {\n     @Override\n-    public BootstrapInfo readBootstrap() throws IOException {\n+    public BootstrapInfo readBootstrap() throws XdsInitializationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf2514547a1ac4fd7ae17f3cd1e2cb28d3bb77"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5eb22cb30614ffd60372963387e9c0457ccd2d63", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/5eb22cb30614ffd60372963387e9c0457ccd2d63", "committedDate": "2020-09-13T23:05:21Z", "message": "Improve error message."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fb005e94e66d6aac8fc3f0affa0d114c7fb3aef", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/1fb005e94e66d6aac8fc3f0affa0d114c7fb3aef", "committedDate": "2020-09-14T00:42:06Z", "message": "Revert change for catching all exceptions in resolver.start"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjEzMTM0", "url": "https://github.com/grpc/grpc-java/pull/7420#pullrequestreview-488213134", "createdAt": "2020-09-14T23:02:59Z", "commit": {"oid": "1fb005e94e66d6aac8fc3f0affa0d114c7fb3aef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjE5Mjkz", "url": "https://github.com/grpc/grpc-java/pull/7420#pullrequestreview-488219293", "createdAt": "2020-09-14T23:20:02Z", "commit": {"oid": "1fb005e94e66d6aac8fc3f0affa0d114c7fb3aef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4035, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}