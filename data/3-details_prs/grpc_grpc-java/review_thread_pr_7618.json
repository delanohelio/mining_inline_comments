{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NzQ3NDI0", "number": 7618, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjo1NTo0N1rOE4Y--Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjo1NzowMVrOE4ZBMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NTY1MDQ5OnYy", "diffSide": "RIGHT", "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjo1NTo0N1rOHySDJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoyMzo1NFrOHydsfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ4NjU2NA==", "bodyText": "Do your tests need to distinguish between rpcs that have failed (rpcsFailed) versus still pending on the server (latch.getCount())?", "url": "https://github.com/grpc/grpc-java/pull/7618#discussion_r522486564", "createdAt": "2020-11-12T22:55:47Z", "author": {"login": "ericgribkoff"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -565,7 +564,7 @@ LoadBalancerStatsResponse waitForRpcStats(long timeoutSeconds) {\n           rpcs.putAllRpcsByPeer(entry.getValue());\n           builder.putRpcsByMethod(getRpcTypeString(entry.getKey()), rpcs.build());\n         }\n-        builder.setNumFailures(noRemotePeer + (int) latch.getCount());\n+        builder.setNumFailures(rpcsFailed + (int) latch.getCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57461432f3e302ced52c5c3c9480e3082d45a6b3"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ5NDEzOQ==", "bodyText": "Actually, could you clarify exactly what the problem is that you encountered with the current \"wrong\" semantics? (As best I can tell, these are not wrong exactly but made your new tests harder to debug, but maybe there's actually something broken here that I misunderstand). Were you getting failed RPCs that had still received a peer, so they were getting reported under rpcs_by_peer?\nSince this new change still seems to group outstanding RPCs into num_failures, I don't see how this semantics change directly helps debug any tests with RPCs that are kept-open indefinitely by the server. Unless these end up timing out on the client and then get reported as DEADLINE_EXECEEDED? Even so, that's dependent on the parameters (client-side time out and number of seconds to wait when querying the stats service) and may not always occur. Should this change should also remove latch.getCount() from the reported numberOfFailures?", "url": "https://github.com/grpc/grpc-java/pull/7618#discussion_r522494139", "createdAt": "2020-11-12T23:12:27Z", "author": {"login": "ericgribkoff"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -565,7 +564,7 @@ LoadBalancerStatsResponse waitForRpcStats(long timeoutSeconds) {\n           rpcs.putAllRpcsByPeer(entry.getValue());\n           builder.putRpcsByMethod(getRpcTypeString(entry.getKey()), rpcs.build());\n         }\n-        builder.setNumFailures(noRemotePeer + (int) latch.getCount());\n+        builder.setNumFailures(rpcsFailed + (int) latch.getCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ4NjU2NA=="}, "originalCommit": {"oid": "57461432f3e302ced52c5c3c9480e3082d45a6b3"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxNjI3Nw==", "bodyText": "None of the tests depend on distinguishing rpcs have failed vs pending on the server. This change is just trying to make  it less ambiguous. It is extremely confusing and error-prone for defining rpcs_by_peer to be the number of completed RPCs for each peers. \"completed RPCs\" is ambiguous here, as it includes both RPCs failed after reaching the server (e.g., DEADLINE_EXECEEDED) and RPCs finished successfully. The definition for num_failures is also error-prone, as its comment says it is for RPCs that failed to record a remote peer. RPCs failed after reaching the server do not account for num_failures, which is very surprising, isn't it?\nIn the new LoadBalancerAccumulatedStatsResponse, it clearly states the stats are for RPCs failed (no matter how they fails, finishing with onError() is considered as failure) and RPCs completed successfully. For the same batch of RPCs failed with DEADLINE_EXECEEDED, you will see LoadBalancerStatsResponse counts them as completed but LoadBalancerAccumulatedStatsResponse counts them as failed. \ud83d\ude22\nRegarding RPCs not finished in upon GetClientStats call times out, previously they are considered \"completed\" but now being \"failed\". Both are not satisfactory (with the latter less error-prone I think?), we can change it to not count them towards either. Still no existing tests should be affected.", "url": "https://github.com/grpc/grpc-java/pull/7618#discussion_r522516277", "createdAt": "2020-11-12T23:57:02Z", "author": {"login": "voidzcy"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -565,7 +564,7 @@ LoadBalancerStatsResponse waitForRpcStats(long timeoutSeconds) {\n           rpcs.putAllRpcsByPeer(entry.getValue());\n           builder.putRpcsByMethod(getRpcTypeString(entry.getKey()), rpcs.build());\n         }\n-        builder.setNumFailures(noRemotePeer + (int) latch.getCount());\n+        builder.setNumFailures(rpcsFailed + (int) latch.getCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ4NjU2NA=="}, "originalCommit": {"oid": "57461432f3e302ced52c5c3c9480e3082d45a6b3"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU5MTQxNA==", "bodyText": "The change here is good (that's why I approved) but I think it should go further and not include the number of pending RPCs in num_failures. As far as I can tell, with latch.getCount() still included in the num_failures response, the change in messages.proto's description of num_failures is not actually accurate: num_failures is actually being computed as the number of RPCs that failed + pending RPCs. I think we should just drop latch.getCount() here, and then num_failures=Number of failed RPCs", "url": "https://github.com/grpc/grpc-java/pull/7618#discussion_r522591414", "createdAt": "2020-11-13T03:30:22Z", "author": {"login": "ericgribkoff"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -565,7 +564,7 @@ LoadBalancerStatsResponse waitForRpcStats(long timeoutSeconds) {\n           rpcs.putAllRpcsByPeer(entry.getValue());\n           builder.putRpcsByMethod(getRpcTypeString(entry.getKey()), rpcs.build());\n         }\n-        builder.setNumFailures(noRemotePeer + (int) latch.getCount());\n+        builder.setNumFailures(rpcsFailed + (int) latch.getCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ4NjU2NA=="}, "originalCommit": {"oid": "57461432f3e302ced52c5c3c9480e3082d45a6b3"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NzM3Mg==", "bodyText": "Done.", "url": "https://github.com/grpc/grpc-java/pull/7618#discussion_r522677372", "createdAt": "2020-11-13T06:23:54Z", "author": {"login": "voidzcy"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -565,7 +564,7 @@ LoadBalancerStatsResponse waitForRpcStats(long timeoutSeconds) {\n           rpcs.putAllRpcsByPeer(entry.getValue());\n           builder.putRpcsByMethod(getRpcTypeString(entry.getKey()), rpcs.build());\n         }\n-        builder.setNumFailures(noRemotePeer + (int) latch.getCount());\n+        builder.setNumFailures(rpcsFailed + (int) latch.getCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ4NjU2NA=="}, "originalCommit": {"oid": "57461432f3e302ced52c5c3c9480e3082d45a6b3"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NTY1NjE3OnYy", "diffSide": "RIGHT", "path": "interop-testing/src/main/proto/grpc/testing/messages.proto", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjo1NzowMVrOHySGrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoyNDoyMlrOHyds7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ4NzQ2OA==", "bodyText": "Just \"The number of RPCs that failed\" would seem to be enough here.\nWe then also want to change line 194 to say \"The number of successful RPCs for each peer\", right? (AFAICT this change also drops the distribution of errors, which is fine since nothing is relying on that but the comment string should make that clear)", "url": "https://github.com/grpc/grpc-java/pull/7618#discussion_r522487468", "createdAt": "2020-11-12T22:57:01Z", "author": {"login": "ericgribkoff"}, "path": "interop-testing/src/main/proto/grpc/testing/messages.proto", "diffHunk": "@@ -193,7 +193,8 @@ message LoadBalancerStatsRequest {\n message LoadBalancerStatsResponse {\n   // The number of completed RPCs for each peer.\n   map<string, int32> rpcs_by_peer = 1;\n-  // The number of RPCs that failed to record a remote peer.\n+  // The number of RPCs that failed. Either failed on the client before being", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57461432f3e302ced52c5c3c9480e3082d45a6b3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NzQ4NA==", "bodyText": "Updated all relevant comments.", "url": "https://github.com/grpc/grpc-java/pull/7618#discussion_r522677484", "createdAt": "2020-11-13T06:24:22Z", "author": {"login": "voidzcy"}, "path": "interop-testing/src/main/proto/grpc/testing/messages.proto", "diffHunk": "@@ -193,7 +193,8 @@ message LoadBalancerStatsRequest {\n message LoadBalancerStatsResponse {\n   // The number of completed RPCs for each peer.\n   map<string, int32> rpcs_by_peer = 1;\n-  // The number of RPCs that failed to record a remote peer.\n+  // The number of RPCs that failed. Either failed on the client before being", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ4NzQ2OA=="}, "originalCommit": {"oid": "57461432f3e302ced52c5c3c9480e3082d45a6b3"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2291, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}