{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTkyMzc0", "number": 6948, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo1NDoyNlrODz2cWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjozNjozNFrODz8_PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Njk1OTYxOnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo1NDoyNlrOGIgogw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMTo0MjoyNVrOGIo6VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3NjQ1MQ==", "bodyText": "it looks like source can be UpstreamTlsContext, what makes this safe?", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411576451", "createdAt": "2020-04-20T17:54:26Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "diffHunk": "@@ -66,6 +73,21 @@ CommonTlsContext getCommonTlsContext() {\n     return null;\n   }\n \n+  protected void setClientAuthValues(\n+      SslContextBuilder sslContextBuilder, CertificateValidationContext localCertValidationContext)\n+      throws CertificateException, IOException, CertStoreException {\n+    if (localCertValidationContext != null) {\n+      sslContextBuilder.trustManager(new SdsTrustManagerFactory(localCertValidationContext));\n+      DownstreamTlsContext downstreamTlsContext = (DownstreamTlsContext) getSource();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1972757680342345f8ad6fc13823316651f0198f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxMjA4NA==", "bodyText": "added checks in SslContextProvider constructor and also in this method", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411712084", "createdAt": "2020-04-20T21:42:25Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "diffHunk": "@@ -66,6 +73,21 @@ CommonTlsContext getCommonTlsContext() {\n     return null;\n   }\n \n+  protected void setClientAuthValues(\n+      SslContextBuilder sslContextBuilder, CertificateValidationContext localCertValidationContext)\n+      throws CertificateException, IOException, CertStoreException {\n+    if (localCertValidationContext != null) {\n+      sslContextBuilder.trustManager(new SdsTrustManagerFactory(localCertValidationContext));\n+      DownstreamTlsContext downstreamTlsContext = (DownstreamTlsContext) getSource();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3NjQ1MQ=="}, "originalCommit": {"oid": "1972757680342345f8ad6fc13823316651f0198f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Njk5MDY0OnYy", "diffSide": "RIGHT", "path": "xds/src/test/java/io/grpc/xds/internal/sds/CommonTlsContextTestsUtil.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODowMTo0MVrOGIg7Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMTo0NTozN1rOGIpAxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTIxMQ==", "bodyText": "consider make a 2 methods sets requirClientCert and make this method private. so existing test doesn't need to be modified. although name is already long, this can be more descriptive.", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411581211", "createdAt": "2020-04-20T18:01:41Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/internal/sds/CommonTlsContextTestsUtil.java", "diffHunk": "@@ -170,7 +174,10 @@ static String getTempFileNameForResourcesFile(String resFile) throws IOException\n    * Helper method to build DownstreamTlsContext for above tests. Called from other classes as well.\n    */\n   public static DownstreamTlsContext buildDownstreamTlsContextFromFilenames(\n-      @Nullable String privateKey, @Nullable String certChain, @Nullable String trustCa) {\n+      @Nullable String privateKey,\n+      @Nullable String certChain,\n+      @Nullable String trustCa,\n+      boolean requireClientCert) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1972757680342345f8ad6fc13823316651f0198f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY4ODM1OQ==", "bodyText": "So you are suggesting 2 (public) methods like\nbuildDownstreamTlsContextFromFilenames\nbuildDownstreamTlsContextFromFilenamesRequireClientCert\n\ncalling this method with requireClientCert=false and requireClientCert=true respectively (and make this one private)?", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411688359", "createdAt": "2020-04-20T20:59:45Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/test/java/io/grpc/xds/internal/sds/CommonTlsContextTestsUtil.java", "diffHunk": "@@ -170,7 +174,10 @@ static String getTempFileNameForResourcesFile(String resFile) throws IOException\n    * Helper method to build DownstreamTlsContext for above tests. Called from other classes as well.\n    */\n   public static DownstreamTlsContext buildDownstreamTlsContextFromFilenames(\n-      @Nullable String privateKey, @Nullable String certChain, @Nullable String trustCa) {\n+      @Nullable String privateKey,\n+      @Nullable String certChain,\n+      @Nullable String trustCa,\n+      boolean requireClientCert) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTIxMQ=="}, "originalCommit": {"oid": "1972757680342345f8ad6fc13823316651f0198f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxMjIwNw==", "bodyText": "changes made.", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411712207", "createdAt": "2020-04-20T21:42:41Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/test/java/io/grpc/xds/internal/sds/CommonTlsContextTestsUtil.java", "diffHunk": "@@ -170,7 +174,10 @@ static String getTempFileNameForResourcesFile(String resFile) throws IOException\n    * Helper method to build DownstreamTlsContext for above tests. Called from other classes as well.\n    */\n   public static DownstreamTlsContext buildDownstreamTlsContextFromFilenames(\n-      @Nullable String privateKey, @Nullable String certChain, @Nullable String trustCa) {\n+      @Nullable String privateKey,\n+      @Nullable String certChain,\n+      @Nullable String trustCa,\n+      boolean requireClientCert) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTIxMQ=="}, "originalCommit": {"oid": "1972757680342345f8ad6fc13823316651f0198f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxMzczNQ==", "bodyText": "yes", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411713735", "createdAt": "2020-04-20T21:45:37Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/internal/sds/CommonTlsContextTestsUtil.java", "diffHunk": "@@ -170,7 +174,10 @@ static String getTempFileNameForResourcesFile(String resFile) throws IOException\n    * Helper method to build DownstreamTlsContext for above tests. Called from other classes as well.\n    */\n   public static DownstreamTlsContext buildDownstreamTlsContextFromFilenames(\n-      @Nullable String privateKey, @Nullable String certChain, @Nullable String trustCa) {\n+      @Nullable String privateKey,\n+      @Nullable String certChain,\n+      @Nullable String trustCa,\n+      boolean requireClientCert) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MTIxMQ=="}, "originalCommit": {"oid": "1972757680342345f8ad6fc13823316651f0198f"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Nzg3MTMyOnYy", "diffSide": "RIGHT", "path": "xds/src/test/java/io/grpc/xds/internal/sds/SecretVolumeSslContextProviderTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMTo0Njo0NVrOGIpC_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjowMDowNFrOGIpdcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxNDMwMg==", "bodyText": "we don't need those changes anymore.", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411714302", "createdAt": "2020-04-20T21:46:45Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/internal/sds/SecretVolumeSslContextProviderTest.java", "diffHunk": "@@ -274,7 +274,8 @@ public void getProviderForServer_defaultTlsCertificate_throwsException() {\n     try {\n       SecretVolumeSslContextProvider.getProviderForServer(\n           CommonTlsContextTestsUtil.buildDownstreamTlsContext(\n-              CommonTlsContextTestsUtil.getCommonTlsContext(tlsCert, /* certContext= */ null)));\n+              CommonTlsContextTestsUtil.getCommonTlsContext(tlsCert, /* certContext= */ null),\n+              /* requireClientCert= */ false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c33c4b5e6ee66d46fc329bd1ee120d7103efd7cb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxNzQ0MA==", "bodyText": "this is a different one. This one doesn't take filenames but just a CommonTlsContext and the new bool. I could have created the same 2 methods here too but this is not so widely used", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411717440", "createdAt": "2020-04-20T21:52:53Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/test/java/io/grpc/xds/internal/sds/SecretVolumeSslContextProviderTest.java", "diffHunk": "@@ -274,7 +274,8 @@ public void getProviderForServer_defaultTlsCertificate_throwsException() {\n     try {\n       SecretVolumeSslContextProvider.getProviderForServer(\n           CommonTlsContextTestsUtil.buildDownstreamTlsContext(\n-              CommonTlsContextTestsUtil.getCommonTlsContext(tlsCert, /* certContext= */ null)));\n+              CommonTlsContextTestsUtil.getCommonTlsContext(tlsCert, /* certContext= */ null),\n+              /* requireClientCert= */ false));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxNDMwMg=="}, "originalCommit": {"oid": "c33c4b5e6ee66d46fc329bd1ee120d7103efd7cb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyMTA3Mw==", "bodyText": "oops okay, ideally passing boolean param is not recommended if can avoid. but this one is not that bad.", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411721073", "createdAt": "2020-04-20T22:00:04Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/internal/sds/SecretVolumeSslContextProviderTest.java", "diffHunk": "@@ -274,7 +274,8 @@ public void getProviderForServer_defaultTlsCertificate_throwsException() {\n     try {\n       SecretVolumeSslContextProvider.getProviderForServer(\n           CommonTlsContextTestsUtil.buildDownstreamTlsContext(\n-              CommonTlsContextTestsUtil.getCommonTlsContext(tlsCert, /* certContext= */ null)));\n+              CommonTlsContextTestsUtil.getCommonTlsContext(tlsCert, /* certContext= */ null),\n+              /* requireClientCert= */ false));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxNDMwMg=="}, "originalCommit": {"oid": "c33c4b5e6ee66d46fc329bd1ee120d7103efd7cb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1ODAzMTk3OnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjozNjozNFrOGIqeXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzowMjo1M1rOGIrKFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczNzY5Mg==", "bodyText": "nit: should have a meaningful message.\nbtw, this class is rather confusing (and errorprone). it should be split into 2 different classes (server and client). can it be done? how hard to change?", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411737692", "createdAt": "2020-04-20T22:36:34Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "diffHunk": "@@ -66,6 +79,22 @@ CommonTlsContext getCommonTlsContext() {\n     return null;\n   }\n \n+  protected void setClientAuthValues(\n+      SslContextBuilder sslContextBuilder, CertificateValidationContext localCertValidationContext)\n+      throws CertificateException, IOException, CertStoreException {\n+    checkState(server);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc142a1cb8cc7a11a5b5f444c8a02d0120bb0269"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0NDY2MA==", "bodyText": "We had this discussion before. UpstreamTlsContext and DownstreamTlsContext are quite similar but there is no common abstraction to use. So I ended up using the generic K to eliminate code duplication. Splitting into server & client classes is definitely possible but I suspect there will be code duplication. Do you have better ideas?", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411744660", "createdAt": "2020-04-20T22:52:40Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "diffHunk": "@@ -66,6 +79,22 @@ CommonTlsContext getCommonTlsContext() {\n     return null;\n   }\n \n+  protected void setClientAuthValues(\n+      SslContextBuilder sslContextBuilder, CertificateValidationContext localCertValidationContext)\n+      throws CertificateException, IOException, CertStoreException {\n+    checkState(server);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczNzY5Mg=="}, "originalCommit": {"oid": "dc142a1cb8cc7a11a5b5f444c8a02d0120bb0269"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0NzA5OA==", "bodyText": "Yeah i thought we discussed this before.\ni think code dup is better than error prone / confusing nature of current structure. we can still  share some code as static or protected in parent method.", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411747098", "createdAt": "2020-04-20T22:58:32Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "diffHunk": "@@ -66,6 +79,22 @@ CommonTlsContext getCommonTlsContext() {\n     return null;\n   }\n \n+  protected void setClientAuthValues(\n+      SslContextBuilder sslContextBuilder, CertificateValidationContext localCertValidationContext)\n+      throws CertificateException, IOException, CertStoreException {\n+    checkState(server);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczNzY5Mg=="}, "originalCommit": {"oid": "dc142a1cb8cc7a11a5b5f444c8a02d0120bb0269"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0ODg4Nw==", "bodyText": "Okay I will add a TODO for this suggestion and in the list of pending PRs", "url": "https://github.com/grpc/grpc-java/pull/6948#discussion_r411748887", "createdAt": "2020-04-20T23:02:53Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "diffHunk": "@@ -66,6 +79,22 @@ CommonTlsContext getCommonTlsContext() {\n     return null;\n   }\n \n+  protected void setClientAuthValues(\n+      SslContextBuilder sslContextBuilder, CertificateValidationContext localCertValidationContext)\n+      throws CertificateException, IOException, CertStoreException {\n+    checkState(server);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczNzY5Mg=="}, "originalCommit": {"oid": "dc142a1cb8cc7a11a5b5f444c8a02d0120bb0269"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2811, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}