{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NDkxMDM1", "number": 7548, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNjoxNDowOVrOExeXaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNjoxNDowOVrOExeXaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMzEzMTkyOnYy", "diffSide": "RIGHT", "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNjoxNDowOVrOHno45w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzo0NDo1M1rOHoDuaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyNjQzOQ==", "bodyText": "I don't see how the keepOpen atomic's value is correlated with this call after this interceptor sets it to true.\nMy reading of the spec for these tests was that, for an incoming call with keep-open in the metadata, that call should be kept open by the server. As I understand the code here, instead any call with keep-open in the metadata essentially flips a global boolean and all calls from that point on will be kept open (at least until another RPC comes without keep-open). Is that intended?\nTo set a value that would instead be scoped to this particular call, I think you could set a value in the context, as in https://github.com/GoogleCloudPlatform/traffic-director-grpc-examples/blob/master/java/src/main/java/io/grpc/examples/wallet/WalletInterceptors.java#L106 (there might be a better way to accomplish this)", "url": "https://github.com/grpc/grpc-java/pull/7548#discussion_r511326439", "createdAt": "2020-10-24T06:14:09Z", "author": {"login": "ericgribkoff"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "diffHunk": "@@ -203,18 +214,22 @@ public void setNotServing(\n     }\n   }\n \n-  private static class HostnameInterceptor implements ServerInterceptor {\n+  private static class TestInfoInterceptor implements ServerInterceptor {\n     private final String host;\n+    private final AtomicBoolean keepOpenCaptor;\n \n-    private HostnameInterceptor(String host) {\n+    private TestInfoInterceptor(String host, AtomicBoolean keepOpenCaptor) {\n       this.host = host;\n+      this.keepOpenCaptor = keepOpenCaptor;\n     }\n \n     @Override\n     public <ReqT, RespT> ServerCall.Listener<ReqT> interceptCall(\n         ServerCall<ReqT, RespT> call,\n         final Metadata requestHeaders,\n         ServerCallHandler<ReqT, RespT> next) {\n+      String callBehavior = requestHeaders.get(CALL_BEHAVIOR_KEY);\n+      keepOpenCaptor.set(\"keep-open\".equals(callBehavior));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de84e5afdbcb03029ae5ef0b410ba6aadec19a9b"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM2NDMzNQ==", "bodyText": "Oops, you are right. This is screwed up, I was too focused on how the test case will be running, in which all calls will be open after some point of time.", "url": "https://github.com/grpc/grpc-java/pull/7548#discussion_r511364335", "createdAt": "2020-10-24T09:35:45Z", "author": {"login": "voidzcy"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "diffHunk": "@@ -203,18 +214,22 @@ public void setNotServing(\n     }\n   }\n \n-  private static class HostnameInterceptor implements ServerInterceptor {\n+  private static class TestInfoInterceptor implements ServerInterceptor {\n     private final String host;\n+    private final AtomicBoolean keepOpenCaptor;\n \n-    private HostnameInterceptor(String host) {\n+    private TestInfoInterceptor(String host, AtomicBoolean keepOpenCaptor) {\n       this.host = host;\n+      this.keepOpenCaptor = keepOpenCaptor;\n     }\n \n     @Override\n     public <ReqT, RespT> ServerCall.Listener<ReqT> interceptCall(\n         ServerCall<ReqT, RespT> call,\n         final Metadata requestHeaders,\n         ServerCallHandler<ReqT, RespT> next) {\n+      String callBehavior = requestHeaders.get(CALL_BEHAVIOR_KEY);\n+      keepOpenCaptor.set(\"keep-open\".equals(callBehavior));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyNjQzOQ=="}, "originalCommit": {"oid": "de84e5afdbcb03029ae5ef0b410ba6aadec19a9b"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc2NjEyMw==", "bodyText": "Should be fixed now.", "url": "https://github.com/grpc/grpc-java/pull/7548#discussion_r511766123", "createdAt": "2020-10-26T07:44:53Z", "author": {"login": "voidzcy"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "diffHunk": "@@ -203,18 +214,22 @@ public void setNotServing(\n     }\n   }\n \n-  private static class HostnameInterceptor implements ServerInterceptor {\n+  private static class TestInfoInterceptor implements ServerInterceptor {\n     private final String host;\n+    private final AtomicBoolean keepOpenCaptor;\n \n-    private HostnameInterceptor(String host) {\n+    private TestInfoInterceptor(String host, AtomicBoolean keepOpenCaptor) {\n       this.host = host;\n+      this.keepOpenCaptor = keepOpenCaptor;\n     }\n \n     @Override\n     public <ReqT, RespT> ServerCall.Listener<ReqT> interceptCall(\n         ServerCall<ReqT, RespT> call,\n         final Metadata requestHeaders,\n         ServerCallHandler<ReqT, RespT> next) {\n+      String callBehavior = requestHeaders.get(CALL_BEHAVIOR_KEY);\n+      keepOpenCaptor.set(\"keep-open\".equals(callBehavior));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyNjQzOQ=="}, "originalCommit": {"oid": "de84e5afdbcb03029ae5ef0b410ba6aadec19a9b"}, "originalPosition": 87}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2234, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}