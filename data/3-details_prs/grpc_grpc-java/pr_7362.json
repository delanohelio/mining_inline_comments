{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNjYyNzU1", "number": 7362, "title": "core: fix pending call not drained when shutdown", "bodyText": "There was bug that new pending calls were not drained after channel is shutdown. The bug was worked around by #7354 .\nFixing by making sure new calls fail immediately if the channel is already shutdown.\nThe tests added will be breaking if #7354 is simply reverted without fix.", "createdAt": "2020-08-26T05:47:43Z", "url": "https://github.com/grpc/grpc-java/pull/7362", "merged": true, "mergeCommit": {"oid": "1411e6f61e6e2d3e7f846b8d89bc8926617bf0dc"}, "closed": true, "closedAt": "2020-09-10T00:47:11Z", "author": {"login": "dapengzhang0"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCveDhgH2gAyNDczNjYyNzU1OmE1MzhhNGZkY2MwY2M0NGI5MmU4NWZkYWM3ZTczMTJlNTQ3ZjczZmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHUugMAFqTQ4NTQ2NjkxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a538a4fdcc0cc44b92e85fdac7e7312e547f73fd", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/a538a4fdcc0cc44b92e85fdac7e7312e547f73fd", "committedDate": "2020-08-26T17:43:27Z", "message": "core: fix pending call not drained when shutdown without resolution"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "998118d5fd5589e6c07525ba80b8f093c071291e", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/998118d5fd5589e6c07525ba80b8f093c071291e", "committedDate": "2020-08-26T05:41:18Z", "message": "core: fix pending call not drained when shutdown without resolution"}, "afterCommit": {"oid": "a538a4fdcc0cc44b92e85fdac7e7312e547f73fd", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/a538a4fdcc0cc44b92e85fdac7e7312e547f73fd", "committedDate": "2020-08-26T17:43:27Z", "message": "core: fix pending call not drained when shutdown without resolution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca7125ed3da21820ac9abbbf21c3c95aa6e15a0d", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/ca7125ed3da21820ac9abbbf21c3c95aa6e15a0d", "committedDate": "2020-08-26T17:51:38Z", "message": "improve tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NzQ3NDMx", "url": "https://github.com/grpc/grpc-java/pull/7362#pullrequestreview-475747431", "createdAt": "2020-08-26T18:25:28Z", "commit": {"oid": "ca7125ed3da21820ac9abbbf21c3c95aa6e15a0d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f3750ecaf2294b6d12e3ec29ef7aa1a28c09523", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/5f3750ecaf2294b6d12e3ec29ef7aa1a28c09523", "committedDate": "2020-08-26T18:52:23Z", "message": "drain pendingCalls at channel.shutdown()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbed6173ce79c44c50de03c4dd03b4f13d4f3676", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/fbed6173ce79c44c50de03c4dd03b4f13d4f3676", "committedDate": "2020-08-26T18:47:37Z", "message": "drain pendingCalls at channel.shutdown()"}, "afterCommit": {"oid": "5f3750ecaf2294b6d12e3ec29ef7aa1a28c09523", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/5f3750ecaf2294b6d12e3ec29ef7aa1a28c09523", "committedDate": "2020-08-26T18:52:23Z", "message": "drain pendingCalls at channel.shutdown()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a686c825039e6101efabc1cd535a5cbb721417b4", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/a686c825039e6101efabc1cd535a5cbb721417b4", "committedDate": "2020-08-27T04:00:00Z", "message": "pendingCalls prevent uncommittedRetriableStreams.onShutdown()"}, "afterCommit": {"oid": "6dbb93d08ca70d2807397de5a17d3a1dd7ce5039", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/6dbb93d08ca70d2807397de5a17d3a1dd7ce5039", "committedDate": "2020-08-27T04:12:29Z", "message": "pendingCalls prevent uncommittedRetriableStreams.onShutdown()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30ef1f13fbe191c2ce99339dddea91e5c5eb2807", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/30ef1f13fbe191c2ce99339dddea91e5c5eb2807", "committedDate": "2020-08-27T04:18:11Z", "message": "pendingCalls prevent uncommittedRetriableStreams.onShutdown()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6dbb93d08ca70d2807397de5a17d3a1dd7ce5039", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/6dbb93d08ca70d2807397de5a17d3a1dd7ce5039", "committedDate": "2020-08-27T04:12:29Z", "message": "pendingCalls prevent uncommittedRetriableStreams.onShutdown()"}, "afterCommit": {"oid": "30ef1f13fbe191c2ce99339dddea91e5c5eb2807", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/30ef1f13fbe191c2ce99339dddea91e5c5eb2807", "committedDate": "2020-08-27T04:18:11Z", "message": "pendingCalls prevent uncommittedRetriableStreams.onShutdown()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "135f4e477eb1d53fcc975c75b64d8b96075b752e", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/135f4e477eb1d53fcc975c75b64d8b96075b752e", "committedDate": "2020-09-08T21:57:08Z", "message": "move shutdown() & shutdownNow() to RealChannel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "879dd06285349cc121e16a426401b3c7931b25a6", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/879dd06285349cc121e16a426401b3c7931b25a6", "committedDate": "2020-09-08T21:59:07Z", "message": "simplify PendingCallRemoval"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MTIzOTQ5", "url": "https://github.com/grpc/grpc-java/pull/7362#pullrequestreview-485123949", "createdAt": "2020-09-09T15:21:56Z", "commit": {"oid": "879dd06285349cc121e16a426401b3c7931b25a6"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNToyMTo1N1rOHPMrKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoxOTozNFrOHPPbWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY5ODM0Ng==", "bodyText": "No, this should remain here. And I think the shutdown.compareAndSet() should likely stay here as well. I don't want the RealChannel to manage the wider ManagedChannel API.\nI'd much rather RealChannel make one-two calls to shutdown instead of taking control over it itself, since there's lots of existing uses. Even if we have to assume that shutdown.compareAndSet is the first thing done in the shutdown process.", "url": "https://github.com/grpc/grpc-java/pull/7362#discussion_r485698346", "createdAt": "2020-09-09T15:21:57Z", "author": {"login": "ejona86"}, "path": "core/src/main/java/io/grpc/internal/ManagedChannelImpl.java", "diffHunk": "@@ -770,25 +770,8 @@ InternalConfigSelector getConfigSelector() {\n   @Override\n   public ManagedChannelImpl shutdown() {\n     channelLogger.log(ChannelLogLevel.DEBUG, \"shutdown() called\");\n-    if (!shutdown.compareAndSet(false, true)) {\n-      return this;\n-    }\n+    realChannel.shutdown();\n \n-    // Put gotoState(SHUTDOWN) as early into the syncContext's queue as possible.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879dd06285349cc121e16a426401b3c7931b25a6"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTczODMzMw==", "bodyText": "Why have this block of code? Won't the Shutdown Runnable do the same thing? Ditto for shutdownNow.", "url": "https://github.com/grpc/grpc-java/pull/7362#discussion_r485738333", "createdAt": "2020-09-09T16:13:48Z", "author": {"login": "ejona86"}, "path": "core/src/main/java/io/grpc/internal/ManagedChannelImpl.java", "diffHunk": "@@ -955,6 +940,80 @@ public void run() {\n       return pendingCall;\n     }\n \n+    // Must run in SynchronizationContext.\n+    private void drainPendingCalls() {\n+      if (pendingCalls == null) {\n+        return;\n+      }\n+      for (RealChannel.PendingCall<?, ?> pendingCall : pendingCalls) {\n+        pendingCall.reprocess();\n+      }\n+    }\n+\n+    void shutdown() {\n+      if (!shutdown.compareAndSet(false, true)) {\n+        return;\n+      }\n+      // Put gotoState(SHUTDOWN) as early into the syncContext's queue as possible.\n+      // delayedTransport.shutdown() may also add some tasks into the queue. But some things inside\n+      // delayedTransport.shutdown() like setting delayedTransport.shutdown = true are not run in\n+      // the syncContext's queue and should not be blocked, so we do not drain() immediately here.\n+      syncContext.executeLater(new Runnable() {\n+        @Override\n+        public void run() {\n+          channelLogger.log(ChannelLogLevel.INFO, \"Entering SHUTDOWN state\");\n+          channelStateManager.gotoState(SHUTDOWN);\n+        }\n+      });\n+      if (configSelector.get() != INITIAL_PENDING_SELECTOR && pendingCalls == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879dd06285349cc121e16a426401b3c7931b25a6"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0MzQ0OQ==", "bodyText": "Why isn't this called unconditionally?", "url": "https://github.com/grpc/grpc-java/pull/7362#discussion_r485743449", "createdAt": "2020-09-09T16:19:34Z", "author": {"login": "ejona86"}, "path": "core/src/main/java/io/grpc/internal/ManagedChannelImpl.java", "diffHunk": "@@ -955,6 +940,80 @@ public void run() {\n       return pendingCall;\n     }\n \n+    // Must run in SynchronizationContext.\n+    private void drainPendingCalls() {\n+      if (pendingCalls == null) {\n+        return;\n+      }\n+      for (RealChannel.PendingCall<?, ?> pendingCall : pendingCalls) {\n+        pendingCall.reprocess();\n+      }\n+    }\n+\n+    void shutdown() {\n+      if (!shutdown.compareAndSet(false, true)) {\n+        return;\n+      }\n+      // Put gotoState(SHUTDOWN) as early into the syncContext's queue as possible.\n+      // delayedTransport.shutdown() may also add some tasks into the queue. But some things inside\n+      // delayedTransport.shutdown() like setting delayedTransport.shutdown = true are not run in\n+      // the syncContext's queue and should not be blocked, so we do not drain() immediately here.\n+      syncContext.executeLater(new Runnable() {\n+        @Override\n+        public void run() {\n+          channelLogger.log(ChannelLogLevel.INFO, \"Entering SHUTDOWN state\");\n+          channelStateManager.gotoState(SHUTDOWN);\n+        }\n+      });\n+      if (configSelector.get() != INITIAL_PENDING_SELECTOR && pendingCalls == null) {\n+        uncommittedRetriableStreamsRegistry.onShutdown(SHUTDOWN_STATUS);\n+        syncContext.drain();\n+        return;\n+      }\n+\n+      final class Shutdown implements Runnable {\n+        @Override\n+        public void run() {\n+          if (pendingCalls == null) {\n+            if (configSelector.get() == INITIAL_PENDING_SELECTOR) {\n+              configSelector.set(null);\n+            }\n+            uncommittedRetriableStreamsRegistry.onShutdown(SHUTDOWN_STATUS);\n+          }\n+        }\n+      }\n+\n+      syncContext.execute(new Shutdown());\n+    }\n+\n+    void shutdownNow() {\n+      if (configSelector.get() != INITIAL_PENDING_SELECTOR && pendingCalls == null) {\n+        uncommittedRetriableStreamsRegistry.onShutdownNow(SHUTDOWN_NOW_STATUS);\n+      }\n+      final class ShutdownNow implements Runnable {\n+        @Override\n+        public void run() {\n+          if (shutdownNowed) {\n+            return;\n+          }\n+          shutdownNowed = true;\n+          if (configSelector.get() == INITIAL_PENDING_SELECTOR) {\n+            configSelector.set(null);\n+          }\n+          if (pendingCalls == null) {\n+            uncommittedRetriableStreamsRegistry.onShutdownNow(SHUTDOWN_NOW_STATUS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879dd06285349cc121e16a426401b3c7931b25a6"}, "originalPosition": 179}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcd556c0cef3bd10d7fcc601fc1996907e6e8370", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/fcd556c0cef3bd10d7fcc601fc1996907e6e8370", "committedDate": "2020-09-09T16:51:47Z", "message": "unconditionally uncommittedRetriableStreamsRegistry.onShutdownNow()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87569cf855992a5df9328fe565fd1b01c42b4cdc", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/87569cf855992a5df9328fe565fd1b01c42b4cdc", "committedDate": "2020-09-09T16:57:30Z", "message": "move shutdown.compareAndSet() to outer class shutdown()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b76180d3c02d22ff41b92d44fc01a6ac9ff5ce2", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/2b76180d3c02d22ff41b92d44fc01a6ac9ff5ce2", "committedDate": "2020-09-09T17:54:22Z", "message": "remove fast path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d34cb2548a341f72c9a86b9850442cd0df7017c", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/8d34cb2548a341f72c9a86b9850442cd0df7017c", "committedDate": "2020-09-09T18:00:41Z", "message": "reformat"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b36f8403a4ebd1477bab7502b2b48f8d8a729d9e", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/b36f8403a4ebd1477bab7502b2b48f8d8a729d9e", "committedDate": "2020-09-09T18:03:37Z", "message": "reformat 2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDY2OTE1", "url": "https://github.com/grpc/grpc-java/pull/7362#pullrequestreview-485466915", "createdAt": "2020-09-09T23:23:36Z", "commit": {"oid": "b36f8403a4ebd1477bab7502b2b48f8d8a729d9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4205, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}