{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTk4ODEw", "number": 6924, "title": "xds: remove UpstreamTlsContext from XdsChannelBuilder", "bodyText": "", "createdAt": "2020-04-14T06:43:39Z", "url": "https://github.com/grpc/grpc-java/pull/6924", "merged": true, "mergeCommit": {"oid": "9618af90e5a28904d3d7f451bab82f3dbf21e4cf"}, "closed": true, "closedAt": "2020-04-15T16:23:45Z", "author": {"login": "sanjaypujare"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXdc5YgH2gAyNDAyOTk4ODEwOjAwZjY0NjU1ODg1YjY1MGU5ZTgyMTI3NzAwNmE5NDc5NTg5M2RmNTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX6e9ZgFqTM5MzkyODMxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "00f64655885b650e9e821277006a94795893df58", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/00f64655885b650e9e821277006a94795893df58", "committedDate": "2020-04-14T06:25:09Z", "message": "xds: remove UpstreamTlsContext from XdsChannelBuilder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMjA3Mzc4", "url": "https://github.com/grpc/grpc-java/pull/6924#pullrequestreview-393207378", "createdAt": "2020-04-14T18:55:17Z", "commit": {"oid": "00f64655885b650e9e821277006a94795893df58"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToyMjoyN1rOGFddSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo0MDo0MVrOGFeEKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3ODY5Ng==", "bodyText": "this seems very hard / messy to use the SdsNameResolver. Can you do something similar to FakeNameResolver in ManagedChannelImplTest. it is not the best example, but seems simpler than this. also, it is using less resources and provider easier interface to test. Mock should be last option to consider. (e.g. this code can be easily converted to fake impl which will be much shorter and easier to read)", "url": "https://github.com/grpc/grpc-java/pull/6924#discussion_r408378696", "createdAt": "2020-04-14T19:22:27Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/XdsSdsClientServerTest.java", "diffHunk": "@@ -181,12 +205,38 @@ private static int findFreePort() throws IOException {\n   }\n \n   private SimpleServiceGrpc.SimpleServiceBlockingStub getBlockingStub(\n-      UpstreamTlsContext upstreamTlsContext, String overrideAuthority) {\n-    XdsChannelBuilder builder =\n-        XdsChannelBuilder.forTarget(\"localhost:\" + port).tlsContext(upstreamTlsContext);\n+      final UpstreamTlsContext upstreamTlsContext, String overrideAuthority) {\n+    XdsChannelBuilder builder = XdsChannelBuilder.forTarget(\"sdstest:///localhost:\" + port);\n     if (overrideAuthority != null) {\n       builder = builder.overrideAuthority(overrideAuthority);\n     }\n+    doAnswer(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00f64655885b650e9e821277006a94795893df58"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4ODY1MA==", "bodyText": "nit: should be noTlsContext, null is not allowed.", "url": "https://github.com/grpc/grpc-java/pull/6924#discussion_r408388650", "createdAt": "2020-04-14T19:40:41Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/internal/sds/SdsProtocolNegotiatorsTest.java", "diffHunk": "@@ -143,9 +147,8 @@ private static CommonTlsContext getCommonTlsContext(\n   }\n \n   @Test\n-  public void clientSdsProtocolNegotiatorNewHandler_nullTlsContext() {\n-    ClientSdsProtocolNegotiator pn =\n-        new ClientSdsProtocolNegotiator(/* upstreamTlsContext= */ null);\n+  public void clientSdsProtocolNegotiatorNewHandler_nullTlsContextAttribute() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00f64655885b650e9e821277006a94795893df58"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3dddbf2b904d7fd512bef8fa0d3554640c21b22", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/b3dddbf2b904d7fd512bef8fa0d3554640c21b22", "committedDate": "2020-04-15T03:53:48Z", "message": "address review comments: implement FakeNameResolver to set attrs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "857df3b5d6008e8737fbcdb316ce56318db2a901", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/857df3b5d6008e8737fbcdb316ce56318db2a901", "committedDate": "2020-04-15T04:51:57Z", "message": "java fix format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d93a277423e02d48b3cdaaabb8cbb8c8e9cca62c", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/d93a277423e02d48b3cdaaabb8cbb8c8e9cca62c", "committedDate": "2020-04-15T05:17:52Z", "message": "minor refactor/cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNDY3NDY2", "url": "https://github.com/grpc/grpc-java/pull/6924#pullrequestreview-393467466", "createdAt": "2020-04-15T05:36:45Z", "commit": {"oid": "d93a277423e02d48b3cdaaabb8cbb8c8e9cca62c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNTozNjo0NVrOGFqcMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNTo0MDoyMFrOGFqg6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU5MTQxMA==", "bodyText": "this seems worse than what it used to be. this is not even used elsewhere.", "url": "https://github.com/grpc/grpc-java/pull/6924#discussion_r408591410", "createdAt": "2020-04-15T05:36:45Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/XdsSdsClientServerTest.java", "diffHunk": "@@ -59,15 +73,23 @@\n \n   @Rule public final GrpcCleanupRule cleanupRule = new GrpcCleanupRule();\n   private int port;\n+  private FakeNameResolverFactory fakeNameResolverFactory;\n+  private XdsChannelBuilder channelBuilder;\n \n   @Before\n-  public void setUp() throws IOException {\n+  public void setUp() throws IOException, URISyntaxException {\n+    MockitoAnnotations.initMocks(this);\n     port = findFreePort();\n+    URI expectedUri = new URI(\"sdstest://localhost:\" + port);\n+    fakeNameResolverFactory = new FakeNameResolverFactory.Builder(expectedUri).build();\n+    channelBuilder =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d93a277423e02d48b3cdaaabb8cbb8c8e9cca62c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU5MjEwMQ==", "bodyText": "nit/java optional suggestion: using ImmutableList is preferred than Collections.singletonList especially if ImmutableList is already imported.", "url": "https://github.com/grpc/grpc-java/pull/6924#discussion_r408592101", "createdAt": "2020-04-15T05:38:47Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/XdsSdsClientServerTest.java", "diffHunk": "@@ -181,13 +203,21 @@ private static int findFreePort() throws IOException {\n   }\n \n   private SimpleServiceGrpc.SimpleServiceBlockingStub getBlockingStub(\n-      UpstreamTlsContext upstreamTlsContext, String overrideAuthority) {\n-    XdsChannelBuilder builder =\n-        XdsChannelBuilder.forTarget(\"localhost:\" + port).tlsContext(upstreamTlsContext);\n+      final UpstreamTlsContext upstreamTlsContext, String overrideAuthority) {\n     if (overrideAuthority != null) {\n-      builder = builder.overrideAuthority(overrideAuthority);\n+      channelBuilder = channelBuilder.overrideAuthority(overrideAuthority);\n     }\n-    return SimpleServiceGrpc.newBlockingStub(cleanupRule.register(builder.build()));\n+    InetSocketAddress socketAddress =\n+        new InetSocketAddress(Inet4Address.getLoopbackAddress(), port);\n+    Attributes attrs =\n+        (upstreamTlsContext != null)\n+            ? Attributes.newBuilder()\n+                .set(XdsAttributes.ATTR_UPSTREAM_TLS_CONTEXT, upstreamTlsContext)\n+                .build()\n+            : Attributes.EMPTY;\n+    fakeNameResolverFactory.setServers(\n+        Collections.singletonList(new EquivalentAddressGroup(socketAddress, attrs)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d93a277423e02d48b3cdaaabb8cbb8c8e9cca62c"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU5MjMyOQ==", "bodyText": "this doesn't match to sdstest", "url": "https://github.com/grpc/grpc-java/pull/6924#discussion_r408592329", "createdAt": "2020-04-15T05:39:23Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/XdsSdsClientServerTest.java", "diffHunk": "@@ -210,4 +240,121 @@ public void unaryRpc(SimpleRequest req, StreamObserver<SimpleResponse> responseO\n       responseObserver.onCompleted();\n     }\n   }\n+\n+  private static final class FakeNameResolverFactory extends NameResolver.Factory {\n+    final URI expectedUri;\n+    List<EquivalentAddressGroup> servers = ImmutableList.of();\n+    final boolean resolvedAtStart;\n+    final Status error;\n+    final ArrayList<FakeNameResolver> resolvers = new ArrayList<>();\n+    final AtomicReference<ConfigOrError> nextConfigOrError = new AtomicReference<>();\n+\n+    FakeNameResolverFactory(URI expectedUri, boolean resolvedAtStart, Status error) {\n+      this.expectedUri = expectedUri;\n+      this.resolvedAtStart = resolvedAtStart;\n+      this.error = error;\n+    }\n+\n+    void setServers(List<EquivalentAddressGroup> servers) {\n+      this.servers = servers;\n+    }\n+\n+    @Override\n+    public NameResolver newNameResolver(final URI targetUri, NameResolver.Args args) {\n+      if (!expectedUri.equals(targetUri)) {\n+        return null;\n+      }\n+      FakeNameResolver resolver = new FakeNameResolver(error);\n+      resolvers.add(resolver);\n+      return resolver;\n+    }\n+\n+    @Override\n+    public String getDefaultScheme() {\n+      return \"fake\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d93a277423e02d48b3cdaaabb8cbb8c8e9cca62c"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU5MjYxNg==", "bodyText": "you can remove unused code. private unused code is dead code.", "url": "https://github.com/grpc/grpc-java/pull/6924#discussion_r408592616", "createdAt": "2020-04-15T05:40:20Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/XdsSdsClientServerTest.java", "diffHunk": "@@ -210,4 +240,121 @@ public void unaryRpc(SimpleRequest req, StreamObserver<SimpleResponse> responseO\n       responseObserver.onCompleted();\n     }\n   }\n+\n+  private static final class FakeNameResolverFactory extends NameResolver.Factory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d93a277423e02d48b3cdaaabb8cbb8c8e9cca62c"}, "originalPosition": 142}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "073c767207488d6f9814f9e14e8b36c5b1c8a08c", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/073c767207488d6f9814f9e14e8b36c5b1c8a08c", "committedDate": "2020-04-15T15:46:57Z", "message": "address review comments - 2nd set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "648836fbb8a3309175eafef5c8d6ef4827b9bd4d", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/648836fbb8a3309175eafef5c8d6ef4827b9bd4d", "committedDate": "2020-04-15T16:04:02Z", "message": "address review comments - 3nd set"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzOTI4MzE2", "url": "https://github.com/grpc/grpc-java/pull/6924#pullrequestreview-393928316", "createdAt": "2020-04-15T16:14:39Z", "commit": {"oid": "648836fbb8a3309175eafef5c8d6ef4827b9bd4d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4537, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}