{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NTM1NzU1", "number": 6935, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoyMTo0MlrODymcUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoyNToxOVrODymhvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Mzg1MjM1OnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/XdsClientWrapperForServerSds.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoyMTo0MlrOGGvhwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODowMDowMlrOGGw--A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyMzMyOA==", "bodyText": "this does not look correct. it is not even an IO exception (this is why it is originally not an IO exception), consider using custom checked exception if there isn't any good exception to use.", "url": "https://github.com/grpc/grpc-java/pull/6935#discussion_r409723328", "createdAt": "2020-04-16T17:21:42Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientWrapperForServerSds.java", "diffHunk": "@@ -84,7 +84,7 @@ public static XdsClientWrapperForServerSds newInstance(\n     Bootstrapper.BootstrapInfo bootstrapInfo = bootstrapper.readBootstrap();\n     final List<Bootstrapper.ServerInfo> serverList = bootstrapInfo.getServers();\n     if (serverList.isEmpty()) {\n-      throw new NoSuchElementException(\"No management server provided by bootstrap\");\n+      throw new FileNotFoundException(\"No management server provided by bootstrap\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d47d343e8630e6802ae6f23511fba855b3e63037"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0MTEzMw==", "bodyText": "Yeah, I can create a custom checked exception or just return null with a log message. I think the latter is preferred but let me know your preference.", "url": "https://github.com/grpc/grpc-java/pull/6935#discussion_r409741133", "createdAt": "2020-04-16T17:50:26Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientWrapperForServerSds.java", "diffHunk": "@@ -84,7 +84,7 @@ public static XdsClientWrapperForServerSds newInstance(\n     Bootstrapper.BootstrapInfo bootstrapInfo = bootstrapper.readBootstrap();\n     final List<Bootstrapper.ServerInfo> serverList = bootstrapInfo.getServers();\n     if (serverList.isEmpty()) {\n-      throw new NoSuchElementException(\"No management server provided by bootstrap\");\n+      throw new FileNotFoundException(\"No management server provided by bootstrap\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyMzMyOA=="}, "originalCommit": {"oid": "d47d343e8630e6802ae6f23511fba855b3e63037"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0NzE5Mg==", "bodyText": "it is definitely preferred to throw exception especially if the caller need to do something.\nLooked at the code i think the getXdsClientWrapperForServerSds shouldn't return null. it should just throw and  serverProtocolNegotiator can handle the exception (or just remove the getXdsClientWrapperForServerSds and inline it since it does not really belong to ServerSdsProtocolNegotiator); it sees exception so it can fallback seems more natural than hmm somehow we have null, lets fallback (not very idiomatic java, it is c style - no offense to c =p).", "url": "https://github.com/grpc/grpc-java/pull/6935#discussion_r409747192", "createdAt": "2020-04-16T18:00:02Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientWrapperForServerSds.java", "diffHunk": "@@ -84,7 +84,7 @@ public static XdsClientWrapperForServerSds newInstance(\n     Bootstrapper.BootstrapInfo bootstrapInfo = bootstrapper.readBootstrap();\n     final List<Bootstrapper.ServerInfo> serverList = bootstrapInfo.getServers();\n     if (serverList.isEmpty()) {\n-      throw new NoSuchElementException(\"No management server provided by bootstrap\");\n+      throw new FileNotFoundException(\"No management server provided by bootstrap\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyMzMyOA=="}, "originalCommit": {"oid": "d47d343e8630e6802ae6f23511fba855b3e63037"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Mzg2NjIyOnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoyNToxOVrOGGvqkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTo1NzozNVrOGG1ADQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyNTU4Ng==", "bodyText": "IIRC there was a test checking scheme http if plaintext. the test should be fixed.", "url": "https://github.com/grpc/grpc-java/pull/6935#discussion_r409725586", "createdAt": "2020-04-16T17:25:19Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -60,7 +60,7 @@ private SdsProtocolNegotiators() {\n \n   private static final Logger logger = Logger.getLogger(SdsProtocolNegotiators.class.getName());\n \n-  private static final AsciiString SCHEME = AsciiString.of(\"https\");\n+  private static final AsciiString SCHEME = AsciiString.of(\"http\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d47d343e8630e6802ae6f23511fba855b3e63037"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTczOTU3NA==", "bodyText": "There was/is no test - otherwise the build would have failed. Do you want me to add a test - the test will just verify this init so not sure about it's value.", "url": "https://github.com/grpc/grpc-java/pull/6935#discussion_r409739574", "createdAt": "2020-04-16T17:48:01Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -60,7 +60,7 @@ private SdsProtocolNegotiators() {\n \n   private static final Logger logger = Logger.getLogger(SdsProtocolNegotiators.class.getName());\n \n-  private static final AsciiString SCHEME = AsciiString.of(\"https\");\n+  private static final AsciiString SCHEME = AsciiString.of(\"http\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyNTU4Ng=="}, "originalCommit": {"oid": "d47d343e8630e6802ae6f23511fba855b3e63037"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0MTQ2OQ==", "bodyText": "https://github.com/grpc/grpc-java/blob/master/xds/src/test/java/io/grpc/xds/internal/sds/SdsProtocolNegotiatorsTest.java#L288\nthat test, it was checking \"http\" vs \"https\". now everything is \"http\". this test is no longer relevant and should be fixed.", "url": "https://github.com/grpc/grpc-java/pull/6935#discussion_r409741469", "createdAt": "2020-04-16T17:51:01Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -60,7 +60,7 @@ private SdsProtocolNegotiators() {\n \n   private static final Logger logger = Logger.getLogger(SdsProtocolNegotiators.class.getName());\n \n-  private static final AsciiString SCHEME = AsciiString.of(\"https\");\n+  private static final AsciiString SCHEME = AsciiString.of(\"http\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyNTU4Ng=="}, "originalCommit": {"oid": "d47d343e8630e6802ae6f23511fba855b3e63037"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0MzI1MQ==", "bodyText": "Yes, you are right, may bad! I will have to modify the test to detect plaintext vs Sds PN and let me think about it.", "url": "https://github.com/grpc/grpc-java/pull/6935#discussion_r409743251", "createdAt": "2020-04-16T17:53:45Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -60,7 +60,7 @@ private SdsProtocolNegotiators() {\n \n   private static final Logger logger = Logger.getLogger(SdsProtocolNegotiators.class.getName());\n \n-  private static final AsciiString SCHEME = AsciiString.of(\"https\");\n+  private static final AsciiString SCHEME = AsciiString.of(\"http\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyNTU4Ng=="}, "originalCommit": {"oid": "d47d343e8630e6802ae6f23511fba855b3e63037"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1Mzk4Mg==", "bodyText": "With scheme being the same the only other thing to check is the class-name of the returned protocolNegotiator it should match ...ServerPlaintextNegotiator or should have plaintext in it. Do you have a better suggestion?", "url": "https://github.com/grpc/grpc-java/pull/6935#discussion_r409753982", "createdAt": "2020-04-16T18:11:36Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -60,7 +60,7 @@ private SdsProtocolNegotiators() {\n \n   private static final Logger logger = Logger.getLogger(SdsProtocolNegotiators.class.getName());\n \n-  private static final AsciiString SCHEME = AsciiString.of(\"https\");\n+  private static final AsciiString SCHEME = AsciiString.of(\"http\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyNTU4Ng=="}, "originalCommit": {"oid": "d47d343e8630e6802ae6f23511fba855b3e63037"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxMzAwNQ==", "bodyText": "yeah there isn't a good way to test this other than using name of the class. i think it is fine to check the class name (ServerPlaintextNegotiator).", "url": "https://github.com/grpc/grpc-java/pull/6935#discussion_r409813005", "createdAt": "2020-04-16T19:57:35Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -60,7 +60,7 @@ private SdsProtocolNegotiators() {\n \n   private static final Logger logger = Logger.getLogger(SdsProtocolNegotiators.class.getName());\n \n-  private static final AsciiString SCHEME = AsciiString.of(\"https\");\n+  private static final AsciiString SCHEME = AsciiString.of(\"http\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyNTU4Ng=="}, "originalCommit": {"oid": "d47d343e8630e6802ae6f23511fba855b3e63037"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2804, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}