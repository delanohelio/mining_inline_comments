{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMzkyODc1", "number": 7221, "title": "api: add InternalConfigSelector abstract class", "bodyText": "Apparently the change in ManagedChannelImpl for ConfigSelector will be complex, so I split out small PRs first.", "createdAt": "2020-07-16T18:04:09Z", "url": "https://github.com/grpc/grpc-java/pull/7221", "merged": true, "mergeCommit": {"oid": "d342b111f92c0242715a2edccb9184854eb16682"}, "closed": true, "closedAt": "2020-07-16T20:52:04Z", "author": {"login": "dapengzhang0"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1jLeogH2gAyNDUwMzkyODc1OmIzMDcxN2NmYjk3MzZkMTEyOWRmMjk1NWFkZDRkYjMxYmFmZDhkYmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1jxr8gFqTQ1MDExODU0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b30717cfb9736d1129df2955add4db31bafd8dbf", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/b30717cfb9736d1129df2955add4db31bafd8dbf", "committedDate": "2020-07-16T18:03:17Z", "message": "api: add InternalConfigSelector abstract class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMDk1NzI5", "url": "https://github.com/grpc/grpc-java/pull/7221#pullrequestreview-450095729", "createdAt": "2020-07-16T18:12:41Z", "commit": {"oid": "b30717cfb9736d1129df2955add4db31bafd8dbf"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxODoxMjo0MVrOGy2wTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxODoxNzozM1rOGy27Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk3OTA4NQ==", "bodyText": "Shouldn't the config be nullable as well?", "url": "https://github.com/grpc/grpc-java/pull/7221#discussion_r455979085", "createdAt": "2020-07-16T18:12:41Z", "author": {"login": "voidzcy"}, "path": "api/src/main/java/io/grpc/InternalConfigSelector.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import javax.annotation.Nullable;\n+\n+// The class can not be located in io.grpc.internal since it is used as a cross-module API.\n+// Otherwise, shading would break it.\n+/**\n+ * Per method config selector that the channel or load balancers will use to choose the appropriate\n+ * Route and MethodConfig for an RPC.\n+ */\n+@Internal\n+public abstract class InternalConfigSelector {\n+  @NameResolver.ResolutionResultAttr\n+  public static final Attributes.Key<io.grpc.InternalConfigSelector> KEY\n+      = Attributes.Key.create(\"io.grpc.config-selector\");\n+\n+  // Use PickSubchannelArgs for SelectConfigArgs for now. May change over time.\n+  /** Selects the config for an PRC. */\n+  public abstract Result selectConfig(LoadBalancer.PickSubchannelArgs args);\n+\n+  public static final class Result {\n+    private final Object config;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30717cfb9736d1129df2955add4db31bafd8dbf"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4MDMzOQ==", "bodyText": "ConfigSelector is not an xDS-specific design, its description should be more general. Same for the other places. (You are talking about xDS's concrete implementation XdsConfigSelector)", "url": "https://github.com/grpc/grpc-java/pull/7221#discussion_r455980339", "createdAt": "2020-07-16T18:14:47Z", "author": {"login": "voidzcy"}, "path": "api/src/main/java/io/grpc/InternalConfigSelector.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import javax.annotation.Nullable;\n+\n+// The class can not be located in io.grpc.internal since it is used as a cross-module API.\n+// Otherwise, shading would break it.\n+/**\n+ * Per method config selector that the channel or load balancers will use to choose the appropriate\n+ * Route and MethodConfig for an RPC.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30717cfb9736d1129df2955add4db31bafd8dbf"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4MTg5OQ==", "bodyText": "This line of comment is redundant.", "url": "https://github.com/grpc/grpc-java/pull/7221#discussion_r455981899", "createdAt": "2020-07-16T18:17:33Z", "author": {"login": "voidzcy"}, "path": "api/src/main/java/io/grpc/InternalConfigSelector.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import javax.annotation.Nullable;\n+\n+// The class can not be located in io.grpc.internal since it is used as a cross-module API.\n+// Otherwise, shading would break it.\n+/**\n+ * Per method config selector that the channel or load balancers will use to choose the appropriate\n+ * Route and MethodConfig for an RPC.\n+ */\n+@Internal\n+public abstract class InternalConfigSelector {\n+  @NameResolver.ResolutionResultAttr\n+  public static final Attributes.Key<io.grpc.InternalConfigSelector> KEY\n+      = Attributes.Key.create(\"io.grpc.config-selector\");\n+\n+  // Use PickSubchannelArgs for SelectConfigArgs for now. May change over time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30717cfb9736d1129df2955add4db31bafd8dbf"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b0069267aee6972a1e29e7939021bfd3fe08060", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/2b0069267aee6972a1e29e7939021bfd3fe08060", "committedDate": "2020-07-16T18:33:47Z", "message": "improve javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c19b5e3a936c7bc40b380e9af19667b3a0b846b0", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/c19b5e3a936c7bc40b380e9af19667b3a0b846b0", "committedDate": "2020-07-16T18:37:04Z", "message": "remove xds specific comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMTE1NTg0", "url": "https://github.com/grpc/grpc-java/pull/7221#pullrequestreview-450115584", "createdAt": "2020-07-16T18:40:47Z", "commit": {"oid": "c19b5e3a936c7bc40b380e9af19667b3a0b846b0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMTE4NTQw", "url": "https://github.com/grpc/grpc-java/pull/7221#pullrequestreview-450118540", "createdAt": "2020-07-16T18:45:01Z", "commit": {"oid": "c19b5e3a936c7bc40b380e9af19667b3a0b846b0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4325, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}