{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwODYxMjEx", "number": 6988, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMzoxMzozM1rOD31ZYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDowOTo0N1rOD32GcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODczMTIzOnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/XdsClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMzoxMzozM1rOGOUS-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzozODo1M1rOGOzmAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NTc4Ng==", "bodyText": "Based on the code elsewhere, it looks like you don't wait for a DiscoveryResponse before calling this but you may call it if you found resourceName in the absent*Resources set. Is that semantic correct and agreeable to everyone?", "url": "https://github.com/grpc/grpc-java/pull/6988#discussion_r417665786", "createdAt": "2020-04-29T23:13:33Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/XdsClient.java", "diffHunk": "@@ -389,50 +389,60 @@ ListenerUpdate build() {\n     }\n   }\n \n+  /**\n+   * Watcher interface for a single requested xDS resource.\n+   */\n+  private interface ResourceWatcher {\n+\n+    /**\n+     * Called when the resource discovery RPC encounters some transient error.\n+     */\n+    void onError(Status error);\n+\n+    /**\n+     * Called when the requested resource is not available.\n+     *\n+     * @param resourceName name of the resource requested in discovery request.\n+     */\n+    void onResourceDoesNotExist(String resourceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61a2a91113cbbce31ac9af20d3b9d623aeff7688"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE3ODU2MA==", "bodyText": "absent*Resources is the cache for resources that known to be absent. For example, if some watcher is already watching resource A (sent A in request), but A does not exist. We need to memorize this information. When another watcher is added to also watch A, we know immediately it doesn't exist. If we do not memorize that information, the second watcher will never get notified.", "url": "https://github.com/grpc/grpc-java/pull/6988#discussion_r418178560", "createdAt": "2020-04-30T17:38:53Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/XdsClient.java", "diffHunk": "@@ -389,50 +389,60 @@ ListenerUpdate build() {\n     }\n   }\n \n+  /**\n+   * Watcher interface for a single requested xDS resource.\n+   */\n+  private interface ResourceWatcher {\n+\n+    /**\n+     * Called when the resource discovery RPC encounters some transient error.\n+     */\n+    void onError(Status error);\n+\n+    /**\n+     * Called when the requested resource is not available.\n+     *\n+     * @param resourceName name of the resource requested in discovery request.\n+     */\n+    void onResourceDoesNotExist(String resourceName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NTc4Ng=="}, "originalCommit": {"oid": "61a2a91113cbbce31ac9af20d3b9d623aeff7688"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODg0NjU3OnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDowOTo0N1rOGOVYsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMToyNDo0NlrOGOWoxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4MzYzMg==", "bodyText": "The actual resource name used in the request in this case was null/empty string. But you are reporting it as \":\" + listenerPort. I don't have a better suggestion other than to put a comment mentioning that.", "url": "https://github.com/grpc/grpc-java/pull/6988#discussion_r417683632", "createdAt": "2020-04-30T00:09:47Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "diffHunk": "@@ -730,8 +721,7 @@ private void handleLdsResponseForListener(DiscoveryResponse ldsResponse) {\n       listenerWatcher.onListenerChanged(listenerUpdate);\n     } else {\n       if (ldsRespTimer == null) {\n-        listenerWatcher.onError(Status.NOT_FOUND.withDescription(\"did not find listener for \"\n-            + listenerPort));\n+        listenerWatcher.onResourceDoesNotExist(\":\" + listenerPort);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61a2a91113cbbce31ac9af20d3b9d623aeff7688"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwNDEzNQ==", "bodyText": "Yeah, I noticed that. Maybe the doc on onResourceDoesNotExist() is somewhat imprecise. The argument is the resource name that we are looking for but does not exist. I am going to update that.\nFor Listener watcher, this is kind of ambiguous as it sits on the border of the design (i.e., the way we watch Listener is to request all and select the one we are seeking for). But at least, using \":\" + listenerPort turns out to be better than using null/empty string.\nActually ConfigWatcher also has somewhat similar issue, since resource-not-found may be caused by the intermediate RDS lookup, which uses a different resource name (other than what was used for registering the watcher) for the discovery request. In that case, the onResourceDoesNotExist() callback is invoked (and IMO it should be) with the actual requested RDS resource name.", "url": "https://github.com/grpc/grpc-java/pull/6988#discussion_r417704135", "createdAt": "2020-04-30T01:24:46Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "diffHunk": "@@ -730,8 +721,7 @@ private void handleLdsResponseForListener(DiscoveryResponse ldsResponse) {\n       listenerWatcher.onListenerChanged(listenerUpdate);\n     } else {\n       if (ldsRespTimer == null) {\n-        listenerWatcher.onError(Status.NOT_FOUND.withDescription(\"did not find listener for \"\n-            + listenerPort));\n+        listenerWatcher.onResourceDoesNotExist(\":\" + listenerPort);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4MzYzMg=="}, "originalCommit": {"oid": "61a2a91113cbbce31ac9af20d3b9d623aeff7688"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2654, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}