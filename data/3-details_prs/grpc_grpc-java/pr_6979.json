{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NzgxODI5", "number": 6979, "title": "netty: allow to use bandwidth delay product", "bodyText": "avoid ping spam after WINDOW_UPDATE, DATA frame\nallow to set initialWindowUpdate for Netty{Channel,Server}Builder which enables bdp\nremove InternalHandlerSettings, NettyHandlerSettings", "createdAt": "2020-04-24T21:54:47Z", "url": "https://github.com/grpc/grpc-java/pull/6979", "merged": true, "mergeCommit": {"oid": "83a3b25e807e9a330d7174356e25278afdd5bfbe"}, "closed": true, "closedAt": "2020-05-01T22:39:23Z", "author": {"login": "creamsoup"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABca1ihFgH2gAyNDA4NzgxODI5OmRhOWE4Mjg5MzIyMTk5YjY1Yzg5MDIwYTUwYjVlOGE2NmE0NTIyMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdJNVoAH2gAyNDA4NzgxODI5OjdhYjlkOWRlMmYzODFlNDM5Y2IwN2FmYzBlMmU1Yzc1ZjRmNTc2YTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da9a8289322199b65c89020a50b5e8a66a452221", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/da9a8289322199b65c89020a50b5e8a66a452221", "committedDate": "2020-04-24T18:10:47Z", "message": "netty: send WINDOW_UPDATE before BDP ping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdc6f2e7b7052fcfbebeabaa313e205a2ceb527b", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/fdc6f2e7b7052fcfbebeabaa313e205a2ceb527b", "committedDate": "2020-04-24T18:24:26Z", "message": "netty: bdp accessor allows to clear handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "758fa2942dc8c978b1a423e35fcea6aacb9c9551", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/758fa2942dc8c978b1a423e35fcea6aacb9c9551", "committedDate": "2020-04-24T21:56:33Z", "message": "fix tests and logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46df843e51c5bae922563e01b5e0fe6f21531af5", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/46df843e51c5bae922563e01b5e0fe6f21531af5", "committedDate": "2020-04-27T22:29:48Z", "message": "disable NettyFlowControlTest#verySmallWindowMakesProgress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd831081e7cca87299558a5374b9e2add4c3c003", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/fd831081e7cca87299558a5374b9e2add4c3c003", "committedDate": "2020-04-27T22:34:42Z", "message": "netty: Netty{Client,Server}Handler use ListeningEncoder to keep track of ping for bdp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52010010d13642787f40207872058de4d0d88fa0", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/52010010d13642787f40207872058de4d0d88fa0", "committedDate": "2020-04-27T22:36:42Z", "message": "remove invalid comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMzk3NDE5", "url": "https://github.com/grpc/grpc-java/pull/6979#pullrequestreview-401397419", "createdAt": "2020-04-27T23:29:29Z", "commit": {"oid": "52010010d13642787f40207872058de4d0d88fa0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMzoyOToyOVrOGM788A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMzozNDo0N1rOGM8FZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIxODM1Mg==", "bodyText": "Why was this removed?", "url": "https://github.com/grpc/grpc-java/pull/6979#discussion_r416218352", "createdAt": "2020-04-27T23:29:29Z", "author": {"login": "ejona86"}, "path": "netty/src/main/java/io/grpc/netty/NettyChannelBuilder.java", "diffHunk": "@@ -178,10 +179,6 @@ public NettyChannelBuilder channelType(Class<? extends Channel> channelType) {\n    *\n    * <p>It's an optional parameter. If the user has not provided an Channel type or ChannelFactory\n    * when the channel is built, the builder will use the default one which is static.\n-   *\n-   * <p>You must also provide corresponding {@link #eventLoopGroup(EventLoopGroup)}. For example,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52010010d13642787f40207872058de4d0d88fa0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIxODc2Mw==", "bodyText": "Looks like this comma should be a period or semicolon.", "url": "https://github.com/grpc/grpc-java/pull/6979#discussion_r416218763", "createdAt": "2020-04-27T23:30:30Z", "author": {"login": "ejona86"}, "path": "netty/src/main/java/io/grpc/netty/NettyChannelBuilder.java", "diffHunk": "@@ -247,12 +244,26 @@ public NettyChannelBuilder sslContext(SslContext sslContext) {\n   }\n \n   /**\n-   * Sets the flow control window in bytes. If not called, the default value\n-   * is {@link #DEFAULT_FLOW_CONTROL_WINDOW}).\n+   * Sets the initial flow control window in bytes. Setting initial flow control window enables auto\n+   * flow control tuning using bandwidth-delay product algorithm. To disable auto flow control\n+   * tuning, use {@link #flowControlWindow(int)}.\n+   */\n+  public NettyChannelBuilder initialFlowControlWindow(int initialFlowControlWindow) {\n+    checkArgument(initialFlowControlWindow > 0, \"initialFlowControlWindow must be positive\");\n+    this.flowControlWindow = initialFlowControlWindow;\n+    this.autoFlowControl = true;\n+    return this;\n+  }\n+\n+  /**\n+   * Sets the flow control window in bytes. Setting flowControlWindow disables auto flow control\n+   * tuning, use {@link #initialFlowControlWindow(int)} to enable auto flow control tuning. If not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52010010d13642787f40207872058de4d0d88fa0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIyMDUxOQ==", "bodyText": "I'm fiercely annoyed by the storage of these handlers and the dance to clean them up. (Not your code, their existence.)\nWhat do you think about having NettyFlowControlTest create a custom ProtocolNegotiator that grabs the GrpcHttp2ConnectionHandler and we pass that to getLatestWindow() (so we would cast to AbstractNettyHandler in this class)?\n(I'm also fine at that point trashing this class and just having InternalHandlerSettings)", "url": "https://github.com/grpc/grpc-java/pull/6979#discussion_r416220519", "createdAt": "2020-04-27T23:34:47Z", "author": {"login": "ejona86"}, "path": "netty/src/main/java/io/grpc/netty/NettyHandlerSettings.java", "diffHunk": "@@ -64,9 +57,23 @@ public static synchronized int getLatestServerWindow() {\n     return getLatestWindow(serverHandler);\n   }\n \n+  private static synchronized void clearHandlers() {\n+    clientHandler = null;\n+    serverHandler = null;\n+  }\n+\n   private static synchronized int getLatestWindow(AbstractNettyHandler handler) {\n     Preconditions.checkNotNull(handler);\n     return handler.decoder().flowController()\n         .initialWindowSize(handler.connection().connectionStream());\n   }\n+\n+  static ChannelFutureListener cleanUpTask() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52010010d13642787f40207872058de4d0d88fa0"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "048f4eac5d37ee84f89c87a831688bae487803e4", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/048f4eac5d37ee84f89c87a831688bae487803e4", "committedDate": "2020-04-28T00:38:14Z", "message": "fix javadoc, restore accidently removed paragraph in javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a73585c39ab7da11e571bc6aec233bd7535667f7", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/a73585c39ab7da11e571bc6aec233bd7535667f7", "committedDate": "2020-04-28T01:22:49Z", "message": "retire {Internal,Netty}HandlerSettings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bce0e9db5d5d3710f1940c2f5ebdec1815e12bf8", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/bce0e9db5d5d3710f1940c2f5ebdec1815e12bf8", "committedDate": "2020-04-28T01:56:25Z", "message": "remove unused method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDIzNzI2", "url": "https://github.com/grpc/grpc-java/pull/6979#pullrequestreview-404423726", "createdAt": "2020-05-01T22:05:03Z", "commit": {"oid": "a73585c39ab7da11e571bc6aec233bd7535667f7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjowNTowM1rOGPW7zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjowNTowM1rOGPW7zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NzU4Mg==", "bodyText": "s/;;/;/", "url": "https://github.com/grpc/grpc-java/pull/6979#discussion_r418757582", "createdAt": "2020-05-01T22:05:03Z", "author": {"login": "ejona86"}, "path": "interop-testing/src/test/java/io/grpc/testing/integration/NettyFlowControlTest.java", "diffHunk": "@@ -224,9 +241,40 @@ public long getElapsedTime() {\n       return endRequestNanos - startRequestNanos;\n     }\n \n-    public int waitFor() throws InterruptedException {\n-      latch.await(5, TimeUnit.SECONDS);\n+    public int waitFor(long duration, TimeUnit unit) throws InterruptedException {\n+      latch.await(duration, unit);\n       return lastWindow;\n     }\n   }\n+\n+  private static class CapturingProtocolNegotiationFactory implements ProtocolNegotiatorFactory {\n+\n+    AtomicReference<GrpcHttp2ConnectionHandler> grpcHandlerRef = new AtomicReference<>();\n+\n+    @Override\n+    public ProtocolNegotiator buildProtocolNegotiator() {\n+      return new CapturingProtocolNegotiator();\n+    }\n+\n+    private class CapturingProtocolNegotiator implements ProtocolNegotiator {\n+\n+      final ProtocolNegotiator delegate = InternalProtocolNegotiators.plaintext();\n+\n+      @Override\n+      public AsciiString scheme() {\n+        return delegate.scheme();\n+      }\n+\n+      @Override\n+      public ChannelHandler newHandler(GrpcHttp2ConnectionHandler grpcHandler) {\n+        CapturingProtocolNegotiationFactory.this.grpcHandlerRef.set(grpcHandler);\n+        return delegate.newHandler(grpcHandler);\n+      }\n+\n+      @Override\n+      public void close() {\n+        delegate.close();;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a73585c39ab7da11e571bc6aec233bd7535667f7"}, "originalPosition": 198}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ab9d9de2f381e439cb07afc0e2e5c75f4f576a7", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/7ab9d9de2f381e439cb07afc0e2e5c75f4f576a7", "committedDate": "2020-05-01T22:13:36Z", "message": "remove extra semicolon"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4365, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}