{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MjQ4MzQz", "number": 6654, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMDoxNToyMFrODbam6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMzoyNToyOVrODbcSgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDc0MDg4OnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMDoxNToyMFrOFi5AtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTowMTozNFrOFi5utQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyOTk3Mw==", "bodyText": "This language will be a bit confusing in the logs. Maybe something closer to: message + \" (failed to pretty-print: \" + e + \")\"", "url": "https://github.com/grpc/grpc-java/pull/6654#discussion_r372129973", "createdAt": "2020-01-29T00:15:20Z", "author": {"login": "ejona86"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "diffHunk": "@@ -1360,4 +1364,37 @@ static boolean matchHostName(String hostName, String pattern) {\n     return index == pattern.length() - 1\n         && hostName.startsWith(pattern.substring(0, pattern.length() - 1));\n   }\n+\n+  /**\n+   * Convert protobuf message to human readable String format. Useful for protobuf messages\n+   * containing {@link com.google.protobuf.Any} fields.\n+   */\n+  @VisibleForTesting\n+  static class MessagePrinter {\n+    private final JsonFormat.Printer printer;\n+\n+    @VisibleForTesting\n+    MessagePrinter() {\n+      com.google.protobuf.TypeRegistry registry =\n+          com.google.protobuf.TypeRegistry.newBuilder()\n+              .add(Listener.getDescriptor())\n+              .add(HttpConnectionManager.getDescriptor())\n+              .add(RouteConfiguration.getDescriptor())\n+              .add(Cluster.getDescriptor())\n+              .add(ClusterLoadAssignment.getDescriptor())\n+              .build();\n+      printer = JsonFormat.printer().usingTypeRegistry(registry);\n+    }\n+\n+    @VisibleForTesting\n+    String print(MessageOrBuilder message) {\n+      String res;\n+      try {\n+        res = printer.print(message);\n+      } catch (InvalidProtocolBufferException e) {\n+        res = \"Failed to convert message [\" + message + \"] to readable String. Reason: \" + e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30e307706f8c10b7e5ce2f58aae6bcd79071f240"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEzMjExMw==", "bodyText": "Changed. Thanks for the suggestion.", "url": "https://github.com/grpc/grpc-java/pull/6654#discussion_r372132113", "createdAt": "2020-01-29T00:23:23Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "diffHunk": "@@ -1360,4 +1364,37 @@ static boolean matchHostName(String hostName, String pattern) {\n     return index == pattern.length() - 1\n         && hostName.startsWith(pattern.substring(0, pattern.length() - 1));\n   }\n+\n+  /**\n+   * Convert protobuf message to human readable String format. Useful for protobuf messages\n+   * containing {@link com.google.protobuf.Any} fields.\n+   */\n+  @VisibleForTesting\n+  static class MessagePrinter {\n+    private final JsonFormat.Printer printer;\n+\n+    @VisibleForTesting\n+    MessagePrinter() {\n+      com.google.protobuf.TypeRegistry registry =\n+          com.google.protobuf.TypeRegistry.newBuilder()\n+              .add(Listener.getDescriptor())\n+              .add(HttpConnectionManager.getDescriptor())\n+              .add(RouteConfiguration.getDescriptor())\n+              .add(Cluster.getDescriptor())\n+              .add(ClusterLoadAssignment.getDescriptor())\n+              .build();\n+      printer = JsonFormat.printer().usingTypeRegistry(registry);\n+    }\n+\n+    @VisibleForTesting\n+    String print(MessageOrBuilder message) {\n+      String res;\n+      try {\n+        res = printer.print(message);\n+      } catch (InvalidProtocolBufferException e) {\n+        res = \"Failed to convert message [\" + message + \"] to readable String. Reason: \" + e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyOTk3Mw=="}, "originalCommit": {"oid": "30e307706f8c10b7e5ce2f58aae6bcd79071f240"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEzMjkzNg==", "bodyText": "Why not just return message.toString()? And the error will happen again and can be logged in sendNackRequest() in error detail \"Broken LDS response.  \" + e", "url": "https://github.com/grpc/grpc-java/pull/6654#discussion_r372132936", "createdAt": "2020-01-29T00:26:41Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "diffHunk": "@@ -1360,4 +1364,37 @@ static boolean matchHostName(String hostName, String pattern) {\n     return index == pattern.length() - 1\n         && hostName.startsWith(pattern.substring(0, pattern.length() - 1));\n   }\n+\n+  /**\n+   * Convert protobuf message to human readable String format. Useful for protobuf messages\n+   * containing {@link com.google.protobuf.Any} fields.\n+   */\n+  @VisibleForTesting\n+  static class MessagePrinter {\n+    private final JsonFormat.Printer printer;\n+\n+    @VisibleForTesting\n+    MessagePrinter() {\n+      com.google.protobuf.TypeRegistry registry =\n+          com.google.protobuf.TypeRegistry.newBuilder()\n+              .add(Listener.getDescriptor())\n+              .add(HttpConnectionManager.getDescriptor())\n+              .add(RouteConfiguration.getDescriptor())\n+              .add(Cluster.getDescriptor())\n+              .add(ClusterLoadAssignment.getDescriptor())\n+              .build();\n+      printer = JsonFormat.printer().usingTypeRegistry(registry);\n+    }\n+\n+    @VisibleForTesting\n+    String print(MessageOrBuilder message) {\n+      String res;\n+      try {\n+        res = printer.print(message);\n+      } catch (InvalidProtocolBufferException e) {\n+        res = \"Failed to convert message [\" + message + \"] to readable String. Reason: \" + e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyOTk3Mw=="}, "originalCommit": {"oid": "30e307706f8c10b7e5ce2f58aae6bcd79071f240"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE0MTc0OQ==", "bodyText": "That would cause confusion when seeing raw bytes (\"why does formatting not work?\"). So it would be better to indicate errors.\nAlso, implementations should be modularized, methods should define what they are doing without making assumptions for what callers will do for things they do not.", "url": "https://github.com/grpc/grpc-java/pull/6654#discussion_r372141749", "createdAt": "2020-01-29T01:01:34Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "diffHunk": "@@ -1360,4 +1364,37 @@ static boolean matchHostName(String hostName, String pattern) {\n     return index == pattern.length() - 1\n         && hostName.startsWith(pattern.substring(0, pattern.length() - 1));\n   }\n+\n+  /**\n+   * Convert protobuf message to human readable String format. Useful for protobuf messages\n+   * containing {@link com.google.protobuf.Any} fields.\n+   */\n+  @VisibleForTesting\n+  static class MessagePrinter {\n+    private final JsonFormat.Printer printer;\n+\n+    @VisibleForTesting\n+    MessagePrinter() {\n+      com.google.protobuf.TypeRegistry registry =\n+          com.google.protobuf.TypeRegistry.newBuilder()\n+              .add(Listener.getDescriptor())\n+              .add(HttpConnectionManager.getDescriptor())\n+              .add(RouteConfiguration.getDescriptor())\n+              .add(Cluster.getDescriptor())\n+              .add(ClusterLoadAssignment.getDescriptor())\n+              .build();\n+      printer = JsonFormat.printer().usingTypeRegistry(registry);\n+    }\n+\n+    @VisibleForTesting\n+    String print(MessageOrBuilder message) {\n+      String res;\n+      try {\n+        res = printer.print(message);\n+      } catch (InvalidProtocolBufferException e) {\n+        res = \"Failed to convert message [\" + message + \"] to readable String. Reason: \" + e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyOTk3Mw=="}, "originalCommit": {"oid": "30e307706f8c10b7e5ce2f58aae6bcd79071f240"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTAxNjM1OnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMzoyNToyOVrOFi7oCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTowMzoxN1rOFjA73w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3MjgxMA==", "bodyText": "Because respPrinter.print() is heavy, check isLoggable first. Otherwise LGTM.\nif (logger.isLoggable(Level.FINE)) {\n  logger.log(Level.FINE, \"Received an RDS response: {0}\", respPrinter.print(rdsResponse));\n}", "url": "https://github.com/grpc/grpc-java/pull/6654#discussion_r372172810", "createdAt": "2020-01-29T03:25:29Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "diffHunk": "@@ -569,7 +573,7 @@ private void handleLdsResponse(DiscoveryResponse ldsResponse) {\n    * invalid data for gRPC's usage. Otherwise, an ACK request is sent to management server.\n    */\n   private void handleRdsResponse(DiscoveryResponse rdsResponse) {\n-    logger.log(Level.FINE, \"Received an RDS response: {0}\", rdsResponse);\n+    logger.log(Level.FINE, \"Received an RDS response: {0}\", respPrinter.print(rdsResponse));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2205850ff8e6fc714959c0f67300853f1379d3de"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1OTgwNw==", "bodyText": "Sure, change. Btw, I will be working on improving general xDS logging and the logging mechanism will be changed. This PR mainly implements the proto printer, which is needed anyway.", "url": "https://github.com/grpc/grpc-java/pull/6654#discussion_r372259807", "createdAt": "2020-01-29T09:03:17Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "diffHunk": "@@ -569,7 +573,7 @@ private void handleLdsResponse(DiscoveryResponse ldsResponse) {\n    * invalid data for gRPC's usage. Otherwise, an ACK request is sent to management server.\n    */\n   private void handleRdsResponse(DiscoveryResponse rdsResponse) {\n-    logger.log(Level.FINE, \"Received an RDS response: {0}\", rdsResponse);\n+    logger.log(Level.FINE, \"Received an RDS response: {0}\", respPrinter.print(rdsResponse));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3MjgxMA=="}, "originalCommit": {"oid": "2205850ff8e6fc714959c0f67300853f1379d3de"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2944, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}