{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NjI3NDM2", "number": 6704, "title": "service: HealthCheckingLoadBalancerFactory using its own attribute", "bodyText": "prerequisite for removing NAME_RESOLVERSERVICE_CONFIG attribute.", "createdAt": "2020-02-13T01:45:04Z", "url": "https://github.com/grpc/grpc-java/pull/6704", "merged": true, "mergeCommit": {"oid": "2162ad043677e3cbaac969b96fd4faa05448874b"}, "closed": true, "closedAt": "2020-02-29T01:11:21Z", "author": {"login": "creamsoup"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDw4EAAH2gAyMzc0NjI3NDM2OjkwMDM2OWU3NDFjOTc5ZWQxZWI5ZDcxYjc5MWJmOTg5NDYyMjdmNDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcI56w1gFqTM2Njc2MjMxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "900369e741c979ed1eb9d71b791bf98946227f41", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/900369e741c979ed1eb9d71b791bf98946227f41", "committedDate": "2020-02-13T01:44:32Z", "message": "service: HealthCheckingLoadBalancerFactory using its own attribute"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDkzNDEz", "url": "https://github.com/grpc/grpc-java/pull/6704#pullrequestreview-358493413", "createdAt": "2020-02-13T19:32:28Z", "commit": {"oid": "900369e741c979ed1eb9d71b791bf98946227f41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTozMjoyOFrOFpg15w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTozMjoyOFrOFpg15w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NDAyMw==", "bodyText": "This should be in GrpcAttributes.java", "url": "https://github.com/grpc/grpc-java/pull/6704#discussion_r379074023", "createdAt": "2020-02-13T19:32:28Z", "author": {"login": "voidzcy"}, "path": "api/src/main/java/io/grpc/NameResolver.java", "diffHunk": "@@ -350,6 +350,11 @@ public final void onAddresses(\n   @Documented\n   public @interface ResolutionResultAttr {}\n \n+  @Internal\n+  @ResolutionResultAttr\n+  public static final Attributes.Key<Map<String, ?>> RESOLUTION_RESULT_ATTR_HEALTH_CHECKING_CONFIG =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "900369e741c979ed1eb9d71b791bf98946227f41"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NTcxMTY0", "url": "https://github.com/grpc/grpc-java/pull/6704#pullrequestreview-366571164", "createdAt": "2020-02-28T17:42:04Z", "commit": {"oid": "900369e741c979ed1eb9d71b791bf98946227f41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzo0MjowNFrOFv9Tlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzo0MjowNFrOFv9Tlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgzMTgzMA==", "bodyText": "This doesn't look right. I think we want this to be in ManangedChannelImpl so that it applies to all name resolvers.\nWhat made me notice this is that RESOLUTION_RESULT_ATTR_HEALTH_CHECKING_CONFIG was put in NameResolver and not LoadBalancer. I expected it in LoadBalancer and for the NameResolver to be ignorant of it.", "url": "https://github.com/grpc/grpc-java/pull/6704#discussion_r385831830", "createdAt": "2020-02-28T17:42:04Z", "author": {"login": "ejona86"}, "path": "core/src/main/java/io/grpc/internal/DnsNameResolver.java", "diffHunk": "@@ -315,6 +315,12 @@ public void run() {\n \n           @SuppressWarnings(\"unchecked\")\n           Map<String, ?> verifiedRawServiceConfig = (Map<String, ?>) rawServiceConfig.getConfig();\n+          Map<String, ?> healthCheckedService =\n+              ServiceConfigUtil.getHealthCheckedService(verifiedRawServiceConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "900369e741c979ed1eb9d71b791bf98946227f41"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99aa06b3ad1ac439383d8498dee00ce55010ac51", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/99aa06b3ad1ac439383d8498dee00ce55010ac51", "committedDate": "2020-02-28T22:08:40Z", "message": "move health checking attribute to load balancer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzM4MTUy", "url": "https://github.com/grpc/grpc-java/pull/6704#pullrequestreview-366738152", "createdAt": "2020-02-28T23:13:26Z", "commit": {"oid": "99aa06b3ad1ac439383d8498dee00ce55010ac51"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzM5NDcx", "url": "https://github.com/grpc/grpc-java/pull/6704#pullrequestreview-366739471", "createdAt": "2020-02-28T23:18:02Z", "commit": {"oid": "99aa06b3ad1ac439383d8498dee00ce55010ac51"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a8742ff308122b40989075eed2ee491691b5388", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/5a8742ff308122b40989075eed2ee491691b5388", "committedDate": "2020-02-29T00:14:58Z", "message": "test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93174cad177bb96a2f7f1abc1e6c333c7675feea", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/93174cad177bb96a2f7f1abc1e6c333c7675feea", "committedDate": "2020-02-29T00:19:31Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzU5NDAz", "url": "https://github.com/grpc/grpc-java/pull/6704#pullrequestreview-366759403", "createdAt": "2020-02-29T00:46:42Z", "commit": {"oid": "93174cad177bb96a2f7f1abc1e6c333c7675feea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwMDo0Njo0MlrOFwGhXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwMDo0Njo0MlrOFwGhXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4MjgxNA==", "bodyText": "nit: new line.\nBtw, why not just put in ManagedChannelImplTest.java?", "url": "https://github.com/grpc/grpc-java/pull/6704#discussion_r385982814", "createdAt": "2020-02-29T00:46:42Z", "author": {"login": "voidzcy"}, "path": "core/src/test/java/io/grpc/internal/ManagedChannelServiceConfigTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.internal;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+@RunWith(JUnit4.class)\n+public class ManagedChannelServiceConfigTest {\n+\n+  @Test\n+  public void managedChannelServiceConfig_shouldParseHealthCheckingConfig() throws Exception {\n+    Map<String, ?> rawServiceConfig =\n+        parseConfig(\n+            \"{\\\"healthCheckConfig\\\": \"\n+                + \"{\\\"serviceName\\\": \\\"COVID-19\\\", \"\n+                + \"\\\"description\\\": \\\"I can't visit korea, because of you\\\"}}\");\n+    ManagedChannelServiceConfig mcsc =\n+        ManagedChannelServiceConfig.fromServiceConfig(rawServiceConfig, true, 3, 4, null);\n+    Map<String, ?> healthCheckingConfig = mcsc.getHealthCheckingConfig();\n+    assertThat(healthCheckingConfig).isNotNull();\n+    assertThat(healthCheckingConfig)\n+        .containsExactly(\n+            \"serviceName\", \"COVID-19\", \"description\", \"I can't visit korea, because of you\");\n+  }\n+\n+  @Test\n+  public void managedChannelServiceConfig_shouldHandleNoHealthCheckingConfig() throws Exception {\n+    ManagedChannelServiceConfig mcsc =\n+        ManagedChannelServiceConfig\n+            .fromServiceConfig(Collections.<String, Object>emptyMap(), true, 3, 4, null);\n+\n+    assertThat(mcsc.getHealthCheckingConfig()).isNull();\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private static Map<String, Object> parseConfig(String json) throws Exception {\n+    return (Map<String, Object>) JsonParser.parse(json);\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93174cad177bb96a2f7f1abc1e6c333c7675feea"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzYyMzE2", "url": "https://github.com/grpc/grpc-java/pull/6704#pullrequestreview-366762316", "createdAt": "2020-02-29T01:05:08Z", "commit": {"oid": "93174cad177bb96a2f7f1abc1e6c333c7675feea"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwMTowNTowOFrOFwGrBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwMTowNTowOFrOFwGrBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4NTI4Ng==", "bodyText": "Too soon.\n(But it was sad you aren't able to travel.)", "url": "https://github.com/grpc/grpc-java/pull/6704#discussion_r385985286", "createdAt": "2020-02-29T01:05:08Z", "author": {"login": "ejona86"}, "path": "core/src/test/java/io/grpc/internal/ManagedChannelServiceConfigTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.internal;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+@RunWith(JUnit4.class)\n+public class ManagedChannelServiceConfigTest {\n+\n+  @Test\n+  public void managedChannelServiceConfig_shouldParseHealthCheckingConfig() throws Exception {\n+    Map<String, ?> rawServiceConfig =\n+        parseConfig(\n+            \"{\\\"healthCheckConfig\\\": \"\n+                + \"{\\\"serviceName\\\": \\\"COVID-19\\\", \"\n+                + \"\\\"description\\\": \\\"I can't visit korea, because of you\\\"}}\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93174cad177bb96a2f7f1abc1e6c333c7675feea"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4570, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}