{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxOTc4ODEw", "number": 7626, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMjozNjoyMFrOE500VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzoxMTowMVrOE51Ofw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDY5NjUyOnYy", "diffSide": "RIGHT", "path": "netty/src/main/java/io/grpc/netty/NettyServer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMjozNjoyMFrOH0iGlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOToyODowNVrOH1Fr5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0Njc0Mw==", "bodyText": "Any\u00a0reason why the new param wasn't added to the end?", "url": "https://github.com/grpc/grpc-java/pull/7626#discussion_r524846743", "createdAt": "2020-11-17T02:36:20Z", "author": {"login": "sanjaypujare"}, "path": "netty/src/main/java/io/grpc/netty/NettyServer.java", "diffHunk": "@@ -113,7 +115,7 @@\n       long maxConnectionIdleInNanos,\n       long maxConnectionAgeInNanos, long maxConnectionAgeGraceInNanos,\n       boolean permitKeepAliveWithoutCalls, long permitKeepAliveTimeInNanos,\n-      InternalChannelz channelz) {\n+      Attributes eagAttributes, InternalChannelz channelz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec84cb31ef7134ee931fc6c3ec4e6a63b8d858ae"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyOTczMw==", "bodyText": "I actually went back-and-forth on it. Here it mirrors the NettyServerTransport and is more natural looking in NettyServerBuilder as channelz is not just a plain field in the builder. It doesn't matter much.", "url": "https://github.com/grpc/grpc-java/pull/7626#discussion_r525429733", "createdAt": "2020-11-17T19:28:05Z", "author": {"login": "ejona86"}, "path": "netty/src/main/java/io/grpc/netty/NettyServer.java", "diffHunk": "@@ -113,7 +115,7 @@\n       long maxConnectionIdleInNanos,\n       long maxConnectionAgeInNanos, long maxConnectionAgeGraceInNanos,\n       boolean permitKeepAliveWithoutCalls, long permitKeepAliveTimeInNanos,\n-      InternalChannelz channelz) {\n+      Attributes eagAttributes, InternalChannelz channelz) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0Njc0Mw=="}, "originalCommit": {"oid": "ec84cb31ef7134ee931fc6c3ec4e6a63b8d858ae"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDc2MzUxOnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzoxMTowMVrOH0it8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTozMDoxMFrOH1Fw5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg1NjgxOQ==", "bodyText": "Remove the 2nd sentence in the comment since it doesn't \"get the getXdsClientWrapperForServerSds from the serverSdsProtocolNegotiator\". In any case with my PR this will be a non-public method so the whole comment can be removed.", "url": "https://github.com/grpc/grpc-java/pull/7626#discussion_r524856819", "createdAt": "2020-11-17T03:11:01Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -199,26 +201,30 @@ public static XdsServerBuilder forPort(int port) {\n \n   @Override\n   public Server build() {\n+    XdsClientWrapperForServerSds xdsClient = new XdsClientWrapperForServerSds(port);\n+    ServerSdsProtocolNegotiator serverProtocolNegotiator = null;\n     if (fallbackProtocolNegotiator != null) {\n-      ServerSdsProtocolNegotiator serverProtocolNegotiator =\n-          SdsProtocolNegotiators.serverProtocolNegotiator(port, fallbackProtocolNegotiator);\n-      return buildServer(serverProtocolNegotiator);\n-    } else {\n-      return new ServerWrapperForXds(\n-          delegate.build(), new XdsClientWrapperForServerSds(port), errorNotifier);\n+      serverProtocolNegotiator =\n+          SdsProtocolNegotiators.serverProtocolNegotiator(fallbackProtocolNegotiator);\n     }\n+    return buildServer(xdsClient, serverProtocolNegotiator);\n   }\n \n   /**\n    * Creates a Server using the given serverSdsProtocolNegotiator: gets the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec84cb31ef7134ee931fc6c3ec4e6a63b8d858ae"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzMTAxMg==", "bodyText": "Done. Also added a mention of xdsClient.", "url": "https://github.com/grpc/grpc-java/pull/7626#discussion_r525431012", "createdAt": "2020-11-17T19:30:10Z", "author": {"login": "ejona86"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -199,26 +201,30 @@ public static XdsServerBuilder forPort(int port) {\n \n   @Override\n   public Server build() {\n+    XdsClientWrapperForServerSds xdsClient = new XdsClientWrapperForServerSds(port);\n+    ServerSdsProtocolNegotiator serverProtocolNegotiator = null;\n     if (fallbackProtocolNegotiator != null) {\n-      ServerSdsProtocolNegotiator serverProtocolNegotiator =\n-          SdsProtocolNegotiators.serverProtocolNegotiator(port, fallbackProtocolNegotiator);\n-      return buildServer(serverProtocolNegotiator);\n-    } else {\n-      return new ServerWrapperForXds(\n-          delegate.build(), new XdsClientWrapperForServerSds(port), errorNotifier);\n+      serverProtocolNegotiator =\n+          SdsProtocolNegotiators.serverProtocolNegotiator(fallbackProtocolNegotiator);\n     }\n+    return buildServer(xdsClient, serverProtocolNegotiator);\n   }\n \n   /**\n    * Creates a Server using the given serverSdsProtocolNegotiator: gets the", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg1NjgxOQ=="}, "originalCommit": {"oid": "ec84cb31ef7134ee931fc6c3ec4e6a63b8d858ae"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2297, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}