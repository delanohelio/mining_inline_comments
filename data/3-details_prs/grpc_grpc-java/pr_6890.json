{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MjQyMDEx", "number": 6890, "title": "xds: ensure we shutdown XdsClientImpl when XDS Server is shut down", "bodyText": "", "createdAt": "2020-04-01T21:29:18Z", "url": "https://github.com/grpc/grpc-java/pull/6890", "merged": true, "mergeCommit": {"oid": "e68b1d2ed62e804f12a2cdd1c348f6a3231ff156"}, "closed": true, "closedAt": "2020-04-03T17:08:01Z", "author": {"login": "sanjaypujare"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTe8PwAH2gAyMzk3MjQyMDExOmE0ZWQ4MjY5OTkyZWFiYTc3MjRkMDI0M2VlNzZmMjMwMDFmZmI2MTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUDbBiAFqTM4NzQwMTI5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a4ed8269992eaba7724d0243ee76f23001ffb619", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/a4ed8269992eaba7724d0243ee76f23001ffb619", "committedDate": "2020-04-01T21:53:36Z", "message": "xds: implement XdsServer to ensure we shutdown XdsClientImpl when XdsServer is shutdown"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "76e3ca7ee18b33ce48179cec165337aecf5b7bfa", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/76e3ca7ee18b33ce48179cec165337aecf5b7bfa", "committedDate": "2020-04-01T21:26:00Z", "message": "xds: implement XdsServer to ensure we shutdown XdsClientImpl when XdsServer is shutdown"}, "afterCommit": {"oid": "a4ed8269992eaba7724d0243ee76f23001ffb619", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/a4ed8269992eaba7724d0243ee76f23001ffb619", "committedDate": "2020-04-01T21:53:36Z", "message": "xds: implement XdsServer to ensure we shutdown XdsClientImpl when XdsServer is shutdown"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MDE2NTk4", "url": "https://github.com/grpc/grpc-java/pull/6890#pullrequestreview-386016598", "createdAt": "2020-04-01T23:26:49Z", "commit": {"oid": "a4ed8269992eaba7724d0243ee76f23001ffb619"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzoyNjo0OVrOF_WKCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzo1MTozMFrOF_WoQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2NzYyNQ==", "bodyText": "nit: add @Nullable to the param xdsClientWrapperForServerSds. but, i don't see why it wants null? if this is null the caller can use delegate Server. factory method returns Server type can easily achieve that if caller doesn't want to check null.", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r401967625", "createdAt": "2020-04-01T23:26:49Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServer.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.sds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import io.grpc.Server;\n+import io.grpc.ServerServiceDefinition;\n+import io.grpc.xds.XdsClientWrapperForServerSds;\n+\n+import java.io.IOException;\n+import java.net.SocketAddress;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Wraps a {@link Server} delegate and {@link XdsClientWrapperForServerSds} and intercepts\n+ * {@link Server#shutdown()} etc to properly shut down the {@link XdsClientWrapperForServerSds}\n+ * object.\n+ */\n+@VisibleForTesting\n+public final class XdsServer extends Server {\n+  private final Server delegate;\n+  @Nullable private final XdsClientWrapperForServerSds xdsClientWrapperForServerSds;\n+\n+  XdsServer(Server delegate, XdsClientWrapperForServerSds xdsClientWrapperForServerSds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ed8269992eaba7724d0243ee76f23001ffb619"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2ODMzNA==", "bodyText": "should this call shutdownNow?", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r401968334", "createdAt": "2020-04-01T23:29:02Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServer.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.sds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import io.grpc.Server;\n+import io.grpc.ServerServiceDefinition;\n+import io.grpc.xds.XdsClientWrapperForServerSds;\n+\n+import java.io.IOException;\n+import java.net.SocketAddress;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Wraps a {@link Server} delegate and {@link XdsClientWrapperForServerSds} and intercepts\n+ * {@link Server#shutdown()} etc to properly shut down the {@link XdsClientWrapperForServerSds}\n+ * object.\n+ */\n+@VisibleForTesting\n+public final class XdsServer extends Server {\n+  private final Server delegate;\n+  @Nullable private final XdsClientWrapperForServerSds xdsClientWrapperForServerSds;\n+\n+  XdsServer(Server delegate, XdsClientWrapperForServerSds xdsClientWrapperForServerSds) {\n+    checkNotNull(delegate, \"delegate\");\n+    this.delegate = delegate;\n+    this.xdsClientWrapperForServerSds = xdsClientWrapperForServerSds;\n+  }\n+\n+  @Override\n+  public Server start() throws IOException {\n+    delegate.start();\n+    return this;\n+  }\n+\n+  @Override\n+  public Server shutdown() {\n+    if (xdsClientWrapperForServerSds != null) {\n+      xdsClientWrapperForServerSds.shutdown();\n+    }\n+    delegate.shutdown();\n+    return this;\n+  }\n+\n+  @Override\n+  public Server shutdownNow() {\n+    if (xdsClientWrapperForServerSds != null) {\n+      xdsClientWrapperForServerSds.shutdown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ed8269992eaba7724d0243ee76f23001ffb619"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2OTkxNw==", "bodyText": "those should do awaitTermination on sds andThen server.", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r401969917", "createdAt": "2020-04-01T23:33:58Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServer.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.sds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import io.grpc.Server;\n+import io.grpc.ServerServiceDefinition;\n+import io.grpc.xds.XdsClientWrapperForServerSds;\n+\n+import java.io.IOException;\n+import java.net.SocketAddress;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Wraps a {@link Server} delegate and {@link XdsClientWrapperForServerSds} and intercepts\n+ * {@link Server#shutdown()} etc to properly shut down the {@link XdsClientWrapperForServerSds}\n+ * object.\n+ */\n+@VisibleForTesting\n+public final class XdsServer extends Server {\n+  private final Server delegate;\n+  @Nullable private final XdsClientWrapperForServerSds xdsClientWrapperForServerSds;\n+\n+  XdsServer(Server delegate, XdsClientWrapperForServerSds xdsClientWrapperForServerSds) {\n+    checkNotNull(delegate, \"delegate\");\n+    this.delegate = delegate;\n+    this.xdsClientWrapperForServerSds = xdsClientWrapperForServerSds;\n+  }\n+\n+  @Override\n+  public Server start() throws IOException {\n+    delegate.start();\n+    return this;\n+  }\n+\n+  @Override\n+  public Server shutdown() {\n+    if (xdsClientWrapperForServerSds != null) {\n+      xdsClientWrapperForServerSds.shutdown();\n+    }\n+    delegate.shutdown();\n+    return this;\n+  }\n+\n+  @Override\n+  public Server shutdownNow() {\n+    if (xdsClientWrapperForServerSds != null) {\n+      xdsClientWrapperForServerSds.shutdown();\n+    }\n+    delegate.shutdownNow();\n+    return this;\n+  }\n+\n+  @Override\n+  public boolean isShutdown() {\n+    return delegate.isShutdown();\n+  }\n+\n+  @Override\n+  public boolean isTerminated() {\n+    return delegate.isTerminated();\n+  }\n+\n+  @Override\n+  public boolean awaitTermination(long timeout, TimeUnit unit) throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ed8269992eaba7724d0243ee76f23001ffb619"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk3MzQ5Nw==", "bodyText": "nit: it would be nice if the other constructor is calling this one (or could be a factory method).", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r401973497", "createdAt": "2020-04-01T23:45:16Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -264,12 +266,24 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n         localXdsClientWrapperForServerSds =\n             XdsClientWrapperForServerSds.newInstance(port, Bootstrapper.getInstance(), syncContext);\n       } catch (Exception e) {\n-        logger.log(Level.WARNING, \"Exception while creating the xDS client\", e);\n+        logger.log(Level.FINE, \"Fallback to plaintext due to exception\", e);\n         localXdsClientWrapperForServerSds = null;\n       }\n       this.xdsClientWrapperForServerSds = localXdsClientWrapperForServerSds;\n     }\n \n+    @VisibleForTesting\n+    public ServerSdsProtocolNegotiator(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ed8269992eaba7724d0243ee76f23001ffb619"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk3Mzc0MA==", "bodyText": "nit: this field can be final", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r401973740", "createdAt": "2020-04-01T23:46:05Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -264,12 +266,24 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n         localXdsClientWrapperForServerSds =\n             XdsClientWrapperForServerSds.newInstance(port, Bootstrapper.getInstance(), syncContext);\n       } catch (Exception e) {\n-        logger.log(Level.WARNING, \"Exception while creating the xDS client\", e);\n+        logger.log(Level.FINE, \"Fallback to plaintext due to exception\", e);\n         localXdsClientWrapperForServerSds = null;\n       }\n       this.xdsClientWrapperForServerSds = localXdsClientWrapperForServerSds;\n     }\n \n+    @VisibleForTesting\n+    public ServerSdsProtocolNegotiator(\n+        DownstreamTlsContext downstreamTlsContext,\n+        XdsClientWrapperForServerSds xdsClientWrapperForServerSds) {\n+      this.downstreamTlsContext = downstreamTlsContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ed8269992eaba7724d0243ee76f23001ffb619"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk3NDcyNg==", "bodyText": "nit: null check here seems reasonable", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r401974726", "createdAt": "2020-04-01T23:49:17Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -264,12 +266,24 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n         localXdsClientWrapperForServerSds =\n             XdsClientWrapperForServerSds.newInstance(port, Bootstrapper.getInstance(), syncContext);\n       } catch (Exception e) {\n-        logger.log(Level.WARNING, \"Exception while creating the xDS client\", e);\n+        logger.log(Level.FINE, \"Fallback to plaintext due to exception\", e);\n         localXdsClientWrapperForServerSds = null;\n       }\n       this.xdsClientWrapperForServerSds = localXdsClientWrapperForServerSds;\n     }\n \n+    @VisibleForTesting\n+    public ServerSdsProtocolNegotiator(\n+        DownstreamTlsContext downstreamTlsContext,\n+        XdsClientWrapperForServerSds xdsClientWrapperForServerSds) {\n+      this.downstreamTlsContext = downstreamTlsContext;\n+      this.xdsClientWrapperForServerSds = xdsClientWrapperForServerSds;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ed8269992eaba7724d0243ee76f23001ffb619"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk3NTM2MQ==", "bodyText": "if you keep it in the io.grpc.xds.internal.sds, the ServerSdsProtocolNegotiator  doesn't need to expose it as public. also, the Builder is anyways in the sds package it seems better place to be.", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r401975361", "createdAt": "2020-04-01T23:51:30Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/XdsServerBuilderTest.java", "diffHunk": "@@ -14,17 +14,23 @@\n  * limitations under the License.\n  */\n \n-package io.grpc.xds.internal.sds;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ed8269992eaba7724d0243ee76f23001ffb619"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27e5fde094b543b8cc7dc33dab5d385d78a1c880", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/27e5fde094b543b8cc7dc33dab5d385d78a1c880", "committedDate": "2020-04-02T01:55:23Z", "message": "Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTk1OTE2", "url": "https://github.com/grpc/grpc-java/pull/6890#pullrequestreview-386595916", "createdAt": "2020-04-02T16:29:46Z", "commit": {"oid": "27e5fde094b543b8cc7dc33dab5d385d78a1c880"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNjoyOTo0N1rOF_zdPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNjo1MTo0NlrOF_0V5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ0NzY3OQ==", "bodyText": "then add @Nullable, if both are null isn't it plaintext?", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402447679", "createdAt": "2020-04-02T16:29:47Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -264,12 +266,24 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n         localXdsClientWrapperForServerSds =\n             XdsClientWrapperForServerSds.newInstance(port, Bootstrapper.getInstance(), syncContext);\n       } catch (Exception e) {\n-        logger.log(Level.WARNING, \"Exception while creating the xDS client\", e);\n+        logger.log(Level.FINE, \"Fallback to plaintext due to exception\", e);\n         localXdsClientWrapperForServerSds = null;\n       }\n       this.xdsClientWrapperForServerSds = localXdsClientWrapperForServerSds;\n     }\n \n+    @VisibleForTesting\n+    public ServerSdsProtocolNegotiator(\n+        DownstreamTlsContext downstreamTlsContext,\n+        XdsClientWrapperForServerSds xdsClientWrapperForServerSds) {\n+      this.downstreamTlsContext = downstreamTlsContext;\n+      this.xdsClientWrapperForServerSds = xdsClientWrapperForServerSds;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk3NDcyNg=="}, "originalCommit": {"oid": "a4ed8269992eaba7724d0243ee76f23001ffb619"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ0ODQ5NA==", "bodyText": "add @nullable for 2nd param. overall methods returns null should also be marked with the annotation. can you check other methods/params/instance variables for the classes in this PR?", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402448494", "createdAt": "2020-04-02T16:31:00Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServer.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.sds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.grpc.Server;\n+import io.grpc.ServerServiceDefinition;\n+import io.grpc.xds.XdsClientWrapperForServerSds;\n+\n+import java.io.IOException;\n+import java.net.SocketAddress;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+/**\n+ * Wraps a {@link Server} delegate and {@link XdsClientWrapperForServerSds} and intercepts\n+ * {@link Server#shutdown()} etc to properly shut down the {@link XdsClientWrapperForServerSds}\n+ * object.\n+ */\n+final class XdsServer extends Server {\n+  private final Server delegate;\n+  private final XdsClientWrapperForServerSds xdsClientWrapperForServerSds;\n+\n+  static Server newInstance(\n+      Server delegate, XdsClientWrapperForServerSds xdsClientWrapperForServerSds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27e5fde094b543b8cc7dc33dab5d385d78a1c880"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MjE4MA==", "bodyText": "why we do this instead of using plaintext when creating the protocol negotiator?", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402462180", "createdAt": "2020-04-02T16:51:46Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -251,23 +252,38 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n     }\n   }\n \n-  private static final class ServerSdsProtocolNegotiator implements ProtocolNegotiator {\n+  @VisibleForTesting\n+  public static final class ServerSdsProtocolNegotiator implements ProtocolNegotiator {\n \n-    private DownstreamTlsContext downstreamTlsContext;\n+    private final DownstreamTlsContext downstreamTlsContext;\n     private final XdsClientWrapperForServerSds xdsClientWrapperForServerSds;\n \n     ServerSdsProtocolNegotiator(\n         DownstreamTlsContext downstreamTlsContext, int port, SynchronizationContext syncContext) {\n-      this.downstreamTlsContext = downstreamTlsContext;\n-      XdsClientWrapperForServerSds localXdsClientWrapperForServerSds;\n+      this(downstreamTlsContext, getXdsClientWrapperForServerSds(port, syncContext));\n+    }\n+\n+    private static XdsClientWrapperForServerSds getXdsClientWrapperForServerSds(\n+        int port, SynchronizationContext syncContext) {\n       try {\n-        localXdsClientWrapperForServerSds =\n-            XdsClientWrapperForServerSds.newInstance(port, Bootstrapper.getInstance(), syncContext);\n+        return XdsClientWrapperForServerSds.newInstance(\n+            port, Bootstrapper.getInstance(), syncContext);\n       } catch (Exception e) {\n-        logger.log(Level.WARNING, \"Exception while creating the xDS client\", e);\n-        localXdsClientWrapperForServerSds = null;\n+        logger.log(Level.FINE, \"Fallback to plaintext due to exception\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27e5fde094b543b8cc7dc33dab5d385d78a1c880"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/77ae4eb691a8e32eba8231f8927d5881b7c7e0e9", "committedDate": "2020-04-02T23:36:36Z", "message": "address more review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODUyNjQ0", "url": "https://github.com/grpc/grpc-java/pull/6890#pullrequestreview-386852644", "createdAt": "2020-04-02T23:47:23Z", "commit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMzo0NzoyNFrOGAAXrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMDozMzowMFrOGABK0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY1OTI0NA==", "bodyText": "this method can move to the factory method in L79; this makes slightly more sense since the ServerSdsPN doesn't need to return plaintext which is not really ServerSdsPN.", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402659244", "createdAt": "2020-04-02T23:47:24Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -258,9 +260,15 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n     private final DownstreamTlsContext downstreamTlsContext;\n     private final XdsClientWrapperForServerSds xdsClientWrapperForServerSds;\n \n-    ServerSdsProtocolNegotiator(\n-        DownstreamTlsContext downstreamTlsContext, int port, SynchronizationContext syncContext) {\n-      this(downstreamTlsContext, getXdsClientWrapperForServerSds(port, syncContext));\n+    static ProtocolNegotiator createServerNegotiator(\n+        @Nullable DownstreamTlsContext downstreamTlsContext,\n+        int port,\n+        SynchronizationContext syncContext) {\n+      XdsClientWrapperForServerSds xdsClientWrapperForServerSds =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2MDI4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          (SdsProtocolNegotiators.ServerSdsProtocolNegotiator)serverProtocolNegotiator;\n          \n          \n            \n                      (SdsProtocolNegotiators.ServerSdsProtocolNegotiator) serverProtocolNegotiator;", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402660289", "createdAt": "2020-04-02T23:50:53Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -184,9 +185,15 @@ void panic(final Throwable t) {\n    */\n   @VisibleForTesting\n   public Server createXdsServer(\n-      SdsProtocolNegotiators.ServerSdsProtocolNegotiator serverSdsProtocolNegotiator) {\n-    delegate.protocolNegotiator(serverSdsProtocolNegotiator);\n-    return XdsServer.newInstance(\n-        delegate.build(), serverSdsProtocolNegotiator.getXdsClientWrapperForServerSds());\n+          InternalProtocolNegotiator.ProtocolNegotiator serverProtocolNegotiator) {\n+    delegate.protocolNegotiator(serverProtocolNegotiator);\n+    if (serverProtocolNegotiator instanceof SdsProtocolNegotiators.ServerSdsProtocolNegotiator) {\n+      SdsProtocolNegotiators.ServerSdsProtocolNegotiator serverSdsProtocolNegotiator =\n+              (SdsProtocolNegotiators.ServerSdsProtocolNegotiator)serverProtocolNegotiator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2MDY4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /** creates an instance from the 2 params. */\n          \n          \n            \n                /** Constructor. */", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402660688", "createdAt": "2020-04-02T23:52:18Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -274,15 +282,18 @@ private static XdsClientWrapperForServerSds getXdsClientWrapperForServerSds(\n       }\n     }\n \n+    /** creates an instance from the 2 params. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2MzA2MQ==", "bodyText": "indentation is wrong.", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402663061", "createdAt": "2020-04-03T00:00:18Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -184,9 +185,15 @@ void panic(final Throwable t) {\n    */\n   @VisibleForTesting\n   public Server createXdsServer(\n-      SdsProtocolNegotiators.ServerSdsProtocolNegotiator serverSdsProtocolNegotiator) {\n-    delegate.protocolNegotiator(serverSdsProtocolNegotiator);\n-    return XdsServer.newInstance(\n-        delegate.build(), serverSdsProtocolNegotiator.getXdsClientWrapperForServerSds());\n+          InternalProtocolNegotiator.ProtocolNegotiator serverProtocolNegotiator) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2NTU4OA==", "bodyText": "what makes it XdsServer?", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402665588", "createdAt": "2020-04-03T00:08:35Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServer.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.sds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.grpc.Server;\n+import io.grpc.ServerServiceDefinition;\n+import io.grpc.xds.XdsClientWrapperForServerSds;\n+\n+import java.io.IOException;\n+import java.net.SocketAddress;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Wraps a {@link Server} delegate and {@link XdsClientWrapperForServerSds} and intercepts\n+ * {@link Server#shutdown()} etc to properly shut down the {@link XdsClientWrapperForServerSds}\n+ * object.\n+ */\n+final class XdsServer extends Server {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2NjAwMw==", "bodyText": "wrong indentation", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402666003", "createdAt": "2020-04-03T00:09:53Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -77,7 +79,8 @@ public static ProtocolNegotiatorFactory clientProtocolNegotiatorFactory(\n   public static ProtocolNegotiator serverProtocolNegotiator(\n       @Nullable DownstreamTlsContext downstreamTlsContext, int port,\n       SynchronizationContext syncContext) {\n-    return new ServerSdsProtocolNegotiator(downstreamTlsContext, port, syncContext);\n+    return ServerSdsProtocolNegotiator.createServerNegotiator(\n+            downstreamTlsContext, port, syncContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2NjI4Mg==", "bodyText": "looks like those 2 can be null.", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402666282", "createdAt": "2020-04-03T00:11:23Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -251,23 +254,47 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n     }\n   }\n \n-  private static final class ServerSdsProtocolNegotiator implements ProtocolNegotiator {\n+  @VisibleForTesting\n+  public static final class ServerSdsProtocolNegotiator implements ProtocolNegotiator {\n \n-    private DownstreamTlsContext downstreamTlsContext;\n+    private final DownstreamTlsContext downstreamTlsContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2NjQxOQ==", "bodyText": "can we log when it downgrades to plaintext?", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402666419", "createdAt": "2020-04-03T00:11:56Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -251,23 +254,47 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n     }\n   }\n \n-  private static final class ServerSdsProtocolNegotiator implements ProtocolNegotiator {\n+  @VisibleForTesting\n+  public static final class ServerSdsProtocolNegotiator implements ProtocolNegotiator {\n \n-    private DownstreamTlsContext downstreamTlsContext;\n+    private final DownstreamTlsContext downstreamTlsContext;\n     private final XdsClientWrapperForServerSds xdsClientWrapperForServerSds;\n \n-    ServerSdsProtocolNegotiator(\n-        DownstreamTlsContext downstreamTlsContext, int port, SynchronizationContext syncContext) {\n-      this.downstreamTlsContext = downstreamTlsContext;\n-      XdsClientWrapperForServerSds localXdsClientWrapperForServerSds;\n+    static ProtocolNegotiator createServerNegotiator(\n+        @Nullable DownstreamTlsContext downstreamTlsContext,\n+        int port,\n+        SynchronizationContext syncContext) {\n+      XdsClientWrapperForServerSds xdsClientWrapperForServerSds =\n+          getXdsClientWrapperForServerSds(port, syncContext);\n+      return (xdsClientWrapperForServerSds == null && downstreamTlsContext == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2NzUxNg==", "bodyText": "(i know we discussed before) this exception seems too aggressive. a bit worried that this can make it very hard to debug", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402667516", "createdAt": "2020-04-03T00:15:51Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -251,23 +254,47 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n     }\n   }\n \n-  private static final class ServerSdsProtocolNegotiator implements ProtocolNegotiator {\n+  @VisibleForTesting\n+  public static final class ServerSdsProtocolNegotiator implements ProtocolNegotiator {\n \n-    private DownstreamTlsContext downstreamTlsContext;\n+    private final DownstreamTlsContext downstreamTlsContext;\n     private final XdsClientWrapperForServerSds xdsClientWrapperForServerSds;\n \n-    ServerSdsProtocolNegotiator(\n-        DownstreamTlsContext downstreamTlsContext, int port, SynchronizationContext syncContext) {\n-      this.downstreamTlsContext = downstreamTlsContext;\n-      XdsClientWrapperForServerSds localXdsClientWrapperForServerSds;\n+    static ProtocolNegotiator createServerNegotiator(\n+        @Nullable DownstreamTlsContext downstreamTlsContext,\n+        int port,\n+        SynchronizationContext syncContext) {\n+      XdsClientWrapperForServerSds xdsClientWrapperForServerSds =\n+          getXdsClientWrapperForServerSds(port, syncContext);\n+      return (xdsClientWrapperForServerSds == null && downstreamTlsContext == null)\n+          ? InternalProtocolNegotiators.serverPlaintext()\n+          : new ServerSdsProtocolNegotiator(downstreamTlsContext, xdsClientWrapperForServerSds);\n+    }\n+\n+    private static XdsClientWrapperForServerSds getXdsClientWrapperForServerSds(\n+        int port, SynchronizationContext syncContext) {\n       try {\n-        localXdsClientWrapperForServerSds =\n-            XdsClientWrapperForServerSds.newInstance(port, Bootstrapper.getInstance(), syncContext);\n+        return XdsClientWrapperForServerSds.newInstance(\n+            port, Bootstrapper.getInstance(), syncContext);\n       } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2Nzk2Nw==", "bodyText": "newInstance is misleading especially for server. it sounds like it will spin up a new server.", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402667967", "createdAt": "2020-04-03T00:17:23Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServer.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.sds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.grpc.Server;\n+import io.grpc.ServerServiceDefinition;\n+import io.grpc.xds.XdsClientWrapperForServerSds;\n+\n+import java.io.IOException;\n+import java.net.SocketAddress;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Wraps a {@link Server} delegate and {@link XdsClientWrapperForServerSds} and intercepts\n+ * {@link Server#shutdown()} etc to properly shut down the {@link XdsClientWrapperForServerSds}\n+ * object.\n+ */\n+final class XdsServer extends Server {\n+  private final Server delegate;\n+  private final XdsClientWrapperForServerSds xdsClientWrapperForServerSds;\n+\n+  static Server newInstance(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2OTc5MQ==", "bodyText": "when do we need to have  XdsClientWrapperForServerSds? it looks like it is only required during ProtocolNegotiation. if this is the case, we can rely on the PN#close.", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402669791", "createdAt": "2020-04-03T00:24:01Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServer.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.sds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.grpc.Server;\n+import io.grpc.ServerServiceDefinition;\n+import io.grpc.xds.XdsClientWrapperForServerSds;\n+\n+import java.io.IOException;\n+import java.net.SocketAddress;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Wraps a {@link Server} delegate and {@link XdsClientWrapperForServerSds} and intercepts\n+ * {@link Server#shutdown()} etc to properly shut down the {@link XdsClientWrapperForServerSds}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3MDMzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                       null);\n          \n          \n            \n                        null);", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402670339", "createdAt": "2020-04-03T00:26:01Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/internal/sds/SdsProtocolNegotiatorsTest.java", "diffHunk": "@@ -257,6 +258,14 @@ public void clientSdsProtocolNegotiatorNewHandler_fireProtocolNegotiationEvent()\n     assertTrue(channel.isOpen());\n   }\n \n+  @Test\n+  public void serverSdsProtocolNegotiator_passNulls_expectPlaintext() {\n+    InternalProtocolNegotiator.ProtocolNegotiator protocolNegotiator =\n+        SdsProtocolNegotiators.ServerSdsProtocolNegotiator.createServerNegotiator(null, 7000,\n+           null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3MjMzOA==", "bodyText": "it is weird that this build() doesn't return XdsServer even though it is XdsServerBuilder. Although it is questionable that we need that XdsServer class or not.", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r402672338", "createdAt": "2020-04-03T00:33:00Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -171,9 +173,27 @@ void panic(final Throwable t) {\n               panicMode = true;\n             }\n           });\n-    delegate.protocolNegotiator(\n+    InternalProtocolNegotiator.ProtocolNegotiator serverProtocolNegotiator =\n         SdsProtocolNegotiators.serverProtocolNegotiator(\n-            this.downstreamTlsContext, port, syncContext));\n-    return delegate.build();\n+            this.downstreamTlsContext, port, syncContext);\n+    return createXdsServer(serverProtocolNegotiator);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae4eb691a8e32eba8231f8927d5881b7c7e0e9"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "674cdb04e598f77aa8dd55f0375f21ae9d2661ea", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/674cdb04e598f77aa8dd55f0375f21ae9d2661ea", "committedDate": "2020-04-03T04:49:51Z", "message": "Update xds/src/test/java/io/grpc/xds/internal/sds/SdsProtocolNegotiatorsTest.java\n\nCo-Authored-By: Jihun Cho <jihuncho@google.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ca0be5b871317490a1f491ed0d283ae6f90e9e4", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/7ca0be5b871317490a1f491ed0d283ae6f90e9e4", "committedDate": "2020-04-03T04:50:49Z", "message": "Update xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java\n\nCo-Authored-By: Jihun Cho <jihuncho@google.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bf181d367858f1cbc70b6d3ca4a92f046960f8a", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/4bf181d367858f1cbc70b6d3ca4a92f046960f8a", "committedDate": "2020-04-03T04:51:16Z", "message": "Update xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java\n\nCo-Authored-By: Jihun Cho <jihuncho@google.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0ee2fbed08085b8498de3c4d3ddf6dc630aa0d9", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/f0ee2fbed08085b8498de3c4d3ddf6dc630aa0d9", "committedDate": "2020-04-03T06:06:17Z", "message": "address next set of comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a77bc8c5571b12f8c120feb41c9d2fd49680d2b", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/8a77bc8c5571b12f8c120feb41c9d2fd49680d2b", "committedDate": "2020-04-03T06:30:54Z", "message": "fix formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbc24320b802955efa1f42f2bd58107d8520e905", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/bbc24320b802955efa1f42f2bd58107d8520e905", "committedDate": "2020-04-03T06:40:35Z", "message": "log a message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDAxMjkx", "url": "https://github.com/grpc/grpc-java/pull/6890#pullrequestreview-387401291", "createdAt": "2020-04-03T16:21:19Z", "commit": {"oid": "bbc24320b802955efa1f42f2bd58107d8520e905"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyMToxOVrOGAcrSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyMjo1NlrOGAcwpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyMzAxNw==", "bodyText": "the port is not used if the xdsClientWrapperForServerSds is null, right?", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r403123017", "createdAt": "2020-04-03T16:21:19Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -77,7 +79,14 @@ public static ProtocolNegotiatorFactory clientProtocolNegotiatorFactory(\n   public static ProtocolNegotiator serverProtocolNegotiator(\n       @Nullable DownstreamTlsContext downstreamTlsContext, int port,\n       SynchronizationContext syncContext) {\n-    return new ServerSdsProtocolNegotiator(downstreamTlsContext, port, syncContext);\n+    XdsClientWrapperForServerSds xdsClientWrapperForServerSds =\n+        ServerSdsProtocolNegotiator.getXdsClientWrapperForServerSds(port, syncContext);\n+    if (xdsClientWrapperForServerSds == null && downstreamTlsContext == null) {\n+      logger.log(Level.INFO, \"Fallback to plaintext for server at port {0}\", port);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbc24320b802955efa1f42f2bd58107d8520e905"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyNDM5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2019 The gRPC Authors\n          \n          \n            \n             * Copyright 2020 The gRPC Authors", "url": "https://github.com/grpc/grpc-java/pull/6890#discussion_r403124391", "createdAt": "2020-04-03T16:22:56Z", "author": {"login": "creamsoup"}, "path": "xds/src/test/java/io/grpc/xds/XdsServerBuilderTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2019 The gRPC Authors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbc24320b802955efa1f42f2bd58107d8520e905"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4505, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}