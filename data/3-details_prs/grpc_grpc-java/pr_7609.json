{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NTkxODg2", "number": 7609, "title": "interop: create PSM security xDS interop tests - server & client", "bodyText": "Sergii: interop tests for xDS security", "createdAt": "2020-11-10T16:00:13Z", "url": "https://github.com/grpc/grpc-java/pull/7609", "merged": true, "mergeCommit": {"oid": "a7530efd6ebbe4e255e1e5eef06e76dec2e8708c"}, "closed": true, "closedAt": "2020-11-21T02:31:41Z", "author": {"login": "sanjaypujare"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbRDaLAFqTUyNzY1NzY2OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeijjRAFqTUzNTg3NDcxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NjU3NjY4", "url": "https://github.com/grpc/grpc-java/pull/7609#pullrequestreview-527657668", "createdAt": "2020-11-10T22:25:18Z", "commit": {"oid": "663b58be2c06c2d3fcfc82b052419f6743712b33"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c65531ce491226c7a7053338b617389ca14c51a4", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/c65531ce491226c7a7053338b617389ca14c51a4", "committedDate": "2020-11-11T23:02:54Z", "message": "delete the copies created"}, "afterCommit": {"oid": "c9344cfa7a77c3e327fd2285f96a3b43dbecf354", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/c9344cfa7a77c3e327fd2285f96a3b43dbecf354", "committedDate": "2020-11-18T23:25:44Z", "message": "delete the copies created"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MDI2MDk2", "url": "https://github.com/grpc/grpc-java/pull/7609#pullrequestreview-534026096", "createdAt": "2020-11-19T02:07:30Z", "commit": {"oid": "acd2c3a6545bb463f9f16c12892ceac02247559c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjowNzozMFrOH2Jv-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoyMTo1OVrOH2KBvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0NDg4OA==", "bodyText": "I think this should be reverted too\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private String server = \"localhost:8081\";\n          \n          \n            \n              private String server = \"localhost:8080\";", "url": "https://github.com/grpc/grpc-java/pull/7609#discussion_r526544888", "createdAt": "2020-11-19T02:07:30Z", "author": {"login": "sergiitk"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -81,7 +82,8 @@\n   private int qps = 1;\n   private volatile RpcConfig rpcConfig;\n   private int rpcTimeoutSec = 20;\n-  private String server = \"localhost:8080\";\n+  private boolean secureMode = false;\n+  private String server = \"localhost:8081\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c3a6545bb463f9f16c12892ceac02247559c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0NjQ0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.err.println(\"Timed out waiting for otherServer shutdown\");\n          \n          \n            \n                  System.err.println(\"Timed out waiting for maintenanceServer shutdown\");", "url": "https://github.com/grpc/grpc-java/pull/7609#discussion_r526546446", "createdAt": "2020-11-19T02:12:20Z", "author": {"login": "sergiitk"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "diffHunk": "@@ -135,30 +159,58 @@ private void start() throws Exception {\n       throw new RuntimeException(e);\n     }\n     health = new HealthStatusManager();\n-    server =\n-        NettyServerBuilder.forPort(port)\n-            .addService(\n-                ServerInterceptors.intercept(\n-                    new TestServiceImpl(serverId, host), new TestInfoInterceptor(host)))\n-            .addService(new XdsUpdateHealthServiceImpl(health))\n-            .addService(health.getHealthService())\n-            .addService(ProtoReflectionService.newInstance())\n-            .build()\n-            .start();\n+    if (secureMode) {\n+      server =\n+          XdsServerBuilder.forPort(port)\n+              .addService(\n+                  ServerInterceptors.intercept(\n+                      new TestServiceImpl(serverId, host), new TestInfoInterceptor(host)))\n+              .useXdsSecurityWithPlaintextFallback()\n+              .build()\n+              .start();\n+      maintenanceServer =\n+          NettyServerBuilder.forPort(maintenancePort)\n+              .addService(new XdsUpdateHealthServiceImpl(health))\n+              .addService(health.getHealthService())\n+              .addService(ProtoReflectionService.newInstance())\n+              .build()\n+              .start();\n+    } else {\n+      server =\n+          NettyServerBuilder.forPort(port)\n+              .addService(\n+                  ServerInterceptors.intercept(\n+                      new TestServiceImpl(serverId, host), new TestInfoInterceptor(host)))\n+              .addService(new XdsUpdateHealthServiceImpl(health))\n+              .addService(health.getHealthService())\n+              .addService(ProtoReflectionService.newInstance())\n+              .build()\n+              .start();\n+      maintenanceServer = null;\n+    }\n     health.setStatus(\"\", ServingStatus.SERVING);\n   }\n \n   private void stop() throws Exception {\n     server.shutdownNow();\n+    if (maintenanceServer != null) {\n+      maintenanceServer.shutdownNow();\n+    }\n     if (!server.awaitTermination(5, TimeUnit.SECONDS)) {\n       System.err.println(\"Timed out waiting for server shutdown\");\n     }\n+    if (maintenanceServer != null && !maintenanceServer.awaitTermination(5, TimeUnit.SECONDS)) {\n+      System.err.println(\"Timed out waiting for otherServer shutdown\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c3a6545bb463f9f16c12892ceac02247559c"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0OTAwNw==", "bodyText": "Do we want to enforce this for the insecure mode? If so, we need to handle the case when --port is set to something that isn't 8080 via CLI args, otherwise it'll break existing runners. Let's say one of existing runners overrides the port:\nbin/xds-test-server --port=8081\nIt'll compare port 8081 to the default maintenance port 8080. So it'll enter this if and try to enforce the security mode.", "url": "https://github.com/grpc/grpc-java/pull/7609#discussion_r526549007", "createdAt": "2020-11-19T02:20:31Z", "author": {"login": "sergiitk"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "diffHunk": "@@ -112,14 +120,30 @@ private void parseArgs(String[] args) {\n       }\n     }\n \n+    if (secureMode == (port == maintenancePort)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c3a6545bb463f9f16c12892ceac02247559c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0OTQzOQ==", "bodyText": "I think these scripts already do snake_case for args: https://github.com/grpc/grpc/blob/master/doc/xds-test-descriptions.md#client\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          + \"\\n  --maintenancePort=INT      listening port for other servers.\"\n          \n          \n            \n                          + \"\\n  --maintenance_port=INT      listening port for other servers.\"\n          \n      \n    \n    \n  \n\nSame for secureMode -> secure_mode", "url": "https://github.com/grpc/grpc-java/pull/7609#discussion_r526549439", "createdAt": "2020-11-19T02:21:59Z", "author": {"login": "sergiitk"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "diffHunk": "@@ -112,14 +120,30 @@ private void parseArgs(String[] args) {\n       }\n     }\n \n+    if (secureMode == (port == maintenancePort)) {\n+      System.err.println(\n+          \"port and maintenancePort should be same for insecure and different for secure mode: port=\"\n+              + port\n+              + \", maintenancePort=\"\n+              + maintenancePort);\n+      usage = true;\n+    }\n+\n     if (usage) {\n       XdsTestServer s = new XdsTestServer();\n       System.err.println(\n           \"Usage: [ARGS...]\"\n               + \"\\n\"\n-              + \"\\n  --port=INT          listening port for server.\"\n+              + \"\\n  --port=INT          listening port for test server.\"\n               + \"\\n                      Default: \"\n               + s.port\n+              + \"\\n  --maintenancePort=INT      listening port for other servers.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c3a6545bb463f9f16c12892ceac02247559c"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0a74af9c47265ce95e5449782439b8e4ba06dc3", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/b0a74af9c47265ce95e5449782439b8e4ba06dc3", "committedDate": "2020-11-20T01:33:43Z", "message": "interop: create PSM security xDS interop tests - server & client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac6a3d4e5445f503e991488b8f6b66cf421624e8", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/ac6a3d4e5445f503e991488b8f6b66cf421624e8", "committedDate": "2020-11-20T01:33:43Z", "message": "address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0e9a3f49b306da9bde75bdb8935d08a17f769c6", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/d0e9a3f49b306da9bde75bdb8935d08a17f769c6", "committedDate": "2020-11-20T01:33:43Z", "message": "delete the copies created"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe1391e1f3ec25a28c78a9e77ff05080b0f6e483", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/fe1391e1f3ec25a28c78a9e77ff05080b0f6e483", "committedDate": "2020-11-20T01:33:43Z", "message": "rename things and make compatible with old set up when secureMode is false"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a33ac7d46da3f51ad8c65dace374af10c5396e2b", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/a33ac7d46da3f51ad8c65dace374af10c5396e2b", "committedDate": "2020-11-20T01:33:43Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Sergii Tkachenko <hi@sergii.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e32cda3a39ed2a9f2f8fc4363b6c7a42539ff295", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/e32cda3a39ed2a9f2f8fc4363b6c7a42539ff295", "committedDate": "2020-11-20T01:33:43Z", "message": "accept review comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09c88196181e91216f1fd393e3640c0f77e38a98", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/09c88196181e91216f1fd393e3640c0f77e38a98", "committedDate": "2020-11-20T01:33:43Z", "message": "address remainign comments and fix the package name of XdsServerBuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b9e4465fa5d365274ed4bcf88853e0b44908cd2", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/0b9e4465fa5d365274ed4bcf88853e0b44908cd2", "committedDate": "2020-11-20T01:40:36Z", "message": "fixup after rebasing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3297616ae0bd88e3e4db1e39d4463ffde7f5d7de", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/3297616ae0bd88e3e4db1e39d4463ffde7f5d7de", "committedDate": "2020-11-19T02:52:43Z", "message": "accept review comment"}, "afterCommit": {"oid": "0b9e4465fa5d365274ed4bcf88853e0b44908cd2", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/0b9e4465fa5d365274ed4bcf88853e0b44908cd2", "committedDate": "2020-11-20T01:40:36Z", "message": "fixup after rebasing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NTY5Njcz", "url": "https://github.com/grpc/grpc-java/pull/7609#pullrequestreview-535569673", "createdAt": "2020-11-20T16:16:58Z", "commit": {"oid": "0b9e4465fa5d365274ed4bcf88853e0b44908cd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1ODc0NzE1", "url": "https://github.com/grpc/grpc-java/pull/7609#pullrequestreview-535874715", "createdAt": "2020-11-21T02:30:34Z", "commit": {"oid": "0b9e4465fa5d365274ed4bcf88853e0b44908cd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3983, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}