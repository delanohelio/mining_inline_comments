{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjIzNDk2", "number": 6967, "title": "api, core, services: make ProtoReflectionService interceptor compatible", "bodyText": "Resolves #3469.\nMajor changes:\n\nPut ServerImpl instance to its Context so that all server calls have access to the Server instance from which they are dispatched.\nInternalNotifyOnServerBuild is eliminated as the server reference can be captured with a server interceptor.\nEnhancement: allow using the same ProtoReflectionService instance across multiple servers without recomputing the whole service index for each server.", "createdAt": "2020-04-23T22:03:44Z", "url": "https://github.com/grpc/grpc-java/pull/6967", "merged": true, "mergeCommit": {"oid": "a42390049168da6a6e07f6e1f3b572b69e9150f8"}, "closed": true, "closedAt": "2020-05-01T17:39:39Z", "author": {"login": "voidzcy"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcakMbMAH2gAyNDA4MjIzNDk2OjRmNzQ2MmQ4MzQwMDgzNzE0Njc1OTU3NDQyNzkzODcwYTk2YmEzMTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcc0l1YgFqTQwMzkxMzAxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4f7462d8340083714675957442793870a96ba311", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/4f7462d8340083714675957442793870a96ba311", "committedDate": "2020-04-23T21:58:16Z", "message": "Eliminate InternalNotifyOnServerBuilder interface."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d8547aa5f8a050789f22288bd59292d654bc2c8", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/7d8547aa5f8a050789f22288bd59292d654bc2c8", "committedDate": "2020-04-23T21:58:38Z", "message": "Expose server reference on ServerCall interface."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19529270d93a81fff621703e6c4ee70ddf66933f", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/19529270d93a81fff621703e6c4ee70ddf66933f", "committedDate": "2020-04-23T22:01:07Z", "message": "Add getServer() API implementation to subclasses."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b51f87e512d67d1a1de7b3b69ec43a78d372eed", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/5b51f87e512d67d1a1de7b3b69ec43a78d372eed", "committedDate": "2020-04-23T22:01:42Z", "message": "Obtain server via a server interceptor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9273cdd24397fd30e339d3a66c41a04d9e1af69a", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/9273cdd24397fd30e339d3a66c41a04d9e1af69a", "committedDate": "2020-04-23T22:02:10Z", "message": "Eliminate callback for server build."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjcyNTkz", "url": "https://github.com/grpc/grpc-java/pull/6967#pullrequestreview-402272593", "createdAt": "2020-04-28T23:05:23Z", "commit": {"oid": "9273cdd24397fd30e339d3a66c41a04d9e1af69a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzowNToyM1rOGNqMQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzowOToyM1rOGNqSrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3NTkzNg==", "bodyText": "It must have a default implementation. Either return null or UnsupportedOperationException. The documentation should say what the default behavior is when unsupported.", "url": "https://github.com/grpc/grpc-java/pull/6967#discussion_r416975936", "createdAt": "2020-04-28T23:05:23Z", "author": {"login": "ejona86"}, "path": "api/src/main/java/io/grpc/ServerCall.java", "diffHunk": "@@ -229,4 +229,10 @@ public String getAuthority() {\n    * The {@link MethodDescriptor} for the call.\n    */\n   public abstract MethodDescriptor<ReqT, RespT> getMethodDescriptor();\n+\n+  /**\n+   * Returns the {@link Server} that dispatches the call.\n+   */\n+  // TODO(chengyuanzhang): add ExperimentalApi annotation.\n+  public abstract Server getServer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9273cdd24397fd30e339d3a66c41a04d9e1af69a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3NjA3Mw==", "bodyText": "Yeah, we can go ahead and create that.", "url": "https://github.com/grpc/grpc-java/pull/6967#discussion_r416976073", "createdAt": "2020-04-28T23:05:45Z", "author": {"login": "ejona86"}, "path": "api/src/main/java/io/grpc/ServerCall.java", "diffHunk": "@@ -229,4 +229,10 @@ public String getAuthority() {\n    * The {@link MethodDescriptor} for the call.\n    */\n   public abstract MethodDescriptor<ReqT, RespT> getMethodDescriptor();\n+\n+  /**\n+   * Returns the {@link Server} that dispatches the call.\n+   */\n+  // TODO(chengyuanzhang): add ExperimentalApi annotation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9273cdd24397fd30e339d3a66c41a04d9e1af69a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3NzU4Mw==", "bodyText": "I don't think it would be obvious that you must use a different reflection service instance for each server. Can we instead add the Server to the Context and handle multiple servers? (WeakHashMap may make sense)", "url": "https://github.com/grpc/grpc-java/pull/6967#discussion_r416977583", "createdAt": "2020-04-28T23:09:23Z", "author": {"login": "ejona86"}, "path": "services/src/main/java/io/grpc/protobuf/services/ProtoReflectionService.java", "diffHunk": "@@ -140,6 +150,21 @@ private ServerReflectionIndex updateIndexIfNecessary() {\n     return requestObserver;\n   }\n \n+  private static final class ServerCaptureInterceptor implements ServerInterceptor {\n+    private final AtomicReference<Server> captor;\n+\n+    ServerCaptureInterceptor(AtomicReference<Server> captor) {\n+      this.captor = captor;\n+    }\n+\n+    @Override\n+    public <ReqT, RespT> Listener<ReqT> interceptCall(ServerCall<ReqT, RespT> call,\n+        Metadata headers, ServerCallHandler<ReqT, RespT> next) {\n+      captor.set(call.getServer());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9273cdd24397fd30e339d3a66c41a04d9e1af69a"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d26801272485926a6a04e31b3bbb79fc4c1f9c73", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/d26801272485926a6a04e31b3bbb79fc4c1f9c73", "committedDate": "2020-04-29T21:29:44Z", "message": "Add default implementation for ServerCall.getServer()."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "933d0992993a8573a39e4c9f8292b496e14526a3", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/933d0992993a8573a39e4c9f8292b496e14526a3", "committedDate": "2020-04-29T21:31:51Z", "message": "Add ExperimentalApi annotation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "130adde5b13209a6aa5d14e36b2329c66d9d79d7", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/130adde5b13209a6aa5d14e36b2329c66d9d79d7", "committedDate": "2020-04-29T23:11:15Z", "message": "Remove comment requirement for using one reflection service instance per server."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f50789b05b52a9985c8c2eda5cefc016ba6bfec7", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/f50789b05b52a9985c8c2eda5cefc016ba6bfec7", "committedDate": "2020-04-30T00:53:10Z", "message": "Add a simple test case covering a single reflection service instance can be shared for multiple servers."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNzExNjY4", "url": "https://github.com/grpc/grpc-java/pull/6967#pullrequestreview-403711668", "createdAt": "2020-04-30T17:04:01Z", "commit": {"oid": "130adde5b13209a6aa5d14e36b2329c66d9d79d7"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzowNDowMVrOGOyVpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzowODo1OVrOGOyhBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE1Nzk5MQ==", "bodyText": "Doh. I missed this before. Of course it was already limited to one server. Sorry for asking for the WeakHashMap, although it is nicer that way. I guess previously we'd have just returned wrong data? Yeah, using the WeakHashMap is much nicer for users.", "url": "https://github.com/grpc/grpc-java/pull/6967#discussion_r418157991", "createdAt": "2020-04-30T17:04:01Z", "author": {"login": "ejona86"}, "path": "services/src/main/java/io/grpc/protobuf/services/ProtoReflectionService.java", "diffHunk": "@@ -77,8 +77,7 @@\n   private ProtoReflectionService() {}\n \n   /**\n-   * Creates a instance of {@link ProtoReflectionService}. Intended usage is one instance per", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "130adde5b13209a6aa5d14e36b2329c66d9d79d7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE1OTIwMQ==", "bodyText": "@GuardedBy(\"this\")?", "url": "https://github.com/grpc/grpc-java/pull/6967#discussion_r418159201", "createdAt": "2020-04-30T17:06:06Z", "author": {"login": "ejona86"}, "path": "services/src/main/java/io/grpc/protobuf/services/ProtoReflectionService.java", "diffHunk": "@@ -68,11 +68,8 @@\n @ExperimentalApi(\"https://github.com/grpc/grpc-java/issues/2222\")\n public final class ProtoReflectionService extends ServerReflectionGrpc.ServerReflectionImplBase {\n \n-  private final Object lock = new Object();\n-\n+  private final Map<Server, ServerReflectionIndex> serverReflectionIndexes = new WeakHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f50789b05b52a9985c8c2eda5cefc016ba6bfec7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE2MDkwMQ==", "bodyText": "Why get rid of this lock? We generally do this on purpose to avoid letting a user from interacting with our synchronization.", "url": "https://github.com/grpc/grpc-java/pull/6967#discussion_r418160901", "createdAt": "2020-04-30T17:08:59Z", "author": {"login": "ejona86"}, "path": "services/src/main/java/io/grpc/protobuf/services/ProtoReflectionService.java", "diffHunk": "@@ -68,11 +68,8 @@\n @ExperimentalApi(\"https://github.com/grpc/grpc-java/issues/2222\")\n public final class ProtoReflectionService extends ServerReflectionGrpc.ServerReflectionImplBase {\n \n-  private final Object lock = new Object();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f50789b05b52a9985c8c2eda5cefc016ba6bfec7"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acb2a44e07c91d634a59b2e81083af75de240c07", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/acb2a44e07c91d634a59b2e81083af75de240c07", "committedDate": "2020-04-30T17:25:36Z", "message": "Use explicit lock"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19fd73030f715f534d53d9dcc671b42172b7b354", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/19fd73030f715f534d53d9dcc671b42172b7b354", "committedDate": "2020-04-30T20:10:00Z", "message": "Put server into Context."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0d15a6e40eebf727f972d37c4f5345b09690fdb", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/b0d15a6e40eebf727f972d37c4f5345b09690fdb", "committedDate": "2020-04-30T20:10:23Z", "message": "Add an internal accessor for accessing the Context key."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3935faa87c7bfc19fe601f0b130c97ecfadf818", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/d3935faa87c7bfc19fe601f0b130c97ecfadf818", "committedDate": "2020-04-30T20:10:50Z", "message": "Change ProtoReflectionService to obtain Server from Context."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4a6b9ba19f297fb85f2e66f740b22ede32b65d8", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e4a6b9ba19f297fb85f2e66f740b22ede32b65d8", "committedDate": "2020-04-30T20:21:00Z", "message": "Revert changes for exposing Server via ServerCall."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzODc4MDU0", "url": "https://github.com/grpc/grpc-java/pull/6967#pullrequestreview-403878054", "createdAt": "2020-04-30T21:07:06Z", "commit": {"oid": "e4a6b9ba19f297fb85f2e66f740b22ede32b65d8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMTowNzowN1rOGO6XeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMTowNzo1OFrOGO6ZBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI4OTUyOA==", "bodyText": "Since this instance is being used as API and not as convenience, the instance needs to be created in io.grpc (not just copied, like here). If we shaded io.grpc.internal this reference would no longer match between implementations.", "url": "https://github.com/grpc/grpc-java/pull/6967#discussion_r418289528", "createdAt": "2020-04-30T21:07:07Z", "author": {"login": "ejona86"}, "path": "core/src/main/java/io/grpc/internal/InternalServerAccessor.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.internal;\n+\n+import io.grpc.Context;\n+import io.grpc.Internal;\n+import io.grpc.Server;\n+\n+/**\n+ * Internal accessor for getting the {@link Server} instance inside server RPC {@link Context}.\n+ * This is intended for usage internal to the gRPC team, as it's unclear to us what users would\n+ * need. If you *really* think you need to use this, please file an issue for us to discuss a\n+ * public API.\n+ */\n+@Internal\n+public class InternalServerAccessor {\n+  public static final Context.Key<Server> SERVER_KEY = ServerImpl.SERVER_CONTEXT_KEY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4a6b9ba19f297fb85f2e66f740b22ede32b65d8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI4OTkyNg==", "bodyText": "Let's drop the \"really\". I don't see the need for the emphasis, and no real need to scare off users from filing an issue.", "url": "https://github.com/grpc/grpc-java/pull/6967#discussion_r418289926", "createdAt": "2020-04-30T21:07:58Z", "author": {"login": "ejona86"}, "path": "core/src/main/java/io/grpc/internal/InternalServerAccessor.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.internal;\n+\n+import io.grpc.Context;\n+import io.grpc.Internal;\n+import io.grpc.Server;\n+\n+/**\n+ * Internal accessor for getting the {@link Server} instance inside server RPC {@link Context}.\n+ * This is intended for usage internal to the gRPC team, as it's unclear to us what users would\n+ * need. If you *really* think you need to use this, please file an issue for us to discuss a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4a6b9ba19f297fb85f2e66f740b22ede32b65d8"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a979c5c6d3ecbd3377867424e75fabcaf330030", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/9a979c5c6d3ecbd3377867424e75fabcaf330030", "committedDate": "2020-04-30T21:45:07Z", "message": "Move the Context key definition and accessor to io.grpc."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTA3MDM4", "url": "https://github.com/grpc/grpc-java/pull/6967#pullrequestreview-403907038", "createdAt": "2020-04-30T21:59:43Z", "commit": {"oid": "9a979c5c6d3ecbd3377867424e75fabcaf330030"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMTo1OTo0M1rOGO70IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMTo1OTo0M1rOGO70IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMxMzI0OA==", "bodyText": "protected leaks it. Using package-private is probably better.", "url": "https://github.com/grpc/grpc-java/pull/6967#discussion_r418313248", "createdAt": "2020-04-30T21:59:43Z", "author": {"login": "ejona86"}, "path": "api/src/main/java/io/grpc/Server.java", "diffHunk": "@@ -30,6 +30,14 @@\n @ThreadSafe\n public abstract class Server {\n \n+  /**\n+   * Key for accessing the {@link Server} instance inside server RPC {@link Context}. It's\n+   * unclear to us what users would need. If you think you need to use this, please file an\n+   * issue for us to discuss a public API.\n+   */\n+  protected static final Context.Key<Server> SERVER_CONTEXT_KEY =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a979c5c6d3ecbd3377867424e75fabcaf330030"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6277cac648680d5de348817a9efd9ddaaaefffb5", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/6277cac648680d5de348817a9efd9ddaaaefffb5", "committedDate": "2020-04-30T22:00:55Z", "message": "Makee context key package private."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTEzMDE1", "url": "https://github.com/grpc/grpc-java/pull/6967#pullrequestreview-403913015", "createdAt": "2020-04-30T22:12:21Z", "commit": {"oid": "6277cac648680d5de348817a9efd9ddaaaefffb5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4353, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}