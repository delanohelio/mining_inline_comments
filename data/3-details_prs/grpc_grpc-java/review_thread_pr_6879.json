{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NjM1ODkz", "number": 6879, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMjo1Mzo0OFrODuniMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDoxOTo0NFrODvWhRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjA4ODE3OnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/XdsExperimentalNameResolverProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMjo1Mzo0OFrOGAr-wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMjo1Mzo0OFrOGAr-wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM3Mzc2MA==", "bodyText": "nit: final.", "url": "https://github.com/grpc/grpc-java/pull/6879#discussion_r403373760", "createdAt": "2020-04-03T22:53:48Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/XdsExperimentalNameResolverProvider.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import com.google.common.base.Preconditions;\n+import io.grpc.Internal;\n+import io.grpc.NameResolver;\n+import io.grpc.NameResolver.Args;\n+import io.grpc.NameResolverProvider;\n+import io.grpc.internal.ExponentialBackoffPolicy;\n+import io.grpc.internal.GrpcUtil;\n+import io.grpc.xds.XdsClient.XdsChannelFactory;\n+import java.net.URI;\n+\n+/** A deprecated provider for {@link XdsNameResolver}. */\n+// TODO(zdapeng): remove this class once it's not needed for interop testing.\n+@Deprecated\n+@Internal\n+public class XdsExperimentalNameResolverProvider extends NameResolverProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c4020daa705c4025cc33aeb2a1a5192ee955364"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTc4NjI5OnYy", "diffSide": "RIGHT", "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverProviderTest.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDoxOTo0NFrOGBukEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMjo1NzozNVrOGBxJGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDY1OA==", "bodyText": "No tests will verify that xds-experimental still works?", "url": "https://github.com/grpc/grpc-java/pull/6879#discussion_r404464658", "createdAt": "2020-04-07T00:19:44Z", "author": {"login": "ericgribkoff"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverProviderTest.java", "diffHunk": "@@ -91,22 +91,22 @@ public void newNameResolver() {\n   public void validName_withAuthority() {\n     XdsNameResolver resolver =\n         provider.newNameResolver(\n-            URI.create(\"xds-experimental://trafficdirector.google.com/foo.googleapis.com\"), args);\n+            URI.create(\"xds://trafficdirector.google.com/foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void validName_noAuthority() {\n     XdsNameResolver resolver =\n-        provider.newNameResolver(URI.create(\"xds-experimental:///foo.googleapis.com\"), args);\n+        provider.newNameResolver(URI.create(\"xds:///foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void invalidName_hostnameContainsUnderscore() {\n-    URI uri = URI.create(\"xds-experimental:///foo_bar.googleapis.com\");\n+    URI uri = URI.create(\"xds:///foo_bar.googleapis.com\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e28674cedac1de4844cb62d806ea6e1100d101f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NzU0OA==", "bodyText": "We can copy the test class as well. @ericgribkoff The interop test is testing explicitly with xds-experimental right?", "url": "https://github.com/grpc/grpc-java/pull/6879#discussion_r404467548", "createdAt": "2020-04-07T00:29:48Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverProviderTest.java", "diffHunk": "@@ -91,22 +91,22 @@ public void newNameResolver() {\n   public void validName_withAuthority() {\n     XdsNameResolver resolver =\n         provider.newNameResolver(\n-            URI.create(\"xds-experimental://trafficdirector.google.com/foo.googleapis.com\"), args);\n+            URI.create(\"xds://trafficdirector.google.com/foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void validName_noAuthority() {\n     XdsNameResolver resolver =\n-        provider.newNameResolver(URI.create(\"xds-experimental:///foo.googleapis.com\"), args);\n+        provider.newNameResolver(URI.create(\"xds:///foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void invalidName_hostnameContainsUnderscore() {\n-    URI uri = URI.create(\"xds-experimental:///foo_bar.googleapis.com\");\n+    URI uri = URI.create(\"xds:///foo_bar.googleapis.com\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDY1OA=="}, "originalCommit": {"oid": "2e28674cedac1de4844cb62d806ea6e1100d101f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ3MDMwMg==", "bodyText": "Not sure it's worth copying the whole test class. Was thinking about that one test here could verify that the xds-experimental provider at least exists but I guess that might be awkward to reference XdsExperimentalNameResolverProviderTest.java since this is XdsNameResolverProviderTest.\nYes, the interop testing is explicitly using xds-experimental for now. But we could actually switch it in this PR on master: the scheme is specified in https://github.com/grpc/grpc-java/blob/master/buildscripts/kokoro/xds.sh.\nAre we really only keeping around xds-experimental for interop testing and plan to have it fully removed in the next release? Or will there be some overlap period where users can specify xds or xds-experimental?", "url": "https://github.com/grpc/grpc-java/pull/6879#discussion_r404470302", "createdAt": "2020-04-07T00:39:30Z", "author": {"login": "ericgribkoff"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverProviderTest.java", "diffHunk": "@@ -91,22 +91,22 @@ public void newNameResolver() {\n   public void validName_withAuthority() {\n     XdsNameResolver resolver =\n         provider.newNameResolver(\n-            URI.create(\"xds-experimental://trafficdirector.google.com/foo.googleapis.com\"), args);\n+            URI.create(\"xds://trafficdirector.google.com/foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void validName_noAuthority() {\n     XdsNameResolver resolver =\n-        provider.newNameResolver(URI.create(\"xds-experimental:///foo.googleapis.com\"), args);\n+        provider.newNameResolver(URI.create(\"xds:///foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void invalidName_hostnameContainsUnderscore() {\n-    URI uri = URI.create(\"xds-experimental:///foo_bar.googleapis.com\");\n+    URI uri = URI.create(\"xds:///foo_bar.googleapis.com\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDY1OA=="}, "originalCommit": {"oid": "2e28674cedac1de4844cb62d806ea6e1100d101f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ3MTM0NA==", "bodyText": "Not sure it's worth copying the whole test class.\n\nCopying is simple and it's super easy to remove when it's ready to.", "url": "https://github.com/grpc/grpc-java/pull/6879#discussion_r404471344", "createdAt": "2020-04-07T00:43:17Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverProviderTest.java", "diffHunk": "@@ -91,22 +91,22 @@ public void newNameResolver() {\n   public void validName_withAuthority() {\n     XdsNameResolver resolver =\n         provider.newNameResolver(\n-            URI.create(\"xds-experimental://trafficdirector.google.com/foo.googleapis.com\"), args);\n+            URI.create(\"xds://trafficdirector.google.com/foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void validName_noAuthority() {\n     XdsNameResolver resolver =\n-        provider.newNameResolver(URI.create(\"xds-experimental:///foo.googleapis.com\"), args);\n+        provider.newNameResolver(URI.create(\"xds:///foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void invalidName_hostnameContainsUnderscore() {\n-    URI uri = URI.create(\"xds-experimental:///foo_bar.googleapis.com\");\n+    URI uri = URI.create(\"xds:///foo_bar.googleapis.com\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDY1OA=="}, "originalCommit": {"oid": "2e28674cedac1de4844cb62d806ea6e1100d101f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ3MzExMg==", "bodyText": "I guess we can directly do the swap. The scheme is sort of arbitrary and the only impact is the resolver being loaded in gRPC client. Seems no value to do a transition period.", "url": "https://github.com/grpc/grpc-java/pull/6879#discussion_r404473112", "createdAt": "2020-04-07T00:49:21Z", "author": {"login": "voidzcy"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverProviderTest.java", "diffHunk": "@@ -91,22 +91,22 @@ public void newNameResolver() {\n   public void validName_withAuthority() {\n     XdsNameResolver resolver =\n         provider.newNameResolver(\n-            URI.create(\"xds-experimental://trafficdirector.google.com/foo.googleapis.com\"), args);\n+            URI.create(\"xds://trafficdirector.google.com/foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void validName_noAuthority() {\n     XdsNameResolver resolver =\n-        provider.newNameResolver(URI.create(\"xds-experimental:///foo.googleapis.com\"), args);\n+        provider.newNameResolver(URI.create(\"xds:///foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void invalidName_hostnameContainsUnderscore() {\n-    URI uri = URI.create(\"xds-experimental:///foo_bar.googleapis.com\");\n+    URI uri = URI.create(\"xds:///foo_bar.googleapis.com\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDY1OA=="}, "originalCommit": {"oid": "2e28674cedac1de4844cb62d806ea6e1100d101f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ3MzI0Mw==", "bodyText": "Yes, the interop testing is explicitly using xds-experimental for now. But we could actually switch it in this PR on master: the scheme is specified in https://github.com/grpc/grpc-java/blob/master/buildscripts/kokoro/xds.sh\n\nI thought the scheme xds-experimental is specified in some other repo than grpc-java. Will change it in https://github.com/grpc/grpc-java/blob/master/buildscripts/kokoro/xds.sh as well.\n\nAre we really only keeping around xds-experimental for interop testing and plan to have it fully removed in the next release? Or will there be some overlap period where users can specify xds or xds-experimental?\n\nI don't know. @srini100 Do we want to keep the 'xds-experimental' scheme working for our customers who are testing against master or next releases (1.29, 1.30) for a while?", "url": "https://github.com/grpc/grpc-java/pull/6879#discussion_r404473243", "createdAt": "2020-04-07T00:49:48Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverProviderTest.java", "diffHunk": "@@ -91,22 +91,22 @@ public void newNameResolver() {\n   public void validName_withAuthority() {\n     XdsNameResolver resolver =\n         provider.newNameResolver(\n-            URI.create(\"xds-experimental://trafficdirector.google.com/foo.googleapis.com\"), args);\n+            URI.create(\"xds://trafficdirector.google.com/foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void validName_noAuthority() {\n     XdsNameResolver resolver =\n-        provider.newNameResolver(URI.create(\"xds-experimental:///foo.googleapis.com\"), args);\n+        provider.newNameResolver(URI.create(\"xds:///foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void invalidName_hostnameContainsUnderscore() {\n-    URI uri = URI.create(\"xds-experimental:///foo_bar.googleapis.com\");\n+    URI uri = URI.create(\"xds:///foo_bar.googleapis.com\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDY1OA=="}, "originalCommit": {"oid": "2e28674cedac1de4844cb62d806ea6e1100d101f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ3NDE2OQ==", "bodyText": "@ericgribkoff Does changing https://github.com/grpc/grpc-java/blob/master/buildscripts/kokoro/xds.sh with 'xds' scheme affect other languages? I mean is there java server against go client and vice versa?\nEdit: never mind, I see the command line with the scheme is only for the java binary. So it does not affect cross-language tests.", "url": "https://github.com/grpc/grpc-java/pull/6879#discussion_r404474169", "createdAt": "2020-04-07T00:53:10Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverProviderTest.java", "diffHunk": "@@ -91,22 +91,22 @@ public void newNameResolver() {\n   public void validName_withAuthority() {\n     XdsNameResolver resolver =\n         provider.newNameResolver(\n-            URI.create(\"xds-experimental://trafficdirector.google.com/foo.googleapis.com\"), args);\n+            URI.create(\"xds://trafficdirector.google.com/foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void validName_noAuthority() {\n     XdsNameResolver resolver =\n-        provider.newNameResolver(URI.create(\"xds-experimental:///foo.googleapis.com\"), args);\n+        provider.newNameResolver(URI.create(\"xds:///foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void invalidName_hostnameContainsUnderscore() {\n-    URI uri = URI.create(\"xds-experimental:///foo_bar.googleapis.com\");\n+    URI uri = URI.create(\"xds:///foo_bar.googleapis.com\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDY1OA=="}, "originalCommit": {"oid": "2e28674cedac1de4844cb62d806ea6e1100d101f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUwNjkwNQ==", "bodyText": "We talked about keeping xds-experimental for at least one more release (1.29.0) and remove it in 1.30.0. This should be same across other langs so discuss with other lang owners too.", "url": "https://github.com/grpc/grpc-java/pull/6879#discussion_r404506905", "createdAt": "2020-04-07T02:57:35Z", "author": {"login": "srini100"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverProviderTest.java", "diffHunk": "@@ -91,22 +91,22 @@ public void newNameResolver() {\n   public void validName_withAuthority() {\n     XdsNameResolver resolver =\n         provider.newNameResolver(\n-            URI.create(\"xds-experimental://trafficdirector.google.com/foo.googleapis.com\"), args);\n+            URI.create(\"xds://trafficdirector.google.com/foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void validName_noAuthority() {\n     XdsNameResolver resolver =\n-        provider.newNameResolver(URI.create(\"xds-experimental:///foo.googleapis.com\"), args);\n+        provider.newNameResolver(URI.create(\"xds:///foo.googleapis.com\"), args);\n     assertThat(resolver).isNotNull();\n     assertThat(resolver.getServiceAuthority()).isEqualTo(\"foo.googleapis.com\");\n   }\n \n   @Test\n   public void invalidName_hostnameContainsUnderscore() {\n-    URI uri = URI.create(\"xds-experimental:///foo_bar.googleapis.com\");\n+    URI uri = URI.create(\"xds:///foo_bar.googleapis.com\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDY1OA=="}, "originalCommit": {"oid": "2e28674cedac1de4844cb62d806ea6e1100d101f"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2755, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}