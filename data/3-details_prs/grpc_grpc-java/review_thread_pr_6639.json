{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2OTY3MTQ5", "number": 6639, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTowMzowMVrODalOkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozNTozNlrODaniSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTk5NTA0OnYy", "diffSide": "RIGHT", "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTowMzowMVrOFhnZ7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozMDoyMFrOFhq9FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5Mjk0MQ==", "bodyText": "You might need use a generated random hostname as a fallback hostname in XdsTestServer.  As in e7d7c5b#diff-2140bcb433e6510183658de7492bfb57R58", "url": "https://github.com/grpc/grpc-java/pull/6639#discussion_r370792941", "createdAt": "2020-01-24T19:03:01Z", "author": {"login": "dapengzhang0"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -295,14 +295,14 @@ private XdsStatsWatcher(long startId, long endId) {\n       this.endId = endId;\n     }\n \n-    void rpcCompleted(long requestId, @Nullable String serverId) {\n+    void rpcCompleted(long requestId, @Nullable String hostname) {\n       synchronized (lock) {\n         if (startId <= requestId && requestId < endId) {\n-          if (serverId != null) {\n-            if (rpcsByPeer.containsKey(serverId)) {\n-              rpcsByPeer.put(serverId, rpcsByPeer.get(serverId) + 1);\n+          if (hostname != null) {\n+            if (rpcsByPeer.containsKey(hostname)) {\n+              rpcsByPeer.put(hostname, rpcsByPeer.get(hostname) + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0942fe612d1e5d7e9635436a4462679ba9265c1c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5NTQ1MQ==", "bodyText": "I think it's WAI as-is: the test driver script will need to assert on the hostnames recorded by the client, and so a randomly generated host won't be useful - if hostname is missing, the test will (and should) be failed.", "url": "https://github.com/grpc/grpc-java/pull/6639#discussion_r370795451", "createdAt": "2020-01-24T19:08:56Z", "author": {"login": "ericgribkoff"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -295,14 +295,14 @@ private XdsStatsWatcher(long startId, long endId) {\n       this.endId = endId;\n     }\n \n-    void rpcCompleted(long requestId, @Nullable String serverId) {\n+    void rpcCompleted(long requestId, @Nullable String hostname) {\n       synchronized (lock) {\n         if (startId <= requestId && requestId < endId) {\n-          if (serverId != null) {\n-            if (rpcsByPeer.containsKey(serverId)) {\n-              rpcsByPeer.put(serverId, rpcsByPeer.get(serverId) + 1);\n+          if (hostname != null) {\n+            if (rpcsByPeer.containsKey(hostname)) {\n+              rpcsByPeer.put(hostname, rpcsByPeer.get(hostname) + 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5Mjk0MQ=="}, "originalCommit": {"oid": "0942fe612d1e5d7e9635436a4462679ba9265c1c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0MjQ4MA==", "bodyText": "If the hostname is missing, how will test fail? Is it easy to debug then?", "url": "https://github.com/grpc/grpc-java/pull/6639#discussion_r370842480", "createdAt": "2020-01-24T21:07:48Z", "author": {"login": "dapengzhang0"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -295,14 +295,14 @@ private XdsStatsWatcher(long startId, long endId) {\n       this.endId = endId;\n     }\n \n-    void rpcCompleted(long requestId, @Nullable String serverId) {\n+    void rpcCompleted(long requestId, @Nullable String hostname) {\n       synchronized (lock) {\n         if (startId <= requestId && requestId < endId) {\n-          if (serverId != null) {\n-            if (rpcsByPeer.containsKey(serverId)) {\n-              rpcsByPeer.put(serverId, rpcsByPeer.get(serverId) + 1);\n+          if (hostname != null) {\n+            if (rpcsByPeer.containsKey(hostname)) {\n+              rpcsByPeer.put(hostname, rpcsByPeer.get(hostname) + 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5Mjk0MQ=="}, "originalCommit": {"oid": "0942fe612d1e5d7e9635436a4462679ba9265c1c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0ODYxNw==", "bodyText": "The test spec is still in progress, but a sample scenario is something like: there are four backends, and we expect the client to round-robin over all four. If one of the hostnames is missing, the test will see that it is round-robining over three backends and fail.", "url": "https://github.com/grpc/grpc-java/pull/6639#discussion_r370848617", "createdAt": "2020-01-24T21:24:01Z", "author": {"login": "ericgribkoff"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -295,14 +295,14 @@ private XdsStatsWatcher(long startId, long endId) {\n       this.endId = endId;\n     }\n \n-    void rpcCompleted(long requestId, @Nullable String serverId) {\n+    void rpcCompleted(long requestId, @Nullable String hostname) {\n       synchronized (lock) {\n         if (startId <= requestId && requestId < endId) {\n-          if (serverId != null) {\n-            if (rpcsByPeer.containsKey(serverId)) {\n-              rpcsByPeer.put(serverId, rpcsByPeer.get(serverId) + 1);\n+          if (hostname != null) {\n+            if (rpcsByPeer.containsKey(hostname)) {\n+              rpcsByPeer.put(hostname, rpcsByPeer.get(hostname) + 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5Mjk0MQ=="}, "originalCommit": {"oid": "0942fe612d1e5d7e9635436a4462679ba9265c1c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MTA5Mw==", "bodyText": "Good point about debugging. Modified server to throw (fail) if it can't get hostname.", "url": "https://github.com/grpc/grpc-java/pull/6639#discussion_r370851093", "createdAt": "2020-01-24T21:30:20Z", "author": {"login": "ericgribkoff"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -295,14 +295,14 @@ private XdsStatsWatcher(long startId, long endId) {\n       this.endId = endId;\n     }\n \n-    void rpcCompleted(long requestId, @Nullable String serverId) {\n+    void rpcCompleted(long requestId, @Nullable String hostname) {\n       synchronized (lock) {\n         if (startId <= requestId && requestId < endId) {\n-          if (serverId != null) {\n-            if (rpcsByPeer.containsKey(serverId)) {\n-              rpcsByPeer.put(serverId, rpcsByPeer.get(serverId) + 1);\n+          if (hostname != null) {\n+            if (rpcsByPeer.containsKey(hostname)) {\n+              rpcsByPeer.put(hostname, rpcsByPeer.get(hostname) + 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5Mjk0MQ=="}, "originalCommit": {"oid": "0942fe612d1e5d7e9635436a4462679ba9265c1c"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjM3MzIxOnYy", "diffSide": "RIGHT", "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozNTozNlrOFhrEfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0MTo0NlrOFhrM_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Mjk4OQ==", "bodyText": "host can be final now.  But not a big deal.", "url": "https://github.com/grpc/grpc-java/pull/6639#discussion_r370852989", "createdAt": "2020-01-24T21:35:36Z", "author": {"login": "dapengzhang0"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "diffHunk": "@@ -130,7 +130,8 @@ private TestServiceImpl() {\n       try {\n         host = InetAddress.getLocalHost().getHostName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6734ad6ea680f61be98ee80f4668b802b5b80847"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NTE2NA==", "bodyText": "done", "url": "https://github.com/grpc/grpc-java/pull/6639#discussion_r370855164", "createdAt": "2020-01-24T21:41:46Z", "author": {"login": "ericgribkoff"}, "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "diffHunk": "@@ -130,7 +130,8 @@ private TestServiceImpl() {\n       try {\n         host = InetAddress.getLocalHost().getHostName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Mjk4OQ=="}, "originalCommit": {"oid": "6734ad6ea680f61be98ee80f4668b802b5b80847"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2931, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}