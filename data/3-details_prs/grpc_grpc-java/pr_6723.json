{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2OTA1MzY3", "number": 6723, "title": "core, grpclb: change policy selection strategy for Grpclb policy (take two: move logic of querying SRV into Grpclb's own resolver)", "bodyText": "This is the second part of implementation for gRPCLB selection. Previous part is #6637.\nMain changes in this PR:\n\n\nSlightly changed ResourceResolver and its JNDI implementation. ResourceResolver#resolveSrv(String) returns a list of SrvRecord so that it only parse SRV records and does nothing more. It's gRPC's name resolver's logic to use information parsed from SRV records.\n\n\nCreated a GrpclbNameResolver class that extends DnsNameResolver. Logic of using information from SRV records to set balancer addresses as ResolutionResult attributes is implemented in GrpclbNameResolver only.\n\n\nRefactored DnsNameResolver, mainly the resolveAll(...) method. Logics for resolving backend addresses and service config are modularized into resolveAddresses() and resolveServiceConfig() methods respectively. They are shared implementation for subclasses (i.e., GrpclbNameResolver).\n\n\nTODO: AltsProtocolNegotiator has some special logic for creating channel handler, which depends on the implementation detail that grpclb balancer addresses are tagged with ATTR_LB_ADDR_AUTHORITY attributes. We may want to eliminate it and clean up GrpcAttributes. ATTR_LB_ADDR_AUTHORITY.\n\nUpdate: Given that grpc-alts module already depends on grpc-grpclb, we can still clean up GrpcAttributes. ATTR_LB_ADDR_AUTHORITY and let it use GrpclbConstants. ATTR_LB_ADDR_AUTHORITY. I will do that clean up in a separate PR.", "createdAt": "2020-02-19T00:34:29Z", "url": "https://github.com/grpc/grpc-java/pull/6723", "merged": true, "mergeCommit": {"oid": "6a7e47b8a5e4d2dc5acf7249e84e8aff4a28be3d"}, "closed": true, "closedAt": "2020-03-02T09:03:26Z", "author": {"login": "voidzcy"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFnti-gH2gAyMzc2OTA1MzY3OjcxNjIxMjMxYjlmZjcwNTRmYzk0NWQ3Yzk2MTg0N2RlMGM1YzliNjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJpbnGAH2gAyMzc2OTA1MzY3OmE1Zjg2OWZhNDY5YTk2MjY3OGRhMDkyMjdkNWM0NTkxZWQzYTVkNmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "71621231b9ff7054fc945d7c961847de0c5c9b65", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/71621231b9ff7054fc945d7c961847de0c5c9b65", "committedDate": "2020-02-18T20:11:45Z", "message": "Refactor DnsNameResolver to separate logics of resolving host address, service config, balancer addresses. Subclass is able to override the resolve logic."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75a4ce1a61b59abea2e4c713b2452afb857b3f08", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/75a4ce1a61b59abea2e4c713b2452afb857b3f08", "committedDate": "2020-02-19T00:19:38Z", "message": "Eliminate BaseDnsNameResolverProvider, Grpclb's name resolver provider will provide GrpclbNameResolver directly. This also eliminate the enableSrv flag."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b935f463d1bf4d14cf00487d140c1feb2098c478", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/b935f463d1bf4d14cf00487d140c1feb2098c478", "committedDate": "2020-02-19T00:21:30Z", "message": "Delete test for verifying grpclb balancer addresses in dns name resolver test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49f72401e044f5a8d276f8cba1695f437291781d", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/49f72401e044f5a8d276f8cba1695f437291781d", "committedDate": "2020-02-19T00:35:22Z", "message": "Eliminate ATTR_LB_ADDRS in GrpcAttributes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "deb0e12f5ad4efedf6dc9d11b3d0eb94747b7280", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/deb0e12f5ad4efedf6dc9d11b3d0eb94747b7280", "committedDate": "2020-02-19T00:30:56Z", "message": "Eliminate ATTR_LB_ADDRS in GrpcAttributes."}, "afterCommit": {"oid": "49f72401e044f5a8d276f8cba1695f437291781d", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/49f72401e044f5a8d276f8cba1695f437291781d", "committedDate": "2020-02-19T00:35:22Z", "message": "Eliminate ATTR_LB_ADDRS in GrpcAttributes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a28394f794b5133569ea03108ef322f293352bea", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/a28394f794b5133569ea03108ef322f293352bea", "committedDate": "2020-02-19T00:54:05Z", "message": "Add tests for SecretGrpclbNameResolverProvider."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "446f3d2feb91579117887f14ce1853ec07422dbb", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/446f3d2feb91579117887f14ce1853ec07422dbb", "committedDate": "2020-02-20T02:08:20Z", "message": "Add test for GrpclbNameResolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3c6ba13849bf22c9507ebbed26b5635089ee027", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/d3c6ba13849bf22c9507ebbed26b5635089ee027", "committedDate": "2020-02-20T02:09:16Z", "message": "Modify DnsNameResolver's tests for its behavior changes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df1d33d32dac3d7454b507366588d4148131ce4f", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/df1d33d32dac3d7454b507366588d4148131ce4f", "committedDate": "2020-02-19T19:00:15Z", "message": "Add test for GrpclbNameResolver"}, "afterCommit": {"oid": "d3c6ba13849bf22c9507ebbed26b5635089ee027", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/d3c6ba13849bf22c9507ebbed26b5635089ee027", "committedDate": "2020-02-20T02:09:16Z", "message": "Modify DnsNameResolver's tests for its behavior changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afa1e7dc1c50027e84e3dcab73ff2382e6784364", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/afa1e7dc1c50027e84e3dcab73ff2382e6784364", "committedDate": "2020-02-21T01:53:47Z", "message": "Add VisibleForTesting annotations."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjAwNjM2", "url": "https://github.com/grpc/grpc-java/pull/6723#pullrequestreview-365200636", "createdAt": "2020-02-26T20:00:02Z", "commit": {"oid": "afa1e7dc1c50027e84e3dcab73ff2382e6784364"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDowMDowM1rOFu6Lqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDowMDowM1rOFu6Lqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDczMjA3NQ==", "bodyText": "I'm not wild about how coupled the GrpclbNameResolver is to DnsNameResolver. It looks quite brittle. This method seems to be the biggest issue.\nWe may want to discuss in person, but it seems we could try to do a delegation strategy or have the caller of this method notify the listener. Both of those seem to allow a super.doResolve() approach to let the base class do its work (instead of copying it here and treating the base class as a utility class). As it stands, it would be more straight-forward to have a shared utility class instead of extending.", "url": "https://github.com/grpc/grpc-java/pull/6723#discussion_r384732075", "createdAt": "2020-02-26T20:00:03Z", "author": {"login": "ejona86"}, "path": "grpclb/src/main/java/io/grpc/grpclb/GrpclbNameResolver.java", "diffHunk": "@@ -0,0 +1,167 @@\n+/*\n+ * Copyright 2015 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.grpclb;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.base.Stopwatch;\n+import io.grpc.Attributes;\n+import io.grpc.EquivalentAddressGroup;\n+import io.grpc.NameResolver;\n+import io.grpc.Status;\n+import io.grpc.internal.DnsNameResolver;\n+import io.grpc.internal.SharedResourceHolder.Resource;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.SocketAddress;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.Executor;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A DNS-based {@link NameResolver} with gRPC LB specific add-ons for resolving balancer\n+ * addresses via service records.\n+ *\n+ * @see SecretGrpclbNameResolverProvider\n+ */\n+final class GrpclbNameResolver extends DnsNameResolver {\n+\n+  private static final Logger logger = Logger.getLogger(GrpclbNameResolver.class.getName());\n+\n+  // From https://github.com/grpc/proposal/blob/master/A5-grpclb-in-dns.md\n+  private static final String GRPCLB_NAME_PREFIX = \"_grpclb._tcp.\";\n+\n+  GrpclbNameResolver(\n+      @Nullable String nsAuthority,\n+      String name,\n+      Args args,\n+      Resource<Executor> executorResource,\n+      Stopwatch stopwatch,\n+      boolean isAndroid) {\n+    super(nsAuthority, name, args, executorResource, stopwatch, isAndroid);\n+  }\n+\n+  @Override\n+  protected boolean doResolve(Listener2 listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa1e7dc1c50027e84e3dcab73ff2382e6784364"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzM4NDg5", "url": "https://github.com/grpc/grpc-java/pull/6723#pullrequestreview-363738489", "createdAt": "2020-02-24T22:11:37Z", "commit": {"oid": "afa1e7dc1c50027e84e3dcab73ff2382e6784364"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjoxMTozN1rOFtxv1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOTozOToyOVrOFu5cYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0NTMwMA==", "bodyText": "in theory, this should be \"grpclb\" or something not \"dns\"? (not asking to change, but i feel like i have to say this)", "url": "https://github.com/grpc/grpc-java/pull/6723#discussion_r383545300", "createdAt": "2020-02-24T22:11:37Z", "author": {"login": "creamsoup"}, "path": "grpclb/src/main/java/io/grpc/grpclb/SecretGrpclbNameResolverProvider.java", "diffHunk": "@@ -32,24 +38,46 @@\n  *   yet))</li>\n  *   <li>{@code \"dns:///foo.googleapis.com\"} (without port)</li>\n  * </ul>\n- *\n- * <p>Note: the main difference between {@code io.grpc.DnsNameResolver} is service record is enabled\n- * by default.\n  */\n // Make it package-private so that it cannot be directly referenced by users.  Java service loader\n // requires the provider to be public, but we can hide it under a package-private class.\n final class SecretGrpclbNameResolverProvider {\n \n   private SecretGrpclbNameResolverProvider() {}\n \n-  public static final class Provider extends BaseDnsNameResolverProvider {\n+  public static final class Provider extends NameResolverProvider {\n+\n+    private static final String SCHEME = \"dns\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa1e7dc1c50027e84e3dcab73ff2382e6784364"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0NTgzNQ==", "bodyText": "2020", "url": "https://github.com/grpc/grpc-java/pull/6723#discussion_r383545835", "createdAt": "2020-02-24T22:12:55Z", "author": {"login": "creamsoup"}, "path": "grpclb/src/test/java/io/grpc/grpclb/GrpclbNameResolverTest.java", "diffHunk": "@@ -0,0 +1,337 @@\n+/*\n+ * Copyright 2015 The gRPC Authors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa1e7dc1c50027e84e3dcab73ff2382e6784364"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU2MjkwOA==", "bodyText": "can you flatten this ifs?", "url": "https://github.com/grpc/grpc-java/pull/6723#discussion_r383562908", "createdAt": "2020-02-24T22:53:31Z", "author": {"login": "creamsoup"}, "path": "core/src/main/java/io/grpc/internal/DnsNameResolver.java", "diffHunk": "@@ -650,20 +619,22 @@ void setResourceResolver(ResourceResolver resourceResolver) {\n   /**\n    * {@link ResourceResolver} is a Dns ResourceRecord resolver.\n    */\n-  interface ResourceResolver {\n+  @VisibleForTesting\n+  public interface ResourceResolver {\n     List<String> resolveTxt(String host) throws Exception;\n \n-    List<EquivalentAddressGroup> resolveSrv(\n-        AddressResolver addressResolver, String host) throws Exception;\n+    List<SrvRecord> resolveSrv(String host) throws Exception;\n   }\n \n   @Nullable\n-  private ResourceResolver getResourceResolver() {\n-    ResourceResolver rr;\n-    if ((rr = resourceResolver.get()) == null) {\n-      if (resourceResolverFactory != null) {\n-        assert resourceResolverFactory.unavailabilityCause() == null;\n-        rr = resourceResolverFactory.newResourceResolver();\n+  protected ResourceResolver getResourceResolver() {\n+    ResourceResolver rr = null;\n+    if (shouldUseJndi(enableJndi, enableJndiLocalhost, host)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa1e7dc1c50027e84e3dcab73ff2382e6784364"}, "originalPosition": 506}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcxOTk3MQ==", "bodyText": "fake class should be simpler.", "url": "https://github.com/grpc/grpc-java/pull/6723#discussion_r384719971", "createdAt": "2020-02-26T19:39:29Z", "author": {"login": "creamsoup"}, "path": "core/src/test/java/io/grpc/internal/DnsNameResolverTest.java", "diffHunk": "@@ -593,123 +567,155 @@ public void resolve_balancerAddrsAsAttributes() throws Exception {\n         (InetSocketAddress) Iterables.getOnlyElement(\n             Iterables.getOnlyElement(result.getAddresses()).getAddresses());\n     assertThat(resolvedBackendAddr.getAddress()).isEqualTo(backendAddr);\n-    assertThat(result.getAttributes().get(GrpcAttributes.ATTR_LB_ADDRS))\n-        .containsExactly(balancerAddr);\n+    verify(mockAddressResolver).resolveAddress(name);\n+    assertThat(result.getAttributes()).isEqualTo(Attributes.EMPTY);\n+    assertThat(result.getServiceConfig()).isNull();\n   }\n \n   @Test\n-  public void resolveAll_nullResourceResolver() throws Exception {\n-    final String hostname = \"addr.fake\";\n-    final Inet4Address backendAddr = InetAddresses.fromInteger(0x7f000001);\n-\n-    AddressResolver mockResolver = mock(AddressResolver.class);\n-    when(mockResolver.resolveAddress(anyString()))\n-        .thenReturn(Collections.<InetAddress>singletonList(backendAddr));\n-    ResourceResolver resourceResolver = null;\n-    boolean resovleSrv = true;\n-    boolean resolveTxt = true;\n+  public void resolve_nullResourceResolver_addressFailure() throws Exception {\n+    DnsNameResolver.enableTxt = true;\n+    AddressResolver mockAddressResolver = mock(AddressResolver.class);\n+    when(mockAddressResolver.resolveAddress(anyString()))\n+        .thenThrow(new IOException(\"no addr\"));\n+    String name = \"foo.googleapis.com\";\n \n-    ResolutionResults res = DnsNameResolver.resolveAll(\n-        mockResolver, resourceResolver, resovleSrv, resolveTxt, hostname);\n-    assertThat(res.addresses).containsExactly(backendAddr);\n-    assertThat(res.balancerAddresses).isEmpty();\n-    assertThat(res.txtRecords).isEmpty();\n-    verify(mockResolver).resolveAddress(hostname);\n+    DnsNameResolver resolver = newResolver(name, 81);\n+    resolver.setAddressResolver(mockAddressResolver);\n+    resolver.setResourceResolver(null);\n+    resolver.start(mockListener);\n+    assertEquals(1, fakeExecutor.runDueTasks());\n+    verify(mockListener).onError(errorCaptor.capture());\n+    Status errorStatus = errorCaptor.getValue();\n+    assertThat(errorStatus.getCode()).isEqualTo(Code.UNAVAILABLE);\n+    assertThat(errorStatus.getCause()).hasMessageThat().contains(\"no addr\");\n   }\n \n   @Test\n-  public void resolveAll_nullResourceResolver_addressFailure() throws Exception {\n-    final String hostname = \"addr.fake\";\n-\n-    AddressResolver mockResolver = mock(AddressResolver.class);\n-    when(mockResolver.resolveAddress(anyString()))\n-        .thenThrow(new IOException(\"no addr\"));\n-    ResourceResolver resourceResolver = null;\n-    boolean resovleSrv = true;\n-    boolean resolveTxt = true;\n+  public void resolve_presentResourceResolver() throws Exception {\n+    DnsNameResolver.enableTxt = true;\n+    InetAddress backendAddr = InetAddresses.fromInteger(0x7f000001);\n+    AddressResolver mockAddressResolver = mock(AddressResolver.class);\n+    when(mockAddressResolver.resolveAddress(anyString()))\n+        .thenReturn(Collections.singletonList(backendAddr));\n+    ResourceResolver mockResourceResolver = mock(ResourceResolver.class);\n+    when(mockResourceResolver.resolveTxt(anyString()))\n+        .thenReturn(\n+            Collections.singletonList(\n+                \"grpc_config=[{\\\"clientLanguage\\\": [\\\"java\\\"], \\\"serviceConfig\\\": {}}]\"));\n+    ServiceConfigParser serviceConfigParser = mock(ServiceConfigParser.class);\n+    when(serviceConfigParser.parseServiceConfig(ArgumentMatchers.<String, Object>anyMap()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa1e7dc1c50027e84e3dcab73ff2382e6784364"}, "originalPosition": 253}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22d9bd5b8e84fa6c90bca56d5295578fb29d1168", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/22d9bd5b8e84fa6c90bca56d5295578fb29d1168", "committedDate": "2020-02-28T01:28:09Z", "message": "Refactor doResolve method to avoid repeating address resolution and service config resolution in child class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b79152dc1213451db9d8ec2bd67756b596f0692", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/4b79152dc1213451db9d8ec2bd67756b596f0692", "committedDate": "2020-02-28T01:28:59Z", "message": "Fix year in preface."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a981eae9ed3fd6af96f5941192df68ec61b0bbc", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/8a981eae9ed3fd6af96f5941192df68ec61b0bbc", "committedDate": "2020-02-28T01:39:44Z", "message": "Avoid introducing if nesting."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "740282a5b34846452b8b410ba90b76b7a637eb20", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/740282a5b34846452b8b410ba90b76b7a637eb20", "committedDate": "2020-02-28T01:40:15Z", "message": "Simplify fake service config parser."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTIwODk1", "url": "https://github.com/grpc/grpc-java/pull/6723#pullrequestreview-366120895", "createdAt": "2020-02-28T02:03:48Z", "commit": {"oid": "740282a5b34846452b8b410ba90b76b7a637eb20"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzYzNDIw", "url": "https://github.com/grpc/grpc-java/pull/6723#pullrequestreview-366763420", "createdAt": "2020-02-29T01:13:13Z", "commit": {"oid": "740282a5b34846452b8b410ba90b76b7a637eb20"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5f869fa469a962678da09227d5c4591ed3a5d6d", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/a5f869fa469a962678da09227d5c4591ed3a5d6d", "committedDate": "2020-03-02T08:27:40Z", "message": "Merge branch 'master' of github.com:grpc/grpc-java into dev/separate_query_srv_logic_into_grpclb"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4583, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}