{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2OTcxMzM2", "number": 6640, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTo1OToyOVrODamKDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjo0NjozMVrODaoYfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjE0NzMzOnYy", "diffSide": "RIGHT", "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTo1OToyOVrOFho5KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjoyNDowMVrOFhsDVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxNzMyMA==", "bodyText": "nit: I think the goal of the test should be verifying result.getServiceConfig() is updated.\nObject fakeParsedConfig = new Object();\nwhen(serviceConfigParser.parseServiceConfig(anyMap)).return(ConfigOrError.fromConfig(fakeParsedConfig));\n...\nverify(serviceConfigParser).parseServiceConfig(eq(serviceConfig));\nassertThat(result.getServiceConfig().getConfig()).isEqualTo(fakeParsedConfig);", "url": "https://github.com/grpc/grpc-java/pull/6640#discussion_r370817320", "createdAt": "2020-01-24T19:59:29Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverTest.java", "diffHunk": "@@ -260,6 +260,7 @@ public void resolve_foundResource() {\n     assertThat(result.getAddresses()).isEmpty();\n     Map<String, ?> serviceConfig =\n         result.getAttributes().get(GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG);\n+    verify(serviceConfigParser).parseServiceConfig(eq(serviceConfig));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bc31eba5c4da9422cc2b7fef938abbc018b0f66"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2OTA3Nw==", "bodyText": "Changed a bit. This should cover the invocation of ResolutionResult#setServiceConfig(...).", "url": "https://github.com/grpc/grpc-java/pull/6640#discussion_r370869077", "createdAt": "2020-01-24T22:24:01Z", "author": {"login": "voidzcy"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverTest.java", "diffHunk": "@@ -260,6 +260,7 @@ public void resolve_foundResource() {\n     assertThat(result.getAddresses()).isEmpty();\n     Map<String, ?> serviceConfig =\n         result.getAttributes().get(GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG);\n+    verify(serviceConfigParser).parseServiceConfig(eq(serviceConfig));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxNzMyMA=="}, "originalCommit": {"oid": "2bc31eba5c4da9422cc2b7fef938abbc018b0f66"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjUxMTk3OnYy", "diffSide": "RIGHT", "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverTest.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjo0NjozMVrOFhscDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDowNTowMVrOFhtd4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NTQwNA==", "bodyText": "assertThat(result.getServiceConfig()).isEqualTo(\n    serviceConfigParser.parseServiceConfig(serviceConfig));", "url": "https://github.com/grpc/grpc-java/pull/6640#discussion_r370875404", "createdAt": "2020-01-24T22:46:31Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverTest.java", "diffHunk": "@@ -260,7 +266,7 @@ public void resolve_foundResource() {\n     assertThat(result.getAddresses()).isEmpty();\n     Map<String, ?> serviceConfig =\n         result.getAttributes().get(GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG);\n-    verify(serviceConfigParser).parseServiceConfig(eq(serviceConfig));\n+    assertThat(result.getServiceConfig().getConfig()).isEqualTo(serviceConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08681b5aba8c45c1aab529dbbe5b50672a667a6a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3ODgwOQ==", "bodyText": "Wait wait. That's not correct. I use a fake ServiceConfigParser, which is an identity parser, returns the raw map back. So it is known that the result is equal to the original service config map. isEqualTo(serviceConfigParser.parseServiceConfig(serviceConfig)) includes verification for the fake ServiceConfigParser's implementation.", "url": "https://github.com/grpc/grpc-java/pull/6640#discussion_r370878809", "createdAt": "2020-01-24T22:59:54Z", "author": {"login": "voidzcy"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverTest.java", "diffHunk": "@@ -260,7 +266,7 @@ public void resolve_foundResource() {\n     assertThat(result.getAddresses()).isEmpty();\n     Map<String, ?> serviceConfig =\n         result.getAttributes().get(GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG);\n-    verify(serviceConfigParser).parseServiceConfig(eq(serviceConfig));\n+    assertThat(result.getServiceConfig().getConfig()).isEqualTo(serviceConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NTQwNA=="}, "originalCommit": {"oid": "08681b5aba8c45c1aab529dbbe5b50672a667a6a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3OTk5Nw==", "bodyText": "No. assertThat(result.getServiceConfig().getConfig()).isEqualTo(serviceConfig) includes verification for the fake ServiceConfigParser's implementation. Because in general it does not and should not equal to serviceConfig, only for your particular test code parser implementation it is equal.\nOn the other hand result.getServiceConfig() is always equal to serviceConfigParser.parseServiceConfig(serviceConfig) regardless of parser implementation.", "url": "https://github.com/grpc/grpc-java/pull/6640#discussion_r370879997", "createdAt": "2020-01-24T23:04:50Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverTest.java", "diffHunk": "@@ -260,7 +266,7 @@ public void resolve_foundResource() {\n     assertThat(result.getAddresses()).isEmpty();\n     Map<String, ?> serviceConfig =\n         result.getAttributes().get(GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG);\n-    verify(serviceConfigParser).parseServiceConfig(eq(serviceConfig));\n+    assertThat(result.getServiceConfig().getConfig()).isEqualTo(serviceConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NTQwNA=="}, "originalCommit": {"oid": "08681b5aba8c45c1aab529dbbe5b50672a667a6a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg4NzU5Ng==", "bodyText": "Take my words back from my previous comment, that's not the case. The fake ServiceConfigParser's implementation is in the recipe of producing the test outcome. However, assertThat(result.getServiceConfig()).isEqualTo( serviceConfigParser.parseServiceConfig(serviceConfig)); is trying to cancel the effect of input in test's output. So the net outcome is nothing, we just ran the code under test once. Nothing is actually verified. This is like doing x + 1 = x + 1.", "url": "https://github.com/grpc/grpc-java/pull/6640#discussion_r370887596", "createdAt": "2020-01-24T23:39:37Z", "author": {"login": "voidzcy"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverTest.java", "diffHunk": "@@ -260,7 +266,7 @@ public void resolve_foundResource() {\n     assertThat(result.getAddresses()).isEmpty();\n     Map<String, ?> serviceConfig =\n         result.getAttributes().get(GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG);\n-    verify(serviceConfigParser).parseServiceConfig(eq(serviceConfig));\n+    assertThat(result.getServiceConfig().getConfig()).isEqualTo(serviceConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NTQwNA=="}, "originalCommit": {"oid": "08681b5aba8c45c1aab529dbbe5b50672a667a6a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5MDE0NQ==", "bodyText": "assertThat(result.getServiceConfig()).isEqualTo( serviceConfigParser.parseServiceConfig(serviceConfig)); is trying to cancel the effect of input in test's output\n\nI don't understand the above.\nIf XdsNameResolver has a bug and does not update the listener result, or if it updates the listener result with a wrong ConfigOrError, then assertThat(result.getServiceConfig()).isEqualTo( serviceConfigParser.parseServiceConfig(serviceConfig)) will fail, but something like x + 1 = x + 1 does not fail.", "url": "https://github.com/grpc/grpc-java/pull/6640#discussion_r370890145", "createdAt": "2020-01-24T23:53:13Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverTest.java", "diffHunk": "@@ -260,7 +266,7 @@ public void resolve_foundResource() {\n     assertThat(result.getAddresses()).isEmpty();\n     Map<String, ?> serviceConfig =\n         result.getAttributes().get(GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG);\n-    verify(serviceConfigParser).parseServiceConfig(eq(serviceConfig));\n+    assertThat(result.getServiceConfig().getConfig()).isEqualTo(serviceConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NTQwNA=="}, "originalCommit": {"oid": "08681b5aba8c45c1aab529dbbe5b50672a667a6a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5MDk0Mw==", "bodyText": "assertThat(result.getServiceConfig()).isEqualTo( serviceConfigParser.parseServiceConfig(serviceConfig)) makes the fake ServiceConfigParser code garbage.", "url": "https://github.com/grpc/grpc-java/pull/6640#discussion_r370890943", "createdAt": "2020-01-24T23:57:33Z", "author": {"login": "voidzcy"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverTest.java", "diffHunk": "@@ -260,7 +266,7 @@ public void resolve_foundResource() {\n     assertThat(result.getAddresses()).isEmpty();\n     Map<String, ?> serviceConfig =\n         result.getAttributes().get(GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG);\n-    verify(serviceConfigParser).parseServiceConfig(eq(serviceConfig));\n+    assertThat(result.getServiceConfig().getConfig()).isEqualTo(serviceConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NTQwNA=="}, "originalCommit": {"oid": "08681b5aba8c45c1aab529dbbe5b50672a667a6a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5MjI1OA==", "bodyText": "Why do you need fake ServiceConfigParser implementation be critical? Shouldn't its implementation a garbage implementation just to distinguish the argument?", "url": "https://github.com/grpc/grpc-java/pull/6640#discussion_r370892258", "createdAt": "2020-01-25T00:05:01Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsNameResolverTest.java", "diffHunk": "@@ -260,7 +266,7 @@ public void resolve_foundResource() {\n     assertThat(result.getAddresses()).isEmpty();\n     Map<String, ?> serviceConfig =\n         result.getAttributes().get(GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG);\n-    verify(serviceConfigParser).parseServiceConfig(eq(serviceConfig));\n+    assertThat(result.getServiceConfig().getConfig()).isEqualTo(serviceConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NTQwNA=="}, "originalCommit": {"oid": "08681b5aba8c45c1aab529dbbe5b50672a667a6a"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2934, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}