{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0OTQzNjAw", "number": 7754, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzozMDoyNVrOFIpgXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzozMjozNlrOFIpj8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NjEyOTU5OnYy", "diffSide": "RIGHT", "path": "alts/src/main/java/io/grpc/alts/CheckGcpEnvironment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzozMDoyNVrOIKrqdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzo1Njo1MVrOIKs9mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA3MjA1NQ==", "bodyText": "Don't make this a static variable; move it into isRunningOnGcp. It is only used in isRunningOnGcp and isRunningOnGcp is only called once.", "url": "https://github.com/grpc/grpc-java/pull/7754#discussion_r548072055", "createdAt": "2020-12-23T17:30:25Z", "author": {"login": "ejona86"}, "path": "alts/src/main/java/io/grpc/alts/CheckGcpEnvironment.java", "diffHunk": "@@ -63,13 +63,15 @@ static boolean checkBiosDataOnWindows(BufferedReader reader) throws IOException\n     }\n     return false;\n   }\n+  \n+  private static final String OS = System.getProperty(\"os.name\").toLowerCase(Locale.ENGLISH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24132c801bd78a21621b124ec243e87be23580e7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MzMzOA==", "bodyText": "done", "url": "https://github.com/grpc/grpc-java/pull/7754#discussion_r548093338", "createdAt": "2020-12-23T17:56:51Z", "author": {"login": "elharo"}, "path": "alts/src/main/java/io/grpc/alts/CheckGcpEnvironment.java", "diffHunk": "@@ -63,13 +63,15 @@ static boolean checkBiosDataOnWindows(BufferedReader reader) throws IOException\n     }\n     return false;\n   }\n+  \n+  private static final String OS = System.getProperty(\"os.name\").toLowerCase(Locale.ENGLISH);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA3MjA1NQ=="}, "originalCommit": {"oid": "24132c801bd78a21621b124ec243e87be23580e7"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NjEzODc0OnYy", "diffSide": "RIGHT", "path": "alts/src/main/java/io/grpc/alts/CheckGcpEnvironment.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzozMjozNlrOIKrwXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxOTowNToyOVrOIKwUiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA3MzU2NQ==", "bodyText": "How did you come up with this code? Why not the more conventional startsWith() and why not use \"windows\" here?", "url": "https://github.com/grpc/grpc-java/pull/7754#discussion_r548073565", "createdAt": "2020-12-23T17:32:36Z", "author": {"login": "ejona86"}, "path": "alts/src/main/java/io/grpc/alts/CheckGcpEnvironment.java", "diffHunk": "@@ -63,13 +63,15 @@ static boolean checkBiosDataOnWindows(BufferedReader reader) throws IOException\n     }\n     return false;\n   }\n+  \n+  private static final String OS = System.getProperty(\"os.name\").toLowerCase(Locale.ENGLISH);\n \n   private static boolean isRunningOnGcp() {\n     try {\n-      if (SystemUtils.IS_OS_LINUX) {\n+      if (OS.indexOf(\"linux\") >= 0) {\n         // Checks GCE residency on Linux platform.\n         return checkProductNameOnLinux(Files.newBufferedReader(Paths.get(DMI_PRODUCT_NAME), UTF_8));\n-      } else if (SystemUtils.IS_OS_WINDOWS) {\n+      } else if (OS.indexOf(\"win\") >= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24132c801bd78a21621b124ec243e87be23580e7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5Nzk2OA==", "bodyText": "I picked \"win\" instead of \"windows\" in case we end up with something weird like \"Win95\" or \"WinXP\" one of these days. indexOf seemed a little more general than startsWith.", "url": "https://github.com/grpc/grpc-java/pull/7754#discussion_r548097968", "createdAt": "2020-12-23T18:03:10Z", "author": {"login": "elharo"}, "path": "alts/src/main/java/io/grpc/alts/CheckGcpEnvironment.java", "diffHunk": "@@ -63,13 +63,15 @@ static boolean checkBiosDataOnWindows(BufferedReader reader) throws IOException\n     }\n     return false;\n   }\n+  \n+  private static final String OS = System.getProperty(\"os.name\").toLowerCase(Locale.ENGLISH);\n \n   private static boolean isRunningOnGcp() {\n     try {\n-      if (SystemUtils.IS_OS_LINUX) {\n+      if (OS.indexOf(\"linux\") >= 0) {\n         // Checks GCE residency on Linux platform.\n         return checkProductNameOnLinux(Files.newBufferedReader(Paths.get(DMI_PRODUCT_NAME), UTF_8));\n-      } else if (SystemUtils.IS_OS_WINDOWS) {\n+      } else if (OS.indexOf(\"win\") >= 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA3MzU2NQ=="}, "originalCommit": {"oid": "24132c801bd78a21621b124ec243e87be23580e7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODEzNTgzNg==", "bodyText": "But it seems you copied from a lower-ranked answer that initially had bugs like \"checking for 'darwin' after 'win'\" if you look at the very first comment. And you can't simply remove the Darwin case and expect proper behavior.\nOpenJDK uses very regular names for Windows. Mac is hard-coded to \"Mac OS X\" and Unix uses uname -s. I don't see the hard-coding for OS X in Java 7, so it probably used \"Darwin.\" That's all obviously OpenJDK-specific, but I'd expect other JDKs to be similar (use uname for most cases, start Windows names with \"Windows\").\nUse startsWith() and spell out \"windows\" in full.", "url": "https://github.com/grpc/grpc-java/pull/7754#discussion_r548135836", "createdAt": "2020-12-23T18:50:40Z", "author": {"login": "ejona86"}, "path": "alts/src/main/java/io/grpc/alts/CheckGcpEnvironment.java", "diffHunk": "@@ -63,13 +63,15 @@ static boolean checkBiosDataOnWindows(BufferedReader reader) throws IOException\n     }\n     return false;\n   }\n+  \n+  private static final String OS = System.getProperty(\"os.name\").toLowerCase(Locale.ENGLISH);\n \n   private static boolean isRunningOnGcp() {\n     try {\n-      if (SystemUtils.IS_OS_LINUX) {\n+      if (OS.indexOf(\"linux\") >= 0) {\n         // Checks GCE residency on Linux platform.\n         return checkProductNameOnLinux(Files.newBufferedReader(Paths.get(DMI_PRODUCT_NAME), UTF_8));\n-      } else if (SystemUtils.IS_OS_WINDOWS) {\n+      } else if (OS.indexOf(\"win\") >= 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA3MzU2NQ=="}, "originalCommit": {"oid": "24132c801bd78a21621b124ec243e87be23580e7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE0ODM2MQ==", "bodyText": "done", "url": "https://github.com/grpc/grpc-java/pull/7754#discussion_r548148361", "createdAt": "2020-12-23T19:05:29Z", "author": {"login": "elharo"}, "path": "alts/src/main/java/io/grpc/alts/CheckGcpEnvironment.java", "diffHunk": "@@ -63,13 +63,15 @@ static boolean checkBiosDataOnWindows(BufferedReader reader) throws IOException\n     }\n     return false;\n   }\n+  \n+  private static final String OS = System.getProperty(\"os.name\").toLowerCase(Locale.ENGLISH);\n \n   private static boolean isRunningOnGcp() {\n     try {\n-      if (SystemUtils.IS_OS_LINUX) {\n+      if (OS.indexOf(\"linux\") >= 0) {\n         // Checks GCE residency on Linux platform.\n         return checkProductNameOnLinux(Files.newBufferedReader(Paths.get(DMI_PRODUCT_NAME), UTF_8));\n-      } else if (SystemUtils.IS_OS_WINDOWS) {\n+      } else if (OS.indexOf(\"win\") >= 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA3MzU2NQ=="}, "originalCommit": {"oid": "24132c801bd78a21621b124ec243e87be23580e7"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3032, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}