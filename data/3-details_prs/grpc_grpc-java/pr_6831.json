{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MDQ4Mjc1", "number": 6831, "title": "grpclb: migrate create subchannel (minimal change)", "bodyText": "", "createdAt": "2020-03-13T23:03:21Z", "url": "https://github.com/grpc/grpc-java/pull/6831", "merged": true, "mergeCommit": {"oid": "6dbdfcdbbcd7aa035451f72ac024a6657ee8885a"}, "closed": true, "closedAt": "2020-03-31T20:31:05Z", "author": {"login": "creamsoup"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNYitiAH2gAyMzg4MDQ4Mjc1OjNiZWJmNzI2NThjNTVmYWIwYjY0MzY0NGYzOTc2NWQ5OWRjNzRiNDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTIxZHAH2gAyMzg4MDQ4Mjc1OjQwZjg2YjdmZmExNmI2YzY1NzBiMThlNGVkOWJlMmY0Mjg2ZjgxZjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3bebf72658c55fab0b643644f39765d99dc74b46", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/3bebf72658c55fab0b643644f39765d99dc74b46", "committedDate": "2020-03-13T23:02:44Z", "message": "grpclb: migrate create subchannel (minimal change)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f8751c6c5506a731cacf0f79172fe64b415185f", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/8f8751c6c5506a731cacf0f79172fe64b415185f", "committedDate": "2020-03-16T23:00:13Z", "message": "fix listener to mimic deprecated behavior, fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e53ce9b982173aa483b50f76d5ba4592b58b9dc3", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/e53ce9b982173aa483b50f76d5ba4592b58b9dc3", "committedDate": "2020-03-16T23:02:09Z", "message": "remove deprecated suppressiosn"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4c117d134d402250bd16567cdc6a5d42caf9e75", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/c4c117d134d402250bd16567cdc6a5d42caf9e75", "committedDate": "2020-03-16T23:12:29Z", "message": "move passing helper to constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4430bcbfaecb945aea6b951e5cd7344a210c90f", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/c4430bcbfaecb945aea6b951e5cd7344a210c90f", "committedDate": "2020-03-16T23:44:47Z", "message": "use listener instead of calling lb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0633183fa9705e87077b80bc68973cbd689d7d4", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/a0633183fa9705e87077b80bc68973cbd689d7d4", "committedDate": "2020-03-17T02:26:21Z", "message": "do not use handleSubchannelState in lb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f81ab87f63898f80bca48e5f78294c895dbed13f", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/f81ab87f63898f80bca48e5f78294c895dbed13f", "committedDate": "2020-03-17T02:38:22Z", "message": "make pickfirst address update to call grpclb directly instead of using listener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c5fa7a05b54405ac2b32c05c819c32cc6fbe7c6", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/7c5fa7a05b54405ac2b32c05c819c32cc6fbe7c6", "committedDate": "2020-03-17T02:54:44Z", "message": "add todo for next step, update javadoc for SubchannelPool"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNTgxNzIz", "url": "https://github.com/grpc/grpc-java/pull/6831#pullrequestreview-380581723", "createdAt": "2020-03-24T18:20:51Z", "commit": {"oid": "7c5fa7a05b54405ac2b32c05c819c32cc6fbe7c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoyMDo1MlrOF69bhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoyMDo1MlrOF69bhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2ODE5OQ==", "bodyText": "There should be no need for a multimap. When a subchannel is added to the pool it should no longer be used, which means updateAddresses shouldn't be called. When a subchannel is added this code can just call subchannel.getAddresses()/getAllAddresses() to add the subchannel to the cache map.", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r397368199", "createdAt": "2020-03-24T18:20:52Z", "author": {"login": "ejona86"}, "path": "grpclb/src/main/java/io/grpc/grpclb/CachedSubchannelPool.java", "diffHunk": "@@ -34,32 +35,46 @@\n  * A {@link SubchannelPool} that keeps returned {@link Subchannel}s for a given time before it's\n  * shut down by the pool.\n  */\n+// TODO(creamsoup) address to subchannel is not 1:1 mapping because subchannel can update its\n+//  address. Use Multimap and ForwardingSubchannel (override updateAddresses) to maintain most up to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5fa7a05b54405ac2b32c05c819c32cc6fbe7c6"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c02d5925bd0063b43d3cfda9267e59c9eed20e0", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/5c02d5925bd0063b43d3cfda9267e59c9eed20e0", "committedDate": "2020-03-24T20:08:43Z", "message": "remove todo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzY2NTE4", "url": "https://github.com/grpc/grpc-java/pull/6831#pullrequestreview-380766518", "createdAt": "2020-03-24T23:27:53Z", "commit": {"oid": "5c02d5925bd0063b43d3cfda9267e59c9eed20e0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzoyNzo1M1rOF7G1sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzoyNzo1M1rOF7G1sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUyMjM1Mw==", "bodyText": "It seems you make CachedSubchannelPool#handleSubchannelState() private  and call  handleSubchannelState() here directly. Then you don't need the API SubchannelPool#handleSubchannelState(Subchannel subchannel, ConnectivityStateInfo newStateInfo) in the interface anymore.  Otherwise, PooledSubchannelStateListener#onSubchannelState() calls GrpclbState#handleSubchannelState, which calls CachedSubchannelPool#handleSubchannelState back and forth.", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r397522353", "createdAt": "2020-03-24T23:27:53Z", "author": {"login": "dapengzhang0"}, "path": "grpclb/src/main/java/io/grpc/grpclb/CachedSubchannelPool.java", "diffHunk": "@@ -38,28 +39,39 @@\n   private final HashMap<EquivalentAddressGroup, CacheEntry> cache =\n       new HashMap<>();\n \n-  private Helper helper;\n-  private LoadBalancer lb;\n+  private final Helper helper;\n+  private PooledSubchannelStateListener listener;\n \n   @VisibleForTesting\n   static final long SHUTDOWN_TIMEOUT_MS = 10000;\n \n-  @Override\n-  public void init(Helper helper, LoadBalancer lb) {\n+  public CachedSubchannelPool(Helper helper) {\n     this.helper = checkNotNull(helper, \"helper\");\n-    this.lb = checkNotNull(lb, \"lb\");\n   }\n \n   @Override\n-  @SuppressWarnings(\"deprecation\")\n+  public void registerListener(PooledSubchannelStateListener pooledSubchannelStateListener) {\n+    this.listener = checkNotNull(pooledSubchannelStateListener, \"pooledSubchannelStateListener\");\n+  }\n+\n+  @Override\n   public Subchannel takeOrCreateSubchannel(\n       EquivalentAddressGroup eag, Attributes defaultAttributes) {\n     final CacheEntry entry = cache.remove(eag);\n     final Subchannel subchannel;\n     if (entry == null) {\n-      // TODO(zhangkun83): remove the deprecation suppression on this method once migrated to the\n-      // new createSubchannel().\n-      subchannel = helper.createSubchannel(eag, defaultAttributes);\n+      subchannel =\n+          helper.createSubchannel(\n+              CreateSubchannelArgs.newBuilder()\n+                  .setAddresses(eag)\n+                  .setAttributes(defaultAttributes)\n+                  .build());\n+      subchannel.start(new SubchannelStateListener() {\n+        @Override\n+        public void onSubchannelState(ConnectivityStateInfo newState) {\n+          listener.onSubchannelState(subchannel, newState);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c02d5925bd0063b43d3cfda9267e59c9eed20e0"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzczODYy", "url": "https://github.com/grpc/grpc-java/pull/6831#pullrequestreview-380773862", "createdAt": "2020-03-24T23:48:07Z", "commit": {"oid": "5c02d5925bd0063b43d3cfda9267e59c9eed20e0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzo0ODowOFrOF7HRNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzo0ODowOFrOF7HRNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUyOTM5OQ==", "bodyText": "Because we removed init, we don't need the subchannelPool field in this class. We can make subchannelPool a final field of GrpclbState created by GrpclbState itself.", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r397529399", "createdAt": "2020-03-24T23:48:08Z", "author": {"login": "dapengzhang0"}, "path": "grpclb/src/main/java/io/grpc/grpclb/GrpclbLoadBalancer.java", "diffHunk": "@@ -68,19 +68,10 @@\n     this.stopwatch = checkNotNull(stopwatch, \"stopwatch\");\n     this.backoffPolicyProvider = checkNotNull(backoffPolicyProvider, \"backoffPolicyProvider\");\n     this.subchannelPool = checkNotNull(subchannelPool, \"subchannelPool\");\n-    this.subchannelPool.init(helper, this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c02d5925bd0063b43d3cfda9267e59c9eed20e0"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMzMwMDk0", "url": "https://github.com/grpc/grpc-java/pull/6831#pullrequestreview-381330094", "createdAt": "2020-03-25T16:37:45Z", "commit": {"oid": "5c02d5925bd0063b43d3cfda9267e59c9eed20e0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjozNzo0NlrOF7kB7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjo1NjozOVrOF7k4zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAwMDYyMA==", "bodyText": "There is a getter visible for testing already.", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r398000620", "createdAt": "2020-03-25T16:37:46Z", "author": {"login": "dapengzhang0"}, "path": "grpclb/src/main/java/io/grpc/grpclb/GrpclbLoadBalancer.java", "diffHunk": "@@ -54,8 +53,9 @@\n   private GrpclbConfig config = DEFAULT_CONFIG;\n \n   // All mutable states in this class are mutated ONLY from Channel Executor\n+  @VisibleForTesting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c02d5925bd0063b43d3cfda9267e59c9eed20e0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAxMTQyMw==", "bodyText": "The current test approach seems terribly wrong:\n      doAnswer(new Answer<Subchannel>() {\n        @Override\n        public Subchannel answer(InvocationOnMock invocation) throws Throwable {\n          Subchannel subchannel = mock(Subchannel.class);\n          EquivalentAddressGroup eag = (EquivalentAddressGroup) invocation.getArguments()[0];\n          Attributes attrs = (Attributes) invocation.getArguments()[1];\n          when(subchannel.getAllAddresses()).thenReturn(Arrays.asList(eag));\n          when(subchannel.getAttributes()).thenReturn(attrs);\n          mockSubchannels.add(subchannel);\n          pooledSubchannelTracker.add(subchannel);\n          return subchannel;\n        }\n      }).when(subchannelPool).takeOrCreateSubchannel(\n          any(EquivalentAddressGroup.class), any(Attributes.class));\nI think a more correct way to test is not mocking subchannelPool, but just mocking helper.createSubchannel() and keeping track of the EAGs and subchannels. But then a lot of current tests need be rewritten.\nI'm OK with using a factory in the short term if it's too hard to fix tests, but it worth rewriting some of the tests in the future.", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r398011423", "createdAt": "2020-03-25T16:52:15Z", "author": {"login": "dapengzhang0"}, "path": "grpclb/src/main/java/io/grpc/grpclb/GrpclbLoadBalancer.java", "diffHunk": "@@ -68,19 +68,10 @@\n     this.stopwatch = checkNotNull(stopwatch, \"stopwatch\");\n     this.backoffPolicyProvider = checkNotNull(backoffPolicyProvider, \"backoffPolicyProvider\");\n     this.subchannelPool = checkNotNull(subchannelPool, \"subchannelPool\");\n-    this.subchannelPool.init(helper, this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUyOTM5OQ=="}, "originalCommit": {"oid": "5c02d5925bd0063b43d3cfda9267e59c9eed20e0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAxNDY3MA==", "bodyText": "I mean you can make CachedSubchannelPool#handleSubchannelState(Subchannel subchannel, ConnectivityStateInfo newStateInfo) a private method. Remove this method from interface. And call this private method directly here.\nlistener.onSubchannelState(subchannel, newState);\nhandleSubchannelState(subchannel, newState);\nDo not call this private method from the other class GrpclbState.", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r398014670", "createdAt": "2020-03-25T16:56:39Z", "author": {"login": "dapengzhang0"}, "path": "grpclb/src/main/java/io/grpc/grpclb/CachedSubchannelPool.java", "diffHunk": "@@ -38,28 +39,39 @@\n   private final HashMap<EquivalentAddressGroup, CacheEntry> cache =\n       new HashMap<>();\n \n-  private Helper helper;\n-  private LoadBalancer lb;\n+  private final Helper helper;\n+  private PooledSubchannelStateListener listener;\n \n   @VisibleForTesting\n   static final long SHUTDOWN_TIMEOUT_MS = 10000;\n \n-  @Override\n-  public void init(Helper helper, LoadBalancer lb) {\n+  public CachedSubchannelPool(Helper helper) {\n     this.helper = checkNotNull(helper, \"helper\");\n-    this.lb = checkNotNull(lb, \"lb\");\n   }\n \n   @Override\n-  @SuppressWarnings(\"deprecation\")\n+  public void registerListener(PooledSubchannelStateListener pooledSubchannelStateListener) {\n+    this.listener = checkNotNull(pooledSubchannelStateListener, \"pooledSubchannelStateListener\");\n+  }\n+\n+  @Override\n   public Subchannel takeOrCreateSubchannel(\n       EquivalentAddressGroup eag, Attributes defaultAttributes) {\n     final CacheEntry entry = cache.remove(eag);\n     final Subchannel subchannel;\n     if (entry == null) {\n-      // TODO(zhangkun83): remove the deprecation suppression on this method once migrated to the\n-      // new createSubchannel().\n-      subchannel = helper.createSubchannel(eag, defaultAttributes);\n+      subchannel =\n+          helper.createSubchannel(\n+              CreateSubchannelArgs.newBuilder()\n+                  .setAddresses(eag)\n+                  .setAttributes(defaultAttributes)\n+                  .build());\n+      subchannel.start(new SubchannelStateListener() {\n+        @Override\n+        public void onSubchannelState(ConnectivityStateInfo newState) {\n+          listener.onSubchannelState(subchannel, newState);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUyMjM1Mw=="}, "originalCommit": {"oid": "5c02d5925bd0063b43d3cfda9267e59c9eed20e0"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a57f64a3ffb27ac8800b7ee11d784852de399b3", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/9a57f64a3ffb27ac8800b7ee11d784852de399b3", "committedDate": "2020-03-25T17:41:33Z", "message": "remove handleSubchannelState from interface"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMzg5ODQ4", "url": "https://github.com/grpc/grpc-java/pull/6831#pullrequestreview-381389848", "createdAt": "2020-03-25T17:45:20Z", "commit": {"oid": "9a57f64a3ffb27ac8800b7ee11d784852de399b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzo0NToyMFrOF7nA9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzo0NToyMFrOF7nA9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA0OTUyNw==", "bodyText": "Do you need to call handleSubchannelState() in run() as well?", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r398049527", "createdAt": "2020-03-25T17:45:20Z", "author": {"login": "dapengzhang0"}, "path": "grpclb/src/main/java/io/grpc/grpclb/CachedSubchannelPool.java", "diffHunk": "@@ -87,8 +88,7 @@ public void run() {\n     return subchannel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a57f64a3ffb27ac8800b7ee11d784852de399b3"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMzkyMTQ4", "url": "https://github.com/grpc/grpc-java/pull/6831#pullrequestreview-381392148", "createdAt": "2020-03-25T17:48:06Z", "commit": {"oid": "9a57f64a3ffb27ac8800b7ee11d784852de399b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzo0ODowNlrOF7nIkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzo0ODowNlrOF7nIkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA1MTQ3NQ==", "bodyText": "Why need check subchannelPool == null?", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r398051475", "createdAt": "2020-03-25T17:48:06Z", "author": {"login": "dapengzhang0"}, "path": "grpclb/src/main/java/io/grpc/grpclb/GrpclbState.java", "diffHunk": "@@ -196,10 +196,7 @@ void handleSubchannelState(Subchannel subchannel, ConnectivityStateInfo newState\n     if (newState.getState() == SHUTDOWN) {\n       return;\n     }\n-    if (!subchannels.values().contains(subchannel)) {\n-      if (subchannelPool != null ) {\n-        subchannelPool.handleSubchannelState(subchannel, newState);\n-      }\n+    if (subchannelPool == null && !subchannels.values().contains(subchannel)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a57f64a3ffb27ac8800b7ee11d784852de399b3"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1944a772c906d74688833e72153bf4816f275141", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/1944a772c906d74688833e72153bf4816f275141", "committedDate": "2020-03-25T17:50:02Z", "message": "use getter for grpclbstate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fd3a6f355d471dd4b7d5fe2861ddb013c733c71", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/1fd3a6f355d471dd4b7d5fe2861ddb013c733c71", "committedDate": "2020-03-25T18:15:50Z", "message": "accept SubchannelPool.Factory instead of SubchannelPool in grpclb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7a7e61b30a27feb6411b4454557e679c238364e", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/c7a7e61b30a27feb6411b4454557e679c238364e", "committedDate": "2020-03-25T18:22:12Z", "message": "pick fisrt don't use handle subchannel state"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNDQ2Nzc5", "url": "https://github.com/grpc/grpc-java/pull/6831#pullrequestreview-381446779", "createdAt": "2020-03-25T18:56:42Z", "commit": {"oid": "c7a7e61b30a27feb6411b4454557e679c238364e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxODo1Njo0MlrOF7p3LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjoyMzo1N1rOF7wobw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA5NjE3Mg==", "bodyText": "nit: annotate the field with @Nullable", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r398096172", "createdAt": "2020-03-25T18:56:42Z", "author": {"login": "dapengzhang0"}, "path": "grpclb/src/main/java/io/grpc/grpclb/GrpclbState.java", "diffHunk": "@@ -159,16 +162,27 @@ public String toString() {\n   GrpclbState(\n       GrpclbConfig config,\n       Helper helper,\n-      SubchannelPool subchannelPool,\n+      SubchannelPool.Factory subchannelPoolFactory,\n       TimeProvider time,\n       Stopwatch stopwatch,\n       BackoffPolicy.Provider backoffPolicyProvider) {\n     this.config = checkNotNull(config, \"config\");\n     this.helper = checkNotNull(helper, \"helper\");\n     this.syncContext = checkNotNull(helper.getSynchronizationContext(), \"syncContext\");\n-    this.subchannelPool =\n-        config.getMode() == Mode.ROUND_ROBIN\n-            ? checkNotNull(subchannelPool, \"subchannelPool\") : null;\n+    if (config.getMode() == Mode.ROUND_ROBIN) {\n+      checkNotNull(subchannelPoolFactory, \"subchannelPoolFactory\");\n+      this.subchannelPool =\n+          subchannelPoolFactory.create(\n+              new PooledSubchannelStateListener() {\n+                @Override\n+                public void onSubchannelState(\n+                    Subchannel subchannel, ConnectivityStateInfo newState) {\n+                  handleSubchannelState(subchannel, newState);\n+                }\n+              });\n+    } else {\n+      this.subchannelPool = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7a7e61b30a27feb6411b4454557e679c238364e"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwNTEyOA==", "bodyText": "I think still need to call GrpclbState.handleSubchannelState() otherwise it's never called for pick_first. And the test calling GrpclbState.handleSubchannelState() directly for pick_first seems cheating. It might require capturing/storing the listeners and delivering subchannel state with the listeners, could be messy.", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r398205128", "createdAt": "2020-03-25T22:19:23Z", "author": {"login": "dapengzhang0"}, "path": "grpclb/src/main/java/io/grpc/grpclb/GrpclbState.java", "diffHunk": "@@ -453,9 +460,18 @@ private void useRoundRobinLists(\n           eagList.add(new EquivalentAddressGroup(origEag.getAddresses(), eagAttrs));\n         }\n         if (subchannels.isEmpty()) {\n-          // TODO(zhangkun83): remove the deprecation suppression on this method once migrated to\n-          // the new createSubchannel().\n-          subchannel = helper.createSubchannel(eagList, createSubchannelAttrs());\n+          subchannel =\n+              helper.createSubchannel(\n+                  CreateSubchannelArgs.newBuilder()\n+                      .setAddresses(eagList)\n+                      .setAttributes(createSubchannelAttrs())\n+                      .build());\n+          subchannel.start(new SubchannelStateListener() {\n+            @Override\n+            public void onSubchannelState(ConnectivityStateInfo newState) {\n+              // No-op", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7a7e61b30a27feb6411b4454557e679c238364e"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwNzA4Nw==", "bodyText": "Then we don't even need the private method, we can just inline it here\nCacheEntry cached = cache.get(subchannel.getAddresses());\nif (cached != null && cached.subchannel != subchannel) {\n  cached.state = newState;\n}", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r398207087", "createdAt": "2020-03-25T22:23:57Z", "author": {"login": "dapengzhang0"}, "path": "grpclb/src/main/java/io/grpc/grpclb/CachedSubchannelPool.java", "diffHunk": "@@ -38,28 +39,39 @@\n   private final HashMap<EquivalentAddressGroup, CacheEntry> cache =\n       new HashMap<>();\n \n-  private Helper helper;\n-  private LoadBalancer lb;\n+  private final Helper helper;\n+  private PooledSubchannelStateListener listener;\n \n   @VisibleForTesting\n   static final long SHUTDOWN_TIMEOUT_MS = 10000;\n \n-  @Override\n-  public void init(Helper helper, LoadBalancer lb) {\n+  public CachedSubchannelPool(Helper helper) {\n     this.helper = checkNotNull(helper, \"helper\");\n-    this.lb = checkNotNull(lb, \"lb\");\n   }\n \n   @Override\n-  @SuppressWarnings(\"deprecation\")\n+  public void registerListener(PooledSubchannelStateListener pooledSubchannelStateListener) {\n+    this.listener = checkNotNull(pooledSubchannelStateListener, \"pooledSubchannelStateListener\");\n+  }\n+\n+  @Override\n   public Subchannel takeOrCreateSubchannel(\n       EquivalentAddressGroup eag, Attributes defaultAttributes) {\n     final CacheEntry entry = cache.remove(eag);\n     final Subchannel subchannel;\n     if (entry == null) {\n-      // TODO(zhangkun83): remove the deprecation suppression on this method once migrated to the\n-      // new createSubchannel().\n-      subchannel = helper.createSubchannel(eag, defaultAttributes);\n+      subchannel =\n+          helper.createSubchannel(\n+              CreateSubchannelArgs.newBuilder()\n+                  .setAddresses(eag)\n+                  .setAttributes(defaultAttributes)\n+                  .build());\n+      subchannel.start(new SubchannelStateListener() {\n+        @Override\n+        public void onSubchannelState(ConnectivityStateInfo newState) {\n+          listener.onSubchannelState(subchannel, newState);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUyMjM1Mw=="}, "originalCommit": {"oid": "5c02d5925bd0063b43d3cfda9267e59c9eed20e0"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d05ff707176fa13e9329abf5fcbc8906cda25606", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/d05ff707176fa13e9329abf5fcbc8906cda25606", "committedDate": "2020-03-26T06:30:19Z", "message": "fix pick first channel status update, fix tests (using fakes)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0ed14924fdc67cf7ae73fc24df4c1c9b7e503ca", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/e0ed14924fdc67cf7ae73fc24df4c1c9b7e503ca", "committedDate": "2020-03-26T06:45:01Z", "message": "fix format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d053dba57a0ddb2f33dae1d550efb1853b1b2ec0", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/d053dba57a0ddb2f33dae1d550efb1853b1b2ec0", "committedDate": "2020-03-26T06:50:52Z", "message": "Merge remote-tracking branch 'upstream/master' into grpclb_cached_pool"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0OTU0Njk3", "url": "https://github.com/grpc/grpc-java/pull/6831#pullrequestreview-384954697", "createdAt": "2020-03-31T17:32:13Z", "commit": {"oid": "d053dba57a0ddb2f33dae1d550efb1853b1b2ec0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzozMjoxM1rOF-gpAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzozMjoxM1rOF-gpAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA5MDgxOQ==", "bodyText": "There are so many methods called handleSubchannelState or similar, it's hard to tell in what difference they are doing just from the method name. You still need to jump to the method body to get useful information. I feel its readability is less than putting them inline,  the latter is absolutely clear to read.", "url": "https://github.com/grpc/grpc-java/pull/6831#discussion_r401090819", "createdAt": "2020-03-31T17:32:13Z", "author": {"login": "dapengzhang0"}, "path": "grpclb/src/main/java/io/grpc/grpclb/CachedSubchannelPool.java", "diffHunk": "@@ -38,28 +39,39 @@\n   private final HashMap<EquivalentAddressGroup, CacheEntry> cache =\n       new HashMap<>();\n \n-  private Helper helper;\n-  private LoadBalancer lb;\n+  private final Helper helper;\n+  private PooledSubchannelStateListener listener;\n \n   @VisibleForTesting\n   static final long SHUTDOWN_TIMEOUT_MS = 10000;\n \n-  @Override\n-  public void init(Helper helper, LoadBalancer lb) {\n+  public CachedSubchannelPool(Helper helper) {\n     this.helper = checkNotNull(helper, \"helper\");\n-    this.lb = checkNotNull(lb, \"lb\");\n   }\n \n   @Override\n-  @SuppressWarnings(\"deprecation\")\n+  public void registerListener(PooledSubchannelStateListener pooledSubchannelStateListener) {\n+    this.listener = checkNotNull(pooledSubchannelStateListener, \"pooledSubchannelStateListener\");\n+  }\n+\n+  @Override\n   public Subchannel takeOrCreateSubchannel(\n       EquivalentAddressGroup eag, Attributes defaultAttributes) {\n     final CacheEntry entry = cache.remove(eag);\n     final Subchannel subchannel;\n     if (entry == null) {\n-      // TODO(zhangkun83): remove the deprecation suppression on this method once migrated to the\n-      // new createSubchannel().\n-      subchannel = helper.createSubchannel(eag, defaultAttributes);\n+      subchannel =\n+          helper.createSubchannel(\n+              CreateSubchannelArgs.newBuilder()\n+                  .setAddresses(eag)\n+                  .setAttributes(defaultAttributes)\n+                  .build());\n+      subchannel.start(new SubchannelStateListener() {\n+        @Override\n+        public void onSubchannelState(ConnectivityStateInfo newState) {\n+          listener.onSubchannelState(subchannel, newState);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUyMjM1Mw=="}, "originalCommit": {"oid": "5c02d5925bd0063b43d3cfda9267e59c9eed20e0"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40f86b7ffa16b6c6570b18e4ed9be2f4286f81f2", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/40f86b7ffa16b6c6570b18e4ed9be2f4286f81f2", "committedDate": "2020-03-31T20:03:50Z", "message": "rename handleSubchannelState"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4466, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}