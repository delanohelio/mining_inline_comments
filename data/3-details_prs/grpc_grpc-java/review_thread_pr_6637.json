{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NzQ3NTM0", "number": 6637, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMzoxNlrODbEJ4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoyMjoyMlrODbEWpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA2MjA5OnYy", "diffSide": "LEFT", "path": "core/src/main/java/io/grpc/internal/AutoConfiguredLoadBalancerFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMzoxNlrOFiVn0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxODowNzozMVrOFivKig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MDE2MA==", "bodyText": "can you also remove the ResolvedPolicySelection class?", "url": "https://github.com/grpc/grpc-java/pull/6637#discussion_r371550160", "createdAt": "2020-01-28T00:03:16Z", "author": {"login": "creamsoup"}, "path": "core/src/main/java/io/grpc/internal/AutoConfiguredLoadBalancerFactory.java", "diffHunk": "@@ -125,48 +120,53 @@ Status tryHandleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n       }\n       PolicySelection policySelection =\n           (PolicySelection) resolvedAddresses.getLoadBalancingPolicyConfig();\n-      ResolvedPolicySelection resolvedSelection;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c817b6f38f3e6079a834ef830642450512777792"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2ODY1MA==", "bodyText": "Done.", "url": "https://github.com/grpc/grpc-java/pull/6637#discussion_r371968650", "createdAt": "2020-01-28T18:07:31Z", "author": {"login": "voidzcy"}, "path": "core/src/main/java/io/grpc/internal/AutoConfiguredLoadBalancerFactory.java", "diffHunk": "@@ -125,48 +120,53 @@ Status tryHandleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n       }\n       PolicySelection policySelection =\n           (PolicySelection) resolvedAddresses.getLoadBalancingPolicyConfig();\n-      ResolvedPolicySelection resolvedSelection;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MDE2MA=="}, "originalCommit": {"oid": "c817b6f38f3e6079a834ef830642450512777792"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA3MjA1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/grpc/internal/DnsNameResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowODo0MFrOFiVttw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxODowNzoyN1rOFivKbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MTY3MQ==", "bodyText": "this will be overwritten in some case where it execute L330. it looks like we should have both.", "url": "https://github.com/grpc/grpc-java/pull/6637#discussion_r371551671", "createdAt": "2020-01-28T00:08:40Z", "author": {"login": "creamsoup"}, "path": "core/src/main/java/io/grpc/internal/DnsNameResolver.java", "diffHunk": "@@ -293,19 +293,24 @@ public void run() {\n             Status.UNAVAILABLE.withDescription(\"Unable to resolve host \" + host).withCause(e));\n         return;\n       }\n+      if (resolutionResults.addresses.isEmpty() && resolutionResults.balancerAddresses.isEmpty()) {\n+        savedListener.onError(Status.UNAVAILABLE.withDescription(\n+            \"No DNS backend or balancer addresses found for \" + host));\n+        return;\n+      }\n       // Each address forms an EAG\n       List<EquivalentAddressGroup> servers = new ArrayList<>();\n       for (InetAddress inetAddr : resolutionResults.addresses) {\n         servers.add(new EquivalentAddressGroup(new InetSocketAddress(inetAddr, port)));\n       }\n-      servers.addAll(resolutionResults.balancerAddresses);\n-      if (servers.isEmpty()) {\n-        savedListener.onError(Status.UNAVAILABLE.withDescription(\n-            \"No DNS backend or balancer addresses found for \" + host));\n-        return;\n-      }\n \n-      ResolutionResult.Builder resultBuilder = ResolutionResult.newBuilder().setAddresses(servers);\n+      ResolutionResult.Builder resultBuilder =\n+          ResolutionResult.newBuilder()\n+              .setAddresses(servers)\n+              .setAttributes(\n+                  Attributes.newBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c817b6f38f3e6079a834ef830642450512777792"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2ODYyMQ==", "bodyText": "Fixed.", "url": "https://github.com/grpc/grpc-java/pull/6637#discussion_r371968621", "createdAt": "2020-01-28T18:07:27Z", "author": {"login": "voidzcy"}, "path": "core/src/main/java/io/grpc/internal/DnsNameResolver.java", "diffHunk": "@@ -293,19 +293,24 @@ public void run() {\n             Status.UNAVAILABLE.withDescription(\"Unable to resolve host \" + host).withCause(e));\n         return;\n       }\n+      if (resolutionResults.addresses.isEmpty() && resolutionResults.balancerAddresses.isEmpty()) {\n+        savedListener.onError(Status.UNAVAILABLE.withDescription(\n+            \"No DNS backend or balancer addresses found for \" + host));\n+        return;\n+      }\n       // Each address forms an EAG\n       List<EquivalentAddressGroup> servers = new ArrayList<>();\n       for (InetAddress inetAddr : resolutionResults.addresses) {\n         servers.add(new EquivalentAddressGroup(new InetSocketAddress(inetAddr, port)));\n       }\n-      servers.addAll(resolutionResults.balancerAddresses);\n-      if (servers.isEmpty()) {\n-        savedListener.onError(Status.UNAVAILABLE.withDescription(\n-            \"No DNS backend or balancer addresses found for \" + host));\n-        return;\n-      }\n \n-      ResolutionResult.Builder resultBuilder = ResolutionResult.newBuilder().setAddresses(servers);\n+      ResolutionResult.Builder resultBuilder =\n+          ResolutionResult.newBuilder()\n+              .setAddresses(servers)\n+              .setAttributes(\n+                  Attributes.newBuilder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MTY3MQ=="}, "originalCommit": {"oid": "c817b6f38f3e6079a834ef830642450512777792"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA4MTc5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/grpc/internal/GrpcAttributes.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoxNDoyOVrOFiVzoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMDo1Njo1N1rOFjch4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MzE4NQ==", "bodyText": "it makes sense it is here. but it is quite different than proposal. can you update the wrong one?", "url": "https://github.com/grpc/grpc-java/pull/6637#discussion_r371553185", "createdAt": "2020-01-28T00:14:29Z", "author": {"login": "creamsoup"}, "path": "core/src/main/java/io/grpc/internal/GrpcAttributes.java", "diffHunk": "@@ -37,6 +38,10 @@\n   public static final Attributes.Key<Map<String, ?>> NAME_RESOLVER_SERVICE_CONFIG =\n       Attributes.Key.create(\"service-config\");\n \n+  @NameResolver.ResolutionResultAttr\n+  public static final Attributes.Key<List<EquivalentAddressGroup>> ATTR_LB_ADDRS =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c817b6f38f3e6079a834ef830642450512777792"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk3NzQxNw==", "bodyText": "Now we will have two ATTR_LB_ADDRS keys, one in grpclb and one in core. They point to the same key. DnsNameResolver in core sets this attribute and GrpclbLoadBalancer will access it. In the next change, logics for querying SRV will be moved to grpclb, so only grpclb's resolver will set ATTR_LB_ADDRS attribute. Then we can eliminate the key in core.", "url": "https://github.com/grpc/grpc-java/pull/6637#discussion_r371977417", "createdAt": "2020-01-28T18:24:51Z", "author": {"login": "voidzcy"}, "path": "core/src/main/java/io/grpc/internal/GrpcAttributes.java", "diffHunk": "@@ -37,6 +38,10 @@\n   public static final Attributes.Key<Map<String, ?>> NAME_RESOLVER_SERVICE_CONFIG =\n       Attributes.Key.create(\"service-config\");\n \n+  @NameResolver.ResolutionResultAttr\n+  public static final Attributes.Key<List<EquivalentAddressGroup>> ATTR_LB_ADDRS =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MzE4NQ=="}, "originalCommit": {"oid": "c817b6f38f3e6079a834ef830642450512777792"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAyMzQyOA==", "bodyText": "can we mark those as deprecated and ask to use GrpcLbConstants?", "url": "https://github.com/grpc/grpc-java/pull/6637#discussion_r372023428", "createdAt": "2020-01-28T19:55:53Z", "author": {"login": "creamsoup"}, "path": "core/src/main/java/io/grpc/internal/GrpcAttributes.java", "diffHunk": "@@ -37,6 +38,10 @@\n   public static final Attributes.Key<Map<String, ?>> NAME_RESOLVER_SERVICE_CONFIG =\n       Attributes.Key.create(\"service-config\");\n \n+  @NameResolver.ResolutionResultAttr\n+  public static final Attributes.Key<List<EquivalentAddressGroup>> ATTR_LB_ADDRS =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MzE4NQ=="}, "originalCommit": {"oid": "c817b6f38f3e6079a834ef830642450512777792"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxMTkwNQ==", "bodyText": "Done.", "url": "https://github.com/grpc/grpc-java/pull/6637#discussion_r372711905", "createdAt": "2020-01-30T00:56:57Z", "author": {"login": "voidzcy"}, "path": "core/src/main/java/io/grpc/internal/GrpcAttributes.java", "diffHunk": "@@ -37,6 +38,10 @@\n   public static final Attributes.Key<Map<String, ?>> NAME_RESOLVER_SERVICE_CONFIG =\n       Attributes.Key.create(\"service-config\");\n \n+  @NameResolver.ResolutionResultAttr\n+  public static final Attributes.Key<List<EquivalentAddressGroup>> ATTR_LB_ADDRS =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MzE4NQ=="}, "originalCommit": {"oid": "c817b6f38f3e6079a834ef830642450512777792"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA5NDc4OnYy", "diffSide": "RIGHT", "path": "grpclb/src/main/java/io/grpc/grpclb/GrpclbLoadBalancer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoyMjoyMlrOFiV7uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoyMjoyMlrOFiV7uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1NTI1Ng==", "bodyText": "oh i may need to fix\nhttps://github.com/grpc/grpc-java/blob/master/core/src/main/java/io/grpc/internal/ManagedChannelImpl.java#L1388", "url": "https://github.com/grpc/grpc-java/pull/6637#discussion_r371555256", "createdAt": "2020-01-28T00:22:22Z", "author": {"login": "creamsoup"}, "path": "grpclb/src/main/java/io/grpc/grpclb/GrpclbLoadBalancer.java", "diffHunk": "@@ -184,6 +185,11 @@ public void handleNameResolutionError(Status error) {\n     }\n   }\n \n+  @Override\n+  public boolean canHandleEmptyAddressListFromNameResolution() {\n+    return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c817b6f38f3e6079a834ef830642450512777792"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2930, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}