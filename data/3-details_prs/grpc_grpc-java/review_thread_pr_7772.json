{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ3MTEwNjA1", "number": 7772, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNzozNjoyOFrOFL1KSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNzozNjoyOFrOFL1KSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3OTQ5NjQxOnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/PriorityLoadBalancer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNzozNjoyOFrOIPO3hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMToxODoyMlrOIPWWdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg0MzE0MQ==", "bodyText": "I would enqueue connectivityState = newState; picker = newPicker together with tryNextPriority(). The state update should be \"atomic\". Same for other balancers.", "url": "https://github.com/grpc/grpc-java/pull/7772#discussion_r552843141", "createdAt": "2021-01-06T17:36:28Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/PriorityLoadBalancer.java", "diffHunk": "@@ -287,7 +280,12 @@ public void updateBalancingState(ConnectivityState newState, SubchannelPicker ne\n             failOverTimer.cancel();\n           }\n         }\n-        tryNextPriority(true);\n+        syncContext.execute(new Runnable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3bf724f1bde09c1e441000517bb4f08ecf18150"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk2NTc0OQ==", "bodyText": "Fixed.", "url": "https://github.com/grpc/grpc-java/pull/7772#discussion_r552965749", "createdAt": "2021-01-06T21:18:22Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/PriorityLoadBalancer.java", "diffHunk": "@@ -287,7 +280,12 @@ public void updateBalancingState(ConnectivityState newState, SubchannelPicker ne\n             failOverTimer.cancel();\n           }\n         }\n-        tryNextPriority(true);\n+        syncContext.execute(new Runnable() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg0MzE0MQ=="}, "originalCommit": {"oid": "e3bf724f1bde09c1e441000517bb4f08ecf18150"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2966, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}