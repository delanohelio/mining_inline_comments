{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNjQ5ODIx", "number": 7059, "title": "xds: replace generic with individual client and server SslContextProviders", "bodyText": "", "createdAt": "2020-05-22T00:17:00Z", "url": "https://github.com/grpc/grpc-java/pull/7059", "merged": true, "mergeCommit": {"oid": "62620ccd00b4bc772ba6622a7c1b192dea45747c"}, "closed": true, "closedAt": "2020-05-27T19:31:55Z", "author": {"login": "sanjaypujare"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjm7PkAH2gAyNDIxNjQ5ODIxOjNkNTUxOTU0YzJjNWNlZDljYmEzMGUyY2I1YWE2NjhiNzZlNDQ3ZDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcleOtfAH2gAyNDIxNjQ5ODIxOjkyMzRhMzczZmQ0ZjEzMDgyODY3Mzc0MTc5YTQ1MDI0MTllNzEyYjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3d551954c2c5ced9cba30e2cb5aa668b76e447d4", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/3d551954c2c5ced9cba30e2cb5aa668b76e447d4", "committedDate": "2020-05-22T00:14:32Z", "message": "xds: replace generic with individual client and server SslContextProviders"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NTc3MTE4", "url": "https://github.com/grpc/grpc-java/pull/7059#pullrequestreview-416577118", "createdAt": "2020-05-22T00:30:20Z", "commit": {"oid": "3d551954c2c5ced9cba30e2cb5aa668b76e447d4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMDozMDoyMFrOGZHGKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNzozOToyNFrOGapKbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4Mzg1MQ==", "bodyText": "nit: those finals are unnecessary.", "url": "https://github.com/grpc/grpc-java/pull/7059#discussion_r428983851", "createdAt": "2020-05-22T00:30:20Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/ReferenceCountingSslContextProviderMap.java", "diffHunk": "@@ -65,29 +66,29 @@\n    * <p>Caller must not release a reference more than once. It's advised that you clear the\n    * reference to the instance with the null returned by this method.\n    *\n+   * @param key for the instance to be released\n    * @param value the instance to be released\n    * @return a null which the caller can use to clear the reference to that instance.\n    */\n-  public SslContextProvider<K> release(final SslContextProvider<K> value) {\n+  public P release(K key, final P value) {\n+    checkNotNull(key, \"key\");\n     checkNotNull(value, \"value\");\n-    K key = value.getSource();\n     return releaseInternal(key, value);\n   }\n \n-  private synchronized SslContextProvider<K> getInternal(K key) {\n-    Instance<K> instance = instances.get(key);\n+  private synchronized P getInternal(K key) {\n+    Instance<K, P> instance = instances.get(key);\n     if (instance == null) {\n-      instance = new Instance<>(sslContextProviderFactory.createSslContextProvider(key));\n+      instance = new Instance<K, P>(sslContextProviderFactory.createSslContextProvider(key));\n       instances.put(key, instance);\n       return instance.sslContextProvider;\n     } else {\n       return instance.acquire();\n     }\n   }\n \n-  private synchronized SslContextProvider<K> releaseInternal(\n-      final K key, final SslContextProvider<K> instance) {\n-    final Instance<K> cached = instances.get(key);\n+  private synchronized P releaseInternal(final K key, final P instance) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d551954c2c5ced9cba30e2cb5aa668b76e447d4"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU5MDU3Mg==", "bodyText": "helper using helpee is weird. is there way to avoid this circular dependency? btw, this class makes sense as an abstract class, but not as a helper class.", "url": "https://github.com/grpc/grpc-java/pull/7059#discussion_r430590572", "createdAt": "2020-05-26T17:39:24Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsSslContextProviderHelper.java", "diffHunk": "@@ -178,9 +104,9 @@ public void addCallback(Callback callback, Executor executor) {\n   }\n \n   private void callPerformCallback(\n-      Callback callback, Executor executor, final SslContext sslContextCopy) {\n-    performCallback(\n-        new SslContextGetter() {\n+      SslContextProvider.Callback callback, Executor executor, final SslContext sslContextCopy) {\n+    sslContextProvider.performCallback(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d551954c2c5ced9cba30e2cb5aa668b76e447d4"}, "originalPosition": 146}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08e20237c86f983ca6f72627cd73c81a4fe85718", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/08e20237c86f983ca6f72627cd73c81a4fe85718", "committedDate": "2020-05-27T01:17:27Z", "message": "xds: remove unnecessary final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e3f30bd72222fe474c78f26172d2ae3cba8beca", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/1e3f30bd72222fe474c78f26172d2ae3cba8beca", "committedDate": "2020-05-27T05:14:03Z", "message": "xds: address review comments get rid of the Helper class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a708edc9be9e808ae54b1fb8ebb199695b3d0125", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/a708edc9be9e808ae54b1fb8ebb199695b3d0125", "committedDate": "2020-05-27T05:54:21Z", "message": "xds: clean up code/format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4764ca53ee0213c68ef151c3ef03e05d84325b5", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/b4764ca53ee0213c68ef151c3ef03e05d84325b5", "committedDate": "2020-05-27T06:03:41Z", "message": "xds: minor cleanup1"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NDI5OTkz", "url": "https://github.com/grpc/grpc-java/pull/7059#pullrequestreview-419429993", "createdAt": "2020-05-27T16:58:52Z", "commit": {"oid": "b4764ca53ee0213c68ef151c3ef03e05d84325b5"}, "state": "APPROVED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjo1ODo1MlrOGbUdSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODozNzozMVrOGbYKMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI5OTkxNQ==", "bodyText": "@Nullable", "url": "https://github.com/grpc/grpc-java/pull/7059#discussion_r431299915", "createdAt": "2020-05-27T16:58:52Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/CommonTlsContextUtil.java", "diffHunk": "@@ -40,4 +47,52 @@ static boolean hasAllSecretsUsingSds(CommonTlsContext commonTlsContext) {\n     return (commonTlsContext.getTlsCertificatesCount() == 0)\n         && !commonTlsContext.hasValidationContext();\n   }\n+\n+  static CertificateValidationContext getCertificateValidationContext(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4764ca53ee0213c68ef151c3ef03e05d84325b5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMwMTM3Ng==", "bodyText": "nit: move this next to the other getter? (i am not sure about the class structure)", "url": "https://github.com/grpc/grpc-java/pull/7059#discussion_r431301376", "createdAt": "2020-05-27T17:01:13Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/DownstreamTlsContextHolder.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.sds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.envoyproxy.envoy.api.v2.auth.CommonTlsContext;\n+import io.envoyproxy.envoy.api.v2.auth.DownstreamTlsContext;\n+\n+class DownstreamTlsContextHolder implements TlsContextHolder {\n+\n+  public DownstreamTlsContext getDownstreamTlsContext() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4764ca53ee0213c68ef151c3ef03e05d84325b5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMwMTYzMg==", "bodyText": "can be a final class", "url": "https://github.com/grpc/grpc-java/pull/7059#discussion_r431301632", "createdAt": "2020-05-27T17:01:38Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/DownstreamTlsContextHolder.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.sds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.envoyproxy.envoy.api.v2.auth.CommonTlsContext;\n+import io.envoyproxy.envoy.api.v2.auth.DownstreamTlsContext;\n+\n+class DownstreamTlsContextHolder implements TlsContextHolder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4764ca53ee0213c68ef151c3ef03e05d84325b5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1NzkyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return ((DownstreamTlsContextHolder)tlsContextHolder).getDownstreamTlsContext();\n          \n          \n            \n                return ((DownstreamTlsContextHolder) tlsContextHolder).getDownstreamTlsContext();", "url": "https://github.com/grpc/grpc-java/pull/7059#discussion_r431357921", "createdAt": "2020-05-27T18:32:51Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "diffHunk": "@@ -97,6 +77,20 @@ protected void setClientAuthValues(\n     }\n   }\n \n+  /** Returns the DownstreamTlsContext in this SslContextProvider if this is server side. **/\n+  public DownstreamTlsContext getDownstreamTlsContext() {\n+    checkState(tlsContextHolder instanceof DownstreamTlsContextHolder,\n+        \"expected DownstreamTlsContextHolder\");\n+    return ((DownstreamTlsContextHolder)tlsContextHolder).getDownstreamTlsContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4764ca53ee0213c68ef151c3ef03e05d84325b5"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1Nzk5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return ((UpstreamTlsContextHolder)tlsContextHolder).getUpstreamTlsContext();\n          \n          \n            \n                return ((UpstreamTlsContextHolder) tlsContextHolder).getUpstreamTlsContext();", "url": "https://github.com/grpc/grpc-java/pull/7059#discussion_r431357999", "createdAt": "2020-05-27T18:32:59Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java", "diffHunk": "@@ -97,6 +77,20 @@ protected void setClientAuthValues(\n     }\n   }\n \n+  /** Returns the DownstreamTlsContext in this SslContextProvider if this is server side. **/\n+  public DownstreamTlsContext getDownstreamTlsContext() {\n+    checkState(tlsContextHolder instanceof DownstreamTlsContextHolder,\n+        \"expected DownstreamTlsContextHolder\");\n+    return ((DownstreamTlsContextHolder)tlsContextHolder).getDownstreamTlsContext();\n+  }\n+\n+  /** Returns the UpstreamTlsContext in this SslContextProvider if this is client side. **/\n+  public UpstreamTlsContext getUpstreamTlsContext() {\n+    checkState(tlsContextHolder instanceof UpstreamTlsContextHolder,\n+        \"expected UpstreamTlsContextHolder\");\n+    return ((UpstreamTlsContextHolder)tlsContextHolder).getUpstreamTlsContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4764ca53ee0213c68ef151c3ef03e05d84325b5"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1ODkyNg==", "bodyText": "can it be a final class?", "url": "https://github.com/grpc/grpc-java/pull/7059#discussion_r431358926", "createdAt": "2020-05-27T18:34:36Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/UpstreamTlsContextHolder.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.sds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.envoyproxy.envoy.api.v2.auth.CommonTlsContext;\n+import io.envoyproxy.envoy.api.v2.auth.UpstreamTlsContext;\n+\n+class UpstreamTlsContextHolder implements TlsContextHolder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4764ca53ee0213c68ef151c3ef03e05d84325b5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2MDU2Mg==", "bodyText": "nit: move it before/after L37?", "url": "https://github.com/grpc/grpc-java/pull/7059#discussion_r431360562", "createdAt": "2020-05-27T18:37:31Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/UpstreamTlsContextHolder.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.sds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.envoyproxy.envoy.api.v2.auth.CommonTlsContext;\n+import io.envoyproxy.envoy.api.v2.auth.UpstreamTlsContext;\n+\n+class UpstreamTlsContextHolder implements TlsContextHolder {\n+\n+  public UpstreamTlsContext getUpstreamTlsContext() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4764ca53ee0213c68ef151c3ef03e05d84325b5"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91f08b1d112fca0b1fdf0be0c05f70228c84cdaa", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/91f08b1d112fca0b1fdf0be0c05f70228c84cdaa", "committedDate": "2020-05-27T19:04:37Z", "message": "Update xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java\n\nCo-authored-by: Jihun Cho <jihuncho@google.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b230ba7140e5e117b1059963f360a3caaa3269e9", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/b230ba7140e5e117b1059963f360a3caaa3269e9", "committedDate": "2020-05-27T19:04:46Z", "message": "Update xds/src/main/java/io/grpc/xds/internal/sds/SslContextProvider.java\n\nCo-authored-by: Jihun Cho <jihuncho@google.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9234a373fd4f13082867374179a4502419e712b6", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/9234a373fd4f13082867374179a4502419e712b6", "committedDate": "2020-05-27T19:14:30Z", "message": "xds: minor cleanup2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4442, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}