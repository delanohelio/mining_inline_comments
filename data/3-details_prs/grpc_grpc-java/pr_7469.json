{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NjkwNTY3", "number": 7469, "title": "xds: migrate xDS resolver to use XdsClient APIs for watching individual LDS/RDS resources", "bodyText": "", "createdAt": "2020-09-29T09:26:26Z", "url": "https://github.com/grpc/grpc-java/pull/7469", "merged": true, "mergeCommit": {"oid": "460ca756845a3a53e763c64df1f715765f789a6b"}, "closed": true, "closedAt": "2020-10-08T06:33:41Z", "author": {"login": "voidzcy"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNkkQVAH2gAyNDk0NjkwNTY3OmYxN2U0NzUzODE3YTc2M2UxZWQ0NTY5NzEzNmFiZjQ4NjczNzgyYjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQYqTUgH2gAyNDk0NjkwNTY3OjYzYWJhM2ZmYmNlZDVkMDJmZWFkYjJkYTNjNmYyOWIwN2RlZmZmNDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f17e4753817a763e1ed45697136abf48673782b3", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/f17e4753817a763e1ed45697136abf48673782b3", "committedDate": "2020-09-29T09:14:26Z", "message": "Add getters."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef26c71a9af56057335c0b4e6d5a84bd78280818", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/ef26c71a9af56057335c0b4e6d5a84bd78280818", "committedDate": "2020-09-29T09:15:11Z", "message": "Change XdsNameResolver to use XdsClient APIs for watching LDS/RDS resource individually."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "171db328c7003d9d5891b390d9c552bb1da71c9a", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/171db328c7003d9d5891b390d9c552bb1da71c9a", "committedDate": "2020-09-30T23:11:19Z", "message": "Enhance tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f95e61cbf4436f808e0dbeb10571a2c0ddeaad72", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/f95e61cbf4436f808e0dbeb10571a2c0ddeaad72", "committedDate": "2020-09-30T23:11:19Z", "message": "Fix callback lifecycle issue."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "45c2e0c8181584f47b2ccbf6699a078d08827ff0", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/45c2e0c8181584f47b2ccbf6699a078d08827ff0", "committedDate": "2020-09-30T22:57:28Z", "message": "Fix callback lifecycle issue."}, "afterCommit": {"oid": "f95e61cbf4436f808e0dbeb10571a2c0ddeaad72", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/f95e61cbf4436f808e0dbeb10571a2c0ddeaad72", "committedDate": "2020-09-30T23:11:19Z", "message": "Fix callback lifecycle issue."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8502c35a6b35717fb607256f0f6f91a515a7c98c", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/8502c35a6b35717fb607256f0f6f91a515a7c98c", "committedDate": "2020-10-01T01:27:44Z", "message": "Rename inner class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7611ec645fcab07c50f39d7b6e85dc24f046a745", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/7611ec645fcab07c50f39d7b6e85dc24f046a745", "committedDate": "2020-10-02T23:53:17Z", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/migrate_xds_resolver_to_use_watch_lds_rds_individually"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c4899aed385cc59e9a5b1e1f88ff448928c3989", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/9c4899aed385cc59e9a5b1e1f88ff448928c3989", "committedDate": "2020-10-05T19:34:34Z", "message": "Use XdsClientImpl2."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNDE4Mzk2", "url": "https://github.com/grpc/grpc-java/pull/7469#pullrequestreview-503418396", "createdAt": "2020-10-06T23:03:03Z", "commit": {"oid": "9c4899aed385cc59e9a5b1e1f88ff448928c3989"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzowMzowM1rOHdc4Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzowODoyM1rOHdc-sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0MzkyNg==", "bodyText": "I don't think this flag is necessary. It's immediately true once instantiated.", "url": "https://github.com/grpc/grpc-java/pull/7469#discussion_r500643926", "createdAt": "2020-10-06T23:03:03Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsNameResolver.java", "diffHunk": "@@ -300,15 +412,92 @@ public void run() {\n     }\n   }\n \n-  // https://github.com/google/error-prone/issues/1767\n-  @SuppressWarnings(\"ModifyCollectionInEnhancedForLoop\")\n-  private class ConfigWatcherImpl implements ConfigWatcher {\n+  private class ResolveState implements LdsResourceWatcher {\n+    private final ConfigOrError emptyServiceConfig =\n+        serviceConfigParser.parseServiceConfig(Collections.<String, Object>emptyMap());\n+    private final ResolutionResult emptyResult =\n+        ResolutionResult.newBuilder()\n+            .setServiceConfig(emptyServiceConfig)\n+            // let channel take action for no config selector\n+            .build();\n+    private boolean started;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c4899aed385cc59e9a5b1e1f88ff448928c3989"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0NDQ3Mg==", "bodyText": "I believe start() is only called right after instantiation and won't be called twice.", "url": "https://github.com/grpc/grpc-java/pull/7469#discussion_r500644472", "createdAt": "2020-10-06T23:05:01Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsNameResolver.java", "diffHunk": "@@ -300,15 +412,92 @@ public void run() {\n     }\n   }\n \n-  // https://github.com/google/error-prone/issues/1767\n-  @SuppressWarnings(\"ModifyCollectionInEnhancedForLoop\")\n-  private class ConfigWatcherImpl implements ConfigWatcher {\n+  private class ResolveState implements LdsResourceWatcher {\n+    private final ConfigOrError emptyServiceConfig =\n+        serviceConfigParser.parseServiceConfig(Collections.<String, Object>emptyMap());\n+    private final ResolutionResult emptyResult =\n+        ResolutionResult.newBuilder()\n+            .setServiceConfig(emptyServiceConfig)\n+            // let channel take action for no config selector\n+            .build();\n+    private boolean started;\n     private Set<String> existingClusters;\n+    @Nullable\n+    private String rdsResource;\n+    @Nullable\n+    private RdsResourceWatcher rdsWatcher;\n+\n+    @Override\n+    public void onChanged(LdsUpdate update) {\n+      if (!started) {\n+        return;\n+      }\n+      logger.log(XdsLogLevel.INFO, \"Receive LDS resource update: {0}\", update);\n+      List<VirtualHost> virtualHosts = update.getVirtualHosts();\n+      String rdsName = update.getRdsName();\n+      if (rdsName != null && rdsName.equals(rdsResource)) {\n+        return;\n+      }\n+      cleanUpRdsWatcher();\n+      if (virtualHosts != null) {\n+        updateRoutes(virtualHosts);\n+      } else {\n+        rdsResource = rdsName;\n+        rdsWatcher = new RdsResourceWatcherImpl();\n+        logger.log(XdsLogLevel.INFO, \"Start watching RDS resource {0}\", rdsResource);\n+        xdsClient.watchRdsResource(rdsResource, rdsWatcher);\n+      }\n+    }\n \n     @Override\n-    public void onConfigChanged(ConfigUpdate update) {\n+    public void onError(Status error) {\n+      if (!started) {\n+        return;\n+      }\n+      logger.log(\n+          XdsLogLevel.WARNING,\n+          \"Received error from xDS client {0}: {1}\", xdsClient, error.getDescription());\n+      listener.onError(error);\n+    }\n+\n+    @Override\n+    public void onResourceDoesNotExist(String resourceName) {\n+      if (!started) {\n+        return;\n+      }\n+      logger.log(XdsLogLevel.INFO, \"LDS resource {0} unavailable\", resourceName);\n+      cleanUpRdsWatcher();\n+      listener.onResult(emptyResult);\n+    }\n+\n+    private void start() {\n+      if (started) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c4899aed385cc59e9a5b1e1f88ff448928c3989"}, "originalPosition": 252}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0NTU1Mg==", "bodyText": "Let's not do this now based on assumptions on future XdsClient implementation. It's not clear how race is handled by XdsClient yet.", "url": "https://github.com/grpc/grpc-java/pull/7469#discussion_r500645552", "createdAt": "2020-10-06T23:08:23Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsNameResolver.java", "diffHunk": "@@ -353,25 +542,44 @@ public void onConfigChanged(ConfigUpdate update) {\n       }\n     }\n \n-    @Override\n-    public void onResourceDoesNotExist(String resourceName) {\n-      logger.log(XdsLogLevel.INFO, \"Resource {0} is unavailable\", resourceName);\n-      ConfigOrError parsedServiceConfig =\n-          serviceConfigParser.parseServiceConfig(Collections.<String, Object>emptyMap());\n-      ResolutionResult result =\n-          ResolutionResult.newBuilder()\n-              .setServiceConfig(parsedServiceConfig)\n-              // let channel take action for no config selector\n-              .build();\n-      listener.onResult(result);\n+    private void cleanUpRdsWatcher() {\n+      if (rdsWatcher != null) {\n+        logger.log(XdsLogLevel.INFO, \"Stop watching RDS resource {0}\", rdsResource);\n+        xdsClient.cancelRdsResourceWatch(rdsResource, rdsWatcher);\n+        rdsResource = null;\n+        rdsWatcher = null;\n+      }\n     }\n \n-    @Override\n-    public void onError(Status error) {\n-      logger.log(\n-          XdsLogLevel.WARNING,\n-          \"Received error from xDS client {0}: {1}\", xdsClient, error.getDescription());\n-      listener.onError(error);\n+    private class RdsResourceWatcherImpl implements RdsResourceWatcher {\n+\n+      @Override\n+      public void onChanged(RdsUpdate update) {\n+        if (this != rdsWatcher) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c4899aed385cc59e9a5b1e1f88ff448928c3989"}, "originalPosition": 326}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bc8e9d44419d9e30f8cf9c3df56edba424056f5", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/6bc8e9d44419d9e30f8cf9c3df56edba424056f5", "committedDate": "2020-10-07T00:44:12Z", "message": "Remove race checks for now, as it is not needed now."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0Mjg3NjQw", "url": "https://github.com/grpc/grpc-java/pull/7469#pullrequestreview-504287640", "createdAt": "2020-10-07T21:40:39Z", "commit": {"oid": "6bc8e9d44419d9e30f8cf9c3df56edba424056f5"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMTo0MDozOVrOHeGgwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMTo0NzoxNVrOHeGr2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNjAxNg==", "bodyText": "Should they be cleaned up in a FILO order?", "url": "https://github.com/grpc/grpc-java/pull/7469#discussion_r501326016", "createdAt": "2020-10-07T21:40:39Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsNameResolver.java", "diffHunk": "@@ -300,15 +412,74 @@ public void run() {\n     }\n   }\n \n-  // https://github.com/google/error-prone/issues/1767\n-  @SuppressWarnings(\"ModifyCollectionInEnhancedForLoop\")\n-  private class ConfigWatcherImpl implements ConfigWatcher {\n+  private class ResolveState implements LdsResourceWatcher {\n+    private final ConfigOrError emptyServiceConfig =\n+        serviceConfigParser.parseServiceConfig(Collections.<String, Object>emptyMap());\n+    private final ResolutionResult emptyResult =\n+        ResolutionResult.newBuilder()\n+            .setServiceConfig(emptyServiceConfig)\n+            // let channel take action for no config selector\n+            .build();\n     private Set<String> existingClusters;\n+    @Nullable\n+    private String rdsResource;\n+    @Nullable\n+    private RdsResourceWatcher rdsWatcher;\n+\n+    @Override\n+    public void onChanged(LdsUpdate update) {\n+      logger.log(XdsLogLevel.INFO, \"Receive LDS resource update: {0}\", update);\n+      List<VirtualHost> virtualHosts = update.getVirtualHosts();\n+      String rdsName = update.getRdsName();\n+      if (rdsName != null && rdsName.equals(rdsResource)) {\n+        return;\n+      }\n+      cleanUpRdsWatcher();\n+      if (virtualHosts != null) {\n+        updateRoutes(virtualHosts);\n+      } else {\n+        rdsResource = rdsName;\n+        rdsWatcher = new RdsResourceWatcherImpl();\n+        logger.log(XdsLogLevel.INFO, \"Start watching RDS resource {0}\", rdsResource);\n+        xdsClient.watchRdsResource(rdsResource, rdsWatcher);\n+      }\n+    }\n+\n+    @Override\n+    public void onError(Status error) {\n+      logger.log(\n+          XdsLogLevel.WARNING,\n+          \"Received error from xDS client {0}: {1}\", xdsClient, error.getDescription());\n+      listener.onError(error);\n+    }\n \n     @Override\n-    public void onConfigChanged(ConfigUpdate update) {\n+    public void onResourceDoesNotExist(String resourceName) {\n+      logger.log(XdsLogLevel.INFO, \"LDS resource {0} unavailable\", resourceName);\n+      cleanUpRdsWatcher();\n+      listener.onResult(emptyResult);\n+    }\n+\n+    private void start() {\n+      logger.log(XdsLogLevel.INFO, \"Start watching LDS resource {0}\", authority);\n+      xdsClient.watchLdsResource(authority, this);\n+    }\n+\n+    private void stop() {\n+      logger.log(XdsLogLevel.INFO, \"Stop watching LDS resource {0}\", authority);\n+      xdsClient.cancelLdsResourceWatch(authority, this);\n+      cleanUpRdsWatcher();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc8e9d44419d9e30f8cf9c3df56edba424056f5"}, "originalPosition": 249}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyODg1Nw==", "bodyText": "I wonder where the error-prone warning was coming from in the old code.", "url": "https://github.com/grpc/grpc-java/pull/7469#discussion_r501328857", "createdAt": "2020-10-07T21:47:15Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsNameResolver.java", "diffHunk": "@@ -300,15 +412,74 @@ public void run() {\n     }\n   }\n \n-  // https://github.com/google/error-prone/issues/1767\n-  @SuppressWarnings(\"ModifyCollectionInEnhancedForLoop\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bc8e9d44419d9e30f8cf9c3df56edba424056f5"}, "originalPosition": 190}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63aba3ffbced5d02feadb2da3c6f29b07defff43", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/63aba3ffbced5d02feadb2da3c6f29b07defff43", "committedDate": "2020-10-08T03:03:57Z", "message": "Cancel RDS watcher before LDS watcher."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4063, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}