{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MzI5NjM4", "number": 6944, "title": "Move everything related to cancellation to CancellableContext.", "bodyText": "Currently the logic of cancellation is split between Context and CancellableContext where some of the logic related to \"isCancelled\" lives in the CancellableContext, and some of the logic related to listeners added lives in \"Context\".\nThis PR ensures that the entire logic related to cancellation lives in one place (CancellableContext) and ensures clear separation of concerns, here are some benefits:\n\nClear ownership of the listeners and cancellation property.\nReduce the size of the Context object (2 empty pointers).\n\nBecause the list of listeners is shared between all child Contexts of a \"CancellableContext\" it may increases contention and slows the linear scanning during removal, but it seems like it won't be a problem because listeners seem to be rare, so 0\u21921 and 1\u21920 transitions should be the most common which stresses the same code paths.\nChanges in cancellation ordering:\n\nThe overall ordering stays the same: first listeners added to the CancellableContext then child contexts.\nImportant Change: in the previous implementation it was guaranteed that listeners added to a child Context will be executed in the same group, now this is no longer the case, they are executed in the same order they were added.\nIn the previous implementation all child Context of a CancellableContext (including child of a child of a CancellableContext) are adding their \"parentListener\" to the CancellableContext list, which means that there is no guaranteed ordering of execution in the case of a parent and child Context when none of them are CancellableContext.", "createdAt": "2020-04-17T20:37:46Z", "url": "https://github.com/grpc/grpc-java/pull/6944", "merged": true, "mergeCommit": {"oid": "6bcc182b1b17475706efac96c84466fe6a21d4e0"}, "closed": true, "closedAt": "2020-04-21T00:05:30Z", "author": {"login": "bogdandrutu"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZjNOtgFqTM5NjY1ODIzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZnfIAgBqjMyNTM5MDkwOTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NjU4MjM2", "url": "https://github.com/grpc/grpc-java/pull/6944#pullrequestreview-396658236", "createdAt": "2020-04-20T17:21:30Z", "commit": {"oid": "5d103226b84074212dc434e356209474e32e39b6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoyMTozMFrOGIfTjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzozNTowN1rOGIf2Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NDcwMQ==", "bodyText": "Please revert these useless changes. This is just a style change, which just adds noise and can flip/flop each time a different person touches the code.", "url": "https://github.com/grpc/grpc-java/pull/6944#discussion_r411554701", "createdAt": "2020-04-20T17:21:30Z", "author": {"login": "ejona86"}, "path": "context/src/main/java/io/grpc/Context.java", "diffHunk": "@@ -459,9 +453,8 @@ boolean isCurrent() {\n   public boolean isCancelled() {\n     if (cancellableAncestor == null) {\n       return false;\n-    } else {\n-      return cancellableAncestor.isCancelled();\n     }\n+    return cancellableAncestor.isCancelled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d103226b84074212dc434e356209474e32e39b6"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2MzU4Ng==", "bodyText": "This is broken. The same Listener could be used for multiple Contexts. It could then remove the Listener for the wrong Context.", "url": "https://github.com/grpc/grpc-java/pull/6944#discussion_r411563586", "createdAt": "2020-04-20T17:35:07Z", "author": {"login": "ejona86"}, "path": "context/src/main/java/io/grpc/Context.java", "diffHunk": "@@ -498,98 +490,30 @@ public void addListener(final CancellationListener cancellationListener,\n                           final Executor executor) {\n     checkNotNull(cancellationListener, \"cancellationListener\");\n     checkNotNull(executor, \"executor\");\n-    if (canBeCancelled()) {\n-      ExecutableListener executableListener =\n-          new ExecutableListener(executor, cancellationListener);\n-      synchronized (this) {\n-        if (isCancelled()) {\n-          executableListener.deliver();\n-        } else {\n-          if (listeners == null) {\n-            // Now that we have a listener we need to listen to our parent so\n-            // we can cascade listener notification.\n-            listeners = new ArrayList<>();\n-            listeners.add(executableListener);\n-            if (cancellableAncestor != null) {\n-              cancellableAncestor.addListener(parentListener, DirectExecutor.INSTANCE);\n-            }\n-          } else {\n-            listeners.add(executableListener);\n-          }\n-        }\n-      }\n+    if (cancellableAncestor == null) {\n+      return;\n     }\n+    cancellableAncestor.addListenerInternal(\n+        new ExecutableListener(executor, cancellationListener, this));\n   }\n \n   /**\n    * Remove a {@link CancellationListener}.\n    */\n   public void removeListener(CancellationListener cancellationListener) {\n-    if (!canBeCancelled()) {\n-      return;\n-    }\n-    synchronized (this) {\n-      if (listeners != null) {\n-        for (int i = listeners.size() - 1; i >= 0; i--) {\n-          if (listeners.get(i).listener == cancellationListener) {\n-            listeners.remove(i);\n-            // Just remove the first matching listener, given that we allow duplicate\n-            // adds we should allow for duplicates after remove.\n-            break;\n-          }\n-        }\n-        // We have no listeners so no need to listen to our parent\n-        if (listeners.isEmpty()) {\n-          if (cancellableAncestor != null) {\n-            cancellableAncestor.removeListener(parentListener);\n-          }\n-          listeners = null;\n-        }\n-      }\n-    }\n-  }\n-\n-  /**\n-   * Notify all listeners that this context has been cancelled and immediately release\n-   * any reference to them so that they may be garbage collected.\n-   */\n-  void notifyAndClearListeners() {\n-    if (!canBeCancelled()) {\n+    if (cancellableAncestor == null) {\n       return;\n     }\n-    ArrayList<ExecutableListener> tmpListeners;\n-    synchronized (this) {\n-      if (listeners == null) {\n-        return;\n-      }\n-      tmpListeners = listeners;\n-      listeners = null;\n-    }\n-    // Deliver events to non-child context listeners before we notify child contexts. We do this\n-    // to cancel higher level units of work before child units. This allows for a better error\n-    // handling paradigm where the higher level unit of work knows it is cancelled and so can\n-    // ignore errors that bubble up as a result of cancellation of lower level units.\n-    for (int i = 0; i < tmpListeners.size(); i++) {\n-      if (!(tmpListeners.get(i).listener instanceof ParentListener)) {\n-        tmpListeners.get(i).deliver();\n-      }\n-    }\n-    for (int i = 0; i < tmpListeners.size(); i++) {\n-      if (tmpListeners.get(i).listener instanceof ParentListener) {\n-        tmpListeners.get(i).deliver();\n-      }\n-    }\n-    if (cancellableAncestor != null) {\n-      cancellableAncestor.removeListener(parentListener);\n-    }\n+    cancellableAncestor.removeListener(cancellationListener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d103226b84074212dc434e356209474e32e39b6"}, "originalPosition": 135}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48469834a8e8e53768898fcff9257db3b09693a5", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/grpc/grpc-java/commit/48469834a8e8e53768898fcff9257db3b09693a5", "committedDate": "2020-04-20T19:17:42Z", "message": "Remove style changes, fix removeListener\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "800973e96216c8caad57b2edb215636c2d9d70a2", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/grpc/grpc-java/commit/800973e96216c8caad57b2edb215636c2d9d70a2", "committedDate": "2020-04-20T19:24:52Z", "message": "Remove style changes, fix removeListener\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "800973e96216c8caad57b2edb215636c2d9d70a2", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/grpc/grpc-java/commit/800973e96216c8caad57b2edb215636c2d9d70a2", "committedDate": "2020-04-20T19:24:52Z", "message": "Remove style changes, fix removeListener\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "583a005e2f7f66979efde2e74ee5d49968280265", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/grpc/grpc-java/commit/583a005e2f7f66979efde2e74ee5d49968280265", "committedDate": "2020-04-20T19:30:30Z", "message": "Remove style changes, fix removeListener\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "583a005e2f7f66979efde2e74ee5d49968280265", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/grpc/grpc-java/commit/583a005e2f7f66979efde2e74ee5d49968280265", "committedDate": "2020-04-20T19:30:30Z", "message": "Remove style changes, fix removeListener\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "e7372553c727be2a8435df9a8a361d890cf4b8e5", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/grpc/grpc-java/commit/e7372553c727be2a8435df9a8a361d890cf4b8e5", "committedDate": "2020-04-20T22:19:45Z", "message": "Move everything related to cancellation to CancellableContext.\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODY0ODI3", "url": "https://github.com/grpc/grpc-java/pull/6944#pullrequestreview-396864827", "createdAt": "2020-04-20T22:46:51Z", "commit": {"oid": "e7372553c727be2a8435df9a8a361d890cf4b8e5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6179d352a4e53278c5f64ecd2aa154fd427137d", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/grpc/grpc-java/commit/b6179d352a4e53278c5f64ecd2aa154fd427137d", "committedDate": "2020-04-20T23:14:20Z", "message": "Move everything related to cancellation to CancellableContext.\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7372553c727be2a8435df9a8a361d890cf4b8e5", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/grpc/grpc-java/commit/e7372553c727be2a8435df9a8a361d890cf4b8e5", "committedDate": "2020-04-20T22:19:45Z", "message": "Move everything related to cancellation to CancellableContext.\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "b6179d352a4e53278c5f64ecd2aa154fd427137d", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/grpc/grpc-java/commit/b6179d352a4e53278c5f64ecd2aa154fd427137d", "committedDate": "2020-04-20T23:14:20Z", "message": "Move everything related to cancellation to CancellableContext.\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4546, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}