{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ3MTEwNjA1", "number": 7772, "title": "xds: fix LB policy address and balancing state update propagations", "bodyText": "Delaying handleResolvedAddresses() for propagating configs to the child LB policy can be problematic. For example, if channel shutdown has been enqueued when calling child policy's handleResolvedAddresses() is being enqueued (e.g., receiving updates from XdsClient), it should not be executed. Otherwise, subchannels may be created by LBs that have already been shut down.\nWe should follow the convention that never delay update/error propagation to downstream LB policies. To avoid reentrancy of downstream LB policies calling updateBalancingState() in-place, LB policy implementations can wrap the helper to delay such upcalls.\nIn the existing implementation, such problem exists in LB policies that manages a group of child policies. Specifically they are ClusterManagerLoadBalancer (manages a group of CdsLoadBalancer as its child policies), PriorityLoadBalancer (manages a group of WeightedTargetLoadBalancer or ClusterImplLoadBalancer in the new hierarchy) and WeightedTargetLoadBalancer (manages a group of 'target' LBs).", "createdAt": "2020-12-30T22:45:32Z", "url": "https://github.com/grpc/grpc-java/pull/7772", "merged": true, "mergeCommit": {"oid": "70dd45ae706e92693edf712ca1f8207bd254f8c5"}, "closed": true, "closedAt": "2021-01-07T02:25:04Z", "author": {"login": "voidzcy"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrXPVugH2gAyNTQ3MTEwNjA1OjIxODg1NTJjYjI0NTg4NjYyNTQ3OTc5ZDhiM2I0NDJjYWRlMGNkMWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtmmraAFqTU2MzA1NDkxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2188552cb24588662547979d8b3b442cade0cd1c", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/2188552cb24588662547979d8b3b442cade0cd1c", "committedDate": "2020-12-30T22:40:33Z", "message": "cluster_manager LB policy: Do not delay propagation of address update to child LB policies, but instead delay balancing state update upcalls."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3fe536c021ec6a53853a2da83d3d4ea1ad1dcf5", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/b3fe536c021ec6a53853a2da83d3d4ea1ad1dcf5", "committedDate": "2020-12-30T22:42:02Z", "message": "priority_lb: Propagate address update to child LB policies directly, delay balancing state update upcall instead."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85e8d6648e125758fb7362e0d1cad0cfcffea029", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/85e8d6648e125758fb7362e0d1cad0cfcffea029", "committedDate": "2020-12-30T22:44:08Z", "message": "weighted_target LB policy: Propagate address update to child LB policies directly, delay balancing state update upcall instead. Always return a picker and the latest balancing state when receiving new address updates."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da1212291e229228df278dd8b004b216cb5f0667", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/da1212291e229228df278dd8b004b216cb5f0667", "committedDate": "2020-12-30T22:44:42Z", "message": "Fix test breakage in cluster_impl LB policy, which instantiates real weighted_target LB instances."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3bf724f1bde09c1e441000517bb4f08ecf18150", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e3bf724f1bde09c1e441000517bb4f08ecf18150", "committedDate": "2020-12-30T22:49:39Z", "message": "Revert the change that refactors cluster_manager LB policy's test. It's irrelavant to the fix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTA3NTE4", "url": "https://github.com/grpc/grpc-java/pull/7772#pullrequestreview-562907518", "createdAt": "2021-01-06T17:36:28Z", "commit": {"oid": "e3bf724f1bde09c1e441000517bb4f08ecf18150"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNzozNjoyOFrOIPO3hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNzozNjoyOFrOIPO3hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg0MzE0MQ==", "bodyText": "I would enqueue connectivityState = newState; picker = newPicker together with tryNextPriority(). The state update should be \"atomic\". Same for other balancers.", "url": "https://github.com/grpc/grpc-java/pull/7772#discussion_r552843141", "createdAt": "2021-01-06T17:36:28Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/PriorityLoadBalancer.java", "diffHunk": "@@ -287,7 +280,12 @@ public void updateBalancingState(ConnectivityState newState, SubchannelPicker ne\n             failOverTimer.cancel();\n           }\n         }\n-        tryNextPriority(true);\n+        syncContext.execute(new Runnable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3bf724f1bde09c1e441000517bb4f08ecf18150"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1b511243c822d7dab6ef5f8b9cfdc6aeda82a3a", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/d1b511243c822d7dab6ef5f8b9cfdc6aeda82a3a", "committedDate": "2021-01-06T21:17:53Z", "message": "Make balancing state local update and propagation atomic."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMDU0OTE0", "url": "https://github.com/grpc/grpc-java/pull/7772#pullrequestreview-563054914", "createdAt": "2021-01-06T21:42:28Z", "commit": {"oid": "d1b511243c822d7dab6ef5f8b9cfdc6aeda82a3a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4716, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}