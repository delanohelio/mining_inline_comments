{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNjY3ODcy", "number": 7631, "title": "xds: implement xds_cluster_impl LB policy with drop support and circuit breaking moved into it", "bodyText": "Implementation for cluster_impl LB policy as per C2P design. This policy sits in the middle of priority LB policy and weighted_target LB policy, its major functionality is to handle drops and apply circuit breakers.\nThe idea is to move implementations of handling drops and circuit breakers from the EDS LB policy (will be split to cluster_resolver LB policy and cluster_impl LB policy) to cluster_impl LB policy.", "createdAt": "2020-11-17T19:53:04Z", "url": "https://github.com/grpc/grpc-java/pull/7631", "merged": true, "mergeCommit": {"oid": "0be913467dbdbf09abe7a8ec2a9b8de796a3c3ad"}, "closed": true, "closedAt": "2020-12-04T18:45:57Z", "author": {"login": "voidzcy"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdde_n0gH2gAyNTIyNjY3ODcyOjExMTE2NTdmOWYwZDgzNjkzNmIxNTRlM2M1NGM3Nzg3Y2RiYjQ4NGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABditjWaAFqTU0NDU5Mzc3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1111657f9f0d836936b154e3c54c7787cdbb484f", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/1111657f9f0d836936b154e3c54c7787cdbb484f", "committedDate": "2020-11-17T19:47:41Z", "message": "Move CallCounterProvider interface definition into resolver provider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1e169c772e4afedcf5a72d58c0025ae37faa17d", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e1e169c772e4afedcf5a72d58c0025ae37faa17d", "committedDate": "2020-11-17T19:49:04Z", "message": "Implement cluster_impl LB policy which is used to handle drops and circuit breaking for each prioity."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32c0aa93bf1dcea442a8a5d838735c4ffbd4dc77", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/32c0aa93bf1dcea442a8a5d838735c4ffbd4dc77", "committedDate": "2020-11-17T20:28:37Z", "message": "Add provider"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32d3d7021742d963038044fa3893eeb1516ab9f4", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/32d3d7021742d963038044fa3893eeb1516ab9f4", "committedDate": "2020-11-17T19:49:21Z", "message": "Add provider"}, "afterCommit": {"oid": "32c0aa93bf1dcea442a8a5d838735c4ffbd4dc77", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/32c0aa93bf1dcea442a8a5d838735c4ffbd4dc77", "committedDate": "2020-11-17T20:28:37Z", "message": "Add provider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8437ddd0c9c72d0b6bc4c29261e44b810ca83a3", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/a8437ddd0c9c72d0b6bc4c29261e44b810ca83a3", "committedDate": "2020-11-19T22:25:12Z", "message": "Obtain the map for circuit breaking atomics in attributes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9c5db98bdd2a9ac81b883fb57bddd84a8dde92f", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/c9c5db98bdd2a9ac81b883fb57bddd84a8dde92f", "committedDate": "2020-11-19T22:33:53Z", "message": "Gate circuit breaking feature with env var."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b88b5a92d755d298258e9d45b65b8eae6a243d79", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/b88b5a92d755d298258e9d45b65b8eae6a243d79", "committedDate": "2020-11-19T23:51:35Z", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/implement_cluster_impl_lb_policy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c40bd0c23dfc8991f96bd4084fb76cec5d1817c2", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/c40bd0c23dfc8991f96bd4084fb76cec5d1817c2", "committedDate": "2020-11-20T20:27:47Z", "message": "Delete logics of handling drops and circuit breakers in EDS LB policy."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15d5042d13ad2f87387364ed25b04fc57a33bcdd", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/15d5042d13ad2f87387364ed25b04fc57a33bcdd", "committedDate": "2020-11-20T20:32:53Z", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/implement_cluster_impl_lb_policy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "338cb0c5f3bc8567117168a1d9e2b6040af2b55d", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/338cb0c5f3bc8567117168a1d9e2b6040af2b55d", "committedDate": "2020-11-21T00:55:47Z", "message": "Fix EDS LB policy tests."}, "afterCommit": {"oid": "b40ad526a537b541b60774ff4fb9f2d982c4b11c", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/b40ad526a537b541b60774ff4fb9f2d982c4b11c", "committedDate": "2020-11-21T01:11:57Z", "message": "Fix EDS LB policy tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b40ad526a537b541b60774ff4fb9f2d982c4b11c", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/b40ad526a537b541b60774ff4fb9f2d982c4b11c", "committedDate": "2020-11-21T01:11:57Z", "message": "Fix EDS LB policy tests."}, "afterCommit": {"oid": "e993875bad7f7515bd71984df4202076ba5e9dea", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e993875bad7f7515bd71984df4202076ba5e9dea", "committedDate": "2020-11-21T07:41:32Z", "message": "Fix EDS LB policy tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e993875bad7f7515bd71984df4202076ba5e9dea", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e993875bad7f7515bd71984df4202076ba5e9dea", "committedDate": "2020-11-21T07:41:32Z", "message": "Fix EDS LB policy tests."}, "afterCommit": {"oid": "e1d517ad0c675e8ca7e7e1c8ac1f34ca22364c0d", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e1d517ad0c675e8ca7e7e1c8ac1f34ca22364c0d", "committedDate": "2020-11-22T23:42:17Z", "message": "Fix EDS LB policy tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7699fa3c465a7077e2016e7efd08f037896952d", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e7699fa3c465a7077e2016e7efd08f037896952d", "committedDate": "2020-11-23T18:54:24Z", "message": "Fix EDS LB policy tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1d517ad0c675e8ca7e7e1c8ac1f34ca22364c0d", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e1d517ad0c675e8ca7e7e1c8ac1f34ca22364c0d", "committedDate": "2020-11-22T23:42:17Z", "message": "Fix EDS LB policy tests."}, "afterCommit": {"oid": "e7699fa3c465a7077e2016e7efd08f037896952d", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e7699fa3c465a7077e2016e7efd08f037896952d", "committedDate": "2020-11-23T18:54:24Z", "message": "Fix EDS LB policy tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a982730a26d9c1d3d428399949b855d86f0310a1", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/a982730a26d9c1d3d428399949b855d86f0310a1", "committedDate": "2020-11-23T20:44:56Z", "message": "Update child policy config only after endpoints are resolved."}, "afterCommit": {"oid": "80fcf80890485bda33ddc56a88821399803eefc0", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/80fcf80890485bda33ddc56a88821399803eefc0", "committedDate": "2020-11-23T21:03:39Z", "message": "Update child policy config only after endpoints are resolved."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80fcf80890485bda33ddc56a88821399803eefc0", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/80fcf80890485bda33ddc56a88821399803eefc0", "committedDate": "2020-11-23T21:03:39Z", "message": "Update child policy config only after endpoints are resolved."}, "afterCommit": {"oid": "40464ec0597805cc51dfaed7ca4e6a5ca319c5f0", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/40464ec0597805cc51dfaed7ca4e6a5ca319c5f0", "committedDate": "2020-11-23T21:04:38Z", "message": "Update child policy config only after endpoints are resolved."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76025cf35730f116e9a1f9235e183c85a948d41a", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/76025cf35730f116e9a1f9235e183c85a948d41a", "committedDate": "2020-11-23T21:06:44Z", "message": "Update child policy config only after endpoints are resolved."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40464ec0597805cc51dfaed7ca4e6a5ca319c5f0", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/40464ec0597805cc51dfaed7ca4e6a5ca319c5f0", "committedDate": "2020-11-23T21:04:38Z", "message": "Update child policy config only after endpoints are resolved."}, "afterCommit": {"oid": "76025cf35730f116e9a1f9235e183c85a948d41a", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/76025cf35730f116e9a1f9235e183c85a948d41a", "committedDate": "2020-11-23T21:06:44Z", "message": "Update child policy config only after endpoints are resolved."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f550af197b29692404c11da797c61cdde8aa0cb", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/3f550af197b29692404c11da797c61cdde8aa0cb", "committedDate": "2020-11-24T00:51:46Z", "message": "Fix propagating config to downstream LB policies."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjMzODY0", "url": "https://github.com/grpc/grpc-java/pull/7631#pullrequestreview-541233864", "createdAt": "2020-11-30T19:41:40Z", "commit": {"oid": "3f550af197b29692404c11da797c61cdde8aa0cb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo0MTo0MFrOH8KwRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo1NjowMlrOH8LiOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MjgwNQ==", "bodyText": "Should check resolvedAddresses  != null first?", "url": "https://github.com/grpc/grpc-java/pull/7631#discussion_r532852805", "createdAt": "2020-11-30T19:41:40Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer2.java", "diffHunk": "@@ -318,27 +269,7 @@ public void run() {\n             if (lb == null) {\n               lb = lbRegistry.getProvider(PRIORITY_POLICY_NAME).newLoadBalancer(lbHelper);\n             }\n-            if (localityPickingPolicy != null && endpointPickingPolicy != null) {\n-              PriorityLbConfig config = generatePriorityLbConfig(cluster, edsServiceName,\n-                  lrsServerName, localityPickingPolicy, endpointPickingPolicy, lbRegistry,\n-                  prioritizedLocalityWeights);\n-              // TODO(chengyuanzhang): to be deleted after migrating to use XdsClient API.\n-              Attributes attributes;\n-              if (lrsServerName != null) {\n-                attributes =\n-                    resolvedAddresses.getAttributes().toBuilder()\n-                        .set(XdsAttributes.ATTR_CLUSTER_SERVICE_LOAD_STATS_STORE, loadStatsStore)\n-                        .build();\n-              } else {\n-                attributes = resolvedAddresses.getAttributes();\n-              }\n-              lb.handleResolvedAddresses(\n-                  resolvedAddresses.toBuilder()\n-                      .setAddresses(endpointAddresses)\n-                      .setAttributes(attributes)\n-                      .setLoadBalancingPolicyConfig(config)\n-                      .build());\n-            }\n+            handleResourceUpdate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f550af197b29692404c11da797c61cdde8aa0cb"}, "originalPosition": 241}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1Njk2MQ==", "bodyText": "Document what this hierarchy does?", "url": "https://github.com/grpc/grpc-java/pull/7631#discussion_r532856961", "createdAt": "2020-11-30T19:47:59Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java", "diffHunk": "@@ -0,0 +1,283 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static io.grpc.xds.XdsSubchannelPickers.BUFFER_PICKER;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import io.grpc.Attributes;\n+import io.grpc.ClientStreamTracer;\n+import io.grpc.ClientStreamTracer.StreamInfo;\n+import io.grpc.ConnectivityState;\n+import io.grpc.InternalLogId;\n+import io.grpc.LoadBalancer;\n+import io.grpc.Metadata;\n+import io.grpc.Status;\n+import io.grpc.internal.ObjectPool;\n+import io.grpc.util.ForwardingClientStreamTracer;\n+import io.grpc.util.ForwardingLoadBalancerHelper;\n+import io.grpc.xds.ClusterImplLoadBalancerProvider.ClusterImplConfig;\n+import io.grpc.xds.EnvoyProtoData.DropOverload;\n+import io.grpc.xds.LoadStatsManager.LoadStatsStore;\n+import io.grpc.xds.ThreadSafeRandom.ThreadSafeRandomImpl;\n+import io.grpc.xds.XdsLogger.XdsLogLevel;\n+import io.grpc.xds.XdsNameResolverProvider.CallCounterProvider;\n+import io.grpc.xds.XdsSubchannelPickers.ErrorPicker;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.atomic.AtomicLong;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Load balancer for cluster_impl_experimental LB policy. This LB policy is the child LB policy of\n+ * the priority_experimental LB policy and the parent LB policy of the weighted_target_experimental\n+ * LB policy in the xDS load balancing hierarchy.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f550af197b29692404c11da797c61cdde8aa0cb"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg2NTU5Mg==", "bodyText": "Is that possible maxConcurrentRequests changes from non-null to null?", "url": "https://github.com/grpc/grpc-java/pull/7631#discussion_r532865592", "createdAt": "2020-11-30T19:56:02Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java", "diffHunk": "@@ -0,0 +1,283 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static io.grpc.xds.XdsSubchannelPickers.BUFFER_PICKER;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import io.grpc.Attributes;\n+import io.grpc.ClientStreamTracer;\n+import io.grpc.ClientStreamTracer.StreamInfo;\n+import io.grpc.ConnectivityState;\n+import io.grpc.InternalLogId;\n+import io.grpc.LoadBalancer;\n+import io.grpc.Metadata;\n+import io.grpc.Status;\n+import io.grpc.internal.ObjectPool;\n+import io.grpc.util.ForwardingClientStreamTracer;\n+import io.grpc.util.ForwardingLoadBalancerHelper;\n+import io.grpc.xds.ClusterImplLoadBalancerProvider.ClusterImplConfig;\n+import io.grpc.xds.EnvoyProtoData.DropOverload;\n+import io.grpc.xds.LoadStatsManager.LoadStatsStore;\n+import io.grpc.xds.ThreadSafeRandom.ThreadSafeRandomImpl;\n+import io.grpc.xds.XdsLogger.XdsLogLevel;\n+import io.grpc.xds.XdsNameResolverProvider.CallCounterProvider;\n+import io.grpc.xds.XdsSubchannelPickers.ErrorPicker;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.atomic.AtomicLong;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Load balancer for cluster_impl_experimental LB policy. This LB policy is the child LB policy of\n+ * the priority_experimental LB policy and the parent LB policy of the weighted_target_experimental\n+ * LB policy in the xDS load balancing hierarchy.\n+ */\n+final class ClusterImplLoadBalancer extends LoadBalancer {\n+\n+  @VisibleForTesting\n+  static final long DEFAULT_PER_CLUSTER_MAX_CONCURRENT_REQUESTS = 1024L;\n+  @VisibleForTesting\n+  static boolean enableCircuitBreaking =\n+      Boolean.parseBoolean(System.getenv(\"GRPC_XDS_EXPERIMENTAL_CIRCUIT_BREAKING\"));\n+\n+  private final XdsLogger logger;\n+  private final Helper helper;\n+  private final ThreadSafeRandom random;\n+  // The following fields are effectively final.\n+  private String cluster;\n+  @Nullable\n+  private String edsServiceName;\n+  private ObjectPool<XdsClient> xdsClientPool;\n+  private XdsClient xdsClient;\n+  private CallCounterProvider callCounterProvider;\n+  private LoadStatsStore loadStatsStore;\n+  private RequestLimitingLbHelper childLbHelper;\n+  private LoadBalancer childLb;\n+\n+  ClusterImplLoadBalancer(Helper helper) {\n+    this(helper, ThreadSafeRandomImpl.instance);\n+  }\n+\n+  ClusterImplLoadBalancer(Helper helper, ThreadSafeRandom random) {\n+    this.helper = checkNotNull(helper, \"helper\");\n+    this.random = checkNotNull(random, \"random\");\n+    InternalLogId logId = InternalLogId.allocate(\"cluster-impl-lb\", helper.getAuthority());\n+    logger = XdsLogger.withLogId(logId);\n+    logger.log(XdsLogLevel.INFO, \"Created\");\n+  }\n+\n+  @Override\n+  public void handleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n+    logger.log(XdsLogLevel.DEBUG, \"Received resolution result: {0}\", resolvedAddresses);\n+    Attributes attributes = resolvedAddresses.getAttributes();\n+    if (xdsClientPool == null) {\n+      xdsClientPool = attributes.get(XdsAttributes.XDS_CLIENT_POOL);\n+      xdsClient = xdsClientPool.getObject();\n+    }\n+    if (callCounterProvider == null) {\n+      callCounterProvider = attributes.get(XdsAttributes.CALL_COUNTER_PROVIDER);\n+    }\n+    ClusterImplConfig config =\n+        (ClusterImplConfig) resolvedAddresses.getLoadBalancingPolicyConfig();\n+    if (cluster == null) {\n+      cluster = config.cluster;\n+      edsServiceName = config.edsServiceName;\n+      childLbHelper = new RequestLimitingLbHelper(\n+          callCounterProvider.getOrCreate(config.cluster, config.edsServiceName));\n+      childLb = config.childPolicy.getProvider().newLoadBalancer(childLbHelper);\n+      // Assume load report server does not change throughout cluster lifetime.\n+      if (config.lrsServerName != null) {\n+        if (config.lrsServerName.isEmpty()) {\n+          loadStatsStore = xdsClient.addClientStats(cluster, edsServiceName);\n+        } else {\n+          logger.log(XdsLogLevel.WARNING, \"Can only report load to the same management server\");\n+        }\n+      }\n+    }\n+    childLbHelper.updateDropPolicies(config.dropCategories);\n+    if (config.maxConcurrentRequests != null) {\n+      childLbHelper.updateMaxConcurrentRequests(config.maxConcurrentRequests);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f550af197b29692404c11da797c61cdde8aa0cb"}, "originalPosition": 116}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dd27869291617af8e8795e975f8d84db56f2640", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/5dd27869291617af8e8795e975f8d84db56f2640", "committedDate": "2020-12-02T19:20:02Z", "message": "Fix updating maxConcurrentRequests back to default value when the config updates so."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTkzNzc1", "url": "https://github.com/grpc/grpc-java/pull/7631#pullrequestreview-544593775", "createdAt": "2020-12-04T01:31:32Z", "commit": {"oid": "5dd27869291617af8e8795e975f8d84db56f2640"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMTozMTozMlrOH-8xuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMTozMTozMlrOH-8xuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc2OTUyOA==", "bodyText": "Well yes, it's invoked by switchingLoadBalancer.handleResolvedAddresses(). It's safe to check but that's alright.", "url": "https://github.com/grpc/grpc-java/pull/7631#discussion_r535769528", "createdAt": "2020-12-04T01:31:32Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer2.java", "diffHunk": "@@ -318,27 +269,7 @@ public void run() {\n             if (lb == null) {\n               lb = lbRegistry.getProvider(PRIORITY_POLICY_NAME).newLoadBalancer(lbHelper);\n             }\n-            if (localityPickingPolicy != null && endpointPickingPolicy != null) {\n-              PriorityLbConfig config = generatePriorityLbConfig(cluster, edsServiceName,\n-                  lrsServerName, localityPickingPolicy, endpointPickingPolicy, lbRegistry,\n-                  prioritizedLocalityWeights);\n-              // TODO(chengyuanzhang): to be deleted after migrating to use XdsClient API.\n-              Attributes attributes;\n-              if (lrsServerName != null) {\n-                attributes =\n-                    resolvedAddresses.getAttributes().toBuilder()\n-                        .set(XdsAttributes.ATTR_CLUSTER_SERVICE_LOAD_STATS_STORE, loadStatsStore)\n-                        .build();\n-              } else {\n-                attributes = resolvedAddresses.getAttributes();\n-              }\n-              lb.handleResolvedAddresses(\n-                  resolvedAddresses.toBuilder()\n-                      .setAddresses(endpointAddresses)\n-                      .setAttributes(attributes)\n-                      .setLoadBalancingPolicyConfig(config)\n-                      .build());\n-            }\n+            handleResourceUpdate();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MjgwNQ=="}, "originalCommit": {"oid": "3f550af197b29692404c11da797c61cdde8aa0cb"}, "originalPosition": 241}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3996, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}