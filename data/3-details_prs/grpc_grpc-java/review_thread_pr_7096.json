{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjU0MjU4", "number": 7096, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTo1MjoyNlrOEDG30w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDo0NzozNVrOEDIdPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjkzNzc5OnYy", "diffSide": "LEFT", "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTo1MjoyNlrOGf-VLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMjozNTozM1rOGf_KZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4MDI2OQ==", "bodyText": "BTW, this was also a bug. You should pass in the  ChildHelper instance of the LocalityLbInfo instead of just helper. It's lucky that ChildHelper's SynchronizationContext is just a delegation to helper's, so it did not cause problem. But this is wrong.\nArgument-passing, object ownership, lifecycle, etc. A lot of things in LocalityStore are messy. I hate this class, really. It might still contain unnoticed bug. Hope we can refactor to the LB structure and get rid of this early.", "url": "https://github.com/grpc/grpc-java/pull/7096#discussion_r436180269", "createdAt": "2020-06-05T21:52:26Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "diffHunk": "@@ -202,56 +198,20 @@ public void reset() {\n         localityMap.get(locality).shutdown();\n       }\n       localityMap.clear();\n-\n-      for (Locality locality : localities) {\n-        loadStatsStore.removeLocality(locality);\n-      }\n-      localities = ImmutableSet.of();\n-\n       priorityManager.reset();\n     }\n \n     @Override\n     public void updateLocalityStore(final Map<Locality, LocalityLbEndpoints> localityInfoMap) {\n-\n       Set<Locality> newLocalities = localityInfoMap.keySet();\n       // TODO: put endPointWeights into attributes for WRR.\n       for (Locality locality : newLocalities) {\n         if (localityMap.containsKey(locality)) {\n-          LocalityLbInfo localityLbInfo = localityMap.get(locality);\n-          LocalityLbEndpoints localityLbEndpoints = localityInfoMap.get(locality);\n-          handleEagsOnChildBalancer(helper, localityLbInfo, localityLbEndpoints, locality);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1802e4e73a725a40f2296fe3b9c63824d58b7719"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4Njk0MQ==", "bodyText": "It should not pass any helper now. It should pass a SynchronizationContext. Helper's SynchronizationContext should guarantee it works properly with load balancer's synchronization.", "url": "https://github.com/grpc/grpc-java/pull/7096#discussion_r436186941", "createdAt": "2020-06-05T22:10:15Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "diffHunk": "@@ -202,56 +198,20 @@ public void reset() {\n         localityMap.get(locality).shutdown();\n       }\n       localityMap.clear();\n-\n-      for (Locality locality : localities) {\n-        loadStatsStore.removeLocality(locality);\n-      }\n-      localities = ImmutableSet.of();\n-\n       priorityManager.reset();\n     }\n \n     @Override\n     public void updateLocalityStore(final Map<Locality, LocalityLbEndpoints> localityInfoMap) {\n-\n       Set<Locality> newLocalities = localityInfoMap.keySet();\n       // TODO: put endPointWeights into attributes for WRR.\n       for (Locality locality : newLocalities) {\n         if (localityMap.containsKey(locality)) {\n-          LocalityLbInfo localityLbInfo = localityMap.get(locality);\n-          LocalityLbEndpoints localityLbEndpoints = localityInfoMap.get(locality);\n-          handleEagsOnChildBalancer(helper, localityLbInfo, localityLbEndpoints, locality);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4MDI2OQ=="}, "originalCommit": {"oid": "1802e4e73a725a40f2296fe3b9c63824d58b7719"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4NzU0OQ==", "bodyText": "A lot of argument-passing, object ownership, lifecycle issues are messed up by load stats. Spec of both EDS and load reporting are constantly changing, it's just unfortunate.", "url": "https://github.com/grpc/grpc-java/pull/7096#discussion_r436187549", "createdAt": "2020-06-05T22:12:22Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "diffHunk": "@@ -202,56 +198,20 @@ public void reset() {\n         localityMap.get(locality).shutdown();\n       }\n       localityMap.clear();\n-\n-      for (Locality locality : localities) {\n-        loadStatsStore.removeLocality(locality);\n-      }\n-      localities = ImmutableSet.of();\n-\n       priorityManager.reset();\n     }\n \n     @Override\n     public void updateLocalityStore(final Map<Locality, LocalityLbEndpoints> localityInfoMap) {\n-\n       Set<Locality> newLocalities = localityInfoMap.keySet();\n       // TODO: put endPointWeights into attributes for WRR.\n       for (Locality locality : newLocalities) {\n         if (localityMap.containsKey(locality)) {\n-          LocalityLbInfo localityLbInfo = localityMap.get(locality);\n-          LocalityLbEndpoints localityLbEndpoints = localityInfoMap.get(locality);\n-          handleEagsOnChildBalancer(helper, localityLbInfo, localityLbEndpoints, locality);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4MDI2OQ=="}, "originalCommit": {"oid": "1802e4e73a725a40f2296fe3b9c63824d58b7719"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5Mzg5NA==", "bodyText": "It should not pass any helper now. It should pass a SynchronizationContext. Helper's SynchronizationContext should guarantee it works properly with load balancer's synchronization.\n\nI refactored it to not do that.\nThings were just working fortunately correct. But the idea and the way it was coded is wrong.", "url": "https://github.com/grpc/grpc-java/pull/7096#discussion_r436193894", "createdAt": "2020-06-05T22:35:33Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "diffHunk": "@@ -202,56 +198,20 @@ public void reset() {\n         localityMap.get(locality).shutdown();\n       }\n       localityMap.clear();\n-\n-      for (Locality locality : localities) {\n-        loadStatsStore.removeLocality(locality);\n-      }\n-      localities = ImmutableSet.of();\n-\n       priorityManager.reset();\n     }\n \n     @Override\n     public void updateLocalityStore(final Map<Locality, LocalityLbEndpoints> localityInfoMap) {\n-\n       Set<Locality> newLocalities = localityInfoMap.keySet();\n       // TODO: put endPointWeights into attributes for WRR.\n       for (Locality locality : newLocalities) {\n         if (localityMap.containsKey(locality)) {\n-          LocalityLbInfo localityLbInfo = localityMap.get(locality);\n-          LocalityLbEndpoints localityLbEndpoints = localityInfoMap.get(locality);\n-          handleEagsOnChildBalancer(helper, localityLbInfo, localityLbEndpoints, locality);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4MDI2OQ=="}, "originalCommit": {"oid": "1802e4e73a725a40f2296fe3b9c63824d58b7719"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzE5NzQzOnYy", "diffSide": "LEFT", "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDo0NzozNVrOGgAydQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMToxOTozM1rOGgBAgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMDUzMw==", "bodyText": "nit: All diffs except these 5 lines in ChildHelper class are unrelated.", "url": "https://github.com/grpc/grpc-java/pull/7096#discussion_r436220533", "createdAt": "2020-06-06T00:47:35Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "diffHunk": "@@ -375,73 +361,62 @@ void reactivate() {\n       boolean isDeactivated() {\n         return delayedDeletionTimer != null;\n       }\n-    }\n-\n-    class ChildHelper extends ForwardingLoadBalancerHelper {\n \n-      private final OrcaReportingHelperWrapper orcaReportingHelperWrapper;\n+      class ChildHelper extends ForwardingLoadBalancerHelper {\n \n-      private SubchannelPicker currentChildPicker = XdsSubchannelPickers.BUFFER_PICKER;\n-      private ConnectivityState currentChildState = CONNECTING;\n+        private final OrcaReportingHelperWrapper orcaReportingHelperWrapper;\n+        private SubchannelPicker currentChildPicker = XdsSubchannelPickers.BUFFER_PICKER;\n+        private ConnectivityState currentChildState = CONNECTING;\n \n-      ChildHelper(final Locality locality, final ClientLoadCounter counter,\n-          OrcaOobUtil orcaOobUtil) {\n-        checkNotNull(locality, \"locality\");\n-        checkNotNull(counter, \"counter\");\n-        checkNotNull(orcaOobUtil, \"orcaOobUtil\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad31d85b3dfb3b7c5fff75d0c5d99aaf68588d22"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMTAwMQ==", "bodyText": "Now ChildHelper is an inner class of LocalityLbInfo, these fields no longer need to be passed in. Can just directly access, without confusion of which instance they are referring to.", "url": "https://github.com/grpc/grpc-java/pull/7096#discussion_r436221001", "createdAt": "2020-06-06T00:51:29Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "diffHunk": "@@ -375,73 +361,62 @@ void reactivate() {\n       boolean isDeactivated() {\n         return delayedDeletionTimer != null;\n       }\n-    }\n-\n-    class ChildHelper extends ForwardingLoadBalancerHelper {\n \n-      private final OrcaReportingHelperWrapper orcaReportingHelperWrapper;\n+      class ChildHelper extends ForwardingLoadBalancerHelper {\n \n-      private SubchannelPicker currentChildPicker = XdsSubchannelPickers.BUFFER_PICKER;\n-      private ConnectivityState currentChildState = CONNECTING;\n+        private final OrcaReportingHelperWrapper orcaReportingHelperWrapper;\n+        private SubchannelPicker currentChildPicker = XdsSubchannelPickers.BUFFER_PICKER;\n+        private ConnectivityState currentChildState = CONNECTING;\n \n-      ChildHelper(final Locality locality, final ClientLoadCounter counter,\n-          OrcaOobUtil orcaOobUtil) {\n-        checkNotNull(locality, \"locality\");\n-        checkNotNull(counter, \"counter\");\n-        checkNotNull(orcaOobUtil, \"orcaOobUtil\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMDUzMw=="}, "originalCommit": {"oid": "ad31d85b3dfb3b7c5fff75d0c5d99aaf68588d22"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyNDEzMA==", "bodyText": "I mean diffs other than these line.", "url": "https://github.com/grpc/grpc-java/pull/7096#discussion_r436224130", "createdAt": "2020-06-06T01:19:33Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "diffHunk": "@@ -375,73 +361,62 @@ void reactivate() {\n       boolean isDeactivated() {\n         return delayedDeletionTimer != null;\n       }\n-    }\n-\n-    class ChildHelper extends ForwardingLoadBalancerHelper {\n \n-      private final OrcaReportingHelperWrapper orcaReportingHelperWrapper;\n+      class ChildHelper extends ForwardingLoadBalancerHelper {\n \n-      private SubchannelPicker currentChildPicker = XdsSubchannelPickers.BUFFER_PICKER;\n-      private ConnectivityState currentChildState = CONNECTING;\n+        private final OrcaReportingHelperWrapper orcaReportingHelperWrapper;\n+        private SubchannelPicker currentChildPicker = XdsSubchannelPickers.BUFFER_PICKER;\n+        private ConnectivityState currentChildState = CONNECTING;\n \n-      ChildHelper(final Locality locality, final ClientLoadCounter counter,\n-          OrcaOobUtil orcaOobUtil) {\n-        checkNotNull(locality, \"locality\");\n-        checkNotNull(counter, \"counter\");\n-        checkNotNull(orcaOobUtil, \"orcaOobUtil\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMDUzMw=="}, "originalCommit": {"oid": "ad31d85b3dfb3b7c5fff75d0c5d99aaf68588d22"}, "originalPosition": 156}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2721, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}