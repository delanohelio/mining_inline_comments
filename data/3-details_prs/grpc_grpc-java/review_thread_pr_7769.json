{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NjcyMDEy", "number": 7769, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxODoyNToxM1rOFL2w6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxODoyNToxM1rOFL2w6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3OTc1OTE1OnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/ClusterResolverLoadBalancer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxODoyNToxM1rOIPRjig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxOTo0NDo1NFrOIPT9wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg4NzE3OA==", "bodyText": "Also call delegate. refreshNameResolution()?", "url": "https://github.com/grpc/grpc-java/pull/7769#discussion_r552887178", "createdAt": "2021-01-06T18:25:13Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/ClusterResolverLoadBalancer.java", "diffHunk": "@@ -273,6 +275,31 @@ private void handleEndpointResolutionError() {\n       }\n     }\n \n+    /**\n+     * Wires re-resolution requests from downstream LB policies with DNS resolver.\n+     */\n+    private final class RefreshableHelper extends ForwardingLoadBalancerHelper {\n+      private final Helper delegate;\n+\n+      private RefreshableHelper(Helper delegate) {\n+        this.delegate = checkNotNull(delegate, \"delegate\");\n+      }\n+\n+      @Override\n+      public void refreshNameResolution() {\n+        for (ClusterState state : clusterStates.values()) {\n+          if (state instanceof LogicalDnsClusterState) {\n+            ((LogicalDnsClusterState) state).refresh();\n+          }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae013f99dfdc75b9d00c8b8803ba6fd3f0cfbc"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjkyNjY1OA==", "bodyText": "Hmm... I don't think so. We can think of this wrap as a complete override instead of an extension.\nFrom the high-level design view, we shouldn't. It does nothing even if we call delegate.refreshNameResolution() as this is how xDS works (async resolver). Previously we did not explicitly override this API because to bypass re-resolution requests to the xDS resolver  since we know it does nothing. Not bother write code to turn some operation into no-op given that it's already a no-op. Same would apply here, not bother explicitly add operations that known to be no-op.", "url": "https://github.com/grpc/grpc-java/pull/7769#discussion_r552926658", "createdAt": "2021-01-06T19:44:54Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/ClusterResolverLoadBalancer.java", "diffHunk": "@@ -273,6 +275,31 @@ private void handleEndpointResolutionError() {\n       }\n     }\n \n+    /**\n+     * Wires re-resolution requests from downstream LB policies with DNS resolver.\n+     */\n+    private final class RefreshableHelper extends ForwardingLoadBalancerHelper {\n+      private final Helper delegate;\n+\n+      private RefreshableHelper(Helper delegate) {\n+        this.delegate = checkNotNull(delegate, \"delegate\");\n+      }\n+\n+      @Override\n+      public void refreshNameResolution() {\n+        for (ClusterState state : clusterStates.values()) {\n+          if (state instanceof LogicalDnsClusterState) {\n+            ((LogicalDnsClusterState) state).refresh();\n+          }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg4NzE3OA=="}, "originalCommit": {"oid": "77ae013f99dfdc75b9d00c8b8803ba6fd3f0cfbc"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2961, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}