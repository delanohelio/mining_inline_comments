{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3ODEyNjk3", "number": 6895, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMjo0MFrODx7XRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjozOTo0OFrODx7wyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5NDMxOnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMjo0MFrOGFrISA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNToxMVrOGGH9Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjY5Ng==", "bodyText": "endpointPickingPolicy is not null", "url": "https://github.com/grpc/grpc-java/pull/6895#discussion_r408602696", "createdAt": "2020-04-15T06:12:40Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -108,27 +108,26 @@\n   public void handleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n     logger.log(XdsLogLevel.DEBUG, \"Received resolution result: {0}\", resolvedAddresses);\n     Object lbConfig = resolvedAddresses.getLoadBalancingPolicyConfig();\n-    if (lbConfig == null) {\n-      edsLbHelper.updateBalancingState(\n-          TRANSIENT_FAILURE,\n-          new ErrorPicker(Status.UNAVAILABLE.withDescription(\"Missing EDS lb config\")));\n-      return;\n-    }\n-    XdsConfig newXdsConfig = (XdsConfig) lbConfig;\n+    checkNotNull(lbConfig, \"missing EDS lb config\");\n+    EdsConfig newEdsConfig = (EdsConfig) lbConfig;\n     if (logger.isLoggable(XdsLogLevel.INFO)) {\n       logger.log(\n           XdsLogLevel.INFO,\n-          \"Received EDS lb config: cluster={0}, child_policy={1}, fallback_policy={2}, \"\n-              + \"eds_service_name={3}, report_load={4}\",\n-          newXdsConfig.cluster,\n-          newXdsConfig.endpointPickingPolicy != null\n-              ? newXdsConfig.endpointPickingPolicy.getProvider().getPolicyName() : \"\",\n-          newXdsConfig.fallbackPolicy != null\n-              ? newXdsConfig.fallbackPolicy.getProvider().getPolicyName() : \"\",\n-          newXdsConfig.edsServiceName,\n-          newXdsConfig.lrsServerName != null);\n+          \"Received EDS lb config: cluster={0}, child_policy={1}, \"\n+              + \"eds_service_name={2}, report_load={3}\",\n+          newEdsConfig.clusterName,\n+          newEdsConfig.endpointPickingPolicy != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e890c201b858b6b02d917cffa884d8659dd5356"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NTAzNA==", "bodyText": "Done.", "url": "https://github.com/grpc/grpc-java/pull/6895#discussion_r409075034", "createdAt": "2020-04-15T19:15:11Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -108,27 +108,26 @@\n   public void handleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n     logger.log(XdsLogLevel.DEBUG, \"Received resolution result: {0}\", resolvedAddresses);\n     Object lbConfig = resolvedAddresses.getLoadBalancingPolicyConfig();\n-    if (lbConfig == null) {\n-      edsLbHelper.updateBalancingState(\n-          TRANSIENT_FAILURE,\n-          new ErrorPicker(Status.UNAVAILABLE.withDescription(\"Missing EDS lb config\")));\n-      return;\n-    }\n-    XdsConfig newXdsConfig = (XdsConfig) lbConfig;\n+    checkNotNull(lbConfig, \"missing EDS lb config\");\n+    EdsConfig newEdsConfig = (EdsConfig) lbConfig;\n     if (logger.isLoggable(XdsLogLevel.INFO)) {\n       logger.log(\n           XdsLogLevel.INFO,\n-          \"Received EDS lb config: cluster={0}, child_policy={1}, fallback_policy={2}, \"\n-              + \"eds_service_name={3}, report_load={4}\",\n-          newXdsConfig.cluster,\n-          newXdsConfig.endpointPickingPolicy != null\n-              ? newXdsConfig.endpointPickingPolicy.getProvider().getPolicyName() : \"\",\n-          newXdsConfig.fallbackPolicy != null\n-              ? newXdsConfig.fallbackPolicy.getProvider().getPolicyName() : \"\",\n-          newXdsConfig.edsServiceName,\n-          newXdsConfig.lrsServerName != null);\n+          \"Received EDS lb config: cluster={0}, child_policy={1}, \"\n+              + \"eds_service_name={2}, report_load={3}\",\n+          newEdsConfig.clusterName,\n+          newEdsConfig.endpointPickingPolicy != null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjY5Ng=="}, "originalCommit": {"oid": "5e890c201b858b6b02d917cffa884d8659dd5356"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjg0MjYzOnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/XdsLoadBalancer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjozMzowNVrOGFrlSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNTowN1rOGGH9MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYxMDEyMw==", "bodyText": "nit: This field is only used in one place, and can be inlined with helper.getAuthority() there. No need to check nullness of  helper's authority.", "url": "https://github.com/grpc/grpc-java/pull/6895#discussion_r408610123", "createdAt": "2020-04-15T06:33:05Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsLoadBalancer.java", "diffHunk": "@@ -91,7 +96,8 @@ public void onAllDrop() {\n       Helper helper,\n       PrimaryLbFactory primaryLbFactory,\n       LoadBalancer.Factory fallbackLbFactory) {\n-    this.helper = helper;\n+    this.helper = checkNotNull(helper, \"helper\");\n+    authority = checkNotNull(helper.getAuthority(), \"authority\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e890c201b858b6b02d917cffa884d8659dd5356"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NDk5Mw==", "bodyText": "Done.", "url": "https://github.com/grpc/grpc-java/pull/6895#discussion_r409074993", "createdAt": "2020-04-15T19:15:07Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/XdsLoadBalancer.java", "diffHunk": "@@ -91,7 +96,8 @@ public void onAllDrop() {\n       Helper helper,\n       PrimaryLbFactory primaryLbFactory,\n       LoadBalancer.Factory fallbackLbFactory) {\n-    this.helper = helper;\n+    this.helper = checkNotNull(helper, \"helper\");\n+    authority = checkNotNull(helper.getAuthority(), \"authority\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYxMDEyMw=="}, "originalCommit": {"oid": "5e890c201b858b6b02d917cffa884d8659dd5356"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjg1OTYxOnYy", "diffSide": "LEFT", "path": "xds/src/main/java/io/grpc/xds/XdsLoadBalancerProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjozOTo0OFrOGFrvWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODoxOTozNlrOGGF9eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYxMjY5Nw==", "bodyText": "Why change this behavior? If childPolicyConfigs  is not empty but does not include any registered policy, it should use round robin instead of return a ConfigOrError.", "url": "https://github.com/grpc/grpc-java/pull/6895#discussion_r408612697", "createdAt": "2020-04-15T06:39:48Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsLoadBalancerProvider.java", "diffHunk": "@@ -77,32 +77,24 @@ public ConfigOrError parseLoadBalancingPolicyConfig(\n   static ConfigOrError parseLoadBalancingConfigPolicy(\n       Map<String, ?> rawLoadBalancingPolicyConfig, LoadBalancerRegistry registry) {\n     try {\n-      String cluster = JsonUtil.getString(rawLoadBalancingPolicyConfig, \"cluster\");\n-\n       LbConfig roundRobinConfig = new LbConfig(\"round_robin\", ImmutableMap.<String, Object>of());\n-      List<LbConfig> endpointPickingConfigs = ServiceConfigUtil.unwrapLoadBalancingConfigList(\n-          JsonUtil.getListOfObjects(rawLoadBalancingPolicyConfig, \"endpointPickingPolicy\"));\n-      if (endpointPickingConfigs == null) {\n-        endpointPickingConfigs = new ArrayList<>(1);\n-      } else {\n-        endpointPickingConfigs = new ArrayList<>(endpointPickingConfigs);\n+      List<LbConfig> childPolicyConfigs = ServiceConfigUtil.unwrapLoadBalancingConfigList(\n+          JsonUtil.getListOfObjects(rawLoadBalancingPolicyConfig, \"childPolicy\"));\n+      if (childPolicyConfigs == null || childPolicyConfigs.isEmpty()) {\n+        childPolicyConfigs = Collections.singletonList(roundRobinConfig);\n       }\n-      endpointPickingConfigs.add(roundRobinConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e890c201b858b6b02d917cffa884d8659dd5356"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0MjI5Ng==", "bodyText": "Confirmed with Mark the behavior change is the correct behavior.", "url": "https://github.com/grpc/grpc-java/pull/6895#discussion_r409042296", "createdAt": "2020-04-15T18:19:36Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/XdsLoadBalancerProvider.java", "diffHunk": "@@ -77,32 +77,24 @@ public ConfigOrError parseLoadBalancingPolicyConfig(\n   static ConfigOrError parseLoadBalancingConfigPolicy(\n       Map<String, ?> rawLoadBalancingPolicyConfig, LoadBalancerRegistry registry) {\n     try {\n-      String cluster = JsonUtil.getString(rawLoadBalancingPolicyConfig, \"cluster\");\n-\n       LbConfig roundRobinConfig = new LbConfig(\"round_robin\", ImmutableMap.<String, Object>of());\n-      List<LbConfig> endpointPickingConfigs = ServiceConfigUtil.unwrapLoadBalancingConfigList(\n-          JsonUtil.getListOfObjects(rawLoadBalancingPolicyConfig, \"endpointPickingPolicy\"));\n-      if (endpointPickingConfigs == null) {\n-        endpointPickingConfigs = new ArrayList<>(1);\n-      } else {\n-        endpointPickingConfigs = new ArrayList<>(endpointPickingConfigs);\n+      List<LbConfig> childPolicyConfigs = ServiceConfigUtil.unwrapLoadBalancingConfigList(\n+          JsonUtil.getListOfObjects(rawLoadBalancingPolicyConfig, \"childPolicy\"));\n+      if (childPolicyConfigs == null || childPolicyConfigs.isEmpty()) {\n+        childPolicyConfigs = Collections.singletonList(roundRobinConfig);\n       }\n-      endpointPickingConfigs.add(roundRobinConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYxMjY5Nw=="}, "originalCommit": {"oid": "5e890c201b858b6b02d917cffa884d8659dd5356"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2772, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}