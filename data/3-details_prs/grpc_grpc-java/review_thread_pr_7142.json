{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NzYyMzcy", "number": 7142, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToxMTowNlrOEG6gPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMTo0ODoxNlrOEG7H5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njg1NDM3OnYy", "diffSide": "RIGHT", "path": "rls/src/main/java/io/grpc/rls/CachingRlsLbClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToxMTowNlrOGmAWOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMTozOToxNFrOGmBHmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwNDc2MQ==", "bodyText": "You probably want to make system property more \"static\" to your program. That is, the system property should be read when your code is loaded instead of when this method is executed.", "url": "https://github.com/grpc/grpc-java/pull/7142#discussion_r442504761", "createdAt": "2020-06-18T21:11:06Z", "author": {"login": "voidzcy"}, "path": "rls/src/main/java/io/grpc/rls/CachingRlsLbClient.java", "diffHunk": "@@ -137,6 +152,23 @@ private CachingRlsLbClient(Builder builder) {\n             childLbHelperProvider, new BackoffRefreshListener());\n   }\n \n+  private static boolean isOobChannelDirectpathEnabled() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e695137cabe45b2e89ac2706f8b9f871f77acdc"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxNzQwMQ==", "bodyText": "done. PTAL", "url": "https://github.com/grpc/grpc-java/pull/7142#discussion_r442517401", "createdAt": "2020-06-18T21:39:14Z", "author": {"login": "creamsoup"}, "path": "rls/src/main/java/io/grpc/rls/CachingRlsLbClient.java", "diffHunk": "@@ -137,6 +152,23 @@ private CachingRlsLbClient(Builder builder) {\n             childLbHelperProvider, new BackoffRefreshListener());\n   }\n \n+  private static boolean isOobChannelDirectpathEnabled() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwNDc2MQ=="}, "originalCommit": {"oid": "6e695137cabe45b2e89ac2706f8b9f871f77acdc"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njk1NTkxOnYy", "diffSide": "RIGHT", "path": "rls/src/test/java/io/grpc/rls/CachingRlsLbClientTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMTo0ODoxNlrOGmBV3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMDoyNDoyMlrOGmEQLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMTA1NQ==", "bodyText": "I think your code does not call this method, so no need to override.", "url": "https://github.com/grpc/grpc-java/pull/7142#discussion_r442521055", "createdAt": "2020-06-18T21:48:16Z", "author": {"login": "dapengzhang0"}, "path": "rls/src/test/java/io/grpc/rls/CachingRlsLbClientTest.java", "diffHunk": "@@ -482,7 +488,12 @@ public ManagedChannel createResolvingOobChannel(String target) {\n       } catch (IOException e) {\n         throw new RuntimeException(\"cannot create server: \" + target, e);\n       }\n-      return InProcessChannelBuilder.forName(target).directExecutor().build();\n+      return InProcessChannelBuilder.forName(target).directExecutor();\n+    }\n+\n+    @Override\n+    public ManagedChannel createResolvingOobChannel(String target) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bc3a8ff2dac9901276a761dbb7b0e1f1d6491b5"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2ODc0OA==", "bodyText": "fixed. PTAL", "url": "https://github.com/grpc/grpc-java/pull/7142#discussion_r442568748", "createdAt": "2020-06-19T00:24:22Z", "author": {"login": "creamsoup"}, "path": "rls/src/test/java/io/grpc/rls/CachingRlsLbClientTest.java", "diffHunk": "@@ -482,7 +488,12 @@ public ManagedChannel createResolvingOobChannel(String target) {\n       } catch (IOException e) {\n         throw new RuntimeException(\"cannot create server: \" + target, e);\n       }\n-      return InProcessChannelBuilder.forName(target).directExecutor().build();\n+      return InProcessChannelBuilder.forName(target).directExecutor();\n+    }\n+\n+    @Override\n+    public ManagedChannel createResolvingOobChannel(String target) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMTA1NQ=="}, "originalCommit": {"oid": "1bc3a8ff2dac9901276a761dbb7b0e1f1d6491b5"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2555, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}