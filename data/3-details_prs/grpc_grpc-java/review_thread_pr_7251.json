{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDkxMTgz", "number": 7251, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoyNzozMlrOESlIcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoyNzozMlrOESlIcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTE4MTkzOnYy", "diffSide": "RIGHT", "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "isResolved": false, "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoyNzozMlrOG31ygQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDoyNzoyMFrOG4PVQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ==", "bodyText": "Why still verify the last route being a \"default route\"? The only business logic for asserting the last route has been deleted.", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461206145", "createdAt": "2020-07-27T22:27:32Z", "author": {"login": "voidzcy"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyMTY4OQ==", "bodyText": "Reverted.", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461221689", "createdAt": "2020-07-27T23:10:14Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyNjM3MA==", "bodyText": "If routing is always enabled, shouldn't the resolver always generate a load config that always picks xds-routing as the the top-most policy (even if there is only one route), instead of maintaining separate code paths like now?", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461226370", "createdAt": "2020-07-27T23:24:12Z", "author": {"login": "voidzcy"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyODY4Ng==", "bodyText": "According to the design, even if routing is always enabled, it still generates cds policy as the top-most policy if there is only a single route and that route is a cluster. @menghanl Is that for optimization purpose?", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461228686", "createdAt": "2020-07-27T23:31:34Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzMTYyOQ==", "bodyText": "IMO, that would be an overkill optimization. Or it doesn't even optimize anything, negligibly minimum amount. While we need to maintain multiple code paths, the amount of unnecessary code complexity it introduces is much more significant.\nI am approving for the env variable change for now.", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461231629", "createdAt": "2020-07-27T23:40:55Z", "author": {"login": "voidzcy"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzMzY5NA==", "bodyText": "In both Java and Go, top level should always be xds_routing, because there's no subchannel pool, and switching balancer would cause recreating TCP connections.\nAnd, this is going to change after route_actions.", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461233694", "createdAt": "2020-07-27T23:47:09Z", "author": {"login": "menghanl"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzMzc0Ng==", "bodyText": "We will change to cluster-manager-lb policy anyway, and that problem will be gone.", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461233746", "createdAt": "2020-07-27T23:47:18Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzNDcwMg==", "bodyText": "In both Java and Go, top level should always be xds_routing\n\nIs the second level always weighted_target for the same reason?", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461234702", "createdAt": "2020-07-27T23:50:21Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzNzU0OA==", "bodyText": "Yes. For the same reason.", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461237548", "createdAt": "2020-07-27T23:59:14Z", "author": {"login": "menghanl"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzODI4Mg==", "bodyText": "Is the second level always weighted_target for the same reason?\n\n\n\nYes. For the same reason.\n\nIf the second level is always weighted_target, then the gRPF seems also out of date.", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461238282", "createdAt": "2020-07-28T00:01:34Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTI5Mg==", "bodyText": "What about c-core? @markdroth I think c-core has subchannel pool so it's free to have any level structure, but isn't that code path complex?", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461239292", "createdAt": "2020-07-28T00:04:45Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI1NTgwOQ==", "bodyText": "Right, the action section in the gRFC does seem out of date. I will update.", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461255809", "createdAt": "2020-07-28T01:00:38Z", "author": {"login": "menghanl"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI1NzY3Nw==", "bodyText": "They will all be moved into ConfigSelector. The load balancing config returned to the channel by resolver will no longer contain routing and weighted_target policies. The gRFC is just for the time we were on the stage of designing traffic splitting and routing. It become obsolete nowadays. Maybe it would be a good idea to combine it with RouteAction's gRFC.", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461257677", "createdAt": "2020-07-28T01:07:39Z", "author": {"login": "voidzcy"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYyNDY0MQ==", "bodyText": "C-core could have implemented the optimization of directly using the CDS LB policy, but it looks like we didn't actually do so.  We will always configure the xds_routing policy as the top-level policy, even if there is only one route.\nIn any case, as Chengyuan mentioned, this doesn't really matter very much anymore, since we're going to move all of this code into the ConfigSelector as part of implementing the RouteAction design.", "url": "https://github.com/grpc/grpc-java/pull/7251#discussion_r461624641", "createdAt": "2020-07-28T14:27:20Z", "author": {"login": "markdroth"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -492,7 +491,7 @@ public void resolveVirtualHostInLdsResponse() {\n \n     ArgumentCaptor<ConfigUpdate> configUpdateCaptor = ArgumentCaptor.forClass(null);\n     verify(configWatcher).onConfigChanged(configUpdateCaptor.capture());\n-    assertConfigUpdateContainsSingleClusterRoute(\n+    assertConfigUpdateContainsDefaultClusterRoute(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjE0NQ=="}, "originalCommit": {"oid": "150b74f5e3eeea63c35b41ef3c5078b3d8b80c0e"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2630, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}