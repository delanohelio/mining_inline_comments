{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDA3OTQ0", "number": 7131, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowNzowNVrOEGB-zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowNzowNVrOEGB-zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzU5Mzc1OnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/internal/sds/ServerSslContextProviderFactory.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowNzowNVrOGklCsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDowNTo0MFrOGlVeSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwODgxOQ==", "bodyText": "DownstreamTlsContext.getCommonTlsContext() is not marked @Nullable. what happens if getCommonTlsContext is a default instance?", "url": "https://github.com/grpc/grpc-java/pull/7131#discussion_r441008819", "createdAt": "2020-06-16T17:07:05Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/ServerSslContextProviderFactory.java", "diffHunk": "@@ -35,8 +34,8 @@\n   public SslContextProvider createSslContextProvider(\n       DownstreamTlsContext downstreamTlsContext) {\n     checkNotNull(downstreamTlsContext, \"downstreamTlsContext\");\n-    checkArgument(\n-        downstreamTlsContext.hasCommonTlsContext(),\n+    checkNotNull(\n+        downstreamTlsContext.getCommonTlsContext(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec3dd8d0aa3dc8e9258aee095cb48e8546c286d5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE5MjYxMQ==", "bodyText": "This is an unlikely scenario or an error in the control plane (for sending faulty Listener data to us). So a Listener has filter-chains and a filter-chain with a \"tls\" named transport-socket has the DownstreamTlsContext payload. For the scenario you describe to occur, the \"tls\" named transport-socket should have a default-instance DownstreamTlsContext and/or that DownstreamTlsContext should have a default-instance CommonTlsContext. If the transport-socket is not going to be TLS why create the \"tls\" named transport socket?\nIn any case let me look at the code and do a quick check to ensure default-instances are handled properly.", "url": "https://github.com/grpc/grpc-java/pull/7131#discussion_r441192611", "createdAt": "2020-06-16T23:13:25Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/ServerSslContextProviderFactory.java", "diffHunk": "@@ -35,8 +34,8 @@\n   public SslContextProvider createSslContextProvider(\n       DownstreamTlsContext downstreamTlsContext) {\n     checkNotNull(downstreamTlsContext, \"downstreamTlsContext\");\n-    checkArgument(\n-        downstreamTlsContext.hasCommonTlsContext(),\n+    checkNotNull(\n+        downstreamTlsContext.getCommonTlsContext(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwODgxOQ=="}, "originalCommit": {"oid": "ec3dd8d0aa3dc8e9258aee095cb48e8546c286d5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIxMjgwNg==", "bodyText": "Okay, so I ran some tests and default-instances do result into exceptions (in SdsProtocolNegotiators.ServerSdsHandler). What I am planning to do is to handle these properly in SdsProtocolNegotiators.ServerSdsHandler (as well as SdsProtocolNegotiators.ClientSdsHandler) but that will be a separate PR (it can be opened in parallel so you can see it).", "url": "https://github.com/grpc/grpc-java/pull/7131#discussion_r441212806", "createdAt": "2020-06-17T00:24:15Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/ServerSslContextProviderFactory.java", "diffHunk": "@@ -35,8 +34,8 @@\n   public SslContextProvider createSslContextProvider(\n       DownstreamTlsContext downstreamTlsContext) {\n     checkNotNull(downstreamTlsContext, \"downstreamTlsContext\");\n-    checkArgument(\n-        downstreamTlsContext.hasCommonTlsContext(),\n+    checkNotNull(\n+        downstreamTlsContext.getCommonTlsContext(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwODgxOQ=="}, "originalCommit": {"oid": "ec3dd8d0aa3dc8e9258aee095cb48e8546c286d5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4NDE3Mw==", "bodyText": "My other changes depend on changes in this PR, so I will make them once this is done. Works?", "url": "https://github.com/grpc/grpc-java/pull/7131#discussion_r441284173", "createdAt": "2020-06-17T05:11:52Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/ServerSslContextProviderFactory.java", "diffHunk": "@@ -35,8 +34,8 @@\n   public SslContextProvider createSslContextProvider(\n       DownstreamTlsContext downstreamTlsContext) {\n     checkNotNull(downstreamTlsContext, \"downstreamTlsContext\");\n-    checkArgument(\n-        downstreamTlsContext.hasCommonTlsContext(),\n+    checkNotNull(\n+        downstreamTlsContext.getCommonTlsContext(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwODgxOQ=="}, "originalCommit": {"oid": "ec3dd8d0aa3dc8e9258aee095cb48e8546c286d5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3Mzk4NA==", "bodyText": "sure.", "url": "https://github.com/grpc/grpc-java/pull/7131#discussion_r441673984", "createdAt": "2020-06-17T16:29:05Z", "author": {"login": "creamsoup"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/ServerSslContextProviderFactory.java", "diffHunk": "@@ -35,8 +34,8 @@\n   public SslContextProvider createSslContextProvider(\n       DownstreamTlsContext downstreamTlsContext) {\n     checkNotNull(downstreamTlsContext, \"downstreamTlsContext\");\n-    checkArgument(\n-        downstreamTlsContext.hasCommonTlsContext(),\n+    checkNotNull(\n+        downstreamTlsContext.getCommonTlsContext(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwODgxOQ=="}, "originalCommit": {"oid": "ec3dd8d0aa3dc8e9258aee095cb48e8546c286d5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwMjMxMw==", "bodyText": "So once this PR is merged I am planning to address the exception I mentioned above just to clarify.", "url": "https://github.com/grpc/grpc-java/pull/7131#discussion_r441802313", "createdAt": "2020-06-17T20:05:40Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/ServerSslContextProviderFactory.java", "diffHunk": "@@ -35,8 +34,8 @@\n   public SslContextProvider createSslContextProvider(\n       DownstreamTlsContext downstreamTlsContext) {\n     checkNotNull(downstreamTlsContext, \"downstreamTlsContext\");\n-    checkArgument(\n-        downstreamTlsContext.hasCommonTlsContext(),\n+    checkNotNull(\n+        downstreamTlsContext.getCommonTlsContext(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwODgxOQ=="}, "originalCommit": {"oid": "ec3dd8d0aa3dc8e9258aee095cb48e8546c286d5"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2541, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}