{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MzcyNDEx", "number": 7135, "title": "xds: address filtering", "bodyText": "Implementing address filtering as per https://docs.google.com/document/d/13L2YVTGI2OrLpeCAPbgI4qEs0Oz02P7X0DKhk6Y9LMk/view#heading=h.855urh7zgxm0", "createdAt": "2020-06-16T17:47:57Z", "url": "https://github.com/grpc/grpc-java/pull/7135", "merged": true, "mergeCommit": {"oid": "81138c51ad58f80e368b9df4036bb4c8747b1325"}, "closed": true, "closedAt": "2020-06-17T21:37:34Z", "author": {"login": "dapengzhang0"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcr44bwgH2gAyNDM1MzcyNDExOjc5NTYwNmEyNWJjMDlkOWY1OTMxNmQyZWFhZmMwYjIxMzI3NTY2MWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsQQnngH2gAyNDM1MzcyNDExOmZiZTk3MDU3NGQ5NTk0YjNhMTA2MmFhY2M4NWEwZTU5YWJiM2VjMjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "795606a25bc09d9f59316d2eaafc0b213275661a", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/795606a25bc09d9f59316d2eaafc0b213275661a", "committedDate": "2020-06-16T17:41:09Z", "message": "xds: address filtering"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODcwNTE1", "url": "https://github.com/grpc/grpc-java/pull/7135#pullrequestreview-431870515", "createdAt": "2020-06-16T20:34:29Z", "commit": {"oid": "795606a25bc09d9f59316d2eaafc0b213275661a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDozNDoyOVrOGksKnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDo1ODowMFrOGks6rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNTUzMw==", "bodyText": "Those two checkers are not useful, it's redundant code.  If the arguments are null, it breaks immediately, same as what the checkers are doing. Same for below.", "url": "https://github.com/grpc/grpc-java/pull/7135#discussion_r441125533", "createdAt": "2020-06-16T20:34:29Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/AddressFiltering.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.grpc.Attributes;\n+import io.grpc.EquivalentAddressGroup;\n+import io.grpc.NameResolver.ResolutionResultAttr;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+\n+final class AddressFiltering {\n+  @ResolutionResultAttr\n+  private static final Attributes.Key<PathChain> PATH_CHAIN_KEY =\n+      Attributes.Key.create(\"io.grpc.xds.AddressFilter.PATH_CHAIN_KEY\");\n+\n+  // Prevent instantiation.\n+  private AddressFiltering() {}\n+\n+  /**\n+   * Sets a path filter to an EquivalentAddressGroup. Any preexisting path filter will be discarded.\n+   */\n+  static EquivalentAddressGroup setPathFilter(EquivalentAddressGroup address, List<String> names) {\n+    checkNotNull(address, \"address\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "795606a25bc09d9f59316d2eaafc0b213275661a"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNjY4NQ==", "bodyText": "A simple List or Queue works well,  I don't see the necessity of implementing such a \"linked nodes\".", "url": "https://github.com/grpc/grpc-java/pull/7135#discussion_r441136685", "createdAt": "2020-06-16T20:55:50Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/AddressFiltering.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.grpc.Attributes;\n+import io.grpc.EquivalentAddressGroup;\n+import io.grpc.NameResolver.ResolutionResultAttr;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+\n+final class AddressFiltering {\n+  @ResolutionResultAttr\n+  private static final Attributes.Key<PathChain> PATH_CHAIN_KEY =\n+      Attributes.Key.create(\"io.grpc.xds.AddressFilter.PATH_CHAIN_KEY\");\n+\n+  // Prevent instantiation.\n+  private AddressFiltering() {}\n+\n+  /**\n+   * Sets a path filter to an EquivalentAddressGroup. Any preexisting path filter will be discarded.\n+   */\n+  static EquivalentAddressGroup setPathFilter(EquivalentAddressGroup address, List<String> names) {\n+    checkNotNull(address, \"address\");\n+    checkNotNull(names, \"names\");\n+    Attributes.Builder attrBuilder = address.getAttributes().toBuilder().discard(PATH_CHAIN_KEY);\n+    PathChain pathChain = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "795606a25bc09d9f59316d2eaafc0b213275661a"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNzgzNw==", "bodyText": "Class names should be a noun, even if it is not intended to be instantiated.", "url": "https://github.com/grpc/grpc-java/pull/7135#discussion_r441137837", "createdAt": "2020-06-16T20:58:00Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/AddressFiltering.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.grpc.Attributes;\n+import io.grpc.EquivalentAddressGroup;\n+import io.grpc.NameResolver.ResolutionResultAttr;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+\n+final class AddressFiltering {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "795606a25bc09d9f59316d2eaafc0b213275661a"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92e97f135b005551117be28fda46f6587c406a24", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/92e97f135b005551117be28fda46f6587c406a24", "committedDate": "2020-06-16T22:43:48Z", "message": "refactor class name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxOTc4MzE1", "url": "https://github.com/grpc/grpc-java/pull/7135#pullrequestreview-431978315", "createdAt": "2020-06-17T00:26:17Z", "commit": {"oid": "92e97f135b005551117be28fda46f6587c406a24"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMDoyNjoxN1rOGkxhyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMDoyNjoxN1rOGkxhyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIxMzM4NA==", "bodyText": "It may not be a good practice to make such a strong assumption for a utility method (it makes the method weak). You can just skip that address if the attribute does not exist.", "url": "https://github.com/grpc/grpc-java/pull/7135#discussion_r441213384", "createdAt": "2020-06-17T00:26:17Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/AddressFilter.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import io.grpc.Attributes;\n+import io.grpc.EquivalentAddressGroup;\n+import io.grpc.NameResolver.ResolutionResultAttr;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+\n+final class AddressFilter {\n+  @ResolutionResultAttr\n+  private static final Attributes.Key<PathChain> PATH_CHAIN_KEY =\n+      Attributes.Key.create(\"io.grpc.xds.AddressFilter.PATH_CHAIN_KEY\");\n+\n+  // Prevent instantiation.\n+  private AddressFilter() {}\n+\n+  /**\n+   * Sets a path filter to an EquivalentAddressGroup. Any preexisting path filter will be discarded.\n+   */\n+  static EquivalentAddressGroup setPathFilter(EquivalentAddressGroup address, List<String> names) {\n+    checkNotNull(address, \"address\");\n+    checkNotNull(names, \"names\");\n+    Attributes.Builder attrBuilder = address.getAttributes().toBuilder().discard(PATH_CHAIN_KEY);\n+    PathChain pathChain = null;\n+    for (String name : names) {\n+      if (pathChain == null) {\n+        pathChain = new PathChain(name);\n+        attrBuilder.set(PATH_CHAIN_KEY, pathChain);\n+      } else {\n+        pathChain.next = new PathChain(name);\n+      }\n+    }\n+    return new EquivalentAddressGroup(address.getAddresses(), attrBuilder.build());\n+  }\n+\n+  /**\n+   * Selects addresses from the given list such that the first element in the path filter is\n+   * identical to the given name, and returns the selected addresses with that first element removed\n+   * from the path filter.\n+   */\n+  static List<EquivalentAddressGroup> filter(List<EquivalentAddressGroup> addresses, String name) {\n+    checkNotNull(addresses, \"addresses\");\n+    checkNotNull(name, \"name\");\n+    List<EquivalentAddressGroup> filteredAddresses = new ArrayList<>();\n+    for (EquivalentAddressGroup address : addresses) {\n+      PathChain pathChain =\n+          checkNotNull(address.getAttributes().get(PATH_CHAIN_KEY), \"Not a hierarchical address\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92e97f135b005551117be28fda46f6587c406a24"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2022349fd8b5bbbc29cd59024b00355d1395ca3c", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/2022349fd8b5bbbc29cd59024b00355d1395ca3c", "committedDate": "2020-06-17T02:30:23Z", "message": "improve javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMjA1MTg4", "url": "https://github.com/grpc/grpc-java/pull/7135#pullrequestreview-432205188", "createdAt": "2020-06-17T09:06:55Z", "commit": {"oid": "2022349fd8b5bbbc29cd59024b00355d1395ca3c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbe970574d9594b3a1062aacc85a0e59abb3ec23", "author": {"user": {"login": "dapengzhang0", "name": "ZHANG Dapeng"}}, "url": "https://github.com/grpc/grpc-java/commit/fbe970574d9594b3a1062aacc85a0e59abb3ec23", "committedDate": "2020-06-17T20:55:23Z", "message": "ignore non-hierarchical addresses"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4251, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}