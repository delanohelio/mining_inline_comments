{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNTE0MjU2", "number": 7515, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoxNjoyM1rOEtHk1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoyMDo1MlrOEtHtPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzQ1NDkzOnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoxNjoyM1rOHguxnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzoyMzo1MFrOHgxtAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4Mjg0NA==", "bodyText": "Now, that I'm looking at the code, I think the environment variable isn't entirely necessary here, since the user already has to opt-in via an API. If we were silently enabling code paths based on I/O, that could be a problem, which might be a bigger concern in places like XdsClient. You probably don't even need setXdsSecurity(), as the useXdsSecurityWithPlaintextFallback() call itself is opting in.", "url": "https://github.com/grpc/grpc-java/pull/7515#discussion_r504082844", "createdAt": "2020-10-13T16:16:23Z", "author": {"login": "ejona86"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -29,20 +32,29 @@\n import io.grpc.ServerTransportFilter;\n import io.grpc.Status;\n import io.grpc.netty.InternalProtocolNegotiator.ProtocolNegotiator;\n+import io.grpc.netty.InternalProtocolNegotiators;\n import io.grpc.netty.NettyServerBuilder;\n+import io.grpc.xds.XdsClientWrapperForServerSds;\n import io.grpc.xds.internal.sds.SdsProtocolNegotiators.ServerSdsProtocolNegotiator;\n+import io.netty.handler.ssl.SslContext;\n+import io.netty.handler.ssl.SslContextBuilder;\n import java.io.File;\n+import java.io.InputStream;\n import java.net.InetSocketAddress;\n import java.util.concurrent.Executor;\n import java.util.concurrent.TimeUnit;\n import javax.annotation.Nullable;\n+import javax.net.ssl.SSLException;\n \n /**\n  * A version of {@link ServerBuilder} to create xDS managed servers that will use SDS to set up SSL\n  * with peers. Note, this is not ready to use yet.\n  */\n public final class XdsServerBuilder extends ServerBuilder<XdsServerBuilder> {\n \n+  private static final String XDS_SECURITY_ENV_VAR = \"GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fabd39e8a1fcec7b86a1dfa638412919dd2a8d17"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzMDgxNw==", "bodyText": "In that case I will remove both the env var and the boolean (in effect the isXdsSecurityEnabled() method) after I make sure we are not inadvertently enabling some xds/sds related code paths when xDS security is not in force.", "url": "https://github.com/grpc/grpc-java/pull/7515#discussion_r504130817", "createdAt": "2020-10-13T17:23:50Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -29,20 +32,29 @@\n import io.grpc.ServerTransportFilter;\n import io.grpc.Status;\n import io.grpc.netty.InternalProtocolNegotiator.ProtocolNegotiator;\n+import io.grpc.netty.InternalProtocolNegotiators;\n import io.grpc.netty.NettyServerBuilder;\n+import io.grpc.xds.XdsClientWrapperForServerSds;\n import io.grpc.xds.internal.sds.SdsProtocolNegotiators.ServerSdsProtocolNegotiator;\n+import io.netty.handler.ssl.SslContext;\n+import io.netty.handler.ssl.SslContextBuilder;\n import java.io.File;\n+import java.io.InputStream;\n import java.net.InetSocketAddress;\n import java.util.concurrent.Executor;\n import java.util.concurrent.TimeUnit;\n import javax.annotation.Nullable;\n+import javax.net.ssl.SSLException;\n \n /**\n  * A version of {@link ServerBuilder} to create xDS managed servers that will use SDS to set up SSL\n  * with peers. Note, this is not ready to use yet.\n  */\n public final class XdsServerBuilder extends ServerBuilder<XdsServerBuilder> {\n \n+  private static final String XDS_SECURITY_ENV_VAR = \"GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4Mjg0NA=="}, "originalCommit": {"oid": "fabd39e8a1fcec7b86a1dfa638412919dd2a8d17"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzQ3NjQ2OnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoyMDo1MlrOHgu-jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjowNjowMlrOHhaegw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4NjE1Nw==", "bodyText": "Make it clear this is experimental functionality that is not ready for wide usage. It is clearly an experimental API, but that doesn't make it clear if the code is ready to be widely used.", "url": "https://github.com/grpc/grpc-java/pull/7515#discussion_r504086157", "createdAt": "2020-10-13T16:20:52Z", "author": {"login": "ejona86"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -103,7 +126,52 @@ public XdsServerBuilder fallbackHandlerRegistry(@Nullable HandlerRegistry fallba\n \n   @Override\n   public XdsServerBuilder useTransportSecurity(File certChain, File privateKey) {\n-    throw new UnsupportedOperationException(\"Cannot set security parameters on XdsServerBuilder\");\n+    delegate.useTransportSecurity(certChain, privateKey);\n+    return this;\n+  }\n+\n+  @Override\n+  public XdsServerBuilder useTransportSecurity(InputStream certChain, InputStream privateKey) {\n+    delegate.useTransportSecurity(certChain, privateKey);\n+    return this;\n+  }\n+\n+  /** Use xDS provided security with plaintext as fallback. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fabd39e8a1fcec7b86a1dfa638412919dd2a8d17"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzMTAxNw==", "bodyText": "SG. will do", "url": "https://github.com/grpc/grpc-java/pull/7515#discussion_r504131017", "createdAt": "2020-10-13T17:24:10Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -103,7 +126,52 @@ public XdsServerBuilder fallbackHandlerRegistry(@Nullable HandlerRegistry fallba\n \n   @Override\n   public XdsServerBuilder useTransportSecurity(File certChain, File privateKey) {\n-    throw new UnsupportedOperationException(\"Cannot set security parameters on XdsServerBuilder\");\n+    delegate.useTransportSecurity(certChain, privateKey);\n+    return this;\n+  }\n+\n+  @Override\n+  public XdsServerBuilder useTransportSecurity(InputStream certChain, InputStream privateKey) {\n+    delegate.useTransportSecurity(certChain, privateKey);\n+    return this;\n+  }\n+\n+  /** Use xDS provided security with plaintext as fallback. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4NjE1Nw=="}, "originalCommit": {"oid": "fabd39e8a1fcec7b86a1dfa638412919dd2a8d17"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyOTg2Ng==", "bodyText": "I was not talking about the API. I was talking about the implementation. The implementation itself is experimental/not stable.", "url": "https://github.com/grpc/grpc-java/pull/7515#discussion_r504729866", "createdAt": "2020-10-14T14:35:45Z", "author": {"login": "ejona86"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -103,7 +126,52 @@ public XdsServerBuilder fallbackHandlerRegistry(@Nullable HandlerRegistry fallba\n \n   @Override\n   public XdsServerBuilder useTransportSecurity(File certChain, File privateKey) {\n-    throw new UnsupportedOperationException(\"Cannot set security parameters on XdsServerBuilder\");\n+    delegate.useTransportSecurity(certChain, privateKey);\n+    return this;\n+  }\n+\n+  @Override\n+  public XdsServerBuilder useTransportSecurity(InputStream certChain, InputStream privateKey) {\n+    delegate.useTransportSecurity(certChain, privateKey);\n+    return this;\n+  }\n+\n+  /** Use xDS provided security with plaintext as fallback. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4NjE1Nw=="}, "originalCommit": {"oid": "fabd39e8a1fcec7b86a1dfa638412919dd2a8d17"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5NjU2NQ==", "bodyText": "Oh okay. I will change the wording and make a new PR. I thought the idea was to mention that the useXdsSecurityWith* methods are experimental/temporary. The new wording will be:\n\"Note, this experimental functionality is not ready for wide usage.\"", "url": "https://github.com/grpc/grpc-java/pull/7515#discussion_r504796565", "createdAt": "2020-10-14T16:02:41Z", "author": {"login": "sanjaypujare"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -103,7 +126,52 @@ public XdsServerBuilder fallbackHandlerRegistry(@Nullable HandlerRegistry fallba\n \n   @Override\n   public XdsServerBuilder useTransportSecurity(File certChain, File privateKey) {\n-    throw new UnsupportedOperationException(\"Cannot set security parameters on XdsServerBuilder\");\n+    delegate.useTransportSecurity(certChain, privateKey);\n+    return this;\n+  }\n+\n+  @Override\n+  public XdsServerBuilder useTransportSecurity(InputStream certChain, InputStream privateKey) {\n+    delegate.useTransportSecurity(certChain, privateKey);\n+    return this;\n+  }\n+\n+  /** Use xDS provided security with plaintext as fallback. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4NjE1Nw=="}, "originalCommit": {"oid": "fabd39e8a1fcec7b86a1dfa638412919dd2a8d17"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5ODg1MQ==", "bodyText": "SGTM", "url": "https://github.com/grpc/grpc-java/pull/7515#discussion_r504798851", "createdAt": "2020-10-14T16:06:02Z", "author": {"login": "ejona86"}, "path": "xds/src/main/java/io/grpc/xds/internal/sds/XdsServerBuilder.java", "diffHunk": "@@ -103,7 +126,52 @@ public XdsServerBuilder fallbackHandlerRegistry(@Nullable HandlerRegistry fallba\n \n   @Override\n   public XdsServerBuilder useTransportSecurity(File certChain, File privateKey) {\n-    throw new UnsupportedOperationException(\"Cannot set security parameters on XdsServerBuilder\");\n+    delegate.useTransportSecurity(certChain, privateKey);\n+    return this;\n+  }\n+\n+  @Override\n+  public XdsServerBuilder useTransportSecurity(InputStream certChain, InputStream privateKey) {\n+    delegate.useTransportSecurity(certChain, privateKey);\n+    return this;\n+  }\n+\n+  /** Use xDS provided security with plaintext as fallback. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4NjE1Nw=="}, "originalCommit": {"oid": "fabd39e8a1fcec7b86a1dfa638412919dd2a8d17"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2401, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}