{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNDAyNzE5", "number": 6600, "title": "core: fix bugs in service config error handling", "bodyText": "1. Allow legacy way to pass service config via attributes\n2. fix AutoConfiguredLBFactory may populate ConfigOrError instead of\nactual config.", "createdAt": "2020-01-14T01:37:44Z", "url": "https://github.com/grpc/grpc-java/pull/6600", "merged": true, "mergeCommit": {"oid": "b1209b7ed5c8c840243d5406dec5772404cc6e27"}, "closed": true, "closedAt": "2020-01-23T00:52:44Z", "author": {"login": "creamsoup"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6GvKigH2gAyMzYyNDAyNzE5OmNjYzc5MzgzMWY2YzIzNmJlZDg5ZmFlYjJhMzQ3YjZhYWI1YmFhYWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8_Gb3AFqTM0Njk5MzY4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ccc793831f6c236bed89faeb2a347b6aab5baaab", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/ccc793831f6c236bed89faeb2a347b6aab5baaab", "committedDate": "2020-01-14T01:33:29Z", "message": "core: fix service config error handling\n\n1. Allow legacy way to pass service config via attributes\n2. fix AutoConfiguredLBFactory may populate ConfigOrError instead of\nactual config."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8afd89b00e1247851d1e48ca417b5788131acd15", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/8afd89b00e1247851d1e48ca417b5788131acd15", "committedDate": "2020-01-17T19:03:45Z", "message": "add a test case for testinlg service config only in attribute"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODc0NTIx", "url": "https://github.com/grpc/grpc-java/pull/6600#pullrequestreview-344874521", "createdAt": "2020-01-17T22:26:14Z", "commit": {"oid": "8afd89b00e1247851d1e48ca417b5788131acd15"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjoyNjoxNFrOFfG0bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjozNzowOVrOFfG_gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MTkwMQ==", "bodyText": "Looks like there isn't a case where selection.config is an error. We may just change PolicySelection.config from ConfigOrError to Object.", "url": "https://github.com/grpc/grpc-java/pull/6600#discussion_r368161901", "createdAt": "2020-01-17T22:26:14Z", "author": {"login": "zhangkun83"}, "path": "core/src/main/java/io/grpc/internal/AutoConfiguredLoadBalancerFactory2.java", "diffHunk": "@@ -167,7 +167,7 @@ Status tryHandleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n             ResolvedAddresses.newBuilder()\n                 .setAddresses(resolvedSelection.serverList)\n                 .setAttributes(attributes)\n-                .setLoadBalancingPolicyConfig(lbConfig)\n+                .setLoadBalancingPolicyConfig(lbConfig != null ? lbConfig.getConfig() : null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afd89b00e1247851d1e48ca417b5788131acd15"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2NDczOA==", "bodyText": "I think the original code is correct.\nFor a LoadBalancer that's still on the old service config path, it won't override LoadBalancerProvider.parseLoadBalancingPolicyConfig, thus configOrError would be LoadBalancerProvider.UNKNOWN_CONFIG, which is non-null, thus NAME_RESOLVER_SERVICE_CONFIG will get populated. We shouldn't call parseServiceConfig again.", "url": "https://github.com/grpc/grpc-java/pull/6600#discussion_r368164738", "createdAt": "2020-01-17T22:37:09Z", "author": {"login": "zhangkun83"}, "path": "core/src/main/java/io/grpc/internal/ManagedChannelImpl2.java", "diffHunk": "@@ -1332,9 +1333,13 @@ public void run() {\n           ConfigOrError configOrError = resolutionResult.getServiceConfig();\n           ServiceConfigHolder validServiceConfig = null;\n           Status serviceConfigError = null;\n+          Map<String, ?> rawServiceConfig =\n+              resolutionResult.getAttributes().get(GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG);\n+          if (configOrError == null && rawServiceConfig != null) {\n+            // use service config json in deprecated attributes\n+            configOrError = serviceConfigParser.parseServiceConfig(rawServiceConfig);\n+          }\n           if (configOrError != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afd89b00e1247851d1e48ca417b5788131acd15"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3bcdcce5d46489d5a5d08239b5a241da5fca850", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/a3bcdcce5d46489d5a5d08239b5a241da5fca850", "committedDate": "2020-01-18T00:24:22Z", "message": "core: make policy selection accepts parsed config object instead of ConfigOrError"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2ODE4OTE2", "url": "https://github.com/grpc/grpc-java/pull/6600#pullrequestreview-346818916", "createdAt": "2020-01-22T18:48:16Z", "commit": {"oid": "a3bcdcce5d46489d5a5d08239b5a241da5fca850"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODo0ODoxN1rOFgnB4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODo1MjoyN1rOFgnKLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczODIwOQ==", "bodyText": "Now I see this is for \"old\" NameResolvers that don't call parseServiceConfig() at all but emit the raw config. Granted the raw config attribute is defined in the internal GrpcAttributes thus no third-party NameResolvers are expected to do that. It's fine to call parser here if that makes the migration for first-party NameResolver easier. It's going to be removed along with GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG anyway so not a big deal.", "url": "https://github.com/grpc/grpc-java/pull/6600#discussion_r369738209", "createdAt": "2020-01-22T18:48:17Z", "author": {"login": "zhangkun83"}, "path": "core/src/main/java/io/grpc/internal/ManagedChannelImpl2.java", "diffHunk": "@@ -1332,9 +1333,13 @@ public void run() {\n           ConfigOrError configOrError = resolutionResult.getServiceConfig();\n           ServiceConfigHolder validServiceConfig = null;\n           Status serviceConfigError = null;\n+          Map<String, ?> rawServiceConfig =\n+              resolutionResult.getAttributes().get(GrpcAttributes.NAME_RESOLVER_SERVICE_CONFIG);\n+          if (configOrError == null && rawServiceConfig != null) {\n+            // use service config json in deprecated attributes\n+            configOrError = serviceConfigParser.parseServiceConfig(rawServiceConfig);\n+          }\n           if (configOrError != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2NDczOA=="}, "originalCommit": {"oid": "8afd89b00e1247851d1e48ca417b5788131acd15"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc0MDMzNQ==", "bodyText": "An \"old\" NameResolver that doesn't do service config parsing should call listener.onAddresses(), not onResult(). This makes sure the compatibility logic in Listener2#onAddresses() is exercised.", "url": "https://github.com/grpc/grpc-java/pull/6600#discussion_r369740335", "createdAt": "2020-01-22T18:52:27Z", "author": {"login": "zhangkun83"}, "path": "core/src/test/java/io/grpc/internal/ServiceConfigErrorHandlingTest.java", "diffHunk": "@@ -541,7 +571,17 @@ public NameResolver newNameResolver(final URI targetUri, NameResolver.Args args)\n         return null;\n       }\n       assertEquals(DEFAULT_PORT, args.getDefaultPort());\n-      FakeNameResolver resolver = new FakeNameResolver(args.getServiceConfigParser());\n+      FakeNameResolver resolver;\n+      if (enableServiceConfigParsing) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3bcdcce5d46489d5a5d08239b5a241da5fca850"}, "originalPosition": 149}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1e0602308cfad6a0cc0d1b88f6a6d305a1aad2e", "author": {"user": {"login": "creamsoup", "name": "Jihun Cho"}}, "url": "https://github.com/grpc/grpc-java/commit/d1e0602308cfad6a0cc0d1b88f6a6d305a1aad2e", "committedDate": "2020-01-23T00:12:15Z", "message": "remove service config parsing in ManagedChannelImpl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTkzNjg3", "url": "https://github.com/grpc/grpc-java/pull/6600#pullrequestreview-346993687", "createdAt": "2020-01-23T00:21:27Z", "commit": {"oid": "d1e0602308cfad6a0cc0d1b88f6a6d305a1aad2e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4804, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}