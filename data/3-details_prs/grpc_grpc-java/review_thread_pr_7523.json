{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNzcwMzY2", "number": 7523, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzoxMTozMFrOEuN4Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzoxMTozMFrOEuN4Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODk3MzQyOnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/LoadReportClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzoxMTozMFrOHiel3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzo0ODo1MVrOHifSdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxNDg0Ng==", "bodyText": "The purpose of using a supplier is to let this class own and solely manage the state of the stopwatch. Passing in a stopwatch instance in the constructor does not prevent the stopwatch instance from being shared and reset() outside this class from API perspective. You either call supplier.get() inside or outside the constructor, but I think the original version of constructor can not be misused.", "url": "https://github.com/grpc/grpc-java/pull/7523#discussion_r505914846", "createdAt": "2020-10-15T23:11:30Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/LoadReportClient.java", "diffHunk": "@@ -77,13 +76,13 @@\n       SynchronizationContext syncContext,\n       ScheduledExecutorService scheduledExecutorService,\n       BackoffPolicy.Provider backoffPolicyProvider,\n-      Supplier<Stopwatch> stopwatchSupplier) {\n+      Stopwatch stopwatch) {\n     this.loadStatsManager = checkNotNull(loadStatsManager, \"loadStatsManager\");\n     this.xdsChannel = checkNotNull(xdsChannel, \"xdsChannel\");\n     this.syncContext = checkNotNull(syncContext, \"syncContext\");\n     this.timerService = checkNotNull(scheduledExecutorService, \"timeService\");\n     this.backoffPolicyProvider = checkNotNull(backoffPolicyProvider, \"backoffPolicyProvider\");\n-    this.retryStopwatch = checkNotNull(stopwatchSupplier, \"stopwatchSupplier\").get();\n+    this.stopwatch = checkNotNull(stopwatch, \"stopwatch\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204186c5d432f400b56ce17024c483327e5efa09"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkyNDM0OA==", "bodyText": "Yeah, you are right. I can change this back.", "url": "https://github.com/grpc/grpc-java/pull/7523#discussion_r505924348", "createdAt": "2020-10-15T23:41:59Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/LoadReportClient.java", "diffHunk": "@@ -77,13 +76,13 @@\n       SynchronizationContext syncContext,\n       ScheduledExecutorService scheduledExecutorService,\n       BackoffPolicy.Provider backoffPolicyProvider,\n-      Supplier<Stopwatch> stopwatchSupplier) {\n+      Stopwatch stopwatch) {\n     this.loadStatsManager = checkNotNull(loadStatsManager, \"loadStatsManager\");\n     this.xdsChannel = checkNotNull(xdsChannel, \"xdsChannel\");\n     this.syncContext = checkNotNull(syncContext, \"syncContext\");\n     this.timerService = checkNotNull(scheduledExecutorService, \"timeService\");\n     this.backoffPolicyProvider = checkNotNull(backoffPolicyProvider, \"backoffPolicyProvider\");\n-    this.retryStopwatch = checkNotNull(stopwatchSupplier, \"stopwatchSupplier\").get();\n+    this.stopwatch = checkNotNull(stopwatch, \"stopwatch\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxNDg0Ng=="}, "originalCommit": {"oid": "204186c5d432f400b56ce17024c483327e5efa09"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkyNjI2MA==", "bodyText": "Changed back.", "url": "https://github.com/grpc/grpc-java/pull/7523#discussion_r505926260", "createdAt": "2020-10-15T23:48:51Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/LoadReportClient.java", "diffHunk": "@@ -77,13 +76,13 @@\n       SynchronizationContext syncContext,\n       ScheduledExecutorService scheduledExecutorService,\n       BackoffPolicy.Provider backoffPolicyProvider,\n-      Supplier<Stopwatch> stopwatchSupplier) {\n+      Stopwatch stopwatch) {\n     this.loadStatsManager = checkNotNull(loadStatsManager, \"loadStatsManager\");\n     this.xdsChannel = checkNotNull(xdsChannel, \"xdsChannel\");\n     this.syncContext = checkNotNull(syncContext, \"syncContext\");\n     this.timerService = checkNotNull(scheduledExecutorService, \"timeService\");\n     this.backoffPolicyProvider = checkNotNull(backoffPolicyProvider, \"backoffPolicyProvider\");\n-    this.retryStopwatch = checkNotNull(stopwatchSupplier, \"stopwatchSupplier\").get();\n+    this.stopwatch = checkNotNull(stopwatch, \"stopwatch\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxNDg0Ng=="}, "originalCommit": {"oid": "204186c5d432f400b56ce17024c483327e5efa09"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2216, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}