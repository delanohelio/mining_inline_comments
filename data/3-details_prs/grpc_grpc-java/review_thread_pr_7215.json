{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5Njc5OTEx", "number": 7215, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOToyMzo0NFrOEO01nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOToyMzo0NFrOEO01nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTgxMjEyOnYy", "diffSide": "RIGHT", "path": "xds/src/main/java/io/grpc/xds/RouteMatch.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOToyMzo0NFrOGyMjvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOTo0MToyNFrOGyNJHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI4Nzc0MQ==", "bodyText": "Why not just boolean matches(String path, Metadata headers) without making a copy map?\nfor (HeaderMatcher headerMatcher : headerMatchers) {\n  headerName = headerMatcher.getName();\n  Iterable<String> values = headers.getAll(\n      Metadata.Key.of(headerName, Metadata.ASCII_STRING_MARSHALLER));\n  if (headerMatcher.matchesValue(values)) {\n    return false;\n  }\n}", "url": "https://github.com/grpc/grpc-java/pull/7215#discussion_r455287741", "createdAt": "2020-07-15T19:23:44Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/RouteMatch.java", "diffHunk": "@@ -60,7 +60,7 @@\n    *\n    * <p>Match is not deterministic if a runtime fraction match rule presents in this RouteMatch.\n    */\n-  boolean matches(String path, Map<String, Set<String>> headers) {\n+  boolean matches(String path, Map<String, Iterable<String>> headers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc50dcfed4d6b9308c5900b48d361b6cede4678b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI5NjcwNQ==", "bodyText": "Seems the copy map can be reused for multiple RouteMatches in pickSubchannel(), which is more efficient.", "url": "https://github.com/grpc/grpc-java/pull/7215#discussion_r455296705", "createdAt": "2020-07-15T19:40:15Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/RouteMatch.java", "diffHunk": "@@ -60,7 +60,7 @@\n    *\n    * <p>Match is not deterministic if a runtime fraction match rule presents in this RouteMatch.\n    */\n-  boolean matches(String path, Map<String, Set<String>> headers) {\n+  boolean matches(String path, Map<String, Iterable<String>> headers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI4Nzc0MQ=="}, "originalCommit": {"oid": "bc50dcfed4d6b9308c5900b48d361b6cede4678b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI5NzMwOQ==", "bodyText": "Yes, exactly.", "url": "https://github.com/grpc/grpc-java/pull/7215#discussion_r455297309", "createdAt": "2020-07-15T19:41:24Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/RouteMatch.java", "diffHunk": "@@ -60,7 +60,7 @@\n    *\n    * <p>Match is not deterministic if a runtime fraction match rule presents in this RouteMatch.\n    */\n-  boolean matches(String path, Map<String, Set<String>> headers) {\n+  boolean matches(String path, Map<String, Iterable<String>> headers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI4Nzc0MQ=="}, "originalCommit": {"oid": "bc50dcfed4d6b9308c5900b48d361b6cede4678b"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2610, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}