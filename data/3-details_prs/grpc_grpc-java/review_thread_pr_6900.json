{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MzkyNjA5", "number": 6900, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMDowNDowN1rODuoPzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMDowNDowN1rODuoPzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjIwNDkzOnYy", "diffSide": "RIGHT", "path": "stub/src/test/java/io/grpc/stub/ClientCallsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMDowNDowN1rOGAtAew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMjoxOTo0MVrOGAuP9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5MDU4Nw==", "bodyText": "unaryBlockingCallFailed() uses a NoopClientCall that calls listener.onClose() in its start(). That is closer to the reality. We should also keep the same style throughout a file.", "url": "https://github.com/grpc/grpc-java/pull/6900#discussion_r403390587", "createdAt": "2020-04-04T00:04:07Z", "author": {"login": "zhangkun83"}, "path": "stub/src/test/java/io/grpc/stub/ClientCallsTest.java", "diffHunk": "@@ -203,6 +220,48 @@ public void blockingUnaryCall2_interruptedWaitsForOnClose() throws Exception {\n     assertTrue(\"context not cancelled\", methodImpl.observer.isCancelled());\n   }\n \n+  @Test\n+  public void blockingUnaryCall_HasBlockingStubType() {\n+    when(mockChannel.newCall(\n+        ArgumentMatchers.<MethodDescriptor<Integer, Integer>>any(), any(CallOptions.class)))\n+        .thenReturn(mockClientCall);\n+    // we only interested in the call options, stop the call by thrown.\n+    doThrow(new RuntimeException(\"intended\")).when(mockClientCall).sendMessage(any(Integer.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56ffea84e8e78887588673ca97f5e6564e35a057"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQxMDkzMg==", "bodyText": "Done.", "url": "https://github.com/grpc/grpc-java/pull/6900#discussion_r403410932", "createdAt": "2020-04-04T02:19:41Z", "author": {"login": "ran-su"}, "path": "stub/src/test/java/io/grpc/stub/ClientCallsTest.java", "diffHunk": "@@ -203,6 +220,48 @@ public void blockingUnaryCall2_interruptedWaitsForOnClose() throws Exception {\n     assertTrue(\"context not cancelled\", methodImpl.observer.isCancelled());\n   }\n \n+  @Test\n+  public void blockingUnaryCall_HasBlockingStubType() {\n+    when(mockChannel.newCall(\n+        ArgumentMatchers.<MethodDescriptor<Integer, Integer>>any(), any(CallOptions.class)))\n+        .thenReturn(mockClientCall);\n+    // we only interested in the call options, stop the call by thrown.\n+    doThrow(new RuntimeException(\"intended\")).when(mockClientCall).sendMessage(any(Integer.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5MDU4Nw=="}, "originalCommit": {"oid": "56ffea84e8e78887588673ca97f5e6564e35a057"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2775, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}