{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MjY0OTEy", "number": 7014, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo0ODo0M1rOD5_XBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo0ODo0M1rOD5_XBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTMzNTA4OnYy", "diffSide": "RIGHT", "path": "rls/src/main/java/io/grpc/rls/RlsLoadBalancer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo0ODo0M1rOGRk1og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1Nzo1NlrOGRlJCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4MjUzMA==", "bodyText": "Seems all you want is to inject throttle, ]why not just ThrottlerProvider?", "url": "https://github.com/grpc/grpc-java/pull/7014#discussion_r421082530", "createdAt": "2020-05-06T20:48:43Z", "author": {"login": "dapengzhang0"}, "path": "rls/src/main/java/io/grpc/rls/RlsLoadBalancer.java", "diffHunk": "@@ -106,4 +111,21 @@ public void shutdown() {\n       routeLookupClient = null;\n     }\n   }\n+\n+  /**\n+   * Provides {@link CachingRlsLbClient.Builder} with default settings. This is useful for\n+   * testing.\n+   */\n+  interface CachingRlsLbClientBuilderProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5ae462a8e7dc787faa9cf36eebcb6f35e00e2b9"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4NzQ5OQ==", "bodyText": "yeah that was my initial thought. Sooner than later we may need more and more of those Providers. Providing default builder is more flexible without adding test specific codes/classes. e.g. I am thinking we may need to add timeProvider and evictionListener in near future.", "url": "https://github.com/grpc/grpc-java/pull/7014#discussion_r421087499", "createdAt": "2020-05-06T20:57:56Z", "author": {"login": "creamsoup"}, "path": "rls/src/main/java/io/grpc/rls/RlsLoadBalancer.java", "diffHunk": "@@ -106,4 +111,21 @@ public void shutdown() {\n       routeLookupClient = null;\n     }\n   }\n+\n+  /**\n+   * Provides {@link CachingRlsLbClient.Builder} with default settings. This is useful for\n+   * testing.\n+   */\n+  interface CachingRlsLbClientBuilderProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4MjUzMA=="}, "originalCommit": {"oid": "d5ae462a8e7dc787faa9cf36eebcb6f35e00e2b9"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2667, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}