{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMTU4OTEw", "number": 7339, "title": "core: add accessor for bare method name in MethodDescriptor", "bodyText": "To implement credential restrictions based on not only service names but also (non-qualified) method names, we need to expose this property just like the service name got exposed through the API.\nThis reuses the same experimental tracking issue as getServiceName, but I can to file a new one if necessary.", "createdAt": "2020-08-19T13:18:06Z", "url": "https://github.com/grpc/grpc-java/pull/7339", "merged": true, "mergeCommit": {"oid": "07012421ad7bd3d46c2f07ec33fa74fd1d105b52"}, "closed": true, "closedAt": "2020-09-03T21:27:18Z", "author": {"login": "pkern"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAdqIXAH2gAyNDcwMTU4OTEwOmMxYzJhYzExOWRkMmVhNmRhMjI3Nzc4MzU4OGFmN2I2YTZiYzI0ZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFW7-ygFqTQ4MjE5MzI0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c1c2ac119dd2ea6da2277783588af7b6a6bc24e8", "author": {"user": {"login": "pkern", "name": "Philipp Kern"}}, "url": "https://github.com/grpc/grpc-java/commit/c1c2ac119dd2ea6da2277783588af7b6a6bc24e8", "committedDate": "2020-08-19T15:50:30Z", "message": "core: add getMethodName to MethodDescriptor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea9c21b50cc9e24db21cf85da96684e0a1f549e4", "author": {"user": {"login": "pkern", "name": "Philipp Kern"}}, "url": "https://github.com/grpc/grpc-java/commit/ea9c21b50cc9e24db21cf85da96684e0a1f549e4", "committedDate": "2020-08-19T13:15:11Z", "message": "core: add getMethodName to MethodDescriptor"}, "afterCommit": {"oid": "c1c2ac119dd2ea6da2277783588af7b6a6bc24e8", "author": {"user": {"login": "pkern", "name": "Philipp Kern"}}, "url": "https://github.com/grpc/grpc-java/commit/c1c2ac119dd2ea6da2277783588af7b6a6bc24e8", "committedDate": "2020-08-19T15:50:30Z", "message": "core: add getMethodName to MethodDescriptor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNzMzODY4", "url": "https://github.com/grpc/grpc-java/pull/7339#pullrequestreview-473733868", "createdAt": "2020-08-24T18:01:15Z", "commit": {"oid": "c1c2ac119dd2ea6da2277783588af7b6a6bc24e8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNzM3MzMy", "url": "https://github.com/grpc/grpc-java/pull/7339#pullrequestreview-473737332", "createdAt": "2020-08-24T18:06:08Z", "commit": {"oid": "c1c2ac119dd2ea6da2277783588af7b6a6bc24e8"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODowNjowOFrOHFwg_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODowODoyOVrOHFwlpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5OTgwNQ==", "bodyText": "I don't think we should pre-compute this.", "url": "https://github.com/grpc/grpc-java/pull/7339#discussion_r475799805", "createdAt": "2020-08-24T18:06:08Z", "author": {"login": "ejona86"}, "path": "api/src/main/java/io/grpc/MethodDescriptor.java", "diffHunk": "@@ -225,6 +226,7 @@ private MethodDescriptor(\n     this.type = Preconditions.checkNotNull(type, \"type\");\n     this.fullMethodName = Preconditions.checkNotNull(fullMethodName, \"fullMethodName\");\n     this.serviceName = extractFullServiceName(fullMethodName);\n+    this.methodName = extractMethodName(fullMethodName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1c2ac119dd2ea6da2277783588af7b6a6bc24e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgwMDA0NA==", "bodyText": "We should add something to the name to make users think whether they want the full name or this one. \"simple\" or \"bare\" or similar. Ditto for extract method.\nI'm not sure if we have any such term today, as method name is normally fully qualified. Maybe another language has such a thing?", "url": "https://github.com/grpc/grpc-java/pull/7339#discussion_r475800044", "createdAt": "2020-08-24T18:06:36Z", "author": {"login": "ejona86"}, "path": "api/src/main/java/io/grpc/MethodDescriptor.java", "diffHunk": "@@ -262,6 +264,17 @@ public String getServiceName() {\n     return serviceName;\n   }\n \n+  /**\n+   * A convenience method for {@code extractMethodName(getFullMethodName())}.\n+   *\n+   * @since 1.32.0\n+   */\n+  @Nullable\n+  @ExperimentalApi(\"https://github.com/grpc/grpc-java/issues/5635\")\n+  public String getMethodName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1c2ac119dd2ea6da2277783588af7b6a6bc24e8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgwMDk5Nw==", "bodyText": "ExperimentalApi", "url": "https://github.com/grpc/grpc-java/pull/7339#discussion_r475800997", "createdAt": "2020-08-24T18:08:29Z", "author": {"login": "ejona86"}, "path": "api/src/main/java/io/grpc/MethodDescriptor.java", "diffHunk": "@@ -398,6 +411,21 @@ public static String extractFullServiceName(String fullMethodName) {\n     return fullMethodName.substring(0, index);\n   }\n \n+  /**\n+   * Extract the method name out of a fully qualified method name. May return {@code null}\n+   * if the input is malformed, but you cannot rely on it for the validity of the input.\n+   *\n+   * @since 1.32.0\n+   */\n+  @Nullable\n+  public static String extractMethodName(String fullMethodName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1c2ac119dd2ea6da2277783588af7b6a6bc24e8"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8de2605b4000ec7aff8bfaa0a354f5f9c54b06e1", "author": {"user": {"login": "pkern", "name": "Philipp Kern"}}, "url": "https://github.com/grpc/grpc-java/commit/8de2605b4000ec7aff8bfaa0a354f5f9c54b06e1", "committedDate": "2020-08-26T08:17:21Z", "message": "Address code review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "509ca868801c4bccb97a7dbb5a846563b8f100e7", "author": {"user": {"login": "pkern", "name": "Philipp Kern"}}, "url": "https://github.com/grpc/grpc-java/commit/509ca868801c4bccb97a7dbb5a846563b8f100e7", "committedDate": "2020-08-26T08:15:44Z", "message": "Address code review comments"}, "afterCommit": {"oid": "8de2605b4000ec7aff8bfaa0a354f5f9c54b06e1", "author": {"user": {"login": "pkern", "name": "Philipp Kern"}}, "url": "https://github.com/grpc/grpc-java/commit/8de2605b4000ec7aff8bfaa0a354f5f9c54b06e1", "committedDate": "2020-08-26T08:17:21Z", "message": "Address code review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cd3e038974e9817259c28c7bdaac811958e5512", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/4cd3e038974e9817259c28c7bdaac811958e5512", "committedDate": "2020-09-03T20:46:55Z", "message": "Fix Javadoc typo."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMTkzMjQ3", "url": "https://github.com/grpc/grpc-java/pull/7339#pullrequestreview-482193247", "createdAt": "2020-09-03T20:50:17Z", "commit": {"oid": "4cd3e038974e9817259c28c7bdaac811958e5512"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4178, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}