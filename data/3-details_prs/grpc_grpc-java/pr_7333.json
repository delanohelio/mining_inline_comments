{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MjUyMzkw", "number": 7333, "title": "xds: implement cert-provider bootstrap config as per design", "bodyText": "", "createdAt": "2020-08-18T07:06:58Z", "url": "https://github.com/grpc/grpc-java/pull/7333", "merged": true, "mergeCommit": {"oid": "80480e69efa0fcfb20244a871d13460d43176f19"}, "closed": true, "closedAt": "2020-08-21T19:52:51Z", "author": {"login": "sanjaypujare"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdABhC1AH2gAyNDY5MjUyMzkwOjJlYjczMjk0OWRjZjBkYmMxNDQ5YzRiYjAwMWUwZDVmN2FlZjZmOTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBJQ8qgFqTQ3MjcwNjIyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2eb732949dcf0dbc1449c4bb001e0d5f7aef6f96", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/2eb732949dcf0dbc1449c4bb001e0d5f7aef6f96", "committedDate": "2020-08-18T07:03:14Z", "message": "xds: implement cert-provider bootstrap config as per design"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ea4553e31dbc81b5270202fa7e00ff1621cc328", "author": {"user": {"login": "sanjaypujare", "name": null}}, "url": "https://github.com/grpc/grpc-java/commit/7ea4553e31dbc81b5270202fa7e00ff1621cc328", "committedDate": "2020-08-18T07:05:40Z", "message": "channel creds"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNzA2MjI1", "url": "https://github.com/grpc/grpc-java/pull/7333#pullrequestreview-472706225", "createdAt": "2020-08-21T18:36:06Z", "commit": {"oid": "7ea4553e31dbc81b5270202fa7e00ff1621cc328"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxODozNjowNlrOHE3UXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxODozNjowNlrOHE3UXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg2MjY4Nw==", "bodyText": "Any reason not to init with defaults before calling extractMeshCaServerConfig?", "url": "https://github.com/grpc/grpc-java/pull/7333#discussion_r474862687", "createdAt": "2020-08-21T18:36:06Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/internal/certprovider/MeshCaCertificateProviderProvider.java", "diffHunk": "@@ -146,56 +149,93 @@ public CertificateProvider createCertificateProvider(\n   private static Config validateAndTranslateConfig(Object config) {\n     // TODO(sanjaypujare): add support for string, struct proto etc\n     checkArgument(config instanceof Map, \"Only Map supported for config\");\n-    @SuppressWarnings(\"unchecked\") Map<String, String> map = (Map<String, String>)config;\n+    @SuppressWarnings(\"unchecked\") Map<String, ?> map = (Map<String, ?>)config;\n \n     Config configObj = new Config();\n-    configObj.meshCaUrl = mapGetOrDefault(map, MESHCA_URL_KEY, MESHCA_URL_DEFAULT);\n-    configObj.rpcTimeoutSeconds =\n-        mapGetOrDefault(map, RPC_TIMEOUT_SECONDS_KEY, RPC_TIMEOUT_SECONDS_DEFAULT);\n-    configObj.gkeClusterUrl =\n-        checkNotNull(\n-            map.get(GKECLUSTER_URL_KEY), GKECLUSTER_URL_KEY + \" is required in the config\");\n+    extractMeshCaServerConfig(configObj, getObject(map, SERVER_CONFIG_KEY));\n     configObj.certValiditySeconds =\n-        mapGetOrDefault(map, CERT_VALIDITY_SECONDS_KEY, CERT_VALIDITY_SECONDS_DEFAULT);\n+        getSeconds(\n+            JsonUtil.getObject(map, CERT_VALIDITY_SECONDS_KEY), CERT_VALIDITY_SECONDS_DEFAULT);\n     configObj.renewalGracePeriodSeconds =\n-        mapGetOrDefault(\n-            map, RENEWAL_GRACE_PERIOD_SECONDS_KEY, RENEWAL_GRACE_PERIOD_SECONDS_DEFAULT);\n-    configObj.keyAlgo = mapGetOrDefault(map, KEY_ALGO_KEY, KEY_ALGO_DEFAULT);\n-    configObj.keySize = mapGetOrDefault(map, KEY_SIZE_KEY, KEY_SIZE_DEFAULT);\n-    configObj.signatureAlgo = mapGetOrDefault(map, SIGNATURE_ALGO_KEY, SIGNATURE_ALGO_DEFAULT);\n-    configObj.maxRetryAttempts =\n-        mapGetOrDefault(map, MAX_RETRY_ATTEMPTS_KEY, MAX_RETRY_ATTEMPTS_DEFAULT);\n-    configObj.stsUrl = mapGetOrDefault(map, STS_URL_KEY, STS_URL_DEFAULT);\n-    configObj.gkeSaJwtLocation =\n-        checkNotNull(\n-            map.get(GKE_SA_JWT_LOCATION_KEY),\n-            GKE_SA_JWT_LOCATION_KEY + \" is required in the config\");\n+        getSeconds(\n+            JsonUtil.getObject(map, RENEWAL_GRACE_PERIOD_SECONDS_KEY),\n+            RENEWAL_GRACE_PERIOD_SECONDS_DEFAULT);\n+    String keyType = JsonUtil.getString(map, KEY_ALGO_KEY);\n+    checkArgument(\n+        keyType == null || keyType.equals(KEY_ALGO_DEFAULT), \"key_type can only be null or 'RSA'\");\n+    // TODO: remove signatureAlgo, keyType (or keyAlgo), maxRetryAttempts\n+    configObj.maxRetryAttempts = MAX_RETRY_ATTEMPTS_DEFAULT;\n+    configObj.keyAlgo = KEY_ALGO_DEFAULT;\n+    configObj.signatureAlgo = SIGNATURE_ALGO_DEFAULT;\n+    configObj.keySize = JsonUtil.getNumberAsInteger(map, KEY_SIZE_KEY);\n+    if (configObj.keySize == null) {\n+      configObj.keySize = KEY_SIZE_DEFAULT;\n+    }\n+    configObj.gkeClusterUrl =\n+            checkNotNull(JsonUtil.getString(map, GKECLUSTER_URL_KEY),\n+                    \"'location' is required in the config\");\n     parseProjectAndZone(configObj.gkeClusterUrl, configObj);\n     return configObj;\n   }\n \n-  private static String mapGetOrDefault(Map<String, String> map, String key, String defaultVal) {\n-    String value = map.get(key);\n-    if (value == null) {\n-      return defaultVal;\n-    }\n-    return value;\n-  }\n-\n-  private static Long mapGetOrDefault(Map<String, String> map, String key, long defaultVal) {\n-    String value = map.get(key);\n-    if (value == null) {\n-      return defaultVal;\n+  private static void extractMeshCaServerConfig(Config configObj, Map<String, ?> serverConfig) {\n+    // init with defaults", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ea4553e31dbc81b5270202fa7e00ff1621cc328"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4166, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}