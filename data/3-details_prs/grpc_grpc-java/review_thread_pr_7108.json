{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMDIxNjQy", "number": 7108, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzowMTo0MVrOEEFaBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyMToxNFrOEGCSJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzE4MzQyOnYy", "diffSide": "RIGHT", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzowMTo0MVrOGhfRyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyOTo1MVrOGkl22Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2ODY0OQ==", "bodyText": "Can we use a local variable instead of a static variable?", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r437768649", "createdAt": "2020-06-09T23:01:41Z", "author": {"login": "ZhenLian"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,6 +40,8 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private static final Map<String, String> TEST_PEER_ATTRIBUTES = new HashMap<String, String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4427b0eb24d050fa244d010a27981b31532a5a78"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3MjAyNw==", "bodyText": "I was not sure so I just made it static since that is what the other sample data was to test the other methods. Do you think I should make it local?", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r437772027", "createdAt": "2020-06-09T23:11:58Z", "author": {"login": "d-reidenbach"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,6 +40,8 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private static final Map<String, String> TEST_PEER_ATTRIBUTES = new HashMap<String, String>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2ODY0OQ=="}, "originalCommit": {"oid": "4427b0eb24d050fa244d010a27981b31532a5a78"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyMjE2OQ==", "bodyText": "Yeah I think so. IMO, the reason why we want to make some test data, like TEST_RECORD_PROTOCOL, static is because these strings might be used multiple times in a place, and it's better to use a static final string to refer them, to avoid misspelling,  etc. This is similar to a const string in C++.\nMap doesn't have this issue, so we'd better keep it local. However, we could make the key and value static. See my inline comments for more.", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441022169", "createdAt": "2020-06-16T17:29:51Z", "author": {"login": "ZhenLian"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,6 +40,8 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private static final Map<String, String> TEST_PEER_ATTRIBUTES = new HashMap<String, String>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2ODY0OQ=="}, "originalCommit": {"oid": "4427b0eb24d050fa244d010a27981b31532a5a78"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzE5NTg1OnYy", "diffSide": "RIGHT", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzowNzoxOVrOGhfZJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzozMDo0NFrOGhf2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3MDUzNQ==", "bodyText": "If we define the map to be a local variable, it doesn't need to be capitalized. We usually do that for some static strings. We can also add some fake values and see if what we got equals what we expect. The key and value of that fake value could be capitalized as a static string.", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r437770535", "createdAt": "2020-06-09T23:07:19Z", "author": {"login": "ZhenLian"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -54,11 +60,14 @@ public void setUp() {\n                     .setMinor(TEST_MIN_RPC_VERSION_MINOR)\n                     .build())\n             .build();\n+    Identity.Builder peerIdentity = Identity.newBuilder()\n+        .setServiceAccount(TEST_PEER_SERVICE_ACCOUNT);\n+    peerIdentity.putAllAttributes(TEST_PEER_ATTRIBUTES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4427b0eb24d050fa244d010a27981b31532a5a78"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3Nzk3Nw==", "bodyText": "Added thanks!", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r437777977", "createdAt": "2020-06-09T23:30:44Z", "author": {"login": "d-reidenbach"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -54,11 +60,14 @@ public void setUp() {\n                     .setMinor(TEST_MIN_RPC_VERSION_MINOR)\n                     .build())\n             .build();\n+    Identity.Builder peerIdentity = Identity.newBuilder()\n+        .setServiceAccount(TEST_PEER_SERVICE_ACCOUNT);\n+    peerIdentity.putAllAttributes(TEST_PEER_ATTRIBUTES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3MDUzNQ=="}, "originalCommit": {"oid": "4427b0eb24d050fa244d010a27981b31532a5a78"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzYyNjg1OnYy", "diffSide": "RIGHT", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxNjo0OVrOGklYcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxNjo0OVrOGklYcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDM4Nw==", "bodyText": "nit: remove the empty line.", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441014387", "createdAt": "2020-06-16T17:16:49Z", "author": {"login": "ZhenLian"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -18,11 +18,15 @@\n \n import static org.junit.Assert.assertEquals;\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9394184f74108c6187b3caddca7adc991dd1776e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzYyNzU1OnYy", "diffSide": "RIGHT", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxNzowMVrOGklY7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxNzowMVrOGklY7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDUxMQ==", "bodyText": "nit: empty line", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441014511", "createdAt": "2020-06-16T17:17:01Z", "author": {"login": "ZhenLian"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -18,11 +18,15 @@\n \n import static org.junit.Assert.assertEquals;\n \n+\n+import java.util.HashMap;\n+import java.util.Map;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.junit.runners.JUnit4;\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9394184f74108c6187b3caddca7adc991dd1776e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzYyODIyOnYy", "diffSide": "RIGHT", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxNzoxM1rOGklZZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxNjowNFrOGkvDvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDYyOQ==", "bodyText": "nit: empty line", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441014629", "createdAt": "2020-06-16T17:17:13Z", "author": {"login": "ZhenLian"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,11 +40,15 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private Map<String, String> testPeerAttributes = new HashMap<String, String>();\n+  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9394184f74108c6187b3caddca7adc991dd1776e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1MDQ3Ng==", "bodyText": "will fix!", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441150476", "createdAt": "2020-06-16T21:23:47Z", "author": {"login": "d-reidenbach"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,11 +40,15 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private Map<String, String> testPeerAttributes = new HashMap<String, String>();\n+  ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDYyOQ=="}, "originalCommit": {"oid": "9394184f74108c6187b3caddca7adc991dd1776e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2ODIxMg==", "bodyText": "Is this empty line removed?\nAlso, does it make sense to not initializing the map here, but moving the initialization to the place where we do SetUp()? That might make the code cleaner IMO.", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441168212", "createdAt": "2020-06-16T22:04:17Z", "author": {"login": "ZhenLian"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,11 +40,15 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private Map<String, String> testPeerAttributes = new HashMap<String, String>();\n+  ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDYyOQ=="}, "originalCommit": {"oid": "9394184f74108c6187b3caddca7adc991dd1776e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MjkyNg==", "bodyText": "Yeah that makes sense. I believe that was a fragment from when I had the map along with the static variables but good catch", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441172926", "createdAt": "2020-06-16T22:16:04Z", "author": {"login": "d-reidenbach"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,11 +40,15 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private Map<String, String> testPeerAttributes = new HashMap<String, String>();\n+  ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDYyOQ=="}, "originalCommit": {"oid": "9394184f74108c6187b3caddca7adc991dd1776e"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzY0MzI0OnYy", "diffSide": "RIGHT", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyMToxNFrOGkljIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToyNDowNlrOGktsoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNzEyMQ==", "bodyText": "How about this: we make the map local, but create two static string like TEST_PEER_ATTRIBUTES_KEY and TEST_PEER_ATTRIBUTES_VALUE.", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441017121", "createdAt": "2020-06-16T17:21:14Z", "author": {"login": "ZhenLian"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,11 +40,15 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private Map<String, String> testPeerAttributes = new HashMap<String, String>();\n+  \n+\n   private HandshakerResult handshakerResult;\n   private RpcProtocolVersions rpcVersions;\n \n   @Before\n   public void setUp() {\n+    testPeerAttributes.put(\"peer\", \"attributes\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9394184f74108c6187b3caddca7adc991dd1776e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1MDYyNQ==", "bodyText": "good catch, fixed in update", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441150625", "createdAt": "2020-06-16T21:24:06Z", "author": {"login": "d-reidenbach"}, "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,11 +40,15 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private Map<String, String> testPeerAttributes = new HashMap<String, String>();\n+  \n+\n   private HandshakerResult handshakerResult;\n   private RpcProtocolVersions rpcVersions;\n \n   @Before\n   public void setUp() {\n+    testPeerAttributes.put(\"peer\", \"attributes\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNzEyMQ=="}, "originalCommit": {"oid": "9394184f74108c6187b3caddca7adc991dd1776e"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2523, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}