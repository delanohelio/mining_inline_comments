{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MzcyMDY2", "number": 7750, "title": "core: DelayedStream should start() real stream immediately", "bodyText": "DelayedClientTransport needs to avoid becoming terminated while it owns\nRPCs. Previously DelayedClientTransport could terminate when some of its\nRPCs had their realStream but realStream.start() hadn't yet been called.\nTo avoid that, we now make sure to call realStream.start()\nsynchronously with setting realStream. Since start() and the method\ncalls before start execute quickly, we can run it in-line. But it does\nmean we now need to split the Stream methods into \"before start\" and\n\"after start\" categories for queuing.\nFixes #6283\nCC @voidzcy", "createdAt": "2020-12-22T21:00:47Z", "url": "https://github.com/grpc/grpc-java/pull/7750", "merged": true, "mergeCommit": {"oid": "7b8105e100c9d4c4697515030085554d4d332169"}, "closed": true, "closedAt": "2021-01-20T23:01:50Z", "author": {"login": "ejona86"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdow8s0gH2gAyNTQ0MzcyMDY2OmU4ZmZhYzc1YTIyMGNmNDZiMzVjNzJhYzUyNDE1MDYxMmZmNTkzYmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdyIGyPAFqTU3MjcyMTM4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e8ffac75a220cf46b35c72ac524150612ff593bd", "author": {"user": {"login": "ejona86", "name": "Eric Anderson"}}, "url": "https://github.com/grpc/grpc-java/commit/e8ffac75a220cf46b35c72ac524150612ff593bd", "committedDate": "2020-12-22T20:55:57Z", "message": "core: DelayedStream should start() real stream immediately\n\nDelayedClientTransport needs to avoid becoming terminated while it owns\nRPCs. Previously DelayedClientTransport could terminate when some of its\nRPCs had their realStream but realStream.start() hadn't yet been called.\n\nTo avoid that, we now make sure to call realStream.start()\nsynchronously with setting realStream. Since start() and the method\ncalls before start execute quickly, we can run it in-line. But it does\nmean we now need to split the Stream methods into \"before start\" and\n\"after start\" categories for queuing.\n\nFixes #6283"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNzQ2NDAx", "url": "https://github.com/grpc/grpc-java/pull/7750#pullrequestreview-563746401", "createdAt": "2021-01-07T19:04:25Z", "commit": {"oid": "e8ffac75a220cf46b35c72ac524150612ff593bd"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOTowNDoyNVrOIP4ciA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxOToyNjo0M1rOIP5PRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyNDM2MA==", "bodyText": "Why not use @Nullable or @CheckForNull annotation rather than comment?", "url": "https://github.com/grpc/grpc-java/pull/7750#discussion_r553524360", "createdAt": "2021-01-07T19:04:25Z", "author": {"login": "dapengzhang0"}, "path": "core/src/main/java/io/grpc/internal/DelayedClientTransport.java", "diffHunk": "@@ -346,7 +344,8 @@ private PendingStream(PickSubchannelArgs args) {\n       this.args = args;\n     }\n \n-    private void createRealStream(ClientTransport transport) {\n+    /** Runnable may be null. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffac75a220cf46b35c72ac524150612ff593bd"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUzNzM1MA==", "bodyText": "Seems listenerToClose must be nonnull here (after adding assertion checkState(listener != null)). delegateToRealStream  == true iff listenerToClose == null as they change value together.", "url": "https://github.com/grpc/grpc-java/pull/7750#discussion_r553537350", "createdAt": "2021-01-07T19:26:43Z", "author": {"login": "dapengzhang0"}, "path": "core/src/main/java/io/grpc/internal/DelayedStream.java", "diffHunk": "@@ -298,10 +325,11 @@ public void run() {\n         }\n       });\n     } else {\n+      drainPendingCalls();\n       if (listenerToClose != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffac75a220cf46b35c72ac524150612ff593bd"}, "originalPosition": 210}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f8cd49816007538331d3ffd5eb03a4e05cc5543", "author": {"user": {"login": "ejona86", "name": "Eric Anderson"}}, "url": "https://github.com/grpc/grpc-java/commit/2f8cd49816007538331d3ffd5eb03a4e05cc5543", "committedDate": "2021-01-07T19:57:26Z", "message": "Remove unnecessary listenerToClose variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzODAwNTM1", "url": "https://github.com/grpc/grpc-java/pull/7750#pullrequestreview-563800535", "createdAt": "2021-01-07T20:23:33Z", "commit": {"oid": "2f8cd49816007538331d3ffd5eb03a4e05cc5543"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMDoyMzozM1rOIP7Hvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMDoyMzozM1rOIP7Hvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU2ODE5MQ==", "bodyText": "Separate note: there might be a race at delayedClientTransport shutdownNow() to make start() call after cancel(), which may cause shutdownNow fail?", "url": "https://github.com/grpc/grpc-java/pull/7750#discussion_r553568191", "createdAt": "2021-01-07T20:23:33Z", "author": {"login": "YifeiZhuang"}, "path": "core/src/main/java/io/grpc/internal/DelayedStream.java", "diffHunk": "@@ -306,14 +306,11 @@ public void cancel(final Status reason) {\n     checkState(listener != null, \"May only be called after start\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f8cd49816007538331d3ffd5eb03a4e05cc5543"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a60d92b85e103907793e7672a8ad015c6021bf7a", "author": {"user": {"login": "ejona86", "name": "Eric Anderson"}}, "url": "https://github.com/grpc/grpc-java/commit/a60d92b85e103907793e7672a8ad015c6021bf7a", "committedDate": "2021-01-20T21:38:26Z", "message": "core: Avoid calling cancel() before start()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyNzIxMzgz", "url": "https://github.com/grpc/grpc-java/pull/7750#pullrequestreview-572721383", "createdAt": "2021-01-20T23:00:06Z", "commit": {"oid": "a60d92b85e103907793e7672a8ad015c6021bf7a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4781, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}