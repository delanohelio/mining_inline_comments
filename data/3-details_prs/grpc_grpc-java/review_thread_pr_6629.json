{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDMyNzk0", "number": 6629, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMDoyODo0N1rODZ9zeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMDoyODo0N1rODZ9zeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTUzNTk0OnYy", "diffSide": "LEFT", "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMDoyODo0N1rOFgp88w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjowNzoxNVrOFgsqfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NjA5OQ==", "bodyText": "You can verify(clusterWatcher, atLeastOnce()).onError(statusCaptor.capture()); and still verify the last status captured is NOT_FOUND.", "url": "https://github.com/grpc/grpc-java/pull/6629#discussion_r369786099", "createdAt": "2020-01-22T20:28:47Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -3044,11 +3072,6 @@ public void streamClosedAndRetryReschedulesAllResourceFetchTimer() {\n     assertThat(cdsRespTimeoutTask.getDelay(TimeUnit.SECONDS))\n         .isEqualTo(XdsClientImpl.INITIAL_RESOURCE_FETCH_TIMEOUT_SEC);\n \n-    fakeClock.forwardTime(XdsClientImpl.INITIAL_RESOURCE_FETCH_TIMEOUT_SEC, TimeUnit.SECONDS);\n-    ArgumentCaptor<Status> statusCaptor = ArgumentCaptor.forClass(null);\n-    verify(clusterWatcher).onError(statusCaptor.capture());\n-    assertThat(statusCaptor.getValue().getCode()).isEqualTo(Code.NOT_FOUND);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a2eb921572e7654677ce61900f5a5e138491bac"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxODM1Ng==", "bodyText": "In this test, I want to explicitly keep tracking of operations happening step by step. So it would be better to explicitly count the number of invocations.\nUpdate: I was talking about the added tests. Yes, I thought about using atLeastOnce() here. Here is my thought: for this test case, the main thing I am trying to test in this test case are those response timers. Strictly speaking I should not verify things other than that, as it would introduce noises (if that verification fails, it's not revealing issues of response timers).\nAlso, IMO assert/verify should express a strong check on something under test. They are for things critical to the test. I feel like using atLeastOnce() here relaxes confidence of the test somehow.\nBased on the above, removing these checks seems more reasonable.", "url": "https://github.com/grpc/grpc-java/pull/6629#discussion_r369818356", "createdAt": "2020-01-22T21:40:08Z", "author": {"login": "voidzcy"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -3044,11 +3072,6 @@ public void streamClosedAndRetryReschedulesAllResourceFetchTimer() {\n     assertThat(cdsRespTimeoutTask.getDelay(TimeUnit.SECONDS))\n         .isEqualTo(XdsClientImpl.INITIAL_RESOURCE_FETCH_TIMEOUT_SEC);\n \n-    fakeClock.forwardTime(XdsClientImpl.INITIAL_RESOURCE_FETCH_TIMEOUT_SEC, TimeUnit.SECONDS);\n-    ArgumentCaptor<Status> statusCaptor = ArgumentCaptor.forClass(null);\n-    verify(clusterWatcher).onError(statusCaptor.capture());\n-    assertThat(statusCaptor.getValue().getCode()).isEqualTo(Code.NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NjA5OQ=="}, "originalCommit": {"oid": "7a2eb921572e7654677ce61900f5a5e138491bac"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgyMzE1NA==", "bodyText": "But why did you remove an existing behavior test?", "url": "https://github.com/grpc/grpc-java/pull/6629#discussion_r369823154", "createdAt": "2020-01-22T21:50:33Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -3044,11 +3072,6 @@ public void streamClosedAndRetryReschedulesAllResourceFetchTimer() {\n     assertThat(cdsRespTimeoutTask.getDelay(TimeUnit.SECONDS))\n         .isEqualTo(XdsClientImpl.INITIAL_RESOURCE_FETCH_TIMEOUT_SEC);\n \n-    fakeClock.forwardTime(XdsClientImpl.INITIAL_RESOURCE_FETCH_TIMEOUT_SEC, TimeUnit.SECONDS);\n-    ArgumentCaptor<Status> statusCaptor = ArgumentCaptor.forClass(null);\n-    verify(clusterWatcher).onError(statusCaptor.capture());\n-    assertThat(statusCaptor.getValue().getCode()).isEqualTo(Code.NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NjA5OQ=="}, "originalCommit": {"oid": "7a2eb921572e7654677ce61900f5a5e138491bac"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgyNTk1Ng==", "bodyText": "I mean, these checks are not critical to this test case (i.e.,  not what this test case is targeting fo). So I clean them up. See the updated comments for my thought.", "url": "https://github.com/grpc/grpc-java/pull/6629#discussion_r369825956", "createdAt": "2020-01-22T21:56:40Z", "author": {"login": "voidzcy"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -3044,11 +3072,6 @@ public void streamClosedAndRetryReschedulesAllResourceFetchTimer() {\n     assertThat(cdsRespTimeoutTask.getDelay(TimeUnit.SECONDS))\n         .isEqualTo(XdsClientImpl.INITIAL_RESOURCE_FETCH_TIMEOUT_SEC);\n \n-    fakeClock.forwardTime(XdsClientImpl.INITIAL_RESOURCE_FETCH_TIMEOUT_SEC, TimeUnit.SECONDS);\n-    ArgumentCaptor<Status> statusCaptor = ArgumentCaptor.forClass(null);\n-    verify(clusterWatcher).onError(statusCaptor.capture());\n-    assertThat(statusCaptor.getValue().getCode()).isEqualTo(Code.NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NjA5OQ=="}, "originalCommit": {"oid": "7a2eb921572e7654677ce61900f5a5e138491bac"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzMDUyNA==", "bodyText": "OKay, not big deal, as the removed behavior is covered in other tests.", "url": "https://github.com/grpc/grpc-java/pull/6629#discussion_r369830524", "createdAt": "2020-01-22T22:07:15Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/test/java/io/grpc/xds/XdsClientImplTest.java", "diffHunk": "@@ -3044,11 +3072,6 @@ public void streamClosedAndRetryReschedulesAllResourceFetchTimer() {\n     assertThat(cdsRespTimeoutTask.getDelay(TimeUnit.SECONDS))\n         .isEqualTo(XdsClientImpl.INITIAL_RESOURCE_FETCH_TIMEOUT_SEC);\n \n-    fakeClock.forwardTime(XdsClientImpl.INITIAL_RESOURCE_FETCH_TIMEOUT_SEC, TimeUnit.SECONDS);\n-    ArgumentCaptor<Status> statusCaptor = ArgumentCaptor.forClass(null);\n-    verify(clusterWatcher).onError(statusCaptor.capture());\n-    assertThat(statusCaptor.getValue().getCode()).isEqualTo(Code.NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NjA5OQ=="}, "originalCommit": {"oid": "7a2eb921572e7654677ce61900f5a5e138491bac"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2919, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}