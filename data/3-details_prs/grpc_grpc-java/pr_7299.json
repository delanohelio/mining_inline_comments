{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MzkwMjg3", "number": 7299, "title": "xds: manage load stats for all clusters in XdsClient", "bodyText": "Mostly an extensive refactoring work, might be awful to review (sorry about that \ud83d\ude22 ).\nCurrently we are having an issue for xDS routing:\nFor example, if we have two routes with each of them routing some RPCs to the same cluster, say clusterA. Our current architecture will create two identical CDS policy instances for clusterA (as well as the whole LB subtree). Then each of these two CDS policies' child EDS policy will create its own stats object and pass it to the XdsClient for load reporting. However, this is not what our current implementation expects and causes problem (fails the precondition check, it is completely not the usage of the load report client API).\nThis really is an issue caused by the current design&implementation contradicts what we previously had. After the RouteAction design is implemented, no more than one CDS policy will be created for the same cluster.\n\n\nMove the creation of LoadStatsStore (aka, the stats object) into XdsClient (as described in the design for refactoring xDS LB policies). The XdsClient is responsible for managing the lifetime of stats objects.\n\nThis helps mitigate the issue of current LB hierarchy for routing and traffic splitting enabled: there could be multiple CDS/EDS policy instances created for the same cluster. They should use the same stats object for recording loads.\nAlso this would be one step towards migrating to use XdsClient for stats object creation as mentioned in the xDS LB policy refactoring design.\n\n\n\nCounters for recording loads per locality also need to be reference counted, as each EDS policy for the same cluster will receive endpoints for the same group of localities, they will use the same load counters for recording each locality's loads.\n\n\nTests for the consumer side of the stats object is added (see LoadReportClientTest). Tests for the producer side is very poorly written given that LocalityStoreTest and EdsLoadBalancerTest are totally a mess. Hopefully we can clean them up soon.", "createdAt": "2020-08-07T05:01:13Z", "url": "https://github.com/grpc/grpc-java/pull/7299", "merged": true, "mergeCommit": {"oid": "f0a0e67e7b20afd5fe64708fdacd8928e0cdef13"}, "closed": true, "closedAt": "2020-08-11T17:58:04Z", "author": {"login": "voidzcy"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8dFFGAH2gAyNDY0MzkwMjg3OmQyZGY1YzFmNDM1NmRlMDBlOTg4ZGI3OTM1M2U3NGViYTViMGEyZjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc96PTIAFqTQ2NTI3ODA2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d2df5c1f4356de00e988db79353e74eba5b0a2f7", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/d2df5c1f4356de00e988db79353e74eba5b0a2f7", "committedDate": "2020-08-07T04:54:20Z", "message": "Introduce LoadStatsManager for managing stats for all clusters."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92f53bc4da500884c227137fbc3e63052486b02c", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/92f53bc4da500884c227137fbc3e63052486b02c", "committedDate": "2020-08-07T04:56:51Z", "message": "Use LoadStatsManager as the source of getting stats for load reporting."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e1b00b9ca432915fadb25509d8463889d8e2d50", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/1e1b00b9ca432915fadb25509d8463889d8e2d50", "committedDate": "2020-08-07T04:58:07Z", "message": "Change the XdsClient API for initiating load reporting."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2955ea500fab4a380089dcb20366702cd4b62ea", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/e2955ea500fab4a380089dcb20366702cd4b62ea", "committedDate": "2020-08-07T04:58:38Z", "message": "Clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0", "committedDate": "2020-08-07T05:01:55Z", "message": "Delete blank line."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjM5Mjk0", "url": "https://github.com/grpc/grpc-java/pull/7299#pullrequestreview-463639294", "createdAt": "2020-08-07T21:17:41Z", "commit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMToxNzo0MlrOG9oENg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMTozMDo0NFrOG9oj3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3Mjc1OA==", "bodyText": "I am removing the integration of orca utilities. They are not used, and even the new design architecture does not consider using it. They are effectively dead code. There is not reason to keep them there. They only make the implementation hard to read and test.", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r467272758", "createdAt": "2020-08-07T21:17:42Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "diffHunk": "@@ -108,46 +103,24 @@ abstract LocalityStore newLocalityStore(\n     private final Helper helper;\n     private final LoadBalancerProvider loadBalancerProvider;\n     private final ThreadSafeRandom random;\n-    private final LoadStatsStore loadStatsStore;\n-    private final OrcaPerRequestUtil orcaPerRequestUtil;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3MzkwOA==", "bodyText": "Inevitably to add this API. The original thought when first implementing LocalityStore class, it will always have a LoadStatsStore associated with it (same lifecycle). As I mentioned in the PR description, we should not record loads if load reporting is not enabled, so we should allow a LocalityStore to have no LoadStatsStore. And conceptually, we should allow load reporting to be toggled on/off in the lifetime of a LocalityStore.", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r467273908", "createdAt": "2020-08-07T21:21:08Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "diffHunk": "@@ -73,7 +70,7 @@\n \n   void updateDropPercentage(List<DropOverload> dropOverloads);\n \n-  void updateOobMetricsReportInterval(long reportIntervalNano);\n+  void setLoadStatsStore(@Nullable LoadStatsStore loadStatsStore);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3NDc2Ng==", "bodyText": "Borrowed the idea from Envoy's implementation: https://github.com/envoyproxy/envoy/blob/50ef0945fa2c5da4bff7627c3abf41fdd3b7cffd/source/common/upstream/load_stats_reporter.cc#L17", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r467274766", "createdAt": "2020-08-07T21:22:43Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/LoadStatsManager.java", "diffHunk": "@@ -0,0 +1,195 @@\n+/*\n+ * Copyright 2019 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import io.envoyproxy.envoy.api.v2.endpoint.ClusterStats;\n+import io.grpc.xds.EnvoyProtoData.Locality;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Manages all stats for client side load.\n+ */\n+final class LoadStatsManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3NzEyNw==", "bodyText": "Eliminated this wrapper. Move the interval recording into each LoadStatsStore's implementation. Since each LoadStatsStore represents a \"living report\", when taking a snapshot for the report, we could \"stamp an interval\" for the report. Since the report is queried every time for sending an LRS request, it totally makes sense to have the report already stamped with the interval.", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r467277127", "createdAt": "2020-08-07T21:25:55Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/LoadReportClient.java", "diffHunk": "@@ -386,27 +337,6 @@ private void cleanUp() {\n     }\n   }\n \n-  private final class LoadStatsEntity {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI4MDg2MA==", "bodyText": "This was potentially a problem. The lifecycle of a ChildHelper is different from the LoadStatsStore that used to record loads for the cluster that this locality belongs to. A ChildHelper's lifecycle is same as the presence of the corresponding locality. However, a LoadStatsStore's lifecycle is for the time since load reporting was last enabled. They are completely disjoint, so a ChildHelper should always pick up the freshest LoadStatsStore to record load.", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r467280860", "createdAt": "2020-08-07T21:30:44Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "diffHunk": "@@ -363,59 +336,33 @@ boolean isDeactivated() {\n       }\n \n       class ChildHelper extends ForwardingLoadBalancerHelper {\n-\n-        private final OrcaReportingHelperWrapper orcaReportingHelperWrapper;\n         private SubchannelPicker currentChildPicker = XdsSubchannelPickers.BUFFER_PICKER;\n         private ConnectivityState currentChildState = CONNECTING;\n \n-        ChildHelper() {\n-          final ClientLoadCounter counter = loadStatsStore.getLocalityCounter(locality);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0"}, "originalPosition": 199}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNDk2ODY0", "url": "https://github.com/grpc/grpc-java/pull/7299#pullrequestreview-463496864", "createdAt": "2020-08-07T17:51:15Z", "commit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzo1MToxNVrOG9iuHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOTozMzowNVrOG9ljbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4NTE4Mw==", "bodyText": "Can it be localityStore.stopLoadReprot()?", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r467185183", "createdAt": "2020-08-07T17:51:15Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -283,7 +282,7 @@ public void handleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n                 clusterName,\n                 clusterServiceName);\n             xdsClient.cancelClientStatsReport(clusterName, clusterServiceName);\n-            isReportingLoad = false;\n+            localityStore.setLoadStatsStore(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4NTQ4Ng==", "bodyText": "Can it be localityStore.startLoadReport(loadStatsStore);", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r467185486", "createdAt": "2020-08-07T17:51:57Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -272,8 +270,9 @@ public void handleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n                 \"Start reporting loads for cluster: {0}, cluster_service: {1}\",\n                 clusterName,\n                 clusterServiceName);\n-            xdsClient.reportClientStats(clusterName, clusterServiceName, loadStatsStore);\n-            isReportingLoad = true;\n+            LoadStatsStore loadStatsStore =\n+                xdsClient.reportClientStats(clusterName, clusterServiceName);\n+            localityStore.setLoadStatsStore(loadStatsStore);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4OTY4OQ==", "bodyText": "Probably you can do this inside of localityStore.reset() (at the end of it), then you don't need awkwardly do extra operation on localityStore after localityStore.reset() is called.", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r467189689", "createdAt": "2020-08-07T18:00:29Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -303,16 +302,17 @@ public boolean canHandleEmptyAddressListFromNameResolution() {\n \n       @Override\n       public void shutdown() {\n+        localityStore.reset();\n         if (isReportingLoad) {\n           logger.log(\n               XdsLogLevel.INFO,\n               \"Stop reporting loads for cluster: {0}, cluster_service: {1}\",\n               clusterName,\n               clusterServiceName);\n           xdsClient.cancelClientStatsReport(clusterName, clusterServiceName);\n+          localityStore.setLoadStatsStore(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIzMTU5Nw==", "bodyText": "Once set, should you add all existing localities to the loadStatsStore?", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r467231597", "createdAt": "2020-08-07T19:33:05Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/LocalityStore.java", "diffHunk": "@@ -224,6 +196,11 @@ public void updateDropPercentage(List<DropOverload> dropOverloads) {\n       this.dropOverloads = checkNotNull(dropOverloads, \"dropOverloads\");\n     }\n \n+    @Override\n+    public void setLoadStatsStore(@Nullable LoadStatsStore loadStatsStore) {\n+      this.loadStatsStore = loadStatsStore;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d39bca0f6468c0f70d27b36a0fa9dcc5f2a2a0"}, "originalPosition": 137}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "887e00c15d8322c2318a673fb149b77c67a29c1c", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/887e00c15d8322c2318a673fb149b77c67a29c1c", "committedDate": "2020-08-08T00:05:37Z", "message": "Modify the XdsClient load reporting/recording APIs to separate load recording and reporting flow."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58cb691ea5d3fb029d62826d02bdf997cafccda9", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/58cb691ea5d3fb029d62826d02bdf997cafccda9", "committedDate": "2020-08-08T00:06:25Z", "message": "Revert LocalityStore changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84232bdc494383cc5c922cc05228ecb48c6838b9", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/84232bdc494383cc5c922cc05228ecb48c6838b9", "committedDate": "2020-08-08T00:07:28Z", "message": "Elimite the unused LoadReportCallback."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "210a80335a87b8f307c016ab36ef92a913ab36a5", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/210a80335a87b8f307c016ab36ef92a913ab36a5", "committedDate": "2020-08-08T00:07:52Z", "message": "style issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "754b69f33976c6a1a32a0db386fb0f0da8bcd450", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/754b69f33976c6a1a32a0db386fb0f0da8bcd450", "committedDate": "2020-08-08T00:08:42Z", "message": "Delete a poorly written test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30d8c1775ba7d2c05af293108294ccb9780aca9c", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/30d8c1775ba7d2c05af293108294ccb9780aca9c", "committedDate": "2020-08-08T00:09:19Z", "message": "Use new XdsClient load reporting/recording APIs for managing per cluster:eds_service loads"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDUwODU2", "url": "https://github.com/grpc/grpc-java/pull/7299#pullrequestreview-464450856", "createdAt": "2020-08-10T17:55:54Z", "commit": {"oid": "30d8c1775ba7d2c05af293108294ccb9780aca9c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzo1NTo1NVrOG-ZR2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODo0OToxMVrOG-bB8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3OTA2Nw==", "bodyText": "revert the new line", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r468079067", "createdAt": "2020-08-10T17:55:55Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -236,6 +236,7 @@ public int hashCode() {\n     /**\n      * Load-balances endpoints for a given cluster.\n      */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d8c1775ba7d2c05af293108294ccb9780aca9c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwNjI5Ng==", "bodyText": "Where is isReportingLoad set true? I know is hard to test load report in EdsLoadBalancer because EdsLoadBalancerTest uses a real XdsClientImpl with fake channel.", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r468106296", "createdAt": "2020-08-10T18:46:11Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -303,16 +302,17 @@ public boolean canHandleEmptyAddressListFromNameResolution() {\n \n       @Override\n       public void shutdown() {\n+        localityStore.reset();\n         if (isReportingLoad) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d8c1775ba7d2c05af293108294ccb9780aca9c"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwNzc2Mg==", "bodyText": "Add log?", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r468107762", "createdAt": "2020-08-10T18:49:11Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/LoadStatsManager.java", "diffHunk": "@@ -0,0 +1,196 @@\n+/*\n+ * Copyright 2019 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static com.google.common.base.Preconditions.checkState;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import io.envoyproxy.envoy.api.v2.endpoint.ClusterStats;\n+import io.grpc.xds.EnvoyProtoData.Locality;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Manages all stats for client side load.\n+ */\n+final class LoadStatsManager {\n+  private final LoadStatsStoreFactory loadStatsStoreFactory;\n+  private final Map<String, Map<String, RefCounted>> loadStatsStores = new HashMap<>();\n+\n+  LoadStatsManager() {\n+    this(LoadStatsStoreImpl.getDefaultFactory());\n+  }\n+\n+  @VisibleForTesting\n+  LoadStatsManager(LoadStatsStoreFactory factory) {\n+    this.loadStatsStoreFactory = factory;\n+  }\n+\n+  /**\n+   * Adds and retrieves the stats object for tracking loads for the given cluster:cluster_service.\n+   * The returned {@link LoadStatsStore} is reference-counted, caller should use\n+   * {@link #removeLoadStats} to release the reference when it is no longer used.\n+   */\n+  LoadStatsStore addLoadStats(String cluster, @Nullable String clusterService) {\n+    if (!loadStatsStores.containsKey(cluster)) {\n+      loadStatsStores.put(cluster, new HashMap<String, RefCounted>());\n+    }\n+    Map<String, RefCounted> clusterLoadStatsStores = loadStatsStores.get(cluster);\n+    if (!clusterLoadStatsStores.containsKey(clusterService)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d8c1775ba7d2c05af293108294ccb9780aca9c"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d9d25eb51083a8bff8d05498b88d2e7de7a0de6", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/4d9d25eb51083a8bff8d05498b88d2e7de7a0de6", "committedDate": "2020-08-10T19:16:33Z", "message": "Fixed missing toggling isReportingLoad."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "04a0fb4718cf0427b84884aba91a2cf6869006ed", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/04a0fb4718cf0427b84884aba91a2cf6869006ed", "committedDate": "2020-08-10T19:10:00Z", "message": "Fixed missing toggling isReportingLoad."}, "afterCommit": {"oid": "4d9d25eb51083a8bff8d05498b88d2e7de7a0de6", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/4d9d25eb51083a8bff8d05498b88d2e7de7a0de6", "committedDate": "2020-08-10T19:16:33Z", "message": "Fixed missing toggling isReportingLoad."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NTE3NTE0", "url": "https://github.com/grpc/grpc-java/pull/7299#pullrequestreview-464517514", "createdAt": "2020-08-10T19:29:15Z", "commit": {"oid": "4d9d25eb51083a8bff8d05498b88d2e7de7a0de6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOToyOToxNVrOG-cjJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOToyOToxNVrOG-cjJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEzMjY0NA==", "bodyText": "Just for reverting back to the original implementation. Please see changes from all commits.", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r468132644", "createdAt": "2020-08-10T19:29:15Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -312,6 +312,7 @@ public void shutdown() {\n           xdsClient.cancelClientStatsReport();\n           isReportingLoad = false;\n         }\n+        localityStore.reset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9d25eb51083a8bff8d05498b88d2e7de7a0de6"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b035d3e46d343ff88a24f7a03f7374e6eaff1ac3", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/b035d3e46d343ff88a24f7a03f7374e6eaff1ac3", "committedDate": "2020-08-10T20:20:53Z", "message": "Clean up logs for controling load reporting."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NTY0MjIy", "url": "https://github.com/grpc/grpc-java/pull/7299#pullrequestreview-464564222", "createdAt": "2020-08-10T20:28:22Z", "commit": {"oid": "b035d3e46d343ff88a24f7a03f7374e6eaff1ac3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd48b69c675dad43896fcab6b9714009dbe94514", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/bd48b69c675dad43896fcab6b9714009dbe94514", "committedDate": "2020-08-11T04:48:15Z", "message": "Add a reference counting wrapper for objects."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84e6579217486006030ac13b6b010047d802096b", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/84e6579217486006030ac13b6b010047d802096b", "committedDate": "2020-08-11T04:49:07Z", "message": "Eliminate counter's internal reference tracking, use external reference counting."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d35e66e12919a94251f7a6cc0918e8962d6029a1", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/d35e66e12919a94251f7a6cc0918e8962d6029a1", "committedDate": "2020-08-11T04:49:47Z", "message": "Reference count the localities added for load recording."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "801b23d9db2060fce4c5a5d76bfddab16104aaa0", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/801b23d9db2060fce4c5a5d76bfddab16104aaa0", "committedDate": "2020-08-11T05:04:18Z", "message": "Use the shared class for reference count wrapper."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NzU0MDUx", "url": "https://github.com/grpc/grpc-java/pull/7299#pullrequestreview-464754051", "createdAt": "2020-08-11T05:17:00Z", "commit": {"oid": "801b23d9db2060fce4c5a5d76bfddab16104aaa0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNToxNzowMFrOG-orjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNToyMzozNVrOG-oyUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMzMTQwNA==", "bodyText": "As a reminder, active is true if this counter is currently in-use by some LB policy to track loads sent to a specific locality.\nWe do not mark internally if a counter is still in use by some LB policy, instead ref-count the usage of this counter externally by wrapping a counter with ReferenceCounted.", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r468331404", "createdAt": "2020-08-11T05:17:00Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/ClientLoadCounter.java", "diffHunk": "@@ -54,27 +54,10 @@\n   private final AtomicLong callsIssued = new AtomicLong();\n   private final MetricRecorder[] metricRecorders = new MetricRecorder[THREAD_BALANCING_FACTOR];\n \n-  // True if this counter continues to record stats after next snapshot. Otherwise, it will be\n-  // discarded.\n-  private boolean active;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801b23d9db2060fce4c5a5d76bfddab16104aaa0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMzMTU5NA==", "bodyText": "Replaced by individual setters as the way of testing has changed.", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r468331594", "createdAt": "2020-08-11T05:17:49Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/ClientLoadCounter.java", "diffHunk": "@@ -54,27 +54,10 @@\n   private final AtomicLong callsIssued = new AtomicLong();\n   private final MetricRecorder[] metricRecorders = new MetricRecorder[THREAD_BALANCING_FACTOR];\n \n-  // True if this counter continues to record stats after next snapshot. Otherwise, it will be\n-  // discarded.\n-  private boolean active;\n-\n   ClientLoadCounter() {\n     for (int i = 0; i < THREAD_BALANCING_FACTOR; i++) {\n       metricRecorders[i] = new MetricRecorder();\n     }\n-    active = true;\n-  }\n-\n-  /**\n-   * Must only be used for testing.\n-   */\n-  @VisibleForTesting\n-  ClientLoadCounter(long callsSucceeded, long callsInProgress, long callsFailed, long callsIssued) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801b23d9db2060fce4c5a5d76bfddab16104aaa0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMzMzEzNg==", "bodyText": "As the specification of this class says, this wrapper class does not own the object, the real owner of the object takes the responsibility for throwing away the object when the reference count reaches 0. So access to the object should still be allowed even if the reference count reaches 0. This is useful for load counters: we need reference count to know when to evict them from the stats object (aka, ref count = 0), but we still want counters with ref count = 0 to stay there until its remaining values are read off.", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r468333136", "createdAt": "2020-08-11T05:23:35Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/ReferenceCounted.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static com.google.common.base.Preconditions.checkState;\n+\n+/**\n+ * A reference count wrapper for objects. This class does not take the ownership for the object,\n+ * but only provides usage counting. The real owner of the wrapped object is responsible for\n+ * managing the lifecycle of the object.\n+ *\n+ * <p>Intended for a container class to keep track of lifecycle for elements it contains. This\n+ * wrapper itself should never be returned to the consumers of the elements to avoid reference\n+ * counts being leaked.\n+ */\n+final class ReferenceCounted<T> {\n+  private final T instance;\n+  private int refs;\n+\n+  private ReferenceCounted(T instance) {\n+    this.instance = instance;\n+  }\n+\n+  static <T> ReferenceCounted<T> wrap(T instance) {\n+    checkNotNull(instance, \"instance\");\n+    return new ReferenceCounted<>(instance);\n+  }\n+\n+  void retain() {\n+    refs++;\n+  }\n+\n+  void release() {\n+    checkState(refs > 0, \"reference reached 0\");\n+    refs--;\n+  }\n+\n+  int getReferenceCount() {\n+    return refs;\n+  }\n+\n+  T get() {\n+    return instance;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801b23d9db2060fce4c5a5d76bfddab16104aaa0"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MjMyMDMx", "url": "https://github.com/grpc/grpc-java/pull/7299#pullrequestreview-465232031", "createdAt": "2020-08-11T16:26:46Z", "commit": {"oid": "d35e66e12919a94251f7a6cc0918e8962d6029a1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNjoyNjo0NlrOG-_tQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNjozNjowMlrOG_AExA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcwODY3NA==", "bodyText": "Why changed this?", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r468708674", "createdAt": "2020-08-11T16:26:46Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/LoadStatsStoreImpl.java", "diffHunk": "@@ -125,27 +122,25 @@ public ClusterStats generateLoadReport() {\n \n   @Override\n   public void addLocality(final Locality locality) {\n-    ClientLoadCounter counter = localityLoadCounters.get(locality);\n-    checkState(counter == null || !counter.isActive(),\n-        \"An active counter for locality %s already exists\", locality);\n+    ReferenceCounted<ClientLoadCounter> counter = localityLoadCounters.get(locality);\n     if (counter == null) {\n-      localityLoadCounters.put(locality, new ClientLoadCounter());\n-    } else {\n-      counter.setActive(true);\n+      counter = ReferenceCounted.wrap(new ClientLoadCounter());\n+      localityLoadCounters.put(locality, counter);\n     }\n+    counter.retain();\n   }\n \n   @Override\n   public void removeLocality(final Locality locality) {\n-    ClientLoadCounter counter = localityLoadCounters.get(locality);\n-    checkState(counter != null && counter.isActive(),\n-        \"No active counter for locality %s exists\", locality);\n-    counter.setActive(false);\n+    ReferenceCounted<ClientLoadCounter> counter = localityLoadCounters.get(locality);\n+    counter.release();\n   }\n \n+  @Nullable\n   @Override\n   public ClientLoadCounter getLocalityCounter(final Locality locality) {\n-    return localityLoadCounters.get(locality);\n+    ReferenceCounted<ClientLoadCounter> counter = localityLoadCounters.get(locality);\n+    return counter == null || counter.getReferenceCount() == 0 ? null : counter.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d35e66e12919a94251f7a6cc0918e8962d6029a1"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcxNDY5Mg==", "bodyText": "What about ClientLoadCounter addLocality(Locality locality)\nand remove ClientLoadCounter getLocalityCounter(Locality locality) ?", "url": "https://github.com/grpc/grpc-java/pull/7299#discussion_r468714692", "createdAt": "2020-08-11T16:36:02Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/LoadStatsStoreImpl.java", "diffHunk": "@@ -105,32 +114,33 @@ public ClusterStats generateLoadReport() {\n           .setDroppedCount(drops));\n     }\n     statsBuilder.setTotalDroppedRequests(totalDrops);\n+    statsBuilder.setLoadReportInterval(\n+        Durations.fromNanos(stopwatch.elapsed(TimeUnit.NANOSECONDS)));\n+    stopwatch.reset().start();\n     return statsBuilder.build();\n   }\n \n   @Override\n   public void addLocality(final Locality locality) {\n-    ClientLoadCounter counter = localityLoadCounters.get(locality);\n-    checkState(counter == null || !counter.isActive(),\n-        \"An active counter for locality %s already exists\", locality);\n+    ReferenceCounted<ClientLoadCounter> counter = localityLoadCounters.get(locality);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801b23d9db2060fce4c5a5d76bfddab16104aaa0"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b4199d7b4a021309341adcf7a6b05065d336b6c", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/6b4199d7b4a021309341adcf7a6b05065d336b6c", "committedDate": "2020-08-11T17:08:28Z", "message": "Combine add and get load counter method for LoadStatsStore."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Mjc4MDY5", "url": "https://github.com/grpc/grpc-java/pull/7299#pullrequestreview-465278069", "createdAt": "2020-08-11T17:26:40Z", "commit": {"oid": "6b4199d7b4a021309341adcf7a6b05065d336b6c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4154, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}