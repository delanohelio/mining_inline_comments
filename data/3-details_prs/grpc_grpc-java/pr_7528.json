{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MTc1ODky", "number": 7528, "title": "xds: synchronize LoadReportClient operations with lock", "bodyText": "This is a sub-PR of #7533.", "createdAt": "2020-10-17T02:24:46Z", "url": "https://github.com/grpc/grpc-java/pull/7528", "merged": true, "mergeCommit": {"oid": "0ec3bfb47167b86f0689a14ac824fbbdeafc8411"}, "closed": true, "closedAt": "2020-10-20T23:58:09Z", "author": {"login": "voidzcy"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTQmiLAH2gAyNTA1MTc1ODkyOjQ0MjE3NDFkZjdkYmE3Yzg0YWI0ZjIwMTlmYmY1M2NlMDU3NzIzNWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUhXdsgFqTUxMzIwMTU3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4421741df7dba7c84ab4f2019fbf53ce0577235f", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/4421741df7dba7c84ab4f2019fbf53ce0577235f", "committedDate": "2020-10-17T01:22:22Z", "message": "Eliminate unnecessary response conversion."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa51f4854bc84def8457956c4a0ea2364e3c9f42", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/fa51f4854bc84def8457956c4a0ea2364e3c9f42", "committedDate": "2020-10-17T02:22:28Z", "message": "Create and use its own SynchronizationContext in LoadReportClient."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwODY2Nzc3", "url": "https://github.com/grpc/grpc-java/pull/7528#pullrequestreview-510866777", "createdAt": "2020-10-17T02:27:02Z", "commit": {"oid": "fa51f4854bc84def8457956c4a0ea2364e3c9f42"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMjoyNzowMlrOHjTmlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMjoyNzowMlrOHjTmlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MzM4Mg==", "bodyText": "These two helper classes are redundant, they just repackage the fields in the proto messages/data structs. We can simply pass them as individual arguments to methods to be called.", "url": "https://github.com/grpc/grpc-java/pull/7528#discussion_r506783382", "createdAt": "2020-10-17T02:27:02Z", "author": {"login": "voidzcy"}, "path": "xds/src/main/java/io/grpc/xds/LoadReportClient.java", "diffHunk": "@@ -392,93 +426,24 @@ public void run() {\n           LoadReportingServiceGrpc.newStub(xdsChannel.getManagedChannel());\n       lrsRequestWriterV3 = stubV3.withWaitForReady().streamLoadStats(lrsResponseReaderV3);\n       logger.log(XdsLogLevel.DEBUG, \"Sending initial LRS request\");\n-      sendLoadStatsRequest(new LoadStatsRequestData(node, null));\n+      sendLoadStatsRequest(Collections.<ClusterStats>emptyList());\n     }\n \n     @Override\n-    void sendLoadStatsRequest(LoadStatsRequestData request) {\n-      LoadStatsRequest requestProto = request.toEnvoyProtoV3();\n-      lrsRequestWriterV3.onNext(requestProto);\n-      logger.log(XdsLogLevel.DEBUG, \"Sent LoadStatsRequest\\n{0}\", requestProto);\n+    void sendLoadStatsRequest(List<ClusterStats> clusterStatsList) {\n+      LoadStatsRequest.Builder requestBuilder =\n+          LoadStatsRequest.newBuilder().setNode(node.toEnvoyProtoNode());\n+      for (ClusterStats stats : clusterStatsList) {\n+        requestBuilder.addClusterStats(stats.toEnvoyProtoClusterStats());\n+      }\n+      LoadStatsRequest request = requestBuilder.build();\n+      lrsRequestWriterV3.onNext(request);\n+      logger.log(XdsLogLevel.DEBUG, \"Sent LoadStatsRequest\\n{0}\", request);\n     }\n \n     @Override\n     void sendError(Exception error) {\n       lrsRequestWriterV3.onError(error);\n     }\n   }\n-\n-  private static final class LoadStatsRequestData {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa51f4854bc84def8457956c4a0ea2364e3c9f42"}, "originalPosition": 258}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27562b9ba6b3345782baa08d4b2f39c0bca6f9be", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/27562b9ba6b3345782baa08d4b2f39c0bca6f9be", "committedDate": "2020-10-19T18:54:30Z", "message": "Eliminated usage of SynchronizationContext in LoadReportClient compleltely to avoid mixing lock and SynchronizationContext for its caller."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "601cef3ec7f82cf7592c4377d9e6313a8e015a12", "author": {"user": {"login": "voidzcy", "name": "Chengyuan Zhang"}}, "url": "https://github.com/grpc/grpc-java/commit/601cef3ec7f82cf7592c4377d9e6313a8e015a12", "committedDate": "2020-10-19T19:40:29Z", "message": "Fixed rawtype warning."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMDUyOTU0", "url": "https://github.com/grpc/grpc-java/pull/7528#pullrequestreview-513052954", "createdAt": "2020-10-20T19:12:34Z", "commit": {"oid": "601cef3ec7f82cf7592c4377d9e6313a8e015a12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxOToxMjozNVrOHlNNpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxOToxMjozNVrOHlNNpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc3NTg0NA==", "bodyText": "There is a race condition:\n\nstopLoadReporting() is called and holds the lock.\nLrsRpcRetryTask.run() is called, trying to acquire the lock, and being blocked because the lock can not be acquired.\nstopLoadReporting() turns started = false, and then calls lrsRpcRetryTimer.cancel(false) which does nothing because LrsRpcRetryTask.run() is already running and still trying to acquire the lock.\nstopLoadReporting() returns and releases the lock.\nLrsRpcRetryTask.run() finally acquires the lock and calls startLrsRpc().", "url": "https://github.com/grpc/grpc-java/pull/7528#discussion_r508775844", "createdAt": "2020-10-20T19:12:35Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/LoadReportClient.java", "diffHunk": "@@ -97,35 +92,39 @@\n    * no-op.\n    */\n   void startLoadReporting() {\n-    if (started) {\n-      return;\n+    synchronized (lock) {\n+      if (started) {\n+        return;\n+      }\n+      started = true;\n+      logger.log(XdsLogLevel.INFO, \"Starting load reporting RPC\");\n+      startLrsRpc();\n     }\n-    started = true;\n-    logger.log(XdsLogLevel.INFO, \"Starting load reporting RPC\");\n-    startLrsRpc();\n   }\n \n   /**\n    * Terminates load reporting. Calling this method on an already stopped\n    * {@link LoadReportClient} is no-op.\n    */\n   void stopLoadReporting() {\n-    if (!started) {\n-      return;\n-    }\n-    logger.log(XdsLogLevel.INFO, \"Stopping load reporting RPC\");\n-    if (lrsRpcRetryTimer != null) {\n-      lrsRpcRetryTimer.cancel();\n-    }\n-    if (lrsStream != null) {\n-      lrsStream.close(Status.CANCELLED.withDescription(\"stop load reporting\").asException());\n+    synchronized (lock) {\n+      if (!started) {\n+        return;\n+      }\n+      started = false;\n+      logger.log(XdsLogLevel.INFO, \"Stopping load reporting RPC\");\n+      if (lrsRpcRetryTimer != null) {\n+        lrsRpcRetryTimer.cancel(false);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "601cef3ec7f82cf7592c4377d9e6313a8e015a12"}, "originalPosition": 103}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMjAxNTcz", "url": "https://github.com/grpc/grpc-java/pull/7528#pullrequestreview-513201573", "createdAt": "2020-10-20T23:16:39Z", "commit": {"oid": "601cef3ec7f82cf7592c4377d9e6313a8e015a12"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMzoxNjozOVrOHlUeMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMzoxNjozOVrOHlUeMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5NDc3MQ==", "bodyText": "nit: We don't need check if (delayNanos <= 0), schedule() should handle <=0 delay correctly.", "url": "https://github.com/grpc/grpc-java/pull/7528#discussion_r508894771", "createdAt": "2020-10-20T23:16:39Z", "author": {"login": "dapengzhang0"}, "path": "xds/src/main/java/io/grpc/xds/LoadReportClient.java", "diffHunk": "@@ -263,8 +267,7 @@ private void handleStreamClosed(Status status) {\n         startLrsRpc();\n       } else {\n         lrsRpcRetryTimer =\n-            syncContext.schedule(new LrsRpcRetryTask(), delayNanos, TimeUnit.NANOSECONDS,\n-                timerService);\n+            timerService.schedule(new LrsRpcRetryTask(), delayNanos, TimeUnit.NANOSECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "601cef3ec7f82cf7592c4377d9e6313a8e015a12"}, "originalPosition": 246}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3921, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}