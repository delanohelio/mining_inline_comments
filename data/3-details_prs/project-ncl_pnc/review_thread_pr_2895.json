{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNjg4MDU5", "number": 2895, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODoxMzowOVrODo1X-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODoxMzowOVrODo1X-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTQ0MTIxOnYy", "diffSide": "RIGHT", "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/VertxWebSocketClient.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODoxMzoxMFrOF3oVSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzo1Mzo0M1rOF4F9kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3NjgxMA==", "bodyText": "I'd say just use as delayMultiplier the number '2'.\nAnd with that you can optimize by doing a bitwise shift left to \"multiply\" by 2.", "url": "https://github.com/project-ncl/pnc/pull/2895#discussion_r393876810", "createdAt": "2020-03-17T18:13:10Z", "author": {"login": "thescouser89"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/VertxWebSocketClient.java", "diffHunk": "@@ -0,0 +1,317 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2019 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient.websocket;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+\n+import org.jboss.pnc.common.json.JsonOutputConverterMapper;\n+import org.jboss.pnc.dto.notification.BuildChangedNotification;\n+import org.jboss.pnc.dto.notification.BuildConfigurationCreation;\n+import org.jboss.pnc.dto.notification.BuildPushResultNotification;\n+import org.jboss.pnc.dto.notification.GroupBuildChangedNotification;\n+import org.jboss.pnc.dto.notification.Notification;\n+import org.jboss.pnc.dto.notification.RepositoryCreationFailure;\n+import org.jboss.pnc.dto.notification.SCMRepositoryCreationSuccess;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpClient;\n+import io.vertx.core.http.WebSocket;\n+\n+/**\n+ * @author <a href=\"mailto:jmichalo@redhat.com\">Jan Michalov</a>\n+ */\n+public class VertxWebSocketClient implements WebSocketClient, AutoCloseable {\n+\n+    private static final Logger log = LoggerFactory.getLogger(VertxWebSocketClient.class);\n+\n+    private static final ObjectMapper objectMapper = JsonOutputConverterMapper.getMapper();\n+\n+    private final Vertx vertx;\n+\n+    private HttpClient httpClient;\n+\n+    private WebSocket webSocketConnection;\n+\n+    private Set<Dispatcher> dispatchers = new HashSet<>();\n+\n+    private Set<CompletableFuture<Notification>> singleNotificationFutures = new HashSet<>();\n+\n+    /**\n+     * number of attempted retries before client throws an exception\n+     */\n+    private int maximumRetries = 5;\n+\n+    private int numberOfRetries = 0;\n+\n+    /**\n+     * a multiplier that increases delay between reconnect attempts\n+     */\n+    private float delayMultiplier = 1.5F;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d82fb43d635125a3905b377cf68670ad5749063"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE3NTAzMw==", "bodyText": "For sure can change it to 2. With bitwise shift it forces the number to be 2 and doesn't allow for the number to change (currently can be set through constructor). Do we want to hard code it?", "url": "https://github.com/project-ncl/pnc/pull/2895#discussion_r394175033", "createdAt": "2020-03-18T08:28:05Z", "author": {"login": "michalovjan"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/VertxWebSocketClient.java", "diffHunk": "@@ -0,0 +1,317 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2019 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient.websocket;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+\n+import org.jboss.pnc.common.json.JsonOutputConverterMapper;\n+import org.jboss.pnc.dto.notification.BuildChangedNotification;\n+import org.jboss.pnc.dto.notification.BuildConfigurationCreation;\n+import org.jboss.pnc.dto.notification.BuildPushResultNotification;\n+import org.jboss.pnc.dto.notification.GroupBuildChangedNotification;\n+import org.jboss.pnc.dto.notification.Notification;\n+import org.jboss.pnc.dto.notification.RepositoryCreationFailure;\n+import org.jboss.pnc.dto.notification.SCMRepositoryCreationSuccess;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpClient;\n+import io.vertx.core.http.WebSocket;\n+\n+/**\n+ * @author <a href=\"mailto:jmichalo@redhat.com\">Jan Michalov</a>\n+ */\n+public class VertxWebSocketClient implements WebSocketClient, AutoCloseable {\n+\n+    private static final Logger log = LoggerFactory.getLogger(VertxWebSocketClient.class);\n+\n+    private static final ObjectMapper objectMapper = JsonOutputConverterMapper.getMapper();\n+\n+    private final Vertx vertx;\n+\n+    private HttpClient httpClient;\n+\n+    private WebSocket webSocketConnection;\n+\n+    private Set<Dispatcher> dispatchers = new HashSet<>();\n+\n+    private Set<CompletableFuture<Notification>> singleNotificationFutures = new HashSet<>();\n+\n+    /**\n+     * number of attempted retries before client throws an exception\n+     */\n+    private int maximumRetries = 5;\n+\n+    private int numberOfRetries = 0;\n+\n+    /**\n+     * a multiplier that increases delay between reconnect attempts\n+     */\n+    private float delayMultiplier = 1.5F;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3NjgxMA=="}, "originalCommit": {"oid": "9d82fb43d635125a3905b377cf68670ad5749063"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI2NzE3NQ==", "bodyText": "I once heard some thing about premature optimization. Doesn't it apply here?", "url": "https://github.com/project-ncl/pnc/pull/2895#discussion_r394267175", "createdAt": "2020-03-18T11:08:15Z", "author": {"login": "janinko"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/VertxWebSocketClient.java", "diffHunk": "@@ -0,0 +1,317 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2019 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient.websocket;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+\n+import org.jboss.pnc.common.json.JsonOutputConverterMapper;\n+import org.jboss.pnc.dto.notification.BuildChangedNotification;\n+import org.jboss.pnc.dto.notification.BuildConfigurationCreation;\n+import org.jboss.pnc.dto.notification.BuildPushResultNotification;\n+import org.jboss.pnc.dto.notification.GroupBuildChangedNotification;\n+import org.jboss.pnc.dto.notification.Notification;\n+import org.jboss.pnc.dto.notification.RepositoryCreationFailure;\n+import org.jboss.pnc.dto.notification.SCMRepositoryCreationSuccess;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpClient;\n+import io.vertx.core.http.WebSocket;\n+\n+/**\n+ * @author <a href=\"mailto:jmichalo@redhat.com\">Jan Michalov</a>\n+ */\n+public class VertxWebSocketClient implements WebSocketClient, AutoCloseable {\n+\n+    private static final Logger log = LoggerFactory.getLogger(VertxWebSocketClient.class);\n+\n+    private static final ObjectMapper objectMapper = JsonOutputConverterMapper.getMapper();\n+\n+    private final Vertx vertx;\n+\n+    private HttpClient httpClient;\n+\n+    private WebSocket webSocketConnection;\n+\n+    private Set<Dispatcher> dispatchers = new HashSet<>();\n+\n+    private Set<CompletableFuture<Notification>> singleNotificationFutures = new HashSet<>();\n+\n+    /**\n+     * number of attempted retries before client throws an exception\n+     */\n+    private int maximumRetries = 5;\n+\n+    private int numberOfRetries = 0;\n+\n+    /**\n+     * a multiplier that increases delay between reconnect attempts\n+     */\n+    private float delayMultiplier = 1.5F;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3NjgxMA=="}, "originalCommit": {"oid": "9d82fb43d635125a3905b377cf68670ad5749063"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI2OTk4Nw==", "bodyText": "errm, changing from 1.5 to 2 is a pretty big increase in backoff factor... isn't 1.3 usually the standard?", "url": "https://github.com/project-ncl/pnc/pull/2895#discussion_r394269987", "createdAt": "2020-03-18T11:13:35Z", "author": {"login": "alexcreasy"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/VertxWebSocketClient.java", "diffHunk": "@@ -0,0 +1,317 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2019 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient.websocket;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+\n+import org.jboss.pnc.common.json.JsonOutputConverterMapper;\n+import org.jboss.pnc.dto.notification.BuildChangedNotification;\n+import org.jboss.pnc.dto.notification.BuildConfigurationCreation;\n+import org.jboss.pnc.dto.notification.BuildPushResultNotification;\n+import org.jboss.pnc.dto.notification.GroupBuildChangedNotification;\n+import org.jboss.pnc.dto.notification.Notification;\n+import org.jboss.pnc.dto.notification.RepositoryCreationFailure;\n+import org.jboss.pnc.dto.notification.SCMRepositoryCreationSuccess;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpClient;\n+import io.vertx.core.http.WebSocket;\n+\n+/**\n+ * @author <a href=\"mailto:jmichalo@redhat.com\">Jan Michalov</a>\n+ */\n+public class VertxWebSocketClient implements WebSocketClient, AutoCloseable {\n+\n+    private static final Logger log = LoggerFactory.getLogger(VertxWebSocketClient.class);\n+\n+    private static final ObjectMapper objectMapper = JsonOutputConverterMapper.getMapper();\n+\n+    private final Vertx vertx;\n+\n+    private HttpClient httpClient;\n+\n+    private WebSocket webSocketConnection;\n+\n+    private Set<Dispatcher> dispatchers = new HashSet<>();\n+\n+    private Set<CompletableFuture<Notification>> singleNotificationFutures = new HashSet<>();\n+\n+    /**\n+     * number of attempted retries before client throws an exception\n+     */\n+    private int maximumRetries = 5;\n+\n+    private int numberOfRetries = 0;\n+\n+    /**\n+     * a multiplier that increases delay between reconnect attempts\n+     */\n+    private float delayMultiplier = 1.5F;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3NjgxMA=="}, "originalCommit": {"oid": "9d82fb43d635125a3905b377cf68670ad5749063"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3Mjc4MA==", "bodyText": "actually I don't know where I got 1.3 from, my brain offered it up, but I can't find anything to back it up...", "url": "https://github.com/project-ncl/pnc/pull/2895#discussion_r394272780", "createdAt": "2020-03-18T11:18:57Z", "author": {"login": "alexcreasy"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/VertxWebSocketClient.java", "diffHunk": "@@ -0,0 +1,317 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2019 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient.websocket;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+\n+import org.jboss.pnc.common.json.JsonOutputConverterMapper;\n+import org.jboss.pnc.dto.notification.BuildChangedNotification;\n+import org.jboss.pnc.dto.notification.BuildConfigurationCreation;\n+import org.jboss.pnc.dto.notification.BuildPushResultNotification;\n+import org.jboss.pnc.dto.notification.GroupBuildChangedNotification;\n+import org.jboss.pnc.dto.notification.Notification;\n+import org.jboss.pnc.dto.notification.RepositoryCreationFailure;\n+import org.jboss.pnc.dto.notification.SCMRepositoryCreationSuccess;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpClient;\n+import io.vertx.core.http.WebSocket;\n+\n+/**\n+ * @author <a href=\"mailto:jmichalo@redhat.com\">Jan Michalov</a>\n+ */\n+public class VertxWebSocketClient implements WebSocketClient, AutoCloseable {\n+\n+    private static final Logger log = LoggerFactory.getLogger(VertxWebSocketClient.class);\n+\n+    private static final ObjectMapper objectMapper = JsonOutputConverterMapper.getMapper();\n+\n+    private final Vertx vertx;\n+\n+    private HttpClient httpClient;\n+\n+    private WebSocket webSocketConnection;\n+\n+    private Set<Dispatcher> dispatchers = new HashSet<>();\n+\n+    private Set<CompletableFuture<Notification>> singleNotificationFutures = new HashSet<>();\n+\n+    /**\n+     * number of attempted retries before client throws an exception\n+     */\n+    private int maximumRetries = 5;\n+\n+    private int numberOfRetries = 0;\n+\n+    /**\n+     * a multiplier that increases delay between reconnect attempts\n+     */\n+    private float delayMultiplier = 1.5F;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3NjgxMA=="}, "originalCommit": {"oid": "9d82fb43d635125a3905b377cf68670ad5749063"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM2MjI1OA==", "bodyText": "I've made that number up, so I am free to change it to whatever you want. We can also make it customizable through CLI config or smthing like that.", "url": "https://github.com/project-ncl/pnc/pull/2895#discussion_r394362258", "createdAt": "2020-03-18T13:53:43Z", "author": {"login": "michalovjan"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/VertxWebSocketClient.java", "diffHunk": "@@ -0,0 +1,317 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2019 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient.websocket;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+\n+import org.jboss.pnc.common.json.JsonOutputConverterMapper;\n+import org.jboss.pnc.dto.notification.BuildChangedNotification;\n+import org.jboss.pnc.dto.notification.BuildConfigurationCreation;\n+import org.jboss.pnc.dto.notification.BuildPushResultNotification;\n+import org.jboss.pnc.dto.notification.GroupBuildChangedNotification;\n+import org.jboss.pnc.dto.notification.Notification;\n+import org.jboss.pnc.dto.notification.RepositoryCreationFailure;\n+import org.jboss.pnc.dto.notification.SCMRepositoryCreationSuccess;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpClient;\n+import io.vertx.core.http.WebSocket;\n+\n+/**\n+ * @author <a href=\"mailto:jmichalo@redhat.com\">Jan Michalov</a>\n+ */\n+public class VertxWebSocketClient implements WebSocketClient, AutoCloseable {\n+\n+    private static final Logger log = LoggerFactory.getLogger(VertxWebSocketClient.class);\n+\n+    private static final ObjectMapper objectMapper = JsonOutputConverterMapper.getMapper();\n+\n+    private final Vertx vertx;\n+\n+    private HttpClient httpClient;\n+\n+    private WebSocket webSocketConnection;\n+\n+    private Set<Dispatcher> dispatchers = new HashSet<>();\n+\n+    private Set<CompletableFuture<Notification>> singleNotificationFutures = new HashSet<>();\n+\n+    /**\n+     * number of attempted retries before client throws an exception\n+     */\n+    private int maximumRetries = 5;\n+\n+    private int numberOfRetries = 0;\n+\n+    /**\n+     * a multiplier that increases delay between reconnect attempts\n+     */\n+    private float delayMultiplier = 1.5F;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3NjgxMA=="}, "originalCommit": {"oid": "9d82fb43d635125a3905b377cf68670ad5749063"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1904, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}