{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTAwNTE1", "number": 3090, "title": "Javadoc", "bodyText": "", "createdAt": "2020-06-10T14:35:54Z", "url": "https://github.com/project-ncl/pnc/pull/3090", "merged": true, "mergeCommit": {"oid": "5214faf0e42b174e80a1d09d1d45d6173cc5ecf7"}, "closed": true, "closedAt": "2020-06-17T11:17:43Z", "author": {"login": "janinko"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp6nBzAH2gAyNDMyNTAwNTE1OjU2NTc2MGJkODQ1ZTMwZDUwOTkyODAyZGQ4NGZjN2QwZDhhNmM1NmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsGO1ZgBqjM0NTI2MzgwNTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "565760bd845e30d50992802dd84fc7d0d8a6c56d", "author": {"user": {"login": "janinko", "name": "Honza Br\u00e1zdil"}}, "url": "https://github.com/project-ncl/pnc/commit/565760bd845e30d50992802dd84fc7d0d8a6c56d", "committedDate": "2020-06-10T14:34:06Z", "message": "move non-entity DTO to respones subpackage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MTQ3ODE4", "url": "https://github.com/project-ncl/pnc/pull/3090#pullrequestreview-428147818", "createdAt": "2020-06-10T15:02:19Z", "commit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTowMjoxOVrOGh5MCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo0MDo1M1rOGh6-Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5MzE2MQ==", "bodyText": "I presume you meant \"representation\"?", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438193161", "createdAt": "2020-06-10T15:02:19Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ArtifactRevision.java", "diffHunk": "@@ -30,6 +30,7 @@\n import lombok.ToString;\n \n /**\n+ * Revision of a epresentation of an artifact created or used by build.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5MzY2MA==", "bodyText": "Same typo again?", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438193660", "createdAt": "2020-06-10T15:02:59Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ArtifactRevisionRef.java", "diffHunk": "@@ -34,6 +34,7 @@\n import lombok.Data;\n \n /**\n+ * Revision of a epresentation of an artifact created or used by build.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5NDEzMA==", "bodyText": "I believe the terminology decided on was \"quality level\" not label?", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438194130", "createdAt": "2020-06-10T15:03:39Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ArtifactRevision.java", "diffHunk": "@@ -40,6 +41,9 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class ArtifactRevision extends ArtifactRevisionRef {\n \n+    /**\n+     * The user who last modified the Quality label of this artifact.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5NjQ5Nw==", "bodyText": "quality level", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438196497", "createdAt": "2020-06-10T15:06:56Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ArtifactRevisionRef.java", "diffHunk": "@@ -43,16 +44,31 @@\n @JsonDeserialize(builder = ArtifactRevisionRef.Builder.class)\n public class ArtifactRevisionRef implements DTOEntity {\n \n+    /**\n+     * ID of the artifact.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Revision number of the artifact.\n+     */\n     protected final Integer rev;\n \n+    /**\n+     * The reason for the Quality level setting (change) of this artifact.\n+     */\n     protected final String qualityLevelReason;\n \n+    /**\n+     * The time at which the Quality label of this artifact was last modified.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5NzA0NA==", "bodyText": "Sounds strange, suggestion:\n\"SCM repository where the build's sources are stored.\"", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438197044", "createdAt": "2020-06-10T15:07:39Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/BuildConfiguration.java", "diffHunk": "@@ -48,32 +50,60 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class BuildConfiguration extends BuildConfigurationRef {\n \n+    /**\n+     * SCM repository where are sources to the build stored.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5Nzg2NQ==", "bodyText": "Mixed terminology: You use build config in other doc strings, here you use build configuration.", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438197865", "createdAt": "2020-06-10T15:08:47Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/BuildConfiguration.java", "diffHunk": "@@ -48,32 +50,60 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class BuildConfiguration extends BuildConfigurationRef {\n \n+    /**\n+     * SCM repository where are sources to the build stored.\n+     */\n     @PatchSupport({ REPLACE })\n     @RefHasId(groups = { WhenCreatingNew.class, WhenUpdating.class })\n     private final SCMRepository scmRepository;\n \n+    /**\n+     * The project which the build config is part of.\n+     */\n     @PatchSupport({ REPLACE })\n     @RefHasId(groups = WhenCreatingNew.class)\n     private final ProjectRef project;\n \n+    /**\n+     * Build environment that the build will be run in.\n+     */\n     @PatchSupport({ REPLACE })\n     @RefHasId(groups = { WhenCreatingNew.class, WhenUpdating.class })\n     protected final Environment environment;\n \n+    /**\n+     * List of dependencies. These dependencies are normally run before build of this build configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5OTI0Nw==", "bodyText": "\"A Build Config contains...\"", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438199247", "createdAt": "2020-06-10T15:10:44Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/BuildConfigurationRef.java", "diffHunk": "@@ -36,6 +36,8 @@\n import static org.jboss.pnc.processor.annotation.PatchSupport.Operation.REPLACE;\n \n /**\n+ * Build config cointains the information needed to execute a build of a project, i.e. link to the sources, the build", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5OTYxOQ==", "bodyText": "Spelling mistakes:\nmede -> made\nalfanumeric -> alphanumeric", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438199619", "createdAt": "2020-06-10T15:11:15Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/BuildConfigurationRef.java", "diffHunk": "@@ -45,30 +47,54 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class BuildConfigurationRef implements DTOEntity {\n \n+    /**\n+     * ID of the build config.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Build config name. It must be unique and can be mede of alfanumeric characters with [_.-].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwMTc4Mw==", "bodyText": "Clunky.\nSuggestion:\n\"It defines pre-build operations and sets the proper repository\"", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438201783", "createdAt": "2020-06-10T15:14:06Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/BuildConfigurationRef.java", "diffHunk": "@@ -45,30 +47,54 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class BuildConfigurationRef implements DTOEntity {\n \n+    /**\n+     * ID of the build config.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Build config name. It must be unique and can be mede of alfanumeric characters with [_.-].\n+     */\n     @PatchSupport({ REPLACE })\n     @NotNull(groups = WhenCreatingNew.class)\n     @Pattern(\n             regexp = \"^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*(?<!\\\\.git)$\",\n             groups = { WhenCreatingNew.class, WhenUpdating.class })\n     protected final String name;\n \n+    /**\n+     * Build config description.\n+     */\n     @PatchSupport({ REPLACE })\n     protected final String description;\n \n+    /**\n+     * Shell script to be executed.\n+     */\n     @PatchSupport({ REPLACE })\n     protected final String buildScript;\n \n+    /**\n+     * SCM revision to build.\n+     */\n     @PatchSupport({ REPLACE })\n     protected final String scmRevision;\n \n+    /**\n+     * When the build config was created.\n+     */\n     protected final Instant creationTime;\n \n+    /**\n+     * When the build config was last modified.\n+     */\n     protected final Instant modificationTime;\n \n+    /**\n+     * Build type of the build config. It defines pre-build operations and to set proper repository.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwNDczNA==", "bodyText": "This could probably do with a little more explanation:\nMy suggestion:\n\"This class is used to maintain an audit trail of modifications made to a Build Config. Each instance represents a specific revision of a build config.\"", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438204734", "createdAt": "2020-06-10T15:18:10Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/BuildConfigurationRevision.java", "diffHunk": "@@ -30,6 +30,7 @@\n import lombok.ToString;\n \n /**\n+ * Revision of build config.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwODg5NQ==", "bodyText": "Sounds strange, suggestion:\n\"SCM repository where the build's sources are stored.\"", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438208895", "createdAt": "2020-06-10T15:22:54Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/BuildConfigurationRevision.java", "diffHunk": "@@ -40,16 +41,35 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class BuildConfigurationRevision extends BuildConfigurationRevisionRef {\n \n+    /**\n+     * SCM repository where are sources to the build stored.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwOTY1Mw==", "bodyText": "If you agree to the change on the full entity, change also here on the ref.", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438209653", "createdAt": "2020-06-10T15:23:39Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/BuildConfigurationRevisionRef.java", "diffHunk": "@@ -34,6 +34,7 @@\n import lombok.Data;\n \n /**\n+ * Revision of build config.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxMzIxMg==", "bodyText": "Is this actually a revision number? Isn't the counter shared by all revisions? If so it could be a bit misleading to call it the revision number of a build config? If i'm wrong ignore this :)", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438213212", "createdAt": "2020-06-10T15:27:57Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/BuildConfigurationRevisionRef.java", "diffHunk": "@@ -42,22 +43,46 @@\n @JsonDeserialize(builder = BuildConfigurationRevisionRef.Builder.class)\n public class BuildConfigurationRevisionRef implements DTOEntity {\n \n+    /**\n+     * ID of the build config.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Revision number of the build config revision.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxMzY1NA==", "bodyText": "If accepting suggested change on full entity, also change here on ref.", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438213654", "createdAt": "2020-06-10T15:28:34Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/BuildConfigurationRevisionRef.java", "diffHunk": "@@ -42,22 +43,46 @@\n @JsonDeserialize(builder = BuildConfigurationRevisionRef.Builder.class)\n public class BuildConfigurationRevisionRef implements DTOEntity {\n \n+    /**\n+     * ID of the build config.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Revision number of the build config revision.\n+     */\n     protected final Integer rev;\n \n+    /**\n+     * Build config name.\n+     */\n     protected final String name;\n \n+    /**\n+     * Shell script to be executed.\n+     */\n     protected final String buildScript;\n \n+    /**\n+     * SCM revision to build.\n+     */\n     protected final String scmRevision;\n \n+    /**\n+     * When the build config was created.\n+     */\n     protected final Instant creationTime;\n \n+    /**\n+     * When the build config was last modified.\n+     */\n     protected final Instant modificationTime;\n \n+    /**\n+     * Build type of the build config. It defines pre-build operations and to set proper repository.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxNjE5NQ==", "bodyText": "A Milestone", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438216195", "createdAt": "2020-06-10T15:32:08Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ProductMilestone.java", "diffHunk": "@@ -30,6 +30,10 @@\n import java.time.Instant;\n \n /**\n+ * Milestone represent a stage in product(ization) process. A single product version, for example \"1.0\", can be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxNzMzNw==", "bodyText": "Clunky. Suggestion: \"The ProductVersion this milestone belongs to\"", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438217337", "createdAt": "2020-06-10T15:33:46Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ProductMilestone.java", "diffHunk": "@@ -41,9 +45,15 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class ProductMilestone extends ProductMilestoneRef {\n \n+    /**\n+     * Version of product this is milestone of.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxNzkwNw==", "bodyText": "A Milestone .... the product(...", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438217907", "createdAt": "2020-06-10T15:34:38Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ProductMilestoneRef.java", "diffHunk": "@@ -37,18 +37,26 @@\n import static org.jboss.pnc.processor.annotation.PatchSupport.Operation.REPLACE;\n \n /**\n- *\n+ * Milestone represent a stage in product(ization) process.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxODMyMQ==", "bodyText": "A Product", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438218321", "createdAt": "2020-06-10T15:35:12Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ProductRef.java", "diffHunk": "@@ -35,33 +35,55 @@\n import static org.jboss.pnc.processor.annotation.PatchSupport.Operation.REPLACE;\n \n /**\n- *\n+ * Product is a deliverable package composed of multiple project.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxOTQ1Ng==", "bodyText": "\"product\"", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438219456", "createdAt": "2020-06-10T15:36:42Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ProductRef.java", "diffHunk": "@@ -35,33 +35,55 @@\n import static org.jboss.pnc.processor.annotation.PatchSupport.Operation.REPLACE;\n \n /**\n- *\n+ * Product is a deliverable package composed of multiple project.\n+ * \n  * @author Jakub Bartecek &lt;jbartece@redhat.com&gt;\n  */\n @Data\n @Builder(builderClassName = \"Builder\", builderMethodName = \"refBuilder\")\n @JsonDeserialize(builder = ProductRef.Builder.class)\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class ProductRef implements DTOEntity {\n+\n+    /**\n+     * ID of the product.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Product name.\n+     */\n     @PatchSupport({ REPLACE })\n     @NotNull(groups = { WhenCreatingNew.class, WhenUpdating.class })\n     protected final String name;\n \n+    /**\n+     * Product description.\n+     */\n     @PatchSupport({ REPLACE })\n     protected final String description;\n \n+    /**\n+     * Product abbreviation.\n+     *\n+     * @see Patterns#PRODUCT_ABBREVIATION\n+     */\n     @PatchSupport({ REPLACE })\n     @NotNull(groups = { WhenCreatingNew.class, WhenUpdating.class })\n     @Pattern(regexp = Patterns.PRODUCT_ABBREVIATION, groups = { WhenCreatingNew.class, WhenUpdating.class })\n     protected final String abbreviation;\n \n+    /**\n+     * Comma separated list of product managers.\n+     */\n     @PatchSupport({ REPLACE })\n     protected final String productManagers;\n \n+    /**\n+     * The code given to the produc by Product Pages.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIyMDg4MA==", "bodyText": "[double or -> use comma] \"... assigned to a particular product, product version or product release\"", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438220880", "createdAt": "2020-06-10T15:38:45Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ProductReleaseRef.java", "diffHunk": "@@ -36,30 +36,54 @@\n import static org.jboss.pnc.processor.annotation.PatchSupport.Operation.REPLACE;\n \n /**\n- *\n+ * Represents a released version of a product. For example, a Beta, GA, or SP release. Each release is associated with a\n+ * single product milestone.\n+ * \n  * @author Jakub Bartecek &lt;jbartece@redhat.com&gt;\n  */\n @Data\n @Builder(builderClassName = \"Builder\", builderMethodName = \"refBuilder\")\n @JsonDeserialize(builder = ProductReleaseRef.Builder.class)\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class ProductReleaseRef implements DTOEntity {\n+\n+    /**\n+     * ID of the product release.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Release version.\n+     */\n     @PatchSupport({ REPLACE })\n     protected final String version;\n \n+    /**\n+     * Rome wasn't built in a day, nor is PNC. This feature will come in near future.\n+     */\n     @PatchSupport({ REPLACE })\n     protected final SupportLevel supportLevel;\n \n+    /**\n+     * Date when the release will be released.\n+     */\n     @PatchSupport({ REPLACE })\n     protected final Instant releaseDate;\n \n+    /**\n+     * A CPE (Common Platform Enumeration) is a Red Hat identifier assigned to a particular product or product version", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIyMTQ3Ng==", "bodyText": "a version of", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438221476", "createdAt": "2020-06-10T15:39:38Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ProductVersion.java", "diffHunk": "@@ -44,22 +45,40 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class ProductVersion extends ProductVersionRef {\n \n+    /**\n+     * Product that this is version of.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIyMjQxOQ==", "bodyText": "needs", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r438222419", "createdAt": "2020-06-10T15:40:53Z", "author": {"login": "alexcreasy"}, "path": "dto/src/main/java/org/jboss/pnc/dto/TargetRepository.java", "diffHunk": "@@ -31,27 +31,45 @@\n import javax.validation.constraints.Null;\n \n /**\n- *\n+ * Contains information related to a repository of build artifacts (i.e. Maven, NPM, etc).\n+ * \n  * @author Jakub Bartecek &lt;jbartece@redhat.com&gt;\n  */\n @Data\n @Builder(builderClassName = \"Builder\", builderMethodName = \"refBuilder\")\n @JsonDeserialize(builder = TargetRepository.Builder.class)\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class TargetRepository implements DTOEntity {\n+    /**\n+     * ID of the target repository.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Is the reposiotry for temporary builds?\n+     */\n     @NotNull(groups = { WhenUpdating.class, WhenCreatingNew.class })\n     protected final Boolean temporaryRepo;\n \n+    /**\n+     * Identifier to link repository configurations (eg. hostname)\n+     */\n     @NotNull(groups = { WhenUpdating.class, WhenCreatingNew.class })\n     protected final String identifier;\n \n+    /**\n+     * The type of repository which hosts this artifact (Maven, NPM, etc). This field determines the format of the\n+     * identifier string.\n+     */\n     @NotNull(groups = { WhenUpdating.class, WhenCreatingNew.class })\n     protected final RepositoryType repositoryType;\n \n+    /**\n+     * Path that need to be appended to the hostname eg. \"ga\" for https://maven.repository.redhat.com/ga/ or \"maven2\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5484e2910f4b4970f0be1a0d85b50ed3e7c8e61b"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4ODcwNzE1", "url": "https://github.com/project-ncl/pnc/pull/3090#pullrequestreview-428870715", "createdAt": "2020-06-11T12:45:04Z", "commit": {"oid": "7d76d8cec9df0b80a45b54ebf3e8b9ea4b79d1bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNTQ2NzI2", "url": "https://github.com/project-ncl/pnc/pull/3090#pullrequestreview-430546726", "createdAt": "2020-06-15T11:15:59Z", "commit": {"oid": "7d76d8cec9df0b80a45b54ebf3e8b9ea4b79d1bc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMToxNTo1OVrOGjty7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzowMDoyNFrOGjxGHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEwMzY2MQ==", "bodyText": "Is the \"Representation of\" needed here? IMO every object is a representation of something, so I would drop it.", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r440103661", "createdAt": "2020-06-15T11:15:59Z", "author": {"login": "pkocandr"}, "path": "dto/src/main/java/org/jboss/pnc/dto/Artifact.java", "diffHunk": "@@ -31,6 +31,7 @@\n import lombok.ToString;\n \n /**\n+ * Representation of an artifact created or used by build.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d76d8cec9df0b80a45b54ebf3e8b9ea4b79d1bc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEwNDIxNA==", "bodyText": "Again \"Representation of\".", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r440104214", "createdAt": "2020-06-15T11:17:09Z", "author": {"login": "pkocandr"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ArtifactRef.java", "diffHunk": "@@ -36,6 +36,7 @@\n import lombok.Data;\n \n /**\n+ * Representation of an artifact created or used by build.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d76d8cec9df0b80a45b54ebf3e8b9ea4b79d1bc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEwNTAzNg==", "bodyText": "I would change the first sentence to \"A unique identifier of the artifact in a repository.\"", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r440105036", "createdAt": "2020-06-15T11:18:56Z", "author": {"login": "pkocandr"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ArtifactRef.java", "diffHunk": "@@ -45,31 +46,66 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class ArtifactRef implements DTOEntity {\n \n+    /**\n+     * ID of the artifact.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Contains a string which uniquely identifies the artifact in a repository. For example, for a maven artifact this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d76d8cec9df0b80a45b54ebf3e8b9ea4b79d1bc"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEwNTIwMw==", "bodyText": "\"qualifier\" => \"classifier\"", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r440105203", "createdAt": "2020-06-15T11:19:21Z", "author": {"login": "pkocandr"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ArtifactRef.java", "diffHunk": "@@ -45,31 +46,66 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class ArtifactRef implements DTOEntity {\n \n+    /**\n+     * ID of the artifact.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Contains a string which uniquely identifies the artifact in a repository. For example, for a maven artifact this\n+     * is the GATVC (groupId:artifactId:type:version[:qualifier] The format of the identifier string is determined by", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d76d8cec9df0b80a45b54ebf3e8b9ea4b79d1bc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEwNjIzMQ==", "bodyText": "This is the path inside the repository, not path to the repository.", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r440106231", "createdAt": "2020-06-15T11:21:29Z", "author": {"login": "pkocandr"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ArtifactRef.java", "diffHunk": "@@ -45,31 +46,66 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class ArtifactRef implements DTOEntity {\n \n+    /**\n+     * ID of the artifact.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Contains a string which uniquely identifies the artifact in a repository. For example, for a maven artifact this\n+     * is the GATVC (groupId:artifactId:type:version[:qualifier] The format of the identifier string is determined by\n+     * the repository type.\n+     */\n     @NotNull(groups = { WhenCreatingNew.class, WhenUpdating.class })\n     protected final String identifier;\n \n+    /**\n+     * Quality level of the artifact.\n+     */\n     @PatchSupport({ REPLACE })\n     @NotNull(groups = { WhenCreatingNew.class, WhenUpdating.class })\n     protected final ArtifactQuality artifactQuality;\n \n+    /**\n+     * MD5 checksum of the artifact.\n+     */\n     protected final String md5;\n \n+    /**\n+     * SHA-1 checksum of the artifact.\n+     */\n     protected final String sha1;\n \n+    /**\n+     * SHA-256 checksum of the artifact.\n+     */\n     protected final String sha256;\n \n+    /**\n+     * Filename of the artifact.\n+     */\n     protected final String filename;\n \n+    /**\n+     * Path to repository where the artifact file is available.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d76d8cec9df0b80a45b54ebf3e8b9ea4b79d1bc"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1NDQyMg==", "bodyText": "We should here that for built artifacts the value is always null.", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r440154422", "createdAt": "2020-06-15T12:54:46Z", "author": {"login": "pkocandr"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ArtifactRef.java", "diffHunk": "@@ -45,31 +46,66 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class ArtifactRef implements DTOEntity {\n \n+    /**\n+     * ID of the artifact.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Contains a string which uniquely identifies the artifact in a repository. For example, for a maven artifact this\n+     * is the GATVC (groupId:artifactId:type:version[:qualifier] The format of the identifier string is determined by\n+     * the repository type.\n+     */\n     @NotNull(groups = { WhenCreatingNew.class, WhenUpdating.class })\n     protected final String identifier;\n \n+    /**\n+     * Quality level of the artifact.\n+     */\n     @PatchSupport({ REPLACE })\n     @NotNull(groups = { WhenCreatingNew.class, WhenUpdating.class })\n     protected final ArtifactQuality artifactQuality;\n \n+    /**\n+     * MD5 checksum of the artifact.\n+     */\n     protected final String md5;\n \n+    /**\n+     * SHA-1 checksum of the artifact.\n+     */\n     protected final String sha1;\n \n+    /**\n+     * SHA-256 checksum of the artifact.\n+     */\n     protected final String sha256;\n \n+    /**\n+     * Filename of the artifact.\n+     */\n     protected final String filename;\n \n+    /**\n+     * Path to repository where the artifact file is available.\n+     */\n     protected final String deployPath;\n \n+    /**\n+     * The date when this artifact was originally imported.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d76d8cec9df0b80a45b54ebf3e8b9ea4b79d1bc"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1NjQ2OQ==", "bodyText": "Also here the value is null for built artifact.", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r440156469", "createdAt": "2020-06-15T12:58:09Z", "author": {"login": "pkocandr"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ArtifactRef.java", "diffHunk": "@@ -45,31 +46,66 @@\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class ArtifactRef implements DTOEntity {\n \n+    /**\n+     * ID of the artifact.\n+     */\n     @NotNull(groups = WhenUpdating.class)\n     @Null(groups = WhenCreatingNew.class)\n     protected final String id;\n \n+    /**\n+     * Contains a string which uniquely identifies the artifact in a repository. For example, for a maven artifact this\n+     * is the GATVC (groupId:artifactId:type:version[:qualifier] The format of the identifier string is determined by\n+     * the repository type.\n+     */\n     @NotNull(groups = { WhenCreatingNew.class, WhenUpdating.class })\n     protected final String identifier;\n \n+    /**\n+     * Quality level of the artifact.\n+     */\n     @PatchSupport({ REPLACE })\n     @NotNull(groups = { WhenCreatingNew.class, WhenUpdating.class })\n     protected final ArtifactQuality artifactQuality;\n \n+    /**\n+     * MD5 checksum of the artifact.\n+     */\n     protected final String md5;\n \n+    /**\n+     * SHA-1 checksum of the artifact.\n+     */\n     protected final String sha1;\n \n+    /**\n+     * SHA-256 checksum of the artifact.\n+     */\n     protected final String sha256;\n \n+    /**\n+     * Filename of the artifact.\n+     */\n     protected final String filename;\n \n+    /**\n+     * Path to repository where the artifact file is available.\n+     */\n     protected final String deployPath;\n \n+    /**\n+     * The date when this artifact was originally imported.\n+     */\n     protected final Instant importDate;\n \n+    /**\n+     * The location from which this artifact was originally downloaded for import.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d76d8cec9df0b80a45b54ebf3e8b9ea4b79d1bc"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1NzcyNA==", "bodyText": "Drop the \"representation of \" also here please.", "url": "https://github.com/project-ncl/pnc/pull/3090#discussion_r440157724", "createdAt": "2020-06-15T13:00:24Z", "author": {"login": "pkocandr"}, "path": "dto/src/main/java/org/jboss/pnc/dto/ArtifactRevision.java", "diffHunk": "@@ -30,6 +30,7 @@\n import lombok.ToString;\n \n /**\n+ * Revision of a representation of an artifact created or used by build.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d76d8cec9df0b80a45b54ebf3e8b9ea4b79d1bc"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNTA3NTA4", "url": "https://github.com/project-ncl/pnc/pull/3090#pullrequestreview-431507508", "createdAt": "2020-06-16T13:34:41Z", "commit": {"oid": "3ed419c0432131a59ab145ed430fa2f13ba111c2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzkxMjU5", "url": "https://github.com/project-ncl/pnc/pull/3090#pullrequestreview-431791259", "createdAt": "2020-06-16T18:38:23Z", "commit": {"oid": "3ed419c0432131a59ab145ed430fa2f13ba111c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f782de39842c787682792c3f4b805dd94333eef", "author": {"user": {"login": "janinko", "name": "Honza Br\u00e1zdil"}}, "url": "https://github.com/project-ncl/pnc/commit/5f782de39842c787682792c3f4b805dd94333eef", "committedDate": "2020-06-17T09:14:12Z", "message": "Add javadoc to DTOs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10cfec8ecf9136cf0e81b3e485786581156b77f4", "author": {"user": {"login": "janinko", "name": "Honza Br\u00e1zdil"}}, "url": "https://github.com/project-ncl/pnc/commit/10cfec8ecf9136cf0e81b3e485786581156b77f4", "committedDate": "2020-06-17T09:12:32Z", "message": "fix typo"}, "afterCommit": {"oid": "5f782de39842c787682792c3f4b805dd94333eef", "author": {"user": {"login": "janinko", "name": "Honza Br\u00e1zdil"}}, "url": "https://github.com/project-ncl/pnc/commit/5f782de39842c787682792c3f4b805dd94333eef", "committedDate": "2020-06-17T09:14:12Z", "message": "Add javadoc to DTOs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2587, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}