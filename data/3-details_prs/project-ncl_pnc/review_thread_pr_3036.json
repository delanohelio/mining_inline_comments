{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2Njc5NDIx", "number": 3036, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzo0Njo0NFrOD8XGBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzo1MzozNFrOD8XPqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjE5NTI1OnYy", "diffSide": "RIGHT", "path": "facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzo0Njo0NFrOGVP-gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDoyNDoyMFrOGWw-QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNTA0MA==", "bodyText": "I would prefer Collections.singletonList() instead of using guava library", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r424935040", "createdAt": "2020-05-14T07:46:44Z", "author": {"login": "janinko"}, "path": "facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java", "diffHunk": "@@ -275,6 +281,34 @@ public void cancelMilestoneCloseProcess(String id) throws RepositoryViolationExc\n         return new Page<>(pageIndex, pageSize, milestoneIds.size(), milestones);\n     }\n \n+    @Override\n+    public ValidationResponse validateVersion(String productVersionId, String version) {\n+        boolean matches = Pattern.matches(Patterns.PRODUCT_MILESTONE_VERSION, version);\n+        ValidationResponse.Builder builder = ValidationResponse.builder().isValid(matches);\n+        if (!matches) {\n+            return builder.errorType(FORMAT)\n+                    .hints(\n+                            Lists.newArrayList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNDIyNA==", "bodyText": "Sure", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426524224", "createdAt": "2020-05-18T10:24:20Z", "author": {"login": "michalovjan"}, "path": "facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java", "diffHunk": "@@ -275,6 +281,34 @@ public void cancelMilestoneCloseProcess(String id) throws RepositoryViolationExc\n         return new Page<>(pageIndex, pageSize, milestoneIds.size(), milestones);\n     }\n \n+    @Override\n+    public ValidationResponse validateVersion(String productVersionId, String version) {\n+        boolean matches = Pattern.matches(Patterns.PRODUCT_MILESTONE_VERSION, version);\n+        ValidationResponse.Builder builder = ValidationResponse.builder().isValid(matches);\n+        if (!matches) {\n+            return builder.errorType(FORMAT)\n+                    .hints(\n+                            Lists.newArrayList(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNTA0MA=="}, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjIwOTMwOnYy", "diffSide": "RIGHT", "path": "rest-new/src/main/java/org/jboss/pnc/rest/endpoints/ProductMilestoneEndpointImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzo1MDozNFrOGVQHQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzo1MDozNFrOGVQHQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNzI4Mw==", "bodyText": "add @Valid to VersionValidationRequest and I belive then you can rely on the fields not be null.", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r424937283", "createdAt": "2020-05-14T07:50:34Z", "author": {"login": "janinko"}, "path": "rest-new/src/main/java/org/jboss/pnc/rest/endpoints/ProductMilestoneEndpointImpl.java", "diffHunk": "@@ -132,12 +129,7 @@ public void cancelMilestoneClose(String id) {\n \n     @Override\n     public ValidationResponse validateVersion(VersionValidationRequest versionRequest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjIxMjA5OnYy", "diffSide": "RIGHT", "path": "facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzo1MToyMlrOGVQJHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjowMTo0NlrOGW0BPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNzc1Nw==", "bodyText": "if you use @Valid then you don't need this check, I think.", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r424937757", "createdAt": "2020-05-14T07:51:22Z", "author": {"login": "janinko"}, "path": "facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java", "diffHunk": "@@ -275,6 +281,34 @@ public void cancelMilestoneCloseProcess(String id) throws RepositoryViolationExc\n         return new Page<>(pageIndex, pageSize, milestoneIds.size(), milestones);\n     }\n \n+    @Override\n+    public ValidationResponse validateVersion(String productVersionId, String version) {\n+        boolean matches = Pattern.matches(Patterns.PRODUCT_MILESTONE_VERSION, version);\n+        ValidationResponse.Builder builder = ValidationResponse.builder().isValid(matches);\n+        if (!matches) {\n+            return builder.errorType(FORMAT)\n+                    .hints(\n+                            Lists.newArrayList(\n+                                    \"Allowed format consists of 2 or 3 numeric components (separated by a dot) followed by a string \"\n+                                            + \"qualifier starting with a character, eg. 3.0.0.GA, 1.0.11.CR2.ER1, 3.0.CR2\"))\n+                    .build();\n+        }\n+        org.jboss.pnc.model.ProductMilestone duplicate = null;\n+        if (productVersionId != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNDg3MA==", "bodyText": "I mean, I don't mind having null there. If it is null, then only REGEX check will be done.", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426524870", "createdAt": "2020-05-18T10:25:32Z", "author": {"login": "michalovjan"}, "path": "facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java", "diffHunk": "@@ -275,6 +281,34 @@ public void cancelMilestoneCloseProcess(String id) throws RepositoryViolationExc\n         return new Page<>(pageIndex, pageSize, milestoneIds.size(), milestones);\n     }\n \n+    @Override\n+    public ValidationResponse validateVersion(String productVersionId, String version) {\n+        boolean matches = Pattern.matches(Patterns.PRODUCT_MILESTONE_VERSION, version);\n+        ValidationResponse.Builder builder = ValidationResponse.builder().isValid(matches);\n+        if (!matches) {\n+            return builder.errorType(FORMAT)\n+                    .hints(\n+                            Lists.newArrayList(\n+                                    \"Allowed format consists of 2 or 3 numeric components (separated by a dot) followed by a string \"\n+                                            + \"qualifier starting with a character, eg. 3.0.0.GA, 1.0.11.CR2.ER1, 3.0.CR2\"))\n+                    .build();\n+        }\n+        org.jboss.pnc.model.ProductMilestone duplicate = null;\n+        if (productVersionId != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNzc1Nw=="}, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU1NzA2Nw==", "bodyText": "Then why did you added @NotBlank to it in the DTO?", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426557067", "createdAt": "2020-05-18T11:28:30Z", "author": {"login": "janinko"}, "path": "facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java", "diffHunk": "@@ -275,6 +281,34 @@ public void cancelMilestoneCloseProcess(String id) throws RepositoryViolationExc\n         return new Page<>(pageIndex, pageSize, milestoneIds.size(), milestones);\n     }\n \n+    @Override\n+    public ValidationResponse validateVersion(String productVersionId, String version) {\n+        boolean matches = Pattern.matches(Patterns.PRODUCT_MILESTONE_VERSION, version);\n+        ValidationResponse.Builder builder = ValidationResponse.builder().isValid(matches);\n+        if (!matches) {\n+            return builder.errorType(FORMAT)\n+                    .hints(\n+                            Lists.newArrayList(\n+                                    \"Allowed format consists of 2 or 3 numeric components (separated by a dot) followed by a string \"\n+                                            + \"qualifier starting with a character, eg. 3.0.0.GA, 1.0.11.CR2.ER1, 3.0.CR2\"))\n+                    .build();\n+        }\n+        org.jboss.pnc.model.ProductMilestone duplicate = null;\n+        if (productVersionId != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNzc1Nw=="}, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU3NDE0Mg==", "bodyText": "That's a valid point :D. I forgot that NotBlank doesn't allow nulls. I wanted it to cover a case \"if there is a string don't let it be empty\". I'll add the @Valid there.", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426574142", "createdAt": "2020-05-18T12:01:46Z", "author": {"login": "michalovjan"}, "path": "facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java", "diffHunk": "@@ -275,6 +281,34 @@ public void cancelMilestoneCloseProcess(String id) throws RepositoryViolationExc\n         return new Page<>(pageIndex, pageSize, milestoneIds.size(), milestones);\n     }\n \n+    @Override\n+    public ValidationResponse validateVersion(String productVersionId, String version) {\n+        boolean matches = Pattern.matches(Patterns.PRODUCT_MILESTONE_VERSION, version);\n+        ValidationResponse.Builder builder = ValidationResponse.builder().isValid(matches);\n+        if (!matches) {\n+            return builder.errorType(FORMAT)\n+                    .hints(\n+                            Lists.newArrayList(\n+                                    \"Allowed format consists of 2 or 3 numeric components (separated by a dot) followed by a string \"\n+                                            + \"qualifier starting with a character, eg. 3.0.0.GA, 1.0.11.CR2.ER1, 3.0.CR2\"))\n+                    .build();\n+        }\n+        org.jboss.pnc.model.ProductMilestone duplicate = null;\n+        if (productVersionId != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNzc1Nw=="}, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjIxOTk1OnYy", "diffSide": "RIGHT", "path": "constants/src/main/java/org/jboss/pnc/enums/ErrorType.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzo1MzozNFrOGVQOLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjozMDo0MVrOGW09eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg==", "bodyText": "ValidationErrorType? + javadoc on class level", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r424939052", "createdAt": "2020-05-14T07:53:34Z", "author": {"login": "janinko"}, "path": "constants/src/main/java/org/jboss/pnc/enums/ErrorType.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.enums;\n+\n+public enum ErrorType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNjI4Ng==", "bodyText": "I don't like Java style of long names. I'd like to keep it simple and generic. This enum could be furthermore developed and used elsewhere.", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426526286", "createdAt": "2020-05-18T10:28:10Z", "author": {"login": "michalovjan"}, "path": "constants/src/main/java/org/jboss/pnc/enums/ErrorType.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.enums;\n+\n+public enum ErrorType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg=="}, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU1ODcwNQ==", "bodyText": "Now both values are for validation. Do you have any example of other values that could be put here now?", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426558705", "createdAt": "2020-05-18T11:31:31Z", "author": {"login": "janinko"}, "path": "constants/src/main/java/org/jboss/pnc/enums/ErrorType.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.enums;\n+\n+public enum ErrorType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg=="}, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU3ODgxMQ==", "bodyText": "The enum is a simple collection of error types. If someone wants to specify a type of error in their DTO, he can add them to the enum and use it. Right now, only milestone validation uses it, so no other values are needed.", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426578811", "createdAt": "2020-05-18T12:10:58Z", "author": {"login": "michalovjan"}, "path": "constants/src/main/java/org/jboss/pnc/enums/ErrorType.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.enums;\n+\n+public enum ErrorType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg=="}, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU4MTY2Ng==", "bodyText": "Then why would ValidationResponse class have generic error type that can have value that has nothing to do with validation? If it was a generic response class then I would understand that, but it's specific validation response.", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426581666", "createdAt": "2020-05-18T12:16:27Z", "author": {"login": "janinko"}, "path": "constants/src/main/java/org/jboss/pnc/enums/ErrorType.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.enums;\n+\n+public enum ErrorType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg=="}, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU4OTU2MQ==", "bodyText": "Ok, I am convinced.", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426589561", "createdAt": "2020-05-18T12:30:41Z", "author": {"login": "michalovjan"}, "path": "constants/src/main/java/org/jboss/pnc/enums/ErrorType.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.enums;\n+\n+public enum ErrorType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg=="}, "originalCommit": {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1874, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}