{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MTI1NzU2", "number": 3342, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDowMjowMFrOErGvpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMTo0NTo0MFrOEs_56A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjM0NzI3OnYy", "diffSide": "RIGHT", "path": "rest-client/src/main/java/org/jboss/pnc/restclient/AdvancedProductMilestoneClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDowMjowMFrOHdr5nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTo0ODowOFrOHkKezg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDAxMg==", "bodyText": "Please add super.close() there so that the underlying regular client closes too.", "url": "https://github.com/project-ncl/pnc/pull/3342#discussion_r500890012", "createdAt": "2020-10-07T10:02:00Z", "author": {"login": "michalovjan"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/AdvancedProductMilestoneClient.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient;\n+\n+import org.jboss.pnc.client.Configuration;\n+import org.jboss.pnc.client.ProductMilestoneClient;\n+import org.jboss.pnc.client.RemoteResourceException;\n+import org.jboss.pnc.dto.ProductMilestoneCloseResult;\n+import org.jboss.pnc.dto.notification.ProductMilestoneCloseResultNotification;\n+import org.jboss.pnc.restclient.websocket.VertxWebSocketClient;\n+import org.jboss.pnc.restclient.websocket.WebSocketClient;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import static org.jboss.pnc.restclient.websocket.predicates.ProductMilestoneCloseResultNotificationPredicates.withMilestoneId;\n+\n+public class AdvancedProductMilestoneClient extends ProductMilestoneClient {\n+\n+    private WebSocketClient webSocketClient = new VertxWebSocketClient();\n+\n+    public AdvancedProductMilestoneClient(Configuration configuration) {\n+        super(configuration);\n+    }\n+\n+    public CompletableFuture<ProductMilestoneCloseResult> waitForMilestoneClose(String milestoneId) {\n+        webSocketClient.connect(\"ws://\" + configuration.getHost() + BASE_PATH + \"/notifications\").join();\n+        return webSocketClient.catchProductMilestoneCloseResult(withMilestoneId(milestoneId))\n+                .thenApply(ProductMilestoneCloseResultNotification::getProductMilestoneCloseResult)\n+                .whenComplete((x, y) -> webSocketClient.disconnect());\n+    }\n+\n+    public CompletableFuture<ProductMilestoneCloseResult> executeMilestoneClose(String milestoneId)\n+            throws RemoteResourceException {\n+        CompletableFuture<ProductMilestoneCloseResult> future = waitForMilestoneClose(milestoneId);\n+        super.closeMilestone(milestoneId);\n+        return future;\n+    }\n+\n+    @Override\n+    public void close() {\n+        if (webSocketClient != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d70cbc7cab14c1bc687c460379904ddeb094eff"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA4MjA0NA==", "bodyText": "btw neither of other advanced clients are doing this", "url": "https://github.com/project-ncl/pnc/pull/3342#discussion_r507082044", "createdAt": "2020-10-18T10:26:27Z", "author": {"login": "jomrazek"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/AdvancedProductMilestoneClient.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient;\n+\n+import org.jboss.pnc.client.Configuration;\n+import org.jboss.pnc.client.ProductMilestoneClient;\n+import org.jboss.pnc.client.RemoteResourceException;\n+import org.jboss.pnc.dto.ProductMilestoneCloseResult;\n+import org.jboss.pnc.dto.notification.ProductMilestoneCloseResultNotification;\n+import org.jboss.pnc.restclient.websocket.VertxWebSocketClient;\n+import org.jboss.pnc.restclient.websocket.WebSocketClient;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import static org.jboss.pnc.restclient.websocket.predicates.ProductMilestoneCloseResultNotificationPredicates.withMilestoneId;\n+\n+public class AdvancedProductMilestoneClient extends ProductMilestoneClient {\n+\n+    private WebSocketClient webSocketClient = new VertxWebSocketClient();\n+\n+    public AdvancedProductMilestoneClient(Configuration configuration) {\n+        super(configuration);\n+    }\n+\n+    public CompletableFuture<ProductMilestoneCloseResult> waitForMilestoneClose(String milestoneId) {\n+        webSocketClient.connect(\"ws://\" + configuration.getHost() + BASE_PATH + \"/notifications\").join();\n+        return webSocketClient.catchProductMilestoneCloseResult(withMilestoneId(milestoneId))\n+                .thenApply(ProductMilestoneCloseResultNotification::getProductMilestoneCloseResult)\n+                .whenComplete((x, y) -> webSocketClient.disconnect());\n+    }\n+\n+    public CompletableFuture<ProductMilestoneCloseResult> executeMilestoneClose(String milestoneId)\n+            throws RemoteResourceException {\n+        CompletableFuture<ProductMilestoneCloseResult> future = waitForMilestoneClose(milestoneId);\n+        super.closeMilestone(milestoneId);\n+        return future;\n+    }\n+\n+    @Override\n+    public void close() {\n+        if (webSocketClient != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDAxMg=="}, "originalCommit": {"oid": "7d70cbc7cab14c1bc687c460379904ddeb094eff"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4MjUxMA==", "bodyText": "I am aware. I've got them fixed in up-and-not-in-nearest-time-coming issue NCL-5662. It'd be great to have it fixed in 2.0.1.", "url": "https://github.com/project-ncl/pnc/pull/3342#discussion_r507682510", "createdAt": "2020-10-19T11:48:08Z", "author": {"login": "michalovjan"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/AdvancedProductMilestoneClient.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient;\n+\n+import org.jboss.pnc.client.Configuration;\n+import org.jboss.pnc.client.ProductMilestoneClient;\n+import org.jboss.pnc.client.RemoteResourceException;\n+import org.jboss.pnc.dto.ProductMilestoneCloseResult;\n+import org.jboss.pnc.dto.notification.ProductMilestoneCloseResultNotification;\n+import org.jboss.pnc.restclient.websocket.VertxWebSocketClient;\n+import org.jboss.pnc.restclient.websocket.WebSocketClient;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import static org.jboss.pnc.restclient.websocket.predicates.ProductMilestoneCloseResultNotificationPredicates.withMilestoneId;\n+\n+public class AdvancedProductMilestoneClient extends ProductMilestoneClient {\n+\n+    private WebSocketClient webSocketClient = new VertxWebSocketClient();\n+\n+    public AdvancedProductMilestoneClient(Configuration configuration) {\n+        super(configuration);\n+    }\n+\n+    public CompletableFuture<ProductMilestoneCloseResult> waitForMilestoneClose(String milestoneId) {\n+        webSocketClient.connect(\"ws://\" + configuration.getHost() + BASE_PATH + \"/notifications\").join();\n+        return webSocketClient.catchProductMilestoneCloseResult(withMilestoneId(milestoneId))\n+                .thenApply(ProductMilestoneCloseResultNotification::getProductMilestoneCloseResult)\n+                .whenComplete((x, y) -> webSocketClient.disconnect());\n+    }\n+\n+    public CompletableFuture<ProductMilestoneCloseResult> executeMilestoneClose(String milestoneId)\n+            throws RemoteResourceException {\n+        CompletableFuture<ProductMilestoneCloseResult> future = waitForMilestoneClose(milestoneId);\n+        super.closeMilestone(milestoneId);\n+        return future;\n+    }\n+\n+    @Override\n+    public void close() {\n+        if (webSocketClient != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDAxMg=="}, "originalCommit": {"oid": "7d70cbc7cab14c1bc687c460379904ddeb094eff"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjM1MDI4OnYy", "diffSide": "RIGHT", "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/WebSocketClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDowMjo0NlrOHdr7iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMDoyNjowOFrOHjl0qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDUwNQ==", "bodyText": "JavaDoc :D", "url": "https://github.com/project-ncl/pnc/pull/3342#discussion_r500890505", "createdAt": "2020-10-07T10:02:46Z", "author": {"login": "michalovjan"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/WebSocketClient.java", "diffHunk": "@@ -196,6 +197,10 @@ ListenerUnsubscriber onSCMRepositoryCreationSuccess(\n             Consumer<SCMRepositoryCreationSuccess> onNotification,\n             Predicate<SCMRepositoryCreationSuccess>... filters) throws ConnectionClosedException;\n \n+    ListenerUnsubscriber onProductMilestoneCloseResult(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d70cbc7cab14c1bc687c460379904ddeb094eff"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA4MTg5Ng==", "bodyText": "yup fail...", "url": "https://github.com/project-ncl/pnc/pull/3342#discussion_r507081896", "createdAt": "2020-10-18T10:26:08Z", "author": {"login": "jomrazek"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/WebSocketClient.java", "diffHunk": "@@ -196,6 +197,10 @@ ListenerUnsubscriber onSCMRepositoryCreationSuccess(\n             Consumer<SCMRepositoryCreationSuccess> onNotification,\n             Predicate<SCMRepositoryCreationSuccess>... filters) throws ConnectionClosedException;\n \n+    ListenerUnsubscriber onProductMilestoneCloseResult(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDUwNQ=="}, "originalCommit": {"oid": "7d70cbc7cab14c1bc687c460379904ddeb094eff"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjE5ODE2OnYy", "diffSide": "RIGHT", "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/predicates/ProductMilestoneCloseResultNotificationPredicates.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMTo0NTo0MFrOHgioWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjoxNTowOVrOHkLZUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4Mzg2Ng==", "bodyText": "If the close fails, is the milestone present? I'd like to avoid all possible NPEs.", "url": "https://github.com/project-ncl/pnc/pull/3342#discussion_r503883866", "createdAt": "2020-10-13T11:45:40Z", "author": {"login": "michalovjan"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/predicates/ProductMilestoneCloseResultNotificationPredicates.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient.websocket.predicates;\n+\n+import org.jboss.pnc.dto.notification.ProductMilestoneCloseResultNotification;\n+\n+import java.util.function.Predicate;\n+\n+public final class ProductMilestoneCloseResultNotificationPredicates {\n+\n+    public static Predicate<ProductMilestoneCloseResultNotification> withMilestoneId(String milestoneId) {\n+        return (notification) -> notification.getProductMilestoneCloseResult() == null ? false\n+                : notification.getProductMilestoneCloseResult().getMilestone().getId().equals(milestoneId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d70cbc7cab14c1bc687c460379904ddeb094eff"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA4NDI3Mw==", "bodyText": "if it fails it throws exception, if no there should be result available", "url": "https://github.com/project-ncl/pnc/pull/3342#discussion_r507084273", "createdAt": "2020-10-18T10:32:50Z", "author": {"login": "jomrazek"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/predicates/ProductMilestoneCloseResultNotificationPredicates.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient.websocket.predicates;\n+\n+import org.jboss.pnc.dto.notification.ProductMilestoneCloseResultNotification;\n+\n+import java.util.function.Predicate;\n+\n+public final class ProductMilestoneCloseResultNotificationPredicates {\n+\n+    public static Predicate<ProductMilestoneCloseResultNotification> withMilestoneId(String milestoneId) {\n+        return (notification) -> notification.getProductMilestoneCloseResult() == null ? false\n+                : notification.getProductMilestoneCloseResult().getMilestone().getId().equals(milestoneId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4Mzg2Ng=="}, "originalCommit": {"oid": "7d70cbc7cab14c1bc687c460379904ddeb094eff"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4MDg5Mw==", "bodyText": "I meant it like this scenario. You request a milestone close (request is successful) -> milestone closing in progress -> milestone close fails -> orch sends a notification that the close failed. Will the notification have anything missing that could throw NPE here?", "url": "https://github.com/project-ncl/pnc/pull/3342#discussion_r507680893", "createdAt": "2020-10-19T11:45:08Z", "author": {"login": "michalovjan"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/predicates/ProductMilestoneCloseResultNotificationPredicates.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient.websocket.predicates;\n+\n+import org.jboss.pnc.dto.notification.ProductMilestoneCloseResultNotification;\n+\n+import java.util.function.Predicate;\n+\n+public final class ProductMilestoneCloseResultNotificationPredicates {\n+\n+    public static Predicate<ProductMilestoneCloseResultNotification> withMilestoneId(String milestoneId) {\n+        return (notification) -> notification.getProductMilestoneCloseResult() == null ? false\n+                : notification.getProductMilestoneCloseResult().getMilestone().getId().equals(milestoneId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4Mzg2Ng=="}, "originalCommit": {"oid": "7d70cbc7cab14c1bc687c460379904ddeb094eff"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY5MDM2MA==", "bodyText": "even if it fails \"regularly\" without throwing exception, milestone is set and this should not throw npe", "url": "https://github.com/project-ncl/pnc/pull/3342#discussion_r507690360", "createdAt": "2020-10-19T12:02:22Z", "author": {"login": "jomrazek"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/predicates/ProductMilestoneCloseResultNotificationPredicates.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient.websocket.predicates;\n+\n+import org.jboss.pnc.dto.notification.ProductMilestoneCloseResultNotification;\n+\n+import java.util.function.Predicate;\n+\n+public final class ProductMilestoneCloseResultNotificationPredicates {\n+\n+    public static Predicate<ProductMilestoneCloseResultNotification> withMilestoneId(String milestoneId) {\n+        return (notification) -> notification.getProductMilestoneCloseResult() == null ? false\n+                : notification.getProductMilestoneCloseResult().getMilestone().getId().equals(milestoneId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4Mzg2Ng=="}, "originalCommit": {"oid": "7d70cbc7cab14c1bc687c460379904ddeb094eff"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY5NzQ5MA==", "bodyText": "no problem then!", "url": "https://github.com/project-ncl/pnc/pull/3342#discussion_r507697490", "createdAt": "2020-10-19T12:15:09Z", "author": {"login": "michalovjan"}, "path": "rest-client/src/main/java/org/jboss/pnc/restclient/websocket/predicates/ProductMilestoneCloseResultNotificationPredicates.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient.websocket.predicates;\n+\n+import org.jboss.pnc.dto.notification.ProductMilestoneCloseResultNotification;\n+\n+import java.util.function.Predicate;\n+\n+public final class ProductMilestoneCloseResultNotificationPredicates {\n+\n+    public static Predicate<ProductMilestoneCloseResultNotification> withMilestoneId(String milestoneId) {\n+        return (notification) -> notification.getProductMilestoneCloseResult() == null ? false\n+                : notification.getProductMilestoneCloseResult().getMilestone().getId().equals(milestoneId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4Mzg2Ng=="}, "originalCommit": {"oid": "7d70cbc7cab14c1bc687c460379904ddeb094eff"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1777, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}