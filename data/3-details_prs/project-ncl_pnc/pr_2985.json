{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MzE3MTIz", "number": 2985, "title": "Add an option to define nodeId for sequence generator.", "bodyText": "Checklist:\n\n Have you added a note in the CHANGELOG wiki for your change if user-facing?\n Have you added unit tests for your change?", "createdAt": "2020-04-20T21:39:48Z", "url": "https://github.com/project-ncl/pnc/pull/2985", "merged": true, "mergeCommit": {"oid": "9a51ba8dab7676a3a6c236d0a552dd7121082542"}, "closed": true, "closedAt": "2020-04-22T11:27:43Z", "author": {"login": "matejonnet"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZyvrPgFqTM5NzI3MDQyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaGSRVABqjMyNjAwNjI1NzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjcwNDI1", "url": "https://github.com/project-ncl/pnc/pull/2985#pullrequestreview-397270425", "createdAt": "2020-04-21T12:16:34Z", "commit": {"oid": "d69a995a0ccbe7c041ae0c6fc2093d6d7a8cba60"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjoxNjozNFrOGJCjjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjoyMDowM1rOGJCspA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEzMjIzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Map<Integer, Sequence> instance = new ConcurrentHashMap<>();\n          \n          \n            \n                private static final Map<Integer, Sequence> instance = new ConcurrentHashMap<>(1,1.0f);", "url": "https://github.com/project-ncl/pnc/pull/2985#discussion_r412132236", "createdAt": "2020-04-21T12:16:34Z", "author": {"login": "janinko"}, "path": "common/src/main/java/org/jboss/pnc/common/concurrent/Sequence.java", "diffHunk": "@@ -20,13 +20,47 @@\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n \n+/**\n+ * A class for generating 64-bit unique IDs at high scale. The IDs generated by this service are roughly time sortable.\n+ *\n+ * The ID generation follows Twitter snowflake pattern and the IDs are made up of the following components:\n+ *\n+ * Epoch timestamp in millisecond precision - 41 bits (gives us 69 years with a custom epoch) Configured machine id - 10\n+ * bits (gives us up to 1024 machines) Sequence number - 12 bits (A local counter per machine that rolls over every\n+ * 4096)\n+ */\n public class Sequence {\n \n-    private static final Map<Integer, SequenceGenerator> instance = new ConcurrentHashMap<>();\n-    private static final int INSTANCE_KEY = 0;\n+    private static final Map<Integer, Sequence> instance = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d69a995a0ccbe7c041ae0c6fc2093d6d7a8cba60"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEzNDU2NA==", "bodyText": "Make the 0 constant.", "url": "https://github.com/project-ncl/pnc/pull/2985#discussion_r412134564", "createdAt": "2020-04-21T12:20:03Z", "author": {"login": "janinko"}, "path": "common/src/main/java/org/jboss/pnc/common/concurrent/Sequence.java", "diffHunk": "@@ -20,13 +20,47 @@\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n \n+/**\n+ * A class for generating 64-bit unique IDs at high scale. The IDs generated by this service are roughly time sortable.\n+ *\n+ * The ID generation follows Twitter snowflake pattern and the IDs are made up of the following components:\n+ *\n+ * Epoch timestamp in millisecond precision - 41 bits (gives us 69 years with a custom epoch) Configured machine id - 10\n+ * bits (gives us up to 1024 machines) Sequence number - 12 bits (A local counter per machine that rolls over every\n+ * 4096)\n+ */\n public class Sequence {\n \n-    private static final Map<Integer, SequenceGenerator> instance = new ConcurrentHashMap<>();\n-    private static final int INSTANCE_KEY = 0;\n+    private static final Map<Integer, Sequence> instance = new ConcurrentHashMap<>();\n+\n+    /**\n+     * If nodeId is used, it can be set only once and have to be set before the first nextId() call. If nodeId is not\n+     * explicitly defined it's calculated based on machines mac address.\n+     *\n+     * @param nodeId an int value between (inclusive) 0 and 1023.\n+     */\n+    public static void setNodeId(int nodeId) {\n+        getInstance(nodeId);\n+    }\n \n     public static Long nextId() {\n-        SequenceGenerator sequenceGenerator = instance.computeIfAbsent(INSTANCE_KEY, k -> new SequenceGenerator());\n-        return sequenceGenerator.nextId();\n+        return getInstance(null).sequenceGenerator.nextId();\n+    }\n+\n+    private static Sequence getInstance(Integer nodeId) {\n+        return instance.computeIfAbsent(0, k -> new Sequence(nodeId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d69a995a0ccbe7c041ae0c6fc2093d6d7a8cba60"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d69a995a0ccbe7c041ae0c6fc2093d6d7a8cba60", "author": {"user": {"login": "matejonnet", "name": "Matej Lazar"}}, "url": "https://github.com/project-ncl/pnc/commit/d69a995a0ccbe7c041ae0c6fc2093d6d7a8cba60", "committedDate": "2020-04-20T21:39:13Z", "message": "Add an option to define nodeId for sequence generator."}, "afterCommit": {"oid": "a616da12af6bbb1831557a2a5c738cab776025ee", "author": {"user": {"login": "matejonnet", "name": "Matej Lazar"}}, "url": "https://github.com/project-ncl/pnc/commit/a616da12af6bbb1831557a2a5c738cab776025ee", "committedDate": "2020-04-22T09:55:40Z", "message": "Add an option to define nodeId for sequence generator."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0ecf5498984cffa416669e5fff980af3fd2a8de", "author": {"user": {"login": "matejonnet", "name": "Matej Lazar"}}, "url": "https://github.com/project-ncl/pnc/commit/a0ecf5498984cffa416669e5fff980af3fd2a8de", "committedDate": "2020-04-22T11:07:16Z", "message": "Add an option to define nodeId for sequence generator."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a616da12af6bbb1831557a2a5c738cab776025ee", "author": {"user": {"login": "matejonnet", "name": "Matej Lazar"}}, "url": "https://github.com/project-ncl/pnc/commit/a616da12af6bbb1831557a2a5c738cab776025ee", "committedDate": "2020-04-22T09:55:40Z", "message": "Add an option to define nodeId for sequence generator."}, "afterCommit": {"oid": "a0ecf5498984cffa416669e5fff980af3fd2a8de", "author": {"user": {"login": "matejonnet", "name": "Matej Lazar"}}, "url": "https://github.com/project-ncl/pnc/commit/a0ecf5498984cffa416669e5fff980af3fd2a8de", "committedDate": "2020-04-22T11:07:16Z", "message": "Add an option to define nodeId for sequence generator."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2624, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}