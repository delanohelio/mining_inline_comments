{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5ODY4NDY2", "number": 3632, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNTowOToyMlrOD9o3kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMjowMzo0OFrOD9xE0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTU5MzEyOnYy", "diffSide": "RIGHT", "path": "be/src/olap/data_dir.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNTowOToyMlrOGXQCxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNTowOToyMlrOGXQCxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzMzI4NQ==", "bodyText": "There may be thousands of tablets. This time the log is very large.\nIn addition, the problematic tablet has actually been printed in the log, so there is no need to print the tablet id. Just print size is enough", "url": "https://github.com/apache/incubator-doris/pull/3632#discussion_r427033285", "createdAt": "2020-05-19T05:09:22Z", "author": {"login": "morningman"}, "path": "be/src/olap/data_dir.cpp", "diffHunk": "@@ -694,19 +694,26 @@ OLAPStatus DataDir::load() {\n     // create tablet from tablet meta and add it to tablet mgr\n     LOG(INFO) << \"begin loading tablet from meta\";\n     std::set<int64_t> tablet_ids;\n-    auto load_tablet_func = [this, &tablet_ids](int64_t tablet_id, int32_t schema_hash,\n+    std::set<int64_t> failed_tablet_ids;\n+    auto load_tablet_func = [this, &tablet_ids, &failed_tablet_ids](int64_t tablet_id, int32_t schema_hash,\n                                                 const std::string& value) -> bool {\n         OLAPStatus status = _tablet_manager->load_tablet_from_meta(this, tablet_id, schema_hash,\n                                                                    value, false, false);\n         if (status != OLAP_SUCCESS) {\n             LOG(WARNING) << \"load tablet from header failed. status:\" << status\n                          << \", tablet=\" << tablet_id << \".\" << schema_hash;\n+            failed_tablet_ids.insert(tablet_id);\n         } else {\n             tablet_ids.insert(tablet_id);\n         }\n         return true;\n     };\n     OLAPStatus load_tablet_status = TabletMetaManager::traverse_headers(_meta, load_tablet_func);\n+    if (failed_tablet_ids.size() != 0 && !config::ignore_load_tablet_failure) {\n+        std::stringstream ss;\n+        std::copy(failed_tablet_ids.begin(), failed_tablet_ids.end(), std::ostream_iterator<int64_t>(ss, \",\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6261bef464ff8d79239f4dc9972fd9cfb5addc43"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDkzNzc2OnYy", "diffSide": "RIGHT", "path": "docs/zh-CN/administrator-guide/config/be_config.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMjowMzo0OFrOGXdJZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMjowMzo0OFrOGXdJZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0Nzk3Mg==", "bodyText": "\u52a0\u5728--\u52a0\u8f7d", "url": "https://github.com/apache/incubator-doris/pull/3632#discussion_r427247972", "createdAt": "2020-05-19T12:03:48Z", "author": {"login": "wutiangan"}, "path": "docs/zh-CN/administrator-guide/config/be_config.md", "diffHunk": "@@ -396,3 +396,8 @@ under the License.\n ### `webserver_port`\n \n ### `write_buffer_size`\n+\n+### ignore_load_tablet_failure\n+* \u7c7b\u578b\uff1a\u5e03\u5c14\n+* \u63cf\u8ff0\uff1a\u7528\u6765\u51b3\u5b9a\u5728\u6709tablet \u52a0\u5728\u5931\u8d25\u7684\u60c5\u51b5\u4e0b\u662f\u5426\u5ffd\u7565\u9519\u8bef\uff0c\u7ee7\u7eed\u542f\u52a8be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96a4151ea56fbeac1687064528ae1a1eafadf2ae"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1576, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}