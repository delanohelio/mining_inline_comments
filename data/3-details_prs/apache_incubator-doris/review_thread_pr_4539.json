{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNDU4MTQy", "number": 4539, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQwODo1MjozOFrOEglcLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQwODo1MjozOFrOEglcLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNjAzMzEwOnYy", "diffSide": "RIGHT", "path": "be/src/olap/data_dir.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQwODo1MjozOFrOHNgsbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQwODo1MjozOFrOHNgsbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkyOTE5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG(WARNING) << \"check incompatible old format meta fails, it may lead to data missing!!!\" << _path;\n          \n          \n            \n                    LOG(WARNING) << \"check incompatible old format meta fails, it may lead to data missing!!! \" << _path;", "url": "https://github.com/apache/incubator-doris/pull/4539#discussion_r483929199", "createdAt": "2020-09-05T08:52:38Z", "author": {"login": "morningman"}, "path": "be/src/olap/data_dir.cpp", "diffHunk": "@@ -602,13 +602,47 @@ OLAPStatus DataDir::set_convert_finished() {\n     return OLAP_SUCCESS;\n }\n \n+OLAPStatus DataDir::_check_incompatible_old_format_tablet() {\n+\n+    auto check_incompatible_old_func = [this](int64_t tablet_id, int32_t schema_hash,\n+                                              const std::string& value) -> bool {\n+                                                  \n+        // if strict check incompatible old format, then log fatal\n+        if (config::storage_strict_check_incompatible_old_format) {\n+            LOG(FATAL) << \"There are incompatible old format metas, current version does not support \"\n+                       << \"and it may lead to data missing!!! \"\n+                       << \"talbet_id = \" << tablet_id << \" schema_hash = \" << schema_hash;\n+        } else {\n+            LOG(WARNING)\n+                    << \"There are incompatible old format metas, current version does not support \"\n+                    << \"and it may lead to data missing!!! \"\n+                    << \"talbet_id = \" << tablet_id << \" schema_hash = \" << schema_hash;\n+        }\n+        return false;\n+    };\n+\n+    // seek old header prefix. when check_incompatible_old_func is called, it has old format in olap_meta\n+    OLAPStatus check_incompatible_old_status = TabletMetaManager::traverse_headers(\n+            _meta, check_incompatible_old_func, OLD_HEADER_PREFIX);\n+    if (check_incompatible_old_status != OLAP_SUCCESS) {\n+        LOG(WARNING) << \"check incompatible old format meta fails, it may lead to data missing!!!\" << _path;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2722f75d419193a5555d52342c83cbb8514806c"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1087, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}