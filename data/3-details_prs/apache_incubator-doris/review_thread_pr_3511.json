{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0Njg1MTE4", "number": 3511, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjoxMzoyMlrOD6UjBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjoxNDo0MFrOD6UlXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDgwNjQ0OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/InPredicate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjoxMzoyMlrOGSGAKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMjowNToxNFrOGSWczg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYyNTg5OA==", "bodyText": "Why use static variable?  I think local variable is enough.", "url": "https://github.com/apache/incubator-doris/pull/3511#discussion_r421625898", "createdAt": "2020-05-07T16:13:22Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/analysis/InPredicate.java", "diffHunk": "@@ -54,6 +54,8 @@\n     private static final String IN = \"in\";\n     private static final String NOT_IN = \"not_in\";\n \n+    private static final NullLiteral NULL_LITERAL = new NullLiteral();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd1290949d146c68f704975c5835a1df0fb3b35d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg5NTM3NA==", "bodyText": "This object does not need to have one for every InPredicate instance.", "url": "https://github.com/apache/incubator-doris/pull/3511#discussion_r421895374", "createdAt": "2020-05-08T02:05:14Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/analysis/InPredicate.java", "diffHunk": "@@ -54,6 +54,8 @@\n     private static final String IN = \"in\";\n     private static final String NOT_IN = \"not_in\";\n \n+    private static final NullLiteral NULL_LITERAL = new NullLiteral();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYyNTg5OA=="}, "originalCommit": {"oid": "cd1290949d146c68f704975c5835a1df0fb3b35d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDgxMjQ1OnYy", "diffSide": "RIGHT", "path": "fe/src/test/java/org/apache/doris/planner/QueryPlanTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjoxNDo0MFrOGSGDsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMjowMTowOFrOGSWY9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYyNjgwMA==", "bodyText": "please move the test to ConstantExpressTest", "url": "https://github.com/apache/incubator-doris/pull/3511#discussion_r421626800", "createdAt": "2020-05-07T16:14:40Z", "author": {"login": "kangkaisen"}, "path": "fe/src/test/java/org/apache/doris/planner/QueryPlanTest.java", "diffHunk": "@@ -725,4 +725,58 @@ public void testJoinPredicateTransitivityWithSubqueryInWhereClause() throws Exce\n         Assert.assertTrue(explainString.contains(\"CROSS JOIN\"));\n         Assert.assertTrue(!explainString.contains(\"PREDICATES\"));\n     }\n+\n+    @Test\n+    public void testConstantInPredicate() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd1290949d146c68f704975c5835a1df0fb3b35d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg5NDM5MA==", "bodyText": "OK", "url": "https://github.com/apache/incubator-doris/pull/3511#discussion_r421894390", "createdAt": "2020-05-08T02:01:08Z", "author": {"login": "morningman"}, "path": "fe/src/test/java/org/apache/doris/planner/QueryPlanTest.java", "diffHunk": "@@ -725,4 +725,58 @@ public void testJoinPredicateTransitivityWithSubqueryInWhereClause() throws Exce\n         Assert.assertTrue(explainString.contains(\"CROSS JOIN\"));\n         Assert.assertTrue(!explainString.contains(\"PREDICATES\"));\n     }\n+\n+    @Test\n+    public void testConstantInPredicate() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYyNjgwMA=="}, "originalCommit": {"oid": "cd1290949d146c68f704975c5835a1df0fb3b35d"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1763, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}