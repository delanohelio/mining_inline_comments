{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyOTU0MDc1", "number": 3188, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMjo1NDo0N1rODreRcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMjo1NzoyMVrODtW6ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTExMzQ2OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMjo1NDo0N1rOF71ppw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMjo1NDo0N1rOF71ppw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4OTMxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // When a join statement with a join hit, the decorated part should be reordered as a whole,\n          \n          \n            \n                // When a join statement with a join hint, the decorated part should be reordered as a whole,", "url": "https://github.com/apache/incubator-doris/pull/3188#discussion_r398289319", "createdAt": "2020-03-26T02:54:47Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "diffHunk": "@@ -612,11 +611,14 @@ public void materializeRequiredSlots(Analyzer analyzer) throws AnalysisException\n         }\n     }\n \n+    // When a join statement with a join hit, the decorated part should be reordered as a whole,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c9337a8d84c9d0eb63d029125afdbb07859800"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjA5NzA5OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/planner/CrossJoinNode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDo1MzoyNFrOF9tr4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDo1MzoyNFrOF9tr4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI1NTk2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     LOG.debug(\"stats CrossJoin: cardinality=\" + Long.toString(cardinality));\n          \n          \n            \n                     LOG.debug(\"stats CrossJoin: cardinality= {}\", Long.toString(cardinality));", "url": "https://github.com/apache/incubator-doris/pull/3188#discussion_r400255969", "createdAt": "2020-03-30T14:53:24Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/planner/CrossJoinNode.java", "diffHunk": "@@ -59,16 +59,16 @@ public TableRef getInnerRef() {\n \n     @Override\n     public void computeStats(Analyzer analyzer) {\n-        // super.computeStats(analyzer);\n-        // if (getChild(0).cardinality_ == -1 || getChild(1).cardinality_ == -1) {\n-        //   cardinality_ = -1;\n-        // } else {\n-        //   cardinality_ = getChild(0).cardinality_ * getChild(1).cardinality_;\n-        //   if (computeSelectivity() != -1) {\n-        //     cardinality_ = Math.round(((double) cardinality_) * computeSelectivity());\n-        //   }\n-        // }\n-        // LOG.debug(\"stats CrossJoin: cardinality=\" + Long.toString(cardinality_));\n+         super.computeStats(analyzer);\n+         if (getChild(0).cardinality == -1 || getChild(1).cardinality == -1) {\n+           cardinality = -1;\n+         } else {\n+           cardinality = getChild(0).cardinality * getChild(1).cardinality;\n+           if (computeSelectivity() != -1) {\n+             cardinality = Math.round(((double) cardinality) * computeSelectivity());\n+           }\n+         }\n+         LOG.debug(\"stats CrossJoin: cardinality=\" + Long.toString(cardinality));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd0dd516dfd633d5a56689b9b4146941cfa11bfa"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODg3OTcxOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMjo1NzoyMVrOF-vIFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMjo1NzoyMVrOF-vIFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMyODE0OA==", "bodyText": "How about cross join?", "url": "https://github.com/apache/incubator-doris/pull/3188#discussion_r401328148", "createdAt": "2020-04-01T02:57:21Z", "author": {"login": "wutiangan"}, "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "diffHunk": "@@ -612,11 +611,14 @@ public void materializeRequiredSlots(Analyzer analyzer) throws AnalysisException\n         }\n     }\n \n+    // When a join statement with a join hint, the decorated part should be reordered as a whole,\n+    // rather than individually.\n     protected void reorderTable(Analyzer analyzer) throws AnalysisException {\n-        List<Pair<TableRef, Long>> candidates = Lists.newArrayList();\n+        List<Pair<List<TableRef>, Long>> candidates = Lists.newArrayList();\n \n-        // New pair of table ref and row count\n-        for (TableRef tblRef : fromClause_) {\n+        for (int i = 0; i < fromClause_.size(); ++i) {\n+            List<TableRef> tableRefs = new ArrayList<>();\n+            TableRef tblRef = fromClause_.get(i);\n             if (tblRef.getJoinOp() != JoinOperator.INNER_JOIN) {\n                 // Unsupported reorder outer join", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92c299f8f535df42bc3e2d425b83a64efd629898"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2005, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}