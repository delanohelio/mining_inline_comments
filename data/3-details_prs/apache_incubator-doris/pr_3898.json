{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MTc4ODYz", "number": 3898, "title": "Support import true or false as boolean value", "bodyText": "Fixes #3831\nAfter this PR\ninsert into: 1/\"1\" -> 1, 0/\"0\"->0, true/\"true\"->1, false/\"false\" -> 0, \"10\"->null, \"xxxx\" -> null\nload: 1/true -> 1, 0/false -> 0,  other -> null", "createdAt": "2020-06-18T01:43:14Z", "url": "https://github.com/apache/incubator-doris/pull/3898", "merged": true, "mergeCommit": {"oid": "5ade21b55d773b4160dfc0070f14bdc31a44981f"}, "closed": true, "closedAt": "2020-07-02T05:58:25Z", "author": {"login": "yangzhg"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsbHiOgFqTQzMzEwNTY3Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwmMCJgFqTQ0MDY2NzM1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMTA1Njcz", "url": "https://github.com/apache/incubator-doris/pull/3898#pullrequestreview-433105673", "createdAt": "2020-06-18T09:30:08Z", "commit": {"oid": "d153c7a1ed85c47edd987502ad3205078bc58ce8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTozMDowOFrOGlnWjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTozNDoxMFrOGlnfWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA5NTI0Nw==", "bodyText": "Brackets is not aligned.", "url": "https://github.com/apache/incubator-doris/pull/3898#discussion_r442095247", "createdAt": "2020-06-18T09:30:08Z", "author": {"login": "chaoyli"}, "path": "be/src/exprs/cast_functions.cpp", "diffHunk": "@@ -229,6 +229,17 @@ StringVal CastFunctions::cast_to_string_val(FunctionContext* ctx, const StringVa\n   return sv;\n }\n \n+BooleanVal CastFunctions::cast_to_boolean_val(FunctionContext* ctx, const StringVal& val) {\n+    if (val.is_null) return BooleanVal::null(); \n+        StringParser::ParseResult result;\n+        BooleanVal ret;\n+        ret.val = StringParser::string_to_bool(reinterpret_cast<char*>(val.ptr), val.len, &result);\n+        if (UNLIKELY(result != StringParser::PARSE_SUCCESS || std::isnan(ret.val) || std::isinf(ret.val))) { \n+            return BooleanVal::null();\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d153c7a1ed85c47edd987502ad3205078bc58ce8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA5NzQ5Ng==", "bodyText": "I found string_to_bool will convert \"Truetest\" to be true, it is ok?\n543 inline bool StringParser::string_to_bool_internal(const char* s, int len, ParseResult* result) {\n544     *result = PARSE_SUCCESS;\n545\n546     if (len >= 4 && (s[0] == 't' || s[0] == 'T')) {\n547         bool match = (s[1] == 'r' || s[1] == 'R') &&\n548             (s[2] == 'u' || s[2] == 'U') &&\n549             (s[3] == 'e' || s[3] == 'E');\n550         if (match && LIKELY(is_all_whitespace(s + 4, len - 4))) {\n551             return true;\n552         }\n553     } else if (len >= 5 && (s[0] == 'f' || s[0] == 'F')) {\n554         bool match = (s[1] == 'a' || s[1] == 'A') &&\n555             (s[2] == 'l' || s[2] == 'L') &&\n556             (s[3] == 's' || s[3] == 'S') &&\n557             (s[4] == 'e' || s[4] == 'E');\n558         if (match && LIKELY(is_all_whitespace(s + 5, len - 5))){\n559             return false;\n560         }\n561     }", "url": "https://github.com/apache/incubator-doris/pull/3898#discussion_r442097496", "createdAt": "2020-06-18T09:34:10Z", "author": {"login": "chaoyli"}, "path": "be/src/olap/utils.cpp", "diffHunk": "@@ -1264,6 +1265,15 @@ bool valid_datetime(const string &value_str) {\n     }\n }\n \n+bool valid_bool(const std::string& value_str) {\n+    if (value_str == \"0\" || value_str == \"1\") {\n+        return true;\n+    }\n+    StringParser::ParseResult result;\n+    StringParser::string_to_bool(value_str.c_str(), value_str.length(), &result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d153c7a1ed85c47edd987502ad3205078bc58ce8"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzOTk5Nzg1", "url": "https://github.com/apache/incubator-doris/pull/3898#pullrequestreview-433999785", "createdAt": "2020-06-19T11:21:35Z", "commit": {"oid": "9ad5390eac365cdd23e0b0206774136b3a73fc64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMToyMTozNVrOGmRZmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMToyMTozNVrOGmRZmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc4NDE1Mw==", "bodyText": "modify the indent", "url": "https://github.com/apache/incubator-doris/pull/3898#discussion_r442784153", "createdAt": "2020-06-19T11:21:35Z", "author": {"login": "wutiangan"}, "path": "be/src/exprs/cast_functions.cpp", "diffHunk": "@@ -229,6 +229,17 @@ StringVal CastFunctions::cast_to_string_val(FunctionContext* ctx, const StringVa\n   return sv;\n }\n \n+BooleanVal CastFunctions::cast_to_boolean_val(FunctionContext* ctx, const StringVal& val) {\n+    if (val.is_null) return BooleanVal::null(); \n+        StringParser::ParseResult result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad5390eac365cdd23e0b0206774136b3a73fc64"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDA4NTI5", "url": "https://github.com/apache/incubator-doris/pull/3898#pullrequestreview-434008529", "createdAt": "2020-06-19T11:37:44Z", "commit": {"oid": "9ad5390eac365cdd23e0b0206774136b3a73fc64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTozNzo0NVrOGmRyXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTozNzo0NVrOGmRyXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc5MDQ5NQ==", "bodyText": "why you add the \"std::isnan(ret.val) || std::isinf(ret.val)\"\uff1fif result == StringParser::PARSE_SUCCESS, can val be nan or inf ?", "url": "https://github.com/apache/incubator-doris/pull/3898#discussion_r442790495", "createdAt": "2020-06-19T11:37:45Z", "author": {"login": "wutiangan"}, "path": "be/src/exprs/cast_functions.cpp", "diffHunk": "@@ -229,6 +229,17 @@ StringVal CastFunctions::cast_to_string_val(FunctionContext* ctx, const StringVa\n   return sv;\n }\n \n+BooleanVal CastFunctions::cast_to_boolean_val(FunctionContext* ctx, const StringVal& val) {\n+    if (val.is_null) return BooleanVal::null(); \n+        StringParser::ParseResult result;\n+        BooleanVal ret;\n+        ret.val = StringParser::string_to_bool(reinterpret_cast<char*>(val.ptr), val.len, &result);\n+        if (UNLIKELY(result != StringParser::PARSE_SUCCESS || std::isnan(ret.val) || std::isinf(ret.val))) { ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad5390eac365cdd23e0b0206774136b3a73fc64"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDEwNDIw", "url": "https://github.com/apache/incubator-doris/pull/3898#pullrequestreview-434010420", "createdAt": "2020-06-19T11:41:14Z", "commit": {"oid": "9ad5390eac365cdd23e0b0206774136b3a73fc64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTo0MToxNFrOGmR30g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTo0MToxNFrOGmR30g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc5MTg5MA==", "bodyText": "StringParser::string_to_bool will consider \"1\" to false, is it ok?", "url": "https://github.com/apache/incubator-doris/pull/3898#discussion_r442791890", "createdAt": "2020-06-19T11:41:14Z", "author": {"login": "wutiangan"}, "path": "be/src/exprs/cast_functions.cpp", "diffHunk": "@@ -229,6 +229,17 @@ StringVal CastFunctions::cast_to_string_val(FunctionContext* ctx, const StringVa\n   return sv;\n }\n \n+BooleanVal CastFunctions::cast_to_boolean_val(FunctionContext* ctx, const StringVal& val) {\n+    if (val.is_null) return BooleanVal::null(); \n+        StringParser::ParseResult result;\n+        BooleanVal ret;\n+        ret.val = StringParser::string_to_bool(reinterpret_cast<char*>(val.ptr), val.len, &result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad5390eac365cdd23e0b0206774136b3a73fc64"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97904cf39abbb29943fbb370299fe4a2e6803763", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/97904cf39abbb29943fbb370299fe4a2e6803763", "committedDate": "2020-06-19T12:20:30Z", "message": "xx"}, "afterCommit": {"oid": "d3ad4247318ab09801de36fa5b6e6db619d6440d", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/d3ad4247318ab09801de36fa5b6e6db619d6440d", "committedDate": "2020-06-28T08:58:04Z", "message": "make insert into and load consistent"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3ad4247318ab09801de36fa5b6e6db619d6440d", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/d3ad4247318ab09801de36fa5b6e6db619d6440d", "committedDate": "2020-06-28T08:58:04Z", "message": "make insert into and load consistent"}, "afterCommit": {"oid": "2a15dff4767e708283ad7850b63d4a81f6cd7c82", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/2a15dff4767e708283ad7850b63d4a81f6cd7c82", "committedDate": "2020-06-29T06:37:33Z", "message": "make insert into and load consistent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10346a7c18cd620fcb5be64d47bf25125b17f9ff", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/10346a7c18cd620fcb5be64d47bf25125b17f9ff", "committedDate": "2020-06-30T01:54:13Z", "message": "first"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df1953eb0f3c98f04c7536ea149b88cc0853145c", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/df1953eb0f3c98f04c7536ea149b88cc0853145c", "committedDate": "2020-06-30T01:54:13Z", "message": "first"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e30e1ca31a91397a848df241697ad949aa25cf2", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/0e30e1ca31a91397a848df241697ad949aa25cf2", "committedDate": "2020-06-30T01:54:13Z", "message": "fix code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f0e5971620a2be3517415f81b77a225e0dd9132", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/3f0e5971620a2be3517415f81b77a225e0dd9132", "committedDate": "2020-06-30T01:54:13Z", "message": "xx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3294e897eefdfebb202bb245ad4f54978cbee4a0", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/3294e897eefdfebb202bb245ad4f54978cbee4a0", "committedDate": "2020-06-30T01:54:13Z", "message": "make insert into and load consistent"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a15dff4767e708283ad7850b63d4a81f6cd7c82", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/2a15dff4767e708283ad7850b63d4a81f6cd7c82", "committedDate": "2020-06-29T06:37:33Z", "message": "make insert into and load consistent"}, "afterCommit": {"oid": "3294e897eefdfebb202bb245ad4f54978cbee4a0", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/3294e897eefdfebb202bb245ad4f54978cbee4a0", "committedDate": "2020-06-30T01:54:13Z", "message": "make insert into and load consistent"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjY3MzU2", "url": "https://github.com/apache/incubator-doris/pull/3898#pullrequestreview-440667356", "createdAt": "2020-07-01T08:43:59Z", "commit": {"oid": "3294e897eefdfebb202bb245ad4f54978cbee4a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2586, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}