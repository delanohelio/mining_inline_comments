{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMjIwNzE1", "number": 3815, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMDo1MzowNVrOEEPlBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzoxNjo1NFrOEErTYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODg0OTk3OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/master/ReportHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMDo1MzowNVrOGhvhCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzowNzowOFrOGicOJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzNDY5Nw==", "bodyText": "Have you tested its performance? There may be millions of tablet in tabletIds. I am not sure how long it will take to process that much of tablets.", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438034697", "createdAt": "2020-06-10T10:53:05Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/master/ReportHandler.java", "diffHunk": "@@ -388,21 +389,26 @@ private static void sync(Map<Long, TTablet> backendTablets, ListMultimap<Long, L\n                 List<Long> tabletIds = tabletSyncMap.get(dbId);\n                 LOG.info(\"before sync tablets in db[{}]. report num: {}. backend[{}]\",\n                          dbId, tabletIds.size(), backendId);\n-\n-                for (Long tabletId : tabletIds) {\n-                    long tableId = invertedIndex.getTableId(tabletId);\n+                List<TabletMeta> tabletMetaList = invertedIndex.getTabletMetaList(tabletIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8555ee95ddba7cff3926b5d1a6de51aaf26f469"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA1Nzk5NA==", "bodyText": "cost for getting a list of size for 1000000 from map  is about 40 ~ 50ms, here we only process tablets in one be and which need to sync, so i think  1000000 for testing is large enough", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438057994", "createdAt": "2020-06-10T11:40:53Z", "author": {"login": "caiconghui"}, "path": "fe/src/main/java/org/apache/doris/master/ReportHandler.java", "diffHunk": "@@ -388,21 +389,26 @@ private static void sync(Map<Long, TTablet> backendTablets, ListMultimap<Long, L\n                 List<Long> tabletIds = tabletSyncMap.get(dbId);\n                 LOG.info(\"before sync tablets in db[{}]. report num: {}. backend[{}]\",\n                          dbId, tabletIds.size(), backendId);\n-\n-                for (Long tabletId : tabletIds) {\n-                    long tableId = invertedIndex.getTableId(tabletId);\n+                List<TabletMeta> tabletMetaList = invertedIndex.getTabletMetaList(tabletIds);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzNDY5Nw=="}, "originalCommit": {"oid": "e8555ee95ddba7cff3926b5d1a6de51aaf26f469"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2NzE0Mw==", "bodyText": "OK", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438767143", "createdAt": "2020-06-11T13:07:08Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/master/ReportHandler.java", "diffHunk": "@@ -388,21 +389,26 @@ private static void sync(Map<Long, TTablet> backendTablets, ListMultimap<Long, L\n                 List<Long> tabletIds = tabletSyncMap.get(dbId);\n                 LOG.info(\"before sync tablets in db[{}]. report num: {}. backend[{}]\",\n                          dbId, tabletIds.size(), backendId);\n-\n-                for (Long tabletId : tabletIds) {\n-                    long tableId = invertedIndex.getTableId(tabletId);\n+                List<TabletMeta> tabletMetaList = invertedIndex.getTabletMetaList(tabletIds);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzNDY5Nw=="}, "originalCommit": {"oid": "e8555ee95ddba7cff3926b5d1a6de51aaf26f469"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzM2Nzk4OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/catalog/TabletInvertedIndex.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzoxMDo0MlrOGicWaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTowMjoyMlrOGiha-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2OTI1OQ==", "bodyText": "It is very error-prone to result a list will null in it.\nHow about using getOrDefault() method, and return an NonExistTabletMeta is not found?\nAnd NonExistTabletMeta can be a final static member with all id as NON_EXIST_VALUE in it.\nIn this way, we don't have to check null each time we visit the returned list.", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438769259", "createdAt": "2020-06-11T13:10:42Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/catalog/TabletInvertedIndex.java", "diffHunk": "@@ -298,57 +262,28 @@ public Long getTabletIdByReplica(long replicaId) {\n         }\n     }\n \n-    public long getPartitionId(long tabletId) {\n-        readLock();\n-        try {\n-            if (tabletMetaMap.containsKey(tabletId)) {\n-                return tabletMetaMap.get(tabletId).getPartitionId();\n-            }\n-            return NOT_EXIST_VALUE;\n-        } finally {\n-            readUnlock();\n-        }\n-    }\n-\n-    public long getIndexId(long tabletId) {\n+    public TabletMeta getTabletMeta(long tabletId) {\n         readLock();\n         try {\n-            if (tabletMetaMap.containsKey(tabletId)) {\n-                return tabletMetaMap.get(tabletId).getIndexId();\n-            }\n-            return NOT_EXIST_VALUE;\n+            return tabletMetaMap.get(tabletId);\n         } finally {\n             readUnlock();\n         }\n     }\n \n-    public int getEffectiveSchemaHash(long tabletId) {\n-        // always get old schema hash(as effective one)\n+    public List<TabletMeta> getTabletMetaList(List<Long> tabletIdList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8f3189fee2098abb176e6b332a616fa8d0e9d29"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg1MjM0NA==", "bodyText": "ok", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438852344", "createdAt": "2020-06-11T15:02:22Z", "author": {"login": "caiconghui"}, "path": "fe/src/main/java/org/apache/doris/catalog/TabletInvertedIndex.java", "diffHunk": "@@ -298,57 +262,28 @@ public Long getTabletIdByReplica(long replicaId) {\n         }\n     }\n \n-    public long getPartitionId(long tabletId) {\n-        readLock();\n-        try {\n-            if (tabletMetaMap.containsKey(tabletId)) {\n-                return tabletMetaMap.get(tabletId).getPartitionId();\n-            }\n-            return NOT_EXIST_VALUE;\n-        } finally {\n-            readUnlock();\n-        }\n-    }\n-\n-    public long getIndexId(long tabletId) {\n+    public TabletMeta getTabletMeta(long tabletId) {\n         readLock();\n         try {\n-            if (tabletMetaMap.containsKey(tabletId)) {\n-                return tabletMetaMap.get(tabletId).getIndexId();\n-            }\n-            return NOT_EXIST_VALUE;\n+            return tabletMetaMap.get(tabletId);\n         } finally {\n             readUnlock();\n         }\n     }\n \n-    public int getEffectiveSchemaHash(long tabletId) {\n-        // always get old schema hash(as effective one)\n+    public List<TabletMeta> getTabletMetaList(List<Long> tabletIdList) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2OTI1OQ=="}, "originalCommit": {"oid": "a8f3189fee2098abb176e6b332a616fa8d0e9d29"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzM5MjM0OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/master/ReportHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzoxNjo1NFrOGicluw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTowMjozMlrOGihbdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc3MzE3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                long indexId = tabletMeta.getPartitionId();\n          \n          \n            \n                                long indexId = tabletMeta.getIndexId();\n          \n      \n    \n    \n  \n\nPlease double check again for similar errors.", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438773179", "createdAt": "2020-06-11T13:16:54Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/master/ReportHandler.java", "diffHunk": "@@ -388,21 +389,26 @@ private static void sync(Map<Long, TTablet> backendTablets, ListMultimap<Long, L\n                 List<Long> tabletIds = tabletSyncMap.get(dbId);\n                 LOG.info(\"before sync tablets in db[{}]. report num: {}. backend[{}]\",\n                          dbId, tabletIds.size(), backendId);\n-\n-                for (Long tabletId : tabletIds) {\n-                    long tableId = invertedIndex.getTableId(tabletId);\n+                List<TabletMeta> tabletMetaList = invertedIndex.getTabletMetaList(tabletIds);\n+                for (int i = 0; i < tabletMetaList.size(); i++) {\n+                    TabletMeta tabletMeta = tabletMetaList.get(i);\n+                    if (tabletMeta == null) {\n+                        continue;\n+                    }\n+                    long tabletId = tabletIds.get(i);\n+                    long tableId = tabletMeta.getTableId();\n                     OlapTable olapTable = (OlapTable) db.getTable(tableId);\n                     if (olapTable == null) {\n                         continue;\n                     }\n \n-                    long partitionId = invertedIndex.getPartitionId(tabletId);\n+                    long partitionId = tabletMeta.getPartitionId();\n                     Partition partition = olapTable.getPartition(partitionId);\n                     if (partition == null) {\n                         continue;\n                     }\n \n-                    long indexId = invertedIndex.getIndexId(tabletId);\n+                    long indexId = tabletMeta.getPartitionId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8f3189fee2098abb176e6b332a616fa8d0e9d29"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg1MjQ3MA==", "bodyText": "fix", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438852470", "createdAt": "2020-06-11T15:02:32Z", "author": {"login": "caiconghui"}, "path": "fe/src/main/java/org/apache/doris/master/ReportHandler.java", "diffHunk": "@@ -388,21 +389,26 @@ private static void sync(Map<Long, TTablet> backendTablets, ListMultimap<Long, L\n                 List<Long> tabletIds = tabletSyncMap.get(dbId);\n                 LOG.info(\"before sync tablets in db[{}]. report num: {}. backend[{}]\",\n                          dbId, tabletIds.size(), backendId);\n-\n-                for (Long tabletId : tabletIds) {\n-                    long tableId = invertedIndex.getTableId(tabletId);\n+                List<TabletMeta> tabletMetaList = invertedIndex.getTabletMetaList(tabletIds);\n+                for (int i = 0; i < tabletMetaList.size(); i++) {\n+                    TabletMeta tabletMeta = tabletMetaList.get(i);\n+                    if (tabletMeta == null) {\n+                        continue;\n+                    }\n+                    long tabletId = tabletIds.get(i);\n+                    long tableId = tabletMeta.getTableId();\n                     OlapTable olapTable = (OlapTable) db.getTable(tableId);\n                     if (olapTable == null) {\n                         continue;\n                     }\n \n-                    long partitionId = invertedIndex.getPartitionId(tabletId);\n+                    long partitionId = tabletMeta.getPartitionId();\n                     Partition partition = olapTable.getPartition(partitionId);\n                     if (partition == null) {\n                         continue;\n                     }\n \n-                    long indexId = invertedIndex.getIndexId(tabletId);\n+                    long indexId = tabletMeta.getPartitionId();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc3MzE3OQ=="}, "originalCommit": {"oid": "a8f3189fee2098abb176e6b332a616fa8d0e9d29"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1488, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}