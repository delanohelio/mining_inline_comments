{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0OTM3OTA5", "number": 3881, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMzoxMjoxNFrOEFxAsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNToyOTozNFrOEF_jOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDgxMzMxOnYy", "diffSide": "RIGHT", "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMzoxMjoxNFrOGkJtCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDowNToxNVrOGkUZqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU2MDkwNw==", "bodyText": "Maybe too many logs here.", "url": "https://github.com/apache/incubator-doris/pull/3881#discussion_r440560907", "createdAt": "2020-06-16T03:12:14Z", "author": {"login": "yiguolei"}, "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "diffHunk": "@@ -550,19 +550,20 @@ public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n                             currentStreamOffset, offset);\n                 }\n             }\n-            byte[] buf;\n+            ByteBuffer buf;\n             if (length > readBufferSize) {\n-                buf = new byte[readBufferSize];\n+                buf = ByteBuffer.allocate(readBufferSize);\n             } else {\n-                buf = new byte[(int) length];\n+                buf = ByteBuffer.allocate((int) length);\n             }\n             try {\n-                int readLength = fsDataInputStream.read(buf);\n+                int readLength = readByteBufferFully(fsDataInputStream, buf);\n                 if (readLength < 0) {\n                     throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                             \"end of file reached\");\n                 }\n-                return ByteBuffer.wrap(buf, 0, readLength);\n+                logger.info(\"read length:\" + length + \", readBufferSize:\" + readBufferSize + \", return length:\" + readLength);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcdaeb57ed8fe47ae9e55f381bc54bd85cfe3279"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDczNjE3MQ==", "bodyText": "Turn log level to debug.", "url": "https://github.com/apache/incubator-doris/pull/3881#discussion_r440736171", "createdAt": "2020-06-16T10:05:15Z", "author": {"login": "xy720"}, "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "diffHunk": "@@ -550,19 +550,20 @@ public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n                             currentStreamOffset, offset);\n                 }\n             }\n-            byte[] buf;\n+            ByteBuffer buf;\n             if (length > readBufferSize) {\n-                buf = new byte[readBufferSize];\n+                buf = ByteBuffer.allocate(readBufferSize);\n             } else {\n-                buf = new byte[(int) length];\n+                buf = ByteBuffer.allocate((int) length);\n             }\n             try {\n-                int readLength = fsDataInputStream.read(buf);\n+                int readLength = readByteBufferFully(fsDataInputStream, buf);\n                 if (readLength < 0) {\n                     throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                             \"end of file reached\");\n                 }\n-                return ByteBuffer.wrap(buf, 0, readLength);\n+                logger.info(\"read length:\" + length + \", readBufferSize:\" + readBufferSize + \", return length:\" + readLength);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU2MDkwNw=="}, "originalCommit": {"oid": "fcdaeb57ed8fe47ae9e55f381bc54bd85cfe3279"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzE5NTQ2OnYy", "diffSide": "RIGHT", "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNToyOTozNFrOGkhCPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjo1MDo0MFrOGkzzIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MzE2Nw==", "bodyText": "if (logger.isDebugEnable()) {\nlogger.debug(\"read buffer from input stream, buffer size: {}, read length: {}\", buf.capacity(), readLength);\n}", "url": "https://github.com/apache/incubator-doris/pull/3881#discussion_r440943167", "createdAt": "2020-06-16T15:29:34Z", "author": {"login": "morningman"}, "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "diffHunk": "@@ -550,19 +550,20 @@ public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n                             currentStreamOffset, offset);\n                 }\n             }\n-            byte[] buf;\n+            ByteBuffer buf;\n             if (length > readBufferSize) {\n-                buf = new byte[readBufferSize];\n+                buf = ByteBuffer.allocate(readBufferSize);\n             } else {\n-                buf = new byte[(int) length];\n+                buf = ByteBuffer.allocate((int) length);\n             }\n             try {\n-                int readLength = fsDataInputStream.read(buf);\n+                int readLength = readByteBufferFully(fsDataInputStream, buf);\n                 if (readLength < 0) {\n                     throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                             \"end of file reached\");\n                 }\n-                return ByteBuffer.wrap(buf, 0, readLength);\n+                logger.debug(\"read buffer from input stream, buffer size:\" + buf.capacity() + \", read length:\" + readLength);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e48e51a21c5c02ba48e13c9a84e6cc7332247a2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MDU5NQ==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/3881#discussion_r441250595", "createdAt": "2020-06-17T02:50:40Z", "author": {"login": "xy720"}, "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "diffHunk": "@@ -550,19 +550,20 @@ public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n                             currentStreamOffset, offset);\n                 }\n             }\n-            byte[] buf;\n+            ByteBuffer buf;\n             if (length > readBufferSize) {\n-                buf = new byte[readBufferSize];\n+                buf = ByteBuffer.allocate(readBufferSize);\n             } else {\n-                buf = new byte[(int) length];\n+                buf = ByteBuffer.allocate((int) length);\n             }\n             try {\n-                int readLength = fsDataInputStream.read(buf);\n+                int readLength = readByteBufferFully(fsDataInputStream, buf);\n                 if (readLength < 0) {\n                     throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                             \"end of file reached\");\n                 }\n-                return ByteBuffer.wrap(buf, 0, readLength);\n+                logger.debug(\"read buffer from input stream, buffer size:\" + buf.capacity() + \", read length:\" + readLength);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MzE2Nw=="}, "originalCommit": {"oid": "5e48e51a21c5c02ba48e13c9a84e6cc7332247a2"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1518, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}