{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NTM0MDc0", "number": 2800, "title": "Support new show functions syntax to make user search function more conveniently", "bodyText": "Support new Show functions syntax to make functions more friendly for user to use", "createdAt": "2020-01-19T13:24:15Z", "url": "https://github.com/apache/incubator-doris/pull/2800", "merged": true, "mergeCommit": {"oid": "58ff952837926fabce2cea2fbbac675652352dfb"}, "closed": true, "closedAt": "2020-01-20T06:14:43Z", "author": {"login": "caiconghui"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7jPBogH2gAyMzY0NTM0MDc0Ojc5MTg0MDUzZjg2OWJlZWMxZTgxMzM2NWFkMDEzYzRiNWQ1ZmZhZjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8FSunAFqTM0NTA4MDQwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "79184053f869beec1e813365ad013c4b5d5ffaf4", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/79184053f869beec1e813365ad013c4b5d5ffaf4", "committedDate": "2020-01-18T13:19:33Z", "message": "Support new Show functions syntax to make functions more friendly for user to use"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0348130ad8f551b9354b1f9fce148e93dcf977f", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/d0348130ad8f551b9354b1f9fce148e93dcf977f", "committedDate": "2020-01-19T12:41:57Z", "message": "add show functions statement test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2605af1bf162af9af0898302b8905bd4fda552ac", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/2605af1bf162af9af0898302b8905bd4fda552ac", "committedDate": "2020-01-19T13:17:42Z", "message": "add doc for show functions statement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDA4NTMz", "url": "https://github.com/apache/incubator-doris/pull/2800#pullrequestreview-345008533", "createdAt": "2020-01-19T15:19:10Z", "commit": {"oid": "2605af1bf162af9af0898302b8905bd4fda552ac"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxNToxOToxMVrOFfPWRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxNToyMzo0MVrOFfPXVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMwMTYzNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // sort function rows by fisrt column asec\n          \n          \n            \n                    // sort function rows by first column asc", "url": "https://github.com/apache/incubator-doris/pull/2800#discussion_r368301637", "createdAt": "2020-01-19T15:19:11Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/ShowExecutor.java", "diffHunk": "@@ -302,44 +304,77 @@ private void handleShowEngines() {\n         resultSet = new ShowResultSet(showStmt.getMetaData(), rowSet);\n     }\n \n-    // Handle show function\n-    private void handleShowFunction() throws AnalysisException {\n-        ShowFunctionStmt showStmt = (ShowFunctionStmt) stmt;\n-\n+    // Handle show functions\n+    private void handleShowFunctions() throws AnalysisException {\n+        ShowFunctionsStmt showStmt = (ShowFunctionsStmt) stmt;\n         Database db = ctx.getCatalog().getDb(showStmt.getDbName());\n         if (db == null) {\n             ErrorReport.reportAnalysisException(ErrorCode.ERR_BAD_DB_ERROR, showStmt.getDbName());\n         }\n-        List<Function> functions = db.getFunctions();\n+        List<Function> functions = showStmt.getIsBuiltin() ? ctx.getCatalog().getBuiltinFunctions() :\n+            db.getFunctions();\n \n-        List<List<String>> rowSet = Lists.newArrayList();\n+        List<List<Comparable>> rowSet = Lists.newArrayList();\n         for (Function function : functions) {\n-            List<String> row = Lists.newArrayList();\n-            // signature\n-            row.add(function.getSignature());\n-            // return type\n-            row.add(function.getReturnType().getPrimitiveType().toString());\n-            // function type\n-            // intermediate type\n-            if (function instanceof ScalarFunction) {\n-                row.add(\"Scalar\");\n-                row.add(\"NULL\");\n-            } else {\n-                row.add(\"Aggregate\");\n-                AggregateFunction aggFunc = (AggregateFunction) function;\n-                Type intermediateType = aggFunc.getIntermediateType();\n-                if (intermediateType != null) {\n-                    row.add(intermediateType.getPrimitiveType().toString());\n-                } else {\n+            List<Comparable> row = Lists.newArrayList();\n+            if (showStmt.getIsVerbose()) {\n+                // signature\n+                row.add(function.getSignature());\n+                // return type\n+                row.add(function.getReturnType().getPrimitiveType().toString());\n+                // function type\n+                // intermediate type\n+                if (function instanceof ScalarFunction) {\n+                    row.add(\"Scalar\");\n                     row.add(\"NULL\");\n+                } else {\n+                    row.add(\"Aggregate\");\n+                    AggregateFunction aggFunc = (AggregateFunction) function;\n+                    Type intermediateType = aggFunc.getIntermediateType();\n+                    if (intermediateType != null) {\n+                        row.add(intermediateType.getPrimitiveType().toString());\n+                    } else {\n+                        row.add(\"NULL\");\n+                    }\n                 }\n+                // property\n+                row.add(function.getProperties());\n+            } else {\n+                row.add(function.functionName());\n+            }\n+\n+            // like predicate\n+            if (showStmt.getWild() == null || showStmt.like(function.functionName())) {\n+                rowSet.add(row);\n             }\n-            // property\n-            row.add(function.getProperties());\n-            rowSet.add(row);\n         }\n+\n+        // sort function rows by fisrt column asec", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2605af1bf162af9af0898302b8905bd4fda552ac"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMwMTY4MQ==", "bodyText": "I think the row built here can be implemented in Function. eg:\nfunction.getInfo(row, isVerbose);", "url": "https://github.com/apache/incubator-doris/pull/2800#discussion_r368301681", "createdAt": "2020-01-19T15:20:22Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/ShowExecutor.java", "diffHunk": "@@ -302,44 +304,77 @@ private void handleShowEngines() {\n         resultSet = new ShowResultSet(showStmt.getMetaData(), rowSet);\n     }\n \n-    // Handle show function\n-    private void handleShowFunction() throws AnalysisException {\n-        ShowFunctionStmt showStmt = (ShowFunctionStmt) stmt;\n-\n+    // Handle show functions\n+    private void handleShowFunctions() throws AnalysisException {\n+        ShowFunctionsStmt showStmt = (ShowFunctionsStmt) stmt;\n         Database db = ctx.getCatalog().getDb(showStmt.getDbName());\n         if (db == null) {\n             ErrorReport.reportAnalysisException(ErrorCode.ERR_BAD_DB_ERROR, showStmt.getDbName());\n         }\n-        List<Function> functions = db.getFunctions();\n+        List<Function> functions = showStmt.getIsBuiltin() ? ctx.getCatalog().getBuiltinFunctions() :\n+            db.getFunctions();\n \n-        List<List<String>> rowSet = Lists.newArrayList();\n+        List<List<Comparable>> rowSet = Lists.newArrayList();\n         for (Function function : functions) {\n-            List<String> row = Lists.newArrayList();\n-            // signature\n-            row.add(function.getSignature());\n-            // return type\n-            row.add(function.getReturnType().getPrimitiveType().toString());\n-            // function type\n-            // intermediate type\n-            if (function instanceof ScalarFunction) {\n-                row.add(\"Scalar\");\n-                row.add(\"NULL\");\n-            } else {\n-                row.add(\"Aggregate\");\n-                AggregateFunction aggFunc = (AggregateFunction) function;\n-                Type intermediateType = aggFunc.getIntermediateType();\n-                if (intermediateType != null) {\n-                    row.add(intermediateType.getPrimitiveType().toString());\n-                } else {\n+            List<Comparable> row = Lists.newArrayList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2605af1bf162af9af0898302b8905bd4fda552ac"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMwMTkxMQ==", "bodyText": "Add newly added keyword to keyword ::=", "url": "https://github.com/apache/incubator-doris/pull/2800#discussion_r368301911", "createdAt": "2020-01-19T15:23:41Z", "author": {"login": "morningman"}, "path": "fe/src/main/cup/sql_parser.cup", "diffHunk": "@@ -194,14 +194,14 @@ parser code {:\n \n // Total keywords of doris\n terminal String KW_ADD, KW_ADMIN, KW_AFTER, KW_AGGREGATE, KW_ALL, KW_ALTER, KW_AND, KW_ANTI, KW_AS, KW_ASC, KW_AUTHORS, \n-    KW_BACKEND, KW_BACKUP, KW_BETWEEN, KW_BEGIN, KW_BIGINT, KW_BITMAP, KW_BITMAP_UNION, KW_BOOLEAN, KW_BOTH, KW_BROKER, KW_BACKENDS, KW_BY,\n+    KW_BACKEND, KW_BACKUP, KW_BETWEEN, KW_BEGIN, KW_BIGINT, KW_BITMAP, KW_BITMAP_UNION, KW_BOOLEAN, KW_BOTH, KW_BROKER, KW_BACKENDS, KW_BY, KW_BUILTIN,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2605af1bf162af9af0898302b8905bd4fda552ac"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96da35e9bb01671f4454c818ed0059c071b08d2f", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/96da35e9bb01671f4454c818ed0059c071b08d2f", "committedDate": "2020-01-20T02:19:29Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8697b6272c89874cbbae58c21f2b65b2e466759", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/e8697b6272c89874cbbae58c21f2b65b2e466759", "committedDate": "2020-01-20T04:56:31Z", "message": "fix codestyle for ShowFunctionsStmtTest.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDgwNDA0", "url": "https://github.com/apache/incubator-doris/pull/2800#pullrequestreview-345080404", "createdAt": "2020-01-20T05:00:22Z", "commit": {"oid": "e8697b6272c89874cbbae58c21f2b65b2e466759"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3634, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}