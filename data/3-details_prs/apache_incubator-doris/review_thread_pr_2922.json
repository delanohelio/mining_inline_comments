{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1OTQ4MTU3", "number": 2922, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNjowMzoyMlrODgRsVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNjowMzo0OVrODgRslg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTcwOTAxOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNjowMzoyMlrOFqZO7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNzoyMjoyNFrOFqaYBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk5NzkzNA==", "bodyText": "code style. Add {} to if else.", "url": "https://github.com/apache/incubator-doris/pull/2922#discussion_r379997934", "createdAt": "2020-02-17T06:03:22Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -1702,8 +1702,18 @@ public long loadAlterJob(DataInputStream dis, long checksum, JobType type) throw\n             newChecksum ^= size;\n             for (int i = 0; i < size; i++) {\n                 AlterJobV2 alterJobV2 = AlterJobV2.read(dis);\n-                if (type == JobType.ROLLUP) {\n-                    this.getRollupHandler().addAlterJobV2(alterJobV2);\n+                if (type == JobType.ROLLUP || type == JobType.SCHEMA_CHANGE) {\n+                    if (type == JobType.ROLLUP)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f294f2fb1341bfe7e3a54db3191cd09609cdc6fd"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAxNjY0NQ==", "bodyText": "\ud83d\udc4c", "url": "https://github.com/apache/incubator-doris/pull/2922#discussion_r380016645", "createdAt": "2020-02-17T07:22:24Z", "author": {"login": "wangbo"}, "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -1702,8 +1702,18 @@ public long loadAlterJob(DataInputStream dis, long checksum, JobType type) throw\n             newChecksum ^= size;\n             for (int i = 0; i < size; i++) {\n                 AlterJobV2 alterJobV2 = AlterJobV2.read(dis);\n-                if (type == JobType.ROLLUP) {\n-                    this.getRollupHandler().addAlterJobV2(alterJobV2);\n+                if (type == JobType.ROLLUP || type == JobType.SCHEMA_CHANGE) {\n+                    if (type == JobType.ROLLUP)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk5NzkzNA=="}, "originalCommit": {"oid": "f294f2fb1341bfe7e3a54db3191cd09609cdc6fd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTcwOTY2OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNjowMzo0OVrOFqZPTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNzoyMjozNFrOFqaYTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk5ODAyOA==", "bodyText": "info is enough.", "url": "https://github.com/apache/incubator-doris/pull/2922#discussion_r379998028", "createdAt": "2020-02-17T06:03:49Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -1702,8 +1702,18 @@ public long loadAlterJob(DataInputStream dis, long checksum, JobType type) throw\n             newChecksum ^= size;\n             for (int i = 0; i < size; i++) {\n                 AlterJobV2 alterJobV2 = AlterJobV2.read(dis);\n-                if (type == JobType.ROLLUP) {\n-                    this.getRollupHandler().addAlterJobV2(alterJobV2);\n+                if (type == JobType.ROLLUP || type == JobType.SCHEMA_CHANGE) {\n+                    if (type == JobType.ROLLUP)\n+                        this.getRollupHandler().addAlterJobV2(alterJobV2);\n+                    else\n+                        alterJobsV2.put(alterJobV2.getJobId(), alterJobV2);\n+                    // ATTN : we just want to add tablet into TabletInvertedIndex when only PendingJob is checkpointed\n+                    // to prevent TabletInvertedIndex data loss,\n+                    // So just use AlterJob.replay() instead of AlterHandler.replay().\n+                    if (alterJobV2.getJobState() == AlterJobV2.JobState.PENDING) {\n+                        alterJobV2.replay(alterJobV2);\n+                        LOG.warn(\"replay pending alter job when load alter job {} \", alterJobV2.getJobId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f294f2fb1341bfe7e3a54db3191cd09609cdc6fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAxNjcxNg==", "bodyText": "\ud83d\udc4c", "url": "https://github.com/apache/incubator-doris/pull/2922#discussion_r380016716", "createdAt": "2020-02-17T07:22:34Z", "author": {"login": "wangbo"}, "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -1702,8 +1702,18 @@ public long loadAlterJob(DataInputStream dis, long checksum, JobType type) throw\n             newChecksum ^= size;\n             for (int i = 0; i < size; i++) {\n                 AlterJobV2 alterJobV2 = AlterJobV2.read(dis);\n-                if (type == JobType.ROLLUP) {\n-                    this.getRollupHandler().addAlterJobV2(alterJobV2);\n+                if (type == JobType.ROLLUP || type == JobType.SCHEMA_CHANGE) {\n+                    if (type == JobType.ROLLUP)\n+                        this.getRollupHandler().addAlterJobV2(alterJobV2);\n+                    else\n+                        alterJobsV2.put(alterJobV2.getJobId(), alterJobV2);\n+                    // ATTN : we just want to add tablet into TabletInvertedIndex when only PendingJob is checkpointed\n+                    // to prevent TabletInvertedIndex data loss,\n+                    // So just use AlterJob.replay() instead of AlterHandler.replay().\n+                    if (alterJobV2.getJobState() == AlterJobV2.JobState.PENDING) {\n+                        alterJobV2.replay(alterJobV2);\n+                        LOG.warn(\"replay pending alter job when load alter job {} \", alterJobV2.getJobId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk5ODAyOA=="}, "originalCommit": {"oid": "f294f2fb1341bfe7e3a54db3191cd09609cdc6fd"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2247, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}