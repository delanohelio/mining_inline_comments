{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NTk5MTYy", "number": 3214, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDoxOToyNlrODsANDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMTo0NToyNlrODtftvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDY3Mjc4OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDoxOToyNlrOF8q_9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDoxOToyNlrOF8q_9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE2MzM4MA==", "bodyText": "Are you sure only change this point is enough\uff1f\nDo we need to change this point:\nFunctionCallExpr::analyzeImpl\n        Type[] args = fn.getArgs();\n        if (args.length > 0) {\n            // Implicitly cast all the children to match the function if necessary\n            for (int i = 0; i < argTypes.length; ++i) {\n                // For varargs, we must compare with the last type in callArgs.argTypes.\n                int ix = Math.min(args.length - 1, i);\n                if (!argTypes[i].matchesType(args[ix]) && !(\n                        argTypes[i].isDateType() && args[ix].isDateType())) {\n                    uncheckedCastChild(args[ix], i);\n                    //if (argTypes[i] != args[ix]) castChild(args[ix], i);\n                }\n            }\n        }", "url": "https://github.com/apache/incubator-doris/pull/3214#discussion_r399163380", "createdAt": "2020-03-27T10:19:26Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "diffHunk": "@@ -319,7 +319,7 @@ protected void toThrift(TExprNode msg) {\n \n     @Override\n     protected Expr uncheckedCastTo(Type targetType) throws AnalysisException {\n-        if (targetType.isDateType()) {\n+        if (targetType.equals(this.type)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb26ec529dcf675ea7c010f6c2acad3fbb595e0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDY3NTk4OnYy", "diffSide": "RIGHT", "path": "fe/src/test/java/org/apache/doris/analysis/DateLiteralTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDoyMDoyNFrOF8rB7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDoyMDoyNFrOF8rB7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE2Mzg4NQ==", "bodyText": "Would better also add a test to QueryPlanTest.", "url": "https://github.com/apache/incubator-doris/pull/3214#discussion_r399163885", "createdAt": "2020-03-27T10:20:24Z", "author": {"login": "kangkaisen"}, "path": "fe/src/test/java/org/apache/doris/analysis/DateLiteralTest.java", "diffHunk": "@@ -55,4 +55,23 @@ public void TwoDigitYear() {\n         }\n         Assert.assertFalse(hasException);\n     }\n+\n+    @Test\n+    public void uncheckedCastTo() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb26ec529dcf675ea7c010f6c2acad3fbb595e0"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3OTc0MzAzOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwMTo1MTowMlrOF9XXRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwMTo1MTowMlrOF9XXRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg5MDI0NQ==", "bodyText": "Why not return a new DateLiteral when targetType and this.type are different but both dateType.", "url": "https://github.com/apache/incubator-doris/pull/3214#discussion_r399890245", "createdAt": "2020-03-30T01:51:02Z", "author": {"login": "imay"}, "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "diffHunk": "@@ -319,7 +319,7 @@ protected void toThrift(TExprNode msg) {\n \n     @Override\n     protected Expr uncheckedCastTo(Type targetType) throws AnalysisException {\n-        if (targetType.isDateType()) {\n+        if (targetType.equals(this.type)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb26ec529dcf675ea7c010f6c2acad3fbb595e0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODk0OTIwOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMzo0MToxMVrOF-vwsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMzo0MToxMVrOF-vwsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMzODU0Nw==", "bodyText": "If isDateType is true. The type could only be DATE and DATETIME.\nSo one if  else if enough?", "url": "https://github.com/apache/incubator-doris/pull/3214#discussion_r401338547", "createdAt": "2020-04-01T03:41:11Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "diffHunk": "@@ -319,7 +319,17 @@ protected void toThrift(TExprNode msg) {\n \n     @Override\n     protected Expr uncheckedCastTo(Type targetType) throws AnalysisException {\n-        if (targetType.equals(this.type)) {\n+        if (targetType.isDateType()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db30dcb68aee28b4904c9bfee122aa322e8042b8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDMyMTI3OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMTo0NToyNlrOF-83xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo1MjowMlrOF_EayQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1MzM1MQ==", "bodyText": "If Date not to convert DateTime, is OK?", "url": "https://github.com/apache/incubator-doris/pull/3214#discussion_r401553351", "createdAt": "2020-04-01T11:45:26Z", "author": {"login": "chaoyli"}, "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "diffHunk": "@@ -320,6 +320,13 @@ protected void toThrift(TExprNode msg) {\n     @Override\n     protected Expr uncheckedCastTo(Type targetType) throws AnalysisException {\n         if (targetType.isDateType()) {\n+            if (targetType.equals(Type.DATE)) {\n+                this.castToDate();                            \n+            } else if (targetType.equals(Type.DATETIME)) {\n+                this.type = Type.DATETIME;                            ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1eb4309f865f5c86703dfb712648b4c43b16aa7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NzAwMQ==", "bodyText": "Yes, is ok\u3002And explicit type conver(cast expr) also go to this line", "url": "https://github.com/apache/incubator-doris/pull/3214#discussion_r401677001", "createdAt": "2020-04-01T14:52:02Z", "author": {"login": "HangyuanLiu"}, "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "diffHunk": "@@ -320,6 +320,13 @@ protected void toThrift(TExprNode msg) {\n     @Override\n     protected Expr uncheckedCastTo(Type targetType) throws AnalysisException {\n         if (targetType.isDateType()) {\n+            if (targetType.equals(Type.DATE)) {\n+                this.castToDate();                            \n+            } else if (targetType.equals(Type.DATETIME)) {\n+                this.type = Type.DATETIME;                            ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1MzM1MQ=="}, "originalCommit": {"oid": "e1eb4309f865f5c86703dfb712648b4c43b16aa7"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1828, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}