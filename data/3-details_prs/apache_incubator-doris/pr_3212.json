{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NTQ2NjQw", "number": 3212, "title": "[Alter]Clean SchemaChangeJobV2 when schema change CANCELLED or FINISHED", "bodyText": "SchemaChangeJobV2 will use too much memory in FE, which may casuse FullGC. But these data is useless after job is done, so we need to clean it up.", "createdAt": "2020-03-27T04:38:37Z", "url": "https://github.com/apache/incubator-doris/pull/3212", "merged": true, "mergeCommit": {"oid": "9c937180cd68c7c57ff965dda552d814eb228a8c"}, "closed": true, "closedAt": "2020-04-01T13:05:17Z", "author": {"login": "WingsGo"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRciUGgH2gAyMzk0NTQ2NjQwOjEzMTYxZjIyMzJmZDc2OWVkODljMTA2MTU0MmM5MWI1YTY3YjVkNmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTXYDeAFqTM4NTU2MzA5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "13161f2232fd769ed89c1061542c91b5a67b5d6c", "author": {"user": {"login": "WingsGo", "name": "WangCong"}}, "url": "https://github.com/apache/incubator-doris/commit/13161f2232fd769ed89c1061542c91b5a67b5d6c", "committedDate": "2020-03-26T13:57:37Z", "message": "[Alter]Optimize AlterJobV2's memory consumption"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4151d98784f633d56f37d373f20f1697b0dbdbf", "author": {"user": {"login": "WingsGo", "name": "WangCong"}}, "url": "https://github.com/apache/incubator-doris/commit/b4151d98784f633d56f37d373f20f1697b0dbdbf", "committedDate": "2020-03-27T04:35:46Z", "message": "fix UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d34883ebe73f0f30a4fd0fa053bbf75b487b467", "author": {"user": {"login": "WingsGo", "name": "WangCong"}}, "url": "https://github.com/apache/incubator-doris/commit/4d34883ebe73f0f30a4fd0fa053bbf75b487b467", "committedDate": "2020-03-27T04:48:05Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc13f461f5ff79375a55d727c135fa4cdfa79e97", "author": {"user": {"login": "WingsGo", "name": "WangCong"}}, "url": "https://github.com/apache/incubator-doris/commit/dc13f461f5ff79375a55d727c135fa4cdfa79e97", "committedDate": "2020-03-27T06:59:59Z", "message": "Add UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa1312e1aea11d93e3958cf0e527e906113b6b4f", "author": {"user": {"login": "WingsGo", "name": "WangCong"}}, "url": "https://github.com/apache/incubator-doris/commit/fa1312e1aea11d93e3958cf0e527e906113b6b4f", "committedDate": "2020-03-28T10:15:31Z", "message": "Merge branch 'master' into fix_alter_job"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea9c991fb8169aa82153f8385e56c998d7c2230b", "author": {"user": {"login": "WingsGo", "name": "WangCong"}}, "url": "https://github.com/apache/incubator-doris/commit/ea9c991fb8169aa82153f8385e56c998d7c2230b", "committedDate": "2020-03-28T10:16:29Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0ODYzOTAw", "url": "https://github.com/apache/incubator-doris/pull/3212#pullrequestreview-384863900", "createdAt": "2020-03-31T15:42:55Z", "commit": {"oid": "ea9c991fb8169aa82153f8385e56c998d7c2230b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTo0Mjo1NlrOF-cKUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTo0NzowMlrOF-cWdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxNzQyNw==", "bodyText": "Write double?", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401017427", "createdAt": "2020-03-31T15:42:56Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -953,4 +969,131 @@ public void readFields(DataInput in) throws IOException {\n             }\n         }\n     }\n+\n+    /**\n+     * write data need to persist when job finished\n+     */\n+    private void writeJobFinishedData(DataOutput out) throws IOException {\n+        // only persist data will be used in getInfo\n+        out.writeInt(indexIdMap.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea9c991fb8169aa82153f8385e56c998d7c2230b"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxODE3OQ==", "bodyText": "Don't need this check.", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401018179", "createdAt": "2020-03-31T15:43:54Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -953,4 +969,131 @@ public void readFields(DataInput in) throws IOException {\n             }\n         }\n     }\n+\n+    /**\n+     * write data need to persist when job finished\n+     */\n+    private void writeJobFinishedData(DataOutput out) throws IOException {\n+        // only persist data will be used in getInfo\n+        out.writeInt(indexIdMap.size());\n+\n+        // shadow index info\n+        out.writeInt(indexIdMap.size());\n+        for (Entry<Long, Long> entry : indexIdMap.entrySet()) {\n+            long shadowIndexId = entry.getKey();\n+            out.writeLong(shadowIndexId);\n+            // index id map\n+            out.writeLong(entry.getValue());\n+            // index name\n+            Text.writeString(out, indexIdToName.get(shadowIndexId));\n+            // index schema version and hash\n+            out.writeInt(indexSchemaVersionAndHashMap.get(shadowIndexId).first);\n+            out.writeInt(indexSchemaVersionAndHashMap.get(shadowIndexId).second);\n+        }\n+\n+        // bloom filter\n+        out.writeBoolean(hasBfChange);\n+        if (hasBfChange) {\n+            out.writeInt(bfColumns.size());\n+            for (String bfCol : bfColumns) {\n+                Text.writeString(out, bfCol);\n+            }\n+            out.writeDouble(bfFpp);\n+        }\n+\n+        out.writeLong(watershedTxnId);\n+\n+        // index\n+        out.writeBoolean(indexChange);\n+        if (indexChange) {\n+            if (CollectionUtils.isNotEmpty(indexes)) {\n+                out.writeBoolean(true);\n+                out.writeInt(indexes.size());\n+                for (Index index : indexes) {\n+                    index.write(out);\n+                }\n+            } else {\n+                out.writeBoolean(false);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * read data need to persist when job finished\n+     */\n+    private void readJobFinishedData(DataInput in) throws IOException {\n+        // shadow index info\n+        int indexNum = in.readInt();\n+        for (int i = 0; i < indexNum; i++) {\n+            long shadowIndexId = in.readLong();\n+            long originIndexId = in.readLong();\n+            String indexName = Text.readString(in);\n+            int schemaVersion = in.readInt();\n+            int schemaVersionHash = in.readInt();\n+            Pair<Integer, Integer> schemaVersionAndHash = Pair.create(schemaVersion, schemaVersionHash);\n+            short shortKeyCount = in.readShort();\n+\n+            indexIdMap.put(shadowIndexId, originIndexId);\n+            indexIdToName.put(shadowIndexId, indexName);\n+            indexSchemaVersionAndHashMap.put(shadowIndexId, schemaVersionAndHash);\n+        }\n+\n+        // bloom filter\n+        hasBfChange = in.readBoolean();\n+        if (hasBfChange) {\n+            int bfNum = in.readInt();\n+            bfColumns = Sets.newHashSetWithExpectedSize(bfNum);\n+            for (int i = 0; i < bfNum; i++) {\n+                bfColumns.add(Text.readString(in));\n+            }\n+            bfFpp = in.readDouble();\n+        }\n+\n+        watershedTxnId = in.readLong();\n+\n+        // index\n+        if (Catalog.getCurrentCatalogJournalVersion() >= FeMetaVersion.VERSION_70) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea9c991fb8169aa82153f8385e56c998d7c2230b"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxOTc5Mg==", "bodyText": "Please rename. Such as isMetaPruned", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401019792", "createdAt": "2020-03-31T15:46:09Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -95,6 +95,9 @@\n     // shadow index id -> shadow index short key count\n     private Map<Long, Short> indexShortKeyMap = Maps.newHashMap();\n \n+    // identify whether the job is finished and no need to persist some data\n+    private boolean cleared = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea9c991fb8169aa82153f8385e56c998d7c2230b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAyMDUzMw==", "bodyText": "Please rename. Such as pruneMeta", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401020533", "createdAt": "2020-03-31T15:47:02Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -159,6 +161,18 @@ public void setStorageFormat(TStorageFormat storageFormat) {\n         this.storageFormat = storageFormat;\n     }\n \n+    /**\n+     * clear some date structure in this job to save memory\n+     * these data structures must not used in getInfo method\n+     */\n+    public void clear() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea9c991fb8169aa82153f8385e56c998d7c2230b"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9ba13b7c73a6e42bbac8c988cbd1e1e304a63c0", "author": {"user": {"login": "WingsGo", "name": "WangCong"}}, "url": "https://github.com/apache/incubator-doris/commit/e9ba13b7c73a6e42bbac8c988cbd1e1e304a63c0", "committedDate": "2020-03-31T16:24:23Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40f16e5340406c0a672da4a233ef796f78912c21", "author": {"user": {"login": "WingsGo", "name": "WangCong"}}, "url": "https://github.com/apache/incubator-doris/commit/40f16e5340406c0a672da4a233ef796f78912c21", "committedDate": "2020-04-01T04:00:21Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzEzNTEw", "url": "https://github.com/apache/incubator-doris/pull/3212#pullrequestreview-385313510", "createdAt": "2020-04-01T07:05:07Z", "commit": {"oid": "40f16e5340406c0a672da4a233ef796f78912c21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTYzMDk3", "url": "https://github.com/apache/incubator-doris/pull/3212#pullrequestreview-385563097", "createdAt": "2020-04-01T13:04:44Z", "commit": {"oid": "40f16e5340406c0a672da4a233ef796f78912c21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3097, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}