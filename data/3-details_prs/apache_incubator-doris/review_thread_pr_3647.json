{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMTY4MzQ0", "number": 3647, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODoyMzoyOVrOD-hBZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODozMjowMVrOD-hLOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODc5MzM0OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/transaction/DatabaseTransactionMgr.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODoyMzoyOVrOGYqc_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMTowMjoxNVrOGYuyLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUxNDU1OA==", "bodyText": "What is the different between version and lastSuccessVersion/lastFailedVersion? Why only update lastSuccessVersion/lastFailedVersion but not version when we found replica's lastFailedVersion is larger than 0?", "url": "https://github.com/apache/incubator-doris/pull/3647#discussion_r428514558", "createdAt": "2020-05-21T08:23:29Z", "author": {"login": "xy720"}, "path": "fe/src/main/java/org/apache/doris/transaction/DatabaseTransactionMgr.java", "diffHunk": "@@ -721,8 +728,12 @@ public void finishTransaction(long transactionId, Set<Long> errorReplicaIds) thr\n                             }\n \n                             if (healthReplicaNum < quorumReplicaNum) {\n-                                LOG.info(\"publish version failed for transaction {} on tablet {},  with only {} replicas less than quorum {}\",\n+                                LOG.info(\"publish version failed for transaction {} on tablet {}, with only {} replicas less than quorum {}\",\n                                         transactionState, tablet, healthReplicaNum, quorumReplicaNum);\n+                                String errMsg = String.format(\"publish on tablet %d failed. succeed replica num %d less than quorum %d.\"\n+                                        + \" table: %d, partition: %d, publish version: %d\",\n+                                        tablet.getId(), healthReplicaNum, quorumReplicaNum, tableId, partitionId, partition.getVisibleVersion() + 1);\n+                                transactionState.setErrorMsg(errMsg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af9d809fcfff3b130e2e86a7fd354c4d015ae7be"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU4NTUxOQ==", "bodyText": "versions before version is  continuous. lastSuccessVersion is the last success version of this replica.  lastFailedVersion is the last failed version of this replica. eg:\nversio: 10\nlastSuccessVersion:12\nlastFailedVersion:11\nwhich means version 0-10 is continuous and success. and version 11 failed to publish. but\nversion 12 success.", "url": "https://github.com/apache/incubator-doris/pull/3647#discussion_r428585519", "createdAt": "2020-05-21T11:02:15Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/transaction/DatabaseTransactionMgr.java", "diffHunk": "@@ -721,8 +728,12 @@ public void finishTransaction(long transactionId, Set<Long> errorReplicaIds) thr\n                             }\n \n                             if (healthReplicaNum < quorumReplicaNum) {\n-                                LOG.info(\"publish version failed for transaction {} on tablet {},  with only {} replicas less than quorum {}\",\n+                                LOG.info(\"publish version failed for transaction {} on tablet {}, with only {} replicas less than quorum {}\",\n                                         transactionState, tablet, healthReplicaNum, quorumReplicaNum);\n+                                String errMsg = String.format(\"publish on tablet %d failed. succeed replica num %d less than quorum %d.\"\n+                                        + \" table: %d, partition: %d, publish version: %d\",\n+                                        tablet.getId(), healthReplicaNum, quorumReplicaNum, tableId, partitionId, partition.getVisibleVersion() + 1);\n+                                transactionState.setErrorMsg(errMsg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUxNDU1OA=="}, "originalCommit": {"oid": "af9d809fcfff3b130e2e86a7fd354c4d015ae7be"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODgxODUwOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/transaction/TransactionState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODozMjowMVrOGYqs1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDo1NDo0NFrOGYumDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUxODYxNA==", "bodyText": "If publishVersionTime will always be updated after finishTransaction failed, is it means that this publish job may keep runnning in doris forever?", "url": "https://github.com/apache/incubator-doris/pull/3647#discussion_r428518614", "createdAt": "2020-05-21T08:32:01Z", "author": {"login": "xy720"}, "path": "fe/src/main/java/org/apache/doris/transaction/TransactionState.java", "diffHunk": "@@ -187,7 +187,7 @@ public String toString() {\n     // this state need not to be serialized\n     private Map<Long, PublishVersionTask> publishVersionTasks;\n     private boolean hasSendTask;\n-    private long publishVersionTime;\n+    private long publishVersionTime = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af9d809fcfff3b130e2e86a7fd354c4d015ae7be"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU4MjQxMw==", "bodyText": "Yes, publish task MUST success.", "url": "https://github.com/apache/incubator-doris/pull/3647#discussion_r428582413", "createdAt": "2020-05-21T10:54:44Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/transaction/TransactionState.java", "diffHunk": "@@ -187,7 +187,7 @@ public String toString() {\n     // this state need not to be serialized\n     private Map<Long, PublishVersionTask> publishVersionTasks;\n     private boolean hasSendTask;\n-    private long publishVersionTime;\n+    private long publishVersionTime = -1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUxODYxNA=="}, "originalCommit": {"oid": "af9d809fcfff3b130e2e86a7fd354c4d015ae7be"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1596, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}