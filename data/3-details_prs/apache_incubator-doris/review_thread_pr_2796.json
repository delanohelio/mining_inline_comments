{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NDk0NDc0", "number": 2796, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwODowMTo1NlrODZCE-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwODowODozNlrODZCF5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTc1MDMyOnYy", "diffSide": "RIGHT", "path": "be/src/olap/tablet.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwODowMTo1NlrOFfNpjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwOToxNDo1MVrOFfN57Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI3MzgwNw==", "bodyText": "it is not correspond with the definition of contains() function", "url": "https://github.com/apache/incubator-doris/pull/2796#discussion_r368273807", "createdAt": "2020-01-19T08:01:56Z", "author": {"login": "chaoyli"}, "path": "be/src/olap/tablet.cpp", "diffHunk": "@@ -272,16 +255,11 @@ OLAPStatus Tablet::add_rowset(RowsetSharedPtr rowset, bool need_persist) {\n     // yiguolei: temp code, should remove the rowset contains by this rowset\n     // but it should be removed in multi path version\n     for (auto& it : _rs_version_map) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dc19357f00932e0eca8f6913893032f5dee9ab0"}, "originalPosition": 201}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI3Nzk5Nw==", "bodyText": "Done.\nshould be rowset->version().contains(it.first)", "url": "https://github.com/apache/incubator-doris/pull/2796#discussion_r368277997", "createdAt": "2020-01-19T09:14:51Z", "author": {"login": "lingbin"}, "path": "be/src/olap/tablet.cpp", "diffHunk": "@@ -272,16 +255,11 @@ OLAPStatus Tablet::add_rowset(RowsetSharedPtr rowset, bool need_persist) {\n     // yiguolei: temp code, should remove the rowset contains by this rowset\n     // but it should be removed in multi path version\n     for (auto& it : _rs_version_map) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI3MzgwNw=="}, "originalCommit": {"oid": "0dc19357f00932e0eca8f6913893032f5dee9ab0"}, "originalPosition": 201}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTc1MjY4OnYy", "diffSide": "RIGHT", "path": "be/src/olap/olap_common.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwODowODozNlrOFfNqzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwODo1NzoyMlrOFfN1rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI3NDEyNg==", "bodyText": "first <= other.first && second >= other.second", "url": "https://github.com/apache/incubator-doris/pull/2796#discussion_r368274126", "createdAt": "2020-01-19T08:08:36Z", "author": {"login": "chaoyli"}, "path": "be/src/olap/olap_common.h", "diffHunk": "@@ -189,20 +186,29 @@ struct Version {\n     int64_t second;\n \n     Version(int64_t first_, int64_t second_) : first(first_), second(second_) {}\n-\n     Version() : first(0), second(0) {}\n \n+    friend std::ostream& operator<<(std::ostream& os, const Version& version);\n+\n     bool operator!=(const Version& rhs) const {\n         return first != rhs.first || second != rhs.second;\n     }\n \n     bool operator==(const Version& rhs) const {\n         return first == rhs.first && second == rhs.second;\n     }\n+\n+    bool contains(const Version& other) const {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dc19357f00932e0eca8f6913893032f5dee9ab0"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI3NjkwOQ==", "bodyText": "Done. Thank you for your careful review.", "url": "https://github.com/apache/incubator-doris/pull/2796#discussion_r368276909", "createdAt": "2020-01-19T08:57:22Z", "author": {"login": "lingbin"}, "path": "be/src/olap/olap_common.h", "diffHunk": "@@ -189,20 +186,29 @@ struct Version {\n     int64_t second;\n \n     Version(int64_t first_, int64_t second_) : first(first_), second(second_) {}\n-\n     Version() : first(0), second(0) {}\n \n+    friend std::ostream& operator<<(std::ostream& os, const Version& version);\n+\n     bool operator!=(const Version& rhs) const {\n         return first != rhs.first || second != rhs.second;\n     }\n \n     bool operator==(const Version& rhs) const {\n         return first == rhs.first && second == rhs.second;\n     }\n+\n+    bool contains(const Version& other) const {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI3NDEyNg=="}, "originalCommit": {"oid": "0dc19357f00932e0eca8f6913893032f5dee9ab0"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2144, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}