{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NTk2NTQ5", "number": 2991, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMzowNjozOFrODi7eig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMzowNjozOFrODi7eig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTUyNjUwOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMzowNjozOFrOFuc6tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo0MDo0NVrOFug1WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI1MjU5OA==", "bodyText": "I don't think this change is very suitable.\n\nI think the behavior of select * and select a specific column should be consistent.\nThe current modification method may have problems when inserting into select *, or when sub-queries, such as select hll_union (hll_col) from (select *);\n\nI think we can do it in backend. When encountering HLL type or Bitmap type, ResultSink can send null directly.", "url": "https://github.com/apache/incubator-doris/pull/2991#discussion_r384252598", "createdAt": "2020-02-26T03:06:38Z", "author": {"login": "imay"}, "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "diffHunk": "@@ -786,15 +785,14 @@ private void expandStar(Analyzer analyzer, TableName tblName) throws AnalysisExc\n      * Expand \"*\" for a particular tuple descriptor by appending\n      * refs for each column to selectListExprs.\n      */\n-    private void expandStar(TableName tblName, TupleDescriptor desc) throws AnalysisException {\n+    private void expandStar(TableName tblName, TupleDescriptor desc) {\n         for (Column col : desc.getTable().getBaseSchema()) {\n-            if (col.getDataType() == PrimitiveType.HLL && !fromInsert) {\n-                throw new AnalysisException(Type.OnlyMetricTypeErrorMsg);\n-            }\n-            if (col.getAggregationType() == AggregateType.BITMAP_UNION && !fromInsert) {\n-                throw new AnalysisException(Type.OnlyMetricTypeErrorMsg);\n+            PrimitiveType type = col.getDataType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73527ba22ac536995529c172d69461019f33717f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwMDkxMg==", "bodyText": "If we handle in backend:\n\nthere is a performance issue, we still need to scan  the HLL or Bitmap column\nwe need to support return binary content for HLL or Bitmap, so we shouldn't send null directly in ResultSink, we must pass a config from FE to BE.", "url": "https://github.com/apache/incubator-doris/pull/2991#discussion_r384300912", "createdAt": "2020-02-26T06:48:16Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "diffHunk": "@@ -786,15 +785,14 @@ private void expandStar(Analyzer analyzer, TableName tblName) throws AnalysisExc\n      * Expand \"*\" for a particular tuple descriptor by appending\n      * refs for each column to selectListExprs.\n      */\n-    private void expandStar(TableName tblName, TupleDescriptor desc) throws AnalysisException {\n+    private void expandStar(TableName tblName, TupleDescriptor desc) {\n         for (Column col : desc.getTable().getBaseSchema()) {\n-            if (col.getDataType() == PrimitiveType.HLL && !fromInsert) {\n-                throw new AnalysisException(Type.OnlyMetricTypeErrorMsg);\n-            }\n-            if (col.getAggregationType() == AggregateType.BITMAP_UNION && !fromInsert) {\n-                throw new AnalysisException(Type.OnlyMetricTypeErrorMsg);\n+            PrimitiveType type = col.getDataType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI1MjU5OA=="}, "originalCommit": {"oid": "73527ba22ac536995529c172d69461019f33717f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxNjc2MA==", "bodyText": "there is a performance issue, we still need to scan  the HLL or Bitmap column\n\n\nI think performance may not be very important in this case\n\n\nwe need to support return binary content for HLL or Bitmap, so we shouldn't send null directly in ResultSink, we must pass a config from FE to BE.\n\n\nMaybe we can support this feature later, and wait until the situation is really needed? Or the user can get the encoded readable content through the hex or base64 function", "url": "https://github.com/apache/incubator-doris/pull/2991#discussion_r384316760", "createdAt": "2020-02-26T07:40:45Z", "author": {"login": "imay"}, "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "diffHunk": "@@ -786,15 +785,14 @@ private void expandStar(Analyzer analyzer, TableName tblName) throws AnalysisExc\n      * Expand \"*\" for a particular tuple descriptor by appending\n      * refs for each column to selectListExprs.\n      */\n-    private void expandStar(TableName tblName, TupleDescriptor desc) throws AnalysisException {\n+    private void expandStar(TableName tblName, TupleDescriptor desc) {\n         for (Column col : desc.getTable().getBaseSchema()) {\n-            if (col.getDataType() == PrimitiveType.HLL && !fromInsert) {\n-                throw new AnalysisException(Type.OnlyMetricTypeErrorMsg);\n-            }\n-            if (col.getAggregationType() == AggregateType.BITMAP_UNION && !fromInsert) {\n-                throw new AnalysisException(Type.OnlyMetricTypeErrorMsg);\n+            PrimitiveType type = col.getDataType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI1MjU5OA=="}, "originalCommit": {"oid": "73527ba22ac536995529c172d69461019f33717f"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2045, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}