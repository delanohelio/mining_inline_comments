{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MjMyMDA4", "number": 2925, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMzoyMzozOVrODgjN_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMzoyNjozMFrODgjPXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDU4MDQ3OnYy", "diffSide": "RIGHT", "path": "be/src/runtime/export_sink.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMzoyMzozOVrOFq0Gbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMzoyMzozOVrOFq0Gbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQzODEyNg==", "bodyText": "why?", "url": "https://github.com/apache/incubator-doris/pull/2925#discussion_r380438126", "createdAt": "2020-02-18T03:23:39Z", "author": {"login": "kangpinghuang"}, "path": "be/src/runtime/export_sink.cpp", "diffHunk": "@@ -142,10 +142,10 @@ Status ExportSink::gen_row_buffer(TupleRow* row, std::stringstream* ss) {\n                     (*ss) << reinterpret_cast<PackedInt128*>(item)->value;\n                     break;\n                 case TYPE_FLOAT:\n-                    (*ss) << *static_cast<float*>(item);\n+                    (*ss) << std::to_string(*static_cast<float*>(item));\n                     break;\n                 case TYPE_DOUBLE:\n-                    (*ss) << *static_cast<double*>(item);\n+                    (*ss) << std::to_string(*static_cast<double*>(item));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42ca89325f6d1f5ebd13e58225e8abcc1bf0f499"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDU4Mzk2OnYy", "diffSide": "RIGHT", "path": "be/src/runtime/export_sink.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMzoyNjozMFrOFq0IdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxODo0MVrOFrB-AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQzODY0NQ==", "bodyText": "Could you please add a comment to tell the reader why it was converted to a string first?\nFor example the following comment\uff1a\nTo prevent loss of precision on float and double types, they are converted to strings before output.\nFor example: For a double value 27361919854.929001, the direct output of using std::stringstream is 2.73619e + 10, and after conversion to a string, it outputs 27361919854.929001", "url": "https://github.com/apache/incubator-doris/pull/2925#discussion_r380438645", "createdAt": "2020-02-18T03:26:30Z", "author": {"login": "lingbin"}, "path": "be/src/runtime/export_sink.cpp", "diffHunk": "@@ -142,10 +142,10 @@ Status ExportSink::gen_row_buffer(TupleRow* row, std::stringstream* ss) {\n                     (*ss) << reinterpret_cast<PackedInt128*>(item)->value;\n                     break;\n                 case TYPE_FLOAT:\n-                    (*ss) << *static_cast<float*>(item);\n+                    (*ss) << std::to_string(*static_cast<float*>(item));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42ca89325f6d1f5ebd13e58225e8abcc1bf0f499"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2NTM0NQ==", "bodyText": "Please use FloatToBuffer(gutil/strings/numbers.h) to print float and double value", "url": "https://github.com/apache/incubator-doris/pull/2925#discussion_r380665345", "createdAt": "2020-02-18T13:18:41Z", "author": {"login": "imay"}, "path": "be/src/runtime/export_sink.cpp", "diffHunk": "@@ -142,10 +142,10 @@ Status ExportSink::gen_row_buffer(TupleRow* row, std::stringstream* ss) {\n                     (*ss) << reinterpret_cast<PackedInt128*>(item)->value;\n                     break;\n                 case TYPE_FLOAT:\n-                    (*ss) << *static_cast<float*>(item);\n+                    (*ss) << std::to_string(*static_cast<float*>(item));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQzODY0NQ=="}, "originalCommit": {"oid": "42ca89325f6d1f5ebd13e58225e8abcc1bf0f499"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2250, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}