{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzODA5MjQ4", "number": 3705, "title": "Serialize origin stmt in Rollup Job and MV Meta", "bodyText": "In materialized view 2.0, the define expr is serialized in column.\nThe method is that doris serialzie the origin stmt of Create Materialzied View Stmt in RollupJobV2 and MVMeta.\nThe define expr will be extract from the origin stmt after meta is deserialized.\nThe define expr is necessary for bitmap and hll materialized view.\nFor example:\nMV meta: __doris_mv_bitmap_k1, bitmap_union, to_bitmap(k1)\nOrigin stmt: select bitmap_union(to_bitmap(k1)) from table\nDeserialize meta: __doris_mv_bitmap_k1, bitmap_union, null\nAfter extract: the define expr to_bitmap(k1) from origin stmt should be extracted.\n__doris_mv_bitmap_v1, bitmap_union, to_bitmap(k1) (which comes from the origin stmt)\n#3344\nChange-Id: Ic2da093188d8985f5e97be5bd094e5d60d82c9a7", "createdAt": "2020-05-27T12:14:08Z", "url": "https://github.com/apache/incubator-doris/pull/3705", "merged": true, "mergeCommit": {"oid": "30df9fcae96419b6a9674792d6bef19d77d68dee"}, "closed": true, "closedAt": "2020-05-30T12:17:47Z", "author": {"login": "EmmyMiao87"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclYMjngH2gAyNDIzODA5MjQ4OjlhMTNiYzNkMjg2ZTcwNzk0ZDc4ZDE0MjFjYjg3NzhhNDNjOWZmYjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmAymCAFqTQyMDg3MDA1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/9a13bc3d286e70794d78d1421cb8778a43c9ffb4", "committedDate": "2020-05-27T12:12:43Z", "message": "Serialize origin stmt in Rollup Job and MV Meta\n\nIn materialized view 2.0, the define expr is serialized in column.\nThe method is that doris serialzie the origin stmt of Create Materialzied View Stmt in RollupJobV2 and MVMeta.\nThe define expr will be extract from the origin stmt after meta is deserialized.\n\nThe define expr is necessary for bitmap and hll materialized view.\nFor example:\nMV meta: __doris_mv_bitmap_k1, bitmap_union, to_bitmap(k1)\nOrigin stmt: select bitmap_union(to_bitmap(k1)) from table\nDeserialize meta: __doris_mv_bitmap_k1, bitmap_union, null\nAfter extract: the define expr `to_bitmap(k1)` from origin stmt should be extracted.\n               __doris_mv_bitmap_v1, bitmap_union, to_bitmap(k1) (which comes from the origin stmt)\n\nChange-Id: Ic2da093188d8985f5e97be5bd094e5d60d82c9a7"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NzI2NDMx", "url": "https://github.com/apache/incubator-doris/pull/3705#pullrequestreview-419726431", "createdAt": "2020-05-28T01:57:34Z", "commit": {"oid": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMTo1NzozNFrOGbjGdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMjowMDozNFrOGbjJXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzOTgzMQ==", "bodyText": "This is not match with what write writes. We should make them consistent.", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431539831", "createdAt": "2020-05-28T01:57:34Z", "author": {"login": "imay"}, "path": "fe/src/main/java/org/apache/doris/alter/RollupJobV2.java", "diffHunk": "@@ -770,4 +714,85 @@ public void setJobState(JobState jobState) {\n         this.jobState = jobState;\n     }\n \n+    private void setColumnsDefineExpr(List<MVColumnItem> items) {\n+        for (MVColumnItem item : items) {\n+            for (Column column : rollupSchema) {\n+                if (column.getName().equals(item.getName())) {\n+                    column.setDefineExpr(item.getDefineExpr());\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void write(DataOutput out) throws IOException {\n+        String json = GsonUtils.GSON.toJson(this, AlterJobV2.class);\n+        Text.writeString(out, json);\n+    }\n+\n+    public static RollupJobV2 read(DataInput in) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4"}, "originalPosition": 228}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU0MDU3NQ==", "bodyText": "write don't match with readFields", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431540575", "createdAt": "2020-05-28T02:00:34Z", "author": {"login": "imay"}, "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -1081,14 +969,8 @@ private void readJobFinishedData(DataInput in) throws IOException {\n \n     @Override\n     public void write(DataOutput out) throws IOException {\n-        super.write(out);\n-\n-        out.writeBoolean(isMetaPruned);\n-        if (isMetaPruned) {\n-            writeJobFinishedData(out);\n-        } else {\n-            writeJobNotFinishData(out);\n-        }\n+        String json = GsonUtils.GSON.toJson(this, AlterJobV2.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4"}, "originalPosition": 222}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NzQwMTg3", "url": "https://github.com/apache/incubator-doris/pull/3705#pullrequestreview-419740187", "createdAt": "2020-05-28T02:44:21Z", "commit": {"oid": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMjo0NDoyMVrOGbjzdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMjo1NTo0MlrOGbj97Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU1MTM1MA==", "bodyText": "NULL should be judged in set, it may be too late to judge in get function", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431551350", "createdAt": "2020-05-28T02:44:21Z", "author": {"login": "HangyuanLiu"}, "path": "fe/src/main/java/org/apache/doris/analysis/StatementBase.java", "diffHunk": "@@ -153,7 +156,17 @@ public String getClusterName() {\n \n     public void setClusterName(String clusterName) {\n         this.clusterName = clusterName;\n-    } \n+    }\n+\n+    public void setOrigStmt(OriginStatement origStmt) {\n+        this.origStmt = origStmt;\n+    }\n+\n+    public OriginStatement getOrigStmt() {\n+        Preconditions.checkState(origStmt != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU1NDAyOQ==", "bodyText": "The name defineStmt can easily cause ambiguity with DefineExpr. But this statement may not only parse the semantics of defineExpr in the future\u3002MaterializedViewStmt is a better name ?", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431554029", "createdAt": "2020-05-28T02:55:42Z", "author": {"login": "HangyuanLiu"}, "path": "fe/src/main/java/org/apache/doris/catalog/MaterializedIndexMeta.java", "diffHunk": "@@ -46,9 +55,11 @@\n     private TStorageType storageType;\n     @SerializedName(value = \"keysType\")\n     private KeysType keysType;\n+    @SerializedName(value = \"defineStmt\")\n+    private OriginStatement defineStmt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2534204b0e96eb98317487ef590e1b9cfe28e2c4", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/2534204b0e96eb98317487ef590e1b9cfe28e2c4", "committedDate": "2020-05-28T04:02:14Z", "message": "Add comment of read method\n\nChange-Id: I4e1e0f4ad0f6e76cdc43e49938de768ec3b0a0e8"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6", "committedDate": "2020-05-28T06:27:58Z", "message": "Fix ut\n\nChange-Id: I2be257d512bf541f00912a374a2e07a039fc42b4"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5ODE3Nzg0", "url": "https://github.com/apache/incubator-doris/pull/3705#pullrequestreview-419817784", "createdAt": "2020-05-28T06:43:11Z", "commit": {"oid": "48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNjo0MzoxMlrOGbnoRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzoxOTozMVrOGbooXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYxNDAyMA==", "bodyText": "Add else to make logic more explict", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431614020", "createdAt": "2020-05-28T06:43:12Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/alter/AlterJobV2.java", "diffHunk": "@@ -220,16 +233,20 @@ protected boolean checkTableStable(Database db) throws AlterCancelException {\n     public abstract void replay(AlterJobV2 replayedJob);\n \n     public static AlterJobV2 read(DataInput in) throws IOException {\n-        JobType type = JobType.valueOf(Text.readString(in));\n-        switch (type) {\n-            case ROLLUP:\n-                return RollupJobV2.read(in);\n-            case SCHEMA_CHANGE:\n-                return SchemaChangeJobV2.read(in);\n-            default:\n-                Preconditions.checkState(false);\n-                return null;\n+        if (Catalog.getCurrentCatalogJournalVersion() < FeMetaVersion.VERSION_86) {\n+            JobType type = JobType.valueOf(Text.readString(in));\n+            switch (type) {\n+                case ROLLUP:\n+                    return RollupJobV2.read(in);\n+                case SCHEMA_CHANGE:\n+                    return SchemaChangeJobV2.read(in);\n+                default:\n+                    Preconditions.checkState(false);\n+                    return null;\n+            }\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyODM3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new AnalysisException(\"The materialized view is disable\");\n          \n          \n            \n                        throw new AnalysisException(\"The materialized view is disabled\");", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431628375", "createdAt": "2020-05-28T07:15:09Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/analysis/CreateMaterializedViewStmt.java", "diffHunk": "@@ -100,9 +102,8 @@ public KeysType getMVKeysType() {\n \n     @Override\n     public void analyze(Analyzer analyzer) throws UserException {\n-        // TODO(ml): remove it\n         if (!Config.enable_materialized_view) {\n-            throw new AnalysisException(\"The materialized view is coming soon\");\n+            throw new AnalysisException(\"The materialized view is disable\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyODg0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void readFields(DataInput in) throws IOException {\n          \n          \n            \n                private void readFields(DataInput in) throws IOException {", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431628848", "createdAt": "2020-05-28T07:16:09Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/catalog/Column.java", "diffHunk": "@@ -411,28 +412,8 @@ public boolean equals(Object obj) {\n \n     @Override\n     public void write(DataOutput out) throws IOException {\n-        Text.writeString(out, name);\n-        ColumnType.write(out, type);\n-        if (null == aggregationType) {\n-            out.writeBoolean(false);\n-        } else {\n-            out.writeBoolean(true);\n-            Text.writeString(out, aggregationType.name());\n-            out.writeBoolean(isAggregationTypeImplicit);\n-        }\n-\n-        out.writeBoolean(isKey);\n-        out.writeBoolean(isAllowNull);\n-\n-        if (defaultValue == null) {\n-            out.writeBoolean(false);\n-        } else {\n-            out.writeBoolean(true);\n-            Text.writeString(out, defaultValue);\n-        }\n-        stats.write(out);\n-\n-        Text.writeString(out, comment);\n+        String json = GsonUtils.GSON.toJson(this);\n+        Text.writeString(out, json);\n     }\n \n     public void readFields(DataInput in) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzMDQyOQ==", "bodyText": "Parameter ddlStmt.getOrigStmt() is no longer needed, it can be got from loadStmt", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431630429", "createdAt": "2020-05-28T07:19:31Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/DdlExecutor.java", "diffHunk": "@@ -132,7 +131,7 @@ public static void execute(Catalog catalog, DdlStmt ddlStmt, OriginStatement ori\n             if (loadStmt.getVersion().equals(Load.VERSION) || jobType == EtlJobType.HADOOP) {\n                 catalog.getLoadManager().createLoadJobV1FromStmt(loadStmt, jobType, System.currentTimeMillis());\n             } else {\n-                catalog.getLoadManager().createLoadJobFromStmt(loadStmt, origStmt);\n+                catalog.getLoadManager().createLoadJobFromStmt(loadStmt, ddlStmt.getOrigStmt());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2b70198d14166f7765194da867b354b91573c8d", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/d2b70198d14166f7765194da867b354b91573c8d", "committedDate": "2020-05-28T07:56:44Z", "message": "Change code style\n\nChange-Id: I3ab23f5c94ae781167f498fefde2d96e42e05bf9"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjIwODc3", "url": "https://github.com/apache/incubator-doris/pull/3705#pullrequestreview-420620877", "createdAt": "2020-05-29T02:56:17Z", "commit": {"oid": "d2b70198d14166f7765194da867b354b91573c8d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODcwMDU2", "url": "https://github.com/apache/incubator-doris/pull/3705#pullrequestreview-420870056", "createdAt": "2020-05-29T11:30:28Z", "commit": {"oid": "d2b70198d14166f7765194da867b354b91573c8d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2799, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}