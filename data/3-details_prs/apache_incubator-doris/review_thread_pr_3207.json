{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MDE5MzQ1", "number": 3207, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo0MjoyMVrODrm03A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo0MjoyMVrODrm03A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDUxNDg0OnYy", "diffSide": "RIGHT", "path": "be/src/olap/storage_engine.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo0MjoyMVrOF8C9tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozMjo0M1rOF8EqOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUwNzQ0Nw==", "bodyText": "Previous, rowset_id is not unique.\nNowadays, rowset_id is unique. So you can use std::unordered_map<std::string, RowsetSharedPtr> _unused_rowsets instead, not use unique_id().", "url": "https://github.com/apache/incubator-doris/pull/3207#discussion_r398507447", "createdAt": "2020-03-26T11:42:21Z", "author": {"login": "chaoyli"}, "path": "be/src/olap/storage_engine.h", "diffHunk": "@@ -296,7 +296,9 @@ class StorageEngine {\n     static StorageEngine* _s_instance;\n \n     Mutex _gc_mutex;\n-    std::unordered_map<std::string, RowsetSharedPtr> _unused_rowsets;\n+    // map<rowset_id(str), pair<rowset_path(str),RowsetSharedPtr>>\n+    // if we use RowsetId as the key, we need custom hash func\n+    std::unordered_multimap<std::string, std::pair<std::string,RowsetSharedPtr>> _unused_rowsets;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29ab44da5e77fd4c413a5acd669acedcf00c3239"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzNTIyNg==", "bodyText": "It couldn't be better. I'll fix it.", "url": "https://github.com/apache/incubator-doris/pull/3207#discussion_r398535226", "createdAt": "2020-03-26T12:32:43Z", "author": {"login": "vagetablechicken"}, "path": "be/src/olap/storage_engine.h", "diffHunk": "@@ -296,7 +296,9 @@ class StorageEngine {\n     static StorageEngine* _s_instance;\n \n     Mutex _gc_mutex;\n-    std::unordered_map<std::string, RowsetSharedPtr> _unused_rowsets;\n+    // map<rowset_id(str), pair<rowset_path(str),RowsetSharedPtr>>\n+    // if we use RowsetId as the key, we need custom hash func\n+    std::unordered_multimap<std::string, std::pair<std::string,RowsetSharedPtr>> _unused_rowsets;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUwNzQ0Nw=="}, "originalCommit": {"oid": "29ab44da5e77fd4c413a5acd669acedcf00c3239"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1818, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}