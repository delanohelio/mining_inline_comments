{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxOTMwNDgz", "number": 3300, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwOTowNzoxM1rODzWybQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwOTowNzoxM1rODzWybQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MTc3MzI1OnYy", "diffSide": "RIGHT", "path": "be/src/runtime/datetime_value.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwOTowNzoxM1rOGH0wKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwOTowNzoxM1rOGH0wKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg1NzUxMg==", "bodyText": "Missing return value", "url": "https://github.com/apache/incubator-doris/pull/3300#discussion_r410857512", "createdAt": "2020-04-19T09:07:13Z", "author": {"login": "morningman"}, "path": "be/src/runtime/datetime_value.h", "diffHunk": "@@ -494,6 +498,33 @@ class DateTimeValue {\n         return _neg ? -tmp : tmp;\n     }\n \n+    bool find_cctz_time_zone(const std::string& timezone, cctz::time_zone& ctz) const {\n+        re2::StringPiece value;\n+        if (time_zone_offset_format_reg.Match(timezone, 0, timezone.size(), RE2::UNANCHORED, &value, 1)) {\n+            bool postive = value[0] != '-';\n+\n+            //Regular expression guarantees hour and minute mush be int \n+            int hour = std::stoi(value.substr(1, 2).as_string());\n+            int minute = std::stoi(value.substr(4, 2).as_string());\n+\n+            // timezone offsets around the world extended from -12:00 to +14:00\n+            if (!postive && hour > 12) {\n+                return false;\n+            } else if (postive && hour > 14) {\n+                return false;\n+            }\n+            int offset = hour * 60 * 60 + minute * 60;\n+            offset *= postive ? 1 : -1;\n+            ctz = cctz::fixed_time_zone(cctz::seconds(offset));\n+            return true;\n+        } else if (timezone == \"CST\"){\n+            // Supports offset and region timezone type, \"CST\" use here is compatibility purposes.\n+            ctz = cctz::fixed_time_zone(cctz::seconds(8 * 60 * 60));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "060ff8dafaba3fe17e112f2fcf603157a58d3944"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1900, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}