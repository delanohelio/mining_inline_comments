{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwOTQwNzk4", "number": 3148, "title": "improve performent of hash join in some case", "bodyText": "improve performent of hash join  when build table has to many duplicated rows, this will cause hash table collisions and slow down the probe performence.\nIn this pr when join type is  semi join or anti join, we will build a hash table without duplicated rows.\nbenchmark:\ndataset: tpcds dataset  store_sales and catalog_sales\nmysql> select count(*) from catalog_sales;\n+----------+\n| count(*) |\n+----------+\n| 14401261 |\n+----------+\n1 row in set (0.44 sec)\n\nmysql> select count(distinct cs_bill_cdemo_sk) from catalog_sales;\n+------------------------------------+\n| count(DISTINCT `cs_bill_cdemo_sk`) |\n+------------------------------------+\n|                            1085080 |\n+------------------------------------+\n1 row in set (2.46 sec)\n\nmysql> select count(*) from store_sales;\n+----------+\n| count(*) |\n+----------+\n| 28800991 |\n+----------+\n1 row in set (0.84 sec)\n\nmysql> select count(distinct ss_addr_sk) from store_sales;\n+------------------------------+\n| count(DISTINCT `ss_addr_sk`) |\n+------------------------------+\n|                       249978 |\n+------------------------------+\n1 row in set (2.57 sec)\n\ntest querys:\nquery1: select count(*) from (select store_sales.ss_addr_sk  from store_sales left semi join catalog_sales  on catalog_sales.cs_bill_cdemo_sk = store_sales.ss_addr_sk) a;\nquery2: select count(*) from (select catalog_sales.cs_bill_cdemo_sk from catalog_sales left semi join store_sales on catalog_sales.cs_bill_cdemo_sk = store_sales.ss_addr_sk) a;\nbenchmark result:\n\n\n\n\nquery1\nquery2\n\n\n\n\nbefore\n14.76 sec\n3 min 16.52 sec\n\n\nafter\n12.64 sec\n10.34 sec", "createdAt": "2020-03-19T11:13:09Z", "url": "https://github.com/apache/incubator-doris/pull/3148", "merged": true, "mergeCommit": {"oid": "f0db9272ddffbc367748ce0f1040bc05dd16f5f1"}, "closed": true, "closedAt": "2020-03-20T02:31:15Z", "author": {"login": "yangzhg"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPKQyaABqjMxNDUxNTYxOTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPXGyzgFqTM3ODIwNTM5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3580517b9ef0a825a015357c0df60e3e57f0700", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/c3580517b9ef0a825a015357c0df60e3e57f0700", "committedDate": "2020-03-19T11:10:36Z", "message": "improve performent of hash join in some case"}, "afterCommit": {"oid": "55530010711c6e4a627889ce7aba79dcc90064d1", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/55530010711c6e4a627889ce7aba79dcc90064d1", "committedDate": "2020-03-19T11:32:09Z", "message": "improve performent of hash join in some case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NjgzMDAw", "url": "https://github.com/apache/incubator-doris/pull/3148#pullrequestreview-377683000", "createdAt": "2020-03-19T12:44:31Z", "commit": {"oid": "55530010711c6e4a627889ce7aba79dcc90064d1"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3Njg3ODkw", "url": "https://github.com/apache/incubator-doris/pull/3148#pullrequestreview-377687890", "createdAt": "2020-03-19T12:51:26Z", "commit": {"oid": "55530010711c6e4a627889ce7aba79dcc90064d1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjo1MToyNlrOF4s-3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjo1MToyNlrOF4s-3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwMTU2NQ==", "bodyText": "I think these compare can be done just once when initializing the HashJoinNode, no need to judge it for every row.", "url": "https://github.com/apache/incubator-doris/pull/3148#discussion_r395001565", "createdAt": "2020-03-19T12:51:26Z", "author": {"login": "morningman"}, "path": "be/src/exec/hash_join_node_ir.cpp", "diffHunk": "@@ -137,11 +137,20 @@ int HashJoinNode::process_probe_batch(RowBatch* out_batch, RowBatch* probe_batch\n     return rows_returned;\n }\n \n+// when build table has too many duplicated rows, the collisions will be very serious,\n+// so in some case will don't need to store duplicated value in hash table, we can build an unique one\n void HashJoinNode::process_build_batch(RowBatch* build_batch) {\n     // insert build row into our hash table\n     for (int i = 0; i < build_batch->num_rows(); ++i) {\n-        _hash_tbl->insert(build_batch->get_row(i));\n+        if (_join_op == TJoinOp::LEFT_ANTI_JOIN|| _join_op == TJoinOp::RIGHT_ANTI_JOIN", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55530010711c6e4a627889ce7aba79dcc90064d1"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55530010711c6e4a627889ce7aba79dcc90064d1", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/55530010711c6e4a627889ce7aba79dcc90064d1", "committedDate": "2020-03-19T11:32:09Z", "message": "improve performent of hash join in some case"}, "afterCommit": {"oid": "289cb3165ed23dc27efc76e3815c9dc8f097feae", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/289cb3165ed23dc27efc76e3815c9dc8f097feae", "committedDate": "2020-03-20T02:08:26Z", "message": "improve performent of hash join in some case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae2ecaccb12fd80dd240b9ff846746a476f7bf55", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/ae2ecaccb12fd80dd240b9ff846746a476f7bf55", "committedDate": "2020-03-20T02:27:29Z", "message": "improve performent of hash join in some case"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "289cb3165ed23dc27efc76e3815c9dc8f097feae", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/289cb3165ed23dc27efc76e3815c9dc8f097feae", "committedDate": "2020-03-20T02:08:26Z", "message": "improve performent of hash join in some case"}, "afterCommit": {"oid": "ae2ecaccb12fd80dd240b9ff846746a476f7bf55", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/ae2ecaccb12fd80dd240b9ff846746a476f7bf55", "committedDate": "2020-03-20T02:27:29Z", "message": "improve performent of hash join in some case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MjA1Mzk3", "url": "https://github.com/apache/incubator-doris/pull/3148#pullrequestreview-378205397", "createdAt": "2020-03-20T02:30:11Z", "commit": {"oid": "ae2ecaccb12fd80dd240b9ff846746a476f7bf55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3335, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}