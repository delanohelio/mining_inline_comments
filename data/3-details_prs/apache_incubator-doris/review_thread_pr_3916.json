{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MTQ5NTkw", "number": 3916, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNTo1NzoxOVrOEHVlDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNzoyMzo0M1rOEHV2Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTI5MDM4OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/RangePartitionDesc.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNTo1NzoxOVrOGmp3GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNTo1NzoxOVrOGmp3GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4NDkyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    throw new AnalysisException(\"Only key column can be partition column\");\n          \n          \n            \n                                    throw new AnalysisException(\"The partition column could not be aggregated column\");", "url": "https://github.com/apache/incubator-doris/pull/3916#discussion_r443184920", "createdAt": "2020-06-21T05:57:19Z", "author": {"login": "EmmyMiao87"}, "path": "fe/src/main/java/org/apache/doris/analysis/RangePartitionDesc.java", "diffHunk": "@@ -71,9 +72,12 @@ public void analyze(List<ColumnDef> columnDefs, Map<String, String> otherPropert\n             boolean found = false;\n             for (ColumnDef columnDef : columnDefs) {\n                 if (columnDef.getName().equals(partitionCol)) {\n-                    if (!columnDef.isKey()) {\n+                    if (!columnDef.isKey() && columnDef.getAggregateType() != AggregateType.NONE) {\n                         throw new AnalysisException(\"Only key column can be partition column\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "728b601b1016e3dc5bd96ea6ca880291c88b25fd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTI5MjE3OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/RangePartitionDesc.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNjowMToxNFrOGmp4Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNzoxNTo0MVrOGmqK3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4NTE1NA==", "bodyText": "Why does it need a second check here?", "url": "https://github.com/apache/incubator-doris/pull/3916#discussion_r443185154", "createdAt": "2020-06-21T06:01:14Z", "author": {"login": "EmmyMiao87"}, "path": "fe/src/main/java/org/apache/doris/analysis/RangePartitionDesc.java", "diffHunk": "@@ -145,9 +149,14 @@ public PartitionInfo toPartitionInfo(List<Column> schema, Map<String, Long> part\n             boolean find = false;\n             for (Column column : schema) {\n                 if (column.getName().equalsIgnoreCase(colName)) {\n-                    if (!column.isKey()) {\n+                    if (!column.isKey() && column.getAggregationType() != AggregateType.NONE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "728b601b1016e3dc5bd96ea6ca880291c88b25fd"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4OTk4Mg==", "bodyText": "Historical issues...\nIt is OK, may be removed in future.", "url": "https://github.com/apache/incubator-doris/pull/3916#discussion_r443189982", "createdAt": "2020-06-21T07:15:41Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/analysis/RangePartitionDesc.java", "diffHunk": "@@ -145,9 +149,14 @@ public PartitionInfo toPartitionInfo(List<Column> schema, Map<String, Long> part\n             boolean find = false;\n             for (Column column : schema) {\n                 if (column.getName().equalsIgnoreCase(colName)) {\n-                    if (!column.isKey()) {\n+                    if (!column.isKey() && column.getAggregationType() != AggregateType.NONE) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4NTE1NA=="}, "originalCommit": {"oid": "728b601b1016e3dc5bd96ea6ca880291c88b25fd"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTMzMzgzOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/RangePartitionDesc.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNzoyMzo0M1rOGmqNEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNzoyMzo0M1rOGmqNEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5MDU0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    throw new DdlException(\"Partition column[\" + colName + \"] is not key column\");\n          \n          \n            \n                                    throw new DdlException(\"The partition column could not be aggregated column\");", "url": "https://github.com/apache/incubator-doris/pull/3916#discussion_r443190547", "createdAt": "2020-06-21T07:23:43Z", "author": {"login": "EmmyMiao87"}, "path": "fe/src/main/java/org/apache/doris/analysis/RangePartitionDesc.java", "diffHunk": "@@ -145,9 +149,14 @@ public PartitionInfo toPartitionInfo(List<Column> schema, Map<String, Long> part\n             boolean find = false;\n             for (Column column : schema) {\n                 if (column.getName().equalsIgnoreCase(colName)) {\n-                    if (!column.isKey()) {\n+                    if (!column.isKey() && column.getAggregationType() != AggregateType.NONE) {\n                         throw new DdlException(\"Partition column[\" + colName + \"] is not key column\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4a98cd31c75db5f4184bc71eef1162d9540c27a"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1536, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}