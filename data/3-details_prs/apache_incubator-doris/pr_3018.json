{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMjc0ODc2", "number": 3018, "title": "Fix the pre aggregation is difference between old and new selector", "bodyText": "The issue is #3016.\nIf there is no aggregated column in aggregate index, the index will be deduplicate table.\nFor example:\naggregate table (k1, k2, v1 sum)\nmv index (k1, k2)\nThis kind of index is SPJG which same as select k1, k2 from aggregate_table group by k1, k2.\nIt also need to check the grouping column using following steps.\nIf there is no aggregated column in duplicate index, the index will be SPJ which passes the grouping verification directly.\nAlso after the supplement of index, the new candidate index should be checked the output columns also.", "createdAt": "2020-02-28T08:53:58Z", "url": "https://github.com/apache/incubator-doris/pull/3018", "merged": true, "mergeCommit": {"oid": "d151718e98fc51f9d9a4f5fa9f05470f3c135bd2"}, "closed": true, "closedAt": "2020-03-02T11:11:11Z", "author": {"login": "EmmyMiao87"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIr-w8gH2gAyMzgxMjc0ODc2OmNjM2MwNmIyMzkyN2VkNDE5NDdkZjVlOWE3MzdkNjA3ZDUxNTQ5YjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJrvf8AFqTM2NzExNzY0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cc3c06b23927ed41947df5e9a737d607d51549b6", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/cc3c06b23927ed41947df5e9a737d607d51549b6", "committedDate": "2020-02-28T08:51:57Z", "message": "Fix the pre aggregation is difference between old and new selector\n\nThe issue is #3016.\nIf there is no aggregated column in aggregate index, the index will be deduplicate table.\nFor example:\n    aggregate table (k1, k2, v1 sum)\n    mv index (k1, k2)\nThis kind of index is SPJG which same as select k1, k2 from aggregate_table group by k1, k2.\nIt also need to check the grouping column using following steps.\n\nIf there is no aggregated column in duplicate index, the index will be SPJ which passes the grouping verification directly.\n\nAlso after the supplement of index, the new candidate index should be checked the output columns also."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "838a236a09e21d3e6ab1b150321e04ca6a567e3f", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/838a236a09e21d3e6ab1b150321e04ca6a567e3f", "committedDate": "2020-02-28T09:46:10Z", "message": "Fix the check failed on materialized selector\n\nIf the slot ref comes from the inline view, there will be no column name of slot ref."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODAwNDA5", "url": "https://github.com/apache/incubator-doris/pull/3018#pullrequestreview-366800409", "createdAt": "2020-02-29T14:18:12Z", "commit": {"oid": "3b922416edf0a4c74ca8b2c4f45bbd134b3dee16"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNDoxODoxMlrOFwJeIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNDoxODoxMlrOFwJeIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzMTEzNg==", "bodyText": "Please add a UT to cover this case.", "url": "https://github.com/apache/incubator-doris/pull/3018#discussion_r386031136", "createdAt": "2020-02-29T14:18:12Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/planner/MaterializedViewSelector.java", "diffHunk": "@@ -279,16 +280,30 @@ private void checkCompensatingPredicates(Set<String> columnsInPredicates,\n      * @param candidateIndexIdToSchema\n      */\n \n-    private void checkGrouping(Set<String> columnsInGrouping, Map<Long, List<Column>> candidateIndexIdToSchema) {\n+    private void checkGrouping(Set<String> columnsInGrouping, Map<Long, List<Column>> candidateIndexIdToSchema,\n+            KeysType keysType) {\n         Iterator<Map.Entry<Long, List<Column>>> iterator = candidateIndexIdToSchema.entrySet().iterator();\n         while (iterator.hasNext()) {\n             Map.Entry<Long, List<Column>> entry = iterator.next();\n             Set<String> indexNonAggregatedColumnNames = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n             List<Column> candidateIndexSchema = entry.getValue();\n             candidateIndexSchema.stream().filter(column -> !column.isAggregated())\n                     .forEach(column -> indexNonAggregatedColumnNames.add(column.getName()));\n-            // When the candidate index is SPJ type, it passes the verification directly\n-            if (indexNonAggregatedColumnNames.size() == candidateIndexSchema.size()) {\n+            /*\n+            If there is no aggregated column in duplicate table, the index will be SPJ.\n+            For example:\n+                duplicate table (k1, k2, v1)\n+                mv index (k1, v1)\n+            When the candidate index is SPJ type, it passes the verification directly\n+\n+            If there is no aggregated column in aggregate index, the index will be deduplicate table.\n+            For example:\n+                aggregate table (k1, k2, v1 sum)\n+                mv index (k1, k2)\n+            This kind of index is SPJG which same as select k1, k2 from aggregate_table group by k1, k2.\n+            It also need to check the grouping column using following steps.\n+             */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b922416edf0a4c74ca8b2c4f45bbd134b3dee16"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef67f2962af9f14ceb32da1cf930d49f7f3f5cad", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/ef67f2962af9f14ceb32da1cf930d49f7f3f5cad", "committedDate": "2020-03-02T04:43:45Z", "message": "Same as above"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b922416edf0a4c74ca8b2c4f45bbd134b3dee16", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/3b922416edf0a4c74ca8b2c4f45bbd134b3dee16", "committedDate": "2020-02-28T09:50:01Z", "message": "Same as above"}, "afterCommit": {"oid": "ef67f2962af9f14ceb32da1cf930d49f7f3f5cad", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/ef67f2962af9f14ceb32da1cf930d49f7f3f5cad", "committedDate": "2020-03-02T04:43:45Z", "message": "Same as above"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9700c9607eb328f9076bc75dc60815f4a905faea", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/9700c9607eb328f9076bc75dc60815f4a905faea", "committedDate": "2020-03-02T09:05:42Z", "message": "Fix the selector error when table is empty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53a52fd5649bb8f6b35caf7c1c1fc148421c0923", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/53a52fd5649bb8f6b35caf7c1c1fc148421c0923", "committedDate": "2020-03-02T09:08:26Z", "message": "Add comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcbe441baf7a975dfb92e57d2b6e2a45c5abfc98", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/dcbe441baf7a975dfb92e57d2b6e2a45c5abfc98", "committedDate": "2020-03-02T10:02:47Z", "message": "Remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04e4111ec91afc5e8bd23ed4b923cf3267097556", "author": {"user": {"login": "EmmyMiao87", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/04e4111ec91afc5e8bd23ed4b923cf3267097556", "committedDate": "2020-03-02T11:07:45Z", "message": "Add comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MTE3NjQ1", "url": "https://github.com/apache/incubator-doris/pull/3018#pullrequestreview-367117645", "createdAt": "2020-03-02T11:09:12Z", "commit": {"oid": "04e4111ec91afc5e8bd23ed4b923cf3267097556"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3473, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}