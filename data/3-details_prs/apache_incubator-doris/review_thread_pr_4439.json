{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNTAzMzQy", "number": 4439, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo1MDowNlrOEcCDwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMjo1NToyNlrOEcDi0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODI5MzE0OnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/Expr.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo1MDowNlrOHGUa4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMzo0MzowOFrOHGYtow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4ODA2Nw==", "bodyText": "this.children != null is unnecessary", "url": "https://github.com/apache/incubator-doris/pull/4439#discussion_r476388067", "createdAt": "2020-08-25T11:50:06Z", "author": {"login": "kangkaisen"}, "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/Expr.java", "diffHunk": "@@ -1405,7 +1405,15 @@ protected Function getBuiltinFunction(\n             throws AnalysisException {\n         FunctionName fnName = new FunctionName(name);\n         Function searchDesc = new Function(fnName, argTypes, Type.INVALID, false);\n-        return Catalog.getCurrentCatalog().getFunction(searchDesc, mode);\n+        Function f = Catalog.getCurrentCatalog().getFunction(searchDesc, mode);\n+        if (f != null && fnName.getFunction().equalsIgnoreCase(\"rand\")) {\n+            if (this.children != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00fde471708754b9db2213e6d066ff98f5c9ef9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQxOTY4Mg==", "bodyText": "Rand function has two implements. One is Rand(const int), the other is Rand() without parm**.  this.children != null** filters Rand() without param.", "url": "https://github.com/apache/incubator-doris/pull/4439#discussion_r476419682", "createdAt": "2020-08-25T12:46:10Z", "author": {"login": "xinghuayu007"}, "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/Expr.java", "diffHunk": "@@ -1405,7 +1405,15 @@ protected Function getBuiltinFunction(\n             throws AnalysisException {\n         FunctionName fnName = new FunctionName(name);\n         Function searchDesc = new Function(fnName, argTypes, Type.INVALID, false);\n-        return Catalog.getCurrentCatalog().getFunction(searchDesc, mode);\n+        Function f = Catalog.getCurrentCatalog().getFunction(searchDesc, mode);\n+        if (f != null && fnName.getFunction().equalsIgnoreCase(\"rand\")) {\n+            if (this.children != null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4ODA2Nw=="}, "originalCommit": {"oid": "d00fde471708754b9db2213e6d066ff98f5c9ef9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQyNjYzNg==", "bodyText": "children is init with Lists.newArrayList(); in TreeNode, so it won't be null.", "url": "https://github.com/apache/incubator-doris/pull/4439#discussion_r476426636", "createdAt": "2020-08-25T12:56:19Z", "author": {"login": "kangkaisen"}, "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/Expr.java", "diffHunk": "@@ -1405,7 +1405,15 @@ protected Function getBuiltinFunction(\n             throws AnalysisException {\n         FunctionName fnName = new FunctionName(name);\n         Function searchDesc = new Function(fnName, argTypes, Type.INVALID, false);\n-        return Catalog.getCurrentCatalog().getFunction(searchDesc, mode);\n+        Function f = Catalog.getCurrentCatalog().getFunction(searchDesc, mode);\n+        if (f != null && fnName.getFunction().equalsIgnoreCase(\"rand\")) {\n+            if (this.children != null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4ODA2Nw=="}, "originalCommit": {"oid": "d00fde471708754b9db2213e6d066ff98f5c9ef9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ1ODQwMw==", "bodyText": "You are right.", "url": "https://github.com/apache/incubator-doris/pull/4439#discussion_r476458403", "createdAt": "2020-08-25T13:43:08Z", "author": {"login": "xinghuayu007"}, "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/Expr.java", "diffHunk": "@@ -1405,7 +1405,15 @@ protected Function getBuiltinFunction(\n             throws AnalysisException {\n         FunctionName fnName = new FunctionName(name);\n         Function searchDesc = new Function(fnName, argTypes, Type.INVALID, false);\n-        return Catalog.getCurrentCatalog().getFunction(searchDesc, mode);\n+        Function f = Catalog.getCurrentCatalog().getFunction(searchDesc, mode);\n+        if (f != null && fnName.getFunction().equalsIgnoreCase(\"rand\")) {\n+            if (this.children != null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4ODA2Nw=="}, "originalCommit": {"oid": "d00fde471708754b9db2213e6d066ff98f5c9ef9"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODMxNDI0OnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/test/java/org/apache/doris/analysis/ExprTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo1NjoyM1rOHGUn2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo1NjoyM1rOHGUn2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM5MTM4Ng==", "bodyText": "You could add the test in SelectStmtTest, and then you could directly write testRandFunction", "url": "https://github.com/apache/incubator-doris/pull/4439#discussion_r476391386", "createdAt": "2020-08-25T11:56:23Z", "author": {"login": "kangkaisen"}, "path": "fe/fe-core/src/test/java/org/apache/doris/analysis/ExprTest.java", "diffHunk": "@@ -24,18 +24,43 @@\n \n import com.google.common.collect.Maps;\n \n+import org.apache.doris.mysql.privilege.MockedAuth;\n+import org.apache.doris.mysql.privilege.PaloAuth;\n+import org.apache.doris.qe.ConnectContext;\n+import org.apache.doris.utframe.DorisAssert;\n+import org.apache.doris.utframe.UtFrameUtils;\n import org.junit.Assert;\n import org.junit.Test;\n+import org.junit.BeforeClass;\n+import org.junit.AfterClass;\n \n-import java.util.Map;\n-import java.util.Set;\n+import java.io.IOException;\n+import java.util.*;\n \n import mockit.Expectations;\n import mockit.Injectable;\n import mockit.Mocked;\n \n public class ExprTest {\n \n+    private static String runningDir = \"fe/mocked/DemoTest/\" + UUID.randomUUID().toString() + \"/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00fde471708754b9db2213e6d066ff98f5c9ef9"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODMxNTg2OnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/test/java/org/apache/doris/analysis/ExprTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo1Njo0OFrOHGUo1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo1Njo0OFrOHGUo1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM5MTYzOA==", "bodyText": "What's the meaning of   Assert.assertTrue(1 == 1); ?", "url": "https://github.com/apache/incubator-doris/pull/4439#discussion_r476391638", "createdAt": "2020-08-25T11:56:48Z", "author": {"login": "kangkaisen"}, "path": "fe/fe-core/src/test/java/org/apache/doris/analysis/ExprTest.java", "diffHunk": "@@ -159,4 +184,42 @@ public void testUncheckedCastTo() throws AnalysisException {\n         StringLiteral castStringLiteral2 = (StringLiteral) stringLiteral.uncheckedCastTo(Type.VARCHAR);\n         Assert.assertTrue(stringLiteral == castStringLiteral2);\n     }\n+\n+    @Test\n+    public void testRandFunction() {\n+        try {\n+            ConnectContext ctx = UtFrameUtils.createDefaultCtx();\n+            String selectStmtStr = \"select rand(db1.tbl1.k1) from db1.tbl1;\";\n+            UtFrameUtils.parseAndAnalyzeStmt(selectStmtStr, ctx);\n+        } catch (Exception e) {\n+            Assert.assertTrue(e.getMessage().contains(\"The param of rand function must be literal\"));\n+        }\n+\n+        try {\n+            ConnectContext ctx = UtFrameUtils.createDefaultCtx();\n+            String selectStmtStr = \"select rand(1234) from db1.tbl1;\";\n+            UtFrameUtils.parseAndAnalyzeStmt(selectStmtStr, ctx);\n+        } catch (Exception e) {\n+            Assert.assertFalse(e.getMessage().contains(\"The param of rand function must be literal\"));\n+        }\n+        Assert.assertTrue(1 == 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00fde471708754b9db2213e6d066ff98f5c9ef9"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODUzNjQ4OnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/test/java/org/apache/doris/analysis/SelectStmtTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMjo1NToyNlrOHGWt6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMjo1NToyNlrOHGWt6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQyNTcwNw==", "bodyText": "You could use dorisAssert.query(sql).explainQuery();, which is more simpler.", "url": "https://github.com/apache/incubator-doris/pull/4439#discussion_r476425707", "createdAt": "2020-08-25T12:55:26Z", "author": {"login": "kangkaisen"}, "path": "fe/fe-core/src/test/java/org/apache/doris/analysis/SelectStmtTest.java", "diffHunk": "@@ -362,4 +362,39 @@ public void testDataGripSupport() throws Exception {\n                 \"from information_schema.collations\";\n         dorisAssert.query(sql).explainQuery();\n     }\n+\n+    @Test\n+    public void testRandFunction() {\n+        try {\n+            ConnectContext ctx = UtFrameUtils.createDefaultCtx();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3ee01eba6d446b92ec03914939c499321770442"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1180, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}