{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MTY3ODY3", "number": 2966, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDozNDoyOFrODh5dGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDo0MzowMlrODh5pCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODcwOTM2OnYy", "diffSide": "RIGHT", "path": "fe/src/test/java/org/apache/doris/utframe/HLLTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDozNDoyOFrOFs428Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMjoxODoyNFrOFtI_SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxMzIzMw==", "bodyText": "How about move this Test to the qe package. utframe package is only for definition of the ut frame.\nAnd how about making a unified QueryTest, and we can add any query-related test in it? Because I'm afraid if we start a mocked FE for each single unit test, the total time of running all unit tests will be much longer.", "url": "https://github.com/apache/incubator-doris/pull/2966#discussion_r382613233", "createdAt": "2020-02-21T14:34:28Z", "author": {"login": "morningman"}, "path": "fe/src/test/java/org/apache/doris/utframe/HLLTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.utframe;\n+\n+import org.apache.doris.analysis.CreateDbStmt;\n+import org.apache.doris.analysis.CreateTableStmt;\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.catalog.Type;\n+import org.apache.doris.qe.ConnectContext;\n+\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.util.UUID;\n+\n+public class HLLTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2715b456999c3ad556711baed5bde9ff0d30e89a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3NzUxMg==", "bodyText": "I agree with you.  I also considered this point.", "url": "https://github.com/apache/incubator-doris/pull/2966#discussion_r382877512", "createdAt": "2020-02-22T02:18:24Z", "author": {"login": "kangkaisen"}, "path": "fe/src/test/java/org/apache/doris/utframe/HLLTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.utframe;\n+\n+import org.apache.doris.analysis.CreateDbStmt;\n+import org.apache.doris.analysis.CreateTableStmt;\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.catalog.Type;\n+import org.apache.doris.qe.ConnectContext;\n+\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.util.UUID;\n+\n+public class HLLTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxMzIzMw=="}, "originalCommit": {"oid": "2715b456999c3ad556711baed5bde9ff0d30e89a"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODcyNzE5OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/catalog/Type.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDozOToyOFrOFs5B8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDozOToyOFrOFs5B8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxNjA1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public boolean isOnlyMetricType () {\n          \n          \n            \n                public boolean isOnlyMetricType() {", "url": "https://github.com/apache/incubator-doris/pull/2966#discussion_r382616051", "createdAt": "2020-02-21T14:39:28Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/catalog/Type.java", "diffHunk": "@@ -189,6 +189,19 @@ public boolean isStringType() {\n         return isScalarType(PrimitiveType.VARCHAR) || isScalarType(PrimitiveType.CHAR);\n     }\n \n+    // only metric types have the following constraint:\n+    // 1. don't support as key column\n+    // 2. don't support filter\n+    // 3. don't support group by\n+    // 4. don't support index\n+    public boolean isOnlyMetricType () {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2715b456999c3ad556711baed5bde9ff0d30e89a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODczOTk1OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDo0MzowMlrOFs5JlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNjozMDozNFrOFtJ0aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxODAwNQ==", "bodyText": "Why this 2 judgement can be removed?", "url": "https://github.com/apache/incubator-doris/pull/2966#discussion_r382618005", "createdAt": "2020-02-21T14:43:02Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -303,30 +300,20 @@ private void analyzeBuiltinAggFunction(Analyzer analyzer) throws AnalysisExcepti\n                          \"group_concat requires first parameter to be of type STRING: \" + this.toSql());\n             }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2715b456999c3ad556711baed5bde9ff0d30e89a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3NzY2MQ==", "bodyText": "Because there has the type.isStringType() check, HLL and bitmap is not string type. we needn't check HLL and bitmap again.", "url": "https://github.com/apache/incubator-doris/pull/2966#discussion_r382877661", "createdAt": "2020-02-22T02:20:31Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -303,30 +300,20 @@ private void analyzeBuiltinAggFunction(Analyzer analyzer) throws AnalysisExcepti\n                          \"group_concat requires first parameter to be of type STRING: \" + this.toSql());\n             }\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxODAwNQ=="}, "originalCommit": {"oid": "2715b456999c3ad556711baed5bde9ff0d30e89a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5MTExMg==", "bodyText": "ok", "url": "https://github.com/apache/incubator-doris/pull/2966#discussion_r382891112", "createdAt": "2020-02-22T06:30:34Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -303,30 +300,20 @@ private void analyzeBuiltinAggFunction(Analyzer analyzer) throws AnalysisExcepti\n                          \"group_concat requires first parameter to be of type STRING: \" + this.toSql());\n             }\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxODAwNQ=="}, "originalCommit": {"oid": "2715b456999c3ad556711baed5bde9ff0d30e89a"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2027, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}