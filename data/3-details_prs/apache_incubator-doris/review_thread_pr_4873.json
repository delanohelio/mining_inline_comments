{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MTY1ODQ5", "number": 4873, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0OTo0M1rOE3Dnog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0OTo0M1rOE3Dnog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTY2NDM0OnYy", "diffSide": "RIGHT", "path": "docs/en/administrator-guide/load-data/routine-load-manual.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0OTo0M1rOHwLolA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0OTo0M1rOHwLolA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDMwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                `COLUMNS (xx, k1 = case when xx < 0 thenn cast(-xx as varchar) else cast((xx + '100') as varchar) end)`\n          \n          \n            \n                `COLUMNS (xx, k1 = case when xx < 0 then cast(-xx as varchar) else cast((xx + '100') as varchar) end)`", "url": "https://github.com/apache/incubator-doris/pull/4873#discussion_r520284308", "createdAt": "2020-11-10T04:49:43Z", "author": {"login": "morningman"}, "path": "docs/en/administrator-guide/load-data/routine-load-manual.md", "diffHunk": "@@ -105,7 +105,7 @@ The detailed syntax for creating a routine load task can be connected to Doris a\n \n     As another example, suppose the user needs to load a table containing only a column of `k1` with a column type of `int`. And you need to process the corresponding column in the source file: convert the negative number to a positive number and the positive number to 100. This function can be implemented with the `case when` function. The correct wording should be as follows:\n \n-    `COLUMNS (xx, case when xx < 0 than cast(-xx as varchar) else cast((xx + '100') as varchar) end)`\n+    `COLUMNS (xx, k1 = case when xx < 0 thenn cast(-xx as varchar) else cast((xx + '100') as varchar) end)`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34dc74a554ae8dcf276cfd79624db5a21d85d005"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 873, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}