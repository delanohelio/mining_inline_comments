{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NDczMjM4", "number": 4152, "title": "[Spill To Disk][2/6] Add some runningtime function and change some function will be called in the future", "bodyText": "issue:#3926\nProposed changes\nDescribe the big picture of your changes here to communicate to the maintainers why we should accept this pull request. If it fixes a bug or resolves a feature request, be sure to link to that issue.\nTypes of changes\nWhat types of changes does your code introduce to Doris?\nPut an x in the boxes that apply\n\n Bugfix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Breaking change (fix or feature that would cause existing functionality to not work as expected)\n Documentation Update (if none of the other choices apply)\n\nChecklist\nPut an x in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code.\n\n I have create an issue on Doris's issues, and have described the bug/feature there in detail\n Commit messages in my PR start with the related issues ID, like \"#4071 Add pull request template to doris project\"\n Compiling and unit tests pass locally with my changes\n I have added tests that prove my fix is effective or that my feature works\n If this change need a document change, I have updated the document\n Any dependent changes have been merged", "createdAt": "2020-07-23T04:26:46Z", "url": "https://github.com/apache/incubator-doris/pull/4152", "merged": true, "mergeCommit": {"oid": "e6059341e807a37229717a33d06967cb49e214dc"}, "closed": true, "closedAt": "2020-07-30T06:21:49Z", "author": {"login": "HappenLee"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3nfzSgH2gAyNDU1NDczMjM4OjMzMjA1NGU0MTUzMTAzNDAxMzFhOGE4OWFlNGE4N2I3NjExZjRjYmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5slLmAFqTQ1NzYyNjY2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "332054e415310340131a8a89ae4a87b7611f4cbb", "author": {"user": {"login": "HappenLee", "name": "HappenLee"}}, "url": "https://github.com/apache/incubator-doris/commit/332054e415310340131a8a89ae4a87b7611f4cbb", "committedDate": "2020-07-23T04:12:57Z", "message": "[Spill To Disk][2/6] Add some function and change some function will use in future.\n\nissue:#3926"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODY4NTkz", "url": "https://github.com/apache/incubator-doris/pull/4152#pullrequestreview-453868593", "createdAt": "2020-07-23T06:43:13Z", "commit": {"oid": "332054e415310340131a8a89ae4a87b7611f4cbb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNjo0MzoxM1rOG19-7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNjo0MzoxM1rOG19-7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0MzI0NQ==", "bodyText": "CheckFreeListHeadIsNotNull", "url": "https://github.com/apache/incubator-doris/pull/4152#discussion_r459243245", "createdAt": "2020-07-23T06:43:13Z", "author": {"login": "wutiangan"}, "path": "be/src/runtime/bufferpool/suballocator.cc", "diffHunk": "@@ -219,6 +230,10 @@ unique_ptr<Suballocation> Suballocator::PopFreeListHead(int list_idx) {\n   return result;\n }\n \n+bool Suballocator::CheckFreeListHead(int list_idx) const {\n+    return free_lists_[list_idx] != nullptr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332054e415310340131a8a89ae4a87b7611f4cbb"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODcwNzAy", "url": "https://github.com/apache/incubator-doris/pull/4152#pullrequestreview-453870702", "createdAt": "2020-07-23T06:48:16Z", "commit": {"oid": "332054e415310340131a8a89ae4a87b7611f4cbb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNjo0ODoxNlrOG1-GHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNjo0ODoxNlrOG1-GHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0NTA4Nw==", "bodyText": "Modify annotation\uff0c the annotation is not consistent with function.", "url": "https://github.com/apache/incubator-doris/pull/4152#discussion_r459245087", "createdAt": "2020-07-23T06:48:16Z", "author": {"login": "wutiangan"}, "path": "be/src/runtime/bufferpool/suballocator.h", "diffHunk": "@@ -128,6 +129,10 @@ class Suballocator {\n   // if list is empty.\n   std::unique_ptr<Suballocation> PopFreeListHead(int list_idx);\n \n+  // Get the allocation at the head of the free list at index 'list_idx'. Return nullptr\n+  // if list is empty.\n+  bool CheckFreeListHead(int list_idx) const;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332054e415310340131a8a89ae4a87b7611f4cbb"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dd5ccf43330201f47c503ab52fa154d9d1d29aa", "author": {"user": {"login": "HappenLee", "name": "HappenLee"}}, "url": "https://github.com/apache/incubator-doris/commit/8dd5ccf43330201f47c503ab52fa154d9d1d29aa", "committedDate": "2020-07-23T09:07:57Z", "message": "change function name CheckFreeListHeadNotNull"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzOTcwMTYx", "url": "https://github.com/apache/incubator-doris/pull/4152#pullrequestreview-453970161", "createdAt": "2020-07-23T09:30:19Z", "commit": {"oid": "8dd5ccf43330201f47c503ab52fa154d9d1d29aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwOTozMDoyMFrOG2C-Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwOTozMDoyMFrOG2C-Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMyNTAwMw==", "bodyText": "I think the implementation isn't consistent with the method comment and name.\nOnly if there has one tuple. _fixed_tuple_row_size will large than zero.\n    for (int i = 0; i < _desc.tuple_descriptors().size(); ++i) {\n        const TupleDescriptor* tuple_desc = _desc.tuple_descriptors()[i];\n        const int tuple_byte_size = tuple_desc->byte_size();\n        _fixed_tuple_row_size += tuple_byte_size;\n        if (!tuple_desc->string_slots().empty()) {\n            _string_slots.push_back(make_pair(i, tuple_desc->string_slots()));\n        }\n        // if (!tuple_desc->collection_slots().empty()) {\n        //     _collection_slots.push_back(make_pair(i, tuple_desc->collection_slots()));\n        // }\n    }", "url": "https://github.com/apache/incubator-doris/pull/4152#discussion_r459325003", "createdAt": "2020-07-23T09:30:20Z", "author": {"login": "kangkaisen"}, "path": "be/src/runtime/buffered_tuple_stream2.h", "diffHunk": "@@ -257,6 +257,11 @@ class BufferedTupleStream2 {\n     bool has_tuple_footprint() const {\n         return _fixed_tuple_row_size > 0 || !_string_slots.empty() || _nullable_tuple;\n     }\n+    /// Returns true if the row consumes any memory. If false, the stream only needs to\n+    /// store the count of rows.\n+    bool row_consumes_memory() const {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dd5ccf43330201f47c503ab52fa154d9d1d29aa"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76551d9f12354f2e944046f3dc20f44e8992b964", "author": {"user": {"login": "HappenLee", "name": "HappenLee"}}, "url": "https://github.com/apache/incubator-doris/commit/76551d9f12354f2e944046f3dc20f44e8992b964", "committedDate": "2020-07-24T10:28:01Z", "message": "Remove the unreasonable code and add some comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NjI2NjYz", "url": "https://github.com/apache/incubator-doris/pull/4152#pullrequestreview-457626663", "createdAt": "2020-07-29T15:16:12Z", "commit": {"oid": "76551d9f12354f2e944046f3dc20f44e8992b964"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2008, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}