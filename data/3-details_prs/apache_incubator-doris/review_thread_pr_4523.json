{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3ODEzODU4", "number": 4523, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozMzoyMVrOEf3IiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozMzoyMVrOEf3IiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODQ0NjE3OnYy", "diffSide": "RIGHT", "path": "be/src/util/core_local.cpp", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozMzoyMVrOHMZy6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwODowNzozN1rOHMbE5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NzU5NA==", "bodyText": "CoreData is to bind data to cpu to eliminate the lock.\nIf add a lock, it's design is meaningless.", "url": "https://github.com/apache/incubator-doris/pull/4523#discussion_r482767594", "createdAt": "2020-09-03T07:33:21Z", "author": {"login": "chaoyli"}, "path": "be/src/util/core_local.cpp", "diffHunk": "@@ -61,6 +65,7 @@ class CoreDataAllocatorImpl : public CoreDataAllocator {\n     }\n private:\n     static constexpr int ELEMENTS_PER_BLOCK = BLOCK_SIZE / ELEMENT_BYTES;\n+    SpinLock _lock; // lock to protect the modification of _blocks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edb18987c495d4fc3b512d1f1114c56137050007"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc4NjQ0Mw==", "bodyText": "This is only used when creating the core local value (by calling get_or_create() of CoreDataAllocatorImpl).\nAnd when creating the value, there is nothing to do with \"cpu-bind\".\nThe so called \"cpu-bind\" operation happens when accessing the CoreLocalValue,\nnot related to CoreDataAllocatorImpl", "url": "https://github.com/apache/incubator-doris/pull/4523#discussion_r482786443", "createdAt": "2020-09-03T08:04:02Z", "author": {"login": "morningman"}, "path": "be/src/util/core_local.cpp", "diffHunk": "@@ -61,6 +65,7 @@ class CoreDataAllocatorImpl : public CoreDataAllocator {\n     }\n private:\n     static constexpr int ELEMENTS_PER_BLOCK = BLOCK_SIZE / ELEMENT_BYTES;\n+    SpinLock _lock; // lock to protect the modification of _blocks", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NzU5NA=="}, "originalCommit": {"oid": "edb18987c495d4fc3b512d1f1114c56137050007"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc4ODU4Mw==", "bodyText": "OK, I have no problem.", "url": "https://github.com/apache/incubator-doris/pull/4523#discussion_r482788583", "createdAt": "2020-09-03T08:07:37Z", "author": {"login": "chaoyli"}, "path": "be/src/util/core_local.cpp", "diffHunk": "@@ -61,6 +65,7 @@ class CoreDataAllocatorImpl : public CoreDataAllocator {\n     }\n private:\n     static constexpr int ELEMENTS_PER_BLOCK = BLOCK_SIZE / ELEMENT_BYTES;\n+    SpinLock _lock; // lock to protect the modification of _blocks", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NzU5NA=="}, "originalCommit": {"oid": "edb18987c495d4fc3b512d1f1114c56137050007"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1076, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}