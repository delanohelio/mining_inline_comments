{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MzgzNTky", "number": 3625, "title": "Support more syntax in case when clause", "bodyText": "support support more syntax in case-when clause with subquey.\nsuport query like case when k1 > subquery1 and k2 < subquey2 then ... else ... or  case when subquey in null then ...", "createdAt": "2020-05-18T09:43:24Z", "url": "https://github.com/apache/incubator-doris/pull/3625", "merged": true, "mergeCommit": {"oid": "00d563d014f69c5600f51697393d1477c74f5398"}, "closed": true, "closedAt": "2020-05-22T02:23:00Z", "author": {"login": "yangzhg"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjDJ5AgBqjMzNTQ5MTM4OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjF_JmAFqTQxNTE3MjU5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d69e98459bcde341c08dc6afd138376ca4ee3566", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/d69e98459bcde341c08dc6afd138376ca4ee3566", "committedDate": "2020-05-18T09:41:14Z", "message": "support more syntax in case when clause"}, "afterCommit": {"oid": "9314ae7946faf939440eadf8b2cac952eac41b58", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/9314ae7946faf939440eadf8b2cac952eac41b58", "committedDate": "2020-05-20T06:33:23Z", "message": "support more syntax in case when clause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "faadfbe113a0eb8ad67772d51de79d3ea7f1fbd5", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/faadfbe113a0eb8ad67772d51de79d3ea7f1fbd5", "committedDate": "2020-05-20T07:13:16Z", "message": "support more syntax in case when clause"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9314ae7946faf939440eadf8b2cac952eac41b58", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/9314ae7946faf939440eadf8b2cac952eac41b58", "committedDate": "2020-05-20T06:33:23Z", "message": "support more syntax in case when clause"}, "afterCommit": {"oid": "faadfbe113a0eb8ad67772d51de79d3ea7f1fbd5", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/faadfbe113a0eb8ad67772d51de79d3ea7f1fbd5", "committedDate": "2020-05-20T07:13:16Z", "message": "support more syntax in case when clause"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTAwNTIx", "url": "https://github.com/apache/incubator-doris/pull/3625#pullrequestreview-415100521", "createdAt": "2020-05-20T08:22:36Z", "commit": {"oid": "faadfbe113a0eb8ad67772d51de79d3ea7f1fbd5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTcyNTk0", "url": "https://github.com/apache/incubator-doris/pull/3625#pullrequestreview-415172594", "createdAt": "2020-05-20T09:51:55Z", "commit": {"oid": "faadfbe113a0eb8ad67772d51de79d3ea7f1fbd5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo1MTo1NVrOGYD-vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo1MTo1NVrOGYD-vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NDIyMg==", "bodyText": "you need to modify exception message for you delete 'BinaryPredicate'", "url": "https://github.com/apache/incubator-doris/pull/3625#discussion_r427884222", "createdAt": "2020-05-20T09:51:55Z", "author": {"login": "wutiangan"}, "path": "fe/src/main/java/org/apache/doris/analysis/CaseExpr.java", "diffHunk": "@@ -191,7 +191,7 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n                 throw new AnalysisException(\"Subquery in case-when must return scala type\");\n             }\n             if (whenExpr.contains(Predicates.instanceOf(Subquery.class))\n-                    && !((hasCaseExpr() && whenExpr instanceof Subquery || whenExpr instanceof BinaryPredicate))) {\n+                    && !((hasCaseExpr() && whenExpr instanceof Subquery || !checkSubquery(whenExpr)))) {\n                 throw new AnalysisException(\"Only support subquery in binary predicate in case statement.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faadfbe113a0eb8ad67772d51de79d3ea7f1fbd5"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2666, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}