{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NDgyNDQ1", "number": 3750, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMzowMTowMFrOEBu7jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNToxODo1OVrOECnF-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMjUyOTQzOnYy", "diffSide": "RIGHT", "path": "be/src/olap/tablet_schema.cpp", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMzowMTowMFrOGdweJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMTozMToxN1rOGeyymg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1NjAzNg==", "bodyText": "I am not sure, but did you miss the _num_short_key_columns here?", "url": "https://github.com/apache/incubator-doris/pull/3750#discussion_r433856036", "createdAt": "2020-06-02T13:01:00Z", "author": {"login": "morningman"}, "path": "be/src/olap/tablet_schema.cpp", "diffHunk": "@@ -337,14 +337,12 @@ void TabletColumn::to_schema_pb(ColumnPB* column) {\n     }\n }\n \n-TabletSchema::TabletSchema()\n-    : _num_columns(0),\n-      _num_key_columns(0),\n-      _num_null_columns(0),\n-      _num_short_key_columns(0) { }\n-\n void TabletSchema::init_from_pb(const TabletSchemaPB& schema) {\n     _keys_type = schema.keys_type();\n+    _num_columns = 0;\n+    _num_key_columns = 0;\n+    _num_null_columns = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35c835f795c8fe26d5d8c8179ac13a8b5eb8f76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkxMjgzOA==", "bodyText": "@morningman _num_short_key_columns will be assigned in line 358 directly, not like the above variables which will be increased in the following loop, so I didn't reset it here.", "url": "https://github.com/apache/incubator-doris/pull/3750#discussion_r433912838", "createdAt": "2020-06-02T14:17:38Z", "author": {"login": "acelyc111"}, "path": "be/src/olap/tablet_schema.cpp", "diffHunk": "@@ -337,14 +337,12 @@ void TabletColumn::to_schema_pb(ColumnPB* column) {\n     }\n }\n \n-TabletSchema::TabletSchema()\n-    : _num_columns(0),\n-      _num_key_columns(0),\n-      _num_null_columns(0),\n-      _num_short_key_columns(0) { }\n-\n void TabletSchema::init_from_pb(const TabletSchemaPB& schema) {\n     _keys_type = schema.keys_type();\n+    _num_columns = 0;\n+    _num_key_columns = 0;\n+    _num_null_columns = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1NjAzNg=="}, "originalCommit": {"oid": "c35c835f795c8fe26d5d8c8179ac13a8b5eb8f76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MjYxOA==", "bodyText": "ok", "url": "https://github.com/apache/incubator-doris/pull/3750#discussion_r434942618", "createdAt": "2020-06-04T01:31:17Z", "author": {"login": "morningman"}, "path": "be/src/olap/tablet_schema.cpp", "diffHunk": "@@ -337,14 +337,12 @@ void TabletColumn::to_schema_pb(ColumnPB* column) {\n     }\n }\n \n-TabletSchema::TabletSchema()\n-    : _num_columns(0),\n-      _num_key_columns(0),\n-      _num_null_columns(0),\n-      _num_short_key_columns(0) { }\n-\n void TabletSchema::init_from_pb(const TabletSchemaPB& schema) {\n     _keys_type = schema.keys_type();\n+    _num_columns = 0;\n+    _num_key_columns = 0;\n+    _num_null_columns = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1NjAzNg=="}, "originalCommit": {"oid": "c35c835f795c8fe26d5d8c8179ac13a8b5eb8f76"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTczMTEzOnYy", "diffSide": "RIGHT", "path": "be/src/olap/tablet_schema.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNToxODo1OVrOGfLFZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjozOTowMlrOGfOhpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0MDY0Nw==", "bodyText": "Is this function used?", "url": "https://github.com/apache/incubator-doris/pull/3750#discussion_r435340647", "createdAt": "2020-06-04T15:18:59Z", "author": {"login": "imay"}, "path": "be/src/olap/tablet_schema.h", "diffHunk": "@@ -107,22 +113,30 @@ class TabletSchema {\n     inline void set_is_in_memory (bool is_in_memory) {\n         _is_in_memory = is_in_memory;\n     }\n+\n private:\n-    KeysType _keys_type;\n+    friend bool operator==(const TabletSchema& a, const TabletSchema& b);\n+    friend bool operator!=(const TabletSchema& a, const TabletSchema& b);\n+\n+private:\n+    KeysType _keys_type = DUP_KEYS;\n     std::vector<TabletColumn> _cols;\n-    size_t _num_columns;\n-    size_t _num_key_columns;\n-    size_t _num_null_columns;\n-    size_t _num_short_key_columns;\n-    size_t _num_rows_per_row_block;\n-    CompressKind _compress_kind;\n-    size_t _next_column_unique_id;\n+    size_t _num_columns = 0;\n+    size_t _num_key_columns = 0;\n+    size_t _num_null_columns = 0;\n+    size_t _num_short_key_columns = 0;\n+    size_t _num_rows_per_row_block = 0;\n+    CompressKind _compress_kind = COMPRESS_NONE;\n+    size_t _next_column_unique_id = 0;\n \n     bool _has_bf_fpp = false;\n     double _bf_fpp = 0;\n     bool _is_in_memory = false;\n };\n \n+bool operator==(const TabletSchema& a, const TabletSchema& b);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35c835f795c8fe26d5d8c8179ac13a8b5eb8f76"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM5NzAyOA==", "bodyText": "TabletMeta has a TabletSchema member, overload TabletSchema's == operator is aim to overload TabletMeta's == operator.\nNow TabletMeta's == operator is used for convenient unit test.", "url": "https://github.com/apache/incubator-doris/pull/3750#discussion_r435397028", "createdAt": "2020-06-04T16:39:02Z", "author": {"login": "acelyc111"}, "path": "be/src/olap/tablet_schema.h", "diffHunk": "@@ -107,22 +113,30 @@ class TabletSchema {\n     inline void set_is_in_memory (bool is_in_memory) {\n         _is_in_memory = is_in_memory;\n     }\n+\n private:\n-    KeysType _keys_type;\n+    friend bool operator==(const TabletSchema& a, const TabletSchema& b);\n+    friend bool operator!=(const TabletSchema& a, const TabletSchema& b);\n+\n+private:\n+    KeysType _keys_type = DUP_KEYS;\n     std::vector<TabletColumn> _cols;\n-    size_t _num_columns;\n-    size_t _num_key_columns;\n-    size_t _num_null_columns;\n-    size_t _num_short_key_columns;\n-    size_t _num_rows_per_row_block;\n-    CompressKind _compress_kind;\n-    size_t _next_column_unique_id;\n+    size_t _num_columns = 0;\n+    size_t _num_key_columns = 0;\n+    size_t _num_null_columns = 0;\n+    size_t _num_short_key_columns = 0;\n+    size_t _num_rows_per_row_block = 0;\n+    CompressKind _compress_kind = COMPRESS_NONE;\n+    size_t _next_column_unique_id = 0;\n \n     bool _has_bf_fpp = false;\n     double _bf_fpp = 0;\n     bool _is_in_memory = false;\n };\n \n+bool operator==(const TabletSchema& a, const TabletSchema& b);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0MDY0Nw=="}, "originalCommit": {"oid": "c35c835f795c8fe26d5d8c8179ac13a8b5eb8f76"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1436, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}