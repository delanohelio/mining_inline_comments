{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MDcwMjE3", "number": 3069, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMTo0MjoyN1rODm6ZgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMTo0NDoxOVrODm6arw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTI5MjgwOnYy", "diffSide": "RIGHT", "path": "be/src/exec/parquet_reader.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMTo0MjoyN1rOF0mn_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMTo0MjoyN1rOF0mn_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwMzEwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        timestamp = ts_array->Value(_current_line_of_batch) / 1000000000; // convert to Second\n          \n          \n            \n                        timestamp = ts_array->Value(_current_line_of_batch) / 1000000000L; // convert to Second", "url": "https://github.com/apache/incubator-doris/pull/3069#discussion_r390703103", "createdAt": "2020-03-11T01:42:27Z", "author": {"login": "imay"}, "path": "be/src/exec/parquet_reader.cpp", "diffHunk": "@@ -188,30 +189,38 @@ Status ParquetReaderWrap::read_record_batch(const std::vector<SlotDescriptor*>&\n Status ParquetReaderWrap::handle_timestamp(const std::shared_ptr<arrow::TimestampArray>& ts_array, uint8_t *buf, int32_t *wbytes) {\n     const auto type = std::dynamic_pointer_cast<arrow::TimestampType>(ts_array->type());\n     // Doris only supports seconds\n-    time_t timestamp = 0;\n+    int64_t timestamp = 0;\n     switch (type->unit()) {\n         case arrow::TimeUnit::type::NANO: {// INT96\n-            timestamp = (time_t)((int64_t)ts_array->Value(_current_line_of_batch) / 1000000000); // convert to Second\n+            timestamp = ts_array->Value(_current_line_of_batch) / 1000000000; // convert to Second", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d6f96e8a847b4b0140772578aaa398833f820ea"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTI5NTgzOnYy", "diffSide": "RIGHT", "path": "be/src/runtime/datetime_value.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMTo0NDoxOVrOF0mpwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMTo0NDoxOVrOF0mpwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwMzU1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                while(current_t > 0) {\n          \n          \n            \n                while (current_t > 0) {\n          \n      \n    \n    \n  \n\nAdd some comments about what this block is doing.", "url": "https://github.com/apache/incubator-doris/pull/3069#discussion_r390703554", "createdAt": "2020-03-11T01:44:19Z", "author": {"login": "imay"}, "path": "be/src/runtime/datetime_value.cpp", "diffHunk": "@@ -1557,13 +1557,28 @@ bool DateTimeValue::from_unixtime(int64_t timestamp, const std::string& timezone\n     if (timestamp < 0 || timestamp > 253402271999L) {\n         return false;\n     }\n+\n     boost::local_time::time_zone_ptr local_time_zone = TimezoneDatabase::find_timezone(timezone);\n     if (local_time_zone == nullptr) {\n         return false;                            \n     }\n-    boost::local_time::local_date_time lt(boost::posix_time::from_time_t(timestamp), local_time_zone);\n+\n+    int64_t current_t = timestamp;\n+    boost::posix_time::ptime time = boost::posix_time::ptime(boost::gregorian::date(1970,1,1));\n+\n+    while(current_t > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d6f96e8a847b4b0140772578aaa398833f820ea"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2094, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}