{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NjI0MjEz", "number": 3264, "title": "[config] Support to modify configs when BE is running without restarting", "bodyText": "Ref #3268\nIn the past, when we want to modify some BE configs, we have to modify be.conf and then restart BE.\nThis patch provides a way to modify configs in the type of 'threshold', 'interval', 'enable flag'\nwhen BE is running without restarting it.\nYou can update a single config once by BE's http API: be_host:be_http_port/api/update_config?config_name=new_value", "createdAt": "2020-04-04T15:39:17Z", "url": "https://github.com/apache/incubator-doris/pull/3264", "merged": true, "mergeCommit": {"oid": "8fc284d5931d82558b03f90656b61c5b75bffa52"}, "closed": true, "closedAt": "2020-04-08T03:17:48Z", "author": {"login": "acelyc111"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUXdZzAH2gAyMzk4NjI0MjEzOjViYjdiOTJhNTRiYjRkODAxOTM0ODlhMDQzZDUzZmMzMGEwNzhjZjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVd6NRgFqTM4OTYwMTc5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5bb7b92a54bb4d80193489a043d53fc30a078cf6", "author": {"user": {"login": "acelyc111", "name": "Yingchun Lai"}}, "url": "https://github.com/apache/incubator-doris/commit/5bb7b92a54bb4d80193489a043d53fc30a078cf6", "committedDate": "2020-04-04T15:44:30Z", "message": "[config] Support to modify configs when BE is running without restarting it\n\nIn the past, when we want to modify some BE configs, we have to modify be.conf and then restart BE.\nThis patch provides a way to modify configs in the type of 'threshold', 'interval', 'enable flag'\nwhen BE is running without restarting it.\nYou can update a single config once by BE's http API: `be_host:be_http_port/api/update_config?config_name=new_value`"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79dfd532f45518a346e11d28dcf06d488b80b574", "author": {"user": {"login": "acelyc111", "name": "Yingchun Lai"}}, "url": "https://github.com/apache/incubator-doris/commit/79dfd532f45518a346e11d28dcf06d488b80b574", "committedDate": "2020-04-04T15:35:27Z", "message": "[config] Support to modify configs when BE is running without restarting it\n\nIn the past, when we want to modify some BE configs, we have to modify be.conf and then restart BE.\nThis patch provides a way to modify configs in the type of 'threshold', 'interval', 'enable flag'\nwhen BE is running without restarting it.\nYou can update a single config once by BE's http API: `be_host:be_http_port/api/update_config?config_name=new_value`"}, "afterCommit": {"oid": "5bb7b92a54bb4d80193489a043d53fc30a078cf6", "author": {"user": {"login": "acelyc111", "name": "Yingchun Lai"}}, "url": "https://github.com/apache/incubator-doris/commit/5bb7b92a54bb4d80193489a043d53fc30a078cf6", "committedDate": "2020-04-04T15:44:30Z", "message": "[config] Support to modify configs when BE is running without restarting it\n\nIn the past, when we want to modify some BE configs, we have to modify be.conf and then restart BE.\nThis patch provides a way to modify configs in the type of 'threshold', 'interval', 'enable flag'\nwhen BE is running without restarting it.\nYou can update a single config once by BE's http API: `be_host:be_http_port/api/update_config?config_name=new_value`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "175eb7894abab92a04f33f36497fec7b15db233c", "author": {"user": {"login": "acelyc111", "name": "Yingchun Lai"}}, "url": "https://github.com/apache/incubator-doris/commit/175eb7894abab92a04f33f36497fec7b15db233c", "committedDate": "2020-04-05T02:36:02Z", "message": "revert tablet_sink_test.cpp"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4Mjc3ODQ2", "url": "https://github.com/apache/incubator-doris/pull/3264#pullrequestreview-388277846", "createdAt": "2020-04-06T14:00:07Z", "commit": {"oid": "175eb7894abab92a04f33f36497fec7b15db233c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDowMDowN1rOGBZH_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDoxMTo0OFrOGBZqIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDExMzQwNQ==", "bodyText": "If number of params is 1, using the for statement can be misleading.", "url": "https://github.com/apache/incubator-doris/pull/3264#discussion_r404113405", "createdAt": "2020-04-06T14:00:07Z", "author": {"login": "imay"}, "path": "be/src/http/action/update_config_action.cpp", "diffHunk": "@@ -0,0 +1,76 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"http/action/update_config_action.h\"\n+\n+#include <rapidjson/document.h>\n+#include <rapidjson/prettywriter.h>\n+#include <rapidjson/rapidjson.h>\n+#include <rapidjson/stringbuffer.h>\n+\n+#include <string>\n+\n+#include \"common/configbase.h\"\n+#include \"common/logging.h\"\n+#include \"common/status.h\"\n+#include \"gutil/strings/substitute.h\"\n+#include \"http/http_channel.h\"\n+#include \"http/http_headers.h\"\n+#include \"http/http_request.h\"\n+#include \"http/http_response.h\"\n+#include \"http/http_status.h\"\n+\n+namespace doris {\n+\n+const static std::string HEADER_JSON = \"application/json\";\n+\n+void UpdateConfigAction::handle(HttpRequest* req) {\n+    LOG(INFO) << req->debug_string();\n+\n+    bool success = true;\n+    std::string msg;\n+    if (req->params()->size() != 1) {\n+        success = false;\n+        msg = \"Now only support to set a single config once, via 'config_name=new_value'.\";\n+    } else {\n+        DCHECK(req->params()->size() == 1);\n+        for (const auto& it : *req->params()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175eb7894abab92a04f33f36497fec7b15db233c"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDExNDE1NQ==", "bodyText": "when s.ok() is true, print INFO log; when s.ok() is false, print waring log", "url": "https://github.com/apache/incubator-doris/pull/3264#discussion_r404114155", "createdAt": "2020-04-06T14:01:05Z", "author": {"login": "imay"}, "path": "be/src/http/action/update_config_action.cpp", "diffHunk": "@@ -0,0 +1,76 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"http/action/update_config_action.h\"\n+\n+#include <rapidjson/document.h>\n+#include <rapidjson/prettywriter.h>\n+#include <rapidjson/rapidjson.h>\n+#include <rapidjson/stringbuffer.h>\n+\n+#include <string>\n+\n+#include \"common/configbase.h\"\n+#include \"common/logging.h\"\n+#include \"common/status.h\"\n+#include \"gutil/strings/substitute.h\"\n+#include \"http/http_channel.h\"\n+#include \"http/http_headers.h\"\n+#include \"http/http_request.h\"\n+#include \"http/http_response.h\"\n+#include \"http/http_status.h\"\n+\n+namespace doris {\n+\n+const static std::string HEADER_JSON = \"application/json\";\n+\n+void UpdateConfigAction::handle(HttpRequest* req) {\n+    LOG(INFO) << req->debug_string();\n+\n+    bool success = true;\n+    std::string msg;\n+    if (req->params()->size() != 1) {\n+        success = false;\n+        msg = \"Now only support to set a single config once, via 'config_name=new_value'.\";\n+    } else {\n+        DCHECK(req->params()->size() == 1);\n+        for (const auto& it : *req->params()) {\n+            Status s = config::set_config(it.first, it.second);\n+            success = s.ok();\n+            LOG(WARNING) << \"set_config \" << it.first << \"=\" << it.second", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175eb7894abab92a04f33f36497fec7b15db233c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEyMjE0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            std::map<std::string, Register::Field>* Register::_s_fieldlist = nullptr;\n          \n          \n            \n            std::map<std::string, Register::Field>* Register::_s_field_map = nullptr;", "url": "https://github.com/apache/incubator-doris/pull/3264#discussion_r404122147", "createdAt": "2020-04-06T14:11:48Z", "author": {"login": "imay"}, "path": "be/src/common/configbase.cpp", "diffHunk": "@@ -28,91 +28,19 @@\n #include \"common/config.h\"\n #undef __IN_CONFIGBASE_CPP__\n \n+#include \"common/status.h\"\n+#include \"gutil/strings/substitute.h\"\n+\n namespace doris {\n namespace config {\n \n-std::list<Register::Field>* Register::_s_fieldlist = nullptr;\n-std::map<std::string, std::string>* confmap = nullptr;\n+std::map<std::string, Register::Field>* Register::_s_fieldlist = nullptr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175eb7894abab92a04f33f36497fec7b15db233c"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d602d0a273339fcb34c5b4345cb575d3b455e954", "author": {"user": {"login": "acelyc111", "name": "Yingchun Lai"}}, "url": "https://github.com/apache/incubator-doris/commit/d602d0a273339fcb34c5b4345cb575d3b455e954", "committedDate": "2020-04-07T03:33:51Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f04f279649f2eb06ac4e2bbdad13fc27cba787d1", "author": {"user": {"login": "acelyc111", "name": "Yingchun Lai"}}, "url": "https://github.com/apache/incubator-doris/commit/f04f279649f2eb06ac4e2bbdad13fc27cba787d1", "committedDate": "2020-04-07T03:35:42Z", "message": "rename _s_field_map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a9b75396c7ec9b3ed45e475da3c18ef28462aa6", "author": {"user": {"login": "acelyc111", "name": "Yingchun Lai"}}, "url": "https://github.com/apache/incubator-doris/commit/1a9b75396c7ec9b3ed45e475da3c18ef28462aa6", "committedDate": "2020-04-07T03:48:39Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NjAxNzk2", "url": "https://github.com/apache/incubator-doris/pull/3264#pullrequestreview-389601796", "createdAt": "2020-04-08T01:49:19Z", "commit": {"oid": "1a9b75396c7ec9b3ed45e475da3c18ef28462aa6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3166, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}