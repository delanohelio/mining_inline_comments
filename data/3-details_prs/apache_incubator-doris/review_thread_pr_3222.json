{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTAyODg1", "number": 3222, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo1NDoyN1rODtHtUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxMToxMVrODtIMTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjM4ODAwOnYy", "diffSide": "RIGHT", "path": "be/src/olap/txn_manager.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo1NDoyN1rOF-W9TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo1NjozNFrOF-XETg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzMjE3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                std::map<TxnKey, std::map<TabletInfo, TabletTxnInfo>> *_txn_tablet_maps;\n          \n          \n            \n                txn_tablet_map_t *_txn_tablet_maps;", "url": "https://github.com/apache/incubator-doris/pull/3222#discussion_r400932172", "createdAt": "2020-03-31T13:54:27Z", "author": {"login": "morningman"}, "path": "be/src/olap/txn_manager.h", "diffHunk": "@@ -140,30 +141,48 @@ class TxnManager {\n     void get_partition_ids(const TTransactionId transaction_id, std::vector<TPartitionId>* partition_ids);\n     \n private:\n-    RWMutex* _get_txn_lock(TTransactionId txn_id) {\n-        return _txn_locks[txn_id % _txn_lock_num].get();\n-    }\n+\n+    using TxnKey = std::pair<int64_t, int64_t>; // partition_id, transaction_id;\n+\n+    typedef std::map<TxnKey, std::map<TabletInfo, TabletTxnInfo>> txn_tablet_map_t;\n+    typedef std::unordered_map<int64_t, std::unordered_set<int64_t>> txn_partition_map_t;\n+\n+    inline RWMutex& _get_txn_map_lock(TTransactionId transactionId);\n+\n+    inline txn_tablet_map_t& _get_txn_tablet_map(TTransactionId transactionId);\n+\n+    inline txn_partition_map_t& _get_txn_partition_map(TTransactionId transactionId);\n \n     // insert or remove (transaction_id, partition_id) from _txn_partition_map\n     // get _txn_map_lock before calling\n     void _insert_txn_partition_map_unlocked(int64_t transaction_id, int64_t partition_id);\n     void _clear_txn_partition_map_unlocked(int64_t transaction_id, int64_t partition_id);\n \n private:\n-    RWMutex _txn_map_lock;\n-    using TxnKey = std::pair<int64_t, int64_t>; // partition_id, transaction_id;\n-    std::map<TxnKey, std::map<TabletInfo, TabletTxnInfo>> _txn_tablet_map;\n+    const int32_t _txn_map_shard_size;\n+\n+    // _txn_map_locks[i] protect _txn_tablet_maps[i], i=0,1,2...,and i < _txn_map_shard_size\n+    std::map<TxnKey, std::map<TabletInfo, TabletTxnInfo>> *_txn_tablet_maps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d73401fb80302ac8d4a8211b2ad7136fa47ea426"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzMzk2Ng==", "bodyText": "And using std::unordered_map is better", "url": "https://github.com/apache/incubator-doris/pull/3222#discussion_r400933966", "createdAt": "2020-03-31T13:56:34Z", "author": {"login": "morningman"}, "path": "be/src/olap/txn_manager.h", "diffHunk": "@@ -140,30 +141,48 @@ class TxnManager {\n     void get_partition_ids(const TTransactionId transaction_id, std::vector<TPartitionId>* partition_ids);\n     \n private:\n-    RWMutex* _get_txn_lock(TTransactionId txn_id) {\n-        return _txn_locks[txn_id % _txn_lock_num].get();\n-    }\n+\n+    using TxnKey = std::pair<int64_t, int64_t>; // partition_id, transaction_id;\n+\n+    typedef std::map<TxnKey, std::map<TabletInfo, TabletTxnInfo>> txn_tablet_map_t;\n+    typedef std::unordered_map<int64_t, std::unordered_set<int64_t>> txn_partition_map_t;\n+\n+    inline RWMutex& _get_txn_map_lock(TTransactionId transactionId);\n+\n+    inline txn_tablet_map_t& _get_txn_tablet_map(TTransactionId transactionId);\n+\n+    inline txn_partition_map_t& _get_txn_partition_map(TTransactionId transactionId);\n \n     // insert or remove (transaction_id, partition_id) from _txn_partition_map\n     // get _txn_map_lock before calling\n     void _insert_txn_partition_map_unlocked(int64_t transaction_id, int64_t partition_id);\n     void _clear_txn_partition_map_unlocked(int64_t transaction_id, int64_t partition_id);\n \n private:\n-    RWMutex _txn_map_lock;\n-    using TxnKey = std::pair<int64_t, int64_t>; // partition_id, transaction_id;\n-    std::map<TxnKey, std::map<TabletInfo, TabletTxnInfo>> _txn_tablet_map;\n+    const int32_t _txn_map_shard_size;\n+\n+    // _txn_map_locks[i] protect _txn_tablet_maps[i], i=0,1,2...,and i < _txn_map_shard_size\n+    std::map<TxnKey, std::map<TabletInfo, TabletTxnInfo>> *_txn_tablet_maps;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzMjE3Mg=="}, "originalCommit": {"oid": "d73401fb80302ac8d4a8211b2ad7136fa47ea426"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjQwNjk4OnYy", "diffSide": "RIGHT", "path": "be/src/olap/txn_manager.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo1ODoxMVrOF-XJTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo1ODoxMVrOF-XJTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNTI0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                _txn_tablet_maps = new std::map<TxnKey, std::map<TabletInfo, TabletTxnInfo>>[_txn_map_shard_size];\n          \n          \n            \n                _txn_tablet_maps = new txn_tablet_map_t[_txn_map_shard_size];", "url": "https://github.com/apache/incubator-doris/pull/3222#discussion_r400935246", "createdAt": "2020-03-31T13:58:11Z", "author": {"login": "morningman"}, "path": "be/src/olap/txn_manager.cpp", "diffHunk": "@@ -70,10 +71,13 @@ using std::vector;\n \n namespace doris {\n \n-TxnManager::TxnManager() {\n-    for (int i = 0; i < _txn_lock_num; ++i) {\n-        _txn_locks[i] = std::make_shared<RWMutex>();\n-    }\n+TxnManager::TxnManager(int32_t txn_map_shard_size)\n+        : _txn_map_shard_size(txn_map_shard_size) {\n+    DCHECK_GT(_txn_map_shard_size, 0);\n+    DCHECK_EQ(_txn_map_shard_size & (_txn_map_shard_size - 1), 0);\n+    _txn_map_locks = new RWMutex[_txn_map_shard_size];\n+    _txn_tablet_maps = new std::map<TxnKey, std::map<TabletInfo, TabletTxnInfo>>[_txn_map_shard_size];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d73401fb80302ac8d4a8211b2ad7136fa47ea426"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjQ2NzMzOnYy", "diffSide": "LEFT", "path": "be/src/olap/txn_manager.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxMToxMVrOF-Xvuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxMToxMVrOF-Xvuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk0NTA4Mw==", "bodyText": "I think you may not be able to remove this lock.\nWriteLock wrlock(_get_txn_lock(transaction_id));\nThe meaning of this lock is different from that of the _txn_map_lock. This lock prevents a single transaction from being modified at the same time. The _txn_map_lock prevents the map structure from being modified at the same time.\nIf this lock is removed here. Then there may be two threads publishing the txn at the same time, which will modify their contents(such as rowset meta) at the same time.", "url": "https://github.com/apache/incubator-doris/pull/3222#discussion_r400945083", "createdAt": "2020-03-31T14:11:11Z", "author": {"login": "morningman"}, "path": "be/src/olap/txn_manager.cpp", "diffHunk": "@@ -253,11 +260,11 @@ OLAPStatus TxnManager::publish_txn(OlapMeta* meta, TPartitionId partition_id, TT\n     pair<int64_t, int64_t> key(partition_id, transaction_id);\n     TabletInfo tablet_info(tablet_id, schema_hash, tablet_uid);\n     RowsetSharedPtr rowset_ptr = nullptr;\n-    WriteLock wrlock(_get_txn_lock(transaction_id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d73401fb80302ac8d4a8211b2ad7136fa47ea426"}, "originalPosition": 106}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1839, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}