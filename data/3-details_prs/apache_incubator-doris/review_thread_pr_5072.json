{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3MjA1ODM0", "number": 5072, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0OTo1OVrOFE3j6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0OTo1OVrOFE3j6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjQ4OTM5OnYy", "diffSide": "RIGHT", "path": "be/src/exec/olap_common.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0OTo1OVrOIFFwZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0OTo1OVrOIFFwZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwODEwMg==", "bodyText": "calculate is_fixed_value_range and range.is_fixed_value_range once.", "url": "https://github.com/apache/incubator-doris/pull/5072#discussion_r542208102", "createdAt": "2020-12-14T08:49:59Z", "author": {"login": "morningman"}, "path": "be/src/exec/olap_common.h", "diffHunk": "@@ -495,6 +517,55 @@ bool ColumnValueRange<T>::is_in_range(const T& value) {\n     return false;\n }\n \n+template <class T>\n+void ColumnValueRange<T>::intersection(ColumnValueRange<T>& range) {\n+    // 1. clear if column type not match\n+    if (_column_type != range._column_type) {\n+        set_empty_value_range();\n+    }\n+\n+    // 2. clear if any range is empty\n+    if (is_empty_value_range() || range.is_empty_value_range()) {\n+        set_empty_value_range();\n+    }\n+\n+    std::set<T> result_values;\n+    // 3. fixed_value intersection\n+    if (is_fixed_value_range() || range.is_fixed_value_range()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe04f339ed5ceafbae730007bfc1f5ca322d42f0"}, "originalPosition": 203}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 802, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}