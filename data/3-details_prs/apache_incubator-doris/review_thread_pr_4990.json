{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5OTcyNDY5", "number": 4990, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNDo1Nzo0NlrOE-82rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODozMDo1OFrOE_AFvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDQ0MjA2OnYy", "diffSide": "RIGHT", "path": "be/src/exec/es/es_query_builder.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNDo1Nzo0NlrOH8YN-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNDo1Nzo0NlrOH8YN-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA3MzQwMg==", "bodyText": "_match_none Is preferred.\n_match_none is not initialized before use.", "url": "https://github.com/apache/incubator-doris/pull/4990#discussion_r533073402", "createdAt": "2020-12-01T04:57:46Z", "author": {"login": "imay"}, "path": "be/src/exec/es/es_query_builder.h", "diffHunk": "@@ -53,6 +53,7 @@ class TermQueryBuilder : public QueryBuilder {\n private:\n     std::string _field;\n     std::string _term;\n+    bool _match_none_;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081b5c3a408d278c820fbdb1ade8af561c1e1a1a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDQ0MzQyOnYy", "diffSide": "RIGHT", "path": "be/src/exec/es/es_query_builder.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNDo1ODozNlrOH8YOwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNDo1ODozNlrOH8YOwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA3MzYwMA==", "bodyText": "std::move is useless", "url": "https://github.com/apache/incubator-doris/pull/4990#discussion_r533073600", "createdAt": "2020-12-01T04:58:36Z", "author": {"login": "imay"}, "path": "be/src/exec/es/es_query_builder.cpp", "diffHunk": "@@ -53,16 +53,37 @@ TermQueryBuilder::TermQueryBuilder(const std::string& field, const std::string&\n         : _field(field), _term(term) {}\n \n TermQueryBuilder::TermQueryBuilder(const ExtBinaryPredicate& binary_predicate)\n-        : _field(binary_predicate.col.name), _term(binary_predicate.value.to_string()) {}\n+        : _field(binary_predicate.col.name) {\n+        _match_none_ = false;\n+        if (binary_predicate.col.type.type == PrimitiveType::TYPE_BOOLEAN) {\n+            int val = atoi(binary_predicate.value.to_string().c_str());\n+            if (val == 1) {\n+                _term = std::string(\"true\");\n+            } else if (val == 0){\n+                _term = std::string(\"false\");\n+            } else {\n+                // keep semantic consistent with mysql\n+                _match_none_ = true;\n+            }\n+        } else {\n+            _term = std::move(binary_predicate.value.to_string());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081b5c3a408d278c820fbdb1ade8af561c1e1a1a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDk3MjEyOnYy", "diffSide": "RIGHT", "path": "be/src/exec/es/es_query_builder.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODozMDo1OFrOH8dF7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDo0NTo1MFrOH8mz8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE1MzI2Mg==", "bodyText": "use StringParse::string_to_int instead", "url": "https://github.com/apache/incubator-doris/pull/4990#discussion_r533153262", "createdAt": "2020-12-01T08:30:58Z", "author": {"login": "chaoyli"}, "path": "be/src/exec/es/es_query_builder.cpp", "diffHunk": "@@ -50,19 +50,39 @@ void ESQueryBuilder::to_json(rapidjson::Document* document, rapidjson::Value* qu\n }\n \n TermQueryBuilder::TermQueryBuilder(const std::string& field, const std::string& term)\n-        : _field(field), _term(term) {}\n+        : _field(field), _term(term), _match_none(false) {}\n \n TermQueryBuilder::TermQueryBuilder(const ExtBinaryPredicate& binary_predicate)\n-        : _field(binary_predicate.col.name), _term(binary_predicate.value.to_string()) {}\n+        : _field(binary_predicate.col.name), _match_none(false) {\n+        if (binary_predicate.col.type.type == PrimitiveType::TYPE_BOOLEAN) {\n+            int val = atoi(binary_predicate.value.to_string().c_str());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fc0a1441193ee450e55f28b6ec0595311453f8f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxMjQ5Nw==", "bodyText": "I think this is ok", "url": "https://github.com/apache/incubator-doris/pull/4990#discussion_r533312497", "createdAt": "2020-12-01T10:45:50Z", "author": {"login": "wuyunfeng"}, "path": "be/src/exec/es/es_query_builder.cpp", "diffHunk": "@@ -50,19 +50,39 @@ void ESQueryBuilder::to_json(rapidjson::Document* document, rapidjson::Value* qu\n }\n \n TermQueryBuilder::TermQueryBuilder(const std::string& field, const std::string& term)\n-        : _field(field), _term(term) {}\n+        : _field(field), _term(term), _match_none(false) {}\n \n TermQueryBuilder::TermQueryBuilder(const ExtBinaryPredicate& binary_predicate)\n-        : _field(binary_predicate.col.name), _term(binary_predicate.value.to_string()) {}\n+        : _field(binary_predicate.col.name), _match_none(false) {\n+        if (binary_predicate.col.type.type == PrimitiveType::TYPE_BOOLEAN) {\n+            int val = atoi(binary_predicate.value.to_string().c_str());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE1MzI2Mg=="}, "originalCommit": {"oid": "1fc0a1441193ee450e55f28b6ec0595311453f8f"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 916, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}