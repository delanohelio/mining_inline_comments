{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3Njc0NjY5", "number": 2957, "title": "implement the planner for set operation", "bodyText": "#2844\nimplemnet intersect and except planner,\nexamples:\nmysql> explain select k1,k2 from t where k1='a' intersect select k1,k2 from t where k1='b' except select k1,k2 from t where k1='c' union all select k1,k2 from t where k1='d';\n+----------------------------------------------------+\n| Explain String                                     |\n+----------------------------------------------------+\n| PLAN FRAGMENT 0                                    |\n|  OUTPUT EXPRS:<slot 8> | <slot 9>                  |\n|   PARTITION: UNPARTITIONED                         |\n|                                                    |\n|   RESULT SINK                                      |\n|                                                    |\n|   19:EXCHANGE                                      |\n|      tuple ids: 4                                  |\n|                                                    |\n| PLAN FRAGMENT 1                                    |\n|  OUTPUT EXPRS:                                     |\n|   PARTITION: RANDOM                                |\n|                                                    |\n|   STREAM DATA SINK                                 |\n|     EXCHANGE ID: 19                                |\n|     UNPARTITIONED                                  |\n|                                                    |\n|   7:UNION                                          |\n|   |  07:UNION                                      |\n|   |  pass-through-operands: all                    |\n|   |  tuple ids: 4                                  |\n|   |                                                |\n|   |----18:EXCHANGE                                 |\n|   |       tuple ids: 3                             |\n|   |                                                |\n|   17:EXCHANGE                                      |\n|      tuple ids: 4                                  |\n|                                                    |\n| PLAN FRAGMENT 2                                    |\n|  OUTPUT EXPRS:                                     |\n|   PARTITION: RANDOM                                |\n|                                                    |\n|   STREAM DATA SINK                                 |\n|     EXCHANGE ID: 18                                |\n|     RANDOM                                         |\n|                                                    |\n|   8:OlapScanNode                                   |\n|      TABLE: t                                      |\n|      PREAGGREGATION: OFF. Reason: No AggregateInfo |\n|      PREDICATES: `k1` = 'd'                        |\n|      partitions=1/1                                |\n|      rollup: t                                     |\n|      tabletRatio=1/10                              |\n|      tabletList=10019                              |\n|      cardinality=-1                                |\n|      avgRowSize=0.0                                |\n|      numNodes=0                                    |\n|      tuple ids: 3                                  |\n|                                                    |\n| PLAN FRAGMENT 3                                    |\n|  OUTPUT EXPRS:                                     |\n|   PARTITION: HASH_PARTITIONED: <slot 8>, <slot 9>  |\n|                                                    |\n|   STREAM DATA SINK                                 |\n|     EXCHANGE ID: 17                                |\n|     RANDOM                                         |\n|                                                    |\n|   16:AGGREGATE (merge finalize)                    |\n|   |  group by: <slot 8>, <slot 9>                  |\n|   |  tuple ids: 4                                  |\n|   |                                                |\n|   15:EXCHANGE                                      |\n|      tuple ids: 4                                  |\n|                                                    |\n| PLAN FRAGMENT 4                                    |\n|  OUTPUT EXPRS:                                     |\n|   PARTITION: RANDOM                                |\n|                                                    |\n|   STREAM DATA SINK                                 |\n|     EXCHANGE ID: 15                                |\n|     HASH_PARTITIONED: <slot 8>, <slot 9>           |\n|                                                    |\n|   6:AGGREGATE (update serialize)                   |\n|   |  STREAMING                                     |\n|   |  group by: <slot 8>, <slot 9>                  |\n|   |  tuple ids: 4                                  |\n|   |                                                |\n|   4:EXCEPT                                         |\n|   |  04:EXCEPT                                     |\n|   |  pass-through-operands: all                    |\n|   |  tuple ids: 4                                  |\n|   |                                                |\n|   |----14:EXCHANGE                                 |\n|   |       tuple ids: 2                             |\n|   |                                                |\n|   13:EXCHANGE                                      |\n|      tuple ids: 4                                  |\n|                                                    |\n| PLAN FRAGMENT 5                                    |\n|  OUTPUT EXPRS:                                     |\n|   PARTITION: RANDOM                                |\n|                                                    |\n|   STREAM DATA SINK                                 |\n|     EXCHANGE ID: 14                                |\n|     RANDOM                                         |\n|                                                    |\n|   5:OlapScanNode                                   |\n|      TABLE: t                                      |\n|      PREAGGREGATION: OFF. Reason: No AggregateInfo |\n|      PREDICATES: `k1` = 'c'                        |\n|      partitions=1/1                                |\n|      rollup: t                                     |\n|      tabletRatio=1/10                              |\n|      tabletList=10017                              |\n|      cardinality=-1                                |\n|      avgRowSize=0.0                                |\n|      numNodes=0                                    |\n|      tuple ids: 2                                  |\n|                                                    |\n| PLAN FRAGMENT 6                                    |\n|  OUTPUT EXPRS:                                     |\n|   PARTITION: HASH_PARTITIONED: <slot 8>, <slot 9>  |\n|                                                    |\n|   STREAM DATA SINK                                 |\n|     EXCHANGE ID: 13                                |\n|     RANDOM                                         |\n|                                                    |\n|   12:AGGREGATE (merge finalize)                    |\n|   |  group by: <slot 8>, <slot 9>                  |\n|   |  tuple ids: 4                                  |\n|   |                                                |\n|   11:EXCHANGE                                      |\n|      tuple ids: 4                                  |\n|                                                    |\n| PLAN FRAGMENT 7                                    |\n|  OUTPUT EXPRS:                                     |\n|   PARTITION: RANDOM                                |\n|                                                    |\n|   STREAM DATA SINK                                 |\n|     EXCHANGE ID: 11                                |\n|     HASH_PARTITIONED: <slot 8>, <slot 9>           |\n|                                                    |\n|   3:AGGREGATE (update serialize)                   |\n|   |  STREAMING                                     |\n|   |  group by: <slot 8>, <slot 9>                  |\n|   |  tuple ids: 4                                  |\n|   |                                                |\n|   0:INTERSECT                                      |\n|   |  00:INTERSECT                                  |\n|   |  pass-through-operands: all                    |\n|   |  tuple ids: 4                                  |\n|   |                                                |\n|   |----10:EXCHANGE                                 |\n|   |       tuple ids: 1                             |\n|   |                                                |\n|   9:EXCHANGE                                       |\n|      tuple ids: 0                                  |\n|                                                    |\n| PLAN FRAGMENT 8                                    |\n|  OUTPUT EXPRS:                                     |\n|   PARTITION: RANDOM                                |\n|                                                    |\n|   STREAM DATA SINK                                 |\n|     EXCHANGE ID: 10                                |\n|     RANDOM                                         |\n|                                                    |\n|   2:OlapScanNode                                   |\n|      TABLE: t                                      |\n|      PREAGGREGATION: OFF. Reason: No AggregateInfo |\n|      PREDICATES: `k1` = 'b'                        |\n|      partitions=1/1                                |\n|      rollup: t                                     |\n|      tabletRatio=1/10                              |\n|      tabletList=10009                              |\n|      cardinality=-1                                |\n|      avgRowSize=0.0                                |\n|      numNodes=0                                    |\n|      tuple ids: 1                                  |\n|                                                    |\n| PLAN FRAGMENT 9                                    |\n|  OUTPUT EXPRS:                                     |\n|   PARTITION: RANDOM                                |\n|                                                    |\n|   STREAM DATA SINK                                 |\n|     EXCHANGE ID: 09                                |\n|     RANDOM                                         |\n|                                                    |\n|   1:OlapScanNode                                   |\n|      TABLE: t                                      |\n|      PREAGGREGATION: OFF. Reason: No AggregateInfo |\n|      PREDICATES: `k1` = 'a'                        |\n|      partitions=1/1                                |\n|      rollup: t                                     |\n|      tabletRatio=1/10                              |\n|      tabletList=10021                              |\n|      cardinality=-1                                |\n|      avgRowSize=0.0                                |\n|      numNodes=0                                    |\n|      tuple ids: 0                                  |\n+----------------------------------------------------+\n189 rows in set (0.04 sec)", "createdAt": "2020-02-20T10:31:50Z", "url": "https://github.com/apache/incubator-doris/pull/2957", "merged": true, "mergeCommit": {"oid": "3b5a0b60604ac0948889d063887e5c7a9b255f86"}, "closed": true, "closedAt": "2020-02-27T08:03:32Z", "author": {"login": "yangzhg"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGWTFVgBqjMwNTkwMzYzNTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIVn3zAFqTM2NTQxMDc5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b319fabbf91089c519d1415b85ce2f81ff13e5a", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/9b319fabbf91089c519d1415b85ce2f81ff13e5a", "committedDate": "2020-02-20T08:34:08Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "6c9ffeff3a06c69ac5aa4fcb768176c62e295884", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/6c9ffeff3a06c69ac5aa4fcb768176c62e295884", "committedDate": "2020-02-21T02:27:46Z", "message": "implement the planner for set operation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDEzOTQ3", "url": "https://github.com/apache/incubator-doris/pull/2957#pullrequestreview-363013947", "createdAt": "2020-02-22T06:40:39Z", "commit": {"oid": "6c9ffeff3a06c69ac5aa4fcb768176c62e295884"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNjo1Mjo1NlrOFtJ4sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNzoxNToxNVrOFtJ8zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5MjIxMA==", "bodyText": "Looks like these 3 containsXXXNode does not use?", "url": "https://github.com/apache/incubator-doris/pull/2957#discussion_r382892210", "createdAt": "2020-02-22T06:52:56Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/Coordinator.java", "diffHunk": "@@ -809,6 +812,63 @@ private boolean containsUnionNode(PlanNode node) {\n         return false;\n     }\n \n+    // estimate if this fragment contains IntersectNode\n+    private boolean containsIntersectNode(PlanNode node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c9ffeff3a06c69ac5aa4fcb768176c62e295884"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5MzA5NQ==", "bodyText": "Add comments for this method.", "url": "https://github.com/apache/incubator-doris/pull/2957#discussion_r382893095", "createdAt": "2020-02-22T07:12:06Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/planner/SingleNodePlanner.java", "diffHunk": "@@ -1609,6 +1668,40 @@ private PlanNode createSetOperationPlan(SetOperationStmt setOperationStmt, Analy\n         return result;\n     }\n \n+    private PlanNode createPartialSetOperationPlan(Analyzer analyzer, SetOperationStmt setOperationStmt,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c9ffeff3a06c69ac5aa4fcb768176c62e295884"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5MzE5OQ==", "bodyText": "Could you add more comment to explain the logic here?\nAnd better to add Unit test to test it. You can reference to bitmap function test.", "url": "https://github.com/apache/incubator-doris/pull/2957#discussion_r382893199", "createdAt": "2020-02-22T07:13:55Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/planner/SingleNodePlanner.java", "diffHunk": "@@ -1590,16 +1619,46 @@ private PlanNode createSetOperationPlan(SetOperationStmt setOperationStmt, Analy\n         setOperationStmt.materializeRequiredSlots(analyzer);\n \n         PlanNode result = null;\n-        // create DISTINCT tree\n-        if (setOperationStmt.hasDistinctOps()) {\n-            result = createUnionPlan(\n-                    analyzer, setOperationStmt, setOperationStmt.getDistinctOperands(), null, defaultOrderByLimit);\n-            result = new AggregationNode(ctx_.getNextNodeId(), result, setOperationStmt.getDistinctAggInfo());\n-            result.init(analyzer);\n+        SetOperationStmt.Operation operation = null;\n+        SetOperationStmt.Qualifier exceptQualifier = null;\n+        List<SetOperationStmt.SetOperand> partialOperands = new ArrayList<>();\n+        // create plan for a union b intersect c except b to three fragments\n+        // 3:[2:[1:[a union b] intersect c] except c]\n+        // EXCEPT operator is NOT commutative, it IS important which query is first,\n+        // which second using EXCEPT operator, so EXCEPT operator cannot merge all distinct op to one node all all\n+        // op to another node", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c9ffeff3a06c69ac5aa4fcb768176c62e295884"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5MzI2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Node that alulate the interscet results of its children by either materializing their\n          \n          \n            \n            // Node that calculate the intersect results of its children by either materializing their", "url": "https://github.com/apache/incubator-doris/pull/2957#discussion_r382893263", "createdAt": "2020-02-22T07:15:15Z", "author": {"login": "morningman"}, "path": "be/src/exec/intersect_node.h", "diffHunk": "@@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+\n+#ifndef  DORIS_BE_SRC_QUERY_EXEC_INTERSECT_NODE_H\n+#define  DORIS_BE_SRC_QUERY_EXEC_INTERSECT_NODE_H\n+\n+#include \"exec/exec_node.h\"\n+#include \"runtime/row_batch.h\"\n+#include \"runtime/runtime_state.h\"\n+\n+namespace doris {\n+\n+// Node that alulate the interscet results of its children by either materializing their", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c9ffeff3a06c69ac5aa4fcb768176c62e295884"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c9ffeff3a06c69ac5aa4fcb768176c62e295884", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/6c9ffeff3a06c69ac5aa4fcb768176c62e295884", "committedDate": "2020-02-21T02:27:46Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "26f9ec8d2f858718e7a6f6a37bbc6eda5eb21d5b", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/26f9ec8d2f858718e7a6f6a37bbc6eda5eb21d5b", "committedDate": "2020-02-24T02:43:26Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26f9ec8d2f858718e7a6f6a37bbc6eda5eb21d5b", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/26f9ec8d2f858718e7a6f6a37bbc6eda5eb21d5b", "committedDate": "2020-02-24T02:43:26Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "062e85e358a66bbc33c7930ca670d41fe5652c94", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/062e85e358a66bbc33c7930ca670d41fe5652c94", "committedDate": "2020-02-24T09:31:10Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "062e85e358a66bbc33c7930ca670d41fe5652c94", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/062e85e358a66bbc33c7930ca670d41fe5652c94", "committedDate": "2020-02-24T09:31:10Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "cb60bc0eb9a6deefd2975b27552d6c2a3d839353", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/cb60bc0eb9a6deefd2975b27552d6c2a3d839353", "committedDate": "2020-02-24T10:43:54Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb60bc0eb9a6deefd2975b27552d6c2a3d839353", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/cb60bc0eb9a6deefd2975b27552d6c2a3d839353", "committedDate": "2020-02-24T10:43:54Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "b2d4b81bae76b1c1318ae0ddb40c10133528bf4a", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/b2d4b81bae76b1c1318ae0ddb40c10133528bf4a", "committedDate": "2020-02-24T10:47:21Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2d4b81bae76b1c1318ae0ddb40c10133528bf4a", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/b2d4b81bae76b1c1318ae0ddb40c10133528bf4a", "committedDate": "2020-02-24T10:47:21Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "292797bd2fe1c9b98a66a48e2d666a4d5a80001f", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/292797bd2fe1c9b98a66a48e2d666a4d5a80001f", "committedDate": "2020-02-24T11:16:08Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "292797bd2fe1c9b98a66a48e2d666a4d5a80001f", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/292797bd2fe1c9b98a66a48e2d666a4d5a80001f", "committedDate": "2020-02-24T11:16:08Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "c9f8bce115a142c27c9b5bdacedd54f62191e2f8", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/c9f8bce115a142c27c9b5bdacedd54f62191e2f8", "committedDate": "2020-02-24T11:22:42Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9f8bce115a142c27c9b5bdacedd54f62191e2f8", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/c9f8bce115a142c27c9b5bdacedd54f62191e2f8", "committedDate": "2020-02-24T11:22:42Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "02b962a84eafc61e2a988e006de9a1b51e4c358c", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/02b962a84eafc61e2a988e006de9a1b51e4c358c", "committedDate": "2020-02-24T11:32:02Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02b962a84eafc61e2a988e006de9a1b51e4c358c", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/02b962a84eafc61e2a988e006de9a1b51e4c358c", "committedDate": "2020-02-24T11:32:02Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "addbb7e3e9cd3247150cf5c6d481c708aeebe72a", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/addbb7e3e9cd3247150cf5c6d481c708aeebe72a", "committedDate": "2020-02-24T11:36:39Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "addbb7e3e9cd3247150cf5c6d481c708aeebe72a", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/addbb7e3e9cd3247150cf5c6d481c708aeebe72a", "committedDate": "2020-02-24T11:36:39Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "d89ba9da9065cec6958f67e2c54138e308cbc012", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/d89ba9da9065cec6958f67e2c54138e308cbc012", "committedDate": "2020-02-24T11:37:27Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d89ba9da9065cec6958f67e2c54138e308cbc012", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/d89ba9da9065cec6958f67e2c54138e308cbc012", "committedDate": "2020-02-24T11:37:27Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "b76216e4ebdf0e9a200ff0a17dcb3270204d55d5", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/b76216e4ebdf0e9a200ff0a17dcb3270204d55d5", "committedDate": "2020-02-25T02:12:14Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b76216e4ebdf0e9a200ff0a17dcb3270204d55d5", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/b76216e4ebdf0e9a200ff0a17dcb3270204d55d5", "committedDate": "2020-02-25T02:12:14Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "9ea5c7e40a9fc798d1ce0d1d384e16d58ac1a58a", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/9ea5c7e40a9fc798d1ce0d1d384e16d58ac1a58a", "committedDate": "2020-02-25T05:59:56Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ea5c7e40a9fc798d1ce0d1d384e16d58ac1a58a", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/9ea5c7e40a9fc798d1ce0d1d384e16d58ac1a58a", "committedDate": "2020-02-25T05:59:56Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "1628fe2026abe96062b849a2fee00ec27bef8b68", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/1628fe2026abe96062b849a2fee00ec27bef8b68", "committedDate": "2020-02-26T03:41:12Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1628fe2026abe96062b849a2fee00ec27bef8b68", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/1628fe2026abe96062b849a2fee00ec27bef8b68", "committedDate": "2020-02-26T03:41:12Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "d2935d8b3f009b34ab11a07d1001dd27b14391c6", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/d2935d8b3f009b34ab11a07d1001dd27b14391c6", "committedDate": "2020-02-26T12:23:15Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2935d8b3f009b34ab11a07d1001dd27b14391c6", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/d2935d8b3f009b34ab11a07d1001dd27b14391c6", "committedDate": "2020-02-26T12:23:15Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "db0f2a98dce20cb99c4fc3bb179fbffb6ec0061d", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/db0f2a98dce20cb99c4fc3bb179fbffb6ec0061d", "committedDate": "2020-02-27T02:34:31Z", "message": "implement the planner for set operation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d18626f45e146641a21038a8aee7910e7d5bd0d", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/6d18626f45e146641a21038a8aee7910e7d5bd0d", "committedDate": "2020-02-27T04:23:41Z", "message": "implement the planner for set operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db0f2a98dce20cb99c4fc3bb179fbffb6ec0061d", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/db0f2a98dce20cb99c4fc3bb179fbffb6ec0061d", "committedDate": "2020-02-27T02:34:31Z", "message": "implement the planner for set operation"}, "afterCommit": {"oid": "6d18626f45e146641a21038a8aee7910e7d5bd0d", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/6d18626f45e146641a21038a8aee7910e7d5bd0d", "committedDate": "2020-02-27T04:23:41Z", "message": "implement the planner for set operation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDEwNzkz", "url": "https://github.com/apache/incubator-doris/pull/2957#pullrequestreview-365410793", "createdAt": "2020-02-27T04:39:59Z", "commit": {"oid": "db0f2a98dce20cb99c4fc3bb179fbffb6ec0061d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3393, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}