{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTQ5MDc1", "number": 3641, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOToxODozNVrOD-IVmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoyMzo1NFrOD-fOmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDc0OTA3OnYy", "diffSide": "RIGHT", "path": "be/src/olap/data_dir.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOToxODozNVrOGYCuvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzozMjo1N1rOGYL3Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2Mzc0Mg==", "bodyText": "how about log warning first, and then\nif (!config::ignore_load_tablet_failure) {\n    LOG(FATAL) << \"be will shutdown due to ignore_load_tablet_failure is false\"\n}", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r427863742", "createdAt": "2020-05-20T09:18:35Z", "author": {"login": "yangzhg"}, "path": "be/src/olap/data_dir.cpp", "diffHunk": "@@ -709,13 +716,29 @@ OLAPStatus DataDir::load() {\n         return true;\n     };\n     OLAPStatus load_tablet_status = TabletMetaManager::traverse_headers(_meta, load_tablet_func);\n-    if (failed_tablet_ids.size() != 0 && !config::ignore_load_tablet_failure) {\n-        LOG(FATAL) << \"load tablets from header failed, failed tablets size: \" << failed_tablet_ids.size();\n+    if (failed_tablet_ids.size() != 0) {\n+        if (!config::ignore_load_tablet_failure) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2edb9fa31addd736f67571d79610931deffb6c8"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAxMzM1MQ==", "bodyText": "ok", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428013351", "createdAt": "2020-05-20T13:32:57Z", "author": {"login": "morningman"}, "path": "be/src/olap/data_dir.cpp", "diffHunk": "@@ -709,13 +716,29 @@ OLAPStatus DataDir::load() {\n         return true;\n     };\n     OLAPStatus load_tablet_status = TabletMetaManager::traverse_headers(_meta, load_tablet_func);\n-    if (failed_tablet_ids.size() != 0 && !config::ignore_load_tablet_failure) {\n-        LOG(FATAL) << \"load tablets from header failed, failed tablets size: \" << failed_tablet_ids.size();\n+    if (failed_tablet_ids.size() != 0) {\n+        if (!config::ignore_load_tablet_failure) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2Mzc0Mg=="}, "originalCommit": {"oid": "c2edb9fa31addd736f67571d79610931deffb6c8"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDc3MTI2OnYy", "diffSide": "RIGHT", "path": "be/src/tools/meta_tool.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOToyNDozNVrOGYC9KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzozMjo1M1rOGYL29w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2NzQzMg==", "bodyText": "I think its better to use ',' as separation character,  it is more common, and likes a csv file", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r427867432", "createdAt": "2020-05-20T09:24:35Z", "author": {"login": "yangzhg"}, "path": "be/src/tools/meta_tool.cpp", "diffHunk": "@@ -122,13 +126,131 @@ void delete_meta(DataDir* data_dir) {\n     std::cout << \"delete meta successfully\" << std::endl;\n }\n \n+Status init_data_dir(const std::string dir, DataDir** ret) {\n+    std::string root_path;\n+    Status st = FileUtils::canonicalize(dir, &root_path);\n+    if (!st.ok()) {\n+        std::cout << \"invalid root path:\" << FLAGS_root_path\n+            << \", error: \" << st.to_string() << std::endl;\n+        return Status::InternalError(\"invalid root path\");\n+    }\n+    doris::StorePath path;\n+    auto res = parse_root_path(root_path, &path);\n+    if (res != OLAP_SUCCESS) {\n+        std::cout << \"parse root path failed:\" << root_path << std::endl;\n+        return Status::InternalError(\"parse root path failed\");\n+    }\n+\n+    *ret = new (std::nothrow) DataDir(path.path, path.capacity_bytes, path.storage_medium);\n+    if (*ret == nullptr) {\n+        std::cout << \"new data dir failed\" << std::endl;\n+        return Status::InternalError(\"new data dir failed\");\n+    }\n+    st = (*ret)->init();\n+    if (!st.ok()) {\n+        std::cout << \"data_dir load failed\" << std::endl;\n+        return Status::InternalError(\"data_dir load failed\");\n+    }\n+\n+    return Status::OK();\n+}\n+\n+void batch_delete_meta(const std::string tablet_file) {\n+    // each line in tablet file indicate a tablet to delete, format is:\n+    //      data_dir tablet_id schema_hash\n+    // eg:\n+    //      /data1/palo.HDD 100010 11212389324\n+    //      /data2/palo.HDD 100010 23049230234\n+    std::ifstream infile(tablet_file);\n+    std::string line;\n+    int err_num = 0;\n+    int delete_num = 0;\n+    int total_num = 0;\n+    std::unordered_map<std::string, std::unique_ptr<DataDir>> dir_map;\n+    while (std::getline(infile, line)) {\n+        total_num++;\n+        vector<string> v = strings::Split(line, \" \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2edb9fa31addd736f67571d79610931deffb6c8"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAxMzMwMw==", "bodyText": "ok", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428013303", "createdAt": "2020-05-20T13:32:53Z", "author": {"login": "morningman"}, "path": "be/src/tools/meta_tool.cpp", "diffHunk": "@@ -122,13 +126,131 @@ void delete_meta(DataDir* data_dir) {\n     std::cout << \"delete meta successfully\" << std::endl;\n }\n \n+Status init_data_dir(const std::string dir, DataDir** ret) {\n+    std::string root_path;\n+    Status st = FileUtils::canonicalize(dir, &root_path);\n+    if (!st.ok()) {\n+        std::cout << \"invalid root path:\" << FLAGS_root_path\n+            << \", error: \" << st.to_string() << std::endl;\n+        return Status::InternalError(\"invalid root path\");\n+    }\n+    doris::StorePath path;\n+    auto res = parse_root_path(root_path, &path);\n+    if (res != OLAP_SUCCESS) {\n+        std::cout << \"parse root path failed:\" << root_path << std::endl;\n+        return Status::InternalError(\"parse root path failed\");\n+    }\n+\n+    *ret = new (std::nothrow) DataDir(path.path, path.capacity_bytes, path.storage_medium);\n+    if (*ret == nullptr) {\n+        std::cout << \"new data dir failed\" << std::endl;\n+        return Status::InternalError(\"new data dir failed\");\n+    }\n+    st = (*ret)->init();\n+    if (!st.ok()) {\n+        std::cout << \"data_dir load failed\" << std::endl;\n+        return Status::InternalError(\"data_dir load failed\");\n+    }\n+\n+    return Status::OK();\n+}\n+\n+void batch_delete_meta(const std::string tablet_file) {\n+    // each line in tablet file indicate a tablet to delete, format is:\n+    //      data_dir tablet_id schema_hash\n+    // eg:\n+    //      /data1/palo.HDD 100010 11212389324\n+    //      /data2/palo.HDD 100010 23049230234\n+    std::ifstream infile(tablet_file);\n+    std::string line;\n+    int err_num = 0;\n+    int delete_num = 0;\n+    int total_num = 0;\n+    std::unordered_map<std::string, std::unique_ptr<DataDir>> dir_map;\n+    while (std::getline(infile, line)) {\n+        total_num++;\n+        vector<string> v = strings::Split(line, \" \");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2NzQzMg=="}, "originalCommit": {"oid": "c2edb9fa31addd736f67571d79610931deffb6c8"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODQ2OTg5OnYy", "diffSide": "RIGHT", "path": "be/src/olap/data_dir.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjowODozNlrOGYnUtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjozMDozOVrOGYnv4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2MzI4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG(INFO) << \"load rowset from meta finished\"\n          \n          \n            \n                    LOG(INFO) << \"load tablet meta finished\"", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428463285", "createdAt": "2020-05-21T06:08:36Z", "author": {"login": "kangpinghuang"}, "path": "be/src/olap/data_dir.cpp", "diffHunk": "@@ -709,13 +716,25 @@ OLAPStatus DataDir::load() {\n         return true;\n     };\n     OLAPStatus load_tablet_status = TabletMetaManager::traverse_headers(_meta, load_tablet_func);\n-    if (failed_tablet_ids.size() != 0 && !config::ignore_load_tablet_failure) {\n-        LOG(FATAL) << \"load tablets from header failed, failed tablets size: \" << failed_tablet_ids.size();\n+    if (failed_tablet_ids.size() != 0) {\n+        LOG(WARNING) << \"load tablets from header failed\"\n+            << \", loaded tablet: \" << tablet_ids.size()\n+            << \", error tablet: \" << failed_tablet_ids.size()\n+            << \", path: \" << _path;\n+        if (!config::ignore_load_tablet_failure) {\n+            LOG(FATAL) << \"load tablets encounter failure. stop BE process. path: \" << _path;\n+        }\n     }\n     if (load_tablet_status != OLAP_SUCCESS) {\n-        LOG(WARNING) << \"there is failure when loading tablet headers, path:\" << _path;\n+        LOG(WARNING) << \"there is failure when loading tablet headers\"\n+                << \", loaded tablet: \" << tablet_ids.size()\n+                << \", error tablet: \" << failed_tablet_ids.size()\n+                << \", path: \" << _path;\n     } else {\n-        LOG(INFO) << \"load rowset from meta finished, data dir: \" << _path;\n+        LOG(INFO) << \"load rowset from meta finished\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MDI0MQ==", "bodyText": "OK", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428470241", "createdAt": "2020-05-21T06:30:39Z", "author": {"login": "morningman"}, "path": "be/src/olap/data_dir.cpp", "diffHunk": "@@ -709,13 +716,25 @@ OLAPStatus DataDir::load() {\n         return true;\n     };\n     OLAPStatus load_tablet_status = TabletMetaManager::traverse_headers(_meta, load_tablet_func);\n-    if (failed_tablet_ids.size() != 0 && !config::ignore_load_tablet_failure) {\n-        LOG(FATAL) << \"load tablets from header failed, failed tablets size: \" << failed_tablet_ids.size();\n+    if (failed_tablet_ids.size() != 0) {\n+        LOG(WARNING) << \"load tablets from header failed\"\n+            << \", loaded tablet: \" << tablet_ids.size()\n+            << \", error tablet: \" << failed_tablet_ids.size()\n+            << \", path: \" << _path;\n+        if (!config::ignore_load_tablet_failure) {\n+            LOG(FATAL) << \"load tablets encounter failure. stop BE process. path: \" << _path;\n+        }\n     }\n     if (load_tablet_status != OLAP_SUCCESS) {\n-        LOG(WARNING) << \"there is failure when loading tablet headers, path:\" << _path;\n+        LOG(WARNING) << \"there is failure when loading tablet headers\"\n+                << \", loaded tablet: \" << tablet_ids.size()\n+                << \", error tablet: \" << failed_tablet_ids.size()\n+                << \", path: \" << _path;\n     } else {\n-        LOG(INFO) << \"load rowset from meta finished, data dir: \" << _path;\n+        LOG(INFO) << \"load rowset from meta finished\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2MzI4NQ=="}, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODQ3Mjg4OnYy", "diffSide": "RIGHT", "path": "be/src/tools/meta_tool.cpp", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoxMDoxMVrOGYnWfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjozMDo1M1rOGYnwQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2Mzc0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Status init_data_dir(const std::string dir, DataDir** ret) {\n          \n          \n            \n            Status init_data_dir(const std::string& dir, DataDir** ret) {", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428463743", "createdAt": "2020-05-21T06:10:11Z", "author": {"login": "kangpinghuang"}, "path": "be/src/tools/meta_tool.cpp", "diffHunk": "@@ -122,13 +126,131 @@ void delete_meta(DataDir* data_dir) {\n     std::cout << \"delete meta successfully\" << std::endl;\n }\n \n+Status init_data_dir(const std::string dir, DataDir** ret) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2NTc5OA==", "bodyText": "and why here use DataDir**?\nI think DataDir* or std::unique_ptr* is ok", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428465798", "createdAt": "2020-05-21T06:16:59Z", "author": {"login": "kangpinghuang"}, "path": "be/src/tools/meta_tool.cpp", "diffHunk": "@@ -122,13 +126,131 @@ void delete_meta(DataDir* data_dir) {\n     std::cout << \"delete meta successfully\" << std::endl;\n }\n \n+Status init_data_dir(const std::string dir, DataDir** ret) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2Mzc0Mw=="}, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MDMzNg==", "bodyText": "I will change it to unique_ptr", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428470336", "createdAt": "2020-05-21T06:30:53Z", "author": {"login": "morningman"}, "path": "be/src/tools/meta_tool.cpp", "diffHunk": "@@ -122,13 +126,131 @@ void delete_meta(DataDir* data_dir) {\n     std::cout << \"delete meta successfully\" << std::endl;\n }\n \n+Status init_data_dir(const std::string dir, DataDir** ret) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2Mzc0Mw=="}, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODQ3MzE5OnYy", "diffSide": "RIGHT", "path": "be/src/tools/meta_tool.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoxMDoyNlrOGYnWtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjozNTo0NFrOGYn2og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2Mzc5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            void batch_delete_meta(const std::string tablet_file) {\n          \n          \n            \n            void batch_delete_meta(const std::string& tablet_file) {", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428463799", "createdAt": "2020-05-21T06:10:26Z", "author": {"login": "kangpinghuang"}, "path": "be/src/tools/meta_tool.cpp", "diffHunk": "@@ -122,13 +126,131 @@ void delete_meta(DataDir* data_dir) {\n     std::cout << \"delete meta successfully\" << std::endl;\n }\n \n+Status init_data_dir(const std::string dir, DataDir** ret) {\n+    std::string root_path;\n+    Status st = FileUtils::canonicalize(dir, &root_path);\n+    if (!st.ok()) {\n+        std::cout << \"invalid root path:\" << FLAGS_root_path\n+            << \", error: \" << st.to_string() << std::endl;\n+        return Status::InternalError(\"invalid root path\");\n+    }\n+    doris::StorePath path;\n+    auto res = parse_root_path(root_path, &path);\n+    if (res != OLAP_SUCCESS) {\n+        std::cout << \"parse root path failed:\" << root_path << std::endl;\n+        return Status::InternalError(\"parse root path failed\");\n+    }\n+\n+    *ret = new (std::nothrow) DataDir(path.path, path.capacity_bytes, path.storage_medium);\n+    if (*ret == nullptr) {\n+        std::cout << \"new data dir failed\" << std::endl;\n+        return Status::InternalError(\"new data dir failed\");\n+    }\n+    st = (*ret)->init();\n+    if (!st.ok()) {\n+        std::cout << \"data_dir load failed\" << std::endl;\n+        return Status::InternalError(\"data_dir load failed\");\n+    }\n+\n+    return Status::OK();\n+}\n+\n+void batch_delete_meta(const std::string tablet_file) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MTk3MA==", "bodyText": "OK", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428471970", "createdAt": "2020-05-21T06:35:44Z", "author": {"login": "morningman"}, "path": "be/src/tools/meta_tool.cpp", "diffHunk": "@@ -122,13 +126,131 @@ void delete_meta(DataDir* data_dir) {\n     std::cout << \"delete meta successfully\" << std::endl;\n }\n \n+Status init_data_dir(const std::string dir, DataDir** ret) {\n+    std::string root_path;\n+    Status st = FileUtils::canonicalize(dir, &root_path);\n+    if (!st.ok()) {\n+        std::cout << \"invalid root path:\" << FLAGS_root_path\n+            << \", error: \" << st.to_string() << std::endl;\n+        return Status::InternalError(\"invalid root path\");\n+    }\n+    doris::StorePath path;\n+    auto res = parse_root_path(root_path, &path);\n+    if (res != OLAP_SUCCESS) {\n+        std::cout << \"parse root path failed:\" << root_path << std::endl;\n+        return Status::InternalError(\"parse root path failed\");\n+    }\n+\n+    *ret = new (std::nothrow) DataDir(path.path, path.capacity_bytes, path.storage_medium);\n+    if (*ret == nullptr) {\n+        std::cout << \"new data dir failed\" << std::endl;\n+        return Status::InternalError(\"new data dir failed\");\n+    }\n+    st = (*ret)->init();\n+    if (!st.ok()) {\n+        std::cout << \"data_dir load failed\" << std::endl;\n+        return Status::InternalError(\"data_dir load failed\");\n+    }\n+\n+    return Status::OK();\n+}\n+\n+void batch_delete_meta(const std::string tablet_file) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2Mzc5OQ=="}, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODQ3NjAwOnYy", "diffSide": "RIGHT", "path": "be/src/tools/meta_tool.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoxMTo1OFrOGYnYdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjozNjowMlrOGYn3Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2NDI0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                std::string line;\n          \n          \n            \n                std::string line = \"\";", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428464247", "createdAt": "2020-05-21T06:11:58Z", "author": {"login": "kangpinghuang"}, "path": "be/src/tools/meta_tool.cpp", "diffHunk": "@@ -122,13 +126,131 @@ void delete_meta(DataDir* data_dir) {\n     std::cout << \"delete meta successfully\" << std::endl;\n }\n \n+Status init_data_dir(const std::string dir, DataDir** ret) {\n+    std::string root_path;\n+    Status st = FileUtils::canonicalize(dir, &root_path);\n+    if (!st.ok()) {\n+        std::cout << \"invalid root path:\" << FLAGS_root_path\n+            << \", error: \" << st.to_string() << std::endl;\n+        return Status::InternalError(\"invalid root path\");\n+    }\n+    doris::StorePath path;\n+    auto res = parse_root_path(root_path, &path);\n+    if (res != OLAP_SUCCESS) {\n+        std::cout << \"parse root path failed:\" << root_path << std::endl;\n+        return Status::InternalError(\"parse root path failed\");\n+    }\n+\n+    *ret = new (std::nothrow) DataDir(path.path, path.capacity_bytes, path.storage_medium);\n+    if (*ret == nullptr) {\n+        std::cout << \"new data dir failed\" << std::endl;\n+        return Status::InternalError(\"new data dir failed\");\n+    }\n+    st = (*ret)->init();\n+    if (!st.ok()) {\n+        std::cout << \"data_dir load failed\" << std::endl;\n+        return Status::InternalError(\"data_dir load failed\");\n+    }\n+\n+    return Status::OK();\n+}\n+\n+void batch_delete_meta(const std::string tablet_file) {\n+    // each line in tablet file indicate a tablet to delete, format is:\n+    //      data_dir,tablet_id,schema_hash\n+    // eg:\n+    //      /data1/palo.HDD,100010,11212389324\n+    //      /data2/palo.HDD,100010,23049230234\n+    std::ifstream infile(tablet_file);\n+    std::string line;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MjA4Mw==", "bodyText": "OK", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428472083", "createdAt": "2020-05-21T06:36:02Z", "author": {"login": "morningman"}, "path": "be/src/tools/meta_tool.cpp", "diffHunk": "@@ -122,13 +126,131 @@ void delete_meta(DataDir* data_dir) {\n     std::cout << \"delete meta successfully\" << std::endl;\n }\n \n+Status init_data_dir(const std::string dir, DataDir** ret) {\n+    std::string root_path;\n+    Status st = FileUtils::canonicalize(dir, &root_path);\n+    if (!st.ok()) {\n+        std::cout << \"invalid root path:\" << FLAGS_root_path\n+            << \", error: \" << st.to_string() << std::endl;\n+        return Status::InternalError(\"invalid root path\");\n+    }\n+    doris::StorePath path;\n+    auto res = parse_root_path(root_path, &path);\n+    if (res != OLAP_SUCCESS) {\n+        std::cout << \"parse root path failed:\" << root_path << std::endl;\n+        return Status::InternalError(\"parse root path failed\");\n+    }\n+\n+    *ret = new (std::nothrow) DataDir(path.path, path.capacity_bytes, path.storage_medium);\n+    if (*ret == nullptr) {\n+        std::cout << \"new data dir failed\" << std::endl;\n+        return Status::InternalError(\"new data dir failed\");\n+    }\n+    st = (*ret)->init();\n+    if (!st.ok()) {\n+        std::cout << \"data_dir load failed\" << std::endl;\n+        return Status::InternalError(\"data_dir load failed\");\n+    }\n+\n+    return Status::OK();\n+}\n+\n+void batch_delete_meta(const std::string tablet_file) {\n+    // each line in tablet file indicate a tablet to delete, format is:\n+    //      data_dir,tablet_id,schema_hash\n+    // eg:\n+    //      /data1/palo.HDD,100010,11212389324\n+    //      /data2/palo.HDD,100010,23049230234\n+    std::ifstream infile(tablet_file);\n+    std::string line;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2NDI0Nw=="}, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODQ5MDExOnYy", "diffSide": "RIGHT", "path": "be/src/tools/meta_tool.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoxOTowN1rOGYnhJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjozNjoyN1rOGYn3hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2NjQ3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            << FLAGS_tablet_id << \", schema_hash:\" << FLAGS_schema_hash\n          \n          \n            \n                            << tablet_id << \", schema_hash:\" << schema_hash", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428466470", "createdAt": "2020-05-21T06:19:07Z", "author": {"login": "kangpinghuang"}, "path": "be/src/tools/meta_tool.cpp", "diffHunk": "@@ -122,13 +126,131 @@ void delete_meta(DataDir* data_dir) {\n     std::cout << \"delete meta successfully\" << std::endl;\n }\n \n+Status init_data_dir(const std::string dir, DataDir** ret) {\n+    std::string root_path;\n+    Status st = FileUtils::canonicalize(dir, &root_path);\n+    if (!st.ok()) {\n+        std::cout << \"invalid root path:\" << FLAGS_root_path\n+            << \", error: \" << st.to_string() << std::endl;\n+        return Status::InternalError(\"invalid root path\");\n+    }\n+    doris::StorePath path;\n+    auto res = parse_root_path(root_path, &path);\n+    if (res != OLAP_SUCCESS) {\n+        std::cout << \"parse root path failed:\" << root_path << std::endl;\n+        return Status::InternalError(\"parse root path failed\");\n+    }\n+\n+    *ret = new (std::nothrow) DataDir(path.path, path.capacity_bytes, path.storage_medium);\n+    if (*ret == nullptr) {\n+        std::cout << \"new data dir failed\" << std::endl;\n+        return Status::InternalError(\"new data dir failed\");\n+    }\n+    st = (*ret)->init();\n+    if (!st.ok()) {\n+        std::cout << \"data_dir load failed\" << std::endl;\n+        return Status::InternalError(\"data_dir load failed\");\n+    }\n+\n+    return Status::OK();\n+}\n+\n+void batch_delete_meta(const std::string tablet_file) {\n+    // each line in tablet file indicate a tablet to delete, format is:\n+    //      data_dir,tablet_id,schema_hash\n+    // eg:\n+    //      /data1/palo.HDD,100010,11212389324\n+    //      /data2/palo.HDD,100010,23049230234\n+    std::ifstream infile(tablet_file);\n+    std::string line;\n+    int err_num = 0;\n+    int delete_num = 0;\n+    int total_num = 0;\n+    std::unordered_map<std::string, std::unique_ptr<DataDir>> dir_map;\n+    while (std::getline(infile, line)) {\n+        total_num++;\n+        vector<string> v = strings::Split(line, \",\");\n+        if (v.size() != 3) {\n+            std::cout << \"invalid line in tablet_file: \" << line << std::endl;\n+            err_num++;\n+            continue;\n+        }\n+        // 1. get dir\n+        std::string dir;\n+        Status st = FileUtils::canonicalize(v[0], &dir);\n+        if (!st.ok()) {\n+            std::cout << \"invalid root dir in tablet_file: \" << line << std::endl;\n+            err_num++;\n+            continue;\n+        }\n+\n+        if (dir_map.find(dir) == dir_map.end()) {\n+            // new data dir, init it\n+            DataDir* data_dir_p = nullptr;\n+            Status st = init_data_dir(dir, &data_dir_p);\n+            if (!st.ok()) {\n+                std::cout << \"invalid root path:\" << FLAGS_root_path\n+                    << \", error: \" << st.to_string() << std::endl;\n+                err_num++;\n+                continue;\n+            }\n+            dir_map[dir] = std::unique_ptr<DataDir>(data_dir_p);\n+            std::cout << \"get a new data dir: \" << dir << std::endl;\n+        }\n+        DataDir* data_dir = dir_map[dir].get();\n+        if (data_dir == nullptr) {\n+            std::cout << \"failed to get data dir: \" << line << std::endl;\n+            err_num++;\n+            continue;\n+        }\n+\n+        // 2. get tablet id/schema_hash\n+        int64_t tablet_id;\n+        if (!safe_strto64(v[1].c_str(), &tablet_id)) {\n+            std::cout << \"invalid tablet id: \" << line << std::endl;\n+            err_num++;\n+            continue;\n+        }\n+        int64_t schema_hash;\n+        if (!safe_strto64(v[2].c_str(), &schema_hash)) {\n+            std::cout << \"invalid schema hash: \" << line << std::endl;\n+            err_num++;\n+            continue;\n+        }\n+\n+        OLAPStatus s = TabletMetaManager::remove(data_dir, tablet_id, schema_hash);\n+        if (s != OLAP_SUCCESS) {\n+            std::cout << \"delete tablet meta failed for tablet_id:\"\n+                << FLAGS_tablet_id << \", schema_hash:\" << FLAGS_schema_hash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MjE5Nw==", "bodyText": "OK", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428472197", "createdAt": "2020-05-21T06:36:27Z", "author": {"login": "morningman"}, "path": "be/src/tools/meta_tool.cpp", "diffHunk": "@@ -122,13 +126,131 @@ void delete_meta(DataDir* data_dir) {\n     std::cout << \"delete meta successfully\" << std::endl;\n }\n \n+Status init_data_dir(const std::string dir, DataDir** ret) {\n+    std::string root_path;\n+    Status st = FileUtils::canonicalize(dir, &root_path);\n+    if (!st.ok()) {\n+        std::cout << \"invalid root path:\" << FLAGS_root_path\n+            << \", error: \" << st.to_string() << std::endl;\n+        return Status::InternalError(\"invalid root path\");\n+    }\n+    doris::StorePath path;\n+    auto res = parse_root_path(root_path, &path);\n+    if (res != OLAP_SUCCESS) {\n+        std::cout << \"parse root path failed:\" << root_path << std::endl;\n+        return Status::InternalError(\"parse root path failed\");\n+    }\n+\n+    *ret = new (std::nothrow) DataDir(path.path, path.capacity_bytes, path.storage_medium);\n+    if (*ret == nullptr) {\n+        std::cout << \"new data dir failed\" << std::endl;\n+        return Status::InternalError(\"new data dir failed\");\n+    }\n+    st = (*ret)->init();\n+    if (!st.ok()) {\n+        std::cout << \"data_dir load failed\" << std::endl;\n+        return Status::InternalError(\"data_dir load failed\");\n+    }\n+\n+    return Status::OK();\n+}\n+\n+void batch_delete_meta(const std::string tablet_file) {\n+    // each line in tablet file indicate a tablet to delete, format is:\n+    //      data_dir,tablet_id,schema_hash\n+    // eg:\n+    //      /data1/palo.HDD,100010,11212389324\n+    //      /data2/palo.HDD,100010,23049230234\n+    std::ifstream infile(tablet_file);\n+    std::string line;\n+    int err_num = 0;\n+    int delete_num = 0;\n+    int total_num = 0;\n+    std::unordered_map<std::string, std::unique_ptr<DataDir>> dir_map;\n+    while (std::getline(infile, line)) {\n+        total_num++;\n+        vector<string> v = strings::Split(line, \",\");\n+        if (v.size() != 3) {\n+            std::cout << \"invalid line in tablet_file: \" << line << std::endl;\n+            err_num++;\n+            continue;\n+        }\n+        // 1. get dir\n+        std::string dir;\n+        Status st = FileUtils::canonicalize(v[0], &dir);\n+        if (!st.ok()) {\n+            std::cout << \"invalid root dir in tablet_file: \" << line << std::endl;\n+            err_num++;\n+            continue;\n+        }\n+\n+        if (dir_map.find(dir) == dir_map.end()) {\n+            // new data dir, init it\n+            DataDir* data_dir_p = nullptr;\n+            Status st = init_data_dir(dir, &data_dir_p);\n+            if (!st.ok()) {\n+                std::cout << \"invalid root path:\" << FLAGS_root_path\n+                    << \", error: \" << st.to_string() << std::endl;\n+                err_num++;\n+                continue;\n+            }\n+            dir_map[dir] = std::unique_ptr<DataDir>(data_dir_p);\n+            std::cout << \"get a new data dir: \" << dir << std::endl;\n+        }\n+        DataDir* data_dir = dir_map[dir].get();\n+        if (data_dir == nullptr) {\n+            std::cout << \"failed to get data dir: \" << line << std::endl;\n+            err_num++;\n+            continue;\n+        }\n+\n+        // 2. get tablet id/schema_hash\n+        int64_t tablet_id;\n+        if (!safe_strto64(v[1].c_str(), &tablet_id)) {\n+            std::cout << \"invalid tablet id: \" << line << std::endl;\n+            err_num++;\n+            continue;\n+        }\n+        int64_t schema_hash;\n+        if (!safe_strto64(v[2].c_str(), &schema_hash)) {\n+            std::cout << \"invalid schema hash: \" << line << std::endl;\n+            err_num++;\n+            continue;\n+        }\n+\n+        OLAPStatus s = TabletMetaManager::remove(data_dir, tablet_id, schema_hash);\n+        if (s != OLAP_SUCCESS) {\n+            std::cout << \"delete tablet meta failed for tablet_id:\"\n+                << FLAGS_tablet_id << \", schema_hash:\" << FLAGS_schema_hash", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2NjQ3MA=="}, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODQ5NjE1OnYy", "diffSide": "RIGHT", "path": "docs/zh-CN/administrator-guide/operation/tablet-meta-tool.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoyMjoxOVrOGYnk9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoyMjoxOVrOGYnk9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2NzQ0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4e3a\u4e86\u5b9e\u73b0\u4ece\u67d0\u4e2a be \u7684\u67d0\u4e2a\u76d8\u4e2d\u5220\u9664\u67d0\u4e2a tablet \u7684\u529f\u80fd\u3002\u53ef\u4ee5\u5355\u72ec\u5220\u9664\u4e00\u4e2a tablet\uff0c\u6216\u8005\u6279\u91cf\u5220\u9664\u4e00\u7ec4 tablet\u3002\n          \n          \n            \n            \u4e3a\u4e86\u5b9e\u73b0\u4ece\u67d0\u4e2a be \u7684\u67d0\u4e2a\u76d8\u4e2d\u5220\u9664\u67d0\u4e2a tablet \u7684\u5143\u6570\u636e\u529f\u80fd\u3002\u53ef\u4ee5\u5355\u72ec\u5220\u9664\u4e00\u4e2a tablet\u5143\u6570\u636e\uff0c\u6216\u8005\u6279\u91cf\u5220\u9664\u4e00\u7ec4 tablet\u5143\u6570\u636e\u3002", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428467446", "createdAt": "2020-05-21T06:22:19Z", "author": {"login": "kangpinghuang"}, "path": "docs/zh-CN/administrator-guide/operation/tablet-meta-tool.md", "diffHunk": "@@ -93,14 +93,39 @@ api\uff1a\n \n ### \u5220\u9664 header\n \n-\u4e3a\u4e86\u5b9e\u73b0\u4ece\u67d0\u4e2a be \u7684\u67d0\u4e2a\u76d8\u4e2d\u5220\u9664\u67d0\u4e2a tablet \u7684\u529f\u80fd\u3002\n+\u4e3a\u4e86\u5b9e\u73b0\u4ece\u67d0\u4e2a be \u7684\u67d0\u4e2a\u76d8\u4e2d\u5220\u9664\u67d0\u4e2a tablet \u7684\u529f\u80fd\u3002\u53ef\u4ee5\u5355\u72ec\u5220\u9664\u4e00\u4e2a tablet\uff0c\u6216\u8005\u6279\u91cf\u5220\u9664\u4e00\u7ec4 tablet\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODQ5NjU3OnYy", "diffSide": "RIGHT", "path": "docs/zh-CN/administrator-guide/operation/tablet-meta-tool.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoyMjozMlrOGYnlOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoyMjozMlrOGYnlOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2NzUxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5220\u9664\u5355\u4e2atablet\uff1a\n          \n          \n            \n            \u5220\u9664\u5355\u4e2atablet\u5143\u6570\u636e\uff1a", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428467512", "createdAt": "2020-05-21T06:22:32Z", "author": {"login": "kangpinghuang"}, "path": "docs/zh-CN/administrator-guide/operation/tablet-meta-tool.md", "diffHunk": "@@ -93,14 +93,39 @@ api\uff1a\n \n ### \u5220\u9664 header\n \n-\u4e3a\u4e86\u5b9e\u73b0\u4ece\u67d0\u4e2a be \u7684\u67d0\u4e2a\u76d8\u4e2d\u5220\u9664\u67d0\u4e2a tablet \u7684\u529f\u80fd\u3002\n+\u4e3a\u4e86\u5b9e\u73b0\u4ece\u67d0\u4e2a be \u7684\u67d0\u4e2a\u76d8\u4e2d\u5220\u9664\u67d0\u4e2a tablet \u7684\u529f\u80fd\u3002\u53ef\u4ee5\u5355\u72ec\u5220\u9664\u4e00\u4e2a tablet\uff0c\u6216\u8005\u6279\u91cf\u5220\u9664\u4e00\u7ec4 tablet\u3002\n \n-\u547d\u4ee4:\n+\u5220\u9664\u5355\u4e2atablet\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODQ5NzQ1OnYy", "diffSide": "RIGHT", "path": "docs/zh-CN/administrator-guide/operation/tablet-meta-tool.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoyMjo1NlrOGYnlxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoyMjo1NlrOGYnlxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2NzY1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5220\u9664\u4e00\u7ec4tablet\uff1a\n          \n          \n            \n            \u5220\u9664\u4e00\u7ec4tablet\u5143\u6570\u636e\uff1a", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428467655", "createdAt": "2020-05-21T06:22:56Z", "author": {"login": "kangpinghuang"}, "path": "docs/zh-CN/administrator-guide/operation/tablet-meta-tool.md", "diffHunk": "@@ -93,14 +93,39 @@ api\uff1a\n \n ### \u5220\u9664 header\n \n-\u4e3a\u4e86\u5b9e\u73b0\u4ece\u67d0\u4e2a be \u7684\u67d0\u4e2a\u76d8\u4e2d\u5220\u9664\u67d0\u4e2a tablet \u7684\u529f\u80fd\u3002\n+\u4e3a\u4e86\u5b9e\u73b0\u4ece\u67d0\u4e2a be \u7684\u67d0\u4e2a\u76d8\u4e2d\u5220\u9664\u67d0\u4e2a tablet \u7684\u529f\u80fd\u3002\u53ef\u4ee5\u5355\u72ec\u5220\u9664\u4e00\u4e2a tablet\uff0c\u6216\u8005\u6279\u91cf\u5220\u9664\u4e00\u7ec4 tablet\u3002\n \n-\u547d\u4ee4:\n+\u5220\u9664\u5355\u4e2atablet\uff1a\n \n ```\n ./lib/meta_tool --operation=delete_meta --root_path=/path/to/root_path --tablet_id=xxx --schema_hash=xxx\n ```\n \n+\u5220\u9664\u4e00\u7ec4tablet\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODQ5OTQ0OnYy", "diffSide": "RIGHT", "path": "docs/en/administrator-guide/operation/tablet-meta-tool.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjoyMzo1NFrOGYnnAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjozODoyNlrOGYn6Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2Nzk3MQ==", "bodyText": "will you need to support delete tablet data meanwhile?", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428467971", "createdAt": "2020-05-21T06:23:54Z", "author": {"login": "kangpinghuang"}, "path": "docs/en/administrator-guide/operation/tablet-meta-tool.md", "diffHunk": "@@ -93,14 +93,39 @@ Order:\n \n ### Delete header\n \n-In order to realize the function of deleting a tablet from a disk of a be.\n+In order to realize the function of deleting a tablet from a disk of a BE. Support single delete and batch delete.\n \n-Order:\n+Single delete:\n \n ```\n ./lib/meta_tool --operation=delete_meta --root_path=/path/to/root_path --tablet_id=xxx --schema_hash=xxx`\n ```\n \n+Batch delete:\n+\n+```\n+./lib/meta_tool --operation=batch_delete_meta --tablet_file=/path/to/tablet_file.txt", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3Mjg3MQ==", "bodyText": "Maybe at another PR", "url": "https://github.com/apache/incubator-doris/pull/3641#discussion_r428472871", "createdAt": "2020-05-21T06:38:26Z", "author": {"login": "morningman"}, "path": "docs/en/administrator-guide/operation/tablet-meta-tool.md", "diffHunk": "@@ -93,14 +93,39 @@ Order:\n \n ### Delete header\n \n-In order to realize the function of deleting a tablet from a disk of a be.\n+In order to realize the function of deleting a tablet from a disk of a BE. Support single delete and batch delete.\n \n-Order:\n+Single delete:\n \n ```\n ./lib/meta_tool --operation=delete_meta --root_path=/path/to/root_path --tablet_id=xxx --schema_hash=xxx`\n ```\n \n+Batch delete:\n+\n+```\n+./lib/meta_tool --operation=batch_delete_meta --tablet_file=/path/to/tablet_file.txt", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2Nzk3MQ=="}, "originalCommit": {"oid": "01b9b2850af0abd8d068aef425c39505a2ac50cd"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1594, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}