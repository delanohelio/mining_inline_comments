{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMjcwNDIx", "number": 4914, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxMzo0MDo1MFrOE726-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxMzo0MDo1MFrOE726-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMjAxMjczOnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/qe/Coordinator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxMzo0MDo1MFrOH3uoSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwMjoyNjo0MFrOH39xdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE5NzcwNg==", "bodyText": "!execHostPort.hostname.equals(minLocation.server.hostname)", "url": "https://github.com/apache/incubator-doris/pull/4914#discussion_r528197706", "createdAt": "2020-11-21T13:40:50Z", "author": {"login": "morningman"}, "path": "fe/fe-core/src/main/java/org/apache/doris/qe/Coordinator.java", "diffHunk": "@@ -1287,6 +1287,17 @@ private void computeScanRangeAssignmentByScheduler(\n             Reference<Long> backendIdRef = new Reference<Long>();\n             TNetworkAddress execHostPort = SimpleScheduler.getHost(minLocation.backend_id,\n                     scanRangeLocations.getLocations(), this.idToBackend, backendIdRef);\n+            if (execHostPort.hostname != minLocation.server.hostname ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "399aefa215764e178e3c146707824b9467025c9f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ0NTgxNQ==", "bodyText": "Thanks for your review. I have modified it.", "url": "https://github.com/apache/incubator-doris/pull/4914#discussion_r528445815", "createdAt": "2020-11-23T02:26:40Z", "author": {"login": "xinghuayu007"}, "path": "fe/fe-core/src/main/java/org/apache/doris/qe/Coordinator.java", "diffHunk": "@@ -1287,6 +1287,17 @@ private void computeScanRangeAssignmentByScheduler(\n             Reference<Long> backendIdRef = new Reference<Long>();\n             TNetworkAddress execHostPort = SimpleScheduler.getHost(minLocation.backend_id,\n                     scanRangeLocations.getLocations(), this.idToBackend, backendIdRef);\n+            if (execHostPort.hostname != minLocation.server.hostname ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE5NzcwNg=="}, "originalCommit": {"oid": "399aefa215764e178e3c146707824b9467025c9f"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 896, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}