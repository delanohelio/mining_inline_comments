{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5OTcyNDY5", "number": 4990, "title": "[Doris On ES][Bug-fix] fix boolean predicate pushdown manner", "bodyText": "Proposed changes\nTest Data:\nCREATE EXTERNAL TABLE `bool_test` (\n  `k1` int NULL COMMENT \"\",\n  `k2` boolean NULL COMMENT \"\"\n) ENGINE=ELASTICSEARCH\nPROPERTIES (\n\"hosts\" = \"http://host:ip\",\n\"user\" = \"root\",\n\"password\" = \"root\",\n\"index\" = \"bool_test\",\n\"type\" = \"doc\"\n); \n\nMySQL [es]> select * from bool_test;\n+------+------+\n| k1   | k2   |\n+------+------+\n|    1 |    1 |\n|    2 |    0 |\n|    3 |    1 |\n|    4 |    0 |\n+------+------+\n\nProcess boolean field predicate be consistent with mysql grammar. such as:\nMySQL [es]> select * from bool_test where k2 = true;\n+------+------+\n| k1   | k2   |\n+------+------+\n|    1 |    1 |\n|    3 |    1 |\n+------+------+\n\nMySQL [es]> select * from bool_test where k2 = false;\n+------+------+\n| k1   | k2   |\n+------+------+\n|    2 |    0 |\n|    4 |    0 |\n+------+------+\n\nMySQL [es]> select * from bool_test where k2 = 2;\nEmpty set (0.089 sec)\n\nMySQL [es]> select * from bool_test where k2 = 0;\n+------+------+\n| k1   | k2   |\n+------+------+\n|    2 |    0 |\n|    4 |    0 |\n+------+------+\n\nTypes of changes\nWhat types of changes does your code introduce to Doris?\nPut an x in the boxes that apply\n\n Bugfix (non-breaking change which fixes an issue)\n[] New feature (non-breaking change which adds functionality)\n[] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n[] Documentation Update (if none of the other choices apply)\n[] Code refactor (Modify the code structure, format the code, etc...)\n\nChecklist\nPut an x in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code.\n\n I have create an issue on (Fix #ISSUE), and have described the bug/feature there in detail\n Compiling and unit tests pass locally with my changes\n[] I have added tests that prove my fix is effective or that my feature works\n[] If this change need a document change, I have updated the document\n Any dependent changes have been merged\n\nFurther comments\nDOE user should know: This PR just process = predicate for boolean type column", "createdAt": "2020-12-01T04:47:27Z", "url": "https://github.com/apache/incubator-doris/pull/4990", "merged": true, "mergeCommit": {"oid": "af06adb57fbaf306534971bae8cf11162d714404"}, "closed": true, "closedAt": "2020-12-02T02:13:14Z", "author": {"login": "wuyunfeng"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhysYeAFqTU0MTQ4OTE1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiE0FLAFqTU0MjQ0MzQyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDg5MTU0", "url": "https://github.com/apache/incubator-doris/pull/4990#pullrequestreview-541489154", "createdAt": "2020-12-01T04:57:45Z", "commit": {"oid": "081b5c3a408d278c820fbdb1ade8af561c1e1a1a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNDo1Nzo0NlrOH8YN-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNDo1ODozNlrOH8YOwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA3MzQwMg==", "bodyText": "_match_none Is preferred.\n_match_none is not initialized before use.", "url": "https://github.com/apache/incubator-doris/pull/4990#discussion_r533073402", "createdAt": "2020-12-01T04:57:46Z", "author": {"login": "imay"}, "path": "be/src/exec/es/es_query_builder.h", "diffHunk": "@@ -53,6 +53,7 @@ class TermQueryBuilder : public QueryBuilder {\n private:\n     std::string _field;\n     std::string _term;\n+    bool _match_none_;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081b5c3a408d278c820fbdb1ade8af561c1e1a1a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA3MzYwMA==", "bodyText": "std::move is useless", "url": "https://github.com/apache/incubator-doris/pull/4990#discussion_r533073600", "createdAt": "2020-12-01T04:58:36Z", "author": {"login": "imay"}, "path": "be/src/exec/es/es_query_builder.cpp", "diffHunk": "@@ -53,16 +53,37 @@ TermQueryBuilder::TermQueryBuilder(const std::string& field, const std::string&\n         : _field(field), _term(term) {}\n \n TermQueryBuilder::TermQueryBuilder(const ExtBinaryPredicate& binary_predicate)\n-        : _field(binary_predicate.col.name), _term(binary_predicate.value.to_string()) {}\n+        : _field(binary_predicate.col.name) {\n+        _match_none_ = false;\n+        if (binary_predicate.col.type.type == PrimitiveType::TYPE_BOOLEAN) {\n+            int val = atoi(binary_predicate.value.to_string().c_str());\n+            if (val == 1) {\n+                _term = std::string(\"true\");\n+            } else if (val == 0){\n+                _term = std::string(\"false\");\n+            } else {\n+                // keep semantic consistent with mysql\n+                _match_none_ = true;\n+            }\n+        } else {\n+            _term = std::move(binary_predicate.value.to_string());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081b5c3a408d278c820fbdb1ade8af561c1e1a1a"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fc0a1441193ee450e55f28b6ec0595311453f8f", "author": {"user": {"login": "wuyunfeng", "name": "Yunfeng,Wu"}}, "url": "https://github.com/apache/incubator-doris/commit/1fc0a1441193ee450e55f28b6ec0595311453f8f", "committedDate": "2020-12-01T05:11:56Z", "message": "[Doris On ES][Bug-fix] fix boolean predicate pushdown manner"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "081b5c3a408d278c820fbdb1ade8af561c1e1a1a", "author": {"user": {"login": "wuyunfeng", "name": "Yunfeng,Wu"}}, "url": "https://github.com/apache/incubator-doris/commit/081b5c3a408d278c820fbdb1ade8af561c1e1a1a", "committedDate": "2020-12-01T04:44:30Z", "message": "[Doris On ES][Bug-fix] fix boolean predicate pushdown manner"}, "afterCommit": {"oid": "1fc0a1441193ee450e55f28b6ec0595311453f8f", "author": {"user": {"login": "wuyunfeng", "name": "Yunfeng,Wu"}}, "url": "https://github.com/apache/incubator-doris/commit/1fc0a1441193ee450e55f28b6ec0595311453f8f", "committedDate": "2020-12-01T05:11:56Z", "message": "[Doris On ES][Bug-fix] fix boolean predicate pushdown manner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDk0MTA5", "url": "https://github.com/apache/incubator-doris/pull/4990#pullrequestreview-541494109", "createdAt": "2020-12-01T05:14:02Z", "commit": {"oid": "081b5c3a408d278c820fbdb1ade8af561c1e1a1a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNjMzMTg4", "url": "https://github.com/apache/incubator-doris/pull/4990#pullrequestreview-541633188", "createdAt": "2020-12-01T08:30:58Z", "commit": {"oid": "1fc0a1441193ee450e55f28b6ec0595311453f8f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODozMDo1OFrOH8dF7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODozMDo1OFrOH8dF7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE1MzI2Mg==", "bodyText": "use StringParse::string_to_int instead", "url": "https://github.com/apache/incubator-doris/pull/4990#discussion_r533153262", "createdAt": "2020-12-01T08:30:58Z", "author": {"login": "chaoyli"}, "path": "be/src/exec/es/es_query_builder.cpp", "diffHunk": "@@ -50,19 +50,39 @@ void ESQueryBuilder::to_json(rapidjson::Document* document, rapidjson::Value* qu\n }\n \n TermQueryBuilder::TermQueryBuilder(const std::string& field, const std::string& term)\n-        : _field(field), _term(term) {}\n+        : _field(field), _term(term), _match_none(false) {}\n \n TermQueryBuilder::TermQueryBuilder(const ExtBinaryPredicate& binary_predicate)\n-        : _field(binary_predicate.col.name), _term(binary_predicate.value.to_string()) {}\n+        : _field(binary_predicate.col.name), _match_none(false) {\n+        if (binary_predicate.col.type.type == PrimitiveType::TYPE_BOOLEAN) {\n+            int val = atoi(binary_predicate.value.to_string().c_str());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fc0a1441193ee450e55f28b6ec0595311453f8f"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNDQzNDIy", "url": "https://github.com/apache/incubator-doris/pull/4990#pullrequestreview-542443422", "createdAt": "2020-12-02T02:07:10Z", "commit": {"oid": "1fc0a1441193ee450e55f28b6ec0595311453f8f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4650, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}