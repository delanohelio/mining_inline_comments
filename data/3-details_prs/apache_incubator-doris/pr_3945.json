{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NTk4Nzc5", "number": 3945, "title": "[BUG]Make segment V1 and V2 share same file cache", "bodyText": "fix #3944\nThis commit make segment V1 and V2 share on same file cache, so that segment V2's file descriptors stored in cache can be cleaned up as V1 do.", "createdAt": "2020-06-25T01:18:18Z", "url": "https://github.com/apache/incubator-doris/pull/3945", "merged": true, "mergeCommit": {"oid": "9671394015127109218d78b59b42fa275f7ffe47"}, "closed": true, "closedAt": "2020-06-29T11:13:24Z", "author": {"login": "xy720"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcugXmIAH2gAyNDM5NTk4Nzc5OjcxZTUzN2Q4YTM5NzkwMjJkYmQyZjYxNGJlY2QzN2YwMGVkZGFjOGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvsnrUgFqTQzODc4MTQxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "71e537d8a3979022dbd2f614becd37f00eddac8f", "author": {"user": {"login": "xy720", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/71e537d8a3979022dbd2f614becd37f00eddac8f", "committedDate": "2020-06-24T20:49:20Z", "message": "save code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0128055c5e74d9ee860071e4ea4d1e76d8e214f4", "author": {"user": {"login": "xy720", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/0128055c5e74d9ee860071e4ea4d1e76d8e214f4", "committedDate": "2020-06-24T20:49:20Z", "message": "place cache in storage_engine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb055b207d584e6a8be55fd4c30f2ba52b200c3a", "author": {"user": {"login": "xy720", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/bb055b207d584e6a8be55fd4c30f2ba52b200c3a", "committedDate": "2020-06-24T20:49:20Z", "message": "rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25157bcb5e2baa4cd9a60670bec660f5fe0c7f93", "author": {"user": {"login": "xy720", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/25157bcb5e2baa4cd9a60670bec660f5fe0c7f93", "committedDate": "2020-06-25T00:24:26Z", "message": "fix segment fault"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "904ce76772a72f07027b406c3f7fd452c3968e6e", "author": {"user": {"login": "xy720", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/904ce76772a72f07027b406c3f7fd452c3968e6e", "committedDate": "2020-06-25T01:21:44Z", "message": "remove comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b3fdeb71dac4b048fc447083ca97a4a1c78aedd", "author": {"user": {"login": "xy720", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/3b3fdeb71dac4b048fc447083ca97a4a1c78aedd", "committedDate": "2020-06-25T01:24:42Z", "message": "remove unuse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e768052ebcfa9287cc78c28c91f40aca22e8a1dd", "author": {"user": {"login": "xy720", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/e768052ebcfa9287cc78c28c91f40aca22e8a1dd", "committedDate": "2020-06-25T02:52:43Z", "message": "fix memory leak"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d3f884e28af0773893a8822f830c989b0a6ac85", "author": {"user": {"login": "xy720", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/6d3f884e28af0773893a8822f830c989b0a6ac85", "committedDate": "2020-06-25T08:46:38Z", "message": "fix ut"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MjYyODYz", "url": "https://github.com/apache/incubator-doris/pull/3945#pullrequestreview-438262863", "createdAt": "2020-06-26T12:43:56Z", "commit": {"oid": "6d3f884e28af0773893a8822f830c989b0a6ac85"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjo0Mzo1NlrOGpfeQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzozMjoyOVrOGphCbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2MDQ0OQ==", "bodyText": "Here are 2 constructors of FileCache, and the difference is the first own the cache, the second does not own the cache.\nSo you should first add new field _is_cache_owned to indicate whether it owns the cache.\nSecondly, to modify the deconstructor of FileCache, only reset the cache if _is_cache_owned is true.", "url": "https://github.com/apache/incubator-doris/pull/3945#discussion_r446160449", "createdAt": "2020-06-26T12:43:56Z", "author": {"login": "morningman"}, "path": "be/src/util/file_cache.h", "diffHunk": "@@ -104,8 +104,16 @@ class FileCache {\n     // the number of files open at any given time.\n     FileCache(const std::string& cache_name, int max_open_files);\n \n+    // Creates a new file cache with given cache.\n+    //\n+    // The 'cache_name' is used to disambiguate amongst other file cache\n+    // instances.\n+    FileCache(const std::string& cache_name, std::shared_ptr<Cache> cache);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3f884e28af0773893a8822f830c989b0a6ac85"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2MTYzOQ==", "bodyText": "remove the unused code.", "url": "https://github.com/apache/incubator-doris/pull/3945#discussion_r446161639", "createdAt": "2020-06-26T12:46:11Z", "author": {"login": "morningman"}, "path": "be/src/olap/storage_engine.cpp", "diffHunk": "@@ -503,7 +507,8 @@ void StorageEngine::clear_transaction_task(const TTransactionId transaction_id,\n \n void StorageEngine::_start_clean_fd_cache() {\n     VLOG(10) << \"start clean file descritpor cache\";\n-    FileHandler::get_fd_cache()->prune();\n+    // FileHandler::get_fd_cache()->prune();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3f884e28af0773893a8822f830c989b0a6ac85"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2MTkyMg==", "bodyText": "and comment for this field", "url": "https://github.com/apache/incubator-doris/pull/3945#discussion_r446161922", "createdAt": "2020-06-26T12:46:48Z", "author": {"login": "morningman"}, "path": "be/src/olap/storage_engine.h", "diffHunk": "@@ -297,6 +301,8 @@ class StorageEngine {\n     Cache* _file_descriptor_lru_cache;\n     Cache* _index_stream_lru_cache;\n \n+    std::shared_ptr<Cache> _file_cache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3f884e28af0773893a8822f830c989b0a6ac85"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2MzE2MA==", "bodyText": "Add comment to emphasize that the _file_cache must be created before FileBlockManager.", "url": "https://github.com/apache/incubator-doris/pull/3945#discussion_r446163160", "createdAt": "2020-06-26T12:49:18Z", "author": {"login": "morningman"}, "path": "be/src/olap/storage_engine.cpp", "diffHunk": "@@ -157,6 +158,8 @@ Status StorageEngine::_open() {\n \n     _index_stream_lru_cache = new_lru_cache(config::index_stream_cache_capacity);\n \n+    _file_cache.reset(new_lru_cache(config::file_descriptor_cache_capacity));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3f884e28af0773893a8822f830c989b0a6ac85"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2NTE2Mg==", "bodyText": "2 problems:\n\nYou should check that the storage engine is truly \"opened\", not just created, or the _file_cache in storage engine is sill null.\nIf StorageEngine::instance() == nullptr, the _s_fd_cache is null either. This could cause problems.\n\nFor problem 2, I suggest that you can modify the open_with_cache() method as below:\nOLAPStatus FileHandler::open_with_cache(const string& file_name, int flag) {\n    if (_cache == nullptr) {\n        return open(file_name, flag);\n    }\n\n    ....\n}", "url": "https://github.com/apache/incubator-doris/pull/3945#discussion_r446165162", "createdAt": "2020-06-26T12:53:27Z", "author": {"login": "morningman"}, "path": "be/src/olap/file_helper.cpp", "diffHunk": "@@ -44,9 +45,19 @@ FileHandler::FileHandler() :\n         _is_using_cache(false),\n         _cache_handle(NULL) {\n     static std::once_flag once_flag;\n-    std::call_once(once_flag, [] {\n-        _s_fd_cache = new_lru_cache(config::file_descriptor_cache_capacity);\n-    });\n+    #ifdef BE_TEST\n+        std::call_once(once_flag, [] {\n+            _s_fd_cache = new_lru_cache(config::file_descriptor_cache_capacity);\n+        });\n+    #else\n+        // storage engine may not be opened when doris try to read and write \n+        // temp file under the storage root path. So we need to check it.\n+        if (StorageEngine::instance() != nullptr) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3f884e28af0773893a8822f830c989b0a6ac85"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE4NjA5Mg==", "bodyText": "And also, other place where _s_fd_cache is used should also be taken care of. The release method can be private, so it will only be called by close()", "url": "https://github.com/apache/incubator-doris/pull/3945#discussion_r446186092", "createdAt": "2020-06-26T13:32:29Z", "author": {"login": "morningman"}, "path": "be/src/olap/file_helper.cpp", "diffHunk": "@@ -44,9 +45,19 @@ FileHandler::FileHandler() :\n         _is_using_cache(false),\n         _cache_handle(NULL) {\n     static std::once_flag once_flag;\n-    std::call_once(once_flag, [] {\n-        _s_fd_cache = new_lru_cache(config::file_descriptor_cache_capacity);\n-    });\n+    #ifdef BE_TEST\n+        std::call_once(once_flag, [] {\n+            _s_fd_cache = new_lru_cache(config::file_descriptor_cache_capacity);\n+        });\n+    #else\n+        // storage engine may not be opened when doris try to read and write \n+        // temp file under the storage root path. So we need to check it.\n+        if (StorageEngine::instance() != nullptr) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2NTE2Mg=="}, "originalCommit": {"oid": "6d3f884e28af0773893a8822f830c989b0a6ac85"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73fa1b026ebf66b1eae6ef29e775d9dd36b6a409", "author": {"user": {"login": "xy720", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/73fa1b026ebf66b1eae6ef29e775d9dd36b6a409", "committedDate": "2020-06-28T11:07:31Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzgxNDEx", "url": "https://github.com/apache/incubator-doris/pull/3945#pullrequestreview-438781411", "createdAt": "2020-06-28T13:39:41Z", "commit": {"oid": "73fa1b026ebf66b1eae6ef29e775d9dd36b6a409"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2192, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}