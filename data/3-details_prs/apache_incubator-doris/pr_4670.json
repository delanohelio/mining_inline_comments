{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyODIzMzMw", "number": 4670, "title": "[Optimize] Optimize the execution model of compaction to limit memory consumption", "bodyText": "Proposed changes\nCurrently, there are M threads to do base compaction and N threads to do cumulative compaction for each disk.  Too many compaction tasks may run out of memory, so the max concurrency of running compaction tasks is limited by semaphore. If the running threads cost too much memory, we can't defense it. In addition, reducing concurrency to avoid OOM will lead to some compaction tasks can't be executed in time and we may encounter more heavy compaction.  Therefore, concurrency limitation is not enough.\nThe strategy proposed in #3624  may be effective to solve the OOM.\nA CompactionPermitLimiter is used for compaction limitation, and use single-producer/multi-consumer model. Producer will try to generate compaction tasks and acquire permits for each task.  The compaction task which can hold permits will be executed in thread pool and each finished task will release its permits.\npermits should be applied for before a compaction task can execute. When the sum of permits held by executing compaction tasks reaches a threshold, subsequent compaction task will be no longer allowed, until some permits are released. Tablet compaction score is used as permits of compaction task here.\nTo some extent, memory consumption can be limited by setting appropriate permits threshold.\nTypes of changes\nWhat types of changes does your code introduce to Doris?\nPut an x in the boxes that apply\n\n[] Bugfix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n[] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n[] Documentation Update (if none of the other choices apply)\n Code refactor (Modify the code structure, format the code, etc...)\n\nChecklist\nPut an x in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code.\n\n Issue (Fix #3624)have described the bug/feature there in detail\n Compiling and unit tests pass locally with my changes\n[] I have added tests that prove my fix is effective or that my feature works\n[] If this change need a document change, I have updated the document\n Any dependent changes have been merged", "createdAt": "2020-09-25T04:18:56Z", "url": "https://github.com/apache/incubator-doris/pull/4670", "merged": true, "mergeCommit": {"oid": "eba595583e923c873295a02599ec47e0bafc68b2"}, "closed": true, "closedAt": "2020-10-11T03:39:26Z", "author": {"login": "weizuo93"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKGUwngH2gAyNDkyODIzMzMwOjEwODljZGE2ZmQ4YTM5OWFiZjc0NDA1MjM0NGUxMWZmN2ExMzk1Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdRKyGJgFqTUwNjA5NzQ1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1089cda6fd8a399abf744052344e11ff7a139528", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/1089cda6fd8a399abf744052344e11ff7a139528", "committedDate": "2020-09-18T14:18:35Z", "message": "compaction memory optimize and code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d96e0ee99022f00e595aef460f7a87b780b71675", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/d96e0ee99022f00e595aef460f7a87b780b71675", "committedDate": "2020-09-20T12:53:58Z", "message": "compaction memory optimize and code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "908788aab68dbdfd4f98698bfcef1b633207c40d", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/908788aab68dbdfd4f98698bfcef1b633207c40d", "committedDate": "2020-09-20T13:03:16Z", "message": "compaction memory optimize and code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bea5d544020c7121be2e8523393714e204623a7", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/4bea5d544020c7121be2e8523393714e204623a7", "committedDate": "2020-09-20T13:04:36Z", "message": "compaction memory optimize and code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72e4e7973aee215fcca0b223305e335d3e4ec83f", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/72e4e7973aee215fcca0b223305e335d3e4ec83f", "committedDate": "2020-09-20T13:11:48Z", "message": "compaction memory optimize and code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "506afdb34de9ba61a1422ca0f52c7ae9681ff259", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/506afdb34de9ba61a1422ca0f52c7ae9681ff259", "committedDate": "2020-09-21T06:45:41Z", "message": "add compaction status for tablet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dce66cde3ab3a22640c5f2464164b88705482ea7", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/dce66cde3ab3a22640c5f2464164b88705482ea7", "committedDate": "2020-09-21T08:00:25Z", "message": "add lambda function for submit callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab4722a952caadcd3293ad7ddd6506b5fde2a897", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/ab4722a952caadcd3293ad7ddd6506b5fde2a897", "committedDate": "2020-09-21T08:48:12Z", "message": "code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71cffec1357f889df89743cad93de256f2aa7ca4", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/71cffec1357f889df89743cad93de256f2aa7ca4", "committedDate": "2020-09-21T09:17:59Z", "message": "code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64681973707871fa500f1dd889f800094f1f9e78", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/64681973707871fa500f1dd889f800094f1f9e78", "committedDate": "2020-09-21T11:32:25Z", "message": "code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f784bf9bef1f36cfdc3c531f2a5646461b6f219", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/5f784bf9bef1f36cfdc3c531f2a5646461b6f219", "committedDate": "2020-09-21T11:48:14Z", "message": "code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9406e7d1da7ac0b9448df54d4297878b5a7bd3b", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/e9406e7d1da7ac0b9448df54d4297878b5a7bd3b", "committedDate": "2020-09-22T07:42:45Z", "message": "add metrics and comment for compaction limiter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7b614c3f7932d90edd6c5457533c544fe0c1c29", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/f7b614c3f7932d90edd6c5457533c544fe0c1c29", "committedDate": "2020-09-22T10:38:22Z", "message": "modify metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbe9b575485686d351e394c85760df0df4c9541e", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/fbe9b575485686d351e394c85760df0df4c9541e", "committedDate": "2020-09-22T13:26:16Z", "message": "modify metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7200398e5ea4c427b42afc9afde90481e62f173f", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/7200398e5ea4c427b42afc9afde90481e62f173f", "committedDate": "2020-09-23T01:59:51Z", "message": "modify metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8652b55ee3148a83c2f27ed78941f2a20b455743", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/8652b55ee3148a83c2f27ed78941f2a20b455743", "committedDate": "2020-09-23T03:15:47Z", "message": "modify metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "644b12606dbe27dacceb2f5b2aae35ce0aeb2449", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/644b12606dbe27dacceb2f5b2aae35ce0aeb2449", "committedDate": "2020-09-23T07:06:00Z", "message": "modify config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ce8595e0b183ed9a1ebaa8b52c66db2dd42ffcc", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/6ce8595e0b183ed9a1ebaa8b52c66db2dd42ffcc", "committedDate": "2020-09-23T12:08:57Z", "message": "modify config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7dd382de92f2f6c411eb7208f46644927122770", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/b7dd382de92f2f6c411eb7208f46644927122770", "committedDate": "2020-09-24T12:33:11Z", "message": "modify metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "256d25851ca69bc0d7f5ec38f37ce6861f7df94e", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/256d25851ca69bc0d7f5ec38f37ce6861f7df94e", "committedDate": "2020-09-24T13:47:48Z", "message": "modify metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9484f52d6ade61188f34aeee8717d236de467350", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/9484f52d6ade61188f34aeee8717d236de467350", "committedDate": "2020-09-24T14:10:54Z", "message": "modify metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18c2933b654f25a878d5ad75e172289bf82b3689", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/18c2933b654f25a878d5ad75e172289bf82b3689", "committedDate": "2020-09-25T03:24:40Z", "message": "modify metrics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2OTM2MTA3", "url": "https://github.com/apache/incubator-doris/pull/4670#pullrequestreview-496936107", "createdAt": "2020-09-26T03:28:38Z", "commit": {"oid": "18c2933b654f25a878d5ad75e172289bf82b3689"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwMzoyODozOVrOHYdWUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNDo0Mjo1MFrOHYgrTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQwODcyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                CONF_mBool(enable_over_sold, \"true\");\n          \n          \n            \n                CONF_mBool(enable_compaction_permit_over_sold, \"true\");", "url": "https://github.com/apache/incubator-doris/pull/4670#discussion_r495408723", "createdAt": "2020-09-26T03:28:39Z", "author": {"login": "morningman"}, "path": "be/src/common/config.h", "diffHunk": "@@ -310,13 +306,25 @@ namespace config {\n     // if compaction of a tablet failed, this tablet should not be chosen to\n     // compaction until this interval passes.\n     CONF_mInt64(min_compaction_failure_interval_sec, \"600\"); // 10 min\n-    // Too many compaction tasks may run out of memory.\n-    // This config is to limit the max concurrency of running compaction tasks.\n-    // -1 means no limit, and the max concurrency will be:\n-    //      C = (cumulative_compaction_num_threads_per_disk + base_compaction_num_threads_per_disk) * dir_num\n-    // set it to larger than C will be set to equal to C.\n-    // This config can be set to 0, which means to forbid any compaction, for some special cases.\n-    CONF_Int32(max_compaction_concurrency, \"-1\");\n+\n+    // This config can be set to limit thread number in compaction thread pool.\n+    CONF_mInt32(min_compaction_threads, \"10\");\n+    CONF_mInt32(max_compaction_threads, \"10\");\n+\n+    // The upper limit of \"permits\" held by all compaction tasks. This config can be set to limit memory consumption for compaction.\n+    CONF_mInt64(total_permits_for_compaction_score, \"10000\")\n+\n+    // Whether compaction task is allowed to start when compaction score of current tablet is out of upper limit.\n+    CONF_mBool(enable_over_sold, \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18c2933b654f25a878d5ad75e172289bf82b3689"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyNzQyMA==", "bodyText": "The default cumulative_compaction_rounds_for_each_base_compaction_round is 9, and default generate_compaction_tasks_interval_seconds is 2. So generally, it will create a base compaction task for every 18 seconds?", "url": "https://github.com/apache/incubator-doris/pull/4670#discussion_r495427420", "createdAt": "2020-09-26T07:30:56Z", "author": {"login": "morningman"}, "path": "be/src/olap/olap_server.cpp", "diffHunk": "@@ -391,4 +313,70 @@ void StorageEngine::_tablet_checkpoint_callback(DataDir* data_dir) {\n     } while (!_stop_background_threads_latch.wait_for(MonoDelta::FromSeconds(interval)));\n }\n \n-}  // namespace doris\n+void StorageEngine::_compaction_tasks_producer_callback() {\n+#ifdef GOOGLE_PROFILER\n+    ProfilerRegisterThread();\n+#endif\n+    LOG(INFO) << \"try to start compaction producer process!\";\n+\n+    std::vector<DataDir*> data_dirs;\n+    for (auto& tmp_store : _store_map) {\n+        data_dirs.push_back(tmp_store.second);\n+    }\n+\n+    int round = 0;\n+    CompactionType compaction_type;\n+    do {\n+        if (!config::disable_auto_compaction) {\n+            if (round < config::cumulative_compaction_rounds_for_each_base_compaction_round) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18c2933b654f25a878d5ad75e172289bf82b3689"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyODgwMQ==", "bodyText": "I think we can find more than one tablet for each data dir at this time.\nthe number of tablet found here can be compaction_task_num_per_disk", "url": "https://github.com/apache/incubator-doris/pull/4670#discussion_r495428801", "createdAt": "2020-09-26T07:48:10Z", "author": {"login": "morningman"}, "path": "be/src/olap/olap_server.cpp", "diffHunk": "@@ -391,4 +313,70 @@ void StorageEngine::_tablet_checkpoint_callback(DataDir* data_dir) {\n     } while (!_stop_background_threads_latch.wait_for(MonoDelta::FromSeconds(interval)));\n }\n \n-}  // namespace doris\n+void StorageEngine::_compaction_tasks_producer_callback() {\n+#ifdef GOOGLE_PROFILER\n+    ProfilerRegisterThread();\n+#endif\n+    LOG(INFO) << \"try to start compaction producer process!\";\n+\n+    std::vector<DataDir*> data_dirs;\n+    for (auto& tmp_store : _store_map) {\n+        data_dirs.push_back(tmp_store.second);\n+    }\n+\n+    int round = 0;\n+    CompactionType compaction_type;\n+    do {\n+        if (!config::disable_auto_compaction) {\n+            if (round < config::cumulative_compaction_rounds_for_each_base_compaction_round) {\n+                compaction_type = CompactionType::CUMULATIVE_COMPACTION;\n+                round++;\n+            } else {\n+                compaction_type = CompactionType::BASE_COMPACTION;\n+                round = 0;\n+            }\n+            LOG(INFO) << \"try to generate a batch of compaction tasks!\";\n+            vector<TabletSharedPtr> tablets_compaction =\n+                    _compaction_tasks_generator(compaction_type, data_dirs);\n+            for (const auto& tablet : tablets_compaction) {\n+                if (tablet->data_dir()->get_disks_compaction_num() <\n+                    config::compaction_task_num_per_disk) {\n+                    int64_t permits = tablet->calc_compaction_score(compaction_type);\n+                    if (_permit_limiter.request(permits)) {\n+                        if (compaction_type == CompactionType::CUMULATIVE_COMPACTION) {\n+                            _compaction_thread_pool->submit_func([this, tablet, permits]() {\n+                                CgroupsMgr::apply_system_cgroup();\n+                                this->_perform_cumulative_compaction(tablet);\n+                                this->_permit_limiter.release(permits);\n+                            });\n+                        } else {\n+                            _compaction_thread_pool->submit_func([this, tablet, permits]() {\n+                                CgroupsMgr::apply_system_cgroup();\n+                                this->_perform_base_compaction(tablet);\n+                                this->_permit_limiter.release(permits);\n+                            });\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    } while (!_stop_background_threads_latch.wait_for(\n+            MonoDelta::FromSeconds(config::generate_compaction_tasks_interval_seconds)));\n+}\n+\n+vector<TabletSharedPtr> StorageEngine::_compaction_tasks_generator(\n+        CompactionType compaction_type, std::vector<DataDir*> data_dirs) {\n+    vector<TabletSharedPtr> tablets_compaction;\n+    std::random_shuffle(data_dirs.begin(), data_dirs.end());\n+    for (auto data_dir : data_dirs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18c2933b654f25a878d5ad75e172289bf82b3689"}, "originalPosition": 216}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ2MzI0NQ==", "bodyText": "And I also test this with following case:\n\nOnly 1 BE with 1 data dir.\nCreate one table with 100 buckets.\ninsert data into this table for every 5 seconds.\n\nThe compaction is triggered every 2 seconds. And each compaction task cost just 0.x seconds. But the average version count of tablets is about 50, and can not be lower.\nSo I think the way to generate compaction tasks through polling may not be appropriate. One possible way is to generate compaction tasks through triggering.\nBased on polling, currently only one task can be done in 2 seconds, and based on triggering, in my case, it can be done 500 times per second (because the amount of data in each batch is very small in the case of high-frequency load)", "url": "https://github.com/apache/incubator-doris/pull/4670#discussion_r495463245", "createdAt": "2020-09-26T14:42:50Z", "author": {"login": "morningman"}, "path": "be/src/olap/olap_server.cpp", "diffHunk": "@@ -391,4 +313,70 @@ void StorageEngine::_tablet_checkpoint_callback(DataDir* data_dir) {\n     } while (!_stop_background_threads_latch.wait_for(MonoDelta::FromSeconds(interval)));\n }\n \n-}  // namespace doris\n+void StorageEngine::_compaction_tasks_producer_callback() {\n+#ifdef GOOGLE_PROFILER\n+    ProfilerRegisterThread();\n+#endif\n+    LOG(INFO) << \"try to start compaction producer process!\";\n+\n+    std::vector<DataDir*> data_dirs;\n+    for (auto& tmp_store : _store_map) {\n+        data_dirs.push_back(tmp_store.second);\n+    }\n+\n+    int round = 0;\n+    CompactionType compaction_type;\n+    do {\n+        if (!config::disable_auto_compaction) {\n+            if (round < config::cumulative_compaction_rounds_for_each_base_compaction_round) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyNzQyMA=="}, "originalCommit": {"oid": "18c2933b654f25a878d5ad75e172289bf82b3689"}, "originalPosition": 176}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c6879b0d7723e7b0daf2dbd45bffa1e2009b323", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/5c6879b0d7723e7b0daf2dbd45bffa1e2009b323", "committedDate": "2020-09-27T14:16:19Z", "message": "optimize compaction tasks producer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c343f47cff3267eb364be9bf6bb72f53ccdb63d", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/7c343f47cff3267eb364be9bf6bb72f53ccdb63d", "committedDate": "2020-09-28T02:19:22Z", "message": "modify compaction tasks producer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e49f5339bac6b0203dda9c14a0c02adb2e6ff04", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/3e49f5339bac6b0203dda9c14a0c02adb2e6ff04", "committedDate": "2020-09-28T03:13:18Z", "message": "modify compaction tasks producer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab5f6b30aa44e39c5b91104b4b63403ffd278637", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/ab5f6b30aa44e39c5b91104b4b63403ffd278637", "committedDate": "2020-09-28T11:21:36Z", "message": "optimize compaction memory and code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0206b3586aa17d86a2e12e445fcf94b5f32c74c", "author": {"user": {"login": "weizuo93", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/a0206b3586aa17d86a2e12e445fcf94b5f32c74c", "committedDate": "2020-09-30T02:26:11Z", "message": "compaction log modification"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDk3NDU2", "url": "https://github.com/apache/incubator-doris/pull/4670#pullrequestreview-506097456", "createdAt": "2020-10-10T13:27:43Z", "commit": {"oid": "a0206b3586aa17d86a2e12e445fcf94b5f32c74c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4853, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}