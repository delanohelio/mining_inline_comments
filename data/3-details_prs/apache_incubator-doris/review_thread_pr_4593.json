{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1OTE4OTY5", "number": 4593, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMTo0ODo1N1rOEtSLWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMzoyNToxNVrOEuumPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTE5MTk0OnYy", "diffSide": "RIGHT", "path": "be/src/olap/compaction.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMTo0ODo1N1rOHg_Qcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyODoyN1rOHjBXzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM1Mjg4Mw==", "bodyText": "Is it appropriate to print the warning log here?\nI think this function only deals with specific logic, and the caller can decide whether to print the log. This allows this function to be used in more scenarios.", "url": "https://github.com/apache/incubator-doris/pull/4593#discussion_r504352883", "createdAt": "2020-10-14T01:48:57Z", "author": {"login": "imay"}, "path": "be/src/olap/compaction.cpp", "diffHunk": "@@ -181,6 +181,30 @@ OLAPStatus Compaction::gc_unused_rowsets() {\n     return OLAP_SUCCESS;\n }\n \n+// find the longest consecutive version path in \"rowset\", from begining.\n+OLAPStatus Compaction::find_longest_consecutive_version(vector<RowsetSharedPtr>* rowsets) {\n+    if (rowsets->empty()) {\n+        return OLAP_SUCCESS;\n+    }\n+    RowsetSharedPtr prev_rowset = rowsets->front();\n+    size_t i = 1;\n+    for (; i < rowsets->size(); ++i) {\n+        RowsetSharedPtr rowset = (*rowsets)[i];\n+        if (rowset->start_version() != prev_rowset->end_version() + 1) {\n+            LOG(WARNING) << \"There are missed versions among rowsets. \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b66841b330a03a7053e8e90f08d96487773bb8a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ4NDY4Nw==", "bodyText": "Done", "url": "https://github.com/apache/incubator-doris/pull/4593#discussion_r506484687", "createdAt": "2020-10-16T14:28:27Z", "author": {"login": "morningman"}, "path": "be/src/olap/compaction.cpp", "diffHunk": "@@ -181,6 +181,30 @@ OLAPStatus Compaction::gc_unused_rowsets() {\n     return OLAP_SUCCESS;\n }\n \n+// find the longest consecutive version path in \"rowset\", from begining.\n+OLAPStatus Compaction::find_longest_consecutive_version(vector<RowsetSharedPtr>* rowsets) {\n+    if (rowsets->empty()) {\n+        return OLAP_SUCCESS;\n+    }\n+    RowsetSharedPtr prev_rowset = rowsets->front();\n+    size_t i = 1;\n+    for (; i < rowsets->size(); ++i) {\n+        RowsetSharedPtr rowset = (*rowsets)[i];\n+        if (rowset->start_version() != prev_rowset->end_version() + 1) {\n+            LOG(WARNING) << \"There are missed versions among rowsets. \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM1Mjg4Mw=="}, "originalCommit": {"oid": "9b66841b330a03a7053e8e90f08d96487773bb8a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NDMzNDA2OnYy", "diffSide": "RIGHT", "path": "be/src/olap/cumulative_compaction.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMzoyNToxNVrOHjT4Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMzoyNToxNVrOHjT4Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4Nzg2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (missing_versions.empty()) {\n          \n          \n            \n                if (!missing_versions.empty()) {", "url": "https://github.com/apache/incubator-doris/pull/4593#discussion_r506787867", "createdAt": "2020-10-17T03:25:15Z", "author": {"login": "imay"}, "path": "be/src/olap/cumulative_compaction.cpp", "diffHunk": "@@ -83,7 +83,18 @@ OLAPStatus CumulativeCompaction::pick_rowsets_to_compact() {\n         return OLAP_ERR_CUMULATIVE_NO_SUITABLE_VERSIONS;\n     }\n \n-    RETURN_NOT_OK(check_version_continuity(candidate_rowsets));\n+    // candidate_rowsets may not be continuous. Because some rowset may not be selected\n+    // because the protection time has not expired(config::cumulative_compaction_skip_window_seconds).\n+    // So we need to choose the longest continuous path from it.\n+    std::vector<Version> missing_versions;\n+    RETURN_NOT_OK(find_longest_consecutive_version(&candidate_rowsets, &missing_versions));\n+    if (missing_versions.empty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5470d315a0b73f92b14eaa4942cd931f604e8b8a"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1102, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}