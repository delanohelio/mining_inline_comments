{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NTk5MTYy", "number": 3214, "title": "Fix cast date type return wrong result", "bodyText": "For #3213\nWe have multiple date type, and we also need to cast between different date types.\nIf not cast, it will cause problems when binarypredicate", "createdAt": "2020-03-27T07:40:54Z", "url": "https://github.com/apache/incubator-doris/pull/3214", "merged": true, "mergeCommit": {"oid": "3f247b0d2dc424335c0b81259733cc8cbc2fcc1f"}, "closed": true, "closedAt": "2020-04-03T04:08:19Z", "author": {"login": "HangyuanLiu"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRroZNAH2gAyMzk0NTk5MTYyOjhjYjI2ZWM1MjlkY2Y2NzVlYTdjMDEwZjZjMmFjYWQzZmJiNTk1ZTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcT45VUgFqTM4NjkyNDUyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8cb26ec529dcf675ea7c010f6c2acad3fbb595e0", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/8cb26ec529dcf675ea7c010f6c2acad3fbb595e0", "committedDate": "2020-03-27T07:32:50Z", "message": "fix date type cast"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNzMyMjMw", "url": "https://github.com/apache/incubator-doris/pull/3214#pullrequestreview-382732230", "createdAt": "2020-03-27T10:19:26Z", "commit": {"oid": "8cb26ec529dcf675ea7c010f6c2acad3fbb595e0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDoxOToyNlrOF8q_9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDoyMDoyNFrOF8rB7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE2MzM4MA==", "bodyText": "Are you sure only change this point is enough\uff1f\nDo we need to change this point:\nFunctionCallExpr::analyzeImpl\n        Type[] args = fn.getArgs();\n        if (args.length > 0) {\n            // Implicitly cast all the children to match the function if necessary\n            for (int i = 0; i < argTypes.length; ++i) {\n                // For varargs, we must compare with the last type in callArgs.argTypes.\n                int ix = Math.min(args.length - 1, i);\n                if (!argTypes[i].matchesType(args[ix]) && !(\n                        argTypes[i].isDateType() && args[ix].isDateType())) {\n                    uncheckedCastChild(args[ix], i);\n                    //if (argTypes[i] != args[ix]) castChild(args[ix], i);\n                }\n            }\n        }", "url": "https://github.com/apache/incubator-doris/pull/3214#discussion_r399163380", "createdAt": "2020-03-27T10:19:26Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "diffHunk": "@@ -319,7 +319,7 @@ protected void toThrift(TExprNode msg) {\n \n     @Override\n     protected Expr uncheckedCastTo(Type targetType) throws AnalysisException {\n-        if (targetType.isDateType()) {\n+        if (targetType.equals(this.type)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb26ec529dcf675ea7c010f6c2acad3fbb595e0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE2Mzg4NQ==", "bodyText": "Would better also add a test to QueryPlanTest.", "url": "https://github.com/apache/incubator-doris/pull/3214#discussion_r399163885", "createdAt": "2020-03-27T10:20:24Z", "author": {"login": "kangkaisen"}, "path": "fe/src/test/java/org/apache/doris/analysis/DateLiteralTest.java", "diffHunk": "@@ -55,4 +55,23 @@ public void TwoDigitYear() {\n         }\n         Assert.assertFalse(hasException);\n     }\n+\n+    @Test\n+    public void uncheckedCastTo() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb26ec529dcf675ea7c010f6c2acad3fbb595e0"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzA4MzQ0", "url": "https://github.com/apache/incubator-doris/pull/3214#pullrequestreview-383308344", "createdAt": "2020-03-28T12:18:45Z", "commit": {"oid": "8cb26ec529dcf675ea7c010f6c2acad3fbb595e0"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNDg5MTg4", "url": "https://github.com/apache/incubator-doris/pull/3214#pullrequestreview-383489188", "createdAt": "2020-03-30T01:51:02Z", "commit": {"oid": "8cb26ec529dcf675ea7c010f6c2acad3fbb595e0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwMTo1MTowMlrOF9XXRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwMTo1MTowMlrOF9XXRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg5MDI0NQ==", "bodyText": "Why not return a new DateLiteral when targetType and this.type are different but both dateType.", "url": "https://github.com/apache/incubator-doris/pull/3214#discussion_r399890245", "createdAt": "2020-03-30T01:51:02Z", "author": {"login": "imay"}, "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "diffHunk": "@@ -319,7 +319,7 @@ protected void toThrift(TExprNode msg) {\n \n     @Override\n     protected Expr uncheckedCastTo(Type targetType) throws AnalysisException {\n-        if (targetType.isDateType()) {\n+        if (targetType.equals(this.type)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb26ec529dcf675ea7c010f6c2acad3fbb595e0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MjQ2MDk4", "url": "https://github.com/apache/incubator-doris/pull/3214#pullrequestreview-385246098", "createdAt": "2020-04-01T03:41:11Z", "commit": {"oid": "db30dcb68aee28b4904c9bfee122aa322e8042b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMzo0MToxMVrOF-vwsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMzo0MToxMVrOF-vwsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMzODU0Nw==", "bodyText": "If isDateType is true. The type could only be DATE and DATETIME.\nSo one if  else if enough?", "url": "https://github.com/apache/incubator-doris/pull/3214#discussion_r401338547", "createdAt": "2020-04-01T03:41:11Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "diffHunk": "@@ -319,7 +319,17 @@ protected void toThrift(TExprNode msg) {\n \n     @Override\n     protected Expr uncheckedCastTo(Type targetType) throws AnalysisException {\n-        if (targetType.equals(this.type)) {\n+        if (targetType.isDateType()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db30dcb68aee28b4904c9bfee122aa322e8042b8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1eb4309f865f5c86703dfb712648b4c43b16aa7", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/e1eb4309f865f5c86703dfb712648b4c43b16aa7", "committedDate": "2020-04-01T04:41:53Z", "message": "fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db30dcb68aee28b4904c9bfee122aa322e8042b8", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/db30dcb68aee28b4904c9bfee122aa322e8042b8", "committedDate": "2020-04-01T03:13:55Z", "message": "fix"}, "afterCommit": {"oid": "e1eb4309f865f5c86703dfb712648b4c43b16aa7", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/e1eb4309f865f5c86703dfb712648b4c43b16aa7", "committedDate": "2020-04-01T04:41:53Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTA2MDky", "url": "https://github.com/apache/incubator-doris/pull/3214#pullrequestreview-385506092", "createdAt": "2020-04-01T11:45:26Z", "commit": {"oid": "e1eb4309f865f5c86703dfb712648b4c43b16aa7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMTo0NToyNlrOF-83xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMTo0NToyNlrOF-83xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1MzM1MQ==", "bodyText": "If Date not to convert DateTime, is OK?", "url": "https://github.com/apache/incubator-doris/pull/3214#discussion_r401553351", "createdAt": "2020-04-01T11:45:26Z", "author": {"login": "chaoyli"}, "path": "fe/src/main/java/org/apache/doris/analysis/DateLiteral.java", "diffHunk": "@@ -320,6 +320,13 @@ protected void toThrift(TExprNode msg) {\n     @Override\n     protected Expr uncheckedCastTo(Type targetType) throws AnalysisException {\n         if (targetType.isDateType()) {\n+            if (targetType.equals(Type.DATE)) {\n+                this.castToDate();                            \n+            } else if (targetType.equals(Type.DATETIME)) {\n+                this.type = Type.DATETIME;                            ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1eb4309f865f5c86703dfb712648b4c43b16aa7"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2OTIzMzA1", "url": "https://github.com/apache/incubator-doris/pull/3214#pullrequestreview-386923305", "createdAt": "2020-04-03T04:02:38Z", "commit": {"oid": "e1eb4309f865f5c86703dfb712648b4c43b16aa7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2OTI0NTI5", "url": "https://github.com/apache/incubator-doris/pull/3214#pullrequestreview-386924529", "createdAt": "2020-04-03T04:07:57Z", "commit": {"oid": "e1eb4309f865f5c86703dfb712648b4c43b16aa7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3102, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}