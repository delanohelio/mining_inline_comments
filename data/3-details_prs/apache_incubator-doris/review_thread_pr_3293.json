{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNzc4MjIx", "number": 3293, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNDo0NVrODwrEQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDoyOToxMVrODyGS-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzYzODQxOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNDo0NVrOGDzb4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwODoxNjoxNlrOGD0TZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTYzMg==", "bodyText": "Could  rename aLong and value  to src and target", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r406641632", "createdAt": "2020-04-10T07:34:45Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -818,24 +817,26 @@ public boolean isPreviousTransactionsFinished(long endTransactionId, long dbId,\n         return true;\n     }\n \n-    // check if there exists a intersection between the source tableId list and target tableId list\n-    // if one of them is null or empty, that means that we don't know related tables in tableList,\n-    // we think the two lists may have intersection for right ordered txns\n+    /**\n+     * check if there exists a intersection between the source tableId list and target tableId list\n+     * if one of them is null or empty, that means that we don't know related tables in tableList,\n+     * we think the two lists may have intersection for right ordered txns\n+     */\n     public boolean isIntersectionNotEmpty(List<Long> sourceTableIdList, List<Long> targetTableIdList) {\n         if (CollectionUtils.isEmpty(sourceTableIdList) || CollectionUtils.isEmpty(targetTableIdList)) {\n             return true;\n         }\n-        for (int i = 0; i < sourceTableIdList.size(); i++) {\n-            for (int j = 0; j < targetTableIdList.size(); j++) {\n-                if (sourceTableIdList.get(i).equals(targetTableIdList.get(j))) {\n+        for (Long aLong : sourceTableIdList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8793c5a87a96ffc44d7354a8d30dc3dd9076de"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY1NTg0Nw==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r406655847", "createdAt": "2020-04-10T08:16:16Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -818,24 +817,26 @@ public boolean isPreviousTransactionsFinished(long endTransactionId, long dbId,\n         return true;\n     }\n \n-    // check if there exists a intersection between the source tableId list and target tableId list\n-    // if one of them is null or empty, that means that we don't know related tables in tableList,\n-    // we think the two lists may have intersection for right ordered txns\n+    /**\n+     * check if there exists a intersection between the source tableId list and target tableId list\n+     * if one of them is null or empty, that means that we don't know related tables in tableList,\n+     * we think the two lists may have intersection for right ordered txns\n+     */\n     public boolean isIntersectionNotEmpty(List<Long> sourceTableIdList, List<Long> targetTableIdList) {\n         if (CollectionUtils.isEmpty(sourceTableIdList) || CollectionUtils.isEmpty(targetTableIdList)) {\n             return true;\n         }\n-        for (int i = 0; i < sourceTableIdList.size(); i++) {\n-            for (int j = 0; j < targetTableIdList.size(); j++) {\n-                if (sourceTableIdList.get(i).equals(targetTableIdList.get(j))) {\n+        for (Long aLong : sourceTableIdList) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTYzMg=="}, "originalCommit": {"oid": "ae8793c5a87a96ffc44d7354a8d30dc3dd9076de"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY3NDY1OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzo1MDo0OFrOGDzxSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwODoxNjoyMVrOGD0TgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0NzExMg==", "bodyText": "Would better rename coordinate to coordinateHost", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r406647112", "createdAt": "2020-04-10T07:50:48Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -1389,4 +1389,33 @@ public TransactionState getTransactionStateByCallbackId(long callbackId) {\n         }\n         return null;\n     }\n+\n+    public List<Long> getTransactionIdByCoordinateBe(String coordinate, int limit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8793c5a87a96ffc44d7354a8d30dc3dd9076de"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY1NTg3Mw==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r406655873", "createdAt": "2020-04-10T08:16:21Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -1389,4 +1389,33 @@ public TransactionState getTransactionStateByCallbackId(long callbackId) {\n         }\n         return null;\n     }\n+\n+    public List<Long> getTransactionIdByCoordinateBe(String coordinate, int limit) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0NzExMg=="}, "originalCommit": {"oid": "ae8793c5a87a96ffc44d7354a8d30dc3dd9076de"}, "originalPosition": 178}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjQ4MjgzOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMjozNzowMFrOGEM6aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMzowNjoxOFrOGENFYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1OTA1MQ==", "bodyText": "Why removing the preStatus != null check?", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r407059051", "createdAt": "2020-04-11T12:37:00Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -1148,8 +1149,7 @@ private void updateDBRunningTxnNum(TransactionStatus preStatus, TransactionState\n                 && (curTxnState.getTransactionStatus() == TransactionStatus.PREPARE\n                 || curTxnState.getTransactionStatus() == TransactionStatus.COMMITTED)) {\n             ++txnNum;\n-        } else if (preStatus != null\n-                && (preStatus == TransactionStatus.PREPARE\n+        } else if ((preStatus == TransactionStatus.PREPARE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097dc06677be4c957be0208903a079875d12bbd"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2MTg1OQ==", "bodyText": "because preStatus == TransactionStatus.PREPARE contains the preStatus != null check", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r407061859", "createdAt": "2020-04-11T13:06:18Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -1148,8 +1149,7 @@ private void updateDBRunningTxnNum(TransactionStatus preStatus, TransactionState\n                 && (curTxnState.getTransactionStatus() == TransactionStatus.PREPARE\n                 || curTxnState.getTransactionStatus() == TransactionStatus.COMMITTED)) {\n             ++txnNum;\n-        } else if (preStatus != null\n-                && (preStatus == TransactionStatus.PREPARE\n+        } else if ((preStatus == TransactionStatus.PREPARE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1OTA1MQ=="}, "originalCommit": {"oid": "0097dc06677be4c957be0208903a079875d12bbd"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjQ5MzgyOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMjo1MDowNFrOGEM_lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwNTowOTo1OVrOGEc5qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2MDM3Mg==", "bodyText": "In some clusters, FE and BE are deployed together.\nSo only by checking t.getCoordinator().contains(coordinateHost) will also abort those transactions\nwhich the coordinator is FE, not the BE, which is not expected.\nThe current value of the coordinator is an informal value, it is just for displaying the job information. If we want to use this coordinator field to do some logic control, we should make it formal, for example, by creating a new class \"TxnCoordinator\" to save the coordinator info.\nCurrently, the coordinator is either \"FE: 192.168.0.1\" or \"BE: 192.168.0.1\". So the new class \"TxnCoordinator\" may looks like:\nclass TxnCoordinator {\n    private String source;   // \"FE\" or \"BE\"\n    private String ip;    // the ip\n}\n\nAnd in getTransactionIdByCoordinateBe, we should get all transactions with the specified IP and source is BE.", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r407060372", "createdAt": "2020-04-11T12:50:04Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -1389,4 +1389,33 @@ public TransactionState getTransactionStateByCallbackId(long callbackId) {\n         }\n         return null;\n     }\n+\n+    public List<Long> getTransactionIdByCoordinateBe(String coordinateHost, int limit) {\n+        ArrayList<Long> txnIds = new ArrayList<>();\n+        readLock();\n+        try {\n+            idToTransactionState.values().stream()\n+                    .filter(t -> (t.getCoordinator().contains(coordinateHost) && (!t.getTransactionStatus().isFinalStatus())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0097dc06677be4c957be0208903a079875d12bbd"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2MTkwNg==", "bodyText": "OK, I will change it.", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r407061906", "createdAt": "2020-04-11T13:06:48Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -1389,4 +1389,33 @@ public TransactionState getTransactionStateByCallbackId(long callbackId) {\n         }\n         return null;\n     }\n+\n+    public List<Long> getTransactionIdByCoordinateBe(String coordinateHost, int limit) {\n+        ArrayList<Long> txnIds = new ArrayList<>();\n+        readLock();\n+        try {\n+            idToTransactionState.values().stream()\n+                    .filter(t -> (t.getCoordinator().contains(coordinateHost) && (!t.getTransactionStatus().isFinalStatus())))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2MDM3Mg=="}, "originalCommit": {"oid": "0097dc06677be4c957be0208903a079875d12bbd"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzMyMTAwMw==", "bodyText": "@morningman Done", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r407321003", "createdAt": "2020-04-13T05:09:59Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -1389,4 +1389,33 @@ public TransactionState getTransactionStateByCallbackId(long callbackId) {\n         }\n         return null;\n     }\n+\n+    public List<Long> getTransactionIdByCoordinateBe(String coordinateHost, int limit) {\n+        ArrayList<Long> txnIds = new ArrayList<>();\n+        readLock();\n+        try {\n+            idToTransactionState.values().stream()\n+                    .filter(t -> (t.getCoordinator().contains(coordinateHost) && (!t.getTransactionStatus().isFinalStatus())))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2MDM3Mg=="}, "originalCommit": {"oid": "0097dc06677be4c957be0208903a079875d12bbd"}, "originalPosition": 183}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODU4NTUzOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/system/HeartbeatMgr.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDoyOToxMVrOGF8dNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMzoyNzoyNFrOGGTNCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NjU4Mg==", "bodyText": "Why here is a limit 100?", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r408886582", "createdAt": "2020-04-15T14:29:11Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/system/HeartbeatMgr.java", "diffHunk": "@@ -176,6 +176,7 @@ private boolean handleHbResponse(HeartbeatResponse response, boolean isReplay) {\n                     if (hbResponse.getStatus() != HbStatus.OK) {\n                         // invalid all connections cached in ClientPool\n                         ClientPool.backendPool.clearPool(new TNetworkAddress(be.getHost(), be.getBePort()));\n+                        Catalog.getCurrentCatalog().getGlobalTransactionMgr().abortTxnWhenCoordinateBeDown(be.getHost(), 100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f56f9ef74d594f80b80a794379571eb7d603294"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4OTcwOQ==", "bodyText": "because i afraid too many txn cancel will influence the heatbeat function", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r408889709", "createdAt": "2020-04-15T14:33:22Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/system/HeartbeatMgr.java", "diffHunk": "@@ -176,6 +176,7 @@ private boolean handleHbResponse(HeartbeatResponse response, boolean isReplay) {\n                     if (hbResponse.getStatus() != HbStatus.OK) {\n                         // invalid all connections cached in ClientPool\n                         ClientPool.backendPool.clearPool(new TNetworkAddress(be.getHost(), be.getBePort()));\n+                        Catalog.getCurrentCatalog().getGlobalTransactionMgr().abortTxnWhenCoordinateBeDown(be.getHost(), 100);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NjU4Mg=="}, "originalCommit": {"oid": "2f56f9ef74d594f80b80a794379571eb7d603294"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0OTg1NA==", "bodyText": "I see.\nAnother 2 things:\n\nPlz rebase the code, the FE meta version 82 has been taken.\nin handleHbResponse() method, if the parameter isReplay is true, means it is a meta log replay thread, so we don't need to process the abort in a replay thread(This is not like clearPool(), which should also be done in replay thread).", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r409249854", "createdAt": "2020-04-16T02:51:35Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/system/HeartbeatMgr.java", "diffHunk": "@@ -176,6 +176,7 @@ private boolean handleHbResponse(HeartbeatResponse response, boolean isReplay) {\n                     if (hbResponse.getStatus() != HbStatus.OK) {\n                         // invalid all connections cached in ClientPool\n                         ClientPool.backendPool.clearPool(new TNetworkAddress(be.getHost(), be.getBePort()));\n+                        Catalog.getCurrentCatalog().getGlobalTransactionMgr().abortTxnWhenCoordinateBeDown(be.getHost(), 100);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NjU4Mg=="}, "originalCommit": {"oid": "2f56f9ef74d594f80b80a794379571eb7d603294"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1OTI3Mg==", "bodyText": "thanks, I see~, and all things is done.", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r409259272", "createdAt": "2020-04-16T03:27:24Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/system/HeartbeatMgr.java", "diffHunk": "@@ -176,6 +176,7 @@ private boolean handleHbResponse(HeartbeatResponse response, boolean isReplay) {\n                     if (hbResponse.getStatus() != HbStatus.OK) {\n                         // invalid all connections cached in ClientPool\n                         ClientPool.backendPool.clearPool(new TNetworkAddress(be.getHost(), be.getBePort()));\n+                        Catalog.getCurrentCatalog().getGlobalTransactionMgr().abortTxnWhenCoordinateBeDown(be.getHost(), 100);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NjU4Mg=="}, "originalCommit": {"oid": "2f56f9ef74d594f80b80a794379571eb7d603294"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1895, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}