{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMDQ0NzA4", "number": 4796, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjowNzo1NFrOEyJ5QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjowNzo1NFrOEyJ5QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDI2MzY4OnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/load/loadv2/BulkLoadJob.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjowNzo1NFrOHooypw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMzo1MDo0NlrOHpZD7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3MzQxNQ==", "bodyText": "The code is redundant:\n                        idToTasks.remove(loadTask.getSignature());\n                        if (loadTask instanceof LoadLoadingTask) {\n                            loadStatistic.removeLoad(((LoadLoadingTask) loadTask).getLoadId());\n                        }\n                        loadTask.updateRetryInfo();\n                        idToTasks.put(loadTask.getSignature(), loadTask);", "url": "https://github.com/apache/incubator-doris/pull/4796#discussion_r512373415", "createdAt": "2020-10-27T02:07:54Z", "author": {"login": "kangkaisen"}, "path": "fe/fe-core/src/main/java/org/apache/doris/load/loadv2/BulkLoadJob.java", "diffHunk": "@@ -233,7 +233,32 @@ public void onTaskFailed(long taskId, FailMsg failMsg) {\n                 loadTask.updateRetryInfo();\n                 idToTasks.put(loadTask.getSignature(), loadTask);\n                 // load id will be added to loadStatistic when executing this task\n-                Catalog.getCurrentCatalog().getLoadTaskScheduler().submit(loadTask);\n+                boolean retrySuccessFlag = false;\n+                while (loadTask.getRetryTime() > 0) {\n+                    try {\n+                        Catalog.getCurrentCatalog().getLoadTaskScheduler().submit(loadTask);\n+                        retrySuccessFlag = true;\n+                        break;\n+                    } catch (Exception e) {\n+                        try {\n+                            Thread.sleep(100);\n+                        } catch (InterruptedException ex) {\n+                            LOG.warn(\"retry sublit task sleep failed. task_id:{}\", id);\n+                        }\n+                        // retry task", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42c7c6d6e0cff8e4fe52f3e2b935de51795a76fc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQyMDgyMQ==", "bodyText": "\uff2f\uff2b\uff0c\uff29modified it.", "url": "https://github.com/apache/incubator-doris/pull/4796#discussion_r512420821", "createdAt": "2020-10-27T05:12:31Z", "author": {"login": "xinghuayu007"}, "path": "fe/fe-core/src/main/java/org/apache/doris/load/loadv2/BulkLoadJob.java", "diffHunk": "@@ -233,7 +233,32 @@ public void onTaskFailed(long taskId, FailMsg failMsg) {\n                 loadTask.updateRetryInfo();\n                 idToTasks.put(loadTask.getSignature(), loadTask);\n                 // load id will be added to loadStatistic when executing this task\n-                Catalog.getCurrentCatalog().getLoadTaskScheduler().submit(loadTask);\n+                boolean retrySuccessFlag = false;\n+                while (loadTask.getRetryTime() > 0) {\n+                    try {\n+                        Catalog.getCurrentCatalog().getLoadTaskScheduler().submit(loadTask);\n+                        retrySuccessFlag = true;\n+                        break;\n+                    } catch (Exception e) {\n+                        try {\n+                            Thread.sleep(100);\n+                        } catch (InterruptedException ex) {\n+                            LOG.warn(\"retry sublit task sleep failed. task_id:{}\", id);\n+                        }\n+                        // retry task", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3MzQxNQ=="}, "originalCommit": {"oid": "42c7c6d6e0cff8e4fe52f3e2b935de51795a76fc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzE2NDI2OQ==", "bodyText": "The code is redundant:\n                        idToTasks.remove(loadTask.getSignature());\n                        if (loadTask instanceof LoadLoadingTask) {\n                            loadStatistic.removeLoad(((LoadLoadingTask) loadTask).getLoadId());\n                        }\n                        loadTask.updateRetryInfo();\n                        idToTasks.put(loadTask.getSignature(), loadTask);\n\n\nMaybe, it is better to catch the exception in fe-core/src/main/java/org/apache/doris/task/MasterTaskExecutor.java#submit and return false. But currently, too many calls refer this function, may need too much modfication.", "url": "https://github.com/apache/incubator-doris/pull/4796#discussion_r513164269", "createdAt": "2020-10-28T03:50:46Z", "author": {"login": "xinghuayu007"}, "path": "fe/fe-core/src/main/java/org/apache/doris/load/loadv2/BulkLoadJob.java", "diffHunk": "@@ -233,7 +233,32 @@ public void onTaskFailed(long taskId, FailMsg failMsg) {\n                 loadTask.updateRetryInfo();\n                 idToTasks.put(loadTask.getSignature(), loadTask);\n                 // load id will be added to loadStatistic when executing this task\n-                Catalog.getCurrentCatalog().getLoadTaskScheduler().submit(loadTask);\n+                boolean retrySuccessFlag = false;\n+                while (loadTask.getRetryTime() > 0) {\n+                    try {\n+                        Catalog.getCurrentCatalog().getLoadTaskScheduler().submit(loadTask);\n+                        retrySuccessFlag = true;\n+                        break;\n+                    } catch (Exception e) {\n+                        try {\n+                            Thread.sleep(100);\n+                        } catch (InterruptedException ex) {\n+                            LOG.warn(\"retry sublit task sleep failed. task_id:{}\", id);\n+                        }\n+                        // retry task", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3MzQxNQ=="}, "originalCommit": {"oid": "42c7c6d6e0cff8e4fe52f3e2b935de51795a76fc"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1003, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}