{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MzgzNTky", "number": 3625, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo1MTo1NVrOD-JGJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo1MTo1NVrOD-JGJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDg3MzMzOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/CaseExpr.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo1MTo1NVrOGYD-vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzozMDoxOFrOGYLvTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NDIyMg==", "bodyText": "you need to modify exception message for you delete 'BinaryPredicate'", "url": "https://github.com/apache/incubator-doris/pull/3625#discussion_r427884222", "createdAt": "2020-05-20T09:51:55Z", "author": {"login": "wutiangan"}, "path": "fe/src/main/java/org/apache/doris/analysis/CaseExpr.java", "diffHunk": "@@ -191,7 +191,7 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n                 throw new AnalysisException(\"Subquery in case-when must return scala type\");\n             }\n             if (whenExpr.contains(Predicates.instanceOf(Subquery.class))\n-                    && !((hasCaseExpr() && whenExpr instanceof Subquery || whenExpr instanceof BinaryPredicate))) {\n+                    && !((hasCaseExpr() && whenExpr instanceof Subquery || !checkSubquery(whenExpr)))) {\n                 throw new AnalysisException(\"Only support subquery in binary predicate in case statement.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faadfbe113a0eb8ad67772d51de79d3ea7f1fbd5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAxMTM0MQ==", "bodyText": "Instead of deleting BinaryPredicate, we still only support BinaryPredicate, but just adjust the check of BinaryPredicate from the first layer to support check of children of other expr", "url": "https://github.com/apache/incubator-doris/pull/3625#discussion_r428011341", "createdAt": "2020-05-20T13:30:18Z", "author": {"login": "yangzhg"}, "path": "fe/src/main/java/org/apache/doris/analysis/CaseExpr.java", "diffHunk": "@@ -191,7 +191,7 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n                 throw new AnalysisException(\"Subquery in case-when must return scala type\");\n             }\n             if (whenExpr.contains(Predicates.instanceOf(Subquery.class))\n-                    && !((hasCaseExpr() && whenExpr instanceof Subquery || whenExpr instanceof BinaryPredicate))) {\n+                    && !((hasCaseExpr() && whenExpr instanceof Subquery || !checkSubquery(whenExpr)))) {\n                 throw new AnalysisException(\"Only support subquery in binary predicate in case statement.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NDIyMg=="}, "originalCommit": {"oid": "faadfbe113a0eb8ad67772d51de79d3ea7f1fbd5"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1566, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}