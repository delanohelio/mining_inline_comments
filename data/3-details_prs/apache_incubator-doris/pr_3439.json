{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwODI3MjA4", "number": 3439, "title": "Support append_trailing_char_if_absent  function", "bodyText": "support append_trailing_char_if_absent function\n#2598", "createdAt": "2020-04-29T16:41:48Z", "url": "https://github.com/apache/incubator-doris/pull/3439", "merged": true, "mergeCommit": {"oid": "a656a7ddd402c71f2b3c541497277cdc036fbac7"}, "closed": true, "closedAt": "2020-05-09T00:59:35Z", "author": {"login": "Youngwb"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcckb8cAFqTQwMzE3Njg1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfQq5MAFqTQwODE5MDEzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTc2ODUy", "url": "https://github.com/apache/incubator-doris/pull/3439#pullrequestreview-403176852", "createdAt": "2020-04-30T03:23:04Z", "commit": {"oid": "c4c1adee5c49ca304903f792b5fa40055648c47c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMzoyMzowNFrOGOYV-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMzoyMzowNFrOGOYV-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjA5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (fn.getFunctionName().getFunction().equals(\"append_trailing_char_if_absent\")) {\n          \n          \n            \n                    if (fnName.getFunction().equalsIgnoreCase(\"append_trailing_char_if_absent\")) {", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417732090", "createdAt": "2020-04-30T03:23:04Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -604,6 +604,23 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n             return;\n         }\n \n+        if (fn.getFunctionName().getFunction().equals(\"append_trailing_char_if_absent\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c1adee5c49ca304903f792b5fa40055648c47c"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTc3NzU5", "url": "https://github.com/apache/incubator-doris/pull/3439#pullrequestreview-403177759", "createdAt": "2020-04-30T03:26:50Z", "commit": {"oid": "c4c1adee5c49ca304903f792b5fa40055648c47c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMzoyNjo1MFrOGOYZPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMzoyNjo1MFrOGOYZPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg==", "bodyText": "Why new result could null?", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417732926", "createdAt": "2020-04-30T03:26:50Z", "author": {"login": "kangkaisen"}, "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n+        return str;\n+    }\n+\n+    StringVal result(context, str.len + trailing_char.len);\n+    if (UNLIKELY(result.is_null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c1adee5c49ca304903f792b5fa40055648c47c"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMzMwNjkw", "url": "https://github.com/apache/incubator-doris/pull/3439#pullrequestreview-403330690", "createdAt": "2020-04-30T08:58:59Z", "commit": {"oid": "3fac55ef8d5e269286fb5984cea639bceaeac533"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODo1OTowMFrOGOgMIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTowMjowN1rOGOgTYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MDY0Mg==", "bodyText": "Should change this documents according to the new document framework.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417860642", "createdAt": "2020-04-30T08:59:00Z", "author": {"login": "imay"}, "path": "docs/documentation/cn/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,46 @@\n+<!--", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fac55ef8d5e269286fb5984cea639bceaeac533"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MTc0NQ==", "bodyText": "Should explain when input trailing_char has multiple chars, how will this function act.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417861745", "createdAt": "2020-04-30T09:00:50Z", "author": {"login": "imay"}, "path": "docs/documentation/cn/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,46 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+  http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax\n+\n+`VARCHAR append_trailing_char_if_absent(VARCHAR str, VARCHAR trailing_char)`\n+\n+\u5982\u679c's'\u5b57\u7b26\u4e32\u975e\u7a7a\u5e76\u4e14\u672b\u5c3e\u4e0d\u5305\u542b'c'\u5b57\u7b26\uff0c\u5219\u5c06'c'\u5b57\u7b26\u9644\u52a0\u5230\u672b\u5c3e", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fac55ef8d5e269286fb5984cea639bceaeac533"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MjQ5Nw==", "bodyText": "Could you tell me in what scenario this function is used?", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417862497", "createdAt": "2020-04-30T09:02:07Z", "author": {"login": "imay"}, "path": "gensrc/script/doris_builtins_functions.py", "diffHunk": "@@ -531,6 +531,8 @@\n     [['rpad'], 'VARCHAR', ['VARCHAR', 'INT', 'VARCHAR'],\n             '_ZN5doris15StringFunctions4rpadEPN9doris_udf'\n             '15FunctionContextERKNS1_9StringValERKNS1_6IntValES6_'],\n+    [['append_trailing_char_if_absent'], 'VARCHAR', ['VARCHAR', 'VARCHAR'],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fac55ef8d5e269286fb5984cea639bceaeac533"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NDcyOTM4", "url": "https://github.com/apache/incubator-doris/pull/3439#pullrequestreview-405472938", "createdAt": "2020-05-05T03:24:26Z", "commit": {"oid": "546e6e87f0947c1b82f2aef32940880e1a83c349"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMzoyNDoyNlrOGQZPug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMzoyNDoyNlrOGQZPug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg0NDAyNg==", "bodyText": "Why not return null when the second parameter length is not 1.\nYou can't check its length if it is not const, such as a table column.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r419844026", "createdAt": "2020-05-05T03:24:26Z", "author": {"login": "imay"}, "path": "docs/en/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+{\n+    \"title\": \"append_trailing_char_if_absent\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax\n+\n+`VARCHAR append_trailing_char_if_absent(VARCHAR str, VARCHAR trailing_char)`\n+\n+If the s string is non-empty and does not contain the c character at the end, it appends the c character to the end.\n+Trailing_char contains only one character, and it will report an error if contains more than one character", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "546e6e87f0947c1b82f2aef32940880e1a83c349"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2Mzg3OTk0", "url": "https://github.com/apache/incubator-doris/pull/3439#pullrequestreview-406387994", "createdAt": "2020-05-06T08:10:24Z", "commit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoxMDoyNFrOGRIRug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoxNToyN1rOGRIcDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNDU4Ng==", "bodyText": "I agree with kangkaisen, this check can be removed", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420614586", "createdAt": "2020-05-06T08:10:24Z", "author": {"login": "imay"}, "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n+        return str;\n+    }\n+\n+    StringVal result(context, str.len + trailing_char.len);\n+    if (UNLIKELY(result.is_null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg=="}, "originalCommit": {"oid": "c4c1adee5c49ca304903f792b5fa40055648c47c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNTU3OQ==", "bodyText": "I think this check is unnecessary, can be removed.\nIf you keep it, this will make this function more complicate.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420615579", "createdAt": "2020-05-06T08:12:20Z", "author": {"login": "imay"}, "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -605,6 +605,19 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n             return;\n         }\n \n+        if (fnName.getFunction().equalsIgnoreCase(\"append_trailing_char_if_absent\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNjA0OQ==", "bodyText": "Should add test that second argument has multiple characters.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420616049", "createdAt": "2020-05-06T08:13:19Z", "author": {"login": "imay"}, "path": "be/test/exprs/string_functions_test.cpp", "diffHunk": "@@ -252,6 +264,26 @@ TEST_F(StringFunctionsTest, null_or_empty) {\n     delete context;\n }\n \n+TEST_F(StringFunctionsTest, append_trailing_char_if_absent) {\n+    ASSERT_EQ(StringVal(\"ac\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"a\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"c\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"123c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"123c\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal::null(), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal::null(), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal::null(), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"a\"), StringVal::null()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNjQ3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n          \n          \n            \n                if (str.ptr[str.len - 1] == trailing_char.ptr[0]) {", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420616476", "createdAt": "2020-05-06T08:14:05Z", "author": {"login": "imay"}, "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null || trailing_char.len != 1) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNzIyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                StringVal result(context, str.len + trailing_char.len);\n          \n          \n            \n                StringVal result(context, str.len + 1);", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420617229", "createdAt": "2020-05-06T08:15:27Z", "author": {"login": "imay"}, "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null || trailing_char.len != 1) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n+        return str;\n+    }\n+\n+    StringVal result(context, str.len + trailing_char.len);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3OTk4Njc2", "url": "https://github.com/apache/incubator-doris/pull/3439#pullrequestreview-407998676", "createdAt": "2020-05-08T05:09:08Z", "commit": {"oid": "e5ea1e98bc2f598d0d90692fc2dc99be72559317"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNTowOTowOFrOGSZO4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNTowOTowOFrOGSZO4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk0MDk2MA==", "bodyText": "split these lines with empty line", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r421940960", "createdAt": "2020-05-08T05:09:08Z", "author": {"login": "imay"}, "path": "docs/en/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+{\n+    \"title\": \"append_trailing_char_if_absent\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5ea1e98bc2f598d0d90692fc2dc99be72559317"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db7a98349b1b1f280318916a1b5dd69edd1cd17d", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/db7a98349b1b1f280318916a1b5dd69edd1cd17d", "committedDate": "2020-05-08T07:03:11Z", "message": "init"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c43ba09af1ce557e16f753cb4ef19e4546bc9bf", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/0c43ba09af1ce557e16f753cb4ef19e4546bc9bf", "committedDate": "2020-05-08T07:03:11Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ef4312de6980d9830c448980eaa80757300269a", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/0ef4312de6980d9830c448980eaa80757300269a", "committedDate": "2020-05-08T07:03:11Z", "message": "Update fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java\n\nCo-Authored-By: kangkaisen  <593110254@qq.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb18374b82baae94058afff8e7f2d02b987191c8", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/eb18374b82baae94058afff8e7f2d02b987191c8", "committedDate": "2020-05-08T07:03:11Z", "message": "fix document"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef7aa7502ce6bf63a9c2d9e8b940fca85bf791e7", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/ef7aa7502ce6bf63a9c2d9e8b940fca85bf791e7", "committedDate": "2020-05-08T07:03:11Z", "message": "fix document"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f045dc0b55684c29d1734ec3139c7a055e209b26", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/f045dc0b55684c29d1734ec3139c7a055e209b26", "committedDate": "2020-05-08T07:03:11Z", "message": "invalid return NULL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83ac07a6b30f697706d94b871eff219836d46c3c", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/83ac07a6b30f697706d94b871eff219836d46c3c", "committedDate": "2020-05-08T07:03:11Z", "message": "Update be/src/exprs/string_functions.cpp\n\nCo-authored-by: Zhao Chun <buaa.zhaoc@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fdd5a7143367957c485fa9019b58a0b4704c5e8", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/3fdd5a7143367957c485fa9019b58a0b4704c5e8", "committedDate": "2020-05-08T07:03:11Z", "message": "Update be/src/exprs/string_functions.cpp\n\nCo-authored-by: Zhao Chun <buaa.zhaoc@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dfc57c1fe63f81935f39ac6a25bd27f62f2241f", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/3dfc57c1fe63f81935f39ac6a25bd27f62f2241f", "committedDate": "2020-05-08T07:03:11Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5978575eec676d28bc317c81127b68c70bfbecda", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/5978575eec676d28bc317c81127b68c70bfbecda", "committedDate": "2020-05-08T07:03:11Z", "message": "remove check in fe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b74fb081af333d4d1d9413a7564af0bd6c54c406", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/b74fb081af333d4d1d9413a7564af0bd6c54c406", "committedDate": "2020-05-08T07:07:18Z", "message": "add empty line"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5ea1e98bc2f598d0d90692fc2dc99be72559317", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/e5ea1e98bc2f598d0d90692fc2dc99be72559317", "committedDate": "2020-05-06T08:40:45Z", "message": "remove check in fe"}, "afterCommit": {"oid": "b74fb081af333d4d1d9413a7564af0bd6c54c406", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/b74fb081af333d4d1d9413a7564af0bd6c54c406", "committedDate": "2020-05-08T07:07:18Z", "message": "add empty line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de80eb6f1349034adca70a82f0f8cc5b0e5fb7f4", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/de80eb6f1349034adca70a82f0f8cc5b0e5fb7f4", "committedDate": "2020-05-08T09:40:34Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MTgwNDY0", "url": "https://github.com/apache/incubator-doris/pull/3439#pullrequestreview-408180464", "createdAt": "2020-05-08T11:41:36Z", "commit": {"oid": "de80eb6f1349034adca70a82f0f8cc5b0e5fb7f4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MTkwMTMz", "url": "https://github.com/apache/incubator-doris/pull/3439#pullrequestreview-408190133", "createdAt": "2020-05-08T12:03:04Z", "commit": {"oid": "de80eb6f1349034adca70a82f0f8cc5b0e5fb7f4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2915, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}