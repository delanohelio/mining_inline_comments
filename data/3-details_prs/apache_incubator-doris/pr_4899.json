{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNDYxOTIw", "number": 4899, "title": "Added #4897: Add table_privileges, schema_privileges and user_privile\u2026", "bodyText": "\u2026ges table in information_schema database.\nProposed changes\nAdd table_privileges, schema_privileges and user_privileges table in information_schema database.\nTypes of changes\nWhat types of changes does your code introduce to Doris?\nPut an x in the boxes that apply\n\n[] Bugfix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n[] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n[] Documentation Update (if none of the other choices apply)\n[] Code refactor (Modify the code structure, format the code, etc...)\n\nChecklist\nPut an x in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code.\n\n I have create an issue on (Fix #4897 ), and have described the bug/feature there in detail\n[] Compiling and unit tests pass locally with my changes\n[] I have added tests that prove my fix is effective or that my feature works\n[] If this change need a document change, I have updated the document\n[] Any dependent changes have been merged\n\nFurther comments\nIf this is a relatively large or complex change, kick off the discussion at dev@doris.apache.org by explaining why you chose the solution you did and what alternatives you considered, etc...", "createdAt": "2020-11-13T09:27:13Z", "url": "https://github.com/apache/incubator-doris/pull/4899", "merged": true, "mergeCommit": {"oid": "448df42fb028e9a6962bd787170a0a567939ca5e"}, "closed": true, "closedAt": "2020-11-16T13:58:31Z", "author": {"login": "luozenglin"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdcEMdwgFqTUyOTkxNTMwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcx0V1AFqTUzMDgwNzMyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5OTE1MzAy", "url": "https://github.com/apache/incubator-doris/pull/4899#pullrequestreview-529915302", "createdAt": "2020-11-13T09:43:03Z", "commit": {"oid": "1e1b359a71767ff3187e0bd384a3e4a5337d7d2e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOTo0MzowNFrOHynatw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOTo1OTozM1rOHyoAVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNjY2Mw==", "bodyText": "Maybe add a constant variables like 'PRIVILEGE_TYPE_LEN' is better.", "url": "https://github.com/apache/incubator-doris/pull/4899#discussion_r522836663", "createdAt": "2020-11-13T09:43:04Z", "author": {"login": "EmmyMiao87"}, "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/SchemaTable.java", "diffHunk": "@@ -104,11 +104,32 @@ public static Builder builder() {\n                             TableType.SCHEMA,\n                             builder()\n                                     .column(\"GRANTEE\", ScalarType.createVarchar(NAME_CHAR_LEN))\n-                                    .column(\"TABLE_CATALOG\", ScalarType.createVarchar(NAME_CHAR_LEN))\n+                                    .column(\"TABLE_CATALOG\", ScalarType.createVarchar(FN_REFLEN))\n                                     .column(\"TABLE_SCHEMA\", ScalarType.createVarchar(NAME_CHAR_LEN))\n                                     .column(\"TABLE_NAME\", ScalarType.createVarchar(NAME_CHAR_LEN))\n-                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(NAME_CHAR_LEN))\n-                                    .column(\"IS_GRANTABLE\", ScalarType.createVarchar(NAME_CHAR_LEN))\n+                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(64))\n+                                    .column(\"IS_GRANTABLE\", ScalarType.createVarchar(3))\n+                                    .build()))\n+                    .put(\"schema_privileges\", new SchemaTable(\n+                            SystemIdGenerator.getNextId(),\n+                            \"schema_privileges\",\n+                            TableType.SCHEMA,\n+                            builder()\n+                                    .column(\"GRANTEE\", ScalarType.createVarchar(NAME_CHAR_LEN))\n+                                    .column(\"TABLE_CATALOG\", ScalarType.createVarchar(FN_REFLEN))\n+                                    .column(\"TABLE_SCHEMA\", ScalarType.createVarchar(NAME_CHAR_LEN))\n+                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(64))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1b359a71767ff3187e0bd384a3e4a5337d7d2e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg0NTQ2Nw==", "bodyText": "Are word of yes or no case sensitive ?", "url": "https://github.com/apache/incubator-doris/pull/4899#discussion_r522845467", "createdAt": "2020-11-13T09:58:11Z", "author": {"login": "EmmyMiao87"}, "path": "fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java", "diffHunk": "@@ -1300,6 +1301,120 @@ public TFetchResourceResult toResourceThrift() {\n         }\n     }\n \n+    // Used for transforming privileges in palo to mysql.\n+    private final String[] privilegesInMysql = new String[]{\"\", \"\", \"\", \"SELECT\", \"INSERT\", \"ALTER\",\n+            \"CREATE\", \"DROP\", \"USAGE\"};\n+\n+    // Used for creating table_privileges table in information_schema.\n+    public void getTablePrivStatus(List<TPrivilegeStatus> tblPrivResult, UserIdentity currentUser) {\n+        readLock();\n+        try {\n+            for (PrivEntry entry : tablePrivTable.getEntries()) {\n+                TablePrivEntry tblPrivEntry = (TablePrivEntry) entry;\n+                String dbName = ClusterNamespace.getNameFromFullName(tblPrivEntry.getOrigDb());\n+                String tblName = tblPrivEntry.getOrigTbl();\n+\n+                if (dbName.equals(\"information_schema\" /* Don't show privileges in information_schema */)\n+                        || !checkTblPriv(currentUser, tblPrivEntry.getOrigDb(), tblName, PrivPredicate.SHOW)) {\n+                    continue;\n+                }\n+\n+                String grantee = new String(\"\\'\").concat(ClusterNamespace.getNameFromFullName(tblPrivEntry.getOrigUser()))\n+                        .concat(\"\\'@\\'\").concat(tblPrivEntry.getOrigHost()).concat(\"\\'\");\n+                String isGrantable = tblPrivEntry.getPrivSet().get(2) ? \"yes\" : \"no\"; //Grant_priv", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1b359a71767ff3187e0bd384a3e4a5337d7d2e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg0NjI5Mg==", "bodyText": "Maybe a map is better? such as <PaloPrivilege, String> ?", "url": "https://github.com/apache/incubator-doris/pull/4899#discussion_r522846292", "createdAt": "2020-11-13T09:59:33Z", "author": {"login": "EmmyMiao87"}, "path": "fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java", "diffHunk": "@@ -1300,6 +1301,120 @@ public TFetchResourceResult toResourceThrift() {\n         }\n     }\n \n+    // Used for transforming privileges in palo to mysql.\n+    private final String[] privilegesInMysql = new String[]{\"\", \"\", \"\", \"SELECT\", \"INSERT\", \"ALTER\",\n+            \"CREATE\", \"DROP\", \"USAGE\"};\n+\n+    // Used for creating table_privileges table in information_schema.\n+    public void getTablePrivStatus(List<TPrivilegeStatus> tblPrivResult, UserIdentity currentUser) {\n+        readLock();\n+        try {\n+            for (PrivEntry entry : tablePrivTable.getEntries()) {\n+                TablePrivEntry tblPrivEntry = (TablePrivEntry) entry;\n+                String dbName = ClusterNamespace.getNameFromFullName(tblPrivEntry.getOrigDb());\n+                String tblName = tblPrivEntry.getOrigTbl();\n+\n+                if (dbName.equals(\"information_schema\" /* Don't show privileges in information_schema */)\n+                        || !checkTblPriv(currentUser, tblPrivEntry.getOrigDb(), tblName, PrivPredicate.SHOW)) {\n+                    continue;\n+                }\n+\n+                String grantee = new String(\"\\'\").concat(ClusterNamespace.getNameFromFullName(tblPrivEntry.getOrigUser()))\n+                        .concat(\"\\'@\\'\").concat(tblPrivEntry.getOrigHost()).concat(\"\\'\");\n+                String isGrantable = tblPrivEntry.getPrivSet().get(2) ? \"yes\" : \"no\"; //Grant_priv\n+                for (PaloPrivilege paloPriv : tblPrivEntry.getPrivSet().toPrivilegeList()) {\n+                    if (paloPriv == PaloPrivilege.GRANT_PRIV) {\n+                        continue;\n+                    }\n+                    TPrivilegeStatus status = new TPrivilegeStatus();\n+                    status.setTableName(tblName);\n+                    status.setPrivilegeType(privilegesInMysql[paloPriv.getIdx()]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1b359a71767ff3187e0bd384a3e4a5337d7d2e"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4fff3f2f960cf6c989b8d272880e384f427b7d8", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/e4fff3f2f960cf6c989b8d272880e384f427b7d8", "committedDate": "2020-11-13T14:12:59Z", "message": "Added #4897: Add table_privileges, schema_privileges and user_privileges table in information_schema database."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ff6c6dab966e201ce34e190884a28164d779381", "author": {"user": {"login": "luozenglin", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/1ff6c6dab966e201ce34e190884a28164d779381", "committedDate": "2020-11-14T09:41:48Z", "message": "[Compatibility] Add table table_privileges, schema_privileges and user_privileges to the information_schema database (#4897)\nto improve compatibility with the mysql"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e1b359a71767ff3187e0bd384a3e4a5337d7d2e", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/1e1b359a71767ff3187e0bd384a3e4a5337d7d2e", "committedDate": "2020-11-13T08:57:43Z", "message": "Added #4897: Add table_privileges, schema_privileges and user_privileges table in information_schema database."}, "afterCommit": {"oid": "1ff6c6dab966e201ce34e190884a28164d779381", "author": {"user": {"login": "luozenglin", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/1ff6c6dab966e201ce34e190884a28164d779381", "committedDate": "2020-11-14T09:41:48Z", "message": "[Compatibility] Add table table_privileges, schema_privileges and user_privileges to the information_schema database (#4897)\nto improve compatibility with the mysql"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNzYxNjgy", "url": "https://github.com/apache/incubator-doris/pull/4899#pullrequestreview-530761682", "createdAt": "2020-11-15T02:27:42Z", "commit": {"oid": "1ff6c6dab966e201ce34e190884a28164d779381"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwMjoyNzo0MlrOHzY3LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwMjoyNzo0MlrOHzY3LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzY0Njc2NQ==", "bodyText": "{\n        void *slot = tuple->get_slot(_tuple_desc->slots()[0]->tuple_offset());\n        StringValue* str_slot = reinterpret_cast<StringValue*>(slot);\n        const std::string* src = &tbl_priv_status.grantee;\n        str_slot->len = src->length();\n        str_slot->ptr = (char *)pool->allocate(str_slot->len);\n        if (NULL == str_slot->ptr) {\n            return Status::InternalError(\"Allocate memcpy failed.\");\n        }\n        memcpy(str_slot->ptr, src->c_str(), str_slot->len);\n    }\n\nThis kind of code block is used everywhere, I think we can extract a common method for it.", "url": "https://github.com/apache/incubator-doris/pull/4899#discussion_r523646765", "createdAt": "2020-11-15T02:27:42Z", "author": {"login": "morningman"}, "path": "be/src/exec/schema_scanner/schema_user_privileges_scanner.cpp", "diffHunk": "@@ -0,0 +1,150 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"exec/schema_scanner/schema_helper.h\"\n+#include \"exec/schema_scanner/schema_user_privileges_scanner.h\"\n+#include \"runtime/primitive_type.h\"\n+#include \"runtime/string_value.h\"\n+//#include \"runtime/datetime_value.h\"\n+\n+namespace doris\n+{\n+\n+SchemaScanner::ColumnDesc SchemaUserPrivilegesScanner::_s_tbls_columns[] = {\n+    //   name,       type,          size,     is_null\n+    { \"GRANTEE\", TYPE_VARCHAR, sizeof(StringValue), true},\n+    { \"TABLE_CATALOG\", TYPE_VARCHAR, sizeof(StringValue), true},\n+    { \"PRIVILEGE_TYPE\", TYPE_VARCHAR, sizeof(StringValue), false},\n+    { \"IS_GRANTABLE\", TYPE_VARCHAR, sizeof(StringValue), true},\n+};\n+\n+SchemaUserPrivilegesScanner::SchemaUserPrivilegesScanner()\n+        : SchemaScanner(_s_tbls_columns,\n+                        sizeof(_s_tbls_columns) / sizeof(SchemaScanner::ColumnDesc)),\n+        _priv_index(0) {\n+}\n+\n+SchemaUserPrivilegesScanner::~SchemaUserPrivilegesScanner() {\n+}\n+\n+Status SchemaUserPrivilegesScanner::start(RuntimeState *state) {\n+    if (!_is_init) {\n+        return Status::InternalError(\"used before initialized.\");\n+    }\n+    RETURN_IF_ERROR(get_new_table());\n+    return Status::OK();\n+}\n+\n+Status SchemaUserPrivilegesScanner::fill_one_row(Tuple *tuple, MemPool *pool) {\n+    // set all bit to not null\n+    memset((void *)tuple, 0, _tuple_desc->num_null_bytes());\n+    const TPrivilegeStatus& tbl_priv_status = _priv_result.privileges[_priv_index];\n+    // grantee", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ff6c6dab966e201ce34e190884a28164d779381"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNzY2NDc1", "url": "https://github.com/apache/incubator-doris/pull/4899#pullrequestreview-530766475", "createdAt": "2020-11-15T04:38:49Z", "commit": {"oid": "1ff6c6dab966e201ce34e190884a28164d779381"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25db3ef2dd4735a23dd100e22b7227f8d7041003", "author": {"user": {"login": "luozenglin", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/25db3ef2dd4735a23dd100e22b7227f8d7041003", "committedDate": "2020-11-15T09:57:19Z", "message": "[Compatibility] Add table table_privileges, schema_privileges and user_privileges to the information_schema database (#4897)\n\nto improve compatibility with the mysql"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwODA3MzIx", "url": "https://github.com/apache/incubator-doris/pull/4899#pullrequestreview-530807321", "createdAt": "2020-11-15T15:09:38Z", "commit": {"oid": "25db3ef2dd4735a23dd100e22b7227f8d7041003"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4597, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}