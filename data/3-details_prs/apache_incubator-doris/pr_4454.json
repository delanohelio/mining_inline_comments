{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNjEwOTUy", "number": 4454, "title": "Persistence stale rowsets meta", "bodyText": "Proposed changes\nPersistence stale rowsets meta. When be reboots, stale rowsets meta can resume and the stale version can also be readable before stale gc time.\nISSUE: #4453\nTypes of changes\nWhat types of changes does your code introduce to Doris?\nPut an x in the boxes that apply\n\n[] Bugfix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n[] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n[] Documentation Update (if none of the other choices apply)\n[] Code refactor (Modify the code structure, format the code, etc...)\n\nChecklist\nPut an x in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code.\n\n I have create an issue on (Fix #4453), and have described the bug/feature there in detail\n Compiling and unit tests pass locally with my changes\n[] I have added tests that prove my fix is effective or that my feature works\n[] If this change need a document change, I have updated the document\n[] Any dependent changes have been merged", "createdAt": "2020-08-26T02:54:01Z", "url": "https://github.com/apache/incubator-doris/pull/4454", "merged": true, "mergeCommit": {"oid": "123237afb73b392e247bba14b3e4f1e8ae7801e4"}, "closed": true, "closedAt": "2020-08-30T13:05:49Z", "author": {"login": "ZhangYu0123"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdClhF5gH2gAyNDczNjEwOTUyOmI4N2JjNGE3YTM3MWJkZDI2NjU2YjY1MjQ2NWNjZWQyMDc2Zjc2Y2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDkhjDAFqTQ3ODEwNjM0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b87bc4a7a371bdd26656b652465cced2076f76ca", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/b87bc4a7a371bdd26656b652465cced2076f76ca", "committedDate": "2020-08-26T06:07:43Z", "message": "tmp commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd34caf7b61b1b857ef8e37096d4eae46601251c", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/fd34caf7b61b1b857ef8e37096d4eae46601251c", "committedDate": "2020-08-26T06:07:43Z", "message": "stale rowsets persistence"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae440416d05761c8c832430061936a8aa0b7b22f", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/ae440416d05761c8c832430061936a8aa0b7b22f", "committedDate": "2020-08-26T06:09:05Z", "message": "fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70b85936490bc7725d240080255eeb7fdb76cb13", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/70b85936490bc7725d240080255eeb7fdb76cb13", "committedDate": "2020-08-26T02:32:43Z", "message": "stale rowsets persistence"}, "afterCommit": {"oid": "ae440416d05761c8c832430061936a8aa0b7b22f", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/ae440416d05761c8c832430061936a8aa0b7b22f", "committedDate": "2020-08-26T06:09:05Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NDM2MzU3", "url": "https://github.com/apache/incubator-doris/pull/4454#pullrequestreview-475436357", "createdAt": "2020-08-26T12:28:02Z", "commit": {"oid": "ae440416d05761c8c832430061936a8aa0b7b22f"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMjoyODowM1rOHHJsBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMjozNTo0MFrOHHJ9dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2MDgwNA==", "bodyText": "This function seems not use?", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477260804", "createdAt": "2020-08-26T12:28:03Z", "author": {"login": "morningman"}, "path": "be/src/olap/tablet_meta.h", "diffHunk": "@@ -171,8 +171,9 @@ class TabletMeta {\n                          const std::vector<RowsetMetaSharedPtr>& to_delete);\n     void revise_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);\n \n-\n     void revise_inc_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);\n+    void revise_stale_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae440416d05761c8c832430061936a8aa0b7b22f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2MDgyMA==", "bodyText": "This function seems not use?", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477260820", "createdAt": "2020-08-26T12:28:04Z", "author": {"login": "morningman"}, "path": "be/src/olap/tablet_meta.h", "diffHunk": "@@ -171,8 +171,9 @@ class TabletMeta {\n                          const std::vector<RowsetMetaSharedPtr>& to_delete);\n     void revise_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);\n \n-\n     void revise_inc_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);\n+    void revise_stale_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae440416d05761c8c832430061936a8aa0b7b22f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2MzQ1MQ==", "bodyText": "Under what circumstances will it not be found?", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477263451", "createdAt": "2020-08-26T12:32:24Z", "author": {"login": "morningman"}, "path": "be/src/olap/tablet.cpp", "diffHunk": "@@ -108,6 +109,22 @@ OLAPStatus Tablet::_init_once_action() {\n         _inc_rs_version_map[version] = std::move(rowset);\n     }\n \n+    // init stale rowset\n+    for (auto& stale_rs_meta : _tablet_meta->all_stale_rs_metas()) {\n+        Version version = stale_rs_meta->version();\n+        RowsetSharedPtr rowset = get_stale_rowset_by_version(version);\n+        if (rowset == nullptr) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae440416d05761c8c832430061936a8aa0b7b22f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2MzQ2MA==", "bodyText": "Under what circumstances will it not be found?", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477263460", "createdAt": "2020-08-26T12:32:26Z", "author": {"login": "morningman"}, "path": "be/src/olap/tablet.cpp", "diffHunk": "@@ -108,6 +109,22 @@ OLAPStatus Tablet::_init_once_action() {\n         _inc_rs_version_map[version] = std::move(rowset);\n     }\n \n+    // init stale rowset\n+    for (auto& stale_rs_meta : _tablet_meta->all_stale_rs_metas()) {\n+        Version version = stale_rs_meta->version();\n+        RowsetSharedPtr rowset = get_stale_rowset_by_version(version);\n+        if (rowset == nullptr) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae440416d05761c8c832430061936a8aa0b7b22f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2NTI2MQ==", "bodyText": "I didn't get this logic...", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477265261", "createdAt": "2020-08-26T12:35:38Z", "author": {"login": "morningman"}, "path": "be/src/olap/version_graph.cpp", "diffHunk": "@@ -43,6 +43,167 @@ void TimestampedVersionTracker::construct_versioned_tracker(const std::vector<Ro\n     _construct_versioned_tracker(rs_metas);\n }\n \n+void TimestampedVersionTracker::construct_versioned_tracker(\n+        const std::vector<RowsetMetaSharedPtr>& rs_metas,\n+        const std::vector<RowsetMetaSharedPtr>& stale_metas) {\n+\n+    if (rs_metas.empty()) {\n+        VLOG(3) << \"there is no version in the header.\";\n+        return;\n+    }\n+    _stale_version_path_map.clear();\n+    _next_path_id = 1;\n+    _construct_versioned_tracker(rs_metas);\n+\n+    // init _stale_version_path_map\n+    _init_stale_version_path_map(rs_metas, stale_metas);\n+}\n+\n+void TimestampedVersionTracker::_init_stale_version_path_map(\n+        const std::vector<RowsetMetaSharedPtr>& rs_metas,\n+        const std::vector<RowsetMetaSharedPtr>& stale_metas) {\n+\n+    if (stale_metas.empty()) {\n+        return;\n+    }\n+\n+    // sort stale meta by version diff (second version - first version)\n+    std::list<RowsetMetaSharedPtr> sorted_stale_metas;\n+    for (auto& rs : stale_metas) {\n+        sorted_stale_metas.emplace_back(rs);\n+    }\n+\n+    // 1. Sort the existing rowsets by version in ascending order\n+    sorted_stale_metas.sort([](const RowsetMetaSharedPtr& a, const RowsetMetaSharedPtr& b) {\n+        // compare by version diff between version.first and version.second\n+        int64_t a_diff = a->version().second - a->version().first;\n+        int64_t b_diff = b->version().second - b->version().first;\n+\n+        int diff = a_diff - b_diff;\n+        if (diff < 0) {\n+            return true;\n+        }\n+        else if (diff > 0) {\n+            return false;\n+        }\n+        // when the version diff is equal, compare rowset createtime\n+        return a->creation_time() < b->creation_time();\n+    });\n+\n+    // first_version -> (second_version -> rowset_meta)\n+    std::unordered_map<int64_t, std::unordered_map<int64_t, RowsetMetaSharedPtr>> stale_map;\n+\n+    // 2. generate stale path from stale_metas. traverse sorted_stale_metas and each time add stale_meta to stale_map.\n+    // when a stale path in stale_map can replace stale_meta in sorted_stale_metas, stale_map remove rowset_metas of a stale path\n+    // and add the path to _stale_version_path_map.\n+    for(auto& stale_meta:sorted_stale_metas) {\n+        std::vector<RowsetMetaSharedPtr> stale_path;\n+        // 2.1 find a path in stale_map can replace current stale_meta version\n+        bool r = _find_path_from_stale_map(stale_map, stale_meta->start_version(), stale_meta->end_version(), &stale_path);\n+\n+        // 2.2 add stale_meta to stale_map\n+        auto start_iter = stale_map.find(stale_meta->start_version());\n+        if (start_iter != stale_map.end()) {\n+            start_iter->second[stale_meta->end_version()] = stale_meta;\n+        } else {\n+            std::unordered_map<int64_t, RowsetMetaSharedPtr> item;\n+            item[stale_meta->end_version()] = stale_meta;\n+            stale_map[stale_meta->start_version()] = std::move(item);\n+        }\n+        // 2.3 add version to version_graph\n+        Version stale_meta_version = stale_meta->version();\n+        add_version(stale_meta_version);\n+        // 2.4 find the path\n+        if (r) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae440416d05761c8c832430061936a8aa0b7b22f"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2NTI3MA==", "bodyText": "I didn't get this logic...", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477265270", "createdAt": "2020-08-26T12:35:40Z", "author": {"login": "morningman"}, "path": "be/src/olap/version_graph.cpp", "diffHunk": "@@ -43,6 +43,167 @@ void TimestampedVersionTracker::construct_versioned_tracker(const std::vector<Ro\n     _construct_versioned_tracker(rs_metas);\n }\n \n+void TimestampedVersionTracker::construct_versioned_tracker(\n+        const std::vector<RowsetMetaSharedPtr>& rs_metas,\n+        const std::vector<RowsetMetaSharedPtr>& stale_metas) {\n+\n+    if (rs_metas.empty()) {\n+        VLOG(3) << \"there is no version in the header.\";\n+        return;\n+    }\n+    _stale_version_path_map.clear();\n+    _next_path_id = 1;\n+    _construct_versioned_tracker(rs_metas);\n+\n+    // init _stale_version_path_map\n+    _init_stale_version_path_map(rs_metas, stale_metas);\n+}\n+\n+void TimestampedVersionTracker::_init_stale_version_path_map(\n+        const std::vector<RowsetMetaSharedPtr>& rs_metas,\n+        const std::vector<RowsetMetaSharedPtr>& stale_metas) {\n+\n+    if (stale_metas.empty()) {\n+        return;\n+    }\n+\n+    // sort stale meta by version diff (second version - first version)\n+    std::list<RowsetMetaSharedPtr> sorted_stale_metas;\n+    for (auto& rs : stale_metas) {\n+        sorted_stale_metas.emplace_back(rs);\n+    }\n+\n+    // 1. Sort the existing rowsets by version in ascending order\n+    sorted_stale_metas.sort([](const RowsetMetaSharedPtr& a, const RowsetMetaSharedPtr& b) {\n+        // compare by version diff between version.first and version.second\n+        int64_t a_diff = a->version().second - a->version().first;\n+        int64_t b_diff = b->version().second - b->version().first;\n+\n+        int diff = a_diff - b_diff;\n+        if (diff < 0) {\n+            return true;\n+        }\n+        else if (diff > 0) {\n+            return false;\n+        }\n+        // when the version diff is equal, compare rowset createtime\n+        return a->creation_time() < b->creation_time();\n+    });\n+\n+    // first_version -> (second_version -> rowset_meta)\n+    std::unordered_map<int64_t, std::unordered_map<int64_t, RowsetMetaSharedPtr>> stale_map;\n+\n+    // 2. generate stale path from stale_metas. traverse sorted_stale_metas and each time add stale_meta to stale_map.\n+    // when a stale path in stale_map can replace stale_meta in sorted_stale_metas, stale_map remove rowset_metas of a stale path\n+    // and add the path to _stale_version_path_map.\n+    for(auto& stale_meta:sorted_stale_metas) {\n+        std::vector<RowsetMetaSharedPtr> stale_path;\n+        // 2.1 find a path in stale_map can replace current stale_meta version\n+        bool r = _find_path_from_stale_map(stale_map, stale_meta->start_version(), stale_meta->end_version(), &stale_path);\n+\n+        // 2.2 add stale_meta to stale_map\n+        auto start_iter = stale_map.find(stale_meta->start_version());\n+        if (start_iter != stale_map.end()) {\n+            start_iter->second[stale_meta->end_version()] = stale_meta;\n+        } else {\n+            std::unordered_map<int64_t, RowsetMetaSharedPtr> item;\n+            item[stale_meta->end_version()] = stale_meta;\n+            stale_map[stale_meta->start_version()] = std::move(item);\n+        }\n+        // 2.3 add version to version_graph\n+        Version stale_meta_version = stale_meta->version();\n+        add_version(stale_meta_version);\n+        // 2.4 find the path\n+        if (r) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae440416d05761c8c832430061936a8aa0b7b22f"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bf6a83f123e5b4a7546fd848edb6eff0b274696", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/5bf6a83f123e5b4a7546fd848edb6eff0b274696", "committedDate": "2020-08-26T15:28:06Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08c07ce53af19c72d9d4dfd998fca76746029fb9", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/08c07ce53af19c72d9d4dfd998fca76746029fb9", "committedDate": "2020-08-28T08:48:19Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTA2MzQ1", "url": "https://github.com/apache/incubator-doris/pull/4454#pullrequestreview-478106345", "createdAt": "2020-08-29T07:32:14Z", "commit": {"oid": "08c07ce53af19c72d9d4dfd998fca76746029fb9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4858, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}