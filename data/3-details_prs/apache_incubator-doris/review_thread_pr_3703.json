{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNjk0NzAw", "number": 3703, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOToxNjoxMlrOEAASfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMToyOTowMVrOEAVHGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDQwMTg5OnYy", "diffSide": "RIGHT", "path": "be/src/runtime/stream_load/stream_load_context.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOToxNjoxMlrOGbAn5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMTowMjo0NFrOGbEPOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk3NDk1MQ==", "bodyText": "modify the document of stream load to explain this new fields", "url": "https://github.com/apache/incubator-doris/pull/3703#discussion_r430974951", "createdAt": "2020-05-27T09:16:12Z", "author": {"login": "morningman"}, "path": "be/src/runtime/stream_load/stream_load_context.cpp", "diffHunk": "@@ -70,6 +70,17 @@ std::string StreamLoadContext::to_json() const {\n     writer.Int64(receive_bytes);\n     writer.Key(\"LoadTimeMs\");\n     writer.Int64(load_cost_nanos / 1000000);\n+    writer.Key(\"BeginTxnTimeMs\");\n+    writer.Int64(begin_txn_cost_nanos / 1000000);\n+    writer.Key(\"StreamLoadPutTimeMs\");\n+    writer.Int64(stream_load_put_cost_nanos / 1000000);\n+    writer.Key(\"ReadDataTimeMs\");\n+    writer.Int64(read_data_cost_nanos / 1000000);\n+    writer.Key(\"WriteDataTimeMs\");\n+    writer.Int(write_data_cost_nanos / 1000000);\n+    writer.Key(\"CommitAndPublishTimeMs\");\n+    writer.Int64(commit_and_publish_txn_cost_nanos / 1000000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4243f671f4c4ef6c3303fe5f57e8c49f4ee758d5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAzNDE2OQ==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/3703#discussion_r431034169", "createdAt": "2020-05-27T11:02:44Z", "author": {"login": "caiconghui"}, "path": "be/src/runtime/stream_load/stream_load_context.cpp", "diffHunk": "@@ -70,6 +70,17 @@ std::string StreamLoadContext::to_json() const {\n     writer.Int64(receive_bytes);\n     writer.Key(\"LoadTimeMs\");\n     writer.Int64(load_cost_nanos / 1000000);\n+    writer.Key(\"BeginTxnTimeMs\");\n+    writer.Int64(begin_txn_cost_nanos / 1000000);\n+    writer.Key(\"StreamLoadPutTimeMs\");\n+    writer.Int64(stream_load_put_cost_nanos / 1000000);\n+    writer.Key(\"ReadDataTimeMs\");\n+    writer.Int64(read_data_cost_nanos / 1000000);\n+    writer.Key(\"WriteDataTimeMs\");\n+    writer.Int(write_data_cost_nanos / 1000000);\n+    writer.Key(\"CommitAndPublishTimeMs\");\n+    writer.Int64(commit_and_publish_txn_cost_nanos / 1000000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk3NDk1MQ=="}, "originalCommit": {"oid": "4243f671f4c4ef6c3303fe5f57e8c49f4ee758d5"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDQwNjE2OnYy", "diffSide": "RIGHT", "path": "docs/en/administrator-guide/config/be_config.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOToxNzoxNlrOGbAqdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMTowODowNlrOGbEZpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk3NTYwNw==", "bodyText": "Better give an suggestion value or an example. eg: \"In our env, we have xx BE with xx core, set this to xx, it can reach xx QPS\"", "url": "https://github.com/apache/incubator-doris/pull/3703#discussion_r430975607", "createdAt": "2020-05-27T09:17:16Z", "author": {"login": "morningman"}, "path": "docs/en/administrator-guide/config/be_config.md", "diffHunk": "@@ -77,6 +77,12 @@ Sometimes the query fails and an error message of `The server is overcrowded` wi\n \n Since this is a brpc configuration, users can also modify this parameter directly during operation. Modify by visiting `http://be_host:brpc_port/flags`.\n \n+### brpc_num_threads\n+\n+This configuration is mainly used to modify the num of bthreads for brpc. The default value is set to -1, which means the num of bthreads is #cpu-cores.\n+\n+User can set this configuration to a larger value to get better QPS performance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4243f671f4c4ef6c3303fe5f57e8c49f4ee758d5"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAzNjgzNg==", "bodyText": "Actually, I don't get the real QPS for brpc, I only test stream load operation in our enviroment with  brpc_num_threads set to be 500,  and the relationship between QPS and num of bthreads, I think https://github.com/apache/incubator-brpc/blob/master/docs/cn/benchmark.md is more convincing", "url": "https://github.com/apache/incubator-doris/pull/3703#discussion_r431036836", "createdAt": "2020-05-27T11:08:06Z", "author": {"login": "caiconghui"}, "path": "docs/en/administrator-guide/config/be_config.md", "diffHunk": "@@ -77,6 +77,12 @@ Sometimes the query fails and an error message of `The server is overcrowded` wi\n \n Since this is a brpc configuration, users can also modify this parameter directly during operation. Modify by visiting `http://be_host:brpc_port/flags`.\n \n+### brpc_num_threads\n+\n+This configuration is mainly used to modify the num of bthreads for brpc. The default value is set to -1, which means the num of bthreads is #cpu-cores.\n+\n+User can set this configuration to a larger value to get better QPS performance.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk3NTYwNw=="}, "originalCommit": {"oid": "4243f671f4c4ef6c3303fe5f57e8c49f4ee758d5"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDgxNTk2OnYy", "diffSide": "RIGHT", "path": "be/src/common/config.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMToyMTowOFrOGbEy2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMTozMDo0NFrOGbFFWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA0MzI5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                //the num of bthreads for brpc, the default value is set to -1, which means the num of bthreads is #cpu-cores\n          \n          \n            \n                //the number of bthreads for brpc, the default value is set to -1, which means the number of bthreads is #cpu-cores\n          \n      \n    \n    \n  \n\nfor Keep consistent with other variables", "url": "https://github.com/apache/incubator-doris/pull/3703#discussion_r431043291", "createdAt": "2020-05-27T11:21:08Z", "author": {"login": "wutiangan"}, "path": "be/src/common/config.h", "diffHunk": "@@ -30,6 +30,9 @@ namespace config {\n     // port for brpc\n     CONF_Int32(brpc_port, \"8060\");\n \n+    //the num of bthreads for brpc, the default value is set to -1, which means the num of bthreads is #cpu-cores", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66df4e9bfa1146024b3f5f0530bb8f0382f6333c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA0ODAyNA==", "bodyText": "fix", "url": "https://github.com/apache/incubator-doris/pull/3703#discussion_r431048024", "createdAt": "2020-05-27T11:30:44Z", "author": {"login": "caiconghui"}, "path": "be/src/common/config.h", "diffHunk": "@@ -30,6 +30,9 @@ namespace config {\n     // port for brpc\n     CONF_Int32(brpc_port, \"8060\");\n \n+    //the num of bthreads for brpc, the default value is set to -1, which means the num of bthreads is #cpu-cores", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA0MzI5MQ=="}, "originalCommit": {"oid": "66df4e9bfa1146024b3f5f0530bb8f0382f6333c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzgxMTQ0OnYy", "diffSide": "RIGHT", "path": "be/src/common/config.h", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMToyNzo0NFrOGbiouQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzoyNToyMVrOGbozZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzMjIxNw==", "bodyText": "I think 512 is some big, why not keep it 64?\nFor most scenario, 64 is enough.", "url": "https://github.com/apache/incubator-doris/pull/3703#discussion_r431532217", "createdAt": "2020-05-28T01:27:44Z", "author": {"login": "imay"}, "path": "be/src/common/config.h", "diffHunk": "@@ -137,7 +140,7 @@ namespace config {\n     // the maximum number of bytes to display on the debug webserver's log page\n     CONF_Int64(web_log_bytes, \"1048576\");\n     // number of threads available to serve backend execution requests\n-    CONF_Int32(be_service_threads, \"64\");\n+    CONF_Int32(be_service_threads, \"512\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a07c6e63686ac3a4a9c244dd9997dc3d6a67e5fd"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU1MTg1NA==", "bodyText": "actually for 64, the query and stream load performance is poor, as mentioned in issue #3696, query(exec_plan_fragment) and submit agent task share the same thread pool in thrift server. I have done some test, 512 can apparently improve the performance both for stream load and query(can not be rpc timeout), query(exec_plan_fragment) would not by blocked by stream load(such as submit publish txn task).in this setting, the publish timeout almost disapper.", "url": "https://github.com/apache/incubator-doris/pull/3703#discussion_r431551854", "createdAt": "2020-05-28T02:46:20Z", "author": {"login": "caiconghui"}, "path": "be/src/common/config.h", "diffHunk": "@@ -137,7 +140,7 @@ namespace config {\n     // the maximum number of bytes to display on the debug webserver's log page\n     CONF_Int64(web_log_bytes, \"1048576\");\n     // number of threads available to serve backend execution requests\n-    CONF_Int32(be_service_threads, \"64\");\n+    CONF_Int32(be_service_threads, \"512\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzMjIxNw=="}, "originalCommit": {"oid": "a07c6e63686ac3a4a9c244dd9997dc3d6a67e5fd"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzMzI1NQ==", "bodyText": "sorry, I find this config make no sense when thrift server use threaded type , so I revert the modification", "url": "https://github.com/apache/incubator-doris/pull/3703#discussion_r431633255", "createdAt": "2020-05-28T07:25:21Z", "author": {"login": "caiconghui"}, "path": "be/src/common/config.h", "diffHunk": "@@ -137,7 +140,7 @@ namespace config {\n     // the maximum number of bytes to display on the debug webserver's log page\n     CONF_Int64(web_log_bytes, \"1048576\");\n     // number of threads available to serve backend execution requests\n-    CONF_Int32(be_service_threads, \"64\");\n+    CONF_Int32(be_service_threads, \"512\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzMjIxNw=="}, "originalCommit": {"oid": "a07c6e63686ac3a4a9c244dd9997dc3d6a67e5fd"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzgxMzM4OnYy", "diffSide": "RIGHT", "path": "be/src/common/config.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMToyOTowMVrOGbip9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMzowMTo1MFrOGbkDXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzMjUzNA==", "bodyText": "48 is some big, how about 12?", "url": "https://github.com/apache/incubator-doris/pull/3703#discussion_r431532534", "createdAt": "2020-05-28T01:29:01Z", "author": {"login": "imay"}, "path": "be/src/common/config.h", "diffHunk": "@@ -271,7 +274,7 @@ namespace config {\n     // Port to start debug webserver on\n     CONF_Int32(webserver_port, \"8040\");\n     // Number of webserver workers\n-    CONF_Int32(webserver_num_workers, \"5\");\n+    CONF_Int32(webserver_num_workers, \"48\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a07c6e63686ac3a4a9c244dd9997dc3d6a67e5fd"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU1NTQyMA==", "bodyText": "if http server only for normal  light http request, I think 12, or even 5 is ok. but stream load is a heavy http request\uff0c once user use stream load to insert data, more threads can reduce the risk of no reponse from http server. the time cost for switch between threads i think we can ignore when compared to time cost in stream load.   48 threads don't cost too much memory resources. Above all. The advantages outweigh the disadvantages.", "url": "https://github.com/apache/incubator-doris/pull/3703#discussion_r431555420", "createdAt": "2020-05-28T03:01:50Z", "author": {"login": "caiconghui"}, "path": "be/src/common/config.h", "diffHunk": "@@ -271,7 +274,7 @@ namespace config {\n     // Port to start debug webserver on\n     CONF_Int32(webserver_port, \"8040\");\n     // Number of webserver workers\n-    CONF_Int32(webserver_num_workers, \"5\");\n+    CONF_Int32(webserver_num_workers, \"48\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzMjUzNA=="}, "originalCommit": {"oid": "a07c6e63686ac3a4a9c244dd9997dc3d6a67e5fd"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1637, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}