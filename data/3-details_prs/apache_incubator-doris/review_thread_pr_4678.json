{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNjg1OTQx", "number": 4678, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQwMjoyMToxNFrOEqDjxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQwMjoyMToxNFrOEqDjxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTMzOTU4OnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/planner/SelectNode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQwMjoyMToxNFrOHcEqJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQwMjoyMToxNFrOHcEqJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE5ODUwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.info(\"stats Select: cardinality={}\", this.cardinality);\n          \n          \n            \n                    LOG.debug(\"stats Select: cardinality={}\", this.cardinality);", "url": "https://github.com/apache/incubator-doris/pull/4678#discussion_r499198500", "createdAt": "2020-10-04T02:21:14Z", "author": {"login": "morningman"}, "path": "fe/fe-core/src/main/java/org/apache/doris/planner/SelectNode.java", "diffHunk": "@@ -63,13 +62,14 @@ public void init(Analyzer analyzer) throws UserException {\n     @Override\n     public void computeStats(Analyzer analyzer) {\n         super.computeStats(analyzer);\n-        if (getChild(0).cardinality == -1) {\n-            cardinality = -1;\n+        long cardinality = getChild(0).cardinality;\n+        double selectivity = computeSelectivity();\n+        if (cardinality < 0 || selectivity < 0) {\n+            this.cardinality = -1;\n         } else {\n-            cardinality = Math.round(((double) getChild(0).cardinality) * computeSelectivity());\n-            Preconditions.checkState(cardinality >= 0);\n+            this.cardinality = Math.round(cardinality * selectivity);\n         }\n-        LOG.info(\"stats Select: cardinality=\" + Long.toString(cardinality));\n+        LOG.info(\"stats Select: cardinality={}\", this.cardinality);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f3984fc755de32412c12a7f06e2e72d68f471bf"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 949, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}