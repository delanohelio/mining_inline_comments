{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MTcwODc0", "number": 3054, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMTozMzoyMVrODmI_Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMzozODo1NVrODmJ0Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzE5NzE4OnYy", "diffSide": "RIGHT", "path": "be/src/runtime/stream_load/stream_load_executor.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMTozMzoyMVrOFzY8RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMTozMzoyMVrOFzY8RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQzMDM0MQ==", "bodyText": "If you change this code, when FE return PUBLISH_TIMEOUT, here it will just return Status:OK() to the upper caller?\nI think we should return PUBLISH_TIMEOUT directly, but set ctx->need_rollback = false to false", "url": "https://github.com/apache/incubator-doris/pull/3054#discussion_r389430341", "createdAt": "2020-03-09T01:33:21Z", "author": {"login": "morningman"}, "path": "be/src/runtime/stream_load/stream_load_executor.cpp", "diffHunk": "@@ -188,7 +188,7 @@ Status StreamLoadExecutor::commit_txn(StreamLoadContext* ctx) {\n     // Return if this transaction is committed successful; otherwise, we need try to\n     // rollback this transaction\n     Status status(result.status);\n-    if (!status.ok()) {\n+    if (!status.ok() && status.code() != TStatusCode::PUBLISH_TIMEOUT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90d6877fafbd2cbc319c646dd27426da8eabdd54"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzMzMzQyOnYy", "diffSide": "RIGHT", "path": "be/src/runtime/stream_load/stream_load_executor.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMzozODo1NVrOFzaNGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwNzozMzowNlrOFzdCKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ1MTAzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (status.code() != TStatusCode::PUBLISH_TIMEOUT) {\n          \n          \n            \n                    if (status.code() == TStatusCode::PUBLISH_TIMEOUT) {", "url": "https://github.com/apache/incubator-doris/pull/3054#discussion_r389451034", "createdAt": "2020-03-09T03:38:55Z", "author": {"login": "morningman"}, "path": "be/src/runtime/stream_load/stream_load_executor.cpp", "diffHunk": "@@ -178,19 +180,24 @@ Status StreamLoadExecutor::commit_txn(StreamLoadContext* ctx) {\n     TLoadTxnCommitResult result;\n #ifndef BE_TEST\n     RETURN_IF_ERROR(ThriftRpcHelper::rpc<FrontendServiceClient>(\n-        master_addr.hostname, master_addr.port,\n-        [&request, &result] (FrontendServiceConnection& client) {\n-            client->loadTxnCommit(result, request);\n-        }, config::txn_commit_rpc_timeout_ms));\n+            master_addr.hostname, master_addr.port,\n+            [&request, &result](FrontendServiceConnection& client) {\n+                client->loadTxnCommit(result, request);\n+            },\n+            config::txn_commit_rpc_timeout_ms));\n #else\n     result = k_stream_load_commit_result;\n #endif\n-    // Return if this transaction is committed successful; otherwise, we need try to\n+    // Return if this transaction is committed successful; otherwise, we need try\n+    // to\n     // rollback this transaction\n     Status status(result.status);\n-    if (!status.ok() && status.code() != TStatusCode::PUBLISH_TIMEOUT) {\n+    if (!status.ok()) {\n         LOG(WARNING) << \"commit transaction failed, errmsg=\" << status.get_error_msg()\n-            << ctx->brief();\n+                     << ctx->brief();\n+        if (status.code() != TStatusCode::PUBLISH_TIMEOUT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ca0de98ade49f9d91123aa9efd75cbc102dfb40"}, "originalPosition": 167}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ5NzM4NQ==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/3054#discussion_r389497385", "createdAt": "2020-03-09T07:33:06Z", "author": {"login": "WingsGo"}, "path": "be/src/runtime/stream_load/stream_load_executor.cpp", "diffHunk": "@@ -178,19 +180,24 @@ Status StreamLoadExecutor::commit_txn(StreamLoadContext* ctx) {\n     TLoadTxnCommitResult result;\n #ifndef BE_TEST\n     RETURN_IF_ERROR(ThriftRpcHelper::rpc<FrontendServiceClient>(\n-        master_addr.hostname, master_addr.port,\n-        [&request, &result] (FrontendServiceConnection& client) {\n-            client->loadTxnCommit(result, request);\n-        }, config::txn_commit_rpc_timeout_ms));\n+            master_addr.hostname, master_addr.port,\n+            [&request, &result](FrontendServiceConnection& client) {\n+                client->loadTxnCommit(result, request);\n+            },\n+            config::txn_commit_rpc_timeout_ms));\n #else\n     result = k_stream_load_commit_result;\n #endif\n-    // Return if this transaction is committed successful; otherwise, we need try to\n+    // Return if this transaction is committed successful; otherwise, we need try\n+    // to\n     // rollback this transaction\n     Status status(result.status);\n-    if (!status.ok() && status.code() != TStatusCode::PUBLISH_TIMEOUT) {\n+    if (!status.ok()) {\n         LOG(WARNING) << \"commit transaction failed, errmsg=\" << status.get_error_msg()\n-            << ctx->brief();\n+                     << ctx->brief();\n+        if (status.code() != TStatusCode::PUBLISH_TIMEOUT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ1MTAzNA=="}, "originalCommit": {"oid": "5ca0de98ade49f9d91123aa9efd75cbc102dfb40"}, "originalPosition": 167}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2080, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}