{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMzE0MTE5", "number": 3004, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowNjo1OVrODjHNbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToxMzoxMVrODjHXng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTQ0ODc4OnYy", "diffSide": "RIGHT", "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowNjo1OVrOFuvMmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNTo0NDoxMlrOFvF38w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1MjA4OA==", "bodyText": "Why catch all exception", "url": "https://github.com/apache/incubator-doris/pull/3004#discussion_r384552088", "createdAt": "2020-02-26T15:06:59Z", "author": {"login": "HangyuanLiu"}, "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "diffHunk": "@@ -511,7 +598,7 @@ public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n             long currentStreamOffset;\n             try {\n                 currentStreamOffset = fsDataOutputStream.getPos();\n-            } catch (IOException e) {\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305deab5ebd67b0ff2abadeeab5b8cd09b146342"}, "originalPosition": 167}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkyMzYzNQ==", "bodyText": "should be 'IOException'", "url": "https://github.com/apache/incubator-doris/pull/3004#discussion_r384923635", "createdAt": "2020-02-27T05:44:12Z", "author": {"login": "frwrdt"}, "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "diffHunk": "@@ -511,7 +598,7 @@ public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n             long currentStreamOffset;\n             try {\n                 currentStreamOffset = fsDataOutputStream.getPos();\n-            } catch (IOException e) {\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1MjA4OA=="}, "originalCommit": {"oid": "305deab5ebd67b0ff2abadeeab5b8cd09b146342"}, "originalPosition": 167}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTQ2MTM3OnYy", "diffSide": "RIGHT", "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToxMDowNFrOFuvUhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNTo0MzozNlrOFvF3YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NDExNw==", "bodyText": "properties.getOrDefault ?", "url": "https://github.com/apache/incubator-doris/pull/3004#discussion_r384554117", "createdAt": "2020-02-26T15:10:04Z", "author": {"login": "HangyuanLiu"}, "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "diffHunk": "@@ -307,7 +343,58 @@ public BrokerFileSystem getFileSystem(String path, Map<String, String> propertie\n             fileSystem.getLock().unlock();\n         }\n     }\n-    \n+\n+    /**\n+     * visible for test\n+     *\n+     * file system handle is cached, the identity is host + accessKey_secretKey\n+     * @param path\n+     * @param properties\n+     * @return\n+     * @throws URISyntaxException\n+     * @throws Exception\n+     */\n+    public BrokerFileSystem getS3AFileSystem(String path, Map<String, String> properties) {\n+        WildcardURI pathUri = new WildcardURI(path);\n+        String accessKey = properties.containsKey(FS_S3A_ACCESS_KEY) ? properties.get(FS_S3A_ACCESS_KEY) : \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305deab5ebd67b0ff2abadeeab5b8cd09b146342"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkyMzQ4OA==", "bodyText": "ok", "url": "https://github.com/apache/incubator-doris/pull/3004#discussion_r384923488", "createdAt": "2020-02-27T05:43:36Z", "author": {"login": "frwrdt"}, "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "diffHunk": "@@ -307,7 +343,58 @@ public BrokerFileSystem getFileSystem(String path, Map<String, String> propertie\n             fileSystem.getLock().unlock();\n         }\n     }\n-    \n+\n+    /**\n+     * visible for test\n+     *\n+     * file system handle is cached, the identity is host + accessKey_secretKey\n+     * @param path\n+     * @param properties\n+     * @return\n+     * @throws URISyntaxException\n+     * @throws Exception\n+     */\n+    public BrokerFileSystem getS3AFileSystem(String path, Map<String, String> properties) {\n+        WildcardURI pathUri = new WildcardURI(path);\n+        String accessKey = properties.containsKey(FS_S3A_ACCESS_KEY) ? properties.get(FS_S3A_ACCESS_KEY) : \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NDExNw=="}, "originalCommit": {"oid": "305deab5ebd67b0ff2abadeeab5b8cd09b146342"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTQ3NDg2OnYy", "diffSide": "RIGHT", "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToxMzoxMVrOFuvcqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNTo0MzoyMlrOFvF3HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NjIwMQ==", "bodyText": "Please keep indentation", "url": "https://github.com/apache/incubator-doris/pull/3004#discussion_r384556201", "createdAt": "2020-02-26T15:13:11Z", "author": {"login": "HangyuanLiu"}, "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "diffHunk": "@@ -146,12 +182,12 @@ public BrokerFileSystem getFileSystem(String path, Map<String, String> propertie\n         String password = properties.getOrDefault(PASSWORD_KEY, \"\");\n         String dfsNameServices = properties.getOrDefault(DFS_NAMESERVICES_KEY, \"\");\n         String authentication = properties.getOrDefault(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n-            AUTHENTICATION_SIMPLE);\n+                AUTHENTICATION_SIMPLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305deab5ebd67b0ff2abadeeab5b8cd09b146342"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkyMzQyMQ==", "bodyText": "ok", "url": "https://github.com/apache/incubator-doris/pull/3004#discussion_r384923421", "createdAt": "2020-02-27T05:43:22Z", "author": {"login": "frwrdt"}, "path": "fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java", "diffHunk": "@@ -146,12 +182,12 @@ public BrokerFileSystem getFileSystem(String path, Map<String, String> propertie\n         String password = properties.getOrDefault(PASSWORD_KEY, \"\");\n         String dfsNameServices = properties.getOrDefault(DFS_NAMESERVICES_KEY, \"\");\n         String authentication = properties.getOrDefault(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n-            AUTHENTICATION_SIMPLE);\n+                AUTHENTICATION_SIMPLE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NjIwMQ=="}, "originalCommit": {"oid": "305deab5ebd67b0ff2abadeeab5b8cd09b146342"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2050, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}