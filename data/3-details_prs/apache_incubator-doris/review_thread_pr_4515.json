{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NjE5MDgz", "number": 4515, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxMjozODozNlrOEi3tPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxMjozODozNlrOEi3tPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTk5NzQwOnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/load/Load.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxMjozODozNlrOHQ8JHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNzoxMzo1MVrOHZ4udQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUyNDYzNg==", "bodyText": "We should not rely on \"the last one is running\", better filter it by state.\nSo that we can unify the logic just same as batch cancel.", "url": "https://github.com/apache/incubator-doris/pull/4515#discussion_r487524636", "createdAt": "2020-09-13T12:38:36Z", "author": {"login": "morningman"}, "path": "fe/fe-core/src/main/java/org/apache/doris/load/Load.java", "diffHunk": "@@ -1570,6 +1581,105 @@ public boolean isLabelExist(String dbName, String label) throws DdlException {\n         }\n     }\n \n+    public boolean cancelLoadJob(CancelLoadStmt stmt, boolean isAccurateMatch) throws DdlException {\n+        // get params\n+        String dbName = stmt.getDbName();\n+        String label = stmt.getLabel();\n+\n+        // get load job and check state\n+        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n+        if (db == null) {\n+            throw new DdlException(\"Db does not exist. name: \" + dbName);\n+        }\n+        // List of load jobs waiting to be cancelled\n+        List<LoadJob> loadJobs = Lists.newArrayList();\n+        readLock();\n+        try {\n+            Map<String, List<LoadJob>> labelToLoadJobs = dbLabelToLoadJobs.get(db.getId());\n+            if (labelToLoadJobs == null) {\n+                throw new DdlException(\"Load job does not exist\");\n+            }\n+\n+            // get jobs by label\n+            List<LoadJob> matchLoadJobs = Lists.newArrayList();\n+            if (isAccurateMatch) {\n+                if (labelToLoadJobs.containsKey(label)) {\n+                    matchLoadJobs.addAll(labelToLoadJobs.get(label));\n+                }\n+            } else {\n+                for (Map.Entry<String, List<LoadJob>> entry : labelToLoadJobs.entrySet()) {\n+                    if (entry.getKey().contains(label)) {\n+                        matchLoadJobs.addAll(entry.getValue());\n+                    }\n+                }\n+            }\n+\n+            if (matchLoadJobs.isEmpty()) {\n+                throw new DdlException(\"Load job does not exist\");\n+            }\n+\n+            // check state here\n+            if (isAccurateMatch) {\n+                // only the last one should be running", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655c006cf32541fbc8bc4d22cbcd8ab43d0e0d6f"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkwNTg0NQ==", "bodyText": "ok. I just unify the logic.", "url": "https://github.com/apache/incubator-doris/pull/4515#discussion_r496905845", "createdAt": "2020-09-29T17:13:51Z", "author": {"login": "xy720"}, "path": "fe/fe-core/src/main/java/org/apache/doris/load/Load.java", "diffHunk": "@@ -1570,6 +1581,105 @@ public boolean isLabelExist(String dbName, String label) throws DdlException {\n         }\n     }\n \n+    public boolean cancelLoadJob(CancelLoadStmt stmt, boolean isAccurateMatch) throws DdlException {\n+        // get params\n+        String dbName = stmt.getDbName();\n+        String label = stmt.getLabel();\n+\n+        // get load job and check state\n+        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n+        if (db == null) {\n+            throw new DdlException(\"Db does not exist. name: \" + dbName);\n+        }\n+        // List of load jobs waiting to be cancelled\n+        List<LoadJob> loadJobs = Lists.newArrayList();\n+        readLock();\n+        try {\n+            Map<String, List<LoadJob>> labelToLoadJobs = dbLabelToLoadJobs.get(db.getId());\n+            if (labelToLoadJobs == null) {\n+                throw new DdlException(\"Load job does not exist\");\n+            }\n+\n+            // get jobs by label\n+            List<LoadJob> matchLoadJobs = Lists.newArrayList();\n+            if (isAccurateMatch) {\n+                if (labelToLoadJobs.containsKey(label)) {\n+                    matchLoadJobs.addAll(labelToLoadJobs.get(label));\n+                }\n+            } else {\n+                for (Map.Entry<String, List<LoadJob>> entry : labelToLoadJobs.entrySet()) {\n+                    if (entry.getKey().contains(label)) {\n+                        matchLoadJobs.addAll(entry.getValue());\n+                    }\n+                }\n+            }\n+\n+            if (matchLoadJobs.isEmpty()) {\n+                throw new DdlException(\"Load job does not exist\");\n+            }\n+\n+            // check state here\n+            if (isAccurateMatch) {\n+                // only the last one should be running", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUyNDYzNg=="}, "originalCommit": {"oid": "655c006cf32541fbc8bc4d22cbcd8ab43d0e0d6f"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1073, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}