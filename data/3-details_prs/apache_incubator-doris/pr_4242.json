{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNDgxNjk0", "number": 4242, "title": "Add delete bitmap index and base operation", "bodyText": "Proposed changes\nAdd delete bitmap index and base operation.  #4051\nTypes of changes\n\n[] Bugfix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n[] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n[] Documentation Update (if none of the other choices apply)\n[] Code refactor (Modify the code structure, format the code, etc...)\n\nChecklist\nPut an x in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code.\n\n I have create an issue on #ISSUE, and have described the bug/feature there in detail\n Compiling and unit tests pass locally with my changes\n I have added tests that prove my fix is effective or that my feature works\n[] If this change need a document change, I have updated the document\n[] Any dependent changes have been merged", "createdAt": "2020-08-04T01:55:54Z", "url": "https://github.com/apache/incubator-doris/pull/4242", "merged": true, "mergeCommit": {"oid": "f2b2a0a70bc6d1fed3f5d4f853ede10b35a53f92"}, "closed": true, "closedAt": "2020-08-04T06:29:34Z", "author": {"login": "ZhangYu0123"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7QB6XgH2gAyNDYyNDgxNjk0OjY0YTI1ZjcwYzM3NmMyZDFmNDQzMzcyNjZjMjQ1YWM4NjU4NDFhNGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7gmUlAH2gAyNDYyNDgxNjk0OjE1OGIxODQ2MDA3NjZiNmE5ZDExNDBmMTEyNjlhNGZhMjAwODBhYWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "64a25f70c376c2d1f44337266c245ac865841a4d", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/64a25f70c376c2d1f44337266c245ac865841a4d", "committedDate": "2020-08-03T11:08:11Z", "message": "add delete bitmap index"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c54d6f348f52d7fcf77a10bcfede4ba3fe64cb4", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/6c54d6f348f52d7fcf77a10bcfede4ba3fe64cb4", "committedDate": "2020-08-03T15:02:51Z", "message": "delete index for batch delete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82252a77100edd5c1b305b7845976f47bae11f53", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/82252a77100edd5c1b305b7845976f47bae11f53", "committedDate": "2020-08-03T15:10:30Z", "message": "delete index for batch delete"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNDYxOTI0", "url": "https://github.com/apache/incubator-doris/pull/4242#pullrequestreview-460461924", "createdAt": "2020-08-04T02:54:14Z", "commit": {"oid": "82252a77100edd5c1b305b7845976f47bae11f53"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMjo1NDoxNVrOG7POSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMjo1NDoxNVrOG7POSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc2ODU4NQ==", "bodyText": "better to change to bitmap(), delete_bitmap() is easy to misunderstand", "url": "https://github.com/apache/incubator-doris/pull/4242#discussion_r464768585", "createdAt": "2020-08-04T02:54:15Z", "author": {"login": "yangzhg"}, "path": "be/src/olap/delete_bitmap_index.h", "diffHunk": "@@ -0,0 +1,118 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <iterator>\n+#include <string>\n+#include <vector>\n+#include <vector>\n+#include <roaring/roaring.hh>\n+\n+#include \"common/status.h\"\n+#include \"gen_cpp/segment_v2.pb.h\"\n+#include \"util/faststring.h\"\n+#include \"util/slice.h\"\n+\n+#include \"util/debug_util.h\"\n+\n+namespace doris {\n+\n+class DeleteBitmapIndexIterator;\n+class DeleteBitmapIndexDecoder;\n+\n+/// This class is a builder which can build delete bitmap index. SegmentWriter can use it to generate\n+/// delete bitmap index page and save it in segment.\n+class DeleteBitmapIndexBuilder {\n+public:\n+    /// Construction function of DeleteBitmapIndexBuilder\n+    DeleteBitmapIndexBuilder() : _num_items(0) {\n+    }\n+\n+    /// Add delete item to delete bitmap index\n+    Status add_delete_item(const uint32_t& _row_count);\n+\n+    /// How many bytes are required to serialize this bitmap\n+    uint64_t size() {\n+        return _delete_bitmap.getSizeInBytes(false);\n+    }\n+\n+    /// When the segment flush, use finalize function to flush index data to slice to generate index page \n+    /// and fill the page footer record meta.\n+    Status finalize(std::vector<Slice>* body, segment_v2::PageFooterPB* footer);\n+\n+private:\n+    /// the number of delete items in delete bitmap index\n+    uint32_t _num_items;\n+\n+    /// roaring bitmap to record rowids of delete items \n+    Roaring _delete_bitmap;\n+\n+    faststring _buf;\n+};\n+\n+/// An Iterator to iterate one delete bitmap index.\n+/// Client can use this class to access the bitmap.\n+class DeleteBitmapIndexIterator {\n+public:\n+    /// Construction function of DeleteBitmapIndexBuilder\n+    DeleteBitmapIndexIterator(const DeleteBitmapIndexDecoder* decoder)\n+            : _decoder(decoder) {}\n+\n+    /// get const delete bitmap to access delete bitmap record\n+    const Roaring& delete_bitmap() const;\n+\n+private:\n+    const DeleteBitmapIndexDecoder* _decoder;\n+};\n+\n+/// Used to decode bitmap ordinal to footer and encoded index data.\n+/// Usage:\n+///      DeleteBitmapIndexDecoder decoder;\n+///      decoder.parse(body, footer);\n+class DeleteBitmapIndexDecoder {\n+public:\n+    DeleteBitmapIndexDecoder(bool parsed = false) : _parsed(parsed), _delete_bitmap() {}\n+\n+    /// client should assure that body is available when this class is used\n+    Status parse(const Slice& body, const segment_v2::DeleteIndexFooterPB& footer);\n+\n+    /// The number of delete items in delete bitmap index\n+    uint32_t num_items() const {\n+        DCHECK(_parsed);\n+        return _footer.num_items();\n+    }\n+\n+    /// Get the iterator of DeleteBitmapIndex\n+    DeleteBitmapIndexIterator get_iterator() const { \n+        DCHECK(_parsed);\n+        return {this};\n+    }\n+\n+    /// get const delete bitmap to access delete bitmap record\n+    const Roaring& delete_bitmap() const { return _delete_bitmap; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82252a77100edd5c1b305b7845976f47bae11f53"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNDYyMDg1", "url": "https://github.com/apache/incubator-doris/pull/4242#pullrequestreview-460462085", "createdAt": "2020-08-04T02:54:50Z", "commit": {"oid": "82252a77100edd5c1b305b7845976f47bae11f53"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMjo1NDo1MFrOG7PO3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMjo1NDo1MFrOG7PO3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc2ODczNA==", "bodyText": "better to change to bitmap() or get_delete_bitmap, delete_bitmap() is easy to misunderstand", "url": "https://github.com/apache/incubator-doris/pull/4242#discussion_r464768734", "createdAt": "2020-08-04T02:54:50Z", "author": {"login": "yangzhg"}, "path": "be/src/olap/delete_bitmap_index.h", "diffHunk": "@@ -0,0 +1,118 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <iterator>\n+#include <string>\n+#include <vector>\n+#include <vector>\n+#include <roaring/roaring.hh>\n+\n+#include \"common/status.h\"\n+#include \"gen_cpp/segment_v2.pb.h\"\n+#include \"util/faststring.h\"\n+#include \"util/slice.h\"\n+\n+#include \"util/debug_util.h\"\n+\n+namespace doris {\n+\n+class DeleteBitmapIndexIterator;\n+class DeleteBitmapIndexDecoder;\n+\n+/// This class is a builder which can build delete bitmap index. SegmentWriter can use it to generate\n+/// delete bitmap index page and save it in segment.\n+class DeleteBitmapIndexBuilder {\n+public:\n+    /// Construction function of DeleteBitmapIndexBuilder\n+    DeleteBitmapIndexBuilder() : _num_items(0) {\n+    }\n+\n+    /// Add delete item to delete bitmap index\n+    Status add_delete_item(const uint32_t& _row_count);\n+\n+    /// How many bytes are required to serialize this bitmap\n+    uint64_t size() {\n+        return _delete_bitmap.getSizeInBytes(false);\n+    }\n+\n+    /// When the segment flush, use finalize function to flush index data to slice to generate index page \n+    /// and fill the page footer record meta.\n+    Status finalize(std::vector<Slice>* body, segment_v2::PageFooterPB* footer);\n+\n+private:\n+    /// the number of delete items in delete bitmap index\n+    uint32_t _num_items;\n+\n+    /// roaring bitmap to record rowids of delete items \n+    Roaring _delete_bitmap;\n+\n+    faststring _buf;\n+};\n+\n+/// An Iterator to iterate one delete bitmap index.\n+/// Client can use this class to access the bitmap.\n+class DeleteBitmapIndexIterator {\n+public:\n+    /// Construction function of DeleteBitmapIndexBuilder\n+    DeleteBitmapIndexIterator(const DeleteBitmapIndexDecoder* decoder)\n+            : _decoder(decoder) {}\n+\n+    /// get const delete bitmap to access delete bitmap record\n+    const Roaring& delete_bitmap() const;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82252a77100edd5c1b305b7845976f47bae11f53"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNDY1NDk4", "url": "https://github.com/apache/incubator-doris/pull/4242#pullrequestreview-460465498", "createdAt": "2020-08-04T03:06:43Z", "commit": {"oid": "82252a77100edd5c1b305b7845976f47bae11f53"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMzowNjo0NFrOG7PbUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMzowNjo0NFrOG7PbUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc3MTkyMQ==", "bodyText": "why not put this code in set_delete_bitmap?\nit is not a good idea to pass shared_ptr", "url": "https://github.com/apache/incubator-doris/pull/4242#discussion_r464771921", "createdAt": "2020-08-04T03:06:44Z", "author": {"login": "yangzhg"}, "path": "be/src/olap/rowset/segment_v2/segment_iterator.cpp", "diffHunk": "@@ -561,6 +561,29 @@ Status SegmentIterator::next_batch(RowBlockV2* block) {\n             i += range_size;\n         }\n     }\n+\n+    // phase 4: read delete index, fill in the row whether is delete.\n+    {\n+        std::shared_ptr<Roaring> current_bitmap(new Roaring());\n+    \n+        // fetch delete index\n+        const Roaring& delete_bitmap = _segment->delete_index_iterator().delete_bitmap();\n+\n+        const uint16_t* sv = block->selection_vector();\n+        const uint16_t sv_size = block->selected_size();\n+        uint16_t i = 0;\n+        // check the delete rows and fill in the current_bitmap\n+        // which use i in selection_vector as rowid \n+        while (i < sv_size) {\n+\n+            if(delete_bitmap.contains(_block_rowids[sv[i]])) {\n+                current_bitmap->add(i);\n+            }\n+            i++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82252a77100edd5c1b305b7845976f47bae11f53"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7257ee57f7995b0069180f1df917de497b4574aa", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/7257ee57f7995b0069180f1df917de497b4574aa", "committedDate": "2020-08-04T04:57:59Z", "message": "add delete bitmap index"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNTE3NTQ5", "url": "https://github.com/apache/incubator-doris/pull/4242#pullrequestreview-460517549", "createdAt": "2020-08-04T06:03:00Z", "commit": {"oid": "7257ee57f7995b0069180f1df917de497b4574aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNjowMzowMFrOG7SRDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNjowMzowMFrOG7SRDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgxODQ0NQ==", "bodyText": "use make_unique", "url": "https://github.com/apache/incubator-doris/pull/4242#discussion_r464818445", "createdAt": "2020-08-04T06:03:00Z", "author": {"login": "yangzhg"}, "path": "be/src/olap/row_block.cpp", "diffHunk": "@@ -52,6 +52,7 @@ OLAPStatus RowBlock::init(const RowBlockInfo& block_info) {\n     _info = block_info;\n     _null_supported = block_info.null_supported;\n     _capacity = _info.row_num;\n+    _delete_bitmap.reset(new Roaring());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7257ee57f7995b0069180f1df917de497b4574aa"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNTE3NTk1", "url": "https://github.com/apache/incubator-doris/pull/4242#pullrequestreview-460517595", "createdAt": "2020-08-04T06:03:07Z", "commit": {"oid": "7257ee57f7995b0069180f1df917de497b4574aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNjowMzowN1rOG7SRMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNjowMzowN1rOG7SRMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgxODQ4MQ==", "bodyText": "reset()", "url": "https://github.com/apache/incubator-doris/pull/4242#discussion_r464818481", "createdAt": "2020-08-04T06:03:07Z", "author": {"login": "yangzhg"}, "path": "be/src/olap/row_block.cpp", "diffHunk": "@@ -75,6 +76,7 @@ void RowBlock::clear() {\n     _pos = 0;\n     _limit = 0;\n     _mem_pool->clear();\n+    _delete_bitmap.reset(new Roaring());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7257ee57f7995b0069180f1df917de497b4574aa"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNTE3Njgz", "url": "https://github.com/apache/incubator-doris/pull/4242#pullrequestreview-460517683", "createdAt": "2020-08-04T06:03:19Z", "commit": {"oid": "7257ee57f7995b0069180f1df917de497b4574aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNjowMzoyMFrOG7SRdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNjowMzoyMFrOG7SRdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgxODU1MA==", "bodyText": "reset()", "url": "https://github.com/apache/incubator-doris/pull/4242#discussion_r464818550", "createdAt": "2020-08-04T06:03:20Z", "author": {"login": "yangzhg"}, "path": "be/src/olap/row_block2.h", "diffHunk": "@@ -59,6 +59,7 @@ class RowBlockV2 {\n     // all previously returned ColumnBlocks are invalidated after clear(), accessing them\n     // will result in undefined behavior.\n     void clear() {\n+        _delete_bitmap.reset(new Roaring());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7257ee57f7995b0069180f1df917de497b4574aa"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "158b184600766b6a9d1140f11269a4fa20080aac", "author": {"user": {"login": "ZhangYu0123", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/158b184600766b6a9d1140f11269a4fa20080aac", "committedDate": "2020-08-04T06:26:26Z", "message": "add delete bitmap index"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2122, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}