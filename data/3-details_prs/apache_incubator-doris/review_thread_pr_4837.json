{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NTQ4OTAz", "number": 4837, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMjoyNzo0NlrOE0yNZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNDo1Mjo1NlrOE2XB7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzg0MDM4OnYy", "diffSide": "RIGHT", "path": "be/src/olap/tablet.h", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMjoyNzo0NlrOHssk9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMjoyNTo0M1rOHtV6bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYyOTc0OA==", "bodyText": "Add comment for the new fields", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r516629748", "createdAt": "2020-11-03T12:27:46Z", "author": {"login": "morningman"}, "path": "be/src/olap/tablet.h", "diffHunk": "@@ -301,6 +303,10 @@ class Tablet : public BaseTablet {\n     // cumulative compaction policy\n     std::unique_ptr<CumulativeCompactionPolicy> _cumulative_compaction_policy;\n     std::string _cumulative_compaction_type;\n+\n+    int64_t _last_update_scan_count;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "372fc1df0e9dcf25ffe29cfee31c4241c28ef0aa"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNjk4OQ==", "bodyText": "done.", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r517306989", "createdAt": "2020-11-04T12:25:43Z", "author": {"login": "weizuo93"}, "path": "be/src/olap/tablet.h", "diffHunk": "@@ -301,6 +303,10 @@ class Tablet : public BaseTablet {\n     // cumulative compaction policy\n     std::unique_ptr<CumulativeCompactionPolicy> _cumulative_compaction_policy;\n     std::string _cumulative_compaction_type;\n+\n+    int64_t _last_update_scan_count;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYyOTc0OA=="}, "originalCommit": {"oid": "372fc1df0e9dcf25ffe29cfee31c4241c28ef0aa"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MTE4OTc0OnYy", "diffSide": "RIGHT", "path": "be/src/common/config.h", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwNzo0MzowMFrOHtMLpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwOTowODo1OVrOHtO-NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0NzU1Ng==", "bodyText": "Do they need to be normalized? If needed, you should define them as double.", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r517147556", "createdAt": "2020-11-04T07:43:00Z", "author": {"login": "acelyc111"}, "path": "be/src/common/config.h", "diffHunk": "@@ -329,6 +329,13 @@ namespace config {\n     CONF_mInt32(base_compaction_trace_threshold, \"10\");\n     CONF_mInt32(cumulative_compaction_trace_threshold, \"2\");\n \n+    // update tablet scan count in second\n+    CONF_mInt64(update_tablet_scan_count_interval_second, \"300\");\n+    // coefficient for tablet scan frequency and compaction score when finding a tablet for compaction\n+    CONF_mInt32(compaction_tablet_scan_frequency_factor, \"0\");\n+    CONF_mInt32(compaction_tablet_compaction_score_factor, \"1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "372fc1df0e9dcf25ffe29cfee31c4241c28ef0aa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE5MzI2OA==", "bodyText": "Do they need to be normalized? If needed, you should define them as double.\n\nNormalization is not required.", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r517193268", "createdAt": "2020-11-04T09:08:59Z", "author": {"login": "weizuo93"}, "path": "be/src/common/config.h", "diffHunk": "@@ -329,6 +329,13 @@ namespace config {\n     CONF_mInt32(base_compaction_trace_threshold, \"10\");\n     CONF_mInt32(cumulative_compaction_trace_threshold, \"2\");\n \n+    // update tablet scan count in second\n+    CONF_mInt64(update_tablet_scan_count_interval_second, \"300\");\n+    // coefficient for tablet scan frequency and compaction score when finding a tablet for compaction\n+    CONF_mInt32(compaction_tablet_scan_frequency_factor, \"0\");\n+    CONF_mInt32(compaction_tablet_compaction_score_factor, \"1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0NzU1Ng=="}, "originalCommit": {"oid": "372fc1df0e9dcf25ffe29cfee31c4241c28ef0aa"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDM1MTYwOnYy", "diffSide": "RIGHT", "path": "docs/zh-CN/administrator-guide/config/be_config.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNDo0NDozM1rOHvIfug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNjoyODo1NFrOHvgagg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NDMxNA==", "bodyText": "Why no document for these 2 configs?\nBetter give best practice for them.", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519184314", "createdAt": "2020-11-07T14:44:33Z", "author": {"login": "morningman"}, "path": "docs/zh-CN/administrator-guide/config/be_config.md", "diffHunk": "@@ -180,6 +180,10 @@ Metrics: {\"filtered_rows\":0,\"input_row_num\":3346807,\"input_rowsets_count\":42,\"in\n \n ### `column_dictionary_key_size_threshold`\n \n+### `compaction_tablet_compaction_score_factor`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3221d91d1d1a208f48f5e2419bb7a570219fd79b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3NjE5NA==", "bodyText": "Why no document for these 2 configs?\nBetter give best practice for them.\n\ndone.", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519576194", "createdAt": "2020-11-09T06:28:54Z", "author": {"login": "weizuo93"}, "path": "docs/zh-CN/administrator-guide/config/be_config.md", "diffHunk": "@@ -180,6 +180,10 @@ Metrics: {\"filtered_rows\":0,\"input_row_num\":3346807,\"input_rowsets_count\":42,\"in\n \n ### `column_dictionary_key_size_threshold`\n \n+### `compaction_tablet_compaction_score_factor`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NDMxNA=="}, "originalCommit": {"oid": "3221d91d1d1a208f48f5e2419bb7a570219fd79b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDM1Njc0OnYy", "diffSide": "RIGHT", "path": "be/src/olap/tablet_manager.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNDo1MDowM1rOHvIiGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNjoyODowMVrOHvgZig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NDkyMg==", "bodyText": "if compaction_tablet_scan_frequency_factor is zero, we can skip calling calculate_scan_frequency() to save some CPU.", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519184922", "createdAt": "2020-11-07T14:50:03Z", "author": {"login": "morningman"}, "path": "be/src/olap/tablet_manager.cpp", "diffHunk": "@@ -745,17 +747,22 @@ TabletSharedPtr TabletManager::find_best_tablet_to_compaction(\n                     }\n                 }\n \n-                uint32_t table_score = 0;\n+                double tablet_score = 0;\n+                uint32_t current_compaction_score = 0;\n                 {\n                     ReadLock rdlock(tablet_ptr->get_header_lock_ptr());\n                     if (compaction_type == CompactionType::BASE_COMPACTION) {\n-                        table_score = tablet_ptr->calc_base_compaction_score();\n+                        current_compaction_score = tablet_ptr->calc_base_compaction_score();\n                     } else if (compaction_type == CompactionType::CUMULATIVE_COMPACTION) {\n-                        table_score = tablet_ptr->calc_cumulative_compaction_score();\n+                        current_compaction_score = tablet_ptr->calc_cumulative_compaction_score();\n                     }\n                 }\n-                if (table_score > highest_score) {\n-                    highest_score = table_score;\n+                double scan_frequency = tablet_ptr->calculate_scan_frequency();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3221d91d1d1a208f48f5e2419bb7a570219fd79b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3NTk0Ng==", "bodyText": "if compaction_tablet_scan_frequency_factor is zero, we can skip calling calculate_scan_frequency() to save some CPU.\n\nIt's reasonable.", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519575946", "createdAt": "2020-11-09T06:28:01Z", "author": {"login": "weizuo93"}, "path": "be/src/olap/tablet_manager.cpp", "diffHunk": "@@ -745,17 +747,22 @@ TabletSharedPtr TabletManager::find_best_tablet_to_compaction(\n                     }\n                 }\n \n-                uint32_t table_score = 0;\n+                double tablet_score = 0;\n+                uint32_t current_compaction_score = 0;\n                 {\n                     ReadLock rdlock(tablet_ptr->get_header_lock_ptr());\n                     if (compaction_type == CompactionType::BASE_COMPACTION) {\n-                        table_score = tablet_ptr->calc_base_compaction_score();\n+                        current_compaction_score = tablet_ptr->calc_base_compaction_score();\n                     } else if (compaction_type == CompactionType::CUMULATIVE_COMPACTION) {\n-                        table_score = tablet_ptr->calc_cumulative_compaction_score();\n+                        current_compaction_score = tablet_ptr->calc_cumulative_compaction_score();\n                     }\n                 }\n-                if (table_score > highest_score) {\n-                    highest_score = table_score;\n+                double scan_frequency = tablet_ptr->calculate_scan_frequency();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NDkyMg=="}, "originalCommit": {"oid": "3221d91d1d1a208f48f5e2419bb7a570219fd79b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDM1ODg3OnYy", "diffSide": "RIGHT", "path": "be/src/olap/tablet.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNDo1Mjo1NlrOHvIjKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNjoyNjo1NVrOHvgYcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NTE5Mw==", "bodyText": "Why multi 60?", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519185193", "createdAt": "2020-11-07T14:52:56Z", "author": {"login": "morningman"}, "path": "be/src/olap/tablet.cpp", "diffHunk": "@@ -1309,4 +1311,16 @@ void Tablet::generate_tablet_meta_copy_unlocked(TabletMetaSharedPtr new_tablet_m\n     new_tablet_meta->init_from_pb(tablet_meta_pb);\n }\n \n+double Tablet::calculate_scan_frequency() {\n+    time_t now = time(nullptr);\n+    int64_t current_count = query_scan_count->value();\n+    double interval = difftime(now, _last_record_scan_count_timestamp);\n+    double scan_frequency = (current_count - _last_record_scan_count) * 60 / interval;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3221d91d1d1a208f48f5e2419bb7a570219fd79b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3NTY2Ng==", "bodyText": "Why multi 60?\n\nIt means the average count of tablet scans for each minute, Otherwise it will be the average count of tablet scans for each second .", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519575666", "createdAt": "2020-11-09T06:26:55Z", "author": {"login": "weizuo93"}, "path": "be/src/olap/tablet.cpp", "diffHunk": "@@ -1309,4 +1311,16 @@ void Tablet::generate_tablet_meta_copy_unlocked(TabletMetaSharedPtr new_tablet_m\n     new_tablet_meta->init_from_pb(tablet_meta_pb);\n }\n \n+double Tablet::calculate_scan_frequency() {\n+    time_t now = time(nullptr);\n+    int64_t current_count = query_scan_count->value();\n+    double interval = difftime(now, _last_record_scan_count_timestamp);\n+    double scan_frequency = (current_count - _last_record_scan_count) * 60 / interval;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NTE5Mw=="}, "originalCommit": {"oid": "3221d91d1d1a208f48f5e2419bb7a570219fd79b"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1017, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}