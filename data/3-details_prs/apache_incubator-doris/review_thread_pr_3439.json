{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwODI3MjA4", "number": 3439, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMzoyMzowNFrOD34DHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNTowOTowOFrOD6g54Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTE2NTc0OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMzoyMzowNFrOGOYV-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMzoyMzowNFrOGOYV-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjA5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (fn.getFunctionName().getFunction().equals(\"append_trailing_char_if_absent\")) {\n          \n          \n            \n                    if (fnName.getFunction().equalsIgnoreCase(\"append_trailing_char_if_absent\")) {", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417732090", "createdAt": "2020-04-30T03:23:04Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -604,6 +604,23 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n             return;\n         }\n \n+        if (fn.getFunctionName().getFunction().equals(\"append_trailing_char_if_absent\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c1adee5c49ca304903f792b5fa40055648c47c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTE3MTE5OnYy", "diffSide": "RIGHT", "path": "be/src/exprs/string_functions.cpp", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMzoyNjo1MFrOGOYZPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToxOTo1MVrOGRKoHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg==", "bodyText": "Why new result could null?", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417732926", "createdAt": "2020-04-30T03:26:50Z", "author": {"login": "kangkaisen"}, "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n+        return str;\n+    }\n+\n+    StringVal result(context, str.len + trailing_char.len);\n+    if (UNLIKELY(result.is_null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c1adee5c49ca304903f792b5fa40055648c47c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc3ODc0Ng==", "bodyText": "StringVal will alloc memory by context's FreePool, that may be null. I use this check according to other string_functions. But this check is_null may be useless, It can be removed", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417778746", "createdAt": "2020-04-30T06:18:23Z", "author": {"login": "Youngwb"}, "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n+        return str;\n+    }\n+\n+    StringVal result(context, str.len + trailing_char.len);\n+    if (UNLIKELY(result.is_null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg=="}, "originalCommit": {"oid": "c4c1adee5c49ca304903f792b5fa40055648c47c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ5Mjc4Ng==", "bodyText": "In fact, FreePool allocate never return null.\nSo result.is_null check is unnecessary.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r418492786", "createdAt": "2020-05-01T10:29:38Z", "author": {"login": "kangkaisen"}, "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n+        return str;\n+    }\n+\n+    StringVal result(context, str.len + trailing_char.len);\n+    if (UNLIKELY(result.is_null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg=="}, "originalCommit": {"oid": "c4c1adee5c49ca304903f792b5fa40055648c47c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNDU4Ng==", "bodyText": "I agree with kangkaisen, this check can be removed", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420614586", "createdAt": "2020-05-06T08:10:24Z", "author": {"login": "imay"}, "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n+        return str;\n+    }\n+\n+    StringVal result(context, str.len + trailing_char.len);\n+    if (UNLIKELY(result.is_null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg=="}, "originalCommit": {"oid": "c4c1adee5c49ca304903f792b5fa40055648c47c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1MzA4Ng==", "bodyText": "ok,Done", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420653086", "createdAt": "2020-05-06T09:19:51Z", "author": {"login": "Youngwb"}, "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n+        return str;\n+    }\n+\n+    StringVal result(context, str.len + trailing_char.len);\n+    if (UNLIKELY(result.is_null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg=="}, "originalCommit": {"oid": "c4c1adee5c49ca304903f792b5fa40055648c47c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTk5Mjg0OnYy", "diffSide": "RIGHT", "path": "docs/documentation/cn/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODo1OTowMFrOGOgMIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMDo0ODo0NlrOGOj8tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MDY0Mg==", "bodyText": "Should change this documents according to the new document framework.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417860642", "createdAt": "2020-04-30T08:59:00Z", "author": {"login": "imay"}, "path": "docs/documentation/cn/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,46 @@\n+<!--", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fac55ef8d5e269286fb5984cea639bceaeac533"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjIyOQ==", "bodyText": "Done", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417922229", "createdAt": "2020-04-30T10:48:46Z", "author": {"login": "Youngwb"}, "path": "docs/documentation/cn/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,46 @@\n+<!--", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MDY0Mg=="}, "originalCommit": {"oid": "3fac55ef8d5e269286fb5984cea639bceaeac533"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTk5OTc3OnYy", "diffSide": "RIGHT", "path": "docs/documentation/cn/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTowMDo1MFrOGOgQcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMDo0ODozOFrOGOj8ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MTc0NQ==", "bodyText": "Should explain when input trailing_char has multiple chars, how will this function act.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417861745", "createdAt": "2020-04-30T09:00:50Z", "author": {"login": "imay"}, "path": "docs/documentation/cn/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,46 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+  http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax\n+\n+`VARCHAR append_trailing_char_if_absent(VARCHAR str, VARCHAR trailing_char)`\n+\n+\u5982\u679c's'\u5b57\u7b26\u4e32\u975e\u7a7a\u5e76\u4e14\u672b\u5c3e\u4e0d\u5305\u542b'c'\u5b57\u7b26\uff0c\u5219\u5c06'c'\u5b57\u7b26\u9644\u52a0\u5230\u672b\u5c3e", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fac55ef8d5e269286fb5984cea639bceaeac533"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjE3MQ==", "bodyText": "Done", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417922171", "createdAt": "2020-04-30T10:48:38Z", "author": {"login": "Youngwb"}, "path": "docs/documentation/cn/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,46 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+  http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax\n+\n+`VARCHAR append_trailing_char_if_absent(VARCHAR str, VARCHAR trailing_char)`\n+\n+\u5982\u679c's'\u5b57\u7b26\u4e32\u975e\u7a7a\u5e76\u4e14\u672b\u5c3e\u4e0d\u5305\u542b'c'\u5b57\u7b26\uff0c\u5219\u5c06'c'\u5b57\u7b26\u9644\u52a0\u5230\u672b\u5c3e", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MTc0NQ=="}, "originalCommit": {"oid": "3fac55ef8d5e269286fb5984cea639bceaeac533"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDAwNDQ0OnYy", "diffSide": "RIGHT", "path": "gensrc/script/doris_builtins_functions.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTowMjowN1rOGOgTYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMDo1MTo0NlrOGOkCkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MjQ5Nw==", "bodyText": "Could you tell me in what scenario this function is used?", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417862497", "createdAt": "2020-04-30T09:02:07Z", "author": {"login": "imay"}, "path": "gensrc/script/doris_builtins_functions.py", "diffHunk": "@@ -531,6 +531,8 @@\n     [['rpad'], 'VARCHAR', ['VARCHAR', 'INT', 'VARCHAR'],\n             '_ZN5doris15StringFunctions4rpadEPN9doris_udf'\n             '15FunctionContextERKNS1_9StringValERKNS1_6IntValES6_'],\n+    [['append_trailing_char_if_absent'], 'VARCHAR', ['VARCHAR', 'VARCHAR'],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fac55ef8d5e269286fb5984cea639bceaeac533"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMzcyOQ==", "bodyText": "may be such like this :\nMySQL [test]> select append_trailing_char_if_absent('http://google.com','/');\n+----------------------------------------------------------+\n| append_trailing_char_if_absent('http://google.com', '/') |\n+----------------------------------------------------------+\n| http://google.com/                                       |\n+----------------------------------------------------------+\n1 row in set (0.01 sec)\n\nMySQL [test]> select append_trailing_char_if_absent('http://google.com/','/');\n+-----------------------------------------------------------+\n| append_trailing_char_if_absent('http://google.com/', '/') |\n+-----------------------------------------------------------+\n| http://google.com/                                        |\n+-----------------------------------------------------------+", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417923729", "createdAt": "2020-04-30T10:51:46Z", "author": {"login": "Youngwb"}, "path": "gensrc/script/doris_builtins_functions.py", "diffHunk": "@@ -531,6 +531,8 @@\n     [['rpad'], 'VARCHAR', ['VARCHAR', 'INT', 'VARCHAR'],\n             '_ZN5doris15StringFunctions4rpadEPN9doris_udf'\n             '15FunctionContextERKNS1_9StringValERKNS1_6IntValES6_'],\n+    [['append_trailing_char_if_absent'], 'VARCHAR', ['VARCHAR', 'VARCHAR'],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MjQ5Nw=="}, "originalCommit": {"oid": "3fac55ef8d5e269286fb5984cea639bceaeac533"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzQ2MjY2OnYy", "diffSide": "RIGHT", "path": "docs/en/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMzoyNDoyNlrOGQZPug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNjowNToyNlrOGRFGfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg0NDAyNg==", "bodyText": "Why not return null when the second parameter length is not 1.\nYou can't check its length if it is not const, such as a table column.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r419844026", "createdAt": "2020-05-05T03:24:26Z", "author": {"login": "imay"}, "path": "docs/en/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+{\n+    \"title\": \"append_trailing_char_if_absent\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax\n+\n+`VARCHAR append_trailing_char_if_absent(VARCHAR str, VARCHAR trailing_char)`\n+\n+If the s string is non-empty and does not contain the c character at the end, it appends the c character to the end.\n+Trailing_char contains only one character, and it will report an error if contains more than one character", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "546e6e87f0947c1b82f2aef32940880e1a83c349"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5NTI1Mw==", "bodyText": "Because it's function name contains trailing_char, and this is also consistent with the clickhose function. I did a cast in fe if (((StringLiteral) arg1).getValue().length() != 1) , It will throw ClassCastException when SlotRef cast to StringLiteral. I can also add type checking if necessary", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420095253", "createdAt": "2020-05-05T13:09:49Z", "author": {"login": "Youngwb"}, "path": "docs/en/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+{\n+    \"title\": \"append_trailing_char_if_absent\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax\n+\n+`VARCHAR append_trailing_char_if_absent(VARCHAR str, VARCHAR trailing_char)`\n+\n+If the s string is non-empty and does not contain the c character at the end, it appends the c character to the end.\n+Trailing_char contains only one character, and it will report an error if contains more than one character", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg0NDAyNg=="}, "originalCommit": {"oid": "546e6e87f0947c1b82f2aef32940880e1a83c349"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE0NTA5OQ==", "bodyText": "In the case append_trailing_char_if_absent(str, col1) in which col1 is a column of a table. You can not know if the length of col1 is 1 or not.\nAlso there is no need to keep the same with CK.\nIt is convention to return null when the argument is invalid in Doris.\nSo what I suggest is to return null when the input argument is not valid. And there is no need to check its input in FE.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420145099", "createdAt": "2020-05-05T14:17:50Z", "author": {"login": "imay"}, "path": "docs/en/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+{\n+    \"title\": \"append_trailing_char_if_absent\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax\n+\n+`VARCHAR append_trailing_char_if_absent(VARCHAR str, VARCHAR trailing_char)`\n+\n+If the s string is non-empty and does not contain the c character at the end, it appends the c character to the end.\n+Trailing_char contains only one character, and it will report an error if contains more than one character", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg0NDAyNg=="}, "originalCommit": {"oid": "546e6e87f0947c1b82f2aef32940880e1a83c349"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MjU1Ng==", "bodyText": "OK, Done", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420562556", "createdAt": "2020-05-06T06:05:26Z", "author": {"login": "Youngwb"}, "path": "docs/en/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+{\n+    \"title\": \"append_trailing_char_if_absent\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax\n+\n+`VARCHAR append_trailing_char_if_absent(VARCHAR str, VARCHAR trailing_char)`\n+\n+If the s string is non-empty and does not contain the c character at the end, it appends the c character to the end.\n+Trailing_char contains only one character, and it will report an error if contains more than one character", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg0NDAyNg=="}, "originalCommit": {"oid": "546e6e87f0947c1b82f2aef32940880e1a83c349"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODQyNjAxOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoxMjoyMFrOGRIVmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODo1MzoxNVrOGRJuKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNTU3OQ==", "bodyText": "I think this check is unnecessary, can be removed.\nIf you keep it, this will make this function more complicate.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420615579", "createdAt": "2020-05-06T08:12:20Z", "author": {"login": "imay"}, "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -605,6 +605,19 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n             return;\n         }\n \n+        if (fnName.getFunction().equalsIgnoreCase(\"append_trailing_char_if_absent\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYyNTg2MA==", "bodyText": "Yes\uff0cI understand there will make this function more complicate, but  I need to avoid two parameters be Non-String type\uff0csuch as append_trailing_char_if_absent(1,2), and I don't known how to handle this case if i don't check here. Maybe there is a better way to handle this case if you known.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420625860", "createdAt": "2020-05-06T08:31:08Z", "author": {"login": "Youngwb"}, "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -605,6 +605,19 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n             return;\n         }\n \n+        if (fnName.getFunction().equalsIgnoreCase(\"append_trailing_char_if_absent\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNTU3OQ=="}, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYyODE0Mw==", "bodyText": "For this case you mentioned, Doris can cast input argument to function's definition type. So you don't handle this in this place.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420628143", "createdAt": "2020-05-06T08:35:08Z", "author": {"login": "imay"}, "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -605,6 +605,19 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n             return;\n         }\n \n+        if (fnName.getFunction().equalsIgnoreCase(\"append_trailing_char_if_absent\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNTU3OQ=="}, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzODI0OA==", "bodyText": "ok\uff0cDone", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420638248", "createdAt": "2020-05-06T08:53:15Z", "author": {"login": "Youngwb"}, "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -605,6 +605,19 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n             return;\n         }\n \n+        if (fnName.getFunction().equalsIgnoreCase(\"append_trailing_char_if_absent\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNTU3OQ=="}, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODQyODg5OnYy", "diffSide": "RIGHT", "path": "be/test/exprs/string_functions_test.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoxMzoxOVrOGRIXcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODo1MzoyNFrOGRJufg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNjA0OQ==", "bodyText": "Should add test that second argument has multiple characters.", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420616049", "createdAt": "2020-05-06T08:13:19Z", "author": {"login": "imay"}, "path": "be/test/exprs/string_functions_test.cpp", "diffHunk": "@@ -252,6 +264,26 @@ TEST_F(StringFunctionsTest, null_or_empty) {\n     delete context;\n }\n \n+TEST_F(StringFunctionsTest, append_trailing_char_if_absent) {\n+    ASSERT_EQ(StringVal(\"ac\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"a\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"c\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"123c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"123c\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal::null(), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal::null(), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal::null(), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"a\"), StringVal::null()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzODMzNA==", "bodyText": "ok\uff0cDone", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420638334", "createdAt": "2020-05-06T08:53:24Z", "author": {"login": "Youngwb"}, "path": "be/test/exprs/string_functions_test.cpp", "diffHunk": "@@ -252,6 +264,26 @@ TEST_F(StringFunctionsTest, null_or_empty) {\n     delete context;\n }\n \n+TEST_F(StringFunctionsTest, append_trailing_char_if_absent) {\n+    ASSERT_EQ(StringVal(\"ac\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"a\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"c\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"123c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"123c\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal::null(), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal::null(), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal::null(), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"a\"), StringVal::null()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNjA0OQ=="}, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODQzMTQ5OnYy", "diffSide": "RIGHT", "path": "be/src/exprs/string_functions.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoxNDowNVrOGRIZHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoxNDowNVrOGRIZHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNjQ3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n          \n          \n            \n                if (str.ptr[str.len - 1] == trailing_char.ptr[0]) {", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420616476", "createdAt": "2020-05-06T08:14:05Z", "author": {"login": "imay"}, "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null || trailing_char.len != 1) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODQzNjQyOnYy", "diffSide": "RIGHT", "path": "be/src/exprs/string_functions.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoxNToyN1rOGRIcDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoxNToyN1rOGRIcDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNzIyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                StringVal result(context, str.len + trailing_char.len);\n          \n          \n            \n                StringVal result(context, str.len + 1);", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420617229", "createdAt": "2020-05-06T08:15:27Z", "author": {"login": "imay"}, "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null || trailing_char.len != 1) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n+        return str;\n+    }\n+\n+    StringVal result(context, str.len + trailing_char.len);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531f1d41ce099fed6e3139043bcca41a4eb9164d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjgzMTA1OnYy", "diffSide": "RIGHT", "path": "docs/en/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNTowOTowOFrOGSZO4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNTowOTowOFrOGSZO4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk0MDk2MA==", "bodyText": "split these lines with empty line", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r421940960", "createdAt": "2020-05-08T05:09:08Z", "author": {"login": "imay"}, "path": "docs/en/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+{\n+    \"title\": \"append_trailing_char_if_absent\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5ea1e98bc2f598d0d90692fc2dc99be72559317"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1714, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}