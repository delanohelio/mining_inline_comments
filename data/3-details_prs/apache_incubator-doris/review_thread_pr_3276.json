{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNTk3NDE2", "number": 3276, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo1Mzo0N1rODv5ZqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTowNDoyOFrODv5rcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTUwMTIwOnYy", "diffSide": "RIGHT", "path": "be/src/olap/data_dir.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo1Mzo0N1rOGClcgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo1Mzo0N1rOGClcgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM2Mzg0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                _tablet_set.emplace(tablet_info);\n          \n          \n            \n                _tablet_set.emplace(std::move(tablet_info));", "url": "https://github.com/apache/incubator-doris/pull/3276#discussion_r405363840", "createdAt": "2020-04-08T08:53:47Z", "author": {"login": "imay"}, "path": "be/src/olap/data_dir.cpp", "diffHunk": "@@ -395,69 +395,47 @@ OLAPStatus DataDir::get_shard(uint64_t* shard) {\n     return OLAP_SUCCESS;\n }\n \n-OLAPStatus DataDir::register_tablet(Tablet* tablet) {\n-    std::lock_guard<std::mutex> l(_mutex);\n-\n+void DataDir::register_tablet(Tablet* tablet) {\n     TabletInfo tablet_info(tablet->tablet_id(), tablet->schema_hash(), tablet->tablet_uid());\n-    _tablet_set.insert(tablet_info);\n-    return OLAP_SUCCESS;\n-}\n \n-OLAPStatus DataDir::deregister_tablet(Tablet* tablet) {\n     std::lock_guard<std::mutex> l(_mutex);\n+    _tablet_set.emplace(tablet_info);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "867b7a5fcba5e4ca8f3ab27ffeeb3aa065d54fb8"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTU0NjczOnYy", "diffSide": "RIGHT", "path": "be/src/olap/data_dir.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTowNDoyOFrOGCl4OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTowNDoyOFrOGCl4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM3MDkzNw==", "bodyText": "I think it will be better to have a function with argument shard_id, tablet_id and schema_hash. Then there won't be the following functions which do the same thing.\nAnd the string operator + performance is bad, prefer strings::Substitute.", "url": "https://github.com/apache/incubator-doris/pull/3276#discussion_r405370937", "createdAt": "2020-04-08T09:04:28Z", "author": {"login": "imay"}, "path": "be/src/olap/data_dir.cpp", "diffHunk": "@@ -395,69 +395,47 @@ OLAPStatus DataDir::get_shard(uint64_t* shard) {\n     return OLAP_SUCCESS;\n }\n \n-OLAPStatus DataDir::register_tablet(Tablet* tablet) {\n-    std::lock_guard<std::mutex> l(_mutex);\n-\n+void DataDir::register_tablet(Tablet* tablet) {\n     TabletInfo tablet_info(tablet->tablet_id(), tablet->schema_hash(), tablet->tablet_uid());\n-    _tablet_set.insert(tablet_info);\n-    return OLAP_SUCCESS;\n-}\n \n-OLAPStatus DataDir::deregister_tablet(Tablet* tablet) {\n     std::lock_guard<std::mutex> l(_mutex);\n+    _tablet_set.emplace(tablet_info);\n+}\n \n+void DataDir::deregister_tablet(Tablet* tablet) {\n     TabletInfo tablet_info(tablet->tablet_id(), tablet->schema_hash(), tablet->tablet_uid());\n+\n+    std::lock_guard<std::mutex> l(_mutex);\n     _tablet_set.erase(tablet_info);\n-    return OLAP_SUCCESS;\n }\n \n void DataDir::clear_tablets(std::vector<TabletInfo>* tablet_infos) {\n-    for (auto& tablet : _tablet_set) {\n-        tablet_infos->push_back(tablet);\n-    }\n+    std::lock_guard<std::mutex> l(_mutex);\n+\n+    tablet_infos->insert(tablet_infos->end(), _tablet_set.begin(), _tablet_set.end());\n     _tablet_set.clear();\n }\n \n std::string DataDir::get_absolute_shard_path(const std::string& shard_string) {\n     return _path + DATA_PREFIX + \"/\" + shard_string;\n }\n \n-std::string DataDir::get_absolute_tablet_path(TabletMeta* tablet_meta, bool with_schema_hash) {\n+template <typename T>\n+std::string DataDir::get_absolute_tablet_path(const T& tablet_meta, bool with_schema_hash) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "867b7a5fcba5e4ca8f3ab27ffeeb3aa065d54fb8"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1874, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}