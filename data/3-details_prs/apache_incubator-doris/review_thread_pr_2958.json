{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NzQwNzAx", "number": 2958, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0ODowNlrODhjZlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzo0NDowMVrODh4cYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTA5NTkxOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0ODowNlrOFsWNpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNToyNToyN1rOFssCHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NTYwNg==", "bodyText": "Better in English", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382045606", "createdAt": "2020-02-20T14:48:06Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzEwMg==", "bodyText": "ok", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403102", "createdAt": "2020-02-21T05:25:27Z", "author": {"login": "worker24h"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NTYwNg=="}, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTEzOTc2OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1ODoyMlrOFsWosQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNToyNTozOVrOFssCQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MjUyOQ==", "bodyText": "Code style, { should be after the last line", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382052529", "createdAt": "2020-02-20T14:58:22Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {\n+    private long code;\n+    private String msg;\n+    public static long NORMAL = 0;\n+\n+    // for common error\n+    public static long IMPOSSIBLE_ERROR_ERR = 1; // \u7528\u4e8e\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\u7684\u5730\u65b9 \u51fa\u73b0\u4e86\u4e00\u4e2a\u9519\u8bef\n+    public static long INTERNAL_ERR = 2;\n+    public static long REPLICA_FEW_ERR = 3;\n+    public static long PARTITIONS_ERR = 4;\n+    public static long DB_ERR = 5;\n+    public static long TABLE_ERR = 6;\n+    public static long META_NOT_FOUND_ERR = 7;\n+\n+    // for load job error\n+    public static long MANUAL_PAUSE_ERR = 100;\n+    public static long MANUAL_STOP_ERR = 101;\n+    public static long TOO_MANY_FAILURE_ROWS_ERR = 102;\n+    public static long CREATE_TASKS_ERR = 103;\n+    public static long TASKS_ABORT_ERR = 104;\n+\n+    public InternalErrorCode()\n+    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzEzOA==", "bodyText": "I changed", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403138", "createdAt": "2020-02-21T05:25:39Z", "author": {"login": "worker24h"}, "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {\n+    private long code;\n+    private String msg;\n+    public static long NORMAL = 0;\n+\n+    // for common error\n+    public static long IMPOSSIBLE_ERROR_ERR = 1; // \u7528\u4e8e\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\u7684\u5730\u65b9 \u51fa\u73b0\u4e86\u4e00\u4e2a\u9519\u8bef\n+    public static long INTERNAL_ERR = 2;\n+    public static long REPLICA_FEW_ERR = 3;\n+    public static long PARTITIONS_ERR = 4;\n+    public static long DB_ERR = 5;\n+    public static long TABLE_ERR = 6;\n+    public static long META_NOT_FOUND_ERR = 7;\n+\n+    // for load job error\n+    public static long MANUAL_PAUSE_ERR = 100;\n+    public static long MANUAL_STOP_ERR = 101;\n+    public static long TOO_MANY_FAILURE_ROWS_ERR = 102;\n+    public static long CREATE_TASKS_ERR = 103;\n+    public static long TASKS_ABORT_ERR = 104;\n+\n+    public InternalErrorCode()\n+    {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MjUyOQ=="}, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTE4Mjg5OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowOTowN1rOFsXEZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNToyNTo1OFrOFssCiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTYyMA==", "bodyText": "only replicationNum of BE alive is not enough. Consider we have 100 BEs in a cluster, only 3 alive is not enough.\nAnd the replicationNum will because 0 once FE restart or Master changing, cause you don't persist it.\nI didn't think about how many BE alive would be more suitable. Consider we have 100 BEs in a cluster\uff0c97 is alive, but the job may still fail because all replicas of a table may be on that 3 dead BE.\nMaybe we can add a config like min_alive_be_num_for_auto_resume ?\ndefault is 0. And here we judge like:\nmax(quorum of BE, min_alive_be_num_for_auto_resume) ?", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382059620", "createdAt": "2020-02-20T15:09:07Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse\n+     * @param jobRoutine\n+     * @return\n+     */\n+    public static boolean isNeedAutoSchedule(RoutineLoadJob jobRoutine) {\n+        if (jobRoutine.state != RoutineLoadJob.JobState.PAUSED) {\n+            return false;\n+        }\n+        if (jobRoutine.autoResumeLock) {//\u8868\u793a\u53ea\u80fd\u624b\u52a8\u6062\u590d\n+            return false;\n+        }\n+        /**\n+         * \u8fd9\u79cd\u9519\u8bef\u662f BE\u6302\u6389\u624d\u4f1a\u51fa\u73b0\u7684\u573a\u666f\n+         * \u589e\u52a0\u8ba1\u6570\u5668\u3001\u6062\u590d\u9501\u5b9a\u529f\u80fd\u4e3b\u8981\u662f\u4e3a\u4e86\u907f\u514d\u65e0\u9650\u5236\u7684\u6062\u590d\n+         */\n+        if (jobRoutine.pauseReason.getCode() == InternalErrorCode.REPLICA_FEW_ERR) {\n+            int alive =  aliveBeCount(jobRoutine.clusterName);\n+            if (alive < jobRoutine.replicationNum) {// be\u5b58\u6d3b\u4e2a\u6570\u5c0f\u4e8e\u6700\u5c0f\u526f\u672c\u6570", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzIxMQ==", "bodyText": "Good idea", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403211", "createdAt": "2020-02-21T05:25:58Z", "author": {"login": "worker24h"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse\n+     * @param jobRoutine\n+     * @return\n+     */\n+    public static boolean isNeedAutoSchedule(RoutineLoadJob jobRoutine) {\n+        if (jobRoutine.state != RoutineLoadJob.JobState.PAUSED) {\n+            return false;\n+        }\n+        if (jobRoutine.autoResumeLock) {//\u8868\u793a\u53ea\u80fd\u624b\u52a8\u6062\u590d\n+            return false;\n+        }\n+        /**\n+         * \u8fd9\u79cd\u9519\u8bef\u662f BE\u6302\u6389\u624d\u4f1a\u51fa\u73b0\u7684\u573a\u666f\n+         * \u589e\u52a0\u8ba1\u6570\u5668\u3001\u6062\u590d\u9501\u5b9a\u529f\u80fd\u4e3b\u8981\u662f\u4e3a\u4e86\u907f\u514d\u65e0\u9650\u5236\u7684\u6062\u590d\n+         */\n+        if (jobRoutine.pauseReason.getCode() == InternalErrorCode.REPLICA_FEW_ERR) {\n+            int alive =  aliveBeCount(jobRoutine.clusterName);\n+            if (alive < jobRoutine.replicationNum) {// be\u5b58\u6d3b\u4e2a\u6570\u5c0f\u4e8e\u6700\u5c0f\u526f\u672c\u6570", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTYyMA=="}, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTE4ODc4OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNToxMDoyOFrOFsXIGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNToyNjoyMFrOFssCxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MDU3MQ==", "bodyText": "Make the 5min configuration. Add it to Config.java.\nAnd I think we should add another config to disable this auto resume feature, in case we've got some bad cases.", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382060571", "createdAt": "2020-02-20T15:10:28Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse\n+     * @param jobRoutine\n+     * @return\n+     */\n+    public static boolean isNeedAutoSchedule(RoutineLoadJob jobRoutine) {\n+        if (jobRoutine.state != RoutineLoadJob.JobState.PAUSED) {\n+            return false;\n+        }\n+        if (jobRoutine.autoResumeLock) {//\u8868\u793a\u53ea\u80fd\u624b\u52a8\u6062\u590d\n+            return false;\n+        }\n+        /**\n+         * \u8fd9\u79cd\u9519\u8bef\u662f BE\u6302\u6389\u624d\u4f1a\u51fa\u73b0\u7684\u573a\u666f\n+         * \u589e\u52a0\u8ba1\u6570\u5668\u3001\u6062\u590d\u9501\u5b9a\u529f\u80fd\u4e3b\u8981\u662f\u4e3a\u4e86\u907f\u514d\u65e0\u9650\u5236\u7684\u6062\u590d\n+         */\n+        if (jobRoutine.pauseReason.getCode() == InternalErrorCode.REPLICA_FEW_ERR) {\n+            int alive =  aliveBeCount(jobRoutine.clusterName);\n+            if (alive < jobRoutine.replicationNum) {// be\u5b58\u6d3b\u4e2a\u6570\u5c0f\u4e8e\u6700\u5c0f\u526f\u672c\u6570\n+                return false;\n+            }\n+            if (jobRoutine.firstResumeTimestamp == 0) {//\u8bf4\u660e\u7b2c\u4e00\u6b21\u81ea\u52a8\u6062\u590d\n+                jobRoutine.firstResumeTimestamp = System.currentTimeMillis();\n+                jobRoutine.autoResumeCount = 1;\n+                return true;\n+            } else {\n+                long current = System.currentTimeMillis();\n+                if (current - jobRoutine.firstResumeTimestamp < 5*60*1000) {//\u57285\u5206\u949f\u4e4b\u5185", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzI2OQ==", "bodyText": "I add a configuration for the time", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403269", "createdAt": "2020-02-21T05:26:20Z", "author": {"login": "worker24h"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse\n+     * @param jobRoutine\n+     * @return\n+     */\n+    public static boolean isNeedAutoSchedule(RoutineLoadJob jobRoutine) {\n+        if (jobRoutine.state != RoutineLoadJob.JobState.PAUSED) {\n+            return false;\n+        }\n+        if (jobRoutine.autoResumeLock) {//\u8868\u793a\u53ea\u80fd\u624b\u52a8\u6062\u590d\n+            return false;\n+        }\n+        /**\n+         * \u8fd9\u79cd\u9519\u8bef\u662f BE\u6302\u6389\u624d\u4f1a\u51fa\u73b0\u7684\u573a\u666f\n+         * \u589e\u52a0\u8ba1\u6570\u5668\u3001\u6062\u590d\u9501\u5b9a\u529f\u80fd\u4e3b\u8981\u662f\u4e3a\u4e86\u907f\u514d\u65e0\u9650\u5236\u7684\u6062\u590d\n+         */\n+        if (jobRoutine.pauseReason.getCode() == InternalErrorCode.REPLICA_FEW_ERR) {\n+            int alive =  aliveBeCount(jobRoutine.clusterName);\n+            if (alive < jobRoutine.replicationNum) {// be\u5b58\u6d3b\u4e2a\u6570\u5c0f\u4e8e\u6700\u5c0f\u526f\u672c\u6570\n+                return false;\n+            }\n+            if (jobRoutine.firstResumeTimestamp == 0) {//\u8bf4\u660e\u7b2c\u4e00\u6b21\u81ea\u52a8\u6062\u590d\n+                jobRoutine.firstResumeTimestamp = System.currentTimeMillis();\n+                jobRoutine.autoResumeCount = 1;\n+                return true;\n+            } else {\n+                long current = System.currentTimeMillis();\n+                if (current - jobRoutine.firstResumeTimestamp < 5*60*1000) {//\u57285\u5206\u949f\u4e4b\u5185", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MDU3MQ=="}, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTIwNDU2OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/routineload/KafkaRoutineLoadJob.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNToxMzo1NVrOFsXRvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNToyNjoyOVrOFssC8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MzAzNw==", "bodyText": "Code style", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382063037", "createdAt": "2020-02-20T15:13:55Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/KafkaRoutineLoadJob.java", "diffHunk": "@@ -299,7 +306,11 @@ protected boolean unprotectNeedReschedule() throws UserException {\n                     return true;\n                 }\n             }\n-        } else {\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzMxMg==", "bodyText": "ok", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403312", "createdAt": "2020-02-21T05:26:29Z", "author": {"login": "worker24h"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/KafkaRoutineLoadJob.java", "diffHunk": "@@ -299,7 +306,11 @@ protected boolean unprotectNeedReschedule() throws UserException {\n                     return true;\n                 }\n             }\n-        } else {\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MzAzNw=="}, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTIzNDc0OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNToyMDo1M1rOFsXkdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzo0MDozNlrOFs3LgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2NzgzMQ==", "bodyText": "It is strange to define a \"ErrorCode\" class with a msg in it.\nHow about just leave the \"code\" in InternalErrorCode, without the msg.\nAnd you can put the InternalErrorCode into an Exception class.\nAnd in routine load, you can also define a new class named ErrorReason with an InternalErrorCode and a msg in it.\nIf so, it would be more flexible to use the code everywhere we like.", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382067831", "createdAt": "2020-02-20T15:20:53Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NTcyOQ==", "bodyText": "Why not just using Enum?", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382585729", "createdAt": "2020-02-21T13:40:36Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2NzgzMQ=="}, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTIzNzMyOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNToyMTozNVrOFsXmJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNToyNjozN1rOFssDIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2ODI2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static long NORMAL = 0;\n          \n          \n            \n                public static long OK = 0;", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382068262", "createdAt": "2020-02-20T15:21:35Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {\n+    private long code;\n+    private String msg;\n+    public static long NORMAL = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzM2MQ==", "bodyText": "ok", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403361", "createdAt": "2020-02-21T05:26:37Z", "author": {"login": "worker24h"}, "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {\n+    private long code;\n+    private String msg;\n+    public static long NORMAL = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2ODI2Mg=="}, "originalCommit": {"oid": "1cf05c8768351ceb28096be9e250374d9e0eec41"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODUyODY4OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/common/Config.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzozODo1MFrOFs3IXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzozOTowNFrOFs3Ivg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NDkyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @ConfField(mutable = true)\n          \n          \n            \n                @ConfField(mutable = true, masterOnly = true)", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382584927", "createdAt": "2020-02-21T13:38:50Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/common/Config.java", "diffHunk": "@@ -999,5 +999,16 @@\n      */\n     @ConfField\n     public static boolean check_java_version = true;\n+\n+    \n+    @ConfField(mutable = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NTAyMg==", "bodyText": "Also add comment for this config. Better to tell the user the best practice to set its value.", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382585022", "createdAt": "2020-02-21T13:39:04Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/common/Config.java", "diffHunk": "@@ -999,5 +999,16 @@\n      */\n     @ConfField\n     public static boolean check_java_version = true;\n+\n+    \n+    @ConfField(mutable = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NDkyNw=="}, "originalCommit": {"oid": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODUzNjM2OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/routineload/RoutineLoadJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzo0MTozMlrOFs3NMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzo0MTozMlrOFs3NMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NjE2MQ==", "bodyText": "English", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382586161", "createdAt": "2020-02-21T13:41:32Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/RoutineLoadJob.java", "diffHunk": "@@ -173,8 +175,12 @@ public boolean isFinalState() {\n     protected int currentTaskConcurrentNum;\n     protected RoutineLoadProgress progress;\n \n-    protected String pauseReason = \"\";\n-    protected String cancelReason = \"\";\n+    protected long firstResumeTimestamp; //\u7b2c\u4e00\u6b21\u6062\u590d\u65f6\u95f4\u6233", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODU0MTcyOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/routineload/RoutineLoadTaskScheduler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzo0MzoyNVrOFs3QmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzo0MzoyNVrOFs3QmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NzAzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }catch (Exception e) {\n          \n          \n            \n                    } catch (Exception e) {", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382587032", "createdAt": "2020-02-21T13:43:25Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/RoutineLoadTaskScheduler.java", "diffHunk": "@@ -130,10 +131,15 @@ private void scheduleOneTask(RoutineLoadTaskInfo routineLoadTaskInfo) throws Exc\n                 // allocate failed, push it back to the queue to wait next scheduling\n                 needScheduleTasksQueue.put(routineLoadTaskInfo);\n             }\n-        } catch (Exception e) {\n+        } catch (UserException e) {\n+            routineLoadManager.getJob(routineLoadTaskInfo.getJobId()).\n+                    updateState(JobState.PAUSED,\n+                    new ErrorReason(e.getErrorCode().getCode(), e.getMessage()), false);\n+            throw e;\n+        }catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODU0MzIzOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzo0Mzo1MFrOFs3RhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzo0Mzo1MFrOFs3RhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NzI2OQ==", "bodyText": "Add some comments for this class", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382587269", "createdAt": "2020-02-21T13:43:50Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.Config;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODU0MzY4OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzo0NDowMVrOFs3R0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzo0NDowMVrOFs3R0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NzM0Nw==", "bodyText": "English", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382587347", "createdAt": "2020-02-21T13:44:01Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.Config;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+\n+    /**\n+     * check if RoutineLoadJob is auto schedule\n+     * @param jobRoutine\n+     * @return\n+     */\n+    public static boolean isNeedAutoSchedule(RoutineLoadJob jobRoutine) {\n+        if (jobRoutine.state != RoutineLoadJob.JobState.PAUSED) {\n+            return false;\n+        }\n+        if (jobRoutine.autoResumeLock) {//only manual resume for unlock\n+            return false;\n+        }\n+        /**\n+         * \u8fd9\u79cd\u9519\u8bef\u662f BE\u6302\u6389\u624d\u4f1a\u51fa\u73b0\u7684\u573a\u666f", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2020, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}