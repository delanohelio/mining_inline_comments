{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1OTcyOTE5", "number": 3744, "title": "[Feature] Add QueryDetail to store query statistics.", "bodyText": "Store the query statistics in memory.\nSupporting RESTFUL interface to get the statistics.", "createdAt": "2020-06-01T13:16:57Z", "url": "https://github.com/apache/incubator-doris/pull/3744", "merged": true, "mergeCommit": {"oid": "6c4d7c60dd03386c4186c7a4a1eb1d609ded8278"}, "closed": true, "closedAt": "2020-06-15T10:16:55Z", "author": {"login": "chaoyli"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnA8UogFqTQyMTg3OTM3MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrdefzgFqTQzMDQ4NTE1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxODc5Mzcx", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-421879371", "createdAt": "2020-06-01T14:15:00Z", "commit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDoxNTowMFrOGdMFHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDoxNTowMFrOGdMFHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI1OTgwNA==", "bodyText": "Can you explain why set eventTime as endTime?", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433259804", "createdAt": "2020-06-01T14:15:00Z", "author": {"login": "xy720"}, "path": "fe/src/main/java/org/apache/doris/qe/ConnectProcessor.java", "diffHunk": "@@ -126,6 +129,11 @@ private void auditAfterExec(String origStmt, StatementBase parsedStmt, PQuerySta\n                 MetricRepo.HISTO_QUERY_LATENCY.update(elapseMs);\n             }\n             ctx.getAuditEventBuilder().setIsQuery(true);\n+            ctx.getQueryDetail().setEventTime(endTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxODgxMzAw", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-421881300", "createdAt": "2020-06-01T14:17:28Z", "commit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDoxNzoyOVrOGdMKig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDoxNzoyOVrOGdMKig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI2MTE5NA==", "bodyText": "Do we need to clean up outdated querydetails when getQueryDetails() is not called for a long time \uff1f", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433261194", "createdAt": "2020-06-01T14:17:29Z", "author": {"login": "xy720"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetailQueue.java", "diffHunk": "@@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.doris.qe.QueryDetail;\n+\n+// Queue of QueryDetail.\n+// It's used to collect queries for monitor.\n+// The default copacity is 10000.\n+public class QueryDetailQueue {\n+    private static Map<String, QueryDetail> queryDetails = Maps.newHashMap();\n+    private static int queryNumber = 0;\n+    private static int queryCapacity = 10000;\n+\n+    public static synchronized void addOrUpdateQueryDetail(QueryDetail queryDetail) {\n+        if (queryDetails.get(queryDetail.getQueryId()) == null) {\n+            if (queryNumber > queryCapacity) {\n+                return;\n+            }\n+            queryNumber++;\n+            queryDetails.put(queryDetail.getQueryId(), queryDetail);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTA3ODY2", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-421907866", "createdAt": "2020-06-01T14:50:30Z", "commit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1MDozMFrOGdNWdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1MDozMFrOGdNWdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4MDYzMA==", "bodyText": "Why not use queue?", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433280630", "createdAt": "2020-06-01T14:50:30Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetailQueue.java", "diffHunk": "@@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.doris.qe.QueryDetail;\n+\n+// Queue of QueryDetail.\n+// It's used to collect queries for monitor.\n+// The default copacity is 10000.\n+public class QueryDetailQueue {\n+    private static Map<String, QueryDetail> queryDetails = Maps.newHashMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTA4NzAw", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-421908700", "createdAt": "2020-06-01T14:51:25Z", "commit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1MToyNlrOGdNY6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1MToyNlrOGdNY6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4MTI1OA==", "bodyText": "You could use putIfAbsent", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433281258", "createdAt": "2020-06-01T14:51:26Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetailQueue.java", "diffHunk": "@@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.doris.qe.QueryDetail;\n+\n+// Queue of QueryDetail.\n+// It's used to collect queries for monitor.\n+// The default copacity is 10000.\n+public class QueryDetailQueue {\n+    private static Map<String, QueryDetail> queryDetails = Maps.newHashMap();\n+    private static int queryNumber = 0;\n+    private static int queryCapacity = 10000;\n+\n+    public static synchronized void addOrUpdateQueryDetail(QueryDetail queryDetail) {\n+        if (queryDetails.get(queryDetail.getQueryId()) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTA5NDEx", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-421909411", "createdAt": "2020-06-01T14:52:15Z", "commit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1MjoxNVrOGdNa5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1MjoxNVrOGdNa5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4MTc2Ng==", "bodyText": "Why clear when get?", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433281766", "createdAt": "2020-06-01T14:52:15Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetailQueue.java", "diffHunk": "@@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.doris.qe.QueryDetail;\n+\n+// Queue of QueryDetail.\n+// It's used to collect queries for monitor.\n+// The default copacity is 10000.\n+public class QueryDetailQueue {\n+    private static Map<String, QueryDetail> queryDetails = Maps.newHashMap();\n+    private static int queryNumber = 0;\n+    private static int queryCapacity = 10000;\n+\n+    public static synchronized void addOrUpdateQueryDetail(QueryDetail queryDetail) {\n+        if (queryDetails.get(queryDetail.getQueryId()) == null) {\n+            if (queryNumber > queryCapacity) {\n+                return;\n+            }\n+            queryNumber++;\n+            queryDetails.put(queryDetail.getQueryId(), queryDetail);\n+        } else {\n+            queryDetails.replace(queryDetail.getQueryId(), queryDetail);\n+        }\n+    }\n+\n+    public static synchronized List<QueryDetail> getQueryDetails(long eventTime) {\n+        List<QueryDetail> results = Lists.newArrayList();\n+        for (QueryDetail queryDetail : queryDetails.values()) {\n+            if (queryDetail.getEventTime() > eventTime) {\n+                results.add(queryDetail);\n+            }\n+        }\n+        queryDetails.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTA5NDQ3", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-421909447", "createdAt": "2020-06-01T14:52:17Z", "commit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1MjoxOFrOGdNbAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1MjoxOFrOGdNbAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4MTc5Mw==", "bodyText": "Shouldn't change the default value.", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433281793", "createdAt": "2020-06-01T14:52:18Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/qe/SessionVariable.java", "diffHunk": "@@ -109,7 +109,7 @@\n \n     // if true, need report to coordinator when plan fragment execute successfully.\n     @VariableMgr.VarAttr(name = IS_REPORT_SUCCESS)\n-    private boolean isReportSucc = false;\n+    private boolean isReportSucc = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTEwNjIx", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-421910621", "createdAt": "2020-06-01T14:53:41Z", "commit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1Mzo0MVrOGdNeXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1Mzo0MVrOGdNeXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4MjY1Mg==", "bodyText": "I still don't understand what's the meaning of eventTime?  and why do we need it?", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433282652", "createdAt": "2020-06-01T14:53:41Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetail.java", "diffHunk": "@@ -0,0 +1,114 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+public class QueryDetail {\n+    public enum QueryMemState {\n+        RUNNING,\n+        FINISHED,\n+        FAILED,\n+        CANCELLED \n+    };\n+\n+    // When query received, FE will construct a QueryDtail  \n+    // object. This object will set queryId, startTime, sql\n+    // fields. As well state is be set as RUNNING. \n+    // After query finished, endTime and latency will\n+    // be set and state will be updated to be FINISHED/FAILED/CANCELLED\n+    // according to the query execution results.\n+    // So, one query will be inserted into as a item and \n+    // be udpated upon finished. To indicate the two event,\n+    // a extra field named eventTime is added.\n+    private long eventTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTExNzQ1", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-421911745", "createdAt": "2020-06-01T14:55:03Z", "commit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1NTowNFrOGdNhkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1NTowNFrOGdNhkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4MzQ3Mg==", "bodyText": "prefer to \"/api/connection\"", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433283472", "createdAt": "2020-06-01T14:55:04Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/http/rest/ConnectionAction.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.http.rest;\n+\n+import io.netty.handler.codec.http.HttpMethod;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import org.apache.doris.common.util.DebugUtil;\n+import org.apache.doris.http.ActionController;\n+import org.apache.doris.http.BaseRequest;\n+import org.apache.doris.http.BaseResponse;\n+import org.apache.doris.http.IllegalArgException;\n+import org.apache.doris.qe.ConnectContext;\n+import org.apache.doris.service.ExecuteEnv;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+// This class is used to get current query_id of connection_id.\n+// Every connection holds at most one query at every point.\n+// Some we can get query_id firstly, and get query by query_id.\n+public class ConnectionAction extends RestBaseAction {\n+    public ConnectionAction(ActionController controller) {\n+        super(controller);\n+    }\n+\n+    public static void registerAction (ActionController controller) throws IllegalArgException {\n+        controller.registerHandler(HttpMethod.GET, \"/connection\", new ConnectionAction(controller));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTEzMzY0", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-421913364", "createdAt": "2020-06-01T14:57:00Z", "commit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1NzowMVrOGdNmgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1NzowMVrOGdNmgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4NDczOA==", "bodyText": "prefer response by json", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433284738", "createdAt": "2020-06-01T14:57:01Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/http/rest/ConnectionAction.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.http.rest;\n+\n+import io.netty.handler.codec.http.HttpMethod;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import org.apache.doris.common.util.DebugUtil;\n+import org.apache.doris.http.ActionController;\n+import org.apache.doris.http.BaseRequest;\n+import org.apache.doris.http.BaseResponse;\n+import org.apache.doris.http.IllegalArgException;\n+import org.apache.doris.qe.ConnectContext;\n+import org.apache.doris.service.ExecuteEnv;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+// This class is used to get current query_id of connection_id.\n+// Every connection holds at most one query at every point.\n+// Some we can get query_id firstly, and get query by query_id.\n+public class ConnectionAction extends RestBaseAction {\n+    public ConnectionAction(ActionController controller) {\n+        super(controller);\n+    }\n+\n+    public static void registerAction (ActionController controller) throws IllegalArgException {\n+        controller.registerHandler(HttpMethod.GET, \"/connection\", new ConnectionAction(controller));\n+    }\n+\n+    @Override\n+    public void execute(BaseRequest request, BaseResponse response) {\n+        String connStr = request.getSingleParameter(\"connection_id\");\n+        if (connStr == null) {\n+            response.getContent().append(\"not valid parameter\");\n+            sendResult(request, response, HttpResponseStatus.BAD_REQUEST);\n+            return;\n+        }\n+        long connectionId = Long.valueOf(connStr.trim());\n+        ConnectContext context = ExecuteEnv.getInstance().getScheduler().getContext(connectionId);\n+        if (context == null || context.queryId() == null) {\n+            response.getContent().append(\"connection id \" + connectionId + \" not found.\");\n+            sendResult(request, response, HttpResponseStatus.NOT_FOUND);\n+            return;\n+        }\n+        String queryId = DebugUtil.printId(context.queryId());\n+        response.getContent().append(queryId);\n+        sendResult(request, response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTI2OTcw", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-421926970", "createdAt": "2020-06-01T15:12:58Z", "commit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNToxMjo1OFrOGdOL8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNToyMjozN1rOGdOipQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI5NDMyMw==", "bodyText": "Add some comment about this class.", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433294323", "createdAt": "2020-06-01T15:12:58Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/http/rest/ProfileAction.java", "diffHunk": "@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.http.rest;\n+\n+import org.apache.doris.common.util.ProfileManager;\n+import org.apache.doris.http.ActionController;\n+import org.apache.doris.http.BaseRequest;\n+import org.apache.doris.http.BaseResponse;\n+import org.apache.doris.http.IllegalArgException;\n+\n+import io.netty.handler.codec.http.HttpMethod;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+\n+public class ProfileAction extends RestBaseAction {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI5NjY0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // When query received, FE will construct a QueryDtail  \n          \n          \n            \n                // When query received, FE will construct a QueryDetail", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433296644", "createdAt": "2020-06-01T15:16:40Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetail.java", "diffHunk": "@@ -0,0 +1,114 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+public class QueryDetail {\n+    public enum QueryMemState {\n+        RUNNING,\n+        FINISHED,\n+        FAILED,\n+        CANCELLED \n+    };\n+\n+    // When query received, FE will construct a QueryDtail  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMwMDEzMw==", "bodyText": "You call this class a Queue, so I think it some kind of FIFO struct.\nBut here if you find queryNumber > queryCapacity, you just discard the new incoming queries?", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r433300133", "createdAt": "2020-06-01T15:22:37Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetailQueue.java", "diffHunk": "@@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.doris.qe.QueryDetail;\n+\n+// Queue of QueryDetail.\n+// It's used to collect queries for monitor.\n+// The default copacity is 10000.\n+public class QueryDetailQueue {\n+    private static Map<String, QueryDetail> queryDetails = Maps.newHashMap();\n+    private static int queryNumber = 0;\n+    private static int queryCapacity = 10000;\n+\n+    public static synchronized void addOrUpdateQueryDetail(QueryDetail queryDetail) {\n+        if (queryDetails.get(queryDetail.getQueryId()) == null) {\n+            if (queryNumber > queryCapacity) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8346a0b5c650a6d5bfb900ce65276da87602529f"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MTkxMzMy", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-428191332", "createdAt": "2020-06-10T15:45:59Z", "commit": {"oid": "88e7b765b722e572e941839db0a8a8d0709c7419"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo0NTo1OVrOGh7MiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1NTo0MlrOGh7nAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIyNjA1Nw==", "bodyText": "Why call it \"Mem\" State? How about just QueryState\uff1f", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r438226057", "createdAt": "2020-06-10T15:45:59Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetail.java", "diffHunk": "@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+public class QueryDetail {\n+    public enum QueryMemState {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e7b765b722e572e941839db0a8a8d0709c7419"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIyOTM3OA==", "bodyText": "Forget to update the queryNumber?\nAnd I think queryNumber is useless, you can just use totalQueries.size()", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r438229378", "createdAt": "2020-06-10T15:50:53Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetailQueue.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.doris.qe.QueryDetail;\n+\n+// Queue of QueryDetail.\n+// It's used to collect queries for monitor.\n+// The default copacity is 10000.\n+public class QueryDetailQueue {\n+    private static Map<String, QueryDetail> runningQueries = Maps.newHashMap();\n+    private static LinkedList<QueryDetail> totalQueries = new LinkedList<QueryDetail>();\n+    private static int queryNumber = 0;\n+    private static int queryCapacity = 10000;\n+\n+    public static synchronized void addOrUpdateQueryDetail(QueryDetail queryDetail) {\n+        if (runningQueries.get(queryDetail.getQueryId()) == null) {\n+            queryNumber++;\n+            runningQueries.put(queryDetail.getQueryId(), queryDetail);\n+            totalQueries.add(queryDetail);\n+        } else {\n+            QueryDetail qDetail = runningQueries.remove(queryDetail.getQueryId());\n+            qDetail.setLatency(queryDetail.getLatency());\n+            qDetail.setState(queryDetail.getState());\n+        }\n+        if (queryNumber > queryCapacity) {\n+            QueryDetail qDetail = totalQueries.remove();\n+            runningQueries.remove(qDetail.getQueryId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e7b765b722e572e941839db0a8a8d0709c7419"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIyOTc0MQ==", "bodyText": "Are you sure to \"remove\" it here? I think it should be \"get\"?", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r438229741", "createdAt": "2020-06-10T15:51:26Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetailQueue.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.doris.qe.QueryDetail;\n+\n+// Queue of QueryDetail.\n+// It's used to collect queries for monitor.\n+// The default copacity is 10000.\n+public class QueryDetailQueue {\n+    private static Map<String, QueryDetail> runningQueries = Maps.newHashMap();\n+    private static LinkedList<QueryDetail> totalQueries = new LinkedList<QueryDetail>();\n+    private static int queryNumber = 0;\n+    private static int queryCapacity = 10000;\n+\n+    public static synchronized void addOrUpdateQueryDetail(QueryDetail queryDetail) {\n+        if (runningQueries.get(queryDetail.getQueryId()) == null) {\n+            queryNumber++;\n+            runningQueries.put(queryDetail.getQueryId(), queryDetail);\n+            totalQueries.add(queryDetail);\n+        } else {\n+            QueryDetail qDetail = runningQueries.remove(queryDetail.getQueryId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e7b765b722e572e941839db0a8a8d0709c7419"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzMjgzNA==", "bodyText": "Why removing the qDetails?  This method is not reentrant?", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r438232834", "createdAt": "2020-06-10T15:55:42Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetailQueue.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.doris.qe.QueryDetail;\n+\n+// Queue of QueryDetail.\n+// It's used to collect queries for monitor.\n+// The default copacity is 10000.\n+public class QueryDetailQueue {\n+    private static Map<String, QueryDetail> runningQueries = Maps.newHashMap();\n+    private static LinkedList<QueryDetail> totalQueries = new LinkedList<QueryDetail>();\n+    private static int queryNumber = 0;\n+    private static int queryCapacity = 10000;\n+\n+    public static synchronized void addOrUpdateQueryDetail(QueryDetail queryDetail) {\n+        if (runningQueries.get(queryDetail.getQueryId()) == null) {\n+            queryNumber++;\n+            runningQueries.put(queryDetail.getQueryId(), queryDetail);\n+            totalQueries.add(queryDetail);\n+        } else {\n+            QueryDetail qDetail = runningQueries.remove(queryDetail.getQueryId());\n+            qDetail.setLatency(queryDetail.getLatency());\n+            qDetail.setState(queryDetail.getState());\n+        }\n+        if (queryNumber > queryCapacity) {\n+            QueryDetail qDetail = totalQueries.remove();\n+            runningQueries.remove(qDetail.getQueryId());\n+        }\n+    }\n+\n+    public static synchronized List<QueryDetail> getQueryDetails(long eventTime) {\n+        List<QueryDetail> results = Lists.newArrayList();\n+        int pos = 0;\n+        Iterator<QueryDetail> it = totalQueries.iterator();\n+        while(it.hasNext()) {\n+            QueryDetail queryDetail = it.next();\n+            if (queryDetail.getEventTime() > eventTime) {\n+                results.add(queryDetail);\n+            } else {\n+                pos++;\n+            }\n+        }\n+        for (int i = 0; i < pos; ++i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e7b765b722e572e941839db0a8a8d0709c7419"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDAzMjg3", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-429003287", "createdAt": "2020-06-11T15:04:46Z", "commit": {"oid": "b2d49654792a572be6bad045c844b63bee3c9251"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTowNDo0NlrOGihhOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTowNDo0NlrOGihhOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg1Mzk0NQ==", "bodyText": "Better not changing it.", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r438853945", "createdAt": "2020-06-11T15:04:46Z", "author": {"login": "morningman"}, "path": "be/src/service/http_service.cpp", "diffHunk": "@@ -91,7 +91,7 @@ Status HttpService::start() {\n     // register metrics\n     {\n         auto action = new MetricsAction(DorisMetrics::instance()->metrics());\n-        _ev_http_server->register_handler(HttpMethod::GET, \"/metrics\", action);\n+        _ev_http_server->register_handler(HttpMethod::GET, \"/api/metrics\", action);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2d49654792a572be6bad045c844b63bee3c9251"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjE5Njky", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-430219692", "createdAt": "2020-06-14T13:32:51Z", "commit": {"oid": "0e54bfb0cb65d611facb7ee3dfe2bcdd36905bb4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxMzozMjo1MVrOGjdHyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxMzo0MjozNFrOGjdLGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMDQ3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"language\": \"en\"\n          \n          \n            \n                \"language\": \"zh-CN\"", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r439830474", "createdAt": "2020-06-14T13:32:51Z", "author": {"login": "morningman"}, "path": "docs/zh-CN/administrator-guide/http-actions/connection-action.md", "diffHunk": "@@ -0,0 +1,36 @@\n+---\n+{\n+    \"title\": \"CONNECTION\",\n+    \"language\": \"en\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e54bfb0cb65d611facb7ee3dfe2bcdd36905bb4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMDQ4OQ==", "bodyText": "\u4e2d\u6587\u6587\u6863\u4f7f\u7528\u4e2d\u6587\u6807\u9898", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r439830489", "createdAt": "2020-06-14T13:33:03Z", "author": {"login": "morningman"}, "path": "docs/zh-CN/administrator-guide/http-actions/connection-action.md", "diffHunk": "@@ -0,0 +1,36 @@\n+---\n+{\n+    \"title\": \"CONNECTION\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# CONNECTION\n+## description", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e54bfb0cb65d611facb7ee3dfe2bcdd36905bb4"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMDUxNA==", "bodyText": "\u9700\u8981\u7ed9\u51faapi\u7684\u8fd4\u56de\u7ed3\u679c\u793a\u4f8b", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r439830514", "createdAt": "2020-06-14T13:33:21Z", "author": {"login": "morningman"}, "path": "docs/zh-CN/administrator-guide/http-actions/connection-action.md", "diffHunk": "@@ -0,0 +1,36 @@\n+---\n+{\n+    \"title\": \"CONNECTION\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# CONNECTION\n+## description\n+   \n+    \u901a\u8fc7connection_id, \u83b7\u53d6\u5f53\u524d\u8fde\u63a5\u7684query_id\n+\n+    URI: http://fe_host:fe_http_port/api/connection?connection_id=123\n+\n+## example", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e54bfb0cb65d611facb7ee3dfe2bcdd36905bb4"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMDU2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"language\": \"en\"\n          \n          \n            \n                \"language\": \"zh-CN\"", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r439830569", "createdAt": "2020-06-14T13:34:09Z", "author": {"login": "morningman"}, "path": "docs/zh-CN/administrator-guide/http-actions/query-detail-action.md", "diffHunk": "@@ -0,0 +1,37 @@\n+---\n+{\n+    \"title\": \"QUERY DETAIL\",\n+    \"language\": \"en\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e54bfb0cb65d611facb7ee3dfe2bcdd36905bb4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMDgxMQ==", "bodyText": "\u9700\u8981\u8bf4\u660e event_time \u7684\u542b\u4e49\uff0c\u6bd4\u5982\u662f\u83b7\u53d6\u4ece event_time \u4e4b\u540e\u7684\u6240\u6709 query \u7684\u6267\u884c\u60c5\u51b5", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r439830811", "createdAt": "2020-06-14T13:36:51Z", "author": {"login": "morningman"}, "path": "docs/zh-CN/administrator-guide/http-actions/query-detail-action.md", "diffHunk": "@@ -0,0 +1,37 @@\n+---\n+{\n+    \"title\": \"QUERY DETAIL\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# QUERY DETAIL\n+## description\n+   \n+    \u4eceFE\u83b7\u53d6\u6240\u6709\u7684query\u7ec6\u8282\uff0c\u83b7\u53d6\u5173\u4e8e\u67e5\u8be2\u6267\u884c\u7684\u76f8\u5173\u4fe1\u606f\u3002\n+    event_time\u7684\u5355\u4f4d\u662f\u6beb\u79d2\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e54bfb0cb65d611facb7ee3dfe2bcdd36905bb4"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMDg4Nw==", "bodyText": "Why removing this?\nBecause it add many a long xml upon start but it has little sense.", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r439830887", "createdAt": "2020-06-14T13:37:32Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/common/Log4jConfig.java", "diffHunk": "@@ -179,10 +179,6 @@ private static void reconfig() throws IOException {\n         strSub = new StrSubstitutor(new Interpolator(properties));\n         newXmlConfTemplate = strSub.replace(newXmlConfTemplate);\n \n-        System.out.println(\"=====\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e54bfb0cb65d611facb7ee3dfe2bcdd36905bb4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMDkwNQ==", "bodyText": "Why removing this?", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r439830905", "createdAt": "2020-06-14T13:37:39Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/PaloFe.java", "diffHunk": "@@ -73,7 +73,6 @@ public static void start(String dorisHomeDir, String pidDir, String[] args) {\n         }\n \n         CommandLineOptions cmdLineOpts = parseArgs(args);\n-        System.out.println(cmdLineOpts.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e54bfb0cb65d611facb7ee3dfe2bcdd36905bb4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMTMyMw==", "bodyText": "Add unit test for this class", "url": "https://github.com/apache/incubator-doris/pull/3744#discussion_r439831323", "createdAt": "2020-06-14T13:42:34Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/QueryDetailQueue.java", "diffHunk": "@@ -0,0 +1,71 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.qe;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.doris.qe.QueryDetail;\n+\n+// Queue of QueryDetail.\n+// It's used to collect queries for monitor.\n+// The default copacity is 10000.\n+public class QueryDetailQueue {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e54bfb0cb65d611facb7ee3dfe2bcdd36905bb4"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0acd0b7b0eb4db469d0c49c1a07d5f28e49afa8", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/e0acd0b7b0eb4db469d0c49c1a07d5f28e49afa8", "committedDate": "2020-06-15T09:31:49Z", "message": "[Feature] Add QueryDetail to store query statistics.\n1. Store the query statistics in memory.\n2. Supporting RESTFUL interface to get the statistics."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9500aac7a8d5a79e4f239054d0a35f8dc38d40df", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/9500aac7a8d5a79e4f239054d0a35f8dc38d40df", "committedDate": "2020-06-15T09:31:50Z", "message": "Fix unit bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bbd061116c91b45ea0ea79dbfe7770062fe3e1f", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/4bbd061116c91b45ea0ea79dbfe7770062fe3e1f", "committedDate": "2020-06-15T09:31:50Z", "message": "Fix the bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e368f50c699601f3fab3c0c96e64da3f64f5d3e", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/0e368f50c699601f3fab3c0c96e64da3f64f5d3e", "committedDate": "2020-06-15T09:31:50Z", "message": "Fix some metrics interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16668cd2838cd1507d3beaa10649730eb64a48c7", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/16668cd2838cd1507d3beaa10649730eb64a48c7", "committedDate": "2020-06-15T09:31:50Z", "message": "Fix bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65dd79dde3570006933790f059782a96c3df115e", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/65dd79dde3570006933790f059782a96c3df115e", "committedDate": "2020-06-15T09:31:50Z", "message": "Add docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a93a0a52147020246e2bd5d518ffc02134a17934", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/a93a0a52147020246e2bd5d518ffc02134a17934", "committedDate": "2020-06-15T09:31:50Z", "message": "Add some docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "393d20ddbfc572f632721ddbb1d4dce4ea74fee4", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/393d20ddbfc572f632721ddbb1d4dce4ea74fee4", "committedDate": "2020-06-15T09:31:50Z", "message": "Add unit test for QueryDetailQueue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNDg1MTUy", "url": "https://github.com/apache/incubator-doris/pull/3744#pullrequestreview-430485152", "createdAt": "2020-06-15T09:45:23Z", "commit": {"oid": "393d20ddbfc572f632721ddbb1d4dce4ea74fee4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2415, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}