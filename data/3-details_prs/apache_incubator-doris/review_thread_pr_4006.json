{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNTQyMjM1", "number": 4006, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNTo0NjoyMlrOELeWhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMjowMDo0OVrOEUcbvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDY3MDc5OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNTo0NjoyMlrOGtDLtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDo1NzoyMFrOGta8tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MTI1NA==", "bodyText": "Why skipping the base index?\nIf there is no rollup index, the entire check will be skipped.", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r449891254", "createdAt": "2020-07-05T15:46:22Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -516,25 +537,22 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n         }\n         Map<Long, List<Column>> indexIdToSchema = table.getIndexIdToSchema();\n         for (MaterializedIndex index : partition.getMaterializedIndices(MaterializedIndex.IndexExtState.VISIBLE)) {\n+            if (table.getBaseIndexId() == index.getId()) {\n+                continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5dcece74379ed808ac4083a9612e0e684c30e6b"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIyMjg1MQ==", "bodyText": "I find here double check, because base schema is equal to  table schema? pre code has check table schema column 479 ~ 537", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450222851", "createdAt": "2020-07-06T13:32:57Z", "author": {"login": "caiconghui"}, "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -516,25 +537,22 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n         }\n         Map<Long, List<Column>> indexIdToSchema = table.getIndexIdToSchema();\n         for (MaterializedIndex index : partition.getMaterializedIndices(MaterializedIndex.IndexExtState.VISIBLE)) {\n+            if (table.getBaseIndexId() == index.getId()) {\n+                continue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MTI1NA=="}, "originalCommit": {"oid": "b5dcece74379ed808ac4083a9612e0e684c30e6b"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI4MDYyOQ==", "bodyText": "Oh I see.", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450280629", "createdAt": "2020-07-06T14:57:20Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -516,25 +537,22 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n         }\n         Map<Long, List<Column>> indexIdToSchema = table.getIndexIdToSchema();\n         for (MaterializedIndex index : partition.getMaterializedIndices(MaterializedIndex.IndexExtState.VISIBLE)) {\n+            if (table.getBaseIndexId() == index.getId()) {\n+                continue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MTI1NA=="}, "originalCommit": {"oid": "b5dcece74379ed808ac4083a9612e0e684c30e6b"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDY3NDAxOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/qe/SessionVariable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNTo1MDo0OFrOGtDNRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNTo1MDo0OFrOGtDNRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MTY1NA==", "bodyText": "Is it better be a FE's config instead of a session variable?\nI think this should be a system-level restriction to prevent users from writing too many conditions, resulting in a reduction in the efficiency of reading and writing the underlying data in storage system.", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r449891654", "createdAt": "2020-07-05T15:50:48Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/SessionVariable.java", "diffHunk": "@@ -248,6 +249,8 @@\n     private int maxScanKeyNum = -1;\n     @VariableMgr.VarAttr(name = MAX_PUSHDOWN_CONDITIONS_PER_COLUMN)\n     private int maxPushdownConditionsPerColumn = -1;\n+    @VariableMgr.VarAttr(name = MAX_ALLOWED_IN_ELEMENT_NUM_OF_DELETE)\n+    private int maxAllowedInElementNumOfDelete = 1024;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5dcece74379ed808ac4083a9612e0e684c30e6b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDY3ODgzOnYy", "diffSide": "RIGHT", "path": "be/src/olap/delete_handler.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNTo1Njo0M1rOGtDPhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNTo1Njo0M1rOGtDPhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MjIyOA==", "bodyText": "This log may be very long. the number of conditions and column name is enough.", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r449892228", "createdAt": "2020-07-05T15:56:43Z", "author": {"login": "morningman"}, "path": "be/src/olap/delete_handler.cpp", "diffHunk": "@@ -66,9 +67,22 @@ OLAPStatus DeleteConditionHandler::generate_delete_predicate(\n \n     // \u5b58\u50a8\u5220\u9664\u6761\u4ef6\n     for (const TCondition& condition : conditions) {\n-        string condition_str = construct_sub_predicates(condition);\n-        del_pred->add_sub_predicates(condition_str);\n-        LOG(INFO) << \"store one sub-delete condition. condition=\" << condition_str;\n+        if (condition.condition_values.size() > 1) {\n+            InPredicatePB* in_pred = del_pred->add_in_predicates();\n+            in_pred->set_column_name(condition.column_name);\n+            bool is_not_in = condition.condition_op == \"!*=\";\n+            in_pred->set_is_not_in(is_not_in);\n+            for (const auto& condition_value : condition.condition_values) {\n+                in_pred->add_values(condition_value);\n+            }\n+            string condition_str;\n+            json2pb::ProtoMessageToJson(*in_pred, &condition_str);\n+            LOG(INFO) << \"store one sub-delete condition. condition=\" << condition_str;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5dcece74379ed808ac4083a9612e0e684c30e6b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDY4MjUwOnYy", "diffSide": "RIGHT", "path": "be/src/olap/olap_cond.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNjowMTowNVrOGtDRXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNjowMTowNVrOGtDRXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MjcwMQ==", "bodyText": "Could we defined this magic number somewhere?", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r449892701", "createdAt": "2020-07-05T16:01:05Z", "author": {"login": "morningman"}, "path": "be/src/olap/olap_cond.cpp", "diffHunk": "@@ -57,77 +57,49 @@ using doris::ColumnStatistics;\n namespace doris {\n \n static CondOp parse_op_type(const string& op) {\n-    if (op.size() > 2) {\n+    if (op.size() > 3) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5dcece74379ed808ac4083a9612e0e684c30e6b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDY5MDQ5OnYy", "diffSide": "RIGHT", "path": "be/src/olap/olap_cond.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNjoxMTo0NFrOGtDVIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNjoxMTo0NFrOGtDVIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MzY2NQ==", "bodyText": "Should this be:\nmin_value_field->cmp(stat.second) <= 0 && max_value_field->cmp(stat.first) >= 0\n?", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r449893665", "createdAt": "2020-07-05T16:11:44Z", "author": {"login": "morningman"}, "path": "be/src/olap/olap_cond.cpp", "diffHunk": "@@ -378,20 +347,31 @@ int Cond::del_eval(const std::pair<WrapperField*, WrapperField*>& stat) const {\n         return ret;\n     }\n     case OP_IN: {\n-        FieldSet::const_iterator it = operand_set.begin();\n-        for (; it != operand_set.end(); ++it) {\n-            if ((*it)->cmp(stat.first) >= 0\n-                && (*it)->cmp(stat.second) <= 0) {\n-                if (stat.first->cmp(stat.second) == 0) {\n-                    ret = DEL_SATISFIED;\n-                } else {\n-                    ret = DEL_PARTIAL_SATISFIED;\n-                }\n-                break;\n+        if (stat.first->cmp(stat.second) == 0) {\n+            if (operand_set.find(stat.first) != operand_set.end()) {\n+                ret = DEL_SATISFIED;\n+            } else {\n+                ret = DEL_NOT_SATISFIED;\n+            }\n+        } else {\n+            if ((min_value_field->cmp(stat.first) >= 0 && min_value_field->cmp(stat.second) <= 0) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5dcece74379ed808ac4083a9612e0e684c30e6b"}, "originalPosition": 214}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDY5MDgwOnYy", "diffSide": "RIGHT", "path": "be/src/olap/olap_cond.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNjoxMjoxN1rOGtDVTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNjoxMjoxN1rOGtDVTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MzcxMA==", "bodyText": "Should this be:\nmin_value_field->cmp(stat.second) <= 0 && max_value_field->cmp(stat.first) >= 0\n?", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r449893710", "createdAt": "2020-07-05T16:12:17Z", "author": {"login": "morningman"}, "path": "be/src/olap/olap_cond.cpp", "diffHunk": "@@ -262,28 +242,17 @@ bool Cond::eval(const std::pair<WrapperField*, WrapperField*>& statistic) const\n         return operand_field->cmp(statistic.second) <= 0;\n     }\n     case OP_IN: {\n-        FieldSet::const_iterator it = operand_set.begin();\n-        for (; it != operand_set.end(); ++it) {\n-            if ((*it)->cmp(statistic.first) >= 0 \n-                    && (*it)->cmp(statistic.second) <= 0) {\n-                return true;\n-            }\n-        }\n-        break;\n+        return (min_value_field->cmp(statistic.first) >= 0 && min_value_field->cmp(statistic.second) <= 0) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5dcece74379ed808ac4083a9612e0e684c30e6b"}, "originalPosition": 169}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDY5MjI5OnYy", "diffSide": "RIGHT", "path": "be/src/olap/olap_cond.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNjoxNDozOFrOGtDWCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNjoxNDozOFrOGtDWCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5Mzg5Nw==", "bodyText": "Normally, the invalid OP should be at the beginning(-1) or at last of the enum.\nI am not sure if we persist the order of CondOp in storage. If not, I think its better to move the OP_NULL to the beginning and set it as -1.", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r449893897", "createdAt": "2020-07-05T16:14:38Z", "author": {"login": "morningman"}, "path": "be/src/olap/olap_cond.h", "diffHunk": "@@ -46,7 +46,8 @@ enum CondOp {\n     OP_GE = 5,      // greater or equal\n     OP_IN = 6,      // IN\n     OP_IS = 7,      // is null or not null\n-    OP_NULL = 8    // invalid OP\n+    OP_NULL = 8,     // invalid OP\n+    OP_NOT_IN = 9    // not in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5dcece74379ed808ac4083a9612e0e684c30e6b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTUwNTIzOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNTo1NzozNFrOGtwHTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjo1MTozOFrOGtxR9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYyNzQwNw==", "bodyText": "the last loop is \u201c i == inPredicate.getInElementNum()\u201d, should \" i + 1 != inPredicate.getInElementNum()\" modify \"i != inPredicate.getInElementNum()\"?", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450627407", "createdAt": "2020-07-07T05:57:34Z", "author": {"login": "wutiangan"}, "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -569,6 +587,19 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n                     sb.append(\" IS NULL\");\n                 }\n                 deleteConditions.add(sb.toString());\n+            } else if (condition instanceof InPredicate) {\n+                InPredicate inPredicate = (InPredicate) condition;\n+                SlotRef slotRef = (SlotRef) inPredicate.getChild(0);\n+                String columnName = slotRef.getColumnName();\n+                StringBuilder strBuilder = new StringBuilder();\n+                String notStr = inPredicate.isNotIn() ? \"NOT \" : \"\";\n+                strBuilder.append(columnName).append(\" \" + notStr + \"IN (\");\n+                for (int i = 1; i <= inPredicate.getInElementNum(); ++i) {\n+                    strBuilder.append(inPredicate.getChild(i).toSql());\n+                    strBuilder.append((i + 1 != inPredicate.getInElementNum()) ? \", \" : \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "105777771afca6e9ae09974f2520bf33339d31ad"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0NjUxOQ==", "bodyText": "oh\uff0c my bad\uff0cthanks\uff0cI will fix it", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450646519", "createdAt": "2020-07-07T06:51:38Z", "author": {"login": "caiconghui"}, "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -569,6 +587,19 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n                     sb.append(\" IS NULL\");\n                 }\n                 deleteConditions.add(sb.toString());\n+            } else if (condition instanceof InPredicate) {\n+                InPredicate inPredicate = (InPredicate) condition;\n+                SlotRef slotRef = (SlotRef) inPredicate.getChild(0);\n+                String columnName = slotRef.getColumnName();\n+                StringBuilder strBuilder = new StringBuilder();\n+                String notStr = inPredicate.isNotIn() ? \"NOT \" : \"\";\n+                strBuilder.append(columnName).append(\" \" + notStr + \"IN (\");\n+                for (int i = 1; i <= inPredicate.getInElementNum(); ++i) {\n+                    strBuilder.append(inPredicate.getChild(i).toSql());\n+                    strBuilder.append((i + 1 != inPredicate.getInElementNum()) ? \", \" : \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYyNzQwNw=="}, "originalCommit": {"oid": "105777771afca6e9ae09974f2520bf33339d31ad"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTUxMTU1OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjowMTowMFrOGtwLRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjozMTowNFrOGtwzbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYyODQyMQ==", "bodyText": "can slotRef be the second child of binaryPreidicate?", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450628421", "createdAt": "2020-07-07T06:01:00Z", "author": {"login": "wutiangan"}, "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -450,7 +451,22 @@ public DeleteJob getDeleteJob(long transactionId) {\n         return idToDeleteJob.get(transactionId);\n     }\n \n-    private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate> conditions, List<String> deleteConditions, boolean preCheck)\n+    private SlotRef getSlotRef(Predicate condition) {\n+        SlotRef slotRef = null;\n+        if (condition instanceof BinaryPredicate) {\n+            BinaryPredicate binaryPredicate = (BinaryPredicate) condition;\n+            slotRef = (SlotRef) binaryPredicate.getChild(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "105777771afca6e9ae09974f2520bf33339d31ad"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzODcwMA==", "bodyText": "not allowed", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450638700", "createdAt": "2020-07-07T06:31:04Z", "author": {"login": "caiconghui"}, "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -450,7 +451,22 @@ public DeleteJob getDeleteJob(long transactionId) {\n         return idToDeleteJob.get(transactionId);\n     }\n \n-    private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate> conditions, List<String> deleteConditions, boolean preCheck)\n+    private SlotRef getSlotRef(Predicate condition) {\n+        SlotRef slotRef = null;\n+        if (condition instanceof BinaryPredicate) {\n+            BinaryPredicate binaryPredicate = (BinaryPredicate) condition;\n+            slotRef = (SlotRef) binaryPredicate.getChild(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYyODQyMQ=="}, "originalCommit": {"oid": "105777771afca6e9ae09974f2520bf33339d31ad"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTUzNTU1OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjoxMjo1MFrOGtwZzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjoyNjo0NlrOGtws2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzMjE0MQ==", "bodyText": "what does the for loop do? LiteralExpr.create has no return value?", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450632141", "createdAt": "2020-07-07T06:12:50Z", "author": {"login": "wutiangan"}, "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -507,7 +516,19 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n                     LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n                 } catch (AnalysisException e) {\n                     // ErrorReport.reportDdlException(ErrorCode.ERR_INVALID_VALUE, value);\n-                    throw new DdlException(\"Invalid column value[\" + value + \"]\");\n+                    throw new DdlException(\"Invalid column value[\" + value + \"] for column \" + columnName);\n+                }\n+            } else if (condition instanceof InPredicate) {\n+                String value = null;\n+                try {\n+                    InPredicate inPredicate = (InPredicate) condition;\n+                    for (int i = 1; i <= inPredicate.getInElementNum(); i++) {\n+                        value = ((LiteralExpr) inPredicate.getChild(i)).getStringValue();\n+                        LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "105777771afca6e9ae09974f2520bf33339d31ad"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzNzAxNg==", "bodyText": "check valid or throw exception", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450637016", "createdAt": "2020-07-07T06:26:46Z", "author": {"login": "caiconghui"}, "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -507,7 +516,19 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n                     LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n                 } catch (AnalysisException e) {\n                     // ErrorReport.reportDdlException(ErrorCode.ERR_INVALID_VALUE, value);\n-                    throw new DdlException(\"Invalid column value[\" + value + \"]\");\n+                    throw new DdlException(\"Invalid column value[\" + value + \"] for column \" + columnName);\n+                }\n+            } else if (condition instanceof InPredicate) {\n+                String value = null;\n+                try {\n+                    InPredicate inPredicate = (InPredicate) condition;\n+                    for (int i = 1; i <= inPredicate.getInElementNum(); i++) {\n+                        value = ((LiteralExpr) inPredicate.getChild(i)).getStringValue();\n+                        LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzMjE0MQ=="}, "originalCommit": {"oid": "105777771afca6e9ae09974f2520bf33339d31ad"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjM4MjcxOnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/DeleteStmt.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzo1ODo0NVrOG45xbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzo1ODo0NVrOG45xbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxOTk4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                throw new AnalysisException(\"Right expr of binary predicate should be value\");\n          \n          \n            \n                                throw new AnalysisException(\"Child of in predicate should be value\");", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462319981", "createdAt": "2020-07-29T13:58:45Z", "author": {"login": "morningman"}, "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/DeleteStmt.java", "diffHunk": "@@ -119,11 +120,29 @@ private void analyzePredicate(Expr predicate) throws AnalysisException {\n             IsNullPredicate isNullPredicate = (IsNullPredicate) predicate;\n             Expr leftExpr = isNullPredicate.getChild(0);\n             if (!(leftExpr instanceof SlotRef)) {\n-                throw new AnalysisException(\"Left expr should be column name\");\n+                throw new AnalysisException(\"Left expr of is_null predicate should be column name\");\n             }\n             deleteConditions.add(isNullPredicate);\n+        } else if (predicate instanceof InPredicate) {\n+            InPredicate inPredicate = (InPredicate) predicate;\n+            Expr leftExpr = inPredicate.getChild(0);\n+            if (!(leftExpr instanceof SlotRef)) {\n+                throw new AnalysisException(\"Left expr of in predicate should be column name\");\n+            }\n+            int inElementNum = inPredicate.getInElementNum();\n+            int maxAllowedInElementNumOfDelete = Config.max_allowed_in_element_num_of_delete;\n+            if (inElementNum > maxAllowedInElementNumOfDelete) {\n+                throw new AnalysisException(\"Element num of in predicate should not be more than \" + maxAllowedInElementNumOfDelete);\n+            }\n+            for (int i = 1; i <= inPredicate.getInElementNum(); i++) {\n+                Expr expr = inPredicate.getChild(i);\n+                if (!(expr instanceof LiteralExpr)) {\n+                    throw new AnalysisException(\"Right expr of binary predicate should be value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjM4NTMxOnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/DeleteStmt.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzo1OToyMlrOG45zEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzo1OToyMlrOG45zEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyMDQwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new AnalysisException(\"Where clause should be compound or binary predicate or is_null predicate or in predicate\");\n          \n          \n            \n                        throw new AnalysisException(\"Where clause only supports compound predicate, binary predicate, is_null predicate or in predicate\");", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462320403", "createdAt": "2020-07-29T13:59:22Z", "author": {"login": "morningman"}, "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/DeleteStmt.java", "diffHunk": "@@ -119,11 +120,29 @@ private void analyzePredicate(Expr predicate) throws AnalysisException {\n             IsNullPredicate isNullPredicate = (IsNullPredicate) predicate;\n             Expr leftExpr = isNullPredicate.getChild(0);\n             if (!(leftExpr instanceof SlotRef)) {\n-                throw new AnalysisException(\"Left expr should be column name\");\n+                throw new AnalysisException(\"Left expr of is_null predicate should be column name\");\n             }\n             deleteConditions.add(isNullPredicate);\n+        } else if (predicate instanceof InPredicate) {\n+            InPredicate inPredicate = (InPredicate) predicate;\n+            Expr leftExpr = inPredicate.getChild(0);\n+            if (!(leftExpr instanceof SlotRef)) {\n+                throw new AnalysisException(\"Left expr of in predicate should be column name\");\n+            }\n+            int inElementNum = inPredicate.getInElementNum();\n+            int maxAllowedInElementNumOfDelete = Config.max_allowed_in_element_num_of_delete;\n+            if (inElementNum > maxAllowedInElementNumOfDelete) {\n+                throw new AnalysisException(\"Element num of in predicate should not be more than \" + maxAllowedInElementNumOfDelete);\n+            }\n+            for (int i = 1; i <= inPredicate.getInElementNum(); i++) {\n+                Expr expr = inPredicate.getChild(i);\n+                if (!(expr instanceof LiteralExpr)) {\n+                    throw new AnalysisException(\"Right expr of binary predicate should be value\");\n+                }\n+            }\n+            deleteConditions.add(inPredicate);\n         } else {\n-            throw new AnalysisException(\"Where clause should be compound or binary predicate\");\n+            throw new AnalysisException(\"Where clause should be compound or binary predicate or is_null predicate or in predicate\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjM5ODA4OnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/load/DeleteHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDowMjoxM1rOG457NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoxMzozNlrOG4_5Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyMjQ4NQ==", "bodyText": "Remove unused code", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462322485", "createdAt": "2020-07-29T14:02:13Z", "author": {"login": "morningman"}, "path": "fe/fe-core/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -507,7 +516,19 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n                     LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n                 } catch (AnalysisException e) {\n                     // ErrorReport.reportDdlException(ErrorCode.ERR_INVALID_VALUE, value);\n-                    throw new DdlException(\"Invalid column value[\" + value + \"]\");\n+                    throw new DdlException(\"Invalid column value[\" + value + \"] for column \" + columnName);\n+                }\n+            } else if (condition instanceof InPredicate) {\n+                String value = null;\n+                try {\n+                    InPredicate inPredicate = (InPredicate) condition;\n+                    for (int i = 1; i <= inPredicate.getInElementNum(); i++) {\n+                        value = ((LiteralExpr) inPredicate.getChild(i)).getStringValue();\n+                        LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n+                    }\n+                } catch (AnalysisException e) {\n+                    // ErrorReport.reportDdlException(ErrorCode.ERR_INVALID_VALUE, value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyMDI4Nw==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462420287", "createdAt": "2020-07-29T16:13:36Z", "author": {"login": "caiconghui"}, "path": "fe/fe-core/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -507,7 +516,19 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n                     LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n                 } catch (AnalysisException e) {\n                     // ErrorReport.reportDdlException(ErrorCode.ERR_INVALID_VALUE, value);\n-                    throw new DdlException(\"Invalid column value[\" + value + \"]\");\n+                    throw new DdlException(\"Invalid column value[\" + value + \"] for column \" + columnName);\n+                }\n+            } else if (condition instanceof InPredicate) {\n+                String value = null;\n+                try {\n+                    InPredicate inPredicate = (InPredicate) condition;\n+                    for (int i = 1; i <= inPredicate.getInElementNum(); i++) {\n+                        value = ((LiteralExpr) inPredicate.getChild(i)).getStringValue();\n+                        LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n+                    }\n+                } catch (AnalysisException e) {\n+                    // ErrorReport.reportDdlException(ErrorCode.ERR_INVALID_VALUE, value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyMjQ4NQ=="}, "originalCommit": {"oid": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjYzNzYwOnYy", "diffSide": "RIGHT", "path": "be/src/olap/olap_cond.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo1MDo1MVrOG48PWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoxNjozNlrOG5ABNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2MDQwOQ==", "bodyText": "These 2 case (OP_IN and OP_NOT_IN) looks same?", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462360409", "createdAt": "2020-07-29T14:50:51Z", "author": {"login": "morningman"}, "path": "be/src/olap/olap_cond.cpp", "diffHunk": "@@ -210,19 +192,19 @@ bool Cond::eval(const RowCursorCell& cell) const {\n     case OP_GE:\n         return operand_field->field()->compare_cell(*operand_field, cell) <= 0;\n     case OP_IN: {\n-        for (const WrapperField* field : operand_set) {\n-            if (field->field()->compare_cell(*field, cell) == 0) {\n-                return true;\n-            }\n-        }\n-        return false;\n+        WrapperField wrapperField(const_cast<Field *> (min_value_field->field()), cell);\n+        auto ret = operand_set.find(&wrapperField) != operand_set.end();\n+        wrapperField.release_field();\n+        return ret;\n+    }\n+    case OP_NOT_IN: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyMjMyNw==", "bodyText": "one is \"!=\"(line 196), the other is \"==\"(line 202)", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462422327", "createdAt": "2020-07-29T16:16:36Z", "author": {"login": "caiconghui"}, "path": "be/src/olap/olap_cond.cpp", "diffHunk": "@@ -210,19 +192,19 @@ bool Cond::eval(const RowCursorCell& cell) const {\n     case OP_GE:\n         return operand_field->field()->compare_cell(*operand_field, cell) <= 0;\n     case OP_IN: {\n-        for (const WrapperField* field : operand_set) {\n-            if (field->field()->compare_cell(*field, cell) == 0) {\n-                return true;\n-            }\n-        }\n-        return false;\n+        WrapperField wrapperField(const_cast<Field *> (min_value_field->field()), cell);\n+        auto ret = operand_set.find(&wrapperField) != operand_set.end();\n+        wrapperField.release_field();\n+        return ret;\n+    }\n+    case OP_NOT_IN: {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2MDQwOQ=="}, "originalCommit": {"oid": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjY5ODI1OnYy", "diffSide": "RIGHT", "path": "be/src/olap/olap_cond.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowMzo0OFrOG481mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoxMTowOFrOG4_y6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3MDIwMQ==", "bodyText": "I am a little confused.\nA->cmp(B) > 0 means A > B  or A < B?", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462370201", "createdAt": "2020-07-29T15:03:48Z", "author": {"login": "morningman"}, "path": "be/src/olap/olap_cond.cpp", "diffHunk": "@@ -176,6 +150,14 @@ OLAPStatus Cond::init(const TCondition& tcond, const TabletColumn& column) {\n                                  tcond.column_name.c_str(), operand.c_str(), op);\n                 return res;\n             }\n+            if (min_value_field == nullptr || f->cmp(min_value_field) > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxODY2NQ==", "bodyText": "my bad, I will fix it  A->cmp(B) > 0 means A > B", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462418665", "createdAt": "2020-07-29T16:11:08Z", "author": {"login": "caiconghui"}, "path": "be/src/olap/olap_cond.cpp", "diffHunk": "@@ -176,6 +150,14 @@ OLAPStatus Cond::init(const TCondition& tcond, const TabletColumn& column) {\n                                  tcond.column_name.c_str(), operand.c_str(), op);\n                 return res;\n             }\n+            if (min_value_field == nullptr || f->cmp(min_value_field) > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3MDIwMQ=="}, "originalCommit": {"oid": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjcxNTUxOnYy", "diffSide": "RIGHT", "path": "be/src/olap/olap_cond.h", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowNzoyNlrOG49APg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoxMjo1NlrOG4_3qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3MjkyNg==", "bodyText": "Add comment to explains these 2 new fields.", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462372926", "createdAt": "2020-07-29T15:07:26Z", "author": {"login": "morningman"}, "path": "be/src/olap/olap_cond.h", "diffHunk": "@@ -87,11 +88,13 @@ struct Cond {\n     }\n \n     CondOp op;\n-    // valid when op is not OP_IN\n+    // valid when op is not OP_IN and OP_NOT_IN\n     WrapperField* operand_field;\n-    // valid when op is OP_IN\n+    // valid when op is OP_IN or OP_NOT_IN\n     typedef std::unordered_set<const WrapperField*, FieldHash, FieldEqual> FieldSet;\n     FieldSet operand_set;\n+    WrapperField* min_value_field;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxOTg4Mw==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462419883", "createdAt": "2020-07-29T16:12:56Z", "author": {"login": "caiconghui"}, "path": "be/src/olap/olap_cond.h", "diffHunk": "@@ -87,11 +88,13 @@ struct Cond {\n     }\n \n     CondOp op;\n-    // valid when op is not OP_IN\n+    // valid when op is not OP_IN and OP_NOT_IN\n     WrapperField* operand_field;\n-    // valid when op is OP_IN\n+    // valid when op is OP_IN or OP_NOT_IN\n     typedef std::unordered_set<const WrapperField*, FieldHash, FieldEqual> FieldSet;\n     FieldSet operand_set;\n+    WrapperField* min_value_field;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3MjkyNg=="}, "originalCommit": {"oid": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NzA4ODI2OnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/common/Config.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxMzowMDoyOFrOG6d33w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxNDo1NToyMlrOG6ecrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2MDAzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @ConfField(mutable = true, masterOnly = true)\n          \n          \n            \n                @ConfField(mutable = true)\n          \n      \n    \n    \n  \n\nThis is not a \"master only\" config.", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r463960031", "createdAt": "2020-08-01T13:00:28Z", "author": {"login": "morningman"}, "path": "fe/fe-core/src/main/java/org/apache/doris/common/Config.java", "diffHunk": "@@ -1192,4 +1191,11 @@\n      */\n     @ConfField(mutable = true, masterOnly = false)\n     public static int cache_result_max_row_count = 3000;\n+    \n+    /**\n+     * Used to limit element num of InPredicate in delete statement.\n+     */\n+    @ConfField(mutable = true, masterOnly = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fc8ae429810ced14cc6c084b912749681d5d340"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2OTQ1NA==", "bodyText": "delete operation need a txn which only master can execute ?", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r463969454", "createdAt": "2020-08-01T14:55:22Z", "author": {"login": "caiconghui"}, "path": "fe/fe-core/src/main/java/org/apache/doris/common/Config.java", "diffHunk": "@@ -1192,4 +1191,11 @@\n      */\n     @ConfField(mutable = true, masterOnly = false)\n     public static int cache_result_max_row_count = 3000;\n+    \n+    /**\n+     * Used to limit element num of InPredicate in delete statement.\n+     */\n+    @ConfField(mutable = true, masterOnly = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2MDAzMQ=="}, "originalCommit": {"oid": "7fc8ae429810ced14cc6c084b912749681d5d340"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NzExNTE3OnYy", "diffSide": "RIGHT", "path": "be/src/olap/delete_handler.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxMzo0MjozNFrOG6eEvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxNDo1NDoxNVrOG6ecRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2MzMyNQ==", "bodyText": "I think it's better to check the condition.condition_op to see if this condition is InPredicate, not by the size of condition.condition_values.", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r463963325", "createdAt": "2020-08-01T13:42:34Z", "author": {"login": "morningman"}, "path": "be/src/olap/delete_handler.cpp", "diffHunk": "@@ -66,9 +67,22 @@ OLAPStatus DeleteConditionHandler::generate_delete_predicate(\n \n     // \u5b58\u50a8\u5220\u9664\u6761\u4ef6\n     for (const TCondition& condition : conditions) {\n-        string condition_str = construct_sub_predicates(condition);\n-        del_pred->add_sub_predicates(condition_str);\n-        LOG(INFO) << \"store one sub-delete condition. condition=\" << condition_str;\n+        if (condition.condition_values.size() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2777547694b5cfb78149aaf96ed4660ca3eb0bea"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2OTM0OQ==", "bodyText": "because inPredicate with one element to stored as BinaryPredicate which is more more light and efficient.", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r463969349", "createdAt": "2020-08-01T14:54:15Z", "author": {"login": "caiconghui"}, "path": "be/src/olap/delete_handler.cpp", "diffHunk": "@@ -66,9 +67,22 @@ OLAPStatus DeleteConditionHandler::generate_delete_predicate(\n \n     // \u5b58\u50a8\u5220\u9664\u6761\u4ef6\n     for (const TCondition& condition : conditions) {\n-        string condition_str = construct_sub_predicates(condition);\n-        del_pred->add_sub_predicates(condition_str);\n-        LOG(INFO) << \"store one sub-delete condition. condition=\" << condition_str;\n+        if (condition.condition_values.size() > 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2MzMyNQ=="}, "originalCommit": {"oid": "2777547694b5cfb78149aaf96ed4660ca3eb0bea"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODcyODMxOnYy", "diffSide": "RIGHT", "path": "gensrc/proto/olap_file.proto", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMjowMDo0OVrOG6p-ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNzoyMjozNFrOG6uwmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1ODM3MQ==", "bodyText": "For  protobuf, we prefer optional than required, because we maybe remove or rename column_name from InPredicatePB. Please change all required  to optional.", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r464158371", "createdAt": "2020-08-03T02:00:49Z", "author": {"login": "kangkaisen"}, "path": "gensrc/proto/olap_file.proto", "diffHunk": "@@ -181,6 +181,13 @@ enum KeysType {\n message DeletePredicatePB {\n     required int32 version = 1;\n     repeated string sub_predicates = 2;\n+    repeated InPredicatePB in_predicates = 3;\n+}\n+\n+message InPredicatePB {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2777547694b5cfb78149aaf96ed4660ca3eb0bea"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIzNjY5Ng==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r464236696", "createdAt": "2020-08-03T07:22:34Z", "author": {"login": "caiconghui"}, "path": "gensrc/proto/olap_file.proto", "diffHunk": "@@ -181,6 +181,13 @@ enum KeysType {\n message DeletePredicatePB {\n     required int32 version = 1;\n     repeated string sub_predicates = 2;\n+    repeated InPredicatePB in_predicates = 3;\n+}\n+\n+message InPredicatePB {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1ODM3MQ=="}, "originalCommit": {"oid": "2777547694b5cfb78149aaf96ed4660ca3eb0bea"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1357, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}