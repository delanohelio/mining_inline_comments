{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MDk0ODU2", "number": 3927, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMjoyMTozOFrOEHyglg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDoxNDo0N1rOEH57NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjAzMDMwOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/loadv2/etl/SparkEtlJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMjoyMTozOFrOGnW_OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMjoyMTozOFrOGnW_OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyNDI4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void initHiveConfigs(Map<String, String> hiveProperties) {\n          \n          \n            \n                private void iniSparkConfigs(Map<String, String> sparkProperties) {", "url": "https://github.com/apache/incubator-doris/pull/3927#discussion_r443924281", "createdAt": "2020-06-23T02:21:38Z", "author": {"login": "wangbo"}, "path": "fe/src/main/java/org/apache/doris/load/loadv2/etl/SparkEtlJob.java", "diffHunk": "@@ -0,0 +1,241 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.load.loadv2.etl;\n+\n+import org.apache.doris.load.loadv2.dpp.GlobalDictBuilder;\n+import org.apache.doris.load.loadv2.dpp.SparkDpp;\n+import org.apache.doris.load.loadv2.etl.EtlJobConfig.EtlColumn;\n+import org.apache.doris.load.loadv2.etl.EtlJobConfig.EtlColumnMapping;\n+import org.apache.doris.load.loadv2.etl.EtlJobConfig.EtlFileGroup;\n+import org.apache.doris.load.loadv2.etl.EtlJobConfig.EtlIndex;\n+import org.apache.doris.load.loadv2.etl.EtlJobConfig.EtlTable;\n+\n+import org.apache.commons.collections.map.MultiValueMap;\n+import org.apache.log4j.LogManager;\n+import org.apache.log4j.Logger;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.functions;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * SparkEtlJob is responsible for global dict building, data partition, data sort and data aggregation.\n+ * 1. init job config\n+ * 2. check if job has bitmap_dict function columns\n+ * 3. build global dict if step 2 is true\n+ * 4. dpp (data partition, data sort and data aggregation)\n+ */\n+public class SparkEtlJob {\n+    private static final Logger LOG = LogManager.getLogger(SparkEtlJob.class);\n+\n+    private static final String BITMAP_DICT_FUNC = \"bitmap_dict\";\n+    private static final String TO_BITMAP_FUNC = \"to_bitmap\";\n+\n+    private String jobConfigFilePath;\n+    private EtlJobConfig etlJobConfig;\n+    private Set<Long> hiveSourceTables;\n+    private Map<Long, Set<String>> tableToBitmapDictColumns;\n+    private SparkSession spark;\n+\n+    private SparkEtlJob(String jobConfigFilePath) {\n+        this.jobConfigFilePath = jobConfigFilePath;\n+        this.etlJobConfig = null;\n+        this.hiveSourceTables = Sets.newHashSet();\n+        this.tableToBitmapDictColumns = Maps.newHashMap();\n+    }\n+\n+    private void initSparkEnvironment() {\n+        spark = SparkSession.builder().enableHiveSupport().getOrCreate();\n+    }\n+\n+    private void initHiveConfigs(Map<String, String> hiveProperties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca08acbe52b32611b9c3fc21b34acbf97af1175a"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzI0NTMzOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/load/loadv2/BrokerLoadJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDoxNDo0N1rOGnishg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDoxNDo0N1rOGnishg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDExNjEwMg==", "bodyText": "Do not import static", "url": "https://github.com/apache/incubator-doris/pull/3927#discussion_r444116102", "createdAt": "2020-06-23T10:14:47Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/load/loadv2/BrokerLoadJob.java", "diffHunk": "@@ -17,6 +17,8 @@\n \n package org.apache.doris.load.loadv2;\n \n+import static org.apache.doris.common.DataQualityException.QUALITY_FAIL_MSG;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7b70b1976412ec740d113dddf20a6931e41e9c3"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1295, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}