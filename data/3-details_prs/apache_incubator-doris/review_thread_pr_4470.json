{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NjQyMzQw", "number": 4470, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNTo1MjowN1rOEdSNFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNTo1NDozOFrOEdSRPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTQyNDIwOnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/load/loadv2/SparkLauncherMonitor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNTo1MjowN1rOHIWuJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMzozMzowNFrOHIoVBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUyMjkxOA==", "bodyText": "why not just output to the outputStream? So that we don't need to buffer a log of content in memory?", "url": "https://github.com/apache/incubator-doris/pull/4470#discussion_r478522918", "createdAt": "2020-08-27T15:52:07Z", "author": {"login": "morningman"}, "path": "fe/fe-core/src/main/java/org/apache/doris/load/loadv2/SparkLauncherMonitor.java", "diffHunk": "@@ -103,7 +114,7 @@ public void run() {\n             try {\n                 outReader = new BufferedReader(new InputStreamReader(process.getInputStream()));\n                 while (!isStop && (line = outReader.readLine()) != null) {\n-                    LOG.info(\"monitor log: \" + line);\n+                    outputBuffer.append(line + '\\n');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0442ff88f7e3b168ae2d8f88afd90c29de4c03f4"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgxMTM5OA==", "bodyText": "ok. I changed it", "url": "https://github.com/apache/incubator-doris/pull/4470#discussion_r478811398", "createdAt": "2020-08-28T03:33:04Z", "author": {"login": "xy720"}, "path": "fe/fe-core/src/main/java/org/apache/doris/load/loadv2/SparkLauncherMonitor.java", "diffHunk": "@@ -103,7 +114,7 @@ public void run() {\n             try {\n                 outReader = new BufferedReader(new InputStreamReader(process.getInputStream()));\n                 while (!isStop && (line = outReader.readLine()) != null) {\n-                    LOG.info(\"monitor log: \" + line);\n+                    outputBuffer.append(line + '\\n');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUyMjkxOA=="}, "originalCommit": {"oid": "0442ff88f7e3b168ae2d8f88afd90c29de4c03f4"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTQzNDg2OnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/load/loadv2/SparkLoadJob.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNTo1NDozOFrOHIW0xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMzozMzoyOFrOHIoVdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUyNDYxMg==", "bodyText": "Are you sure the sparkLoadAppHandle is not null here?", "url": "https://github.com/apache/incubator-doris/pull/4470#discussion_r478524612", "createdAt": "2020-08-27T15:54:38Z", "author": {"login": "morningman"}, "path": "fe/fe-core/src/main/java/org/apache/doris/load/loadv2/SparkLoadJob.java", "diffHunk": "@@ -701,6 +702,20 @@ protected long getEtlStartTimestamp() {\n         return etlStartTimestamp;\n     }\n \n+    public SparkLoadAppHandle getHandle() {\n+        return sparkLoadAppHandle;\n+    }\n+\n+    public void clearSparkLauncherLog() {\n+        String logPath = sparkLoadAppHandle.getLogPath();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0442ff88f7e3b168ae2d8f88afd90c29de4c03f4"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgxMTUwOQ==", "bodyText": "Not sure. So I made a new check here.", "url": "https://github.com/apache/incubator-doris/pull/4470#discussion_r478811509", "createdAt": "2020-08-28T03:33:28Z", "author": {"login": "xy720"}, "path": "fe/fe-core/src/main/java/org/apache/doris/load/loadv2/SparkLoadJob.java", "diffHunk": "@@ -701,6 +702,20 @@ protected long getEtlStartTimestamp() {\n         return etlStartTimestamp;\n     }\n \n+    public SparkLoadAppHandle getHandle() {\n+        return sparkLoadAppHandle;\n+    }\n+\n+    public void clearSparkLauncherLog() {\n+        String logPath = sparkLoadAppHandle.getLogPath();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUyNDYxMg=="}, "originalCommit": {"oid": "0442ff88f7e3b168ae2d8f88afd90c29de4c03f4"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1038, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}